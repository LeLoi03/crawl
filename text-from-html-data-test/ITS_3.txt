Anmelden 
  Registrierung 
  Deutsch  English 
  Español 
  Português 
  Français 

     Dom 
  Najlepsze kategorie | CAREER & MONEY 
  PERSONAL GROWTH 
  POLITICS & CURRENT AFFAIRS 
  SCIENCE & TECH 
  HEALTH & FITNESS 
  LIFESTYLE 
  ENTERTAINMENT 
  BIOGRAPHIES & HISTORY 
  FICTION 
  Najlepsze historie 
  Najlepsze historie 
  Dodaj historię 
  Moje historie 

 Home 
  Augmented Intelligence and Intelligent Tutoring Systems. 19th International Conference, ITS 2023 Corfu, Greece, June 2–5, 2023 Proceedings 9783031328824, 9783031328831 

 Augmented Intelligence and Intelligent Tutoring Systems. 19th International Conference, ITS 2023 Corfu, Greece, June 2–5, 2023 Proceedings 9783031328824, 9783031328831   
   
  831    72    50MB    
  English   Pages [714]   Year 2023    
  Report DMCA / Copyright    
  DOWNLOAD FILE   
   
 Polecaj historie   

 Augmented Intelligence and Intelligent Tutoring Systems: 19th International Conference, ITS 2023, Corfu, Greece, June 2–5, 2023, Proceedings 9783031328831, 9783031328824, 3031328833  
 This book constitutes the refereed proceedings of the 19th International Conference on Augmented Intelligence and Intell  
  572    93    68MB    Read more   

 Augmented Intelligence and Intelligent Tutoring Systems: 19th International Conference, ITS 2023, Corfu, Greece, June 2–5, 2023, Proceedings (Lecture Notes in Computer Science, 13891) [1st ed. 2023] 9783031328824, 3031328825  
 This book constitutes the refereed proceedings of the 19th International Conference on Augmented Intelligence and Intell  
  501    105    50MB    Read more   

 Intelligent Tutoring Systems: 16th International Conference, ITS 2020, Athens, Greece, June 8–12, 2020, Proceedings [1st ed.] 9783030496623, 9783030496630  
 This volume constitutes the proceedings of the 16th International Conference on Intelligent Tutoring Systems, ITS 2020,  
  1,091    98    32MB    Read more   

 Architecture of Computing Systems. 36th International Conference, ARCS 2023 Athens, Greece, June 13–15, 2023 Proceedings 9783031427848, 9783031427855  
  
  352    113    17MB    Read more   

 Intelligent Tutoring Systems: 18th International Conference, ITS 2022, Bucharest, Romania, June 29 – July 1, 2022, Proceedings 9783031096808, 9783031096792, 3031096800  
 This volume constitutes the proceedings of the 18th International Conference on Intelligent Tutoring Systems, ITS 2022,  
  159    37    36MB    Read more   

 Collaborative Computing: Networking, Applications and Worksharing: 19th EAI International Conference, CollaborateCom 2023, Corfu Island, Greece, October 4–6, 2023, Proceedings [3] 3031545303, 9783031545306  
 The three-volume set LNICST 561, 562 563 constitutes the refereed post-conference proceedings of the 19th EAI Internatio  
  138    5    36MB    Read more   

 The Semantic Web. 20th International Conference, ESWC 2023 Hersonissos, Crete, Greece, May 28 – June 1, 2023 Proceedings 9783031334542, 9783031334559  
  
  347    60    39MB    Read more   

 The Semantic Web: 20th International Conference, ESWC 2023, Hersonissos, Crete, Greece, May 28–June 1, 2023, Proceedings 9783031334559, 9783031334542, 3031334558  
 This book constitutes the refereed proceedings of the 20th International Conference on The Semantic Web, ESWC 2023, held  
  429    26    65MB    Read more   

 Modeling Decisions for Artificial Intelligence. 20th International Conference, MDAI 2023 Umeå, Sweden, June 19–22, 2023 Proceedings 9783031334979, 9783031334986  
  
  527    80    9MB    Read more   

 Modeling Decisions for Artificial Intelligence: 20th International Conference, MDAI 2023, Umeå, Sweden, June 19–22, 2023, Proceedings 9783031334986, 9783031334979, 3031334981  
  
  502    55    24MB    Read more   

 Author / Uploaded 
  Claude Frasson 
  Phivos Mylonas 
  Christos Troussas 

 Table of contents :  
  Preface  
  Organization  
  Invited Talks  
  Personalization of Gamification in Education: Where Augmented Intelligence Meets Playfulness  
  Designing Immersive Information Systems in the ERA of Artificial Intelligence  
  Contents  
  Augmented Intelligence in Tutoring Systems  
  Language Proficiency Enhanced Knowledge Tracing  
  1 Introduction  
  2 Related Works  
  2.1 Deep Learning-Based KT  
  2.2 Students’ LP and Academic Performance  
  2.3 Elo Rating System  
  3 Methodology  
  3.1 Language Proficiency-Enhanced Knowledge Tracing  
  3.2 Dataset  
  3.3 Baseline KT Models  
  3.4 Experimental Settings  
  3.5 Correlation of LP and Word Problem Performance  
  4 Results  
  4.1 Result of the Correlation Analysis Between Students’ LP and Their Word-Problem Performance (RQ1)  
  4.2 Experimental Results on KT Models (RQ2)  
  4.3 Results of Cold Start Experiment (RQ3)  
  5 Discussion  
  5.1 Effectiveness of LP Information on KT Task  
  5.2 Possibility as an Assistant for Educational Interventions  
  6 Conclusion  
  References  
  Recommending Mathematical Tasks Based on Reinforcement Learning and Item Response Theory  
  1 Introduction  
  2 Related Work  
  3 Background  
  4 Experiments  
  4.1 Experimental Dataset  
  4.2 Framework and Baselines  
  4.3 Difficulty Level  
  4.4 Reinforcement Learning Environment  
  4.5 Hyperparameters  
  4.6 Experiment Results  
  5 Remarks and Discussion  
  6 Conclusion  
  References  
  Automatic Execution of the Ontological Piloting Procedures  
  1 Introduction  
  2 Issues and Related Work  
  3 The Reference Model  
  3.1 The Domain Ontology  
  3.2 The Task Ontology  
  4 Results  
  4.1 The Interpretor  
  4.2 The Execution Process  
  4.3 The Simulation Environment  
  5 Conclusion  
  References  
  Method and Tools to Supporting Math Learning in Inclusive Education of Blind Students  
  1 Introduction  
  2 Related Works  
  3 Materials and Methods  
  3.1 Proposed Solution  
  3.2 Research Group  
  3.3 Platform Evaluation  
  4 Results  
  5 Discussion and Conclusions  
  References  
  Understanding the Usages and Effects of a Recommendation System in a Non-formal Learning Context  
  1 Delivering Recommendations in a Self-regulated Learning Context  
  1.1 Pedagogical Selection and Ranking of Learning Resources  
  1.2 Delivering Recommendations Based on Learner's History  
  1.3 Encouraging Curiosity by Varying the Recommendations  
  2 Evaluation Protocol  
  3 Selection of Recommendations by Learners  
  4 Effects of Recommendations on the Learning Experience  
  5 Discussion  
  5.1 System Design  
  5.2 Influence of Recommendations on the Learning Experience  
  6 Conclusion and Future Work  
  References  
  Detecting Mental Fatigue in Intelligent Tutoring Systems  
  1 Introduction  
  2 Predicting Mental Fatigue  
  3 Measuring Mental Fatigue  
  3.1 Pupil Diameter in Mental Fatigue and Workload  
  3.2 Electroencephalogram (EEG) Measures Fluctuation  
  4 Methods and Materials  
  4.1 Development of Mental Fatigue  
  4.2 Participants, Data Preprocessing and Labels  
  5 Results and Discussion  
  5.1 Pupil Size Analysis  
  5.2 Workload and Task Engagement  
  5.3 RBF SVM for Mental Fatigue Classification  
  6 Conclusion  
  References  
  An Approach for Detecting Gaming the System Behavior in Programming Problem-Solving  
  1 Introduction  
  2 Related Work  
  3 Study Design  
  3.1 ADA Cognitive Tutor  
  3.2 Data Set  
  3.3 Machine Learned Models  
  4 Results and Discussion  
  4.1 Gaming the System Behavior Detectors  
  5 Conclusion  
  References  
  An Approach to Generating Adaptive Feedback for Online Formative Assessment  
  1 Introduction  
  2 Related Work  
  3 Problem Formulation  
  3.1 Domain Modelling  
  3.2 The Student Model  
  3.3 Weakest Learning Objective Identification  
  3.4 The Chain of Weakest Learning Objectives  
  3.5 The Proposed Algorithm  
  4 Experiment  
  4.1 Simulated LO-Graphs  
  4.2 Simulated Learners  
  4.3 Results and Analysis  
  5 Conclusions and Future Work  
  References  
  How to Generate Early and Accurate Alerts of At-Risk of Failure Learners?  
  1 Introduction  
  2 Related Work  
  3 Alert Prerequisites  
  3.1 Problem Formalization  
  3.2 The Starting Time Point ts  
  3.3 Alert Rule Ri  
  3.4 Evaluation of Generated Alerts  
  4 Alert Generation Algorithm  
  5 Case Study  
  5.1 Context Description  
  5.2 EWS Description  
  6 Experiments and Results  
  6.1 Identification of the Starting Time Point ts  
  6.2 Application of Alert Rules Starting from ts  
  6.3 Discussion  
  7 Conclusion  
  References  
  Detecting Interlingual Errors: The Case of Prepositions  
  1 Introduction  
  2 Related Work  
  3 Data Collection  
  3.1 Validation Study  
  3.2 Annotation Crowdsourcing  
  4 Methods  
  5 Evaluation  
  5.1 Procedure  
  5.2 Results  
  6 Conclusions  
  References  
  Automated Extraction of Domain Models from Textbook Indexes for Developing Intelligent Tutoring Systems  
  1 Introduction  
  2 Related Work  
  2.1 Domain Modeling  
  2.2 String Matching Algorithms and Pretrained Transformers  
  3 Dataset  
  3.1 Sample of Textbooks and Index Terms  
  3.2 Data Annotation  
  4 Approach  
  4.1 Consensus Voting with Perfect String Matching  
  4.2 Majority Voting with Perfect String Matching  
  4.3 Majority Voting with Approximate String Matching  
  4.4 Grouping Similar Terms Together  
  5 Results and Evaluation  
  6 Discussion and Future Work  
  References  
  Teaching Cardiovascular Physiology with a Minigame-Based ITS  
  1 Introduction  
  2 Methodology  
  3 Learning the Physiology of the Lung  
  4 Learning the Anatomy of the Heart  
  5 Cardiac Arrhythmia: An Applied Clinical Game  
  6 Conclusions and Future Work  
  References  
  Expert-Centered Design Recommendations to Promote Engagement in Authoring Activities of Adaptive Learning Technologies  
  1 Introduction  
  2 Brief State of the Art of Authoring Tools  
  3 Presentation of Two Adaptive Learning Technology Projects  
  3.1 The Deteriorating Patient Application (DPA)  
  3.2 ADAptive COmpanion for Museum and Cultural Heritage Sites (ADACO)  
  3.3 DPA and ADACO in the Context of Its and Adaptive Learning Technologies Research  
  4 Characteristics of Domain Experts  
  5 Design Recommendations for Expert-Centered Design of Authoring Tools  
  5.1 Keeping Cognitive Load Under Control  
  5.2 Making Usage Simple and Obvious  
  5.3 Visualizing the Process  
  5.4 Facilitating Recollection  
  5.5 Facilitating External Sharing  
  6 Discussions and Conclusion  
  References  
  Towards a Chatbot-Based Learning Object Recommendation: A Comparative Experiment  
  1 Introduction  
  2 Theoretical Background  
  2.1 Adaptive E-Learning Environments  
  2.2 Recommendation Through Chatbot in E-Learning  
  3 Methodology  
  3.1 Experimental Setup  
  3.2 Research Participants  
  3.3 Procedure  
  4 Results and Discussion  
  4.1 Recommendations Based on the Learners’ Knowledge Level  
  4.2 Recommendations Based on the Learning Style  
  5 Conclusion  
  References  
  Development of a Conversational Agent for Tutoring Nursing Students to Interact with Patients  
  1 Introduction  
  2 Related Work  
  2.1 Intelligent Tutoring Systems  
  2.2 Chatbots  
  2.3 Serious Games  
  3 Development  
  3.1 System Design  
  3.2 Case Acquisition  
  3.3 Story Generation  
  3.4 Fallback Mechanism and State Tracking  
  3.5 Data Augmentation  
  4 Evaluation  
  4.1 Implementation  
  4.2 NLU  
  4.3 Usability Evaluation  
  5 Future Work  
  References  
  Integrating an Ontological Reference Model of Piloting Procedures in ACT-R Cognitive Architecture to Simulate Piloting Tasks  
  1 Introduction  
  2 The Ontological Reference Model  
  3 ACT-R Cognitive Agent Modeling for Piloting Tasks  
  4 Management and Execution of Tasks by the Cognitive Agent  
  5 Methodology, Results and Model Validation  
  5.1 Methodology  
  5.2 Results and Model Validation  
  6 Discussion and Open Problems  
  7 Conclusion  
  References  
  Generating Pedagogical Questions to Help Students Learn  
  1 Introduction  
  2 Related Works  
  2.1 Automated Tutors in Software Engineering Education  
  2.2 Scaffolding in Tutoring Systems  
  2.3 Question Generation  
  3 Generating Pedagogical Questions  
  3.1 Thought Process Formalization  
  3.2 Kinds of Pedagogical Questions  
  3.3 Generating Question and Answer Formulations  
  3.4 Generating Sequences of Questions  
  4 Evaluation  
  5 Conclusion  
  References  
  Attention Assessment of Aircraft Pilots Using Eye Tracking  
  1 Introduction  
  2 Related Work  
  3 Experiments  
  3.1 Participants  
  3.2 Materials  
  3.3 Procedure  
  4 Attention and Eye Tracking  
  5 Analysis  
  6 Discussion and Results  
  7 Conclusion  
  References  
  KEMMRL: Knowledge Extraction Model for Morphologically Rich Languages  
  1 Introduction  
  2 Related Work  
  2.1 Methods for POS Tagging  
  2.2 Methods for Dependency Parsing  
  2.3 Methods for Knowledge Extraction and Semantic Hypergraph-Based Knowledge Representation  
  3 The KEMMRL Architecture and Core Functions  
  3.1 Knowledge Extraction  
  3.2 HRtagger  
  3.3 HRParser  
  3.4 Semantic Hypergraph-Based Knowledge Representation  
  4 Evaluation Results  
  4.1 Evaluation Results for HRtagger and HRparser  
  4.2 The Evaluation of Semantic Hypergraph Representations  
  5 Conclusion and Future Work  
  References  
  Synthesizing Didactic Explanatory Texts in Intelligent Tutoring Systems Based on the Information in Cognitive Maps  
  1 Introduction and Related Works  
  2 Method of Synthesizing Explanatory Text  
  2.1 Data Concentration and Mapping  
  2.2 Explanatory Form  
  2.3 Text Synthesis  
  3 Case Study  
  4 Results and Discussion  
  5 Conclusion  
  References  
  Using the ITS Components in Improving the Q-Learning Policy for Instructional Sequencing  
  1 Introduction  
  2 Reinforcement Learning  
  3 BKT Model  
  4 Proposed Approach  
  5 Contributions of Human Expertise to the Q-Learning Function Approximation  
  5.1 Competence Structure  
  6 Definition of the Reward  
  7 Evaluation  
  7.1 Random-Based and Expert-Based Approaches  
  7.2 Simulated Students  
  7.3 Results  
  8 Conclusion  
  References  
  Stargazing Live! Inspiring with Real Data in a Mobile Planetarium and Learning Through Conceptual Modelling  
  1 Introduction  
  2 Development of the Stargazing Live! Program  
  2.1 Planetarium Experience  
  2.2 Conceptual Modelling Lesson Activities  
  2.3 Star Properties  
  2.4 Star States Model and Fusion-Gravity Balance Model  
  3 Method  
  3.1 Planetarium Experience  
  3.2 Conceptual Modelling Lesson  
  4 Results  
  4.1 Planetarium Experience  
  4.2 Conceptual Modelling Lesson  
  5 Discussion and Conclusion  
  References  
  A GPT-Based Vocabulary Tutor  
  1 Introduction  
  2 Intelligent Vocabulary Tutors  
  3 Architecture, Functionality and Technology  
  4 Pedagogical Principles  
  5 Experimentation  
  5.1 Results  
  5.2 Analysis of the Results  
  6 Conclusions  
  References  
  ETHOSCHOOL: An Artificial Moral Agent Model for Collaborative Learning  
  1 Introduction  
  2 Methodology  
  3 Results and Discussion  
  3.1 Requirements Specification  
  3.2 Structural Model  
  4 Final Considerations  
  References  
  Toward a Smart Tool for Supporting Programming Lab Work  
  1 Introduction  
  2 Smart Lab Previous Work Survey  
  3 Software Description  
  4 Workflow  
  5 Dashboards for Insights and Support During Programming  
  5.1 Teachers' Dashboard  
  5.2 Students' Dashboard  
  5.3 Student's Final Report  
  6 Early Experiment  
  6.1 Results and Discussion  
  7 Conclusion and Future Works  
  References  
  Towards Embodied Wearable Intelligent Tutoring Systems  
  1 Introduction and Motivation  
  2 Related Work  
  3 The WearableLearning Platform and Embodied Games  
  3.1 WearableLearning Case Studies  
  4 Conclusion  
  References  
  iQUIZ!: A Collaborative Online Learning System that Promotes Growth Mindset Using Persuasive Feedback  
  1 Introduction  
  2 Related Work  
  3 Proposed Collaborative Online Learning System  
  3.1 Collaborative Learning  
  3.2 Growth Mindset Intervention  
  3.3 Adaptation of Growth Mindset  
  4 Conclusion and Future Work  
  References  
  Helping Teachers to Analyze Big Sets of Concept Maps  
  1 Introduction  
  2 Related Work  
  3 The Entropy H and the Mapping Effort ME  
  4 The System  
  5 Experimental Evaluation  
  6 Discussion and Conclusions  
  References  
  Learning Engagement and Peer Learning in MOOC: A Selective Systematic Review  
  1 Introduction  
  2 Related Works  
  2.1 Peer Learning in MOOC  
  2.2 Learning Engagement in MOOC  
  3 Methods  
  3.1 Search Strategy  
  3.2 Inclusion and Exclusion Criteria  
  3.3 Selection Process  
  4 Results  
  4.1 RQ1: What Research Methods Are Used to Quantify Learner Engagement Using Peer Learning in MOOCs?  
  4.2 RQ2: Does Peer Learning Improve Learning Outcomes in MOOCs?  
  5 Discussion and Conclusion  
  References  
  Personalized Study Guide: A Moodle Plug-in Generating Personal Learning Path for Students  
  1 Introduction  
  2 Learning Styles  
  3 Personalized Study Guide Generation  
  4 The Moodle Plugin  
  5 Evaluation Plan  
  6 Conclusion  
  References  
  Learning by Building Chatbot: A System Usability Study and Teachers’ Views About the Educational Uses of Chatbots  
  1 Introduction  
  2 Learning by Building Chatbot  
  3 Methodology  
  3.1 Participants and Procedures  
  3.2 Instruments  
  4 Results  
  5 Discussion  
  References  
  Towards Integrating Learnersourcing, Microlearning and Gamification in Moodle  
  1 Introduction  
  2 Current Trends in Learnersourcing, Microlearning and Gamification  
  3 Relevant Moodle Plugins  
  4 Conclusions and Perspectives  
  References  
  Towards a Social Learning Analysis Using Learning Management System and Learning Experience to Predict Learners’ Success  
  1 Introduction  
  2 Theoretical Background  
  2.1 Social Presence in Online Learning (Social Networks / Social Networks Analytics)  
  2.2 Learning Analytics / Social Learning Analytics  
  2.3 Learning Management System / Learning Experience Platform  
  3 Related Works  
  4 Proposed System  
  5 Conclusion  
  References  
  Explanatory Didactic Dialogue in the Intelligent Tutoring Systems Based on the Cross-Cutting Approach  
  1 Introduction  
  2 Related Works  
  3 Method  
  3.1 A Didactic Dialogue in the Context of the Cross-Cutting Approach  
  3.2 Developing a Didactic Dialogue  
  4 Case Study, Results and Conclusion  
  References  
  Estimation of Piloting Attention Level Based on the Correlation of Pupil Dilation and EEG  
  1 Introduction  
  2 Related Work  
  3 Attention and Engagement  
  4 Experiments  
  4.1 Participants  
  4.2 Materials  
  4.3 Procedure  
  5 Results and Discussion  
  6 Conclusion  
  References  
  Functional Programming of Intelligent Systems  
  1 Introduction  
  2 Intelligent systems  
  2.1 Subject Area Modeling  
  2.2 Functional Representation of the Modeling Process  
  3 Problem Solving  
  3.1 Functional Programming of Problem Solving  
  4 Conclusion  
  References  
  Model-Based Support for Collaborative Concept Mapping in Open-ended Domains  
  1 Introduction  
  2 Cognitive Architecture and ACT-R  
  3 Cognitive Modeling of Concept Mapping  
  3.1 Cognitive Modeling for Individual Concept Mapping  
  3.2 Cognitive Modeling for Collaborative Concept Mapping  
  4 Model-Based Support for Concept Mapping  
  4.1 Collaborative Concept Mapping Based on a Cognitive Model of the Learner  
  4.2 Cognitive Model for Connecting Learners via Collaborative Concept Mapping  
  5 Summary and Future Studies  
  References  
  Augmented Intelligence in Healthcare Informatics  
  CPR Emergency Assistance Through Mixed Reality Communication  
  1 Introduction  
  2 Related Work  
  2.1 Extended Reality for First Aid Assistance  
  3 Designing Mixed Reality Communication for First Aid Assistance  
  3.1 Augmented Views  
  3.2 Interaction  
  4 Research Study  
  4.1 Study Design  
  4.2 Results and Discussion  
  4.3 Limitation  
  5 Conclusion  
  References  
  The Relative Importance of Cognitive and Behavioral Engagement to Task Performance in Self-regulated Learning with an Intelligent Tutoring System  
  1 Introduction  
  2 Theoretical Framework  
  3 Methods  
  3.1 Participants  
  3.2 Learning Contexts and Task  
  3.3 Procedure  
  3.4 Measurements and Diagnostic Performance  
  3.5 Data Analysis  
  4 Results  
  5 Discussions and Conclusions  
  References  
  Emotional Impact of Cognitive Priming on Alzheimer’s Disease  
  1 Introduction  
  2 Related Work  
  2.1 Non-pharmacological Treatment for Alzheimer’s Disease  
  2.2 Cognitive Priming  
  3 Methodology  
  4 Experiments  
  5 Results and Discussion  
  6 Conclusion  
  References  
  Combining XR and AI for Integrating the Best Pedagogical Approach to Providing Feedback in Surgical Medical Distance Education  
  1 Introduction  
  2 Background/Purpose  
  3 Materials/Method  
  4 Practical Implications  
  4.1 How Will the AI Determine a Failure or Successful Event?  
  4.2 AI Integration into the XR Application  
  4.3 AI-Human Interfaces or Educational Games’ Best Pedagogical Practices  
  4.4 A Pedagogical Approach to Errors in a Simulated Environment  
  4.5 Multi-device Considerations When Designing/Developing the App  
  4.6 Data on Decisions and Actions Source  
  4.7 Used AI Methodology/Realized Experimentation in Neurosurgery  
  4.8 Learning Experiences in Healthcare Return on Investment (ROI) for Education – Measure  
  5 Conclusion  
  Appendices  
  References  
  Adversarial Learning for Improved Patient Representations  
  1 Introduction  
  1.1 Need for Patient Representation  
  1.2 Past Work  
  2 Methods  
  2.1 Data  
  2.2 Preprocessing  
  2.3 Model  
  2.4 Training  
  3 Results & Discussion  
  3.1 Classification Task  
  3.2 Patient Representation  
  4 Future Work  
  5 Conclusion  
  References  
  Augmented Intelligence in Games, Serious Games and Virtual Reality  
  User-Defined Hand Gesture Interface to Improve User Experience of Learning American Sign Language  
  1 Introduction  
  2 Related Work  
  2.1 Sign Language Detection and Recognition  
  2.2 User Interfaces for User-defined Hand Gesture  
  3 System Components  
  3.1 Learning Environment  
  3.2 Whack-a-Mole Game and User-Defined Interface  
  4 Experiments  
  5 Result Analysis  
  6 Discussion  
  6.1 Limitations  
  7 Conclusion  
  References  
  Distraction Detection and Monitoring Using Eye Tracking in Virtual Reality  
  1 Introduction  
  1.1 Distraction and Intelligent Tutoring Systems  
  1.2 Virtual Reality  
  1.3 Eye Tracking  
  1.4 Relaxation and Attention Restoration  
  2 Experimentation  
  2.1 Hardware  
  2.2 Experiment  
  3 Analysis and Results  
  3.1 Feature Extraction  
  3.2 Eye Tracking Model for Detecting Distraction  
  3.3 Investigation of Dataset Creation Parameters  
  3.4 Improvement of Participants’ Attention  
  4 Discussion  
  5 Conclusion and Future Works  
  6 Limitations  
  References  
  Neural Networks and Data Mining  
  Using Feature Interaction for Mining Learners' Hidden Information in MOOC Dropout Prediction  
  1 Introduction  
  2 Related Work  
  3 Methodology  
  3.1 Datasets  
  3.2 Feature Engineering  
  3.3 Model  
  4 Experiments and Result  
  4.1 Parameter Setting  
  4.2 Comparison Methods and Implementation Details  
  4.3 Result  
  5 Conclusion  
  References  
  On an Integrated Assessment for the Students Within an Academic Consortium  
  1 Introduction  
  2 Literature Review  
  3 Model Description  
  3.1 Item Collection (A-IC)  
  3.2 Test Generation (A-TG)  
  4 Results and Discussions  
  5 Conclusions  
  References  
  An Approach to Automatic Flight Deviation Detection  
  1 Introduction  
  2 Related Work  
  3 Methods  
  3.1 Ontological Reference Model for Piloting Procedures  
  3.2 Simulator API  
  3.3 Runner  
  3.4 Deviation Model  
  4 Results and Discussion  
  4.1 Limitations  
  5 Conclusion  
  References  
  Automatic Learning of Piloting Behavior from Flight Data  
  1 Introduction  
  2 Related Work  
  3 Methodology  
  3.1 Step 1: Preprocessing  
  3.2 Step 2: Training with Recurrent Neural Networks (RNNs)  
  4 Experiments  
  4.1 Segment 6: Rotation  
  4.2 Segment 7: Lift Off to Climb  
  4.3 Implementation  
  5 Results  
  6 Conclusion and Future Work  
  References  
  Towards Student Behaviour Simulation: A Decision Transformer Based Approach  
  1 Introduction  
  2 Related Work  
  2.1 Student Modelling  
  2.2 Knowledge Tracing  
  2.3 Transformers  
  3 Method  
  3.1 Architecture  
  3.2 Dataset  
  3.3 Trajectory Representation  
  3.4 Experiments  
  4 Result and Discussions  
  5 Conclusion  
  References  
  Augmented Intelligence and Metaverse  
  Mixed Reality Agents as Language Learning Tutors  
  1 Introduction  
  2 Related Work  
  3 Mixed Reality Language Tutor  
  4 Evaluation in a Language Learning Use Case  
  4.1 Study Setup  
  4.2 Results  
  5 Discussion  
  6 Conclusion  
  References  
  Metaverse and Virtual Environment to Improve Attention Deficit Hyperactivity Disorder (ADHD) Students’ Learning  
  1 Introduction  
  2 Related Work  
  2.1 Attention Deficit and Hyperactivity Disorder  
  2.2 The Metaverse in Education  
  2.3 Metaverse Features in Education  
  2.4 Metaverse’s Educational Challenges  
  3 Study Hypothesis and Objectives  
  3.1 Gamification and Education  
  3.2 Learning 3D Application Software and Virtual Environment  
  4 Results/Discussion  
  5 Conclusion  
  References  
  Security, Privacy and Ethics in Augmented Intelligence  
  Culture of Ethics in Adopting Learning Analytics  
  1 Introduction and Background  
  1.1 Ethics and Learning Analytics  
  1.2 Research Questions  
  2 Method  
  2.1 Research Design  
  3 Results  
  3.1 Ethical Issues in Learning Analytics (RQ1)  
  3.2 Synopsis of Findings  
  3.3 Stakeholders’ Perspectives on the Ethics of Adopting LA (RQ 2)  
  4 Discussion and Conclusion  
  References  
  Promoting Ethical Uses in Artificial Intelligence Applied to Education  
  1 Introduction  
  2 The Power of Artificial Intelligence (AI)  
  3 Ethics in AI  
  3.1 Ethical Codes for AI  
  3.2 FATE in AI Applied to Education  
  4 Social Biases  
  5 Conclusions and Discussion  
  References  
  Applied Natural Language Processing  
  Improving Collaboration via Automated Intelligent Nudges  
  1 Introduction  
  2 Related Work  
  3 System Implementation  
  4 Machine Learning Model  
  5 Experiments  
  5.1 Participants  
  5.2 Pair Programming Sessions and Tasks  
  5.3 Method  
  5.4 Condition Assignments and Paired t-Test Dyads  
  5.5 Study Data  
  5.6 Model Evaluation  
  5.7 Experiment Evaluation  
  6 Results  
  7 Discussion  
  8 Conclusion and Future Work  
  References  
  Preliminary Performance Assessment on Ask4Summary’s Reading Methods for Summary Generation  
  1 Introduction  
  2 Ask4Summary  
  3 Evaluation Design  
  4 Preliminary Assessment Results  
  5 Discussion and Future Works  
  References  
  Joint Topic Model with Selected Side Information for Inter-University Syllabus Analysis Focusing on the Variety of Instructional Approaches  
  1 Introduction  
  2 Related Work  
  3 Preliminaries  
  3.1 Topic Model  
  3.2 Latent Dirichlet Allocation (LDA)  
  3.3 Joint Topic Model (JTM)  
  4 Proposed Method  
  4.1 Joint Topic Model with Instructional Approaches as Side Information  
  4.2 Selection of Side Information  
  5 Experiments  
  5.1 Parameter Settings  
  5.2 Evaluation Metrics  
  6 Results  
  6.1 Selection of Side Information  
  6.2 Performance Evaluation  
  7 Conclusion  
  References  
  Plug & Play with Deep Neural Networks: Classifying Posts that Need Urgent Intervention in MOOCs  
  1 Introduction  
  2 Related Works  
  2.1 Instructor Intervention Prediction Models  
  2.2 Towards Plug & Play: Combinations in Deep Learning  
  3 Methodology  
  3.1 Dataset  
  3.2 Exploring the Dataset  
  3.3 Prediction Models  
  4 Results and Discussion  
  5 Conclusion  
  References  
  Personalized Feedback Enhanced by Natural Language Processing in Intelligent Tutoring Systems  
  1 Introduction  
  2 Related Work  
  3 Methods and Architecture  
  3.1 Natural Language Parser  
  3.2 Feedback Generator  
  3.3 Feedback Evaluator  
  4 Example of Operation  
  5 Evaluation  
  6 Conclusions  
  References  
  SC-Ques: A Sentence Completion Question Dataset for English as a Second Language Learners  
  1 Introduction  
  2 The SC-Ques Dataset  
  2.1 Data Collection  
  2.2 SC Question Categorization  
  2.3 Data Statistics  
  3 Benchmark  
  3.1 Problem Formulation  
  3.2 Benchmark Workflow  
  3.3 Experimental Setup and Details  
  3.4 Results  
  4 Related Work  
  4.1 Sentence Completion Datasets  
  4.2 Sentence Completion Solvers  
  5 Conclusion  
  References  
  Conversational Agents and Language Models that Learn from Human Dialogues to Support Design Thinking  
  1 Introduction  
  2 Background  
  2.1 Large Language Models and Conversational Agents  
  2.2 Conversational Agents and Design Thinking  
  3 Learning from Co-designers’ Dialogues  
  3.1 Extracting Information and Knowledge from Human Dialogues  
  3.2 A1: “Knowledge Modelling” Assumption  
  3.3 A2: “Extraction Task” Assumption  
  3.4 A3: “LLM-Based Facilitation” Assumption  
  3.5 A4: “Humans’ Benefit” Assumption  
  4 A Proposed Architecture for an LLM-Based AI-Facilitator  
  5 Discussion and Conclusions  
  References  
  Author Index   
 Citation preview   
  LNCS 13891  
   
  Claude Frasson Phivos Mylonas Christos Troussas (Eds.)  
   
  Augmented Intelligence and Intelligent Tutoring Systems 19th International Conference, ITS 2023 Corfu, Greece, June 2–5, 2023 Proceedings  
   
  Lecture Notes in Computer Science Founding Editors Gerhard Goos Juris Hartmanis  
   
  Editorial Board Members Elisa Bertino, Purdue University, West Lafayette, IN, USA Wen Gao, Peking University, Beijing, China Bernhard Steffen , TU Dortmund University, Dortmund, Germany Moti Yung , Columbia University, New York, NY, USA  
   
  13891  
   
  The series Lecture Notes in Computer Science (LNCS), including its subseries Lecture Notes in Artificial Intelligence (LNAI) and Lecture Notes in Bioinformatics (LNBI), has established itself as a medium for the publication of new developments in computer science and information technology research, teaching, and education. LNCS enjoys close cooperation with the computer science R & D community, the series counts many renowned academics among its volume editors and paper authors, and collaborates with prestigious societies. Its mission is to serve this international community by providing an invaluable service, mainly focused on the publication of conference and workshop proceedings and postproceedings. LNCS commenced publication in 1973.  
   
  Claude Frasson · Phivos Mylonas · Christos Troussas Editors  
   
  Augmented Intelligence and Intelligent Tutoring Systems 19th International Conference, ITS 2023 Corfu, Greece, June 2–5, 2023 Proceedings  
   
  Editors Claude Frasson University of Montreal Montreal, Canada  
   
  Phivos Mylonas University of West Attica Athens, Greece  
   
  Christos Troussas University of West Attica Athens, Greece  
   
  ISSN 0302-9743 ISSN 1611-3349 (electronic) Lecture Notes in Computer Science ISBN 978-3-031-32882-4 ISBN 978-3-031-32883-1 (eBook) https://doi.org/10.1007/978-3-031-32883-1 © The Editor(s) (if applicable) and The Author(s), under exclusive license to Springer Nature Switzerland AG 2023 This work is subject to copyright. All rights are reserved by the Publisher, whether the whole or part of the material is concerned, specifically the rights of translation, reprinting, reuse of illustrations, recitation, broadcasting, reproduction on microfilms or in any other physical way, and transmission or information storage and retrieval, electronic adaptation, computer software, or by similar or dissimilar methodology now known or hereafter developed. The use of general descriptive names, registered names, trademarks, service marks, etc. in this publication does not imply, even in the absence of a specific statement, that such names are exempt from the relevant protective laws and regulations and therefore free for general use. The publisher, the authors, and the editors are safe to assume that the advice and information in this book are believed to be true and accurate at the date of publication. Neither the publisher nor the authors or the editors give a warranty, expressed or implied, with respect to the material contained herein or for any errors or omissions that may have been made. The publisher remains neutral with regard to jurisdictional claims in published maps and institutional affiliations. This Springer imprint is published by the registered company Springer Nature Switzerland AG The registered company address is: Gewerbestrasse 11, 6330 Cham, Switzerland  
   
  Preface  
   
  The 19th International Conference on Intelligent Tutoring Systems (ITS 2023) was held in Corfu, Greece, from June 2 to June 5, 2023. This year, ITS evolved to a new concept of Artificial Intelligence which can be found in various disciplines and can serve to promote human education and well-being. This new concept is named: AUGMENTED INTELLIGENCE. Augmented Intelligence concerns any system, technique, architecture, method, or tools which can be used to enhance HUMAN intelligence, cognitive capacities, memory, or learning. Instead of trying to reproduce human behavior or recognize human traits using artificial intelligence techniques or learning analytics, Augmented Intelligence provides means to increase human cognitive potential. The conference supported the following tracks in which the concepts, mentioned above, contribute to the increase of intelligence: T1: Augmented Intelligence in Tutoring Systems. The goal of this track was to show how new techniques inspired by artificial intelligence and new methods in education can improve learning and teaching, and augment the capacity for knowledge acquisition. The track included the following topics: augmented learning strategies, distance education, learning analytics for tutoring systems, deep learning and machine learning for tutoring systems, online and distance learning, augmented learner model, emotion recognition, human machine interaction, case-based reasoning, cognitive modeling, open learning, authoring systems, cultural learning, and adaptive learning. T2: Augmented Intelligence in Healthcare Informatics. The goal of this track was to show the progress of AI tools for increasing the propagation of healthcare techniques and their efficiency. Informatics provides means to improve the prediction, analysis, and treatment of disease and control of patients over their own care. The track included the following topics: AI and telemedicine, medical image processing, and virtual systems for healthcare T3: Augmented Intelligence in Games, Serious Games, and Virtual Reality. The goal of this track was to show the progress of interactive games using augmented intelligent techniques. Intelligent games can adapt to the characteristics of the player and can be used to enhance learning, skills, memory, cognitive capacities, and strategic decisions. They can be used in various applications (education, healthcare, group management, decision support systems, and industrial control). T4: Neural Networks and Data Mining The track included the following topics: supervised machine learning, genetic algorithms, Markovian regulation, smart sensor networks, determinate regulation, games and strategies, fuzzy systems, web information processing, applications of data mining in social sciences, data-driven reasoning, deep learning and statistical methods for data mining, big data mining, algorithms for data mining, ethical data analytics, data mining for recommendation, and uncertain reasoning. T5: Augmented Intelligence and the Metaverse The track included the following topics: technology and creativity around the Metaverse, gaming and interactivity, mixed  
   
  vi  
   
  Preface  
   
  reality and the virtual world, social and digital identity, extended reality, digital art, social communication, applications of the Metaverse in Health, global Metaverse, knowledge increase with the Metaverse. T6: Security, Privacy, and Ethics in Augmented Intelligence The track included the following topics: commercial security, data privacy and security, web security, applied cryptography, authentication, identity management and biometrics, electronic payments, culture of ethics, business, and human rights, diversity and inclusion in teaching and learning, environmental ethics, machine learning and security, cloud computing and data outsourcing security, mobile payments, security in games, security of peerto-peer networks, security metrics, sustainability, language-based security, security and privacy for the Internet of Things, and socio-technical security. T7: Applied Natural Language Processing The track included the following topics: language modeling, domain ontologies, computational linguistics, cognitive semantics, text mining, translation, question answering, dialog systems, information retrieval, speech recognition and synthesis, discourse, machine translation, lexical semantics, and linguistic resources. The call for scientific papers solicited works presenting substantive new research results in using advanced computer technologies and interdisciplinary research to enable, support, and enhance human learning. The international Program Committee consisted of 57 leading members (27 senior and 30 regular) of the Intelligent Tutoring Systems community, assisted by additional external reviewers. Research papers came from 26 countries and were reviewed by three reviewers through a double-blind process. ITS 2023 retained the strict and high standards in the review process that it has established during the previous years, and which have rendered it a top-flight, rather selective, and high-quality conference. This year, from 84 submissions, 40 papers were accepted as full, and 20 were accepted as short papers. We believe that the selected full papers describe some very significant research and the short papers some very interesting new ideas. The management of the review process and the preparation of the proceedings was handled through EasyChair. Finally, we had two outstanding invited speakers in the plenary sessions: Seiji Isotani (University of Sao Paolo, Brazil) a renowned figure in the field of Gamification, Learning Technologies and STEM Education, and Panos Kourouthanassis (Ionian University, Greece) who specializes in Augmented Reality and Pervasive Computing. Both are leaders in different specialized areas of the ITS field. In addition to the contributors mentioned above, we would like to thank all the authors, the members of the Program Committees of all tracks, the external reviewers, and the Steering Committee members.  
   
  Preface  
   
  vii  
   
  We would also like to acknowledge the Institute of Intelligent Systems (IIS), which acted as the conference organizer, particularly Kitty Panourgia and her excellent team, and the Ionian University, being the hosting institution. April 2023  
   
  Claude Frasson Phivos Mylonas Christos Troussas  
   
  Organization  
   
  Conference Committee Program Chairs Claude Frasson Phivos Mylonas Christos Troussas  
   
  University of Montreal, Canada Ionian University, Greece University of West Attica, Greece  
   
  Organization Chair Kitty Panourgia  
   
  Neoanalysis, Greece  
   
  The Conference was held under the auspices of the Institute of Intelligent Systems.  
   
  Program Committee Program Chairs Claude Frasson Phivos Mylonas Christos Troussas  
   
  University of Montreal, Canada Ionian University, Greece University of West Attica, Greece  
   
  Senior Program Committee Roger Azevedo Benedict du Boulay  
   
  University of Central Florida, USA University of Sussex, UK  
   
  x  
   
  Organization  
   
  Bert Bredeweg Stefano A. Cerri Maiga Chang Mihai Dascalu Michel Desmarais Spyros Doukakis Claude Frasson Yugo Hayashi Kinshuk Amruth Kumar Vive Kumar Susanne Lajoie Noboru Matsuda Alessandro Micarelli Phivos Mylonas Riichiro Mizoguchi Roger Nkambou Elvira Popescu Demetrios Sampson Filippo Sciarrone Stefan Trausan-Matu Marco Temperini Christos Troussas Julita Vassileva Panagiotis Vlamos  
   
  University of Amsterdam, The Netherlands University of Montpellier, France Athabasca University, Canada Politehnica University of Bucharest, Romania Polytechnique Montréal, Canada Ionian University, Greece University of Montreal, Canada Ritsumeikan University, Japan University of North Texas, USA Ramapo College of New Jersey, USA Athabasca University, Canada McGill University, Canada North Carolina State University, USA Roma Tre University, Italy Ionian University, Greece Japan Institute of Science and Technology, Japan UQAM University, Canada University of Craiova, Romania University of Piraeus, Greece Universitas Mercatorum, Italy Politehnica University of Bucharest, Romania Sapienza University of Rome, Italy University of West Attica, Greece University of Saskatchewan, Canada Ionian University, Greece  
   
  Program Committee Mohammed Abdel Razek Galia Angelova Renu Balyan Hamdi Ben Abdessalem Emmanuel Blanchard Evandro Costa Chih-Yueh Chou Diego Dermeval Cyrille Desmoulins Davide Fossati Reva Freedman Ashok Goel Ella Haig  
   
  Al-Azhar University, Egypt Bulgarian Academy of Sciences, Bulgaria SUNY Old Westbury, USA University of Montreal, Canada Edu Interactive, Canada Federal University of Alagoas, Brazil Yuan Ze University, Taiwan Federal University of Alagoas, Brazil University Joseph Fourier, France Emory University, USA Northern Illinois University, USA School of Interactive Computing, Georgia, USA University of Portsmouth, UK  
   
  Organization  
   
  Seiji Isotani Mizue Kayama Charalampos Karagiannidis Fuhua Oscar Lin Mirko Marras Silvia Margarita Baldiris Navarro Tassos Mikropoulos Wolfgang Mueller Kuo-Liang Ou Valéry Psyché Ricardo Queirós Traian Rebedea Olga C. Santos Lei Shi Thepchai Supnithi Radu Vasiu Riina Vuorikari  
   
  University of Sao Paulo, Brazil Shinshu University, Japan University of Thessaly, Greece Athabasca University, Canada University of Cagliari, Italy University of Cartagena, Colombia University of Ioannina, Greece University of Education Weingarten, Germany National Hsin-Chu University of Education, Taiwan Université TELUQ, Canada Agostinho Neto University, Portugal University Politehnica of Bucharest, Romania National Distance Education University (UNED), Spain Durham University, UK NECTEC, Thailand Politehnica University of Timisoara, Romania Joint Research Centre - European Commission, Belgium  
   
  Organization Committee Organization Chair Kitty Panourgia  
   
  General Coordination / Proceedings / Program  
   
  Members Aggelos Amarandos Alexia Kakourou Eliana Vassiliou Isaak Tselepis  
   
  xi  
   
  Registration Coordination on Site Conference Publicity / Website Management Website Architect  
   
  xii  
   
  Organization  
   
  Steering Committee Chair Claude Frasson  
   
  University of Montreal, Canada  
   
  Members Stefano A. Cerri Maiga Chang Isabel Fernandez-Castro Yugo Hayashi Alan Lesgold Amruth Kumar Alessandro Micarelli Roger Nkambou Giorgos Papadourakis Elliot Soloway John Stamper Daniel Suthers Stefan Trausen-Matu Christos Troussas Beverly Woolf  
   
  University of Montpellier and CNRS, France Athabasca University, Canada University of the Basque Country, Spain Ritsumeikan University, Japan University of Pittsburgh, USA Ramapo College of New Jersey, USA Roma Tre University, Italy Université du Québec à Montréal, Canada Hellenic Mediterranean University, Greece University of Michigan, USA Carnegie Mellon University, USA University of Hawaii, USA University Politehnica of Bucharest, Romania University of West Attica, Greece University of Massachusetts, USA  
   
  Advisory Committee Members Luigia Carlucci Aiello Maria Grigoriadou Demetrios G. Sampson  
   
  University of Rome, Italy University of Athens, Greece University of Piraeus, Greece  
   
  Invited Talks  
   
  Personalization of Gamification in Education: Where Augmented Intelligence Meets Playfulness  
   
  Seiji Isotani1,2 1  
   
  2  
   
  Graduate School of Education, Harvard University, Cambridge MA 02138, USA University of Sao Paulo, Sao Carlos SP 13566-590 Brazil [email protected]   
   
  Gamification, i.e., the use of game design elements in non-game contexts, has been successfully used to design better (virtual) learning environments aiming to increase positive experiences such as motivation, engagement, satisfaction, meaningful social interactions, self-efficacy, and flow. Recent advances highlight the importance of tailoring gamification design in education to maximize its benefits to students and reduce its potential negative effects. Nevertheless, the process of adapting and personalizing gamification for educational purposes requires knowledge about gamification design and how these elements influence students’ flow state. This influence may differ according to the context (learning materials, pedagogical approaches, feedback, etc) and the individuals’ characteristics (culture, age, user type, etc). Thus, in the past 10+ years, my research group has studied the factors that influence gamification design and use artificial intelligence techniques to augment human capabilities to better personalize gamification in educational contexts, particularly for STEM (Science, Technology, Engineering, and Mathematics) learning. To discuss the personalization of gamification in education, we will first discuss some of the positive and negative effects of gamification based on recent literature reviews. Then, a series of experiments carried out by my group will be presented to show how different contextual variables (e.g., culture, educational content, time on task, students’ interests, etc.) affect the potential benefits of gamification in education, particularly in the context of Computer Science Education. Finally, using these findings, we will present a taxonomy and data-driven framework to assist teachers in making decisions to design personalized gamified experiences. Keywords: Artificial Intelligence in Education · tailored gamification · educational technology.  
   
  Designing Immersive Information Systems in the ERA of Artificial Intelligence  
   
  Panos Kourouthanassis Department of Informatics, Ionian University, Greece Abstract. Immersive information systems may shape end users’ perceptions of reality. Immersive information systems employ such information and communication technologies as augmented reality (AR), virtual reality (VR), and gamification [2]. Scholars have identified the application potential of AR/ VR in several fields that range from medical applications [4], education [5], manufacturing [1], and retail [6]. The keynote speech will discuss the design challenges of immersive information systems from both engineering/ technological and user adoption examination stances. Furthermore, the keynote speech will discuss how extant information systems design science research perspectives (e.g. information systems design theories) may be employed for capturing the design elements of immersive information systems by emphasizing on the design of AR/ mobile-AR applications [3] and, in general, AR/ VR augmented intelligence immersive systems.  
   
  References 1. Baroroh, D.K., Chu, C.H., Wang, L. Systematic literature review on augmented reality in smart manufacturing: collaboration between human and computational intelligence. J. Manuf. Syst. 61, 696–711 (2021) 2. Cavusoglu, H., Dennis, A.R., Parsons, J.:Editorial of special issue: immersive Systems, J. Manag. Inf. Syst. 36(3), 680–682. (2019) 3. Kourouthanassis, P.E., Boletsis, C., Lekakos, G.: Demystifying the design of mobile augmented reality applications. Multimedia Tools Appl. 74, 1045–1066 (2015) 4. Lungu, A.J., Swinkels, S., Claesen, L., Tu, P., Egger, J., Chen, X.: A review on the applications of virtual reality, augmented reality and mixed reality in surgical simulation: an extension to different kinds of surgery. Expert Rev. Med. Devices. 18(1), 47–62 (2021) 5. Videnovik, M., Trajkovik, V., Kiønig, L.V., Vold, T.: Increasing quality of learning experience using augmented reality educational games. Multimedia Tools Appl. 79, (23861–23885) (2020)  
   
  xviii  
   
  P. Kourouthanassis  
   
  6. Zimmermann, R., et al.: Enhancing brick-and-mortar store shopping experience with an augmented reality shopping assistant application using personalized recommendations and explainable artificial intelligence. J. Res. Interact. Mark. 17(2), 273–298 (2023)  
   
  Contents  
   
  Augmented Intelligence in Tutoring Systems Language Proficiency Enhanced Knowledge Tracing . . . . . . . . . . . . . . . . . . . . . . . Heeseok Jung, Jaesang Yoo, Yohaan Yoon, and Yeonju Jang Recommending Mathematical Tasks Based on Reinforcement Learning and Item Response Theory . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Matteo Orsoni, Alexander Pögelt, Nghia Duong-Trung, Mariagrazia Benassi, Milos Kravcik, and Martin Grüttmüller Automatic Execution of the Ontological Piloting Procedures . . . . . . . . . . . . . . . . . Marc-Antoine Courtemanche, Ange Tato, and Roger Nkambou Method and Tools to Supporting Math Learning in Inclusive Education of Blind Students . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Michał Ma´ckowski, Mateusz Kawulok, Piotr Brzoza, and Dominik Spinczyk Understanding the Usages and Effects of a Recommendation System in a Non-formal Learning Context . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Anaëlle Badier, Mathieu Lefort, and Marie Lefevre Detecting Mental Fatigue in Intelligent Tutoring Systems . . . . . . . . . . . . . . . . . . . Alyssa Hajj Assaf, Hamdi Ben Abdessalem, and Claude Frasson An Approach for Detecting Gaming the System Behavior in Programming Problem-Solving . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Hemilis Joyse Barbosa Rocha, Patricia Cabral de Azevedo Restelli Tedesco, Evandro de Barros Costa, and Julios Suruagi Rocha An Approach to Generating Adaptive Feedback for Online Formative Assessment . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Fuhua Lin and Supun De Silva  
   
  3  
   
  16  
   
  29  
   
  42  
   
  54  
   
  66  
   
  75  
   
  88  
   
  How to Generate Early and Accurate Alerts of At-Risk of Failure Learners? . . . 100 Amal Ben Soussia, Azim Roussanaly, and Anne Boyer Detecting Interlingual Errors: The Case of Prepositions . . . . . . . . . . . . . . . . . . . . . 112 Natawut Monaikul and Barbara Di Eugenio  
   
  xx  
   
  Contents  
   
  Automated Extraction of Domain Models from Textbook Indexes for Developing Intelligent Tutoring Systems . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 124 Rabin Banjade, Priti Oli, and Vasile Rus Teaching Cardiovascular Physiology with a Minigame-Based ITS . . . . . . . . . . . . 137 Reva Freedman, Lucas Edwards, Ian Sullivan, Annalise Brockmann, Dean LaBarbera, and Virginia Naples Expert-Centered Design Recommendations to Promote Engagement in Authoring Activities of Adaptive Learning Technologies . . . . . . . . . . . . . . . . . . 147 Emmanuel G. Blanchard Towards a Chatbot-Based Learning Object Recommendation: A Comparative Experiment . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 159 Wijdane Kaiss, Khalifa Mansouri, and Franck Poirier Development of a Conversational Agent for Tutoring Nursing Students to Interact with Patients . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 171 Tomasz Sosnowski, Moh’d Abuazizeh, Thomas Kirste, and Kristina Yordanova Integrating an Ontological Reference Model of Piloting Procedures in ACT-R Cognitive Architecture to Simulate Piloting Tasks . . . . . . . . . . . . . . . . . 183 Guy Carlos Tamkodjou Tchio, Marc-Antoine Courtemanche, Ange Adrienne Nyamen Tato, Roger Nkambou, and Valéry Psyché Generating Pedagogical Questions to Help Students Learn . . . . . . . . . . . . . . . . . . 195 Oleg Sychev and Marat Gumerov Attention Assessment of Aircraft Pilots Using Eye Tracking . . . . . . . . . . . . . . . . . 209 Maryam Ghaderi, Amin Bonyad Khalaj, Hamdi Ben Abdessalem, and Claude Frasson KEMMRL: Knowledge Extraction Model for Morphologically Rich Languages . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 220 Daniel Vasi´c, Branko Žitko, Ani Grubiši´c, and Angelina Gašpar Synthesizing Didactic Explanatory Texts in Intelligent Tutoring Systems Based on the Information in Cognitive Maps . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 233 Viktor Uglev and Oleg Sychev Using the ITS Components in Improving the Q-Learning Policy for Instructional Sequencing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 247 Amel Yessad  
   
  Contents  
   
  xxi  
   
  Stargazing Live! Inspiring with Real Data in a Mobile Planetarium and Learning Through Conceptual Modelling . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 257 Bert Bredeweg, Marco Kragten, Joanna Holt, Dennis Vaendel, Joris Hanse, and Steven Bloemen A GPT-Based Vocabulary Tutor . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 270 George Zografos and Lefteris Moussiades ETHOSCHOOL: An Artificial Moral Agent Model for Collaborative Learning . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 281 Paulo Roberto Córdova, Iderli Pereira de Souza Filho, Gilleanes Thorwald Araujo Guedes, and Rosa Maria Vicari Toward a Smart Tool for Supporting Programming Lab Work . . . . . . . . . . . . . . . . 290 Anis Bey and Ronan Champagnat Towards Embodied Wearable Intelligent Tutoring Systems . . . . . . . . . . . . . . . . . . 298 Injila Rasul, Francisco Castro, and Ivon Arroyo iQUIZ!: A Collaborative Online Learning System that Promotes Growth Mindset Using Persuasive Feedback . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 307 Mehnuma Tabassum Omar, Nafisul Kiron, and Julita Vassileva Helping Teachers to Analyze Big Sets of Concept Maps . . . . . . . . . . . . . . . . . . . . . 315 Michele La Barbera, Filippo Sciarrone, and Marco Temperini Learning Engagement and Peer Learning in MOOC: A Selective Systematic Review . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 324 Fatma Miladi, Daniel Lemire, and Valéry Psyché Personalized Study Guide: A Moodle Plug-in Generating Personal Learning Path for Students . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 333 Ted Krahn, Rita Kuo, and Maiga Chang Learning by Building Chatbot: A System Usability Study and Teachers’ Views About the Educational Uses of Chatbots . . . . . . . . . . . . . . . . . . . . . . . . . . . . 342 Stavros A. Nikou and Maiga Chang Towards Integrating Learnersourcing, Microlearning and Gamification in Moodle . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 352 Mariana Madalina Nastase and Elvira Popescu Towards a Social Learning Analysis Using Learning Management System and Learning Experience to Predict Learners’ Success . . . . . . . . . . . . . . . . . . . . . . 364 Hiba Gharbaoui, Khalifa Mansouri, and Franck Poirier  
   
  xxii  
   
  Contents  
   
  Explanatory Didactic Dialogue in the Intelligent Tutoring Systems Based on the Cross-Cutting Approach . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 371 Viktor Uglev Estimation of Piloting Attention Level Based on the Correlation of Pupil Dilation and EEG . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 381 Maryam Ghaderi, Hamdi Ben Abdessalem, Maxime Antoine, and Claude Frasson Functional Programming of Intelligent Systems . . . . . . . . . . . . . . . . . . . . . . . . . . . . 391 Vladymyr Meitus and Clara Simon de Blas Model-Based Support for Collaborative Concept Mapping in Open-ended Domains . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 404 Junya Morita, Masaji Kano, Shigen Shimojo, Yoshimasa Ohmoto, and Yugo Hayashi Augmented Intelligence in Healthcare Informatics CPR Emergency Assistance Through Mixed Reality Communication . . . . . . . . . 415 Manuel Rebol, Alexander Steinmaurer, Florian Gamillscheg, Krzysztof Pietroszek, Christian Gütl, Claudia Ranniger, Colton Hood, Adam Rutenberg, and Neal Sikka The Relative Importance of Cognitive and Behavioral Engagement to Task Performance in Self-regulated Learning with an Intelligent Tutoring System . . . 430 Xiaoshan Huang, Shan Li, and Susanne P. Lajoie Emotional Impact of Cognitive Priming on Alzheimer’s Disease . . . . . . . . . . . . . 442 Hamdi Ben Abdessalem and Claude Frasson Combining XR and AI for Integrating the Best Pedagogical Approach to Providing Feedback in Surgical Medical Distance Education . . . . . . . . . . . . . . 452 Yves S. Nkulu-Ily Adversarial Learning for Improved Patient Representations . . . . . . . . . . . . . . . . . . 467 Bharath Shankar and Carol Anne Hargreaves Augmented Intelligence in Games, Serious Games and Virtual Reality User-Defined Hand Gesture Interface to Improve User Experience of Learning American Sign Language . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 479 Jindi Wang, Ioannis Ivrissimtzis, Zhaoxing Li, Yunzhan Zhou, and Lei Shi  
   
  Contents  
   
  xxiii  
   
  Distraction Detection and Monitoring Using Eye Tracking in Virtual Reality . . . 491 Mahdi Zarour, Hamdi Ben Abdessalem, and Claude Frasson Neural Networks and Data Mining Using Feature Interaction for Mining Learners’ Hidden Information in MOOC Dropout Prediction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 507 Tingfeng Pan, Guang Feng, Xin Liu, and Wenyan Wu On an Integrated Assessment for the Students Within an Academic Consortium . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 518 Popescu Doru-Anastasiu, Cristea Daniela-Maria, and Bold Nicolae An Approach to Automatic Flight Deviation Detection . . . . . . . . . . . . . . . . . . . . . . 530 Massimo Pietracupa, Hamdi Ben Abdessalem, and Claude Frasson Automatic Learning of Piloting Behavior from Flight Data . . . . . . . . . . . . . . . . . . 541 Ange Tato, Roger Nkambou, and Gabrielle Tato Towards Student Behaviour Simulation: A Decision Transformer Based Approach . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 553 Zhaoxing Li, Lei Shi, Yunzhan Zhou, and Jindi Wang Augmented Intelligence and Metaverse Mixed Reality Agents as Language Learning Tutors . . . . . . . . . . . . . . . . . . . . . . . . 565 Benedikt Hensen and Danylo Bekhter Metaverse and Virtual Environment to Improve Attention Deficit Hyperactivity Disorder (ADHD) Students’ Learning . . . . . . . . . . . . . . . . . . . . . . . . 576 Azza Mohamed, Mai Zohiar, and Ibrahim Ismail Security, Privacy and Ethics in Augmented Intelligence Culture of Ethics in Adopting Learning Analytics . . . . . . . . . . . . . . . . . . . . . . . . . . 591 Dimitrios Tzimas and Stavros Demetriadis Promoting Ethical Uses in Artificial Intelligence Applied to Education . . . . . . . . 604 Ana Matias and Iraide Zipitria  
   
  xxiv  
   
  Contents  
   
  Applied Natural Language Processing Improving Collaboration via Automated Intelligent Nudges . . . . . . . . . . . . . . . . . 619 Solomon Ubani and Rodney Nielsen Preliminary Performance Assessment on Ask4Summary’s Reading Methods for Summary Generation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 630 Rita Kuo, Maria F. Iriarte, Di Zou, and Maiga Chang Joint Topic Model with Selected Side Information for Inter-University Syllabus Analysis Focusing on the Variety of Instructional Approaches . . . . . . . . 638 Kentaro Shiga and Naoyuki Morimoto Plug & Play with Deep Neural Networks: Classifying Posts that Need Urgent Intervention in MOOCs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 651 Laila Alrajhi and Alexandra I. Cristea Personalized Feedback Enhanced by Natural Language Processing in Intelligent Tutoring Systems . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 667 Christos Troussas, Christos Papakostas, Akrivi Krouska, Phivos Mylonas, and Cleo Sgouropoulou SC-Ques: A Sentence Completion Question Dataset for English as a Second Language Learners . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 678 Qiongqiong Liu, Yaying Huang, Zitao Liu, Shuyan Huang, Jiahao Chen, Xiangyu Zhao, Guimin Lin, Yuyu Zhou, and Weiqi Luo Conversational Agents and Language Models that Learn from Human Dialogues to Support Design Thinking . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 691 Stavros Demetriadis and Yannis Dimitriadis Author Index . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 701  
   
  Augmented Intelligence in Tutoring Systems  
   
  Language Proficiency Enhanced Knowledge Tracing Heeseok Jung1 , Jaesang Yoo1 , Yohaan Yoon1 , and Yeonju Jang2(B) 1 Classting AI Research, Seoul, Republic of Korea  
   
  {poco2889,jsyoo,straightfor}@classting.com 2 Creative Informatics and Computing Institute, Korea University, Seoul, Republic of Korea  
   
  [email protected]   
   
  Abstract. With an increasing interest in personalized learning, active research is being conducted on knowledge tracing to predict the learner’s knowledge state. Recently, studies have attempted to improve the performance of the knowledge tracing model by incorporating various types of side information. We propose a knowledge tracing method that utilizes the learner’s language proficiency as side information. Language proficiency is a key component of comprehending a question’s text and is known to be closely related to students’ academic performance. In this study, language proficiency was defined with Elo rating score and time window features, and was used in the knowledge tracing task. The dataset used in this study contains 54,470 students and 7,619,040 interactions, which were collected from a real-world online-learning platform. We conducted a correlation analysis to determine whether the language proficiency information of students was related to their ability to solve math word problems. In addition, we examined the effect of incorporating the language proficiency information on the knowledge tracing models using various baseline models. The analysis revealed a high correlation between the length of word problems and students’ language proficiency. Furthermore, in experiments with various baseline models, utilizing the language proficiency information improved the knowledge tracing model’s performance. Finally, when language proficiency information was incorporated, the cold start problem of the knowledge tracing model was mitigated. The findings of this study can be used as a supplement for educational instruction. Keywords: Knowledge Tracing · Student Modeling · Learning Analytics · Language Proficiency  
   
  1 Introduction As interest in personalized online learning grows, the research in the field of knowledge tracing (KT) to model a learner’s knowledge state also increases. Many studies have recently been conducted to improve the performance of the KT model by using various side information, such as response time [31, 33], the number of attempts [10, 43], question text [21, 36], and relationship between concepts [9, 23]. © The Author(s), under exclusive license to Springer Nature Switzerland AG 2023 C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 3–15, 2023. https://doi.org/10.1007/978-3-031-32883-1_1  
   
  4  
   
  H. Jung et al.  
   
  On the other hand, previous studies have found that the academic achievement in one subject is closely related to achievement in other subjects. For example, math grades are significantly correlated with science grades [16, 39], while English grades have a significant impact on math and science grades [3, 4]. As a result, if learning data from multiple subjects in which students participated can be collected, problem-solving information from one subject can be used to predict achievement in other subjects. In particular, if we collect problem-solving performance data for students’ first language subjects (e.g., Korean, English, French, etc.), we can estimate their language proficiency (LP) information. LP is an important factor when learners acquire domain knowledge, and it has been shown to have a significant impact on academic performance in a variety of subjects [6, 15, 30, 35]. Moreover, LP is an important factor in the learner’s problem solving. This is owing to the fact that learners must be able to read and comprehend the problem to complete it correctly [6]. For example, in mathematics, students with low LP are known to struggle with long word problems [37]. Therefore, LP information extracted from students’ problem-solving data of language subjects is likely to be useful for the KT task to predict their future performance in other subjects. However, despite the fact that LP is an important factor in predicting students’ academic performance, to our knowledge, no study in the KT field has used this information. In addition, studies that used academic achievement data in one subject to predict the student’s knowledge state in another subject have not been sufficiently conducted. In this study, we propose a KT method using LP information extracted from Korean problem solving data from students. First, we analyzed whether LP information was related to students’ math word problem performance. In addition, through experiments with real-world datasets, we predicted the knowledge state using students’ LP information and investigated whether using this information was effective in improving the performance of the KT model. Furthermore, we investigated whether using LP information can help mitigate the cold start problem. As a result, the following research questions (RQs) were posed in this study, in an attempt to find answers. RQ1: Is there a correlation between students’ LP and their word problem performance? RQ2: Is it possible to improve the performance of the KT models by incorporating LP information? RQ3: Does utilizing LP information alleviate the cold start issue of the KT model? The remainder of this paper is organized as follows. In Sect. 2, related works on deep learning-based knowledge tracing, students’ LP and academic performance, and the Elo rating system are presented. Section 3 describes the methodology used in the study. Sections 4 and 5 present the results and a discussion, respectively. Finally, Sect. 6 presents the conclusion of this study.  
   
  2 Related Works 2.1 Deep Learning-Based KT KT aims to estimate a learner’s knowledge state and predict future performance based on past learning histories. Typically, the learning history is represented by  
   
  Language Proficiency Enhanced Knowledge Tracing  
   
  5  
   
  X = {(e1 , a1 ), (e2 , a2 ), ..., (et , at )}. Here, et denotes the exercise solved at time t, and at denotes the correctness of et . As online education has grown in popularity, it has become possible to collect large amounts of learning activity data, and consequently, deep learning (DL)-based KT models are performing well. DL-based KT models include Recurrent Neural Network (RNN)-based models [29], Memory Augmented Neural Network (MANN)-based models [1, 17, 42], Attention Mechanism-based models [13, 19, 27, 33], and Graph Neural Network (GNN)-based models [26, 34, 41]. Various studies have attempted to estimate the knowledge state more precisely by utilizing side information in addition to exercise and response data. According to [24], the side information used in the KT models can be categorized as question side information, student side information, and knowledge component (KC) side information. Question side information includes question text content [21, 36] and question difficulty level [13, 23, 43], and so on. Student side information includes the number of attempts [10, 43] and students’ prior knowledge [32], and so forth. As KC side information, relations between KCs, or questions [23] are used. In this study, the LP—which is student side information—was used for the KT task. 2.2 Students’ LP and Academic Performance When we learn something, we obtain a significant amount of information from text. Therefore, the LP is known to have a strong relationship with students’ academic performance. In other words, students with low LP inevitably learn little from the text [6]. Previous studies have found that LP influences academic performance in various subjects, including mathematics, science, and social sciences [6, 15, 30, 35]. Especially in the case of mathematics, the ability to solve word problems is highly related to LP [37]. Word-problem solving differs from other types of mathematical competence; students are required to interpret text that explains a problem situation and deduce the number of sentences that represent that situation [12]. In particular, if LP is insufficient, calculation problems can be solved using key concept understanding, but not word problems. Consequently, there is a possibility that LP plays an important role in modeling a learner’s knowledge state. Therefore, in this study, LP was used as side information in the KT task to validate its effect. 2.3 Elo Rating System The Elo Rating System (ERS) [11] was used to estimate the relative ability of a chess player. ERS is a dynamic paired comparison model that is mathematically closely related to the one parameter logistic (1PL) IRT model [7]. Players are given a provisional ability score θ at first, which is incrementally updated according to the weighted difference in match outcome S and the expected match outcome E(S) (Eq. 1). Here, K is a constant specifying the sensitivity of the estimate in the last attempt. The expected match outcome E(S) is calculated based on the difference between the ability estimates of both players j and k preceding the match, and expresses the probability of winning as in Eq. 2. θˆj = θj + K(Sj − E(Sj )), θˆk = θk + K(Sk − E(Sk ))  
   
  (1)  
   
  6  
   
  H. Jung et al.  
   
    E Sj =  
   
  1 1 + 10  
   
  (θk −θj ) 400  
   
  , E(Sk ) =  
   
  1 1 + 10  
   
  (θj −θk ) 400  
   
  (2)  
   
  If we interpret a student’s answer to a question as a match between the student and question, the ERS can be used to estimate learners’ proficiency and question difficulty. As the rating score is updated by a heuristic rule, this is simple, robust, and effective for adaptive educational systems [28].  
   
  3 Methodology 3.1 Language Proficiency-Enhanced Knowledge Tracing The Elo rating score, calculated from the Korean problem-solving data, was used to estimate the students’ LP. A time window feature was used to reflect the time at which the Elo rating score was updated, based on the method of Lindsey et al. [20]. The reason for considering the timing information of the Elo rating score update is that students’ LP may change over time [5]. Because the students’ LP in this study was measured using data from Korean problem solving, if the student had not recently participated in Korean problem solving, the student’s Elo rating score would be fixed for a while. Therefore, by including a time window feature that contains information on the student’s Korean problem-solving by period, the possibility of a change in the student’s LP can be considered. The time window included information on the number of times the student attempted Korean problems and the number of correct answers by month, week, day, and hour. In addition, sentence length information from mathematical problems was used. Problem length was defined as the word count of each problem. Figure 1 shows the structure of the LP-enhanced KT model proposed in this study. qT1 , qT2 , · · · , qTn indicate the questions of main activities, the math problem-solving event, whereas lt1 , lt2 , · · · , lts indicate the questions of language activities, which is the Korean problem-solving event. T1 , T2 , · · · , Tn represent the timestamps of the main activities and t1 , t2 , · · · , ts represent the timestamps of the language activities. The Elo rating score calculated from the results of language activities up to Tn is used for timestamp Tn . Compatibility with existing models was considered when incorporating the LP information into the model. Because most KT models utilize question embedding and/or interaction embedding, LP information was incorporated into the model as in Eq. 3. qlp = W T1 [qwc], ilp = W T2 [iwcelotw]  
   
  (3)  
   
  Here, q refers to the question embedding. The interaction embedding of a tuple (q, a), where q denotes the question and a denotes the response (or correctness), is denoted by i.  denotes the concatenation. Elo rating score, word count, and each features in time window are continuous values. Like [33], we used trainable matrices for each LP related features and get embedding vectors elo, wc, tw. The trainable parameters W 1 and W 2 project the concatenated vector to the size of the original question and interaction embedding, respectively.  
   
  Language Proficiency Enhanced Knowledge Tracing  
   
  7  
   
  Fig. 1. The illustration of language proficiency enhanced knowledge tracing.  
   
  Final prediction and loss function are as follows: aTˆ n+1 = σ (Architecture(qlpT1:n , ilpT1:n ))  
   
  (4)  
   
  L = BCE(aTˆ n+1 , aTn+1 )  
   
  (5)  
   
  3.2 Dataset Data from Classting AI Learning1 were used in this study. Classting AI Learning is an online learning platform for K-12 that provides contents in Korean, English, mathematics, social studies, and science. Classting AI Learning currently has approximately three million users and is accessible via the web, Android, and iOS applications. Figure 2 shows the user interface of Classting AI Learning. In this study, data collected in 2021 on students’ Korean and math problem-solving histories were used. First, LP information of students was extracted using Korean problem-solving data. The Korean problem-solving data included 71,870 students, 5,862 questions, 73 KCs, and 6,617,370 interactions. Using the learner’s LP information, we attempted to trace the learner’s knowledge in other subjects (math in this study). A total of 139,271 students, 31,449 questions, 77 KCs, and 11,930,740 interactions were included in the math problem-solving data. The data of students who solved less than five Korean and math problems were removed. As a result, data of 54,470 students, 31,418 questions, 77 KCs, and 7,619,040 interactions were used. Table 1 lists the detailed statistics of the dataset.  
   
  1 https://www.classting.com.  
   
  8  
   
  H. Jung et al.  
   
  Fig. 2. User interface of Classting AI Learning.  
   
  Table 1. Detailed statistics of the dataset. Number of  
   
  Before Processing  
   
  Students  
   
  Math  
   
  139,271  
   
  Korean  
   
  71,870  
   
  Questions  
   
  Math  
   
  31,449  
   
  Korean  
   
  5,862  
   
  KCs  
   
  Math  
   
  77  
   
  Korean  
   
  73  
   
  Math  
   
  11,930,740  
   
  Korean  
   
  6,617,370  
   
  Interactions  
   
  After Processing 54,470 31,418 77 7,619,040  
   
  3.3 Baseline KT Models In this study, the following baselines were used to verify the effectiveness of the proposed LP-enhanced KT model: • DKT [29]: a representative RNN-based KT model that employs a single layer of LSTM [14] to estimate the learners’ knowledge state [8] • DKVMN [42]: a MANN-based model utilizing a static key memory to store latent KCs and a dynamic value memory to trace the mastery of corresponding KCs [22] • SAKT [27]: the first KT model to incorporate an attention mechanism [2]  
   
  Language Proficiency Enhanced Knowledge Tracing  
   
  9  
   
  3.4 Experimental Settings A 5-fold cross validation was performed in which folds are split based on learners, whereby 10% of training set was used as the validation set. The performance was measured using 100 recent sequences of each learner [19]. Each model’s embedding size was set to 64; the learning rate was set to 0.001; the batch size was set to 256; and Adam optimizer [18] was used. The early stopping technique was used with 10-epoch patience according to validation AUC. 3.5 Correlation of LP and Word Problem Performance The Pearson correlation between the length of the math problem and the average Korean Elo rating score was examined for students who correctly responded to the problems to investigate the relationship between LP and math problem-solving performance. The length of a mathematical problem is defined as the number of words in a sentence. Pearson correlations were examined using Python SciPy 1.10.0 [38].  
   
  4 Results 4.1 Result of the Correlation Analysis Between Students’ LP and Their Word-Problem Performance (RQ1) Figure 3 depicts the Pearson correlation analysis results between the length of the mathematical word problem and the average score of the Korean Elo rating score of students who correctly answered the problem. The length of the word problem sentences correlated strongly with the Korean Elo rating scores (Pearson Correlation = 0.924, p < 0.01).  
   
  Fig. 3. Pearson correlation between students’ LP and their word-problem performance.  
   
  10  
   
  H. Jung et al.  
   
  4.2 Experimental Results on KT Models (RQ2) Table 2 displays the experimental results for baseline models with LP information. Model performance was evaluated using the area under the ROC curve (AUC), accuracy (ACC), and root mean square error (RMSE). In the experiment, incorporating LP as side information improved the performance of all metrics across all baseline models. The AUC increased from a minimum of 0.7% to a maximum of 7.2% when LP information was included, ACC increased from a minimum of 0.59% to a maximum of 3.78%, and RMSE decreased by a minimum of 0.31% to a maximum of 4.82%. Table 2. Experimental results of KT models. Model  
   
  AUC  
   
  ACC  
   
  RMSE  
   
  DKT  
   
  0.748  
   
  0.729  
   
  0.426  
   
  DKT_LP  
   
  0.802  
   
  0.757  
   
  0.405  
   
  DKVMN  
   
  0.749  
   
  0.73  
   
  0.426  
   
  DKVMN_LP  
   
  0.754  
   
  0.731  
   
  0.424  
   
  SAKT  
   
  0.787  
   
  0.742  
   
  0.416  
   
  SAKT_LP  
   
  0.801  
   
  0.755  
   
  0.407  
   
  To determine the effect of including features on LP information (Elo rating score, time window feature, and word count), an ablation experiment for each feature was performed. Table 3 lists the results of the ablation experiments where ‘elo’ means Elo rating score; ‘wc’ means word count of math problems; and ‘tw’ refers to time windows. The results show that the predictive performance of the model improved when information on LP was incrementally added to each baseline model. Table 3. Ablation experiment results (AUC) for LP-related feature inclusion. +elo  
   
  +elo+wc  
   
  +elo+wc+tw  
   
  DKT  
   
  0.7989  
   
  0.7992  
   
  0.8015  
   
  SAKT  
   
  0.7493  
   
  0.7499  
   
  0.7538  
   
  SAKT  
   
  0.7953  
   
  0.7983  
   
  0.8007  
   
  4.3 Results of Cold Start Experiment (RQ3) Similar to many other tasks in machine learning, the KT task has a cold start problem. Cold start problems can be classified into two scenarios [40, 44]. The first scenario is a case of constructing a KT model with a small number of students, while the second  
   
  Language Proficiency Enhanced Knowledge Tracing  
   
  11  
   
  scenario is a case of constructing a KT model with a short learning activity. We examined whether the LP information could alleviate the cold start issue in these two scenarios. In the first scenario, the performance was compared by reducing the number of training users from 10% to 0.1%. In the second scenario, performance was compared by reducing the sequence length of the training data from 50 to 5.  
   
  Fig. 4. Results of a cold start experiment with a small number of learners.  
   
  Figure 4 depicts the results of the cold start experiment conducted with a small number of learners (Scenario 1). As a result of the experiment in which the number of training users was reduced from 10% to 0.1%, the model that utilized LP information outperformed the baseline model. Specifically, performance improved by up to 2.12% when only 10% of the train set was used, 1.47% when 1% was used, and 2.76% when 0.1% was used. On the other hand, Fig. 5 depicts the results of a cold start experiment conducted with a small number solved problems (Scenario 2). Experiments with sequence lengths reduced from 50 to 5 revealed that models using LP information outperformed baseline models. Specifically, when using LP information, performance improved by up to 5.74% when 5 problem solving histories were used. Using less than 10 improved performance by up to 3.49%, and using fewer than 15 improved performance by up to 5.08%. In summary, the experiments demonstrate that the AUC performance improved in both scenarios when LP information was included to the three baseline models.  
   
  Fig. 5. Cold start experiment results for a small number of solved problems.  
   
  12  
   
  H. Jung et al.  
   
  5 Discussion 5.1 Effectiveness of LP Information on KT Task Pearson correlation analysis revealed a strong correlation between the sentence length of the math problem and students’ LP. This finding is consistent with previous research showing that LP influences word problem performance in math [12, 37]. To the best of our knowledge however, it has yet to be determined whether LP information can be useful side information in a KT task. As a result of the experiment in this study, the performance of all RNN-based, MANN-based, and attention mechanisimbased KT models was enhanced when LP information was utilized. In addition, the ablation study revealed that all three indicators for measuring LP significantly contributed to performance enhancement. This confirms that the learner’s LP information can be meaningfully utilized in the KT task. Furthermore, experiments were carried out to determine whether the learner’s LP information effectively mitigates the cold start problem in the KT field. The experiment confirmed that utilizing LP information to both the scenario of a small number of students and the scenario of a small number of problem-solving alleviated the cold start problem. In summary, using learners’ LP information can improve the performance of KT models, and this information is effective in mitigating the cold start problem. 5.2 Possibility as an Assistant for Educational Interventions Modeling the learner’s state of knowledge in light of LP has potential as a supplement for educational interventions. Figure 6 depicts the visualization of LP information from students who solved a random word problem using a T-SNE plot [25]. The students’ LP information was encoded using a trained LP-enhanced KT model. Correct responses are marked in orange, while incorrect responses are marked in blue.  
   
  Fig. 6. T-SNE plot sample for LP information of students.  
   
  Language Proficiency Enhanced Knowledge Tracing  
   
  13  
   
  In Group 1, students with high LP (high Elo score) were distributed. In the case of students who got the problem wrong in this group, it can be determined that the reason was not because of a lack of LP but because of failure to master the concept related to the problem. As a result, the students in this group who got the problem wrong required educational intervention to master related concepts. Students with low LP (low Elo score) were assigned to Group 2. Students in this group who got the problem wrong, it is likely that they did not comprehend the meaning of the sentence in the problem. As a result, students in this group who were incorrect, required additional educational materials to increase LP as well as additional education on related concepts.  
   
  6 Conclusion Language proficiency (LP) is a significant factor influencing students’ academic performance. In this study, an LP-enhanced KT model was proposed. The Elo rating scores calculated from the students’ Korean problem-solving data and the number of words in the problem were used as LP information. Furthermore, time window features were used to reflect the updating time of the LP information. Data collected from a real-world online learning platform were used for experiments and data analysis. The analysis revealed a strong correlation between the length of math problems and the average LP of the students who correctly answered the questions. The experiments demonstrated that the LP-enhanced KT model proposed in this study outperformed the other baseline models. Furthermore, when the LP information was incorporated, the cold start problem was alleviated in several scenarios. In future work, the performance of the LP-enhanced knowledge tracing model can be validated for various subjects. Furthermore, additional indicators that can measure students’ LP can be investigated and applied to KT.  
   
  References 1. Abdelrahman, G., Wang, Q.: Knowledge tracing with sequential key-value memory networks. In: Proceedings of the 42nd International ACM SIGIR Conference on Research and Development in Information Retrieval, pp. 175–184 (2019) 2. Abdelrahman, G., Wang, Q., Nunes, B.P.: Knowledge tracing: a survey. In: ACM Computing Surveys (2022) 3. Adegboye, A.: Proficiency in English language as a factor contributing to competency in mathematics. Educ. Today 6(2), 9–13 (1993) 4. Aina, J.K., Ogundele, A.G., Olanipekun, S.S.: Students’ proficiency in English language relationship with academic performance in science and technical education. Am. J. Educ. Res. 1(9), 355–358 (2013) 5. Barkaoui, K.: Examining repeaters’ performance on second language proficiency tests: a review and a call for research. Lang. Assess. Q. 14(4), 420–431 (2017) 6. Bastug, M.: The structural relationship of reading attitude, reading comprehension and academic achievement. Int. J. Soc. Sci. Educ. 4(4), 931–946 (2014) 7. Batchelder, W.H., Bershad, N.J.: The statistical analysis of a Thurstonian model for rating chess players. J. Math. Psychol. 19(1), 39–60 (1979)  
   
  14  
   
  H. Jung et al.  
   
  8. Chan, W.L., Yeung, D.Y.: Clickstream knowledge tracing: modeling how students answer interactive online questions. In: LAK21: 11th International Learning Analytics and Knowledge Conference, pp. 99–109 (2021) 9. Chen, P., Lu, Y., Zheng, V.W., Pian, Y.: Prerequisite-driven deep knowledge tracing. In: 2018 IEEE International Conference on Data Mining (ICDM), pp. 39–48. IEEE (2018) 10. Choffin, B., Popineau, F., Bourda, Y., Vie, J.J.: Das3h: modeling student learning and forgetting for optimally scheduling distributed practice of skills. arXiv preprint arXiv:1905.06873 (2019) 11. Elo, A.E.: The rating of chessplayers, past and present. Arco Pub. (1978) 12. Fuchs, L.S., Fuchs, D., Compton, D.L., Hamlett, C.L., Wang, A.Y.: Is word-problem solving a form of text comprehension? Sci. Stud. Read. 19(3), 204–223 (2015) 13. Ghosh, A., Heffernan, N., Lan, A.S.: Context-aware attentive knowledge tracing. In: Proceedings of the 26th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining, pp. 2330–2339 (2020) 14. Hochreiter, S., Schmidhuber, J.: Long short-term memory. Neural Comput. 9(8), 1735–1780 (1997) 15. Izatullah, S., Nasir, R., Gul, F.: A study to examine the relationship between English language proficiency and academic achievement of students in higher education institutions. Global Educ. Stud. Rev. VII (2022) 16. Jun, W.: A study on correlation analysis of academic performance per subject for the gifted children in IT. J. Gifted/Talented Educ. 23(3), 407–419 (2013) 17. Kim, S., Kim, W., Jung, H., Kim, H.: DiKT: Dichotomous knowledge tracing. In: Cristea, A.I., Troussas, C. (eds.) ITS 2021. LNCS, vol. 12677, pp. 41–51. Springer, Cham (2021). https://doi.org/10.1007/978-3-030-80421-3_5 18. Kingma, D.P., Ba, J.: Adam: a method for stochastic optimization. arXiv preprint arXiv:1412. 6980 (2014) 19. Lee, W., Chun, J., Lee, Y., Park, K., Park, S.: Contrastive learning for knowledge tracing. In: Proceedings of the ACM Web Conference 2022, pp. 2330–2338 (2022) 20. Lindsey, R.V., Shroyer, J.D., Pashler, H., Mozer, M.C.: Improving students’ long-term knowledge retention through personalized review. Psychol. Sci. 25(3), 639–647 (2014) 21. Liu, Q., et al.: Ekt: exercise-aware knowledge tracing for student performance prediction. IEEE Trans. Knowl. Data Eng. 33(1), 100–115 (2019) 22. Liu, Q., Shen, S., Huang, Z., Chen, E., Zheng, Y.: A survey of knowledge tracing. arXiv preprint arXiv:2105.15106 (2021) 23. Liu, Y., Yang, Y., Chen, X., Shen, J., Zhang, H., Yu, Y.: Improving knowledge tracing via pre-training question embeddings. arXiv preprint arXiv:2012.05031 (2020) 24. Liu, Z., Liu, Q., Chen, J., Huang, S., Tang, J., Luo, W.: pykt: a python library to benchmark deep learning based knowledge tracing models. arXiv preprint arXiv:2206.11460 (2022) 25. Van der Maaten, L., Hinton, G.: Visualizing data using t-sne. J. Machine Learn. Res. 9(11) (2008) 26. Nakagawa, H., Iwasawa, Y., Matsuo, Y.: Graph-based knowledge tracing: modeling student proficiency using graph neural network. In: IEEE/WIC/ACM International Conference on Web Intelligence, pp. 156–163 (2019) 27. Pandey, S., Karypis, G.: A self-attentive model for knowledge tracing. arXiv preprint arXiv: 1907.06837 (2019) 28. Pelánek, R.: Applications of the ELO rating system in adaptive educational systems. Comput. Educ. 98, 169–179 (2016) 29. Piech, C., Bassen, J., Huang, J., Ganguli, S., Sahami, M., Guibas, L.J., Sohl-Dickstein, J.: Deep knowledge tracing. In: Adv. Neural Inf. Process. Syst. 28 (2015) 30. Racca, R., Lasaten, R.C.S.: English language proficiency and academic performance of Philippine science high school students. Int. J. Lang. Lit. Linguist. 2(2), 44–49 (2016)  
   
  Language Proficiency Enhanced Knowledge Tracing  
   
  15  
   
  31. Shen, S., et al.: Learning process-consistent knowledge tracing. In: Proceedings of the 27th ACM SIGKDD conference on knowledge discovery & data mining, pp. 1452–1460 (2021) 32. Shen, S., et al.: Convolutional knowledge tracing: Modeling individualization in student learning process. In: Proceedings of the 43rd International ACM SIGIR Conference on Research and Development in Information Retrieval, pp. 1857–1860 (2020) 33. Shin, D., Shim, Y., Yu, H., Lee, S., Kim, B., Choi, Y.: Saint+: integrating temporal features for ednet correctness prediction. In: LAK21: 11th International Learning Analytics and Knowledge Conference, pp. 490–496 (2021) 34. Song, X., Li, J., Lei, Q., Zhao, W., Chen, Y., Mian, A.: Bi-clkt: bi-graph contrastive learning based knowledge tracing. Knowl.-Based Syst. 241, 108274 (2022) 35. Stoffelsma, L., Spooren, W.: The relationship between English reading proficiency and academic achievement of first-year science and mathematics students in a multilingual context. Int. J. Sci. Math. Educ. 17, 905–922 (2019) 36. Su, Y., et al.: Exercise-enhanced sequential modeling for student performance prediction. In: Proceedings of the AAAI Conference on Artificial Intelligence, vol. 32 (2018) 37. Vilenius-Tuohimaa, P.M., Aunola, K., Nurmi, J.E.: The association between mathematical word problems and reading comprehension. Educ. Psychol. 28(4), 409–426 (2008) 38. Virtanen, P., et al.: SciPy 1.0: fundamental algorithms for scientific computing in python. Nat. Method 17, 261–272 (2020). https://doi.org/10.1038/s41592-019-0686-2 39. Wang, J.: Relationship between mathematics and science achievement at the 8th grade. Online Submission 5, 1–17 (2005) 40. Wu, Z., Huang, L., Huang, Q., Huang, C., Tang, Y.: Sgkt: session graph-based knowledge tracing for student performance prediction. Expert Syst. Appl. 206, 117681 (2022) 41. Yang, Y., et al.: Gikt: a graph-based interaction model for knowledge tracing. In: Machine Learning and Knowledge Discovery in Database: European Conference, ECML PKDD 2020, Ghent, Belgium, 14–18 Sep 2020, Proceedings, Part I, pp. 299–315. Springer (2021) 42. Zhang, J., Shi, X., King, I., Yeung, D.Y.: Dynamic key-value memory networks for knowledge tracing. In: Proceedings of the 26th international conference on World Wide Web, pp. 765–774 (2017) 43. Zhang, M., Zhu, X., Zhang, C., Ji, Y., Pan, F., Yin, C.: Multi-factors aware dual-attentional knowledge tracing. In: Proceedings of the 30th ACM International Conference on Information and Knowledge Management, pp. 2588–2597 (2021) 44. Zhao, J., Bhatt, S., Thille, C., Gattani, N., Zimmaro, D.: Cold start knowledge tracing with attentive neural turing machine. In: Proceedings of the Seventh ACM Conference on Learning@ Scale, pp. 333–336 (2020)  
   
  Recommending Mathematical Tasks Based on Reinforcement Learning and Item Response Theory Matteo Orsoni1(B) , Alexander Pögelt2 , Nghia Duong-Trung3 , Mariagrazia Benassi1 , Milos Kravcik3 , and Martin Grüttmüller2 1  
   
  3  
   
  University of Bologna, Piazza Aldo Moro 90, 47521 Cesena, Italy {matteo.orsoni2,mariagrazia.benassi}@unibo.it 2 Leipzig University of Applied Sciences, Karl-Liebknecht-Straße 132, 04277 Leipzig, Germany {alexander.poegelt,martin.gruettmueller}@htwk-leipzig.de Educational Technology Lab, German Research Center for Artiﬁcial Intelligence (DFKI), Alt-Moabit 91C, 10559 Berlin, Germany {nghia_trung.duong,milos.kravcik}@dfki.de  
   
  Abstract. Recommending challenging and suitable exercises to students in an online learning environment is important, as it helps to stimulate their engagement and motivation. This requires considering their individual goals to improve learning eﬃciency on one side and on the other to provide tasks with an appropriate diﬃculty for the particular person. Apparently, this is not a trivial issue, and various approaches have been investigated in the areas of adaptive assessment and dynamic diﬃculty adjustment. Here, we present a solution for the domain of mathematics that rests on two pillars: Reinforcement Learning (RL) and Item Response Theory (IRT). Speciﬁcally, we investigated the eﬀectiveness of two RL algorithms in recommending mathematical tasks to a sample of 125 ﬁrst-year Bachelor’s students of computer science. Our recommendation was based on the Estimated Total Score (ETS) and item diﬃculty estimates derived from IRT. The results suggest that this method allowed for personalized and adaptive recommendations of items within the user-selected threshold while avoiding those with an already achieved target score. Experiments were performed on a real data set to demonstrate the potential of this approach in domains where task performance can be rigorously measured. Keywords: Recommender System · Reinforcement Learning · Item Response Theory · Personalized Recommendation · Math Exercises  
   
  1  
   
  Introduction  
   
  Conventional university teaching methods usually provide uniform learning exercises for the study groups. Depending on the level of knowledge, exercises can diﬀer in the perception of diﬃculty by students. For optimal support and challenge of students, an individual selection of tasks is needed, which can be made c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 16–28, 2023. https://doi.org/10.1007/978-3-031-32883-1_2  
   
  Recommending Mathematical Tasks  
   
  17  
   
  based on various metrics, e.g. the level of knowledge or the desired ﬁnal grade. Individualized learning tries to stimulate the motivation and engagement of students, taking into account theories like the zone of proximal development [16] and ﬂow [4]. The ﬁrst provides students with tasks beyond their current ability to scaﬀold the learning process. The second aims to avoid boredom and frustration if the chosen diﬃculty level does not correspond with the student’s ability. Dynamic Diﬃculty Adjustment (DDA) mechanism, which originated from computer games, is a technique used to automatically adjust the diﬃculty of online tasks according to the abilities of the user [3,17], with the goal of keeping the user’s attention and engagement. The DDA concept [1] emphasizes the importance of three aspects: the task diﬃculty (static or dynamic), the user’s status (this can include performance or engagement, but also personality and emotions), and the adaptation method, which can be based on rules or data-driven approaches (e.g. probabilistic models, reinforcement learning). Physiologically, user involvement is driven by discovering new knowledge, learning patterns, ideas, and excitement while achieving a particular learning goal [9]. In educational contexts, DDA can ensure that students are presented with tasks suitable for their current level of proﬁciency, leading to more engaging learning experiences. One approach to implementing a DDA mechanism is using the Item Response Theory (IRT), a statistical model that estimates an individual’s proﬁciency at a particular task by analyzing their responses to a set of items [5]. This enables to a recommendation of appropriately challenging tasks for the student. However, recommending tasks based on IRT estimates can be suboptimal, as it does not consider the student’s learning progress. Therefore, we propose the IRT integration with Reinforcement Learning (RL), which allows for optimizing task recommendations based on the student’s past performance. This study presents a system that utilizes IRT and RL to recommend tasks to ﬁrst-semester bachelor’s degree computer science students taking a mathematics module. Using our proposed method, which employs and compares the Proximal Policy Optimization (PPO) [12], and the synchronous, deterministic variant of the Asynchronous Advantage Actor-Critic [10] algorithm (called A2C), we aim to demonstrate the beneﬁts of personalized task recommendation in the educational settings. In more detail, we incorporated the learner’s goals into our recommender system. Literature suggested that speciﬁc interventions to set personal academic goals and exam preparation are essential factors contributing to the student’s success while in the university [13]. Moreover, goal setting can help students develop a sense of agency, intrinsic motivation, and the ability to manage their learning [11]. We compared the performance of our proposed method to a random baseline, using data from 125 students. The results of our study will provide insight into the eﬀectiveness of using IRT and RL for recommending items in line with the learner’s past performance and goals. In the following, we ﬁrst reference some related work and background information. Then we present our experiments thoroughly, including the results. Finally, we discuss the outcomes and conclude the paper.  
   
  18  
   
  2  
   
  M. Orsoni et al.  
   
  Related Work  
   
  Computerized adaptive assessment methods in well-structured domains like mathematics have a long tradition of selecting tasks according to the student’s ability [15], where structured task description schemes allowed for a detailed analysis of student’s errors and on-demand generation of task instances facilitated independent student work. During the recent Corona crisis, professional rule-based adaptive learning systems like bettermarks1 were very popular. Recent machine learning approaches address the DDA issue also in other domains if there is a signiﬁcant question bank and users with diﬀerent competencies [18], considering even individual diﬃculty levels. This method can be applied when three conditions are met: a discrete action space exists, a feedback signal is a quantitative measure of diﬃculty, and a target performance value is selected. DDA can be achieved using statistical models such as IRT [5]. IRT estimates a learner’s proﬁciency based on their responses to a set of items and has been applied in various educational contexts [7]. However, traditional recommendation approaches may not be suitable in educational settings where a student’s learning potential changes over time. Reinforcement Learning (RL) addresses this issue by optimizing task recommendations based on the student’s past performance and progress [14]. In recent years, the combination of IRT and RL has been proposed as a solution for recommendation in mathematics and cognitive domains. For example, the authors in [8] suggested using an RL system to recommend items based on the student’s ability estimates from an IRT model to improve algebra abilities. Also, the study mentioned earlier [18] used IRT to estimate the student’s knowledge and RL to adjust task diﬃculty. This work is distinct from the previous approaches in recommender systems that combine RL and IRT. It utilizes IRT to estimate the diﬃculty of items based on the student’s past performance and uses this information to compute the expected total score threshold distribution for mathematical modules. This relevant information allowed to integrate into an RL system of the learner’s goal to make recommendations that align with the student’s objectives.  
   
  3  
   
  Background  
   
  In Reinforcement Learning (RL), an agent learns to make decisions by interacting with its environment and receiving feedback through rewards or penalties. The agent’s goal is to learn a policy mapping from states to actions that maximize the expected cumulative reward over time [14]. In the present work, we used and compared the performances of two popular RL algorithms: the Proximal Policy Optimization (PPO) [12], and the synchronous, deterministic variant (A2C) of the Asynchronous Advantage Actor Critic (A3C) [10]. PPO is designed to improve the stability and eﬃciency of policy gradient methods. It is an actorcritic algorithm that uses a value function to estimate the expected cumulative 1  
   
  https://bettermarks.com/.  
   
  Recommending Mathematical Tasks  
   
  19  
   
  reward for a given policy, and it uses a trust region method to optimize the policy. The basic idea of PPO is to optimize the procedure so that the new policy is close to the previous one but with improved expected cumulative reward [12]. The variant of A3C combines the actor-critic method with the advantage function. The actor-critic process separates the policy, which generates the actions, from the value function, which estimates the expected cumulative reward for a given policy. The advantage function estimates the improvement of taking a given action compared to the average action. The term “synchronous” refers to the method of updating the parameters of the actor and critic networks. All agents update their parameters simultaneously using the same synchronous data. In contrast, in the original asynchronous version, each agent updates its parameters independently using its data [10].  
   
  4  
   
  Experiments  
   
  4.1  
   
  Experimental Dataset  
   
  This study analyzes a data set collected at Leipzig University of Applied Sciences starting from the winter semester of 2021/22. The data set includes the results of weekly exercises from a mathematics module taken by 125 Bachelor ﬁrst-year computer science students. To pass the module, students must solve at least 35% of the weekly exercises over the semester. Each weekly practice includes several tasks speciﬁc to the topic covered in that week’s lecture. The data set also includes solution attempts made after the semester. The tasks diﬀer slightly for each attempt and student but are assumed to have equivalent diﬃculty and be based on the same concept. To practice the subject matter, students can work on the exercises and subtasks multiple times. Only the most successful attempt will be counted toward the ﬁnal grade. The assignments are provided through the OPAL learning management system and ONYX testing software, and some tasks allow using the computer algebra system MAXIMA. The data set is separated into tables for student results and task information. To encourage reproducibility and further investigation, we publish the dataset with the implementation codes on our GitHub repository2 . Result Features participant An ascending number that anonymously references students test id References the weekly exercise (test). test attempt Attempt in which the student solves the weekly exercise test score Points scored by the student test pass score Points to pass the weekly exercise test max score Maximum points of the weekly exercise test pass Status whether the student has passed the weekly exercise item id References the actual subtask in a weekly exercise 2  
   
  https://github.com/MatteoOrsoni/ITS2023_Recommending-Math-Tasks.  
   
  20  
   
  M. Orsoni et al.  
   
  item attempt Attempt in which the student solves the subtask item datestamp Timestamp in which the student completed the subtask. item sessionStatus Represents the status of the subtask. (ﬁnal - The student has solved the task and submitted his/her answers; pendingSubmission - The student has viewed the assignment but has not responded to it; pendingResponseProcessing - The student has entered answers but has not submitted them; initial - The student has not viewed the assignment) item duration Time spent on the subtask item score Points on the subtask scored by the student item max score Maximum points of the subtask item candidate responses Answers from the student item correct responses Correct answers of the subtask item candidate responses score Scores of the student’s answers item correct responses score (Maximum)-point scores of the subtask item variables Variable assignments of the subtask execution Task Features item id (Equivalent to the result table) references the subtask is test Status whether the item is a test (tests are groupings of subtaks and are usually equivalent to weekly exercises). test name Folder name in which the test ﬁle is located item description Tasks description in HTML format All in all, there are 18576 solutions from a total of 99 diﬀerent items in a total of 14 modules (including tests for exam preparation) in the data set. Due to the low number of attempts inside some modules and excluding tests for exam preparation, in this study, the analysis focused on 10 modules. On average, the students needed 464 s and achieved an average of 2.18 points per item, with an average maximum score of 3.37 points. Furthermore, students practiced a single item on average 1.85 times, with a maximum of 72 times. 4.2  
   
  Framework and Baselines  
   
  The IRT models have been implemented by using the mirt: a Multidimensional Item Response Theory Package in R [2], while the RL solutions in Python by using the Stable Baseline 3 [6] library. We compared the two RL solutions (PPO, A2C) with a random baseline procedure. According to this, we ran the environment for 1000 episodes, collecting each reward and averaging at the end. For each episode, the actions were taken randomly into the set of those possible. The averaged reward was then taken as baseline values to be compared to the average reward after 1000 episodes estimated by implementing PPO and A2C algorithms. In the following, we will delve deeper into constructing the item difﬁculty estimation model and the environment in which the RL algorithms were implemented.  
   
  Recommending Mathematical Tasks  
   
  4.3  
   
  21  
   
  Diﬃculty Level  
   
  In the present study, an IRT approach is used to estimate the diﬃculty of items presented to students in a course each week and to create diﬀerent thresholds based on the sigmoid distribution of the estimated total score (ETS) of the winning IRT model. It allows us to consider the learners’ objectives for that particular module. IRT is a statistical procedure that allows for the discovery of a learner’s latent trait for a speciﬁc concept and the estimation of diﬀerent parameters (diﬃculty, discrimination, and guessing) embedded within the item according to the chosen IRT model. Three other IRT models (1PL, 2PL, 3PL) were compared, and the best one was selected using metrics such as the Akaike Information Criterion (AIC), Bayesian Information Criterion (BIC), and loglikelihood. The values of these metrics are summarized in Table 1. Table 1. AIC (Akaike Information Criteria), BIC (Bayesian Information Criterion), and LL (Log Likelihood). In bold, the models for each module that reached the significant level p < .05 among others. * It has not been possible to estimate the parameters due to too few degrees of freedom. Module 1PL AIC  
   
  2PL AIC  
   
  BIC  
   
  LL  
   
  3PL AIC BIC LL  
   
  BIC  
   
  LL  
   
  1  
   
  3452  
   
  3550  
   
  −1692 3379 3569 −1623 3432 3717 −1617  
   
  2  
   
  995  
   
  1021  
   
  −488  
   
  932  
   
  980 −450  
   
  3  
   
  533  
   
  545 −262  
   
  533  
   
  552  
   
  −261  
   
  NA* NA* NA*  
   
  1157 1183 −569 1167  
   
  941  
   
  1012 −447  
   
  1213  
   
  −568  
   
  1182 1251 −567  
   
  5  
   
  515  
   
  529 −253  
   
  521  
   
  543  
   
  −252  
   
  529  
   
  562  
   
  −252  
   
  6  
   
  711  
   
  728  
   
  −350  
   
  704  
   
  733 −342  
   
  713  
   
  756  
   
  −342  
   
  7  
   
  844  
   
  868  
   
  −413  
   
  842  
   
  884 −405  
   
  854  
   
  917  
   
  −403  
   
  8  
   
  717  
   
  746  
   
  −348  
   
  711  
   
  763 −336  
   
  731  
   
  809  
   
  −336  
   
  4  
   
  9 10  
   
  1059 1096 −516 1066  
   
  1133  
   
  −507  
   
  1073 1174 −498  
   
  698 −318  
   
  735  
   
  −310  
   
  682  
   
  664  
   
  673  
   
  775  
   
  −302  
   
  The winner over the three possible models was then selected based on the p-value obtained. Only the signiﬁcantly diﬀerent model (p < .05) from the others was used in further analysis. The estimated total score of the winner IRT model has been then used to estimate the θ value, the correspondent threshold diﬃculty for that speciﬁc module. The thresholds have been chosen arbitrarily except for the ﬁrst, which was the one that allowed the student to pass the module. Two to four thresholds have been set into the RL solution for each module, according to the number of items (number of possible actions) and the steepness of the sigmoid distribution underlying the estimated total score. Moreover, the IRT solution gave us the values of items’ diﬃculty for each module. These values have been used in the RL environment conﬁguration.  
   
  22  
   
  M. Orsoni et al.  
   
  4.4  
   
  Reinforcement Learning Environment  
   
  The recommender system has been developed as a Markov Decision Process (MDP), consisting of a tuple (S, A, R, P ) of elements. The tuple deﬁnes the MDP completely, where the agent interacts with the environment. The goal is to ﬁnd a policy (mapping from states to actions) that maximizes the expected cumulative reward over time. A speciﬁc recommender system has a similar MDP representation for each module created. It has been summarized as follows: 1. State Space S: It represents all possible states of the system. It is related to the answering process of the student according to the item presented in the module. Each state or item in the module has been described as a tuple of ﬁve elements (d, s, m, dt, t), where: (a) d: The diﬃculty of the module items according to the IRT diﬃculty estimation. (b) s: The score obtained by the student for each item. (c) m: The maximum possible score for that speciﬁc item. (d) dt: The diﬃculty threshold. This parameter does not change until the end of each episode. (e) t: It is the threshold. This parameter does not change until the end of each episode and is strictly related to the diﬃculty threshold. It is a numeric value corresponding to the score the student has to obtain by summing the score items. 2. Action Space A: It represents all possible actions that can be taken in each state. 3. Reward Function R: It is a function that assigns a numerical reward to each state-action pair (s, a) and is used to evaluate the quality of diﬀerent policy choices. We included three diﬀerent numerical rewards in the environment. A reward is related to the Dif f iculty, Actions, and Episode. (a) Dif f iculty: For every action chosen by the agent, that is, for every next item chosen, we wanted to create a function that gave a positive reward to the agent if the selected action was in line with the diﬃculty threshold of the item estimated by the IRT model and the threshold chosen by the user. In this way, we wanted to favor items that had diﬃculties equal to or lower than the user’s needs to reach a certain threshold, discouraging items that were too diﬃcult to achieve the goal.  κ1 if st ≤ dt, ∀a ∈ A (1) RD = κ2 otherwise In this function, if the action selected by the agent is in line with the IRT estimate and is less than or equal to the user’s threshold, the agent will receive a positive reward κ1 . If not, the agent will receive a reward of zero κ2 . (b) Actions: For every action taken by the agent, this reward function was constructed to track the actions taken and to avoid items for which the  
   
  Recommending Mathematical Tasks  
   
  23  
   
  student has received a score equal to the highest possible from being presented again.  RA = κ3 if at ∈ actions_used, ∀a ∈ A (2) where actions_used means the set of actions/items for which the student has already achieved the highest possible score. If the agent recommended an action in the actions_used it received a negative reward. (c) Episode: The last reward function was related to the episode conclusion. Each episode was set to have a maximum duration related between (54%– 150%) longer than the number of possible actions, to allow the agent to present the items again for which the subject had not reached the highest possible score and to reach the thresholds with the items with higher diﬃculty. If the agent could reach the established threshold within the maximum length of the episode, it received a positive reward; otherwise, it did not receive any reward.  κ4 if st + st+1 + ... + st+n ≥ t (3) RE = κ5 otherwise At the end of each episode, the overall reward function was created based on the three functions. If the agent achieved a cumulative score on the items equal to or higher than the set threshold, then the reward function R included RD + RA + RE . Otherwise, it only had RD + RA . RD and RA are considered intermediate rewards that should guide the agent in its choice of future actions. 4. Transition Probability Function P : It deﬁnes the probability of transitioning from one state to another after taking a speciﬁc action. 4.5  
   
  Hyperparameters  
   
  In this section, we summarized the hyperparameters used in each module. In Table 2, we have included the hyperparameters for conﬁguring the reinforcement learning environment. Speciﬁcally, the PPO and A2C algorithms were trained for 105 timesteps across all modules, each for 1 h. The learning rate was set at 10−7 . Finally, the training algorithms were based on a policy object that implements an actor-critic approach, utilizing a 2-layer MLP with 64 units per layer [6]. It is true for some modules, while others utilize a custom network architecture. Table 3 summarizes the hyperparameters associated with the custom environment, including the maximum length of each episode and its relationship with the number of possible actions. It also shows the number of thresholds considered in each module and the numeric values of the threshold (t) based on the estimated total score and the corresponding θ value (dt) obtained from the winning IRT solution. In addition, it considers N as the number of complete subjects’ recordings for each module. This value has been extracted using the student’s ﬁrst attempt for each task in each module.  
   
  24  
   
  M. Orsoni et al.  
   
  Table 2. Hyperparameters are implemented in both the PPO and A2C algorithms. lr: learning rate, ts: timesteps, Custom_net: Custom_network, policy: the policy implemented. Module RL conﬁguration policy Custom_net ts  
   
  4.6  
   
  lr 5  
   
  10−7  
   
  1  
   
  mlp  
   
  Yes: [128, 64] 10  
   
  2  
   
  mlp  
   
  No  
   
  105 10−7  
   
  3  
   
  mlp  
   
  No  
   
  105 10−7  
   
  4  
   
  mlp  
   
  Yes: [128, 64] 105 10−7  
   
  5  
   
  mlp  
   
  No  
   
  105 10−7  
   
  6  
   
  mlp  
   
  Yes: [64, 32]  
   
  105 10−7  
   
  7  
   
  mlp  
   
  No  
   
  105 10−7  
   
  8  
   
  mlp  
   
  Yes: [64, 32]  
   
  105 10−7  
   
  9  
   
  mlp  
   
  No  
   
  105 10−7  
   
  10  
   
  mlp  
   
  Yes: [64, 32]  
   
  105 10−7  
   
  Experiment Results  
   
  This study evaluated the performance of two reinforcement learning solutions, PPO and A2C, and a random baseline solution in collecting average rewards after 1000 episodes. The results, as illustrated in Fig. 1, demonstrate that the PPO solution outperformed both the A2C solution and the random baseline across all modules presented to subjects. A comparison of the mean improvement in collecting average cumulative rewards among the three solutions is summarized in Table 4. Evidently, the PPO solution achieved, on average, a 22.83% increase in rewards over the random action solution. Furthermore, this advantage in collecting rewards was consistent across all modules, with an improved range of 4.50% to 78.94% compared to the baseline. In contrast, the A2C algorithm demonstrated only a moderate improvement in collecting rewards, with an average increase of 1.29% over the baseline across all modules. This improvement was inconsistent, with a range of −8.99% to 7.69%.  
   
  5  
   
  Remarks and Discussion  
   
  The presented research centers on developing a recommender system that utilizes reinforcement learning and item response theory to enhance item recommendations for ﬁrst-year bachelor’s students in computer science taking a mathematics module. The integration of RL and IRT allows for personalized and adaptive recommendations based on the estimated diﬃculty threshold, enabling the system to suggest items within the user-selected threshold while avoiding items for which the student has already achieved the maximum possible score. In other words, the higher the threshold set by the student, the more complex the recommended items were, according to the θ value of the ETS distribution. This aspect  
   
  Recommending Mathematical Tasks  
   
  25  
   
  Table 3. Hyperparameters in the environment conﬁguration. Length (%) is related to the maximum episode length and the relative percentage compared to the number of possible actions. n◦ t: is the number of thresholds included in the environment for that module. dt: is the diﬃculty threshold. t: is the threshold value. N is the number of complete subjects’ recordings for each module. Module Environment conﬁguration length (%) n◦ t dt 1  
   
  20 (+82%)  
   
  2 3 4  
   
  t  
   
  N  
   
  [−2.80, −1.96, .03, .57] [10.5, 15.5, 25.9, 28.3]  
   
  131  
   
  20 (+150%) 3  
   
  [−1.05, 0, 2]  
   
  [10.5, 23, 25]  
   
  129  
   
  8 (+100%)  
   
  [1.11, 2.56]  
   
  [10.5, 15.1]  
   
  132  
   
  20 (+150%) 3  
   
  [−0.15, 0.63, 2.20]  
   
  [10.5, 16, 26]  
   
  5  
   
  10 (+150%) 3  
   
  [−0.15, 1.05, 1.60]  
   
  [10.5, 15.4, 19.3]  
   
  6  
   
  10 (+100%) 3  
   
  [0.63, 1.05, 2.02]  
   
  [10.5, 13, 15]  
   
  7  
   
  20 (+150%) 3  
   
  [−0.75, 0.33, 1.17]  
   
  [10.5, 22.4, 32.2]  
   
  53  
   
  8  
   
  10 (+100%) 4  
   
  [18.7, 27, 38, 48]  
   
  [−1.24, 0.03, 0.75, 3, 22]  
   
  44  
   
  [10.5, 24.3, 33, 40]  
   
  4 2  
   
  9  
   
  20 (+54%)  
   
  4  
   
  [−2.68, −1, 0, 1]  
   
  10  
   
  25 (+79%)  
   
  4  
   
  [−0.27, 0.33, 1.12, 2.62] [14.525, 17.31, 23, 31.5]  
   
  87 99 100  
   
  50 21  
   
  Fig. 1. Comparing the Performance of RL Algorithms and Baseline Across Modules. Average reward after 1000 episodes comparing Baseline, PPO, and A2C recommendations.  
   
  is particularly relevant because of the signiﬁcance of allowing learners to determine their own diﬃculty level. As previously mentioned, interventions aimed at establishing personal academic goals are a crucial component in promoting student success. Moreover, by facilitating goal setting, students can develop a stronger sense of agency, intrinsic motivation, and self-directed learning skills.  
   
  26  
   
  M. Orsoni et al.  
   
  Table 4. Performances comparison in the average reward between PPO and Baseline and A2C and Baseline actions. The values are expressed in percentual terms. Module PP0/Baseline A2C/Baseline 1 2 3 4 5 6 7 8 9 10  
   
  +14.61 +13.98 +8.00 +78.94 +4.50 +22.39 +13.83 +38.72 +9.20 +24.11  
   
  +3.44 +2.08 +1.47 −1.87 +0.9 +1.1 +2.53 −8.99 +7.69 +1.27  
   
  Avg  
   
  +22.83  
   
  +1.29  
   
  The results demonstrate that incorporating RL solutions leads to improved performance, as measured by the average reward collected by the agents over 1000 episodes. Speciﬁcally, as highlighted in the results section, the PPO algorithm outperforms the A2C algorithm in every module, achieving an average reward that is 22.83% higher than the baseline. Nevertheless, some considerations have to be mentioned. Firstly, while we have seen an improvement in the average reward collected, we need to determine if the recommendations beneﬁt students. A future study should investigate this aspect more thoroughly. Secondly, our study used oﬄine students’ data for which we had complete answers for a module. It allowed us to use each episode as a new user and the answers as a transition over time for a speciﬁc user for that episode. This approach led to a policy strictly dependent on the answers collected, the students who answered all the items in each module, and the sample size and the possible transitions it learned. We only had a few dozen subjects for some modules who answered the entire set of items. In future studies, we plan to use this policy as a starting point and enhance it by incorporating online interaction between the user and the system. In addition, we used arbitrary thresholds derived from the estimated total score of the IRT solution, but there may be better options for achieving better results on test evaluations. In a future study, we plan to integrate this aspect by ﬁnding the best possible thresholds for each module that can provide the most informative guide for students to succeed on test evaluations. Lastly, we focused on item diﬃculty rather than the student’s ability to solve a speciﬁc task. A future study should include this aspect in the RL environment to suggest items that also consider the student’s ability to solve them.  
   
  Recommending Mathematical Tasks  
   
  6  
   
  27  
   
  Conclusion  
   
  This study presented a system for enhancing item recommendations for ﬁrstyear bachelor’s computer science students taking a mathematics module. The integration of Reinforcement Learning (RL) and Item Response Theory (IRT) allowed for personalized and adaptive recommendations based on the estimated diﬃculty threshold, enabling the system to suggest items within the user-selected scale while avoiding items for which the student has already achieved the maximum possible score. Results showed that incorporating RL solutions improved performance as measured by the average reward collected by the agents over 1000 episodes. Speciﬁcally, the proximal policy optimization algorithm outperformed the A2C algorithm in every module, achieving an average reward that is 22.83% higher than the baseline. Overall, this study provides valuable insight into the eﬀectiveness of using IRT and RL for dynamic diﬃculty adjustment and the beneﬁts of personalized task recommendation in educational settings. The proposed method can potentially improve learning outcomes and engagement in the domain of mathematics as well as other areas. Acknowledgments. The authors would like to thank the German Federal Ministry of Education and Research (BMBF) for their kind support within the project Personalisierte Kompetenzentwicklung und hybrides KI-Mentoring (tech4compKI) under the project id 16DHB2208.  
   
  References 1. Arey, D., Wells, E.: Balancing act: «the art and science of dynamic diﬃculty adjustment». In: Game Developers Conference (2001) 2. Chalmers, R.P.: Mirt: a multidimensional item response theory package for the R environment. J. Stat. Softw. 48, 1–29 (2012) 3. Constant, T., Levieux, G.: Dynamic diﬃculty adjustment impact on players’ conﬁdence. In: Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems, pp. 1–12 (2019) 4. Csikszentmihalyi, M.: Flow. The Psychology of Optimal Experience. New York (Harperperennial) (1990) 5. Embretson, S.E., Reise, S.P.: Item Response Theory. Psychology Press (2013) 6. Hill, A., et al.: Stable baselines3 (2020). https://github.com/DLR-RM/stablebaselines3 7. Hori, K., Fukuhara, H., Yamada, T.: Item response theory and its applications in educational measurement part i: item response theory and its implementation in R. WIREs Comput. Stat. 14(2), e1531 (2022) 8. Leite, W.L., et al.: A novel video recommendation system for algebra: an eﬀectiveness evaluation study. Association for Computing Machinery, New York (2022) 9. Lopes, J.C., Lopes, R.P.: A review of dynamic diﬃculty adjustment methods for serious games. In: Pereira, A.I., Košir, A., Fernandes, F.P., Pacheco, M.F., Teixeira, J.P., Lopes, R.P. (eds.) OL2A 2022. CCIS, vol. 1754, pp. 144–159. Springer, Cham (2022). https://doi.org/10.1007/978-3-031-23236-7_11 10. Mnih, V., et al.: Asynchronous methods for deep reinforcement learning. In: International Conference on Machine Learning, pp. 1928–1937 (2016)  
   
  28  
   
  M. Orsoni et al.  
   
  11. AI for Research: Student goal setting: an evidence-based practice student goal setting (2018) 12. Schulman, J., Wolski, F., Dhariwal, P., Radford, A., Klimov, O.: Proximal policy optimization algorithms. In: International Conference on Learning Representations (2017) 13. Stelnicki, A.M., Nordstokke, D.W., Saklofske, D.H.: who is the successful university student? an analysis of personal resources. Can. J. High. Educ. 45(2), 214–228 (2015) 14. Sutton, R.S., Barto, A.G.: Reinforcement learning: an introduction. J. Artif. Intell. Res. 4, 1–53 (1998) 15. Tvarožek, J., Kravčík, M., Bieliková, M.: Towards computerized adaptive assessment based on structured tasks. In: Nejdl, W., Kay, J., Pu, P., Herder, E. (eds.) AH 2008. LNCS, vol. 5149, pp. 224–234. Springer, Heidelberg (2008). https://doi. org/10.1007/978-3-540-70987-9_25 16. Vygotsky, L.S., Cole, M.: Mind in Society: Development of Higher Psychological Processes. Harvard University Press (1978) 17. Xue, S., Wu, M., Kolen, J., Aghdaie, N., Zaman, K.A.: Dynamic diﬃculty adjustment for maximized engagement in digital games. In: Proceedings of the 26th International Conference on World Wide Web Companion, pp. 465–471 (2017) 18. Zhang, Y., Goh, W.: Personalized task diﬃculty adaptation based on reinforcement learning. User Model. User-Adap. Inter. 31, 753–784 (2021)  
   
  Automatic Execution of the Ontological Piloting Procedures Marc-Antoine Courtemanche1(B) , Ange Tato2 , and Roger Nkambou1 1  
   
  Universit´e du Qu´ebec ` a Montr´eal, Montr´eal, Canada [email protected]  , [email protected]  2 ´ Ecole de technologie sup´erieure, Montr´eal, Canada nyamen tato.angea [email protected]   
   
  Abstract. Intelligent educational systems currently use ontological knowledge modeling for their expert component. The associated semantics of the ontological languages allow for capturing highly complex domain knowledge. However, the automatic manipulation of knowledge to support the execution of a complex task by humans is a current research issue. This paper presents a solution for interpreting a complex ontological knowledge formalization about aircraft piloting procedures. This speciﬁc task is accomplished by human actors where multiple biases may compromise the safe execution. We are developing a solution to support pilots in their tasks’ execution. The domain theory interpretation must allow the reference model’s automatic execution in a complex environment. A reference model of the domain theory has been formalized with ontological language, a task ontology for the execution taxonomy, and a domain ontology containing the knowledge about the execution environment have also been previously developed. In this work, we propose an interpretor capable of manipulating the reference knowledge of the execution taxonomy within a simulation environment. Semantic rules are used to evaluate environmental constraints, task precondition, and execution to allow this automatic manipulation and execution. Once the solution is connected to a simulation environment, a reasoner manipulates the knowledge in order to evaluate the environment and autonomously execute the required tasks. This work is an intermediary step for providing a complete solution for supporting pilots’ execution of reference procedures in a simulation environment. Keywords: Ontology · Task Ontology Tutoring Systems · Piloting procedures  
   
  1  
   
  · Domain Ontology · Intelligent · Knowledge representation  
   
  Introduction  
   
  Air travel is considered a highly eﬃcient and safe means of transportation over long distances. To maintain safe operations and support the public’s conﬁdence, multiple procedures must be followed to identify, control and manage the risk associated with this operation. By executing procedures in a very dynamic and c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 29–41, 2023. https://doi.org/10.1007/978-3-031-32883-1_3  
   
  30  
   
  M.-A. Courtemanche et al.  
   
  complex environment, pilots have an important role in the safe execution of ﬂight procedures. Since humans accomplish the procedures, multiple human factors can aﬀect the level of attention of the pilots. To support safe execution, aircraft manufacturers are providing piloting procedures that must be followed. We are developing a solution for supporting the execution of piloting procedures. Our work provides intelligent systems for following and monitoring the execution within a complex environment. The goal is to support the pilot, not to replace the human, who is an essential actor that can sometimes be limited by standard human factors. With this perspective of supporting the execution of piloting procedures, we previously suggested a reference model for piloting procedures [4]. This reference model is a set of production rules with a high semantic link to the execution environment in order to provide a framework for automatic problem resolution. In other words, the normal and abnormal procedures are decomposed with production rules to identify the pilots’ expected actions for each situation. This automatic resolution is accomplished by integrating the environmental parameters in the reference framework. Previously, Mitrovic et al. (2003) suggested a set of production rules as the procedural knowledge that can support a process of task execution monitoring once it is linked to declarative knowledge [12]. In this paper, we propose a framework for interpreting and automatically executing the production rules contained in the reference model. This execution framework has to take advantage of the procedural and declarative knowledge available. Since the reference model is highly linked to the execution environment, we suggest integrating the execution with a simulation environment. The next sections are structured as follows. In Sect. 1, issues and related work are presented. Section 2 presents the reference model’s general taxonomy structure comprising tasks and domain ontologies. In Sect. 3, the results of the reference model interpretor are detailed. Section 4 concludes the paper and suggests future work perspectives.  
   
  2  
   
  Issues and Related Work  
   
  The reference model [4] is formalized with Web Ontology Language (OWL) [20], which is a language that supports a high level of detail with deﬁned semantic links with the elements of the taxonomy. The reference model contains the reference knowledge required for the execution but cannot automatically execute the reference procedures and monitoring capabilities. Previously, ontologies have been used for the formalization of procedural rules. Mizoguchi and Bourdeau [14] support ontological engineering as a levering alternative to the major drawbacks that intelligent tutoring systems face. Using ontology to formalize execution rules, they demonstrated high support speciﬁc to procedural knowledge. Multiple intelligent tutors have used production rules as their base framework e.g. Cognitives Tutors [2,3]. Mizoguchi [13] suggests PROLOG for specifying a set of rules that the intelligent tutor can use for interpreting the data by inference reasoning. The rules are the scenario theory that is used by the intelligent tutor  
   
  Automatic Execution of the Ontological Piloting Procedures  
   
  31  
   
  for understanding and interpreting the knowledge acquired by the student. The rules are used in a forwarding and backward reasoning strategy, allowing the system to understand how the student interacts with the knowledge. Others used ontology as the main method for formalizing the theory of a learning system. Speciﬁcally, SMARTIES is a software allowing the modelisation of speciﬁc knowledge by exploiting the OMNIBUS ontology that is speciﬁc to education [5]. One major problem of some intelligent tutoring systems is the lack of quality in designing the scenarios. The SMARTIES software and OMNIBUS ontology support this problem by suggesting a set of tools for supporting the formalization of high-quality domain knowledge. Based on the cognitive architecture ACT-R, Oltramari & Lebiere [16] used ontologies to formalize production rules to exploit their semantic characteristics and allow the cognitive tutor to understand the structures and substructure of the procedural knowledge. Despite the high quality of procedural knowledge formalization provided by semantic links speciﬁc to ontological knowledge, the main issue is the execution of the model. Other works have shown the advantage of using ontologies, but none of these works have provided an execution model speciﬁc to ontological procedural knowledge. Our objective is to suggest an alternative to this limitation that some authors are facing. By providing a way of execution, the reference model we previously presented should be more accessible and usable in diﬀerent simulation environments. However, the automatic execution of the model is not the only issue required for the interoperability of the architecture. Ontological knowledge is typically not supported by aircraft simulator software. Because of that limitation, we have to provide an alternative for keeping the high ﬂexibility of the ontological knowledge but providing a way to receive and send data to the environment with a standard programming language that is typically used by simulation software. In the aviation domain, ontology engineering is used to support some of the operation processes. Since multiple actors from multiple locations are involved in the process of aircraft operation, the choice of ontology is supported by its ﬂexibility. Since diﬀerent systems operating with diﬀerent software are incompatible, the ontology is a good choice for interoperability. Air Traﬃc Management Ontology (ATMONTO) [7,8] contains knowledge about airspace, ﬂight characteristic, and ﬂight operation condition for the United States. This ontology is supported by the NASA AMES research center to support the interoperability between multiple actors with diﬀerent standards. Supported by ATMONTO, Sheng at al. [17] suggests an ontology for decision-making about trajectories and weather. In this ontology, a representation of the spatial and temporal factors supports the process of trajectory decisions for safe and eﬃcient destinations. By using an ontology-based system for automating the decision process, a high volume of data cannot be processed by humans to support high-quality decision-making. None of the existing work has focused on an interpretor and automatic execution of the production rules contained in a reference model ontology of piloting procedures.  
   
  32  
   
  3  
   
  M.-A. Courtemanche et al.  
   
  The Reference Model  
   
  Our reference model ontology comprises two main parts and is formalized with Web Ontology Language (OWL) [20]. The ﬁrst part is the domain ontology which is the terminological set related to the execution environment. The main objective is to support the execution within the complex environment. The other part is the task ontology, a general taxonomy of the execution domain speciﬁc to aviation procedures. Both ontologies are highly related, and multiple semantic connections are formalized between parts of both ontologies, making the execution model anchored to the context. Before being formalized within the ontologies, expert pilots must decompose and validate the procedure. With this objective in mind, normal and abnormal procedures commonly encountered during takeoﬀ have been decomposed with a standardized visual tool. The statechart diagram from the Uniﬁed Modeling Language (UML) [10] has been selected for its capability of capturing knowledge speciﬁc to workﬂow sequence. This choice has been supported by its characteristic of being simple and easily manipulated by domain experts with no prior experience with ontology. Many works have used the UML as a standard for decomposing procedural knowledge in the aviation domain. The Aviation Scenario Deﬁnition Language (ASDL), in its context, is a language that shows the possibility of formalizing aircraft navigation scenarios within the environment where multiple actors are involved [6]. However, the ASDL has not demonstrated its eﬀectiveness for modeling the task speciﬁcally accomplished by the pilots. Figure 1 shows an excerpt of the abnormal procedure where one engine is inoperative during the takeoﬀ and above the decision speed. Following the UML standard, each box is a speciﬁc state of the aircraft and the arrows are a change imposed in the environment by the pilots.  
   
  Fig. 1. Except of the engine failure procedure after decision speed.  
   
  Automatic Execution of the Ontological Piloting Procedures  
   
  3.1  
   
  33  
   
  The Domain Ontology  
   
  The domain ontology is a terminological set related to the aviation domain. Formalized with the OWL language, this ontology contains the parameter of the execution environment. The parameters stored in this ontology are used as a reference for the production rules stored in the task ontology. Since the execution rules are constrained to speciﬁc environment parameters, the reference model stores the speciﬁc values that must be evaluated in the domain ontology. The exact process is used for the action that has to be executed in the environment. The changes are pushed to the domain ontology. Since multiple parameters must be stored in this taxonomy, the domain ontology has a general class with three specializations (see Fig. 2). There is a short deﬁnition of these classes: – Environment: the main general class composed of the three specialized classes. – Aircraft inside environment: contains all parameters that can be found inside the aircraft. Here we can ﬁnd the position of diﬀerent switch and instruments values normally inside the cockpit. – Aircraft outside environment: contains all parameters of the environment outside the aircraft. Wind speed, aircraft position, airspeed, etc. are parameters that can be found in this specialization. – Aircraft systems: some aircraft systems that are not physically outside or inside the aircraft have to be considered. Diﬀerent systems like the landing gear and engine parameters can be found in this group.  
   
  Fig. 2. Domain ontology  
   
  3.2  
   
  The Task Ontology  
   
  The task ontology is the main terminological set around which the execution is structured. Within this ontology, we can ﬁnd a general terminology speciﬁc to the execution domain. In other words, it is the execution structure used to decompose the reference procedures. This execution decomposition is linked to the execution environment by strong semantic links to the domain ontology. To better understand the objective of a task ontology, this deﬁnition shows the important aspect of a task ontology: “Task ontology is a system of vocabulary  
   
  34  
   
  M.-A. Courtemanche et al.  
   
  for describing the problem-solving structure of all the existing tasks domainindependently. It is obtained by analyzing task structures of real-world problems. The task ontology design is done to overcome the shortcomings of generic tasks and half weak methods while preserving their basic philosophies. The ultimate goal of task ontology research includes providing vocabulary necessary and suﬃcient for building a model of human problem-solving processes.” [15]. By analysis and decomposition of the general execution process speciﬁc to the execution of aircraft piloting procedures, we built a speciﬁc taxonomy of task execution. Figure 3 is a visual representation of the task ontology. Each class of the task ontology has a speciﬁc meaning. There is a short deﬁnition for each of the terms used for decomposing the procedures: – Task: this is the main axiom of the task model. Each task is abstract, with speciﬁc identiﬁcation (ID) and associated parameters. – Capability: each task has to be accomplished by the pilot ﬂying or the pilot monitoring. The goal of the capability is to associate which of the pilot has to accomplish each speciﬁc task. – Person: independently of the capability of execution, the pilot ﬂying and pilot monitoring can be the pilot or copilot. This term speciﬁes the role of the pilot and the copilot. – Precondition: this axiom speciﬁes other tasks that must be accomplished before permitting the execution of other tasks. This term allows capturing the chronological order in which the task has to be executed. – ExecutionStatus: this axiom speciﬁes whether or not each speciﬁc task is accomplished. This execution status is a way of monitoring the execution process. – Action: with strong links to the domain ontology, this axiom speciﬁes the action to impose on the environment. The action parameter and the value imposed on the environment are speciﬁed with this axiom. – Constraint: since the task execution has to be restricted to a speciﬁc environment state, this axiom speciﬁes the parameter and the value that has to be reached before allowing the execution. Multiple types of constraints can be formalized. Some restriction is strict value, minimum value, or maximum value. Combined with the precondition restriction, a strong semantic link to the environment from the constraints limits the execution to speciﬁc parameters. – Attention: each of the tasks has an attention score associated with the workload required for the execution of the task. This level of attention required for the execution of a task is semantically anchored to the execution model. By linking the attention data to the execution model, we are providing an eﬃcient way of monitoring the level of attention during the automatic execution of the procedures.  
   
  Automatic Execution of the Ontological Piloting Procedures  
   
  35  
   
  Fig. 3. Domain ontology  
   
  4  
   
  Results  
   
  As previously stated, the literature is not providing a solution for the automatic execution of ontological task models. We built an execution structure based on the task ontology to support this lack of execution alternatives. 4.1  
   
  The Interpretor  
   
  To support the execution model, we are suggesting the integration of Semantic Web Rule Language (SWRL) [19] which integrates the syntax in the form of “Horn” rules that are typically not supported in the semantic of OWL [11]. SWRL is a rule language formalism built on top of ontologies to support some semantic limitations. Integrating this new syntax aims to reason with the knowledge previously formalized with OWL. SWRL rules consist of an antecedent or conditions (body) and a consequent (head). Rule 1 is a generic example showing how we can specify multiple levels of relations between family members with the SWRL syntax. hasP arent(A, B) Λ hasBrother(B, C) → hasU ncle(A, C)  
   
  (1)  
   
  Using the SWRL syntax, we built a set of rules for exploiting the decomposition of execution of the task ontology (see Fig. 3). Once the rules are executed together, the reference model is automatically executable. The execution rules are grouped within one of the three following groups: – Constraint evaluation: this set of rules is speciﬁc to evaluating the environment. Since some of the tasks are restricted to a speciﬁc environment state,  
   
  36  
   
  M.-A. Courtemanche et al.  
   
  the task ontology speciﬁes the required parameters for permitting the execution. For each of the task, the constraint is speciﬁed in the task ontology (see Fig. 3). Once the environment meets the constraint, the constraint authorization is given to the task. This authorization is later used by the sets of rules speciﬁc to the execution. Equation 2 is one of the constraint evaluation rules where the environment parameter has to be between two values. The minimum and maximum values are stored in the task ontology, and the actual value of the environment is pulled from the domain ontology. Once the value from the environment is between the minimum and maximum acceptable value, the constraint permission is attributed. task : Constraint(?c)Λ task : hasEvaluationCriteria(?c, ?ec) Λ dom : hasActualV alue(?ec, ?val)Λ task : hasM inV alue(?c, ?minval) Λ task : hasM axV alue(?c, ?maxval)Λ swrlb : lessT han(?val, ?maxval) Λ swrlb : greatherT han(?val, ?minval) → task : hasConstraintP ermissionΛ (?c, task : ConstraintOk)  
   
  (2)  
   
  – Precondition evaluation: since the task execution model has to be executed with a speciﬁc chronological order, the precondition is a set of rules restricting the execution to a ﬂexible order. This order is speciﬁed by the task ontology, where a speciﬁc task has to be executed before permitting the execution of other tasks. Since this precondition evaluation is only between the tasks, the rules are only related to the task structure. This set of rules does not refer to the domain ontology. Equation 3 is one of the rules evaluating the status of execution of the task that has to be executed before permitting the execution of the next task. Once the previous task is executed, precondition permission is attributed to the task currently at evaluation. task : T ask(?t)Λ task : hasP recondition(?t, ?pc) Λ dom : hasExecutionStatus(?pc, task : Executed) → task : hasExecutionP ermission Λ (?t, task : P reconditionOk)  
   
  (3)  
   
  – Task execution: once the constraint and the task precondition is met, this set of rules is triggered for executing the task. The consequent of the rules is the actual execution in the environment by manipulating the parameters in the domain ontology (see Fig. 2). Since the environment is highly dynamic and the execution is restricted to a speciﬁc order, only one task can be executed at a speciﬁc time (no parallel execution). Once the execution is triggered, the actions associated with the task are gathered and pushed to the environment. The action is contained in the task ontology where the parameter of the domain ontology and the values to push are speciﬁed. The rule retrieves the parameters and values, and the action parameter is directly modiﬁed in the domain ontology, which is the speciﬁc execution process. Equation 4 is one of the execution rules where the task has two constraints and two actions. We  
   
  Automatic Execution of the Ontological Piloting Procedures  
   
  37  
   
  can see how the actions associated with the task are semantically forwarded to the domain ontology. task : T ask(?t)Λ task : hasN bConstraint(?t, 1)Λ task : hasN bAction(?t, 1) Λ task : hasP reconditionP ermission(?t, task : P reconditionOk) Λ task : hasConstraint(?t, ?c1)Λ task : hasConstraintP ermission(?c1, task : ConstraintOk)Λ task : hasAction(?t, ?a1)Λ task : hasActionP arameter(?ap1, ?ap1)Λ task : hasActionV alue(?a1, ?av1) → task : hasExecutionStatus(?t, task : Executed) Λ task : hasActionP arameter(task : LiveExecution, ?ap1) Λ task : hasActionV alue(task : LiveExecution, ?av1)  
   
  (4)  
   
  These rules are highly related to the task ontology (see Fig. 3). By following this speciﬁc taxonomy, we ensure that by adding production rules in the future, they will be fully supported by the execution model. We can also note that each of the rules set has to make a speciﬁc link between the task and domain ontologies. The speciﬁc links are formalized in the task ontology and evaluated or executed during the execution of the model. In order to let the interpretor execute the rules automatically, we have to use a reasoner supporting OWL knowledge and SWRL rules. In other words, the reasoner is activating the rules allowing the automatic manipulation of the knowledge. Pellet has been selected for its ability to support the description logic associated with OWL, and the individuals with its ability to support SWRL rules [18]. Multiple reasoners are available, but the ability to reason over the individuals by using the SWRL rules makes Pellet an eﬃcient choice. According to Abburu and Sunitha [1], the following reasoner supports SWRL rules and individuals: RACER, SWRL-IQ, or HermiT. 4.2  
   
  The Execution Process  
   
  From Fig. 1, we took an excerpt of task 1083, which is available in Fig. 4. To execute this task, we have to evaluate the task precondition, the constraint from the environment, and then execute the task. For the execution process, data from the task ontology are available in Fig. 5. The process of task execution is as follows: 1. Constraint evaluation: as shown in Fig. 5 and 4, the constraint of task ID 1083 is the constraint with ID 10071 (see Fig. 6). This constraint speciﬁes that the left engine has to be inoperative to allow the execution. For this constraint, the Rule 2 ﬁnds the evaluation criteria of the constraint ID 10071 (see Fig. 6), which is the left engine operation state, retrieves the actual value, and if the value shows that the engine is inoperative, the rule is triggered. The constraint permission is attributed to the task.  
   
  38  
   
  M.-A. Courtemanche et al.  
   
  Fig. 4. Excerpt of the statechart diagram for task ID 1083  
   
  Fig. 5. Excerpt of the task ontology for task ID 1083  
   
  2. Precondition evaluation: from Fig. 5 we can see that the task precondition is another task with the ID 1082. In order to retrieve the execution status of the previous task and authorize the execution, Rule 3 uses the ID of the previous task to ﬁnd the execution status. If the previous task is executed, task ID 1082 receives the precondition authorization. 3. Task execution: once the precondition and constraint authorization are given, the execution rule is triggered and the execution is automatically pushed to the environment. For task ID 1083, Rule 4 evaluates this precondition and constraint and takes the parameter and value from the associated action (action ID 57) (see Fig. 6) speciﬁed in Rule 5. Once the rule is triggered, the parameter and value from action ID 57 (see Fig. 6) are pushed to the domain ontology. This new value is automatically executed in the environment, representing a pilot’s actual execution.  
   
  Automatic Execution of the Ontological Piloting Procedures  
   
  39  
   
  Fig. 6. Excerpt of the task ontology  
   
  4.3  
   
  The Simulation Environment  
   
  The rules presented in the previous section allow us to interpret the reference model autonomously. To use the reference model in a simulation environment, we have to provide a standard way of exchanging data. Since ontology languages and SWRL rules are not standard languages actively usable with programming languages, we have to provide a way of using the interpretor with standard programming languages. For supporting this need, the OWLReady [9] library for supporting the usability with the Python language has been selected. OWLReady supports SWRL rules and the reasoner Pellet, which allows the manipulation of the ontologies with Python code. The advantage of using Python for the interaction with the simulation environment is the possibility of using the solution with other simulation environments. Currently, the execution model is tested with X Plane which is a basic simulation environment. At another level, the reference model will be connected and tested with a more sophisticated aircraft simulator used by Bombardier and CAE.  
   
  5  
   
  Conclusion  
   
  In this paper, we proposed an interpretor capable of manipulating the knowledge about the reference procedures for piloting an aircraft. The task and domain taxonomies and their speciﬁc characteristics for the execution have been presented. Semantic links between those two ontologies make the execution model highly related to the execution environment. The interpretor is presented as a set of SWRL rules capable of manipulating the knowledge in order to execute the reference model autonomously. Diﬀerent groups of rules allow a complete execution strategy: constraint evaluation, precondition evaluation, and execution. Since the model has to be executed within a simulation environment, we suggested a library for using the model with a well-known programming language. This work is an intermediary step for a solution that will follow the execution of the procedures of a human pilot within a simulation environment. Future work will focus on the task of monitoring the execution of the normal and abnormal  
   
  40  
   
  M.-A. Courtemanche et al.  
   
  procedures by a human pilot in a simulation environment. For this purpose, we are seeing a monitoring strategy based on a cognitive agent capable of following the execution and giving recommendations to the pilot. Acknowledgments. We acknowledge the support of CRIAQ, the Natural Sciences and Engineering Research Council of Canada (NSERC), CAE, Bombardier, and BMU.  
   
  References 1. Abburu, S.: A survey on ontology reasoners and comparison. Int. J. Comput. Appl. 57(17) (2012) 2. Chang, M., D’Aniello, G., Gaeta, M., Orciuoli, F., Sampson, D., Simonelli, C.: Building ontology-driven tutoring models for intelligent tutoring systems using data mining. IEEE Access 8, 48151–48162 (2020) 3. Corbett, A., Kauﬀman, L., Maclaren, B., Wagner, A., Jones, E.: A cognitive tutor for genetics problem solving: learning gains and student modeling. J. Educ. Comput. Res. 42(2), 219–239 (2010) 4. Courtemanche, M.A., Tato, A., Nkambou, R.: Ontological reference model for piloting procedures. In: Crossley, S., Popescu, E. (eds.) ITS 2022. LNCS, vol. 13284, pp. 95–104. Springer, Cham (2022). https://doi.org/10.1007/978-3-031-09680-8 9 5. Hayashi, Y., Bourdeau, J., Mizoguchi, R.: Structurization of learning/instructional design knowledge for theory-aware authoring systems. In: Woolf, B.P., A¨ımeur, E., Nkambou, R., Lajoie, S. (eds.) ITS 2008. LNCS, vol. 5091, pp. 573–582. Springer, Heidelberg (2008). https://doi.org/10.1007/978-3-540-69132-7 60 6. Jafer, S., Chhaya, B., Durak, U., Gerlach, T.: Formal scenario deﬁnition language for aviation: aircraft landing case study. In: AIAA Modeling and Simulation Technologies Conference (2016) 7. Keller, R.: Building a knowledge graph for the air traﬃc management community. In: Companion Proceedings of the 2019 World Wide Web Conference, pp. 700–704 (2019) 8. Keller, R.M.: Ontologies for aviation data management. In: 2016 IEEE/AIAA 35th Digital Avionics Systems Conference (DASC), pp. 1–9. IEEE (2016) 9. Lamy, J.B.: Ontologies with Python. Apress, Berkeley (2021) 10. Larman, C.: UML 2 et les design patterns: analyse et conception orient´ees objet (2005) 11. MacLarty, I., Langevine, L., Bossche, M.V., Ross, P.: Using SWRL for rule-driven applications (2009). Accessed 9 Feb 12. Mitrovic, A., Koedinger, K.R., Martin, B.: A comparative analysis of cognitive tutoring and constraint-based modeling. In: Brusilovsky, P., Corbett, A., de Rosis, F. (eds.) UM 2003. LNCS (LNAI), vol. 2702, pp. 313–322. Springer, Heidelberg (2003). https://doi.org/10.1007/3-540-44963-9 42 13. Mizoguchi, F.: Prolog based expert system. N. Gener. Comput. 1(1), 99–104 (1983) 14. Mizoguchi, R., Bourdeau, J.: Using ontological engineering to overcome common AI-ED problems. J. Artif. Intell. Educ. 11, 107–121 (2000) 15. Mizoguchi, R., Vanwelkenhuysen, J., Ikeda, M.: Task ontology for reuse of problem solving knowledge. In: Towards Very Large Knowledge Bases, pp. 46–59. IOS Press (1995) 16. Oltramari, A., Lebiere, C.: Mechanisms meet content: integrating cognitive architectures and ontologies. In: 2011 AAAI Fall Symposium Series (2011)  
   
  Automatic Execution of the Ontological Piloting Procedures  
   
  41  
   
  17. Sheng, Y., Chen, X., Mo, H., Chen, X., Zhang, Y.: An ontology for decision-making support in air traﬃc management. In: Liang, Q., Wang, W., Mu, J., Liu, X., Na, Z., Chen, B. (eds.) Artiﬁcial Intelligence in China. LNEE, vol. 572, pp. 458–466. Springer, Singapore (2020). https://doi.org/10.1007/978-981-15-0187-6 55 18. Sirin, E., Parsia, B., Grau, B.C., Kalyanpur, A., Katz, Y.: Pellet: a practical OWLDL reasoner. J. Web Semant. 5(2), 51–53 (2007) 19. W3C: SWRL: a semantic web rule language combining owl and RuleML (2004) 20. W3C: OWL 2 web ontology language: structural speciﬁcation and functional-style syntax (2nd edn) (2012). https://www.w3.org/TR/owl2-overview/  
   
  Method and Tools to Supporting Math Learning in Inclusive Education of Blind Students Michał Ma´ckowski1(B) , Mateusz Kawulok1 and Dominik Spinczyk2  
   
  , Piotr Brzoza1  
   
  ,  
   
  1 Department of Distributed Systems and Informatic Devices, Silesian University of  
   
  Technology, Gliwice, Poland [email protected]  2 Department of Medical Informatics and Artificial Intelligence, Silesian University of Technology, Zabrze, Poland  
   
  Abstract. This study presents a math tutoring platform designed to teach sighted and blind students using audio-tactile graphics in an inclusive educational setting. The platform‘ provides alternative means for presenting information typically included as images in mathematical exercises via tablets and an audio-touch interface. The research used a prepared set of 40 exercises on the properties of geometric figures, and it covered 5 inclusive classrooms at the primary school level during one semester of the school year. The proposed evaluation method of the platform considered several factors: students’ learning progress (stored using the knowledge vector and error vector mechanisms), teacher-student and studentstudent communication, a detailed assessment of the student’s way of solving the exercise via a module used by the teacher, and the possibility of group work. The results indicate that the developed method and accompanying tools support group work and increase the independence of blind students in the process of learning mathematics. The platform also increases communication with and detailed ongoing assessment of the student’s progress by the teacher. Keywords: inclusive education · math tutoring platform · collaborative math learning · alternative method of audio-tactile presentation · augmented learning strategies  
   
  1 Introduction Education is supposed to prepare students for the challenges of the modern world. Inclusive education can achieve this goal. It can be defined as a teaching model whereby all students, regardless of their ability, learn together in one environment [1]. Inclusive education creates a space to ensure the participation of every child and student in the learning process [2, 3]. Inclusive education does not assume the preparation of a separate education path, but aims to meet individual needs through curricular and extracurricular group activities [3, 4]. The teacher uses several methods to teach the same content [5, 6], allowing each student can find the optimal way of learning and fully participate in classes. © The Author(s), under exclusive license to Springer Nature Switzerland AG 2023 C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 42–53, 2023. https://doi.org/10.1007/978-3-031-32883-1_4  
   
  Method and Tools to Supporting Math Learning  
   
  43  
   
  The popularity of inclusive education has grown in recent years. Most children with blindness, and especially low vision children, now start their education in mainstream schools [4]. This trend has been confirmed by the European Agency Statistics on Inclusive Education (EASIE) [7]. The statistics tracked the placement of children/learners with recognized special educational needs (SEN) in inclusive or special settings for almost all European countries over the last decade. They showed that the number of students with SEN educated in mainstream (pre-)schools as compared to special (pre-) schools has been growing year by year [7]. Despite the mentioned advantages, inclusive education encounters many problems and obstacles. A systematic review on inclusive education of students with visual impairment focused on two aspects: perceptions of general education teachers, and challenges faced by students with blindness [1]. Research shows that teachers and students need effective teaching-learning tools and access to learning materials [5, 8]. The teachers must consider the barriers faced by blind students when designing instructional methods for them. In the context of classroom activities, students with blindness may encounter difficulties related to school activities [2]. These challenges inspired us to develop a tool and method to support inclusive mathematics education for people with blindness while learning science subjects (our study focuses on learning mathematics). The method assists both the teacher and student while simultaneously supporting the teaching process. This paper presents our math tutoring platform designed to teach sighted and blind students in inclusive education using audio-tactile graphics. The platform uses augmented learning strategies to adapt the presentation of math exercises to meet the needs and overcome the limitations of students with blindness. It allows students with blindness to solve the same exercises as those solved by sighted students, while remotely supervised by a teacher. Educators using the platform can identify students’ difficulties by monitoring their progress while solving exercises, as well as track how students with blindness explore images.  
   
  2 Related Works In recent years, there has been rapid development of tools such as educational software, e-learning platforms, and assistive technologies. The latter include screen readers and magnifiers, which allow everyone to use digital materials. The basic source of information in the humanities is text, which can be easily scanned, recognized, and read using speech synthesizers. People who are blind process cognitive information in the same way as sighted students. However, they must assemble information through haptic or auditory channels, which as other researchers have noted [9, 10], can be a disadvantage. Although the modes of information collection are clearly different between blind and sighted students, their cognitive structures and operation process are the same [11]. It is necessary to prepare materials, media, or techniques that help all students accomplish learning goals. Teachers should provide various assessment methods, materials on how to teach students with blindness, and other aids to ensure equal access to the learning process for all students [5, 12].  
   
  44  
   
  M. Ma´ckowski et al.  
   
  Despite the rapid development of information technologies, inequality persists in the access to information for sighted students and those who are blind. This disparity is especially apparent in the case of multimedia platforms or technical data including specific symbols, diagrams, or other formats inaccessible to blind people. In other words, extant technologies in many ways are not capable of automatically transforming such data into forms accessible to those who are blind [13]. Mathematics and math science face this problem. Both presenting such information to blind students and gauging their understanding of the material remains challenging. Images play a significant role in science subjects, as the presentation of information is mainly visual and contains many formulas, charts, and diagrams. Thus, two questions present themselves: how to present such materials to people who are blind, and how to assess their learning progress [14, 15]? A literature review identified many studies that described alternative methods of presenting graphical information to blind students, especially in interactive audio-tactile form [16–18]. These papers presented several methods for identifying elements of a picture that a blind user selects by touch to provide a description. Several tools have been developed to provide alternative presentations of mathematical formulas and expressions for blind students. For example, one approach is to automatically convert a mathematical expression into an audio description or mathematical Braille notation describing its structure [19, 20]. Methods for automatic conversion of expressions using, e.g., MathML, are known [21]. Other researchers suggested ways of implementing math notation in electronic form using special tools such as Lambda editor, InftyEditor, and Duxbury Braille Translator [22, 23]. Creation of new mathematical notations are based on extensions to already established software products such as BlindMoose and Math Type for Microsoft Word, odt2braille for Open/Libre Office Writer, and the MathML extension of the DAISY format. Another group of solutions uses alternative means to present graphics used in science education. These include touch tablets with dedicated software such as Talking Tactile Tablet produced by Touch Graphics and the IVEO by ViewPlus2 [24, 25]. Other researchers showed how to use popular tablets with a large diagonal together with proprietary software for interactive audio and touch presentation of graphic information [26]. Moreover, in paper [27] User-Centered Design approach was used to develop an effective solution for visually impaired students. In many such solutions, mathematical objects such as formulas and images are supplemented with text or audio descriptions, which is a form of Augmented Reality (AR) [19]. The aforementioned solutions allow teachers to share tailored learning materials with students during lessons, but they fail to assess the student’s work progress when solving exercises. The teacher must spend extra time conversing with the student to monitor their progress or identify problems the student is experiencing. Such solutions work best in special schools or in integration classes where the main teacher is supported by an assistant in accessible education. Such an assistant should have experience preparing adapted educational materials (tactile images, alternative descriptions, etc.) and the use of Braille notebooks. However, the foregoing solutions are ineffective and often insufficient for inclusive education. Students in the classroom should be treated equally and must not feel  
   
  Method and Tools to Supporting Math Learning  
   
  45  
   
  disrespected. We developed a multimedia platform enabling joint learning of sighted and blind students in mainstream mathematics classes as a response to the previously identified problems in inclusive education [2–4, 6, 10, 28]. Our contribution is to develop a proposed method and provide tools supporting math learning in inclusive education of blind students. The platform includes a mechanism for indirect assessment of student skills by combining the vector of knowledge metric with logged information about mistakes made while solving exercises. Next, we proposed audio-tactile descriptions with different levels of detail to manage the increasing number of terms occurring in audio description (cognitive load problem).  
   
  3 Materials and Methods 3.1 Proposed Solution The developed platform uses a client-server architecture. The server application stores and distributes educational materials and mediates communication between the teacher and the student during class. The server application also allows the teacher to monitor the student’s work while solving exercises. The platform is equipped with a web application responsible for managing the learning process (learning management system) and preparing educational materials in the form of SVG audio-tactile images. A detailed description of the platform are presented in authors’ prior papers [29, 30]. In the previous study we demonstrated improvements in learning effectiveness using the developed platform [31]. Using a dedicated client application on a mobile tablet, the student could solve exercises using audio-tactile images and solve tests whose results were sent to the server. Using a web application, the teacher could view the list of exercises solved by the student along with completed tests-the principle of operation was based on the asynchronous mode of work between the teacher and the student. Prior to its use in integration classes, the system was quantitatively and qualitatively evaluated for functionality and usefulness in special schools for blind students. The system’s impact on learning efficiency in comparison with traditional Braille books and relief drawings was studied. The evaluation was carried out on 2 groups of students: 20 from primary school and 24 from high school. The number of mistakes made while solving exercises with and without the system were recorded. The exercises concerned the properties of geometric figures and the properties of functions based on their graphs. In both cases, the number of errors made and the time needed to complete the exercises decreased by a statistically significant amount. Details can be found in an earlier publication [29, 31]. The present study concerns an extension of the existing platform with mobile client modules. These are mobile applications dedicated to both sighted and blind students as well as teachers. The teacher’s application allows for ongoing (synchronous) observation of student progress while solving exercises. This feature makes it possible to use the system in inclusive education. Figure 1 shows a schematic for solving the same exercise by both sighted students and those students who are blind in our developed solution. First, the teacher selects an exercise from a previously prepared set. This exercise is displayed on tablets (phones) of sighted students via a graphical user interface. The  
   
  46  
   
  M. Ma´ckowski et al.  
   
  Fig. 1. Use of the developed platform in the inclusive education: 1) a sighted student’s mobile application; 2) blind student’s mobile application; 3) teacher’s mobile application.  
   
  student sees the test text and image(s) with the necessary information to solve the exercise (e.g., designations of the vertices of the figure, lengths of the sides, angles, etc.). The mobile application for a student who is blind has an audio-touch interface. At the bottom of the screen there is a 6-button interface which allows the blind student to control the application. The student also places a tactile image on the tablet which conveys the same information as the content displayed on the tablet. This allows a blind person to explore the tactile image via touch as well as listen to alternative audio descriptions of the selected image elements by tapping them. The mobile application for a blind student has two operating modes. • Image exploration – A student who is blind can get acquainted with the image. The question module is used to provide information directly related to understanding the layout of the image, and not to the exercise itself. • Solving an exercise – A student with blindness solves an exercise by completing a test using an audio-tactile interface. Figure 2 shows a student using the mobile app. A tactile image is placed on the tablet screen (immobilized by an applied frame). The student, upon sensing an element of the image under his finger, can tap it to prompt the mobile application to read the appropriate alternative description. A sheet with a tactile image is not a barrier for the tablet to detect a finger tap on the image. The mobile application provides three types of gestures (1, 2, and 3 taps), which allow students to listen to alternative descriptions with different levels of detail. For  
   
  Method and Tools to Supporting Math Learning  
   
  47  
   
  Fig. 2. The real use of the system during tests by a blind pupil.  
   
  example, selecting the lower base of the trapezoid marked in Fig. 1 (hand icon) prompts the following alternative descriptions: • 1-tap: “Trapezoid ABCD with height h”; • 2-taps: “Section KB which is part of the base of the trapezoid ABCD”; • 3-taps: “Section KB equals 12”. The gestures used are simple and repeatable. They were selected in consultation with blind users of the touch interface. In addition, the mobile application allows a user to solve tests using an audio-tactile interface. The student hears the questions and possible answers and selects an answer using the touch interface button. The interface is simplified and provides the same functionality as the GUI in the application for sighted students. There is also a button in the application that allows the student to request individual help from the teacher. The last client module is an application for teachers to view the current phase of the exercise being solved by a particular student. The teacher can select a student from the list provided and see his progress. The teacher can also observe the tactile exploration of the image by a blind student. Colored markers show the last gestures made by the student (1, 2, and 3 taps) at each stage of solving the exercise. If necessary, the teacher can view previous gestures made by the student. Figure 3 shows an example screen from the teacher’s mobile application. The red and green dots with numbers show which elements of the tactile picture were tapped, the order of selection, and the number of taps. The web application and mobile application dedicated to the teacher included also: Analysis of the results of STUDENt’s answers (a module for a detailed personalized assessment of the student) This mode is used both when exploring the image and when solving an exercise. The teacher sees the answers, their order, and the time at which they were entered. Mistakes made by the student are classified. These errors are aggregated in an error vector [32].  
   
  48  
   
  M. Ma´ckowski et al.  
   
  Fig. 3. Teacher’s mobile application-the teacher can observe a student’s progress as they solve the exercise. For a selected question in the test, the teacher can observe which elements of the picture were touched by the student with different gestures.  
   
  The completeness of the material mastered by the student is represented in the knowledge vector [33], which is also used to select the next exercise. Analysis of interaction with the graphic image while solving the exercise (taps mapsstatic and dynamic with timestamps) In the user interaction assessment mode, the teacher first obtains information about the student’s progress in solving the exercise. The system shows an interaction map for the current stage which identifies the number of different gestures, their correctness, and the student’s ability to use them. In addition, the tool collects user interaction data in three modes. • Raw mode: This mode is mainly used to assess motor and gesture skills. The teacher can observe if the student has problems with touching particular elements on the picture (for example due to uncontrol shaking of hands or fingers). • Gesture recognition mode: This mode maps assigned to individual primitives with preserved chronology. (The order is indicated by numbers, and it is also possible to display relative differences in time between gestures). In the case of a large number of taps, it is possible to control the time interval of the presented gestures. • Pattern recognition mode: This mode highlights information about the completeness or redundancy of a user’s session in relation to a valid interaction pattern. 3.2 Research Group The system was evaluated in 5 inclusive classrooms at the primary school level. There were about 25 students in each class, including 1 to 3 who are blind. The system was used in mathematics at the primary school level for one semester (5 months). In addition, the system was used by 7 teachers experienced in teaching inclusive classes. All student research participants were aged from 10 to 13.  
   
  Method and Tools to Supporting Math Learning  
   
  49  
   
  3.3 Platform Evaluation The research used a previously prepared set of 40 exercises on the properties of geometric figures. The exercises were solved by both sighted and blind students, while a teacher supervised progress. Evaluation was based on a questionnaire containing a list of questions which are listed in Table 1. We used the Likert scale, which enables quantitative assessment of qualitative research. Table 1. List of detailed questions of the questionnaire. No  
   
  Questions for teachers from integration classes and special schools for the blind  
   
  1  
   
  How do you assess the way of communication and cooperation with the student using the developed method?  
   
  2  
   
  How do you rate the support in evaluating the student’s current progress?  
   
  3  
   
  How do you assess the impact on the student’s learning progress?’  
   
  4  
   
  How do you assess the possibility of joint solving of exercise by sighted and blind students?  
   
  5  
   
  How do you assess the usefulness of the proposed tools?  
   
  6  
   
  How do you rate the ergonomics of the audio-tactile interface?  
   
  7  
   
  How do you assess the way of communication with the teacher when solving exercises (presentation of content, exchange of information, accuracy of the teacher’s hints)?  
   
  8  
   
  How do you assess the possibility of self-learning with the use of the proposed tools?  
   
  9  
   
  How do you assess the possibility of working together on solving exercises with sighted students?  
   
  Questions for a student who is blind  
   
  Questions for a sighted student 10  
   
  How do you assess the usefulness of the proposed tools?  
   
  11  
   
  How do you assess the possibility of self-learning with the use of the proposed tools?  
   
  12  
   
  How do you assess the possibility of working together on solving exercises with blind students?  
   
  Furthermore, we asked teachers to express their opinion about the tool using openended questions about: (1) Overcoming barriers to the integration of blind and sighted people during joint learning; (2) Ease of implementation and integration of the system during learning; and (3) System completeness – strengths and weaknesses.  
   
  4 Results Figure 4 presents the results of the questionnaire on a percentage scale. All study groups generally confirmed the usefulness of the developed method and tools. Teachers rated the improvement of their ability to assess student progress most highly. Improvement of  
   
  50  
   
  M. Ma´ckowski et al.  
   
  student results was rated relatively low. This result was caused by the limited time for evaluation of the tool (1 semester), which made it impossible to assess the durability of acquired knowledge in the form of skills their application to other areas of life. Students with blindness rated the ergonomics of the audio-tactile interface and the possibility of cooperation with peers the highest. They rated the possibility of selflearning relatively low. Self-study requires overcoming all the barriers mentioned in the introduction and changing one’s attitude. This is the hardest goal to achieve for less skilled students. It was observed that lower values in this category correlate with the test score averages. Sighted students rated the possibility of cooperation with blind peers the highest. They scored the lowest on usability, which may indicate that they perform at a similar level when solving exercises in the traditional way.  
   
  Fig. 4. Questionary research results using Likert scale.  
   
  We also collected the most important answers to the open questions posed: Overcoming barriers to the integration of blind and sighted people during joint learning Most of the respondents reported a positive impact of the tool. Blind students appreciated the possibility of working independently on the same material after the lesson, along with the possibility of remote consultation with the teacher. Teachers emphasized the usefulness of the work evaluation module as a detailed tool enabling quick identification of challenges students face while solving the exercise. Sighted students noticed the  
   
  Method and Tools to Supporting Math Learning  
   
  51  
   
  possibility of learning together and the possibility of consolidating their knowledge by helping students with blindness learn. Easy to implement and integrate the system while learning Teachers emphasized the relative ease of implementing the tool on a ready-made set of sample exercises. However, they remarked that preparing new exercises required considerable effort. This result suggests that future work include the development of a wide, generally available set of exercises and the development of tools for semiautomated preparation of new exercises. Completeness of the system – strengths and weaknesses Currently, the method requires quite a lot of involvement from the teacher when using the system (e.g., in exercise selection). In the future, more individual reports on the student and the selection of homework tailored to the kinds of errors made could occur automatically by using the knowledge vector and the error vector.  
   
  5 Discussion and Conclusions Thanks to the possibility of simultaneously solving the same exercises by sighted and blind students, they can learn together. The teacher can initiate a class discussion, and the students can work together and solve the presented problems. The ability to work in a group is developed. At the same time, the teacher has tools to assess the student’s learning progress, including the knowledge vector, error vector, and various interaction maps. Although in our opinion the presented solution can be useful in improving math learning and usefulness in inclusive classrooms, the study has some limitations. The biggest disadvantage of our method is the time-consuming preparation of the audio descriptions in various levels of detail, and formulating various tests with answers. Moreover, the presented study is based on the parameters included in the Guidelines and Standards for Tactile Graphics [34]. In our opinion, more research is needed regarding this issue, as we encounter some problems with limited tablet screen size, resolution, and tap detection accuracy. However, we believe these limitations have not influenced the primary outcome of the study. We hope that the presented math tutoring platform designed to teach sighted and blind students will facilitate inclusive classrooms. The platform allows students with blindness to solve the same exercises as those solved by sighted students, while remotely supervising this process by a teacher in the classroom. The obtained results indicated that the developed platform supports group work and increases the independence of a blind person in the process of learning mathematics. The tools also increase the possibilities of cooperation and integration in the group, as well as the detailed ongoing assessment of the student’s progress by the teacher.  
   
  References 1. Miyauchi, H.: A systematic review on inclusive education of students with visual impairment. Educ. Sci. 10, 346 (2020)  
   
  52  
   
  M. Ma´ckowski et al.  
   
  2. Lintangsari, A.P., Emaliana, I.: Inclusive education services for the blind: values, roles, and challenges of university EFL teachers. Int. J. Eval. Res. Educ. 9, 439–447 (2020) 3. Asamoah, E., Ofori-Dua, K., Cudjoe, E., Abdullah, A., Nyarko, J.A.: Inclusive education: perception of visually impaired students students without disability, and teachers in ghana. SAGE Open 8, 1–11 (2018) 4. Wehmeyer, M.L., Shogren, K.A., Kurth, J.: The state of inclusion with students with intellectual and developmental disabilities in the United States. J. Policy Pract. Intellect. Disabil. 18, 36–43 (2021) 5. Opertti, R., Brady, J.: Developing inclusive teachers from an inclusive curricular perspective. Prospects 41(3), 459–472 (2011) 6. Roos, H.: Inclusion in mathematics education: an ideology, a way of teaching, or both? Educ. Stud. Math. 100, 25–41 (2019) 7. European Agency Statistics on Inclusive Education. https://www.european-agency.org/activi ties/data 8. Oyebanji, M.S., Idiong, U.S.: Challenges of teaching mathematics to students with visual impairment. Malikussaleh J. Math. Learn. (MJML) 4(1), 1 (2021) 9. Lahav, O., Hagab, N., El Kader, S.A., Levy, S.T., Talis, V.: Listen to the models: sonified learning models for people who are blind. Comput. Educ. 127, 141–153 (2018) 10. Bishop, V.E., Barraga, N.C.: Teaching Visually Impaired Children. Charles C Thomas Publisher (2004) 11. Amedi, A., Raz, N., Pianka, P., Malach, R., Zohary, E.: Early “visual” cortex activation correlates with superior verbal memory performance in the blind. Nat. Neurosci. 6, 758–766 (2003) 12. Klingenberg, O.G., Holkesvik, A.H., Augestad, L.B.: Research evidence for mathematics education for students with visual impairment: a systematic review. Cogent Educ. 6, 1626322 (2019) 13. Regec, V.: Mathematics in inclusive education of blind students in secondary schools in the czech republic. Procedia-Soc. Behav. Sci. 174, 3933–3939 (2015) 14. Moreno-Guerrero, A.J., Aznar-Díaz, I., Cáceres-Reche, P., Alonso-García, S.: E-learning in the teaching of mathematics: an educational experience in adult high school. Mathematics 8, 840 (2020) 15. De Prado, J.E.L., Gago, A.R.A., López, M.E.: Theorical review of the teaching of mathematics in student with visual functional diversity. In: ACM International Conference Proceeding Series, 201–208 (2019) 16. Janu, A., Retnawati, H.: Developing audio tactile for visually impaired students. Int. J. New Trends Educ. Their Implic. 6, 18–30 (2015) 17. Papadopoulos, K., Barouti, M., Charitakis, K.: A university indoors audio-tactile mobility aid for individuals with blindness BT-computers helping people with special needs. In: Presented at the (2014) 18. Griffin, E., Picinali, L., Scase, M.: The effectiveness of an interactive audio-tactile map for the process of cognitive mapping and recall among people with visual impairments. Brain Behav. 10 (2020) 19. Mikułowski, D., Brzostek-Pawłowska, J.: Multi-sensual augmented reality in interactive accessible math tutoring system for flipped classroom. Intell. Tutoring Syst. 12149, 1 (2020) 20. Bier, A., Sroczy´nski, Z.: Rule based intelligent system verbalizing mathematical notation. Multimed. Tools Appl. 78, 28089–28110 (2019) 21. Salamonczyk, A., Brzostek-Pawlowska, J.: Translation of MathML formulas to polish text, example applications in teaching the blind. In: 2015 IEEE 2nd International Conference on Cybernetics (CYBCONF), pp. 240–244 (2015)  
   
  Method and Tools to Supporting Math Learning  
   
  53  
   
  22. Fichten, C.S., Asuncion, J.V., Barile, M., Ferraro, V., Wolforth, J.: Accessibility of elearning and computer and information technologies for students with visual impairments in postsecondary education. J. Vis. Impair. Blind. 103, 543–557 (2009) ˙ 23. Ma´ckowski, M., Brzoza, P., Zabka, M., Spinczyk, D.: Multimedia platform for mathematics’ interactive learning accessible to blind people. Multimed. Tools Appl. 77, 6191–6208 (2018) 24. Gardner, J.A., Bulatov, V.: Scientific diagrams made easy with IVEOTM . In: Lecture Notes in Computer Science (including Subser. Lecture Notes in Artificial Intelligence Lecture Notes Bioinformatics). 4061 LNCS, 1243–1250 (2006) 25. Minhat, M., Abdullah, N.L., Idrus, R., Keikhosrokiani, P.: TacTalk: talking tactile map for the visually impaired. In: ICIT 2017 - 8th International Conference Information Technology Proceedings, 475–481 (2017) 26. Melfi, G., Müller, K., Schwarz, T., Jaworek, G., Stiefelhagen, R.: Understanding what you feel: a mobile audio-tactile system for graphics used at schools with students with visual impairment. In: Conference on Human Factors in Computing Systems - Proceedings (2020) 27. Shoaib, M., Khan, S., Fitzpatrick, D., Pitt, I.: A mobile e-learning application for enhancement of basic mathematical skills in visually impaired children. Universal Access Information Society 1–11 (2023) 28. Klingenberg, O.G., Holkesvik, A.H., Augestad, L.B.: Digital learning in mathematics for students with severe visual impairment: a systematic review. Br. J. Vis. Impair. 38, 38–57 (2020) 29. Ma´ckowski, M., Brzoza, P., Kawulok, M., Knura, T.: Mobile e-learning Platform for AudioTactile Graphics Presentation. In: Miesenberger, K., Kouroupetroglou, G., Mavrou, K., Manduchi, R., Covarrubias Rodriguez, M., Penáz, P. (eds.) Computers Helping People with Special Needs, pp. 82–91. Springer International Publishing, Cham (2022) 30. Ma´ckowski, M., Brzoza, P., Kawulok, M., Meisel, R., Spinczyk, D.: Multimodal presentation of interactive audio-tactile graphics supporting the perception of visual information by blind people. ACM Transactions on Multimedia Computing, Communications and Applications (2022) 31. Ma´ckowski, M., Brzoza, P.: Accessible tutoring platform using audio-tactile graphics adapted for visually impaired people. Sensors 22(22), 8753 (2022) 32. Spinczyk, D., Ma´ckowski, M., Kempa, W., Rojewska, K.: Factors influencing the process of learning mathematics among visually impaired and blind people. Comput. Biol. Med. 104, 1–9 (2019) ˙ 33. Ma´ckowski, M., Zabka, M., Kempa, W., Rojewska, K., Spinczyk, D.: Computer aided math learning as a tool to assess and increase motivation in learning math by visually impaired students. Disabil. Rehabil. Assist. Technol. 17, 559–569 (2020) 34. Guidelines and Standards for Tactile Graphics. http://www.brailleauthority.org/tg/. Last accessed 06 Nov 2022  
   
  Understanding the Usages and Eﬀects of a Recommendation System in a Non-formal Learning Context Ana¨elle Badier(B) , Mathieu Lefort, and Marie Lefevre Univ Lyon, UCBL, CNRS, INSA Lyon, LIRIS, UMR5205, 69622 Villeurbanne, France {anaelle.badier,mathieu.lefort,marie.lefevre}@liris.cnrs.fr  
   
  Abstract. Learning support faces many challenges in a non-formal context: the pedagogical recommendations delivered aimed at learners with very diﬀerent objectives and studying methods, and the analyses of learners’ behavior toward the recommendations are based almost exclusively on learning traces from the learning platform. In this context, we propose a recommendation system for educational resources in an extracurricular mobile application. Our system is based on a pedagogical score, on the learner history and ensures a renewal of the recommended chapters. By analyzing the usage traces of more than 10,000 learners over 4 months, we show that delivered recommendations are mainly used as a revision tool when learners face diﬃculties, and that they mostly remain in chapters of their current level grade. Usage traces also reveal that following recommendations has a positive impact on the learning experience. Keywords: Pedagogical Recommendations · Traces Analysis and Practice Analysis · Self-Regulated Learning  
   
  · Usage  
   
  Recommendation Systems in Education dedicated to learners aim to deliver personalized learning content to adapt to learner’s needs and competencies. We are working with an after-school e-learning mobile application. This application gathers millions of students from all grade levels. The learners are currently totally autonomous in their working experience, and use the application as a micro-learning tool: they work not regularly, with very small working sessions. We want to study if guiding learner with personalized recommendations to continue working with the application would improve their studying experience. To do so, we implemented a recommendation system for Mathematics, that have been pedagogically validated by experts and which is used by the students from middle school and high school grade levels [1]. In this article, we focus on the learning experience with this system, toward the following research questions: Q1- How do learners select which of the recommended resources to follow? Q2- How does our recommendation system change the learning experience? c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 54–65, 2023. https://doi.org/10.1007/978-3-031-32883-1_5  
   
  Understanding the Usages and Eﬀects of a Recommendation System  
   
  55  
   
  After having brieﬂy recalled the functioning of the existing system and positioned it in the scientiﬁc context (Sect. 1), we present the experimentation protocol and the collect of usage data (Sect. 2). We then analyze according to several criteria the recommendations followed by the learners among those proposed (Sect. 3) and end our study on the changes observed in the learning experience (Sect. 4). Finally, we discuss these results in Sect. 5 and present the resulting perspectives in Sect. 6.  
   
  1  
   
  Delivering Recommendations in a Self-regulated Learning Context  
   
  We are working with an educational mobile application organized into disciplines (Mathematics, Biology...), divided into chapters (Arithmetic, Functions...). Each chapter contains small courses, 4 quizzes of 5 multi-choices questions each and revision sheets. We propose a recommendation system to guide learners from chapter to chapter. Considering a student currently working on a given chapter (input chapter ), the system recommends among all the available chapters of the same discipline in the application (candidates chapters) a small list of chapters (recommended chapters) to continue working on. According to Brusilvosky’s classiﬁcation of educational systems [6], our system is an Adaptive Navigation Support System. The recommendation system workﬂow is presented on Fig. 1. To deliver recommendations and guide students in their use of the application, the system is based on 3 modules: a Pedagogical Module, an Historic Module and a Novelty Module. 1.1  
   
  Pedagogical Selection and Ranking of Learning Resources  
   
  The Pedagogical Module, described in [1], selects a recommendation strategy (step 3 on Fig. 1), ﬁlters the candidates chapters according to this strategy (step 4) and compute a pedagogical relevancy score to rank the ﬁltered chapters and recommend the best (step 5). We organized our learning items (candidate chapters) in a notions graph (step 1). Other works rely on competencybased approaches as in the ComPer project [16], or use ontology models [10]. In our system, we only recommend application internal chapters, that are labelled with key notions by the pedagogical experts that created the content. “We call notion a piece of knowledge useful to understand the current chapter. A notion is labelled as prerequisite if the learner must already understand part of the concept described by the notion to master the current chapter. The notion is expected if the chapter strategy is either to discover this notion, or to go further with more diﬃcult questions on this notion.” [1]. With this notions-labelling system, the chapters are linked to each others inside a notions graph. Two chapters are closer as they share the same speciﬁc notions. We deﬁned 3 recommendations strategies: revision, continuation and deepening, that are assigned to learners depending on they mastery of the current chapter. Other recommendation systems are based on the Zone of Proximal  
   
  56  
   
  A. Badier et al.  
   
  Fig. 1. Workﬂow of the recommendation system. Based on the notions graph established by experts and depending on a recommendation strategy computed from learner results, we ﬁlter and rank the candidates chapters to deliver recommendations. Steps with numbers are explained in the next sections.  
   
  Development (ZPD) concept [21] to assign learning resources to students based on their diﬃculty level and on the learner estimated mastery [3]. Others use Knowledge Tracing Models (KTM) to model the level of knowledge of a student and recommend suitable content. Among these KTM we can cite the Corbett and Anderson’s Bayesian Knowledge Tracing Model (BKT) [9] or other KTM systems as the one developed by Vie and Kashima to predict learner’s performance in MOOCS [19]. In our case, we estimate the learner’s level of mastery for a given chapter depending on the quizzes done by the student in this chapter. We use the Item Response Theory (IRT) [2] to compute θ which represents the level of mastery on the quizzes and by extension, on the input chapter for a given learner (step 2 on Fig. 1). We deﬁne 3 level groups depending on the θ score and assign a recommendation strategy for each group (step 3 on Fig. 1). The recommendation strategies are deﬁned and computed for each learner for each chapter. Then, we ﬁlter the available candidate chapters for the recommendation depending on this selected strategy (step 4). Finally, we compute a pedagogical relevancy score (Eq. 1) for each candidate chapter, based on the shared notions (scoresimilarity ) and the grade level distance of the candidate chapters from the current working chapter (penaltydistance ). We rank chapters mainly depending on this computed pedagogical score. Filtering and computation details are explained in the previous article [1]. The resulting recommendations have been validated by experts and used by all the students. scorepedagogical = scoresimilarity ∗ (1 − penaltydistance )  
   
  (1)  
   
  Understanding the Usages and Eﬀects of a Recommendation System  
   
  1.2  
   
  57  
   
  Delivering Recommendations Based on Learner’s History  
   
  As we recommend learning content inside an extracurricular mobile application, the only knowledge we have about learners are the learning items explored in the application, especially the quizzes done and their results. We do not have any information about the chapters already or currently studied in class. However, to maintain consistency in the learning experience on the application, we do not want to recommend recently already studied and mastered learning resources. Students may ﬁnd the system irrelevant if it recommends a content studied a couple hours ago. For this reason, we included an Historical Module. This historical indicator is made up of 2 components: the completion of candidate chapters and the grade obtained on these chapters. While some recommendation systems decide to not recommend at all already studied contents [4], we decided to introduce a time parameter to keep this possibility. Indeed, the temporal parameters is an important factor in several recommendations systems: Choﬃn et al. studied the eﬀect of repetition on forgetting and learning [7], Jiang et al. used a Long Short-Term Memory model to include the forgetting parameter [13]. The distribution of learning and memory over time, described by Ebbinghaus [11] have been used in various works since [20]. We introduced in this historical module a forgetting factor wt , which was computed from the Ebbinghaus forgetting curve adapted to our context of non regular use: in our case, the forgetting curve estimates 70% retention of information after 7 days, reduced to 12% after 30 days. The historical score is computed with Eq. 2: scorehistory = 1 − [wt ∗ scorecompletion ∗ scoregrade ]  
   
  (2)  
   
  with wt ∈ [0, 1]: forgetting factor calculated according to the adapted Ebbinghaus formula, scorecompletion ∈ [0, 1] the ratio of ended quizzes in the candidate chapter and scoregrade the average grade on the ended quizzes in the candidate chapter. With this module, we consider the previous activity of the learner on the application, promoting content not yet studied. However, we can recommend content that was already covered but not yet completed or poorly mastered. We can also recommend a chapter already studied a long time ago, assuming that a reminder of the knowledge of this chapter can help to better master the chapter being studied. 1.3  
   
  Encouraging Curiosity by Varying the Recommendations  
   
  Our recommendation system is applied to a self-regulated learning application. We introduced a Novelty Module, so that the learner sees the recommendation oﬀer evolve, and thus mitigate a lassitude eﬀect. Indeed, Oudeyer et al. demonstrated that curiosity and novelty are important to enhance learning and retention [15]. Serendipity was show to be an important criterion for making appealing and useful recommendations [24].  
   
  58  
   
  A. Badier et al.  
   
  As with the historical indicator, we introduce a time factor to allow us to recommend again resources that were declined a long time ago. To limit the number of parameters in the model and because we have no previous studies about our learner’s forgetting curves, the wt is the same as for the historical indicator, which can be discussed. The novelty score is computed with Eq. 3: n  
   
  scorenew = 1 − [wt ∗  
   
  1  3 − ki ] n i=1 3  
   
  (3)  
   
  with n number of times the chapter was recommended and ki ∈ [0, 3[ the resource rank in the top 3 displayed recommendations (0 being the best) the ith time. To initialise our model and rank chapters, we combine these 3 modules in a weighted multiplication with manual initialisation of weights, as in [23]. We decided to give more importance to the pedagogical module. This manual setup of the initial weights and the form of this Eq. 4 are discussed in Sect. 5. scorereco = 0.5 ∗ scorepedago + 0.4 ∗ scorehistory + 0.1 ∗ scorenew  
   
  2  
   
  (4)  
   
  Evaluation Protocol  
   
  From the literature, numerous recommendation systems are used and evaluated during classroom experiments [17,18,22] or with virtual simulated students [8] to collect enough data to train learning models, which is not our case. Because of our context and to understand learners needs and behaviours, we evaluate directly the system in the real context of use. The main drawback of this validation “in real-life” is the diﬃculty to collect data, as highlighted by [12]. This diﬃculty is even more signiﬁcant with self-regulated learning platforms because learners can quit their learning session at any time, and never come back. The recommendation system has been implemented for Mathematics, from 6th to 12th grade. It was available for learners during their ﬁrst month using the app. The recommendation are displayed from 3 entry points (Fig. 2): – Quiz Failed. If the learner totally failed one of the 4 quizzes in the chapter, a button appears to access directly the revision strategy recommendations. – Path Interrupted. Learners are supposed to end the 4 quizzes in the chapter. If they interrupt their path, a pop-up suggests to continue working with our recommendations, with the strategy computed from the already collected answers. – Path Ended. Recommendations are displayed on the result page, at the end of the 4-quizzes path, depending on the grade obtained on these 4 quizzes. Qualitative analysis to collect students perceived usefulness of the recommendations and analysis of students re-use of recommendations can be found in [1]. To analyse learner’s usage, we implemented an internal system collecting learning traces similar to xAPI used in several works [5,14]. This tracking system identiﬁes and stores each learner action, e.g we collect the actions linked with  
   
  Understanding the Usages and Eﬀects of a Recommendation System  
   
  59  
   
  Fig. 2. Recommendation interface for the chapter Statistics (9th grade) for the revision strategy: on the left from the quiz failed entry point, in the middle for the path interrupted, on the right at the end of the path. Grade levels are displayed in parenthesis. Common notions between chapters are displayed in orange. (Color ﬁgure online)  
   
  our recommendation system as Recommendation interface viewed, Recommendation chosen, Recommendation interface left, but also more generic activities as Connection to the app, Quiz started, Course read, with associated context information (learner grade level, content discipline, working session identiﬁer, date and time, etc). Learners are anonymized to respect data privacy. In the following sections we present the results observed between September 2022 and January 2023.  
   
  3  
   
  Selection of Recommendations by Learners  
   
  We collected usage traces from 11,962 learners who encountered a recommendation at least once, representing 39,420 recommendation traces seen, including 5,609 recommendations chosen by 3,448 learners. We analyzed the data according to several criteria. The ﬁrst criterion studied is the entry point of the recommendation display. We ran a Chi-2 test that highlights a signiﬁcant inﬂuence of the recommendation interface entry point on the follow-up decision. The results presented on the Table 1 show that recommendations are more followed in the context of a failed quiz (residuals +34.9) or a completed course (residuals +20.0). Recommendations from interrupted courses are rejected more than others.  
   
  60  
   
  A. Badier et al.  
   
  Table 1. Inﬂuence of recommendation source on follow-up decision (Pearson’s Chi-2 test. χ2 = 2714.6, df = 2, pvalue < 2.2e − 16). A recommendation is chosen if the learner clicks on one of the recommended chapters, rejected otherwise. Entry point  
   
  Recommendation observed (residuals) Chosen Rejected  
   
  Quiz failed  
   
  904 (+34.9)  
   
  1202 (−14.2)  
   
  Path interrupted 1724 (−26.6) 21041 (+10.8) Path ended  
   
  2981 (+20.0) 11568 (−8.2)  
   
  The second criterion is the inﬂuence of the recommendation strategy. The results are presented in Table 2. We see that recommendations associated with the revision strategy tend to be followed more than continuity or deepening strategies (residuals +10.9). As the revision strategy is assigned for the Quiz failed entry point, this results is consistent with the previous result. These analyses show that learners preferentially choose recommendations when they recognize gaps in their knowledge. Table 2. Inﬂuence of the recommendation strategy on the follow-up decision (Pearson’s Chi-2 test, χ2 = 207.19, df = 2, pvalue < 2.2e − 16). Strategy  
   
  Recommendation observed (residuals) Chosen Rejected  
   
  Revision  
   
  1682 (+10.9) 7384 (−4.4)  
   
  Continuity 1815 (−7.6)  
   
  13432 (+3.1)  
   
  Deepening 2112 (−0.8)  
   
  12996 (+0.3)  
   
  As the grade level of recommended chapters are displayed on the interface, we analysed the inﬂuence of this grade level factor on learner’s choice. We observe on Table 3 that inside each strategy, chapters of equal grades are more chosen than chapters of diﬀerent grades regarding the recommended content. For example in revision strategy, even if 73.8% of recommended chapters are of lower grade, only 68.5% of chosen chapters are of lower grade, while for 26.2% of equal grade chapters recommended, 31.5% of chosen chapters are of equal grades. The same tendency is observed for the continuation and deepening strategies. From these analysis we see that learners select recommendations when they failed a quiz or end a chapter especially when poorly mastered (the revision strategy is more followed than others). Among the diﬀerent chapters recommended, they tend to prefer chapter from their current grade level.  
   
  Understanding the Usages and Eﬀects of a Recommendation System  
   
  61  
   
  Table 3. Distribution of chosen and recommended chapters among the recommendations followed, depending on the strategy. CG = Current Grade. (Unknown grades refer to technical issues.) Strategy  
   
  Chapters Chosen  
   
  Recommended  
   
  Revision Lower grade (CG)  
   
  4  
   
  956 (45.3%) 2489 (40.3%) 1156 (54.7%) 3684 (59.7%)  
   
  Eﬀects of Recommendations on the Learning Experience  
   
  After identifying some criteria for selecting recommendations, we investigate the activities performed within the chosen recommended chapters. To do this, we studied the 5,609 traces of the 3,448 students who have chosen a recommendation at least once and observe the activities performed within the chapter they chose. The results are presented in Table 4. Within each chapter, the learner can study 2 diﬀerent resources: the quizzes and the courses. We see that 32.3% of the recommendations chosen did not lead to any activity in the corresponding chapter: either because the recommendation did not correspond to the learners’ expectations, because they followed the recommendations only out of curiosity or because we remain in a micro-learning context with limited time dedicated to Table 4. Activities completed within chapters for recommended and followed resources. Inside a chosen chapter, a learner can start quizzes (ended or not) and/or read courses (total ≥ 100%). Activity in the chosen chapter  
   
  Observed recommendations N = 5609  
   
  No activity  
   
  1813 (32.3%)  
   
  At least 1 course read  
   
  1668 (29.7%)  
   
  At least 1 quiz started (ended or not) 3061 (54.6%) At least 1 quiz started and ended  
   
  2027 (36.1%)  
   
  62  
   
  A. Badier et al.  
   
  study. Recommendations that were followed without any activity in the chapter consulted could be described as “visit only”. In 67.7% of cases, the recommendation followed led to some activity: learners started at least 1 quiz and/or read at least 1 course (partial follow-up) and in 29.7% of cases they completed at least one quiz in the chapter followed (in-depth follow-up). Beyond the activity done in a chosen recommendation chapter, we question the impact of following recommendations in the learning experience. In our context of extracurricular use, we are not looking for learning gains but rather for changes in working behavior with the application. To qualify the learning experience, we use the indicators of number of working sessions, duration of working sessions, number of quizzes started, number of quizzes ended, number of courses read, average time to read courses. A working session is deﬁned as all the activities recorded in the application between the opening and closing of the application. A learner can have several working sessions within the same day. We had at our disposal 7,693 full-session data from 1,126 learners who followed recommendations at least once, and started at least one math quiz, to compare the learning experience between sessions with and without following recommendations. Using a paired Student’s t test on each of the indicators, we investigate the impact of following recommendations on the learning experience within the application. The results are presented in the Table 5. Table 5. Student’s test comparison of learning indicators between sessions with and without recommendation following. (∗∗∗ pvalue < 0.001,∗ pvalue < 0.05) Indicators by member  
   
  Sessions with Sessions without pvalue follow-up N = 1471 follow-up N = 6222  
   
  Number of sessions  
   
  1.31  
   
  5.53 ***  
   
  0) then pattern matcher(infos.actions). print execution time(infos.actions). end if return buﬀers  
   
  Results and Model Validation  
   
  The experiments carried out show that the model implemented successfully executed a piloting task by demonstrating the cognitive cycle of solving the task, as shown in the example of Fig. 7, which represents a part of the complex task of takeoﬀ. The obtained results demonstrate that the cognitive agent veriﬁes the constraints and performs the actions in a manner similar to a human expert over time. According to [10], the terminology elements represented by the reference model are the same as those of the X-Plane simulation environment and the A320 aircraft. Therefore, to verify the results provided by our cognitive model in a real aircraft ﬂight environment, we plan to deploy the developed models with the X-Plane ﬂight simulator. However, with some adjustments, it may also be possible to use our cognitive agent in a real ﬂight simulator. As ACT-R is a scientiﬁcally based theory for modeling human cognitive performance [9], the deployment process will follow the scheme shown in Fig. 9. As described in [20], the validation will consist of collecting the quantitative measurements produced by the ACT-R cognitive agent in the X-plane simulation environment and will compare them to the quantitative measurements made by the pilots. Aviation experts will then be invited to validate the results produced by the cognitive agent in X-plane. Thus validated, the cognitive agent will be used as a pilot simulating a piloting task in a particular context.  
   
  192  
   
  G. C. T. Tchio et al.  
   
  Fig. 8. Validation of an ACT-R model [20].  
   
  Fig. 9. Deployment and tests.  
   
  6  
   
  Discussion and Open Problems  
   
  The results demonstrate that the cognitive agent can execute and present the cognitive cycle of a complex piloting task, providing insight into the cognitive processes involved in human piloting. Integrating an ontological reference model into the ACT-R cognitive architecture allows the cognitive agent to simulate piloting tasks according to expert procedures, similar to a human pilot. The appropriate rule to execute a piloting task at a given time is selected using utility learning to select the rule with the highest utility. However, as the piloting task is simulated, the ACT-R pattern matcher determines the time to check a constraint or execute an action. According to Varela [1], cognition is embodied, situated, and social. Embodied cognition is determined by the structure of the organism, with the body being in the brain and not just the brain in the body. Situated cognition means that the environment’s state determines cognition. Social cognition means that cognition is a collective cognitive system that emerges from the interaction of individual cognitive systems. One open problem is situating the cognitive agent  
   
  Integrating an Ontological Reference Model  
   
  193  
   
  in an environment like Xplane. Another challenge is using the attentional dimension of piloting tasks presented in the task ontology (Fig. 1) to execute a piloting task.  
   
  7  
   
  Conclusion  
   
  In this paper, we introduce a cognitive agent based on the ACT-R cognitive architecture that utilizes an ontological reference model to perform tasks in the aviation domain. The declarative memory of the agent captures and formalizes knowledge from the domain ontology, which represents the internal and external environments and aircraft navigation systems, and the task ontology, which captures and formalizes piloting procedures. Using a class diagram, we modeled the complex structure of a task and the relationships between its components. When executing a task, the cognitive agent searches the knowledge formalized by the reference model to perform the task. We presented its behavior and interactions with other components using a sequence diagram. Our simulations demonstrated the cognitive execution cycle of a complex piloting task, and the results showed that the agent executed the task similarly to a human pilot. As the reference model continues to incorporate the cognitive dimension associated with each task, a second perspective is to develop a version of the cognitive agent that integrates parameters such as the pilot’s attention or emotions. Additionally, since cognition is embodied, social, and situated, a third perspective is to immerse the cognitive agent in a simulator such as Xplane or other ﬂight simulators with suitable adaptations. Finally, a fourth perspective is to use the cognitive agent to manage deviations in a cockpit. Acknowledgement. We acknowledge the support of CRIAQ, the Natural Sciences and Engineering Research Council of Canada (NSERC), CAE, Bombardier, and BMU.  
   
  References 1. Varela, F.J., Thompson, E., Rosch, E.: The Embodied Mind: Cognitive Science and Human Experience. The MIT Press, Cambridge (1991) 2. Newell, A.: Uniﬁed theories of cognition, Coll. “William James lectures 1987”, Cambridge, Mass., Harvard University Press, pp. 17–18 (1990) 3. Atkinson, R.C., Shiﬀrin, R.M.: Human memory: a proposed system and its control processes. In: Psychology of Learning and Motivation, vol. 2, pp. 89–195. Academic Press (1968). https://doi.org/10.1016/S0079-7421(08)60422-3 4. Brasoveanu, Adrian, Dotlaˇcil, Jakub: Computational Cognitive Modeling and Linguistic Theory. LCM, vol. 6. Springer, Cham (2020). https://doi.org/10.1007/9783-030-31846-8 5. Sun, R.: Desiderata for cognitive architectures. Philos. Psychol. 17(3), 341–373 (2004) 6. Insaurralde, C.C., Blasch, E.: Uncertainty in avionics analytics ontology for decision-making support. J. Adv. Inf. Fusion 13(2), 255–274 (2019)  
   
  194  
   
  G. C. T. Tchio et al.  
   
  7. Russell, S.J., Norvig, P.: Artiﬁcial Intelligence: A Modern Approach, 4th edn. Pearson, Boston (2021) 8. Oliver, W., Marc, H., Nele, R.: ACT-R model for cognitive assistance in handling ﬂight deck alerts. In: International Conference on Cognitive Modelling, Montreal, Canada (2019) 9. Smart, P.R., Scutt, T., Sycara, K., Shadbolt, N.R.: Integrating ACT-R cognitive models with the Unity game engine. GI Global, Hershey, Pennsylvania, USA (2016) 10. Courtemanche, M.A., Tato, A., Nkambou, R.: Ontological reference model for piloting procedures. In: Crossley, S., Popescu, E. (eds.) Intelligent Tutoring Systems (ITS 2022). LNCS, vol. 13284, pp. 95–104. Springer, Cham (2022). https://doi. org/10.1007/978-3-031-09680-8 9 11. Ghaderi, M., Courtemanche, M.A., Ben Abdessalem, H., Nkambou, R., Frasson, C.: Attentional tasks model: a focus group approach. In: Krouska, A., Troussas, C., Caro, J. (eds.) Novel and Intelligent Digital Systems: Proceedings of the 2nd International Conference (NiDS 2022). LNNS, vol. 556, pp. 297–307. Springer, Cham (2023). https://doi.org/10.1007/978-3-031-17601-2 29 12. Estes, S., Burns, K., Helleberg, J., Long, K., Stein, J., Pollack, M.: Digital copilot: cognitive assistance for pilots. In: Proceedings of the AAAI Fall Symposium on Cognitive Assistance in Government and Public Sector Applications (2016) 13. Oltramari, A., Lebiere, C.: Mechanisms meet content: integrating cognitive architectures and ontologies. In: AAAI Fall Symposium: Advances in Cognitive Systems (2001) 14. Abrah˜ ao, E., Hirakawa, A.R.: Task ontology modeling for technical knowledge representation in agriculture ﬁeld operations domain. In: Proceedings of the 2017 Second International Conference on Information Systems Engineering (ICISE), pp. 12–16 (2017) 15. Dehais, F., Roy, R.N., Scannella, S.: Inattentional deafness to auditory alarms: inter-individual diﬀerences, electrophysiological signature and single trial classiﬁcation. Behav. Brain Res. 360, 51–59 (2019). https://doi.org/10.1016/j.bbr.2018. 11.045 16. Zhang, Z., Russwinkel, N., Prezenski, S.: Modeling individual strategies in dynamic decision-making with ACT-R: a task toward decision-making assistance in HCI. Procedia Comput. Sci. 145, 668–674 (2018). https://doi.org/10.1016/j.procs.2018. 11.064 17. Taatgen, N.A.: Cognitive modelling: a new look at individual diﬀerences. Dutch J. Psychol. 167–176 (1999) 18. Kotseruba, I., Tsotsos, J.K.: 40 years of cognitive architectures: core cognitive abilities and practical applications. Artif. Intell. Rev. 53(1), 17–94 (2018). https:// doi.org/10.1007/s10462-018-9646-y 19. Anderson, J.R., Bothell, D., Byrne, M.D., Douglass, S., Lebiere, C., Qin, Y.: An integrated theory of the mind. Psychol. Rev. 111(4), 1036–1060 (2004) 20. Raluca, Budiu: About ACT-R (2013). http://act-r.psy.cmu.edu/about/ 21. Google Research: Google colab notebook (2023). https://colab.research.google.com 22. W3C: OWL 2 web ontology language: structural speciﬁcation and functional-style syntax (second edition) (2012). https://www.w3.org/TR/owl2-overview  
   
  Generating Pedagogical Questions to Help Students Learn Oleg Sychev(B)  
   
  and Marat Gumerov  
   
  Volgograd State Technical University, Lenin Ave, 28, Volgograd 400005, Russia o [email protected]   
   
  Abstract. One of the important features of intelligent tutoring systems is providing feedback so that the learners who have problems can understand and ﬁx their errors. Two popular approaches to implementing it are demonstrating worked examples and providing explanatory feedback about the errors the learner made. Pedagogical questions - small, speciﬁc questions aimed at the thought process required to make the correct conclusion are often overlooked. Generating pedagogical questions to help the learner is beneﬁcial because answering questions stimulates information retrieval and thinking. It also gives the tutoring system detailed information about the learner’s misconceptions. However, creating systems of pedagogical questions manually requires a lot of eﬀort, even in relatively simple domains. In this paper, we propose four kinds of pedagogical questions that can be generated from a formal description of the taught skill, provide examples of pedagogical questions, and discuss the advantages and disadvantages of their use. Keywords: Pedagogical questions Intelligent tutoring systems  
   
  1  
   
  · Subject-domain modeling ·  
   
  Introduction  
   
  One of the important tasks of any tutor - human or software - is supporting students who make errors when solving problems and are stuck because they do not understand why their solution (or a step in solution) is wrong and how to do it correctly. A number of pedagogical interventions can be used to help students. The tutor can point out the relevant part of lecture material (or textbook), demonstrate how to solve this problem correctly, explain why the student’s answer is wrong, or ask a series of small topic-related questions to let the student remember the necessary facts and realize the causes of their error. Most of these methods are implemented in intelligent tutoring systems and other educational helper applications. Grevisee et al. describe a system that provides links to the descriptions of relevant concepts when students make syntax errors in their programs [6]. Demonstrating correct actions is known as hinting [24] or showing worked examples; it is used to build example-tracing tutors [1]. The reported study was funded by VSTU, project number 60/438-22. c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 195–208, 2023. https://doi.org/10.1007/978-3-031-32883-1_17  
   
  196  
   
  O. Sychev and M. Gumerov  
   
  Generating smaller questions is a less-used approach. Razzaq and Heﬀerman [19] describe a technique of using scaﬀolding questions and prove it eﬃciency, but they do not go farther than breaking the problematic problem-solving step into smaller steps and do not provide a technique for identifying of generating scaﬀolding questions. Pedagogical questions can do more by assessing the line of reasoning required to perform a step correctly. Small questions about the knowledge necessary to solve the task at hand stimulate thinking and information retrieval and can lead to realizations and better absorbing information than hints, simply telling the student what is true. Pedagogical questions can turn interactions with the learning system into a dialogue with the tutoring agent which brings it closer to human communications. However, the question-generating strategy must be optimized to avoid repeatedly asking dull, trivial questions until the student reveals that their knowledge is poor enough for these questions to be useful. Software engineering education is a good domain to implement pedagogical questions because it includes learning a signiﬁcant number of well-deﬁned thought processes that must be learned precisely: from understanding an expression to designing databases and applications. In the previous work [7], we developed a method of building sets of reasoning errors that are possible when solving a learning problem based on the formal description of the line of thought required to solve the problem. In this paper, we propose a subsystem of automatically generating pedagogical question sequences that determine which errors are factually made based on the same data.  
   
  2  
   
  Related Works  
   
  The three main venues of research about generating pedagogical questions in automatic tutoring systems concern automatic tutors, scaﬀolding techniques, and question generation. 2.1  
   
  Automated Tutors in Software Engineering Education  
   
  A big number of automatic tutors have been developed for software engineering education, from constructing expressions [10] to writing simple programs [11]. Many of these tutors rely on animation and visualization of program execution to demonstrate how it works. Jeliot 3 [15] is a program execution visualization tool for teaching Java programming language. It executes program code step-by-step, similarly to a debugger, and produces animations, visualizing the inner processes of the code’s execution. Jeliot presents basic functionality which many other code visualization systems expand; Jeliot itself is can be used for self-learning or classroom demonstrations. Putting the learner in the position of a program’s executor is another approach to enhance teaching programming. Both UUhistle [21] and TRAKLA2  
   
  Generating Pedagogical Questions to Help Students Learn  
   
  197  
   
  [14] systems feature exercises, built upon the program’s visualization by making students interact with data structure’s visual representations, manipulating them to match the way a computer will execute the given program. This can be enhanced by pop-up multiple choice questions, as it is done in VILLE [18] – a program visualization system where an exercise author can create pop-up questions to appear at certain states of program visualization. These approaches are good to engage learners and integrate knowledge about program execution, but the only form of feedback they give is visualizing the current program state and its changes. If the learner does not know what to do next, they need a way to understand it step by step. Another approach to automated tutoring is represented by the Problets series of automatic tutor developed by A. Kumar [5]. They concentrate on diﬀerent aspects of programming, allowing students to learn diﬀerent topics one by one instead of showing the entire process of program execution. These tutors split the answer to a learning problem into smaller sub-answers (steps) that the learner can enter [9,13]. Immediate feedback is provided by color-coding answers to steps based on their correctness [12,13]: correct, incorrect or incomplete [3,12], sometimes accompanied by text messages, telling the learner what was wrong. An on-demand feedback option is also often present [9,12], providing detailed description of the correct way to solve a problem, serving as a worked example. 2.2  
   
  Scaﬀolding in Tutoring Systems  
   
  Scaﬀolding in automatic tutoring systems is providing additional information or questions on how to make a step in solving a problem by breaking it into smaller steps [19]. It can be done by hints or questions. There is a number of studies concerning the eﬃcacy of using the scaﬀolding [2,8,19,24], but their results are mixed. It can depend on the subject domain, learners, and the method of providing scaﬀolding. Belland et al. [2] in their meta-analysis state that scaﬀolding in general provides signiﬁcant beneﬁts when used in a problem-solving context which is important for teaching software engineering where problem-solving is often the chief learning activity. Risha et al. [20] describe an automatic generation of a step-by-step problemsolving guide in the form of a trace table to a code snippet. A student is asked the result of the code snippet’s execution, and if their answer is incorrect, they can follow the code trace step-by-step. This lets the student quickly skip learning problems they can perform correctly and concentrate on those that cause errors. However, the level of scaﬀolding is low: it shows program execution, not the line of thought that is necessary to predict program execution. Many other tutors require solving learning problems at this level as a part of the regular learning process and do not consider this scaﬀolding. One of the most important concerns is the domain independence of techniques for generating scaﬀolding hints. The work done by Risha et al. generalized to a single speciﬁc class of problems (Java Code Tracing which can be generalized to tracing program code in imperative programming languages); it is unclear if it can be used outside this domain. Using human-authored scaﬀolding hints or  
   
  198  
   
  O. Sychev and M. Gumerov  
   
  tasks for each learning problem makes creating problem banks time-consuming and the scaﬀolding unsystematic. O’Rourke et al. [17] propose a generalized technique of scaﬀolding by formalizing the thought process that can be used to solve a given problem in the form of an algorithm that can be written similarly to a program code in a special domain-independent language called Thought Process Language (TPL). TPL code is executed by an interpreter which broadcasts events based on the executed statements (assignments, conditionals, loops and returns) that are displayed using domain-speciﬁc interface hooks. They considered three scaﬀolding modalities: tutorial progressions, just-in-time feedback, and fading worked-out examples. All these are based on displaying hints about solving the learning problem correctly. Most of these scaﬀolding techniques focus on solving problems step-by-step and guiding the user through this process, showing what to do correctly. While often a useful practice, this can lead users to spend a lot of time either “debugging” their understanding of the problem (if the ﬁnal answer is asked ﬁrst), or entering all the smaller answers to the problem-solving steps (if the whole problem is broken down into steps). Reading hints or watching visualizations is a passive form of learning while scaﬀolding questions stimulate the active participation of the learner. Also, scaﬀolding questions can be used not just to show the correct way to solve the problem but also to help the learner understand what is wrong with their answer. 2.3  
   
  Question Generation  
   
  Writing a big amount of scaﬀolding questions manually is undesirable because of high labour costs, the complex structure of dependencies between scaﬀolding questions (see Fig. 11 in [22]), and the diﬃculty of keeping generated questions systematic. These problems can be solved by automatic question generation. Myller proposed a method of automatic generation of prediction questions for Jeliot 3 [16], which is similar to O’Rourke’s approach to explaining TPL code. Myller’s approach relies on assigning static (as opposed to O’Rourke’s dynamically constructed) questions to statements of Java code visualized using Jeliot. As the java code is executed, the system can check if a question for the current instruction is deﬁned and, if found, display it to the user. The system creates a list of answers for the question consisting of a correct answer, which is the outcome of the line’s execution, and several randomly chosen distractors. These questions concern solving the problem (predicting results of code execution) but not the thought process required to solve the problem. Another question-generation approach is described in a paper by Zavala and Mendoza [23]. In this work, a question is an independent exercise (not a step within a larger learning problem) and is deﬁned by question text (stem), a list of answer options if the question is multi-choice and a generator script. Both the stem and the answer options use embedded variables that act like placeholders for problem-speciﬁc values. The generator script is used to generate the values for embedded variables as well as the correct answer if the answer is textual. The use of a generator script allows for more variety when creating an exercise. While  
   
  Generating Pedagogical Questions to Help Students Learn  
   
  199  
   
  this method allows the creation of several similar questions from a template, the question templates, including the generator scripts, deﬁning kinds and structure of questions for each new learning situation must be deﬁned by the author. There is a lot of work on question generation from natural-language texts (e.g., [4]), but this approach is most suitable for verifying if the learner read the text. The number and precision of the generated questions are not enough to ensure that the learner mastered the technique, described in the text. Given the current state of question generation, the only viable way of generating scaﬀolding questions is using a description of the thought process required to solve the problem in some formal language (e.g., TPL [17]).  
   
  3  
   
  Generating Pedagogical Questions  
   
  We propose developing an automatic system that can maintain discussion with a learner who has problems while performing exercises in an automatic tutor by generating scaﬀolding questions depending on the learning situation and the learner’s answer to previous questions. 3.1  
   
  Thought Process Formalization  
   
  We based our approach to formalization of the problem-solving thought process on the model of “lines of thought” described by Kammenov et al. [7]. We deﬁne Thought Process as a decision tree that represents the line of thought required to make a step in solving a problem (Hinting Tree) or determine if the step was made correctly (Verifying Tree). In any current problem-solving situation, there is a speciﬁc part in the decision tree of the Thought Process that determines the outcome (the data for the next step for a Hinting Tree, or the correctness of the step and kinds of errors in a Verifying Tree). Let’s call this path through the Thought Process’ structure the correct reasoning path. The reasoning steps that constitute the line of thought are therefore nodes of the Thought Process tree. The tree nodes correspond to reasoning steps proposed in [7], (i.e., Questions, Actions, Branching and Iterations); they can also describe Outcomes - conclusions made in particular branches. When working with the Branching nodes, Thought Branches are the lowerlevel lines of thought that represent some sub-problems that have their own outcomes, impacting higher-level reasoning. In a Verifying Tree, the outcomes can be “correct” and “incorrect” and they can be aggregated using logical operators “and” and “or”. We call the Branching nodes Logical Aggregations if they aggregate diﬀerent Thought Branches in that way, or Independent Branching if they link several lines of thought that can be checked in any order because only one of them can result in a conclusion in any given learning situation. At the authoring stage both the elements of the subject-domain and the building blocks of the Thought Process (Branches, Nodes and Outcomes) are assigned natural-language strings that will be used as templates to automatically generate text of scaﬀolding questions and answers to them.  
   
  200  
   
  3.2  
   
  O. Sychev and M. Gumerov  
   
  Kinds of Pedagogical Questions  
   
  We identiﬁed several kinds of pedagogical questions that can be generated automatically based on the Thought Process model. The questions are asked in a particular learning situation, including problem formulation, the current problem-solving step, variable values, and correct reasoning path according to the tree. The learning situation can describe a learner’s error (Verifying Tree is used) or the situation when the learner does not understand what to do next (Hinting Tree is used). These questions are multiple choice questions with a single or multiple correct answers, so that each answer variant can lead to the next question (depending on the answer) or explanation (if the learner’s problem was identiﬁed), shown to the learner. – Variable value questions: “What is the value of ?”. A set of possible answers is based on what kind of objects from the learning situation the variable in question can hold. This kind of question allows to check if the learner performs actions correctly. – Final node questions: “Which determines the outcome in the current situation?”. These questions allow the system to quickly check what made the learner make a wrong move during problem-solving and to adapt the questioning strategy. These are single-choice questions whose sets of possible answers are formed from the nodes of the current branch of the decision tree. – Node questions: asks the learner about the results in a particular node given the current learning situation. They are mostly used for question nodes because action nodes are covered by the variable value questions. The set of answers is deﬁned by possible answers to question in the given node (labeled at its outgoing edges). These questions can identify reasoning errors when the learner asked the right question but gave a wrong answer to it because they did not know relevant facts of the subject domain. For independent branching nodes these questions ask for the results of the whole node, which can be followed by the questions about particular branches. For logical aggregation, node questions contains two parts: it asks for the aggregation results and for results for each branch. Iteration nodes produce three kinds of node questions: the question about aggregation results, the set of iterated objects, and individual results for each object. – Structural questions: concern the edges of the decision tree “Given the what should you do next?”. These questions concern situations when the learner answered the question correctly but does not understand the consequences of this answer, i.e. the algorithm of reasoning. The set of answers is created from the decision-tree nodes that use variables known at this point. 3.3  
   
  Generating Question and Answer Formulations  
   
  As described above, all generated questions are linked to certain elements of the Thought-Process Tree—variables, nodes, and edges. So we can attach all the  
   
  Generating Pedagogical Questions to Help Students Learn  
   
  201  
   
  Fig. 1. An example of the question sequence for the “order of expression evaluation” problem  
   
  information required for generating natural-language parts of question formulations to the corresponding elements of the Thought-Process Tree. We use a template-based approach for constructing the question texts and sets of possible answers so that the questions can be adapted to any learning situation while remaining coherent and understandable. Let us consider the Thought-Process Tree for determining the order of expression evaluation described in [7] to provide an example of generating pedagogical  
   
  202  
   
  O. Sychev and M. Gumerov  
   
  questions. Figure 1 shows a sequence of questions that can be generated using that tree. In this sequence, the ﬁrst question is a Node question for an Aggregation node. The general template for this type of question is “Why do you think that $description?”, where description is a string parameter generated from the template stored in the node. For the node in this example, the description template is “$X ${result ? ‘can’ : ‘cannot’} be evaluated next” where X is a string parameter describing the particular operator that the student selected (in this example, “the + operator at position 2”) and result is a boolean parameter which determines if the description is generated for the true or f alse result of the aggregation (in this example, true, as it is chosen to be equal to the student-selected answer to the node). Answer texts, as well as the explanations, are generated similarly from the templates attached to the Thought Branches that that node aggregates (e.g., “the left operand of $X does ${result ? ‘not’ : ‘ ’} require further evaluation” and so on). The correctness of answers to generated questions is determined using a software reasoner that veriﬁes and grades students’ answers based on the formulae already present in the Thought-Process Tree. The templates’ parameters are either determined by the software reasoner or speciﬁcally chosen by the system to create the necessary texts. With this scaﬀolding system of templates (i.e., templates on the questiontype level, node level, and variable level), we can make the process ﬂexible without asking the author of the Thought-Process Tree to provide too much information—for example, the tree for determining the order of expression evaluation, consisting of 24 nodes combined in 3 Thought Branches, requires 237 text templates, most of which are relatively simple sentences or phrases. This work should be done once per developed tutor so the workload can be considered small compared to the number of generated questions. 3.4  
   
  Generating Sequences of Questions  
   
  One of the most important and complex problems when using scaﬀolding pedagogical questions is choosing the questions to ask. When a human teacher uses this technique, they are limited by classroom time (pedagogical questions to help a student solve a particular problem are, by their nature, individual), and experienced teachers mostly rely on their knowledge about most common errors during these exercises. In an automatic tutor, the developers must be aware about the possibility of asking too many trivial questions which can decrease learners engagement. While using reinforcement learning to build an optimal strategy of asking pedagogical questions for a particular domain is a promising method, to perform it we need manual “cold start” strategies to gather data for machine learning. The starting point to generate a set of pedagogical question when a learner made error that they cannot understand is the correct reasoning path through the Verifying tree which leads to a particular conclusion about the cause of the error – the conclusion that the learner missed for some reason.  
   
  Generating Pedagogical Questions to Help Students Learn  
   
  203  
   
  Algorithm 1. Strategy of asking pedagogical questions 1: Determine Deciding Variables: a set of variables which receive values in the correct reasoning path through the Thought Process and whose values are used at least once later in the correct reasoning path. 2: if Deciding Variables isn’t empty then 3: Perform a Faulty Variable Search on a list of Deciding Variables. 4: end if 5: Determine Final Nodes: ﬁnal nodes are the nodes that have at least one outcome linking them to a conclusion node for the current Thought Branch. The correct ﬁnal node is the ﬁnal node that lies on the correct reasoning path — i.e., the reasoning step determining the ﬁnal decision in this situation. 6: if Final Nodes contain at least two nodes then 7: Ask a Final Node question with Final Nodes as the set of answers to determine the learner’s chosen ﬁnal node. 8: else 9: Assume that the learner chose the correct ﬁnal node. 10: end if 11: Determine the lowest common ancestor (LCA) of the learner’s chosen ﬁnal node and the correct ﬁnal node. 12: if LCA is not the learner’s chosen ﬁnal node then 13: Ask a Structural question about the outcome leading to the LCA. 14: end if 15: Start with the current node being LCA 16: while No learner’s error is found do  Do a step-by-step questioning to ﬁx the learner’s understanding of the Thought process structure 17: Ask a Node question about the current node. 18: Ask a Structural question about the current node’s correct outcome. 19: Move to the node following the current node’s correct outcome. 20: end while  
   
  We can implement diﬀerent strategies of generating pedagogical questions using the same thought-process model; their eﬃciency must be compared experimentally. We propose one possible algorithm (see Algorithm 1) of using pedagogical questions which tries to ﬁnd balance between precision (asking the learner about everything necessary to solve the task to ﬁnd the ﬁrst error) and the number of questions asked (ﬁrst nodes of the decision tree are often trivial). To understand this strategy of questioning, it is necessary to keep in mind the fact that many of the nodes in the decision tree use variables whose values were determined before, and these values are mentioned in the question text, so it is unfeasible to ask node and structural questions concerning these nodes until we are sure that the learner calculated the required variable correctly. So questions verifying variable values should, typically, come ﬁrst. Also, questions about required nodes allow quick surveying the learner’s line of thought and so can be used to detect reasoning errors quicker when used at the beginning. In this strategy, Faulty Variable Search and checking the understanding of the structure of the Thought Process can be performed linearly (from the start of the correct reasoning path; this method asks a lot of questions but allows  
   
  204  
   
  O. Sychev and M. Gumerov  
   
  precise ﬁnding of the ﬁrst reasoning error in every situation) or using dichotomy (signiﬁcantly fewer questions, but can give the wrong results if some of the learner’s errors were corrected by their later errors). This proposed strategy produces complex trees of possible pedagogical questions, even for relatively simple Thought Processes. For the tree for determining the order of expression evaluation that we used as an example, we generated 74 unique pedagogical questions; the number of unique possible question sequences depends on the given learning situation (in this case, the expression and student’s answer) and can be on the order of thousands (for example, for the relatively simple expression (X − A)[B + C ∗ D] when considering if the + operator can be evaluated, we generated 5 576 diﬀerent question sequences depending on the student’s answers) which shows a high degree of the method’s adaptability and proves that manual development of systems of pedagogical questions is not viable. The question sequences tend to be relatively short, with 14 questions in a sequence at most and the average sequence length from 5 to 8 depending on the learning situation, so it is short enough not to overload the student. The sequence of questions in Fig. 1 was generated using this strategy for the situation when the student had to determine the order of evaluation for the expression X +A/B ∗C +D/K and chose the operator + after X variable ﬁrst. In this sequence, the ﬁrst question is a Node question for the Logical Aggregation node, the second question is a Variable Value question, the third question is Final Node question, the fourth and sixth questions are Structural questions, and the ﬁfth question is a Node question for the Question node.  
   
  4  
   
  Evaluation  
   
  To evaluate the proposed method, we generated pedagogical questions for determining the order of expression evaluation. We asked 5 experts who taught CS0 and CS1 courses for students majoring in Computer Science in a university. They were able to simulate student interaction with the system in diﬀerent learning situation and were asked to ﬁll a short survey on 5-point Likert scale (1 – strongly disagree; 5 – strongly agree). Table 1 shows the survey results. As the table shows, teachers rated pedagogical questions favorably (most average values were equal or above 4 “agree” level) with the lowest value for simplicity of question formulations. In free-text interviews, they also raised this problems most often: automatically generated question formulations sometime became too complex while human teachers, taking into account the nuances of a particular situation, could often say it simpler. Teachers also supposed changing some of the complex terms (e.g., “operator associativity” or “operators with the strict order of operands”) to relevant objects (particular operators) in the learning situations or their lists, but it contradicts the goal of teaching the relevant concepts. This problem was caused more by the description of the subject domain than the presented algorithm; it can be at least partially solved by working more on the natural-language formulation of the target domain. Some of the experts also expressed concerns regarding some of distracting answers because they thought them potentially misleading, even though the  
   
  Generating Pedagogical Questions to Help Students Learn  
   
  205  
   
  Table 1. Expert survey on the system of pedagogical questions. Question  
   
  Avg Std.dev.  
   
  The question formulations were grammatically correct Questions and possible answers can be easily understood by a student Question formulations are compact The sequences of pedagogical questions are eﬀective for determining the error causes Answering sequences of pedagogical questions can help students learn the topic Question sequences are optimal: they allow quick ﬁnding of the error cause Question sequences are reasonable: a user can easily grasp why these questions are asked in the speciﬁed order  
   
  4.6 3.4  
   
  0.55 1.14  
   
  4.4 4  
   
  0.89 1.22  
   
  4.2  
   
  1.3  
   
  4  
   
  0.71  
   
  4  
   
  1.22  
   
  system explains why students are wrong if they choose a wrong option. This complaint mostly concerned the situations when the wrongness of the answer was too obvious for the teacher. This requires studying what is better: propose a potentially misleading answer and explain why it is wrong or never propose it.  
   
  5  
   
  Conclusion  
   
  Pedagogical questions let tutoring systems determine the exact cause of the error the student made and correct the relevant misconception. Unlike explanations and examples, questions make the student an active participant in ﬁxing their errors; answering questions stimulates thinking and information retrieval. They also increase the students’ trust because the system does not hand them information but asks for it. Practically, it is enough to detect and correct the ﬁrst reasoning error the student made while performing a problem-solving step: the subsequent errors will be detected and ﬁxed while solving further problems. The disadvantage of pedagogical questions is the amount of time needed to answer them. Their automatic generation takes the load oﬀ the teacher, but not from the students. It is not practical to ask pedagogical questions for each error the student makes. Determining the conditions to ask a set of pedagogical questions eﬀectively is a good direction for further research. Pedagogical questions are useful to ﬁx persistent errors; tutoring system can keep track of the pedagogical questions the student answers correctly and avoid repeating them. Our further research will concern integrating pedagogical question modules we developed with the CompPrehension intelligent tutoring system [22] and experimenting with students to study the eﬃciency of automatically generated pedagogical questions and improving the method of their generation.  
   
  206  
   
  O. Sychev and M. Gumerov  
   
  We will also consider the applicability of this technique to other domains than teaching programming and other formal courses like mathematics. For example, we are currently developing Thought-Process Trees for teaching English natural language, covering the tasks of determine the order of adjectives and generally determining the order of words in a sentence.  
   
  References 1. Aleven, V., McLaren, B.M., Sewall, J., Koedinger, K.R.: A new paradigm for intelligent tutoring systems: example-tracing tutors. Int. J. Artif. Intell. Educ. 19(2), 105–154 (2009). http://content.iospress.com/articles/international-journalof-artiﬁcial-intelligence-in-education/jai19-2-02 2. Belland, B.R., Walker, A.E., Kim, N.J., Leﬂer, M.: Synthesizing results from empirical research on computer-based scaﬀolding in stem education: a meta-analysis. Rev. Educ. Res. 87(2), 309–344 (2017). https://doi.org/10.3102/0034654316670999 3. Fernandes, E., Kumar, A.N.: A tutor on scope for the programming languages course. In: Proceedings of the 35th SIGCSE Technical Symposium on Computer Science Education (SIGCSE 2004), pp. 90–93. Association for Computing Machinery, New York, NY, USA (2004). https://doi.org/10.1145/971300.971332 4. Foucher, S., Pascual, D., Richter, O., Wattenhofer, R.: Word2course: creating interactive courses from as little as a keyword. In: Proceedings of the 14th International Conference on Computer Supported Education (CSEDU), vol. 1, pp. 105–115. INSTICC, SciTePress (2022). https://doi.org/10.5220/0011064700003182 5. Getseva, V., Kumar, A.N.: An empirical analysis of code-tracing concepts. In: Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education (ITiCSE 2022), vol. 1, pp. 262–268. Association for Computing Machinery, New York, NY, USA (2022). https://doi.org/10.1145/3502718. 3524794 6. Gr´evisse, C., Rothkugel, S.: An SKOS-based vocabulary on the swift programming language. In: Pan, J.Z., et al. (eds.) ISWC 2020. LNCS, vol. 12507, pp. 244–258. Springer, Cham (2020). https://doi.org/10.1007/978-3-030-62466-8 16 7. Kamennov, Y., Sychev, O., Orlova, Y.: Covering possible reasoning errors for intelligent tutoring systems: order of expression evaluation case. In: Crossley, S., Popescu, E. (eds.) Intelligent Tutoring Systems (ITS 2022). LNCS, vol. 13284, pp. 65–74. Springer, Cham (2022). https://doi.org/10.1007/978-3-031-09680-8 6 8. Kim, N.J., Belland, B.R., Walker, A.E.: Eﬀectiveness of computer-based scaﬀolding in the context of problem-based learning for stem education: Bayesian metaanalysis. Educ. Psychol. Rev. 30(2), 397–429 (2017). https://doi.org/10.1007/ s10648-017-9419-1 9. Kumar, A., Dancik, G.: A tutor for counter-controlled loop concepts and its evaluation. In: 33rd Annual Frontiers in Education (FIE 2003), vol. 1, pp. T3C–7 (2003). https://doi.org/10.1109/FIE.2003.1263331 10. Kumar, A.N.: The eﬀectiveness of visualization for learning expression evaluation: a reproducibility study. In: Proceedings of the 2016 ACM Conference on Innovation and Technology in Computer Science Education (ITiCSE 2016), pp. 192–197. Association for Computing Machinery, New York, NY, USA (2016). https://doi. org/10.1145/2899415.2899427  
   
  Generating Pedagogical Questions to Help Students Learn  
   
  207  
   
  11. Kumar, A.N.: An epistemic model-based tutor for imperative programming. In: Roll, I., McNamara, D., Sosnovsky, S., Luckin, R., Dimitrova, V. (eds.) AIED 2021. LNCS (LNAI), vol. 12749, pp. 213–218. Springer, Cham (2021). https://doi. org/10.1007/978-3-030-78270-2 38 12. Kumar, A.: A tutor for using dynamic memory in C++. In: 32nd Annual Frontiers in Education, vol. 1, pp. T4G–T4G (2002). https://doi.org/10.1109/FIE.2002. 1158013 13. Laengrich, M., Schulze, J., Kumar, A.N.: Expression tasks for novice programmers: turning the attention to objectivity, reliability and validity. In: 2015 IEEE Frontiers in Education Conference (FIE), pp. 1–8 (2015). https://doi.org/10.1109/FIE.2015. 7344070 14. Malmi, L., Karavirta, V., Korhonen, A., Nikander, J., Sepp¨ al¨ a, O., Silvasti, P.: Visual algorithm simulation exercise system with automatic assessment: TRAKLA2. Inform. Educ. 3(2), 267–288 (2004). https://doi.org/10.15388/infedu. 2004.19 15. Moreno, A., Myller, N., Sutinen, E., Ben-Ari, M.: Visualizing programs with Jeliot 3. In: Proceedings of the Working Conference on Advanced Visual Interfaces (AVI 2004), pp. 373–376. Association for Computing Machinery, New York, NY, USA (2004). https://doi.org/10.1145/989863.989928 16. Myller, N.: Automatic generation of prediction questions during program visualization. Electron. Notes Theor. Comput. Sci. 178, 43–49 (2007). https://doi.org/10. 1016/j.entcs.2007.01.034. Proceedings of the Fourth Program Visualization Workshop (PVW 2006) 17. O’Rourke, E., Andersen, E., Gulwani, S., Popovi´c, Z.: A framework for automatically generating interactive instructional scaﬀolding. In: Proceedings of the 33rd Annual ACM Conference on Human Factors in Computing Systems (CHI 2015), pp. 1545–1554. Association for Computing Machinery, New York, NY, USA (2015). https://doi.org/10.1145/2702123.2702580 18. Rajala, T., Laakso, M.J., Kaila, E., Salakoski, T.: VILLE: a language-independent program visualization tool. In: Proceedings of the Seventh Baltic Sea Conference on Computing Education Research (Koli Calling 2007), vol. 88, pp. 151–159. Australian Computer Society Inc., AUS (2007) 19. Razzaq, L., Heﬀernan, N.T.: Scaﬀolding vs. hints in the assistment system. In: Ikeda, M., Ashley, K.D., Chan, T.-W. (eds.) ITS 2006. LNCS, vol. 4053, pp. 635– 644. Springer, Heidelberg (2006). https://doi.org/10.1007/11774303 63 20. Risha, Z., Barria-Pineda, J., Akhuseyinoglu, K., Brusilovsky, P.: Stepwise help and scaﬀolding for java code tracing problems with an interactive trace table. In: Proceedings of the 21st Koli Calling International Conference on Computing Education Research (Koli Calling 2021). Association for Computing Machinery, New York, NY, USA (2021). https://doi.org/10.1145/3488042.3490508 21. Sorva, J., Sirki¨ a, T.: UUhistle: a software tool for visual program simulation. In: Proceedings of the 10th Koli Calling International Conference on Computing Education Research (Koli Calling 2010), pp. 49–54. Association for Computing Machinery, New York, NY, USA (2010). https://doi.org/10.1145/1930464.1930471 22. Sychev, O., Penskoy, N., Anikin, A., Denisov, M., Prokudin, A.: Improving comprehension: intelligent tutoring system explaining the domain rules when students break them. Educ. Sci. 11(11), 719 (2021). https://doi.org/10.3390/ educsci11110719  
   
  208  
   
  O. Sychev and M. Gumerov  
   
  23. Zavala, L., Mendoza, B.: On the use of semantic-based AIG to automatically generate programming exercises. In: Proceedings of the 49th ACM Technical Symposium on Computer Science Education (SIGCSE 2018), pp. 14–19. Association for Computing Machinery, New York, NY, USA (2018). https://doi.org/10.1145/3159450. 3159608 24. Zhou, Y., Andres-Bray, J.M., Hutt, S., Ostrow, K., Baker, R.S.: A comparison of hints vs. scaﬀolding in a MOOC with adult learners. In: Roll, I., McNamara, D., Sosnovsky, S., Luckin, R., Dimitrova, V. (eds.) AIED 2021. LNCS (LNAI), vol. 12749, pp. 427–432. Springer, Cham (2021). https://doi.org/10.1007/978-3-03078270-2 76  
   
  Attention Assessment of Aircraft Pilots Using Eye Tracking Maryam Ghaderi, Amin Bonyad Khalaj, Hamdi Ben Abdessalem(B) , and Claude Frasson Département d’Informatique et de Recherche Opérationnelle, Université de Montréal, Montréal H3C 3J7, Canada {maryam.ghaderi,amin.bonyad.khalaj, hamdi.ben.abdessalem}@umontreal.ca, [email protected]   
   
  Abstract. Today, airplane transportation plays a significant role in the widespread movement of people and in the commercial activity of nations. Modern air travel can make remarkable progress by enhancing cultural and social services, growing economic activities, enhancing regional employment levels, and expanding tourism. The aviation industry has developed advanced planes and provided pilots with numerous control systems and instruments. In order to operate a modern high-speed aircraft, pilots must exchange instructions and information with air traffic controllers (ATC). In spite of many efforts and investigations in the field of aviation, tragic air accidents still occur worldwide. During the flight, pilots are subject to a variety of emotional, mental, and physical conditions, which affect their performance and attention. In this study, several pilots with diverse skills and experiences took part in different flights with different scenarios. Based on eye-tracking features, and as well as the amount of visual attention they paid to each window and tool within the simulation of an A320 aircraft, the amount of their visual attention is calculated. Keywords: Visual Attention · Eye Tracking · Attention Assessment · Fixation Duration  
   
  1 Introduction This study aims to use eye tracking to understand a person’s attention state in aviation by analyzing their eye movements and visual processes [1]. An attention process is a complex mental function that involves filtering out irrelevant information and focusing on a specific aspect of the environment. The task requires mental control and resistance to distractions. With training and practice, individuals can develop this skill, improving their performance and achieving their goals [2, 3]. High-level of attention is a crucial aspect of aviation [4], as it can significantly impact the safety and efficiency of flight operations, and it is necessary for communication, decision-making, and managing fatigue. To ensure that all operations are carried out safely and effectively, pilots, air traffic controllers, maintenance workers, and other © The Author(s), under exclusive license to Springer Nature Switzerland AG 2023 C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 209–219, 2023. https://doi.org/10.1007/978-3-031-32883-1_18  
   
  210  
   
  M. Ghaderi et al.  
   
  aviation professionals must maintain a high level of situational awareness and attention to detail. Pilots must pay close attention in the cockpit to monitor and change a variety of flight factors, such as airspeed, altitude, heading, and navigation. In order to maintain situational awareness and react to potential threats and hazards, and respond in emergency situations, they must also continuously monitor flight instruments and scan the surrounding environment. Visual information is an essential aspect of the process of acquiring and transmitting information to the brain. The visual system is responsible for processing information from the environment through the eyes and sending it to the brain for further analysis and interpretation [5]. This allows the brain to prioritize the most important visual information and process it more efficiently, leading to better perception and understanding of the environment. In order to attend to visual information, the brain must first detect and recognize relevant visual stimuli. The photoreceptors—specialized cells that capture light and transmit signals to the brain via the optic nerve—start this process in the retina. After entering the brain, visual information is processed in a number of steps, requiring different of processing and interpretation levels [6]. Eye tracking technology involves detecting the movements and gaze of a person’s eyes to determine what they are looking at or paying attention to. In the context of flight, eye-tracking technology can be used in several ways, such as piloting, flight simulation, and cabin management. Eye tracking can be used to control the movement of aircraft or to monitor the visual attention of pilots to detect signs of stress or fatigue. Furthermore, eye tracking can be utilized to control pilot attention and comfort levels to improve cabin design and services. In addition, eye tracking can be used in flight simulators to track a pilot’s gaze and determine where they are directing their attention. For example, acquired information from eye tracking can be used to modify and control various elements in the simulation, such as bringing up information relevant to the object the pilot is looking at or changing the view in the cockpit. Finally, the aim of using eye tracking in flight simulators is to increase realism and give pilots a more immersive training environment. To measure a pilot’s attention during a flight, eye tracking devices must first follow the pilot’s gaze and locate where they are looking. These data can then be used to calculate how much time the pilot spent looking at various components in the cockpit, such as instruments, controls, or the aircraft’s exterior. In addition, the eye tracking devices may also measure other parameters such as pupil dilation and position, fixation, saccade, and blink rate which may provide additional insight into the level of attention and engagement of the pilot. Eye tracking can provide useful insights into a pilot’s attention for training and performance evaluation. Generally, eye tracking technology could improve comfort, safety, and effectiveness in a variety of flight operations applications. A brief description of the related works is presented in Sect. 2. Section 3 focuses on the experimental process, including the structure and steps of the experiments. The relationship between attention and eye tracking is explained in Sect. 4. In Sect. 5, we present an analysis of the experiment, and in Sect. 6, we discuss the results of the experiment. The conclusion and future directions of research are presented in Sect. 7.  
   
  Attention Assessment of Aircraft Pilots Using Eye Tracking  
   
  211  
   
  2 Related Work Eye tracking is an experimental method of detecting and directing eye movement, gaze points, fixation position, and fixation duration. It is a typical method for observing the allocation of visual attention. Thorough primary information on eye tracking research, including history and details, is provided in [7]. Eye tracking was first studied by Charles Bell, who explained the brain’s control over eye movements and their effect on visual orientation. Fitts and coworkers conducted the first eye-tracking studies in a flying simulator in 1949 and 1950 [8, 9]. Previous studies have explored human behavior using eye tracking, including stress [10], problem-solving [11], and visual attention [12], as well as in virtual reality. Eye tracking has been used in VR to study gender classification and different types of visual attention, such as on peer-learners, instructors, and screens with various manipulations. Eye tracking analyzed children’s learning in classrooms using object-of-interests and different manipulations, such as hand-raising percentages, visualization styles, and sitting positions in immersive VR [13]. Furthermore, Eye movements have been used to predict psychological behaviors such as personality traits, cognitive load, and IQ test performance using machine learning methods [14]. Paper [4] discusses how pilots can manage attention and workload during high or low workload periods. They recommend strategies such as recognizing unexpected events and prioritizing tasks. Another paper [15] introduces the attentional task model, which categorizes all flight tasks according to their attention scores and establishes a baseline level of workload and attention requirements. By identifying regions of high visual saliency using eye movements, researchers can determine where users focus their attention within the scene, and use this information to develop more effective visual displays. Eye movement indicators, such as fixation count, average fixation duration, visit count, and first fixation duration, were used in one study [6] to create more engaging and user-friendly 3D scene maps, ultimately improving user experience and map quality [6].  
   
  3 Experiments An experiment was conducted aiming to gather pilot CW1 and PD2 during a takeoff procedure in an Airbus A320 in real time. It consisted of six different scenarios with varying weather, time, and conditions as well as the possibility of a failure. The first to third scenarios relate to standard takeoff sessions, while scenarios four to six relate to failure sessions. Different scenarios were given to participants to perform the takeoff procedure. A pilot monitor and a pilot are required to operate the Airbus A320. In this experiment, the participants served as pilots and the experimenter as pilot monitors. The experiment was conducted at the University of Montreal and with participants from CAE and Bombardier who all signed written consent forms following an ethics certificate.  
   
  1 Cognitive Workload. 2 Pupil Dilation.  
   
  212  
   
  M. Ghaderi et al.  
   
  3.1 Participants Participants from CAE and Bombardier participated in the experiment at the University of Montreal. The study included 13 male subjects (all between 24 and 49 years of age) with an average age of 36 years. The 13 participants included 7 pilots with piloting experience, piloting license and A320 piloting experience. The other 6 participants were engineers at Bombardier and CAE who were familiar with most aircraft procedures but without holding a piloting license. 3.2 Materials Eye-Tracking Module: Gaze point is the most affordable, research-grade eye tracker on the market, used in the experiment to measure pupil dilation. Visual attention can be investigated using the eye-tracking technique. Our attention tends to be drawn to objects that are relevant to the task at hand or objects that have attracted our attention [16]. Seeing only what we’re paying attention to is the result of the cognitive system allocating sufficient resources for visual processing. A significant part of visual attention is eye movement, which consists of fixations (stationary phase) and saccades (rapid, ballistic phase) [16]. As well as measuring eye movements and gaze point location, eye tracking is an effective tool for understanding human attention [16, 17]. 3.3 Procedure The experiment environment was comprised of a participant (for each experiment) as the pilot and the experimenter as the pilot monitor. Ethics committee and partners’ approval were obtained for the experiment’s procedure. Participants received a detailed description of the A320 takeoff procedure a week before their experiment to familiarize themselves with its handling characteristics. There are several different visual displays mentioned in the document (for example, navigation display, primary flight display, engine/warning display, system display, and engine display). It also included a rejected takeoff, an engine failure after V1 procedure and a standard takeoff procedure. In order to generate a more cognitive workload for every scenario, participants were not aware of the scenarios beforehand.  
   
  4 Attention and Eye Tracking Piloting a plane requires a visual attention for all the different tasks of the flight. In order to obtain visual information, the eyes are the primary means, and eye movements reflect cognitive tasks and visual thinking processes. As a result, eye-tracking techniques can be used to gather eye movement data and analyze the distribution pattern of visual attention among observers. Based on the studies, area of pixels (pixel as the smallest unit), can be used to divide the target screen into areas of interest (AOI), as shown in Fig. 1. The whole display window that participants see in the A320 simulator during the experiment is shown in Fig. 1. Based on the experiment we did, there are five important areas  
   
  Attention Assessment of Aircraft Pilots Using Eye Tracking  
   
  213  
   
  and dashboards named “Navigation Display (ND)”, “Primary Flight Display (PFD)”, “Engine/Warning Display (E/WD)”, “System Display (SD)”, and the “Runway”, which were used in the experiment Fig. 2.  
   
  Fig. 1. Areas of interest for takeoff  
   
  Fig. 2. Flight instruments for takeoff  
   
  Visual factors and visual saliency can be studied using eye-tracking technology by researchers and practitioners. When referring to visual saliency, we refer to the extent to which an object or feature in a visual scene attracts attention or catches the eye.  
   
  214  
   
  M. Ghaderi et al.  
   
  In eye tracking, a person’s gaze is tracked as he or she looks at a visual display, such as a computer screen or a poster. Eye tracking records where and how long people look in a scene, giving insight into what they find salient. As a result of this information, it is possible to understand how visual factors in a scene are related to object saliency. Thus, an eye-tracking system can link visual factors and visual saliency. The main eye-tracking indexes which can be used to determine the relationship between the eye tracking index and visual attention [6], and their specific meaning are presented based on the gaze point documentation: • Fixation POG: By using the internal fixation filter, POG (Point of Gaze) data determines the user’s point-of-gaze, expressed as FPOGX and FPOGY. In other words, Fixation Point of Gaze (POG) refers to the specific location where a person’s eyes are focused on when they are observing a visual display. • FPOGS: POG start times which are expressed in seconds since system initialization. Using the FPOGS in eye tracking can provide insight into the initial focus of attention, which can be used to identify the most salient or noticeable features. • FPOGD: The fixation POG duration in seconds. • FPOGID: Number associated with the fixation POG. As mentioned earlier, pixels (pixel as the smallest unit), can be used to divide the target screen into areas of interest (AOI). We divided the screen into 5 areas of interest based on area of pixels. point in a coordinate is named by its ordered pair of the form of (x, y). The first number corresponds to the x-coordinates and the second to the y-coordinate. For screen coordinates, the origin is the upper-left corner of the screen. Usually, the full position of a window is represented as a rectangle with two points defining its upper-left and lower-right corners. Each window coordinate, which consists of four numbers separated by commas or spaces, defines the boundaries of each area of interest. Two points on the screen are represented by these four numbers. “X” and “Y” coordinates of the first point are indicated by the first two numbers, while “X” and “Y” coordinates of the second point are indicated by the final two numbers. The screen’s upper-left corner is marked by “0,0,” while its lower-right corner is marked by “1,1.” The screen’s centre is marked by [0.5,0.5]. By using these two points, we can define the position and size of a window. Specifically, the first point defines the upper-left corner of the window, while the second point defines the lower-right corner. It is possible to define a window’s position and size using these two points. The boundaries of each area of interest are as follows: • • • • • •  
   
  Visual Display 1: [0, 0.66] and [0.18, 1] Visual Display 2: [0.19, 0.66] and [0.38, 1] Visual Display 3: [0.66, 0.66] and [0.84, 1] Visual Display 4: [0.85, 0.66] and [1, 1] Visual Display 5: Runway Visual Display 6: All other coordinates.  
   
  Attention Assessment of Aircraft Pilots Using Eye Tracking  
   
  215  
   
  Thus, the Fixation POG has been used to find the visual display that pilots was looking at each portion of the second. The FPOGID has been used a sign indicating a change in the point of view. According to [18], the duration of the fixation POG can be used as the only effective factor, which shows the distribution of visual attention during each second of the flight. FPOGD S= FPOGD  
   
  (1)  
   
  This formula considers the portion of fixation time. The proportion of fixation time on a specified AOI, can be used to measure the distribution of visual attention during the flight phase (or any phase segment). The idea of this formula is to divide the duration of the fixation POG during the occurrence of each event by the total time of that event. By doing this, visual attention will be independent of the total duration of the event. In this way, we can see what portion of time the pilot (participant) has looked at each display window. If only one display window was observed for the entire duration of the event, the S will be equal to one (or 100% in scale of 0 to 100), which means that the pilot paid full attention to that display window during the event. Hence, the gaze duration (sum of fixation durations on a specific AOI) was used as the basis for evaluating visual attention distribution. However, we focus only on the distribution of attention during each second in this study. The goal is to find out which display window the participant is looking at each second of the flight.  
   
  5 Analysis A participant may gaze at one or more visual displays per second, as explained in the previous sections. Knowing what visual displays the participant was looking at, at every second of a flight is crucial to determining his correct and proper performance. Each period of the flight includes special tasks, so the participant is expected to pay attention to special visual displays at those times. Consequently, comparing the areas that the participant looked at every second with the areas that he was supposed to look at gives us valuable information about the participant’s ability to control the flight and his level of performance. Two participants’ data output examples are shown here. As shown in Fig. 3, the first one exhibits the data output of an official A320 pilot with over 250 formal flight hours and eight years of experience during a rejected takeoff (sixth pilot). And the second one shows the output of a non-licensed pilot for the same scenario. This pilot has flown in the simulator with the A320 for testing purposes but is not a licensed pilot. He is an A320 engineer who knows the ins and outs of the aircraft (fifth pilot). In Figs. 3 and 4, we can see which screen participants 5 and 6 were watching throughout the flight. Figure 3 gives us the information about participant 6 and 5, flight 6 and scenario 4. As you can see Participants’ fractions of a second spent on each visual display are displayed in different colors. For example, a participant’s attention was diverted to three areas one, two, and three in the 2th second, but in the 10th second, the participant focused entirely on the runway. It should be noted that, for different windows, the sum of fractions of seconds is the maximum one since our measurement standard is one second.  
   
  216  
   
  M. Ghaderi et al.  
   
  During a flight, the visual displays a participant looks at can provide valuable information about their ability to control the flight. Checking whether they looked at the appropriate displays can be determined by comparing where they looked with where they were supposed to look. Pilots with licenses (participant 6) demonstrated better focus during a rejected takeoff scenario than non-licensed engineers with no licenses (participant 5). Thus, monitoring a pilot’s visual attention during critical scenarios can enhance pilot training and flight safety.  
   
  Fig. 3. Distribution of fixation duration across AOIs Related to Pilot 6 and 5  
   
  6 Discussion and Results As shown in the figure below (Fig. 4), the duration of the fixation POG at each Area of Interest is shown in seconds, 3 s before and after the engine failure. The figure on the right represents the 6th participant, and the figure on the left represents the 5th participant. In the 3 s leading up to the engine failure, the 6th participant looked at the primary flight display and the most at the runway and had everything under control. The pilot’s attention was only focused on the front window (Runway) once the engine failed, so he could keep the plane on its course by controlling the pedals. However, the figure on the left shows that before the engine failure, the 5th participant mostly looked at the primary flight display and the front window (Runway), failing to pay attention enough to the other runway, which is very critical at the time of failure. Additionally, he was not only focused on the runway at the time of the engine failure  
   
  Attention Assessment of Aircraft Pilots Using Eye Tracking  
   
  217  
   
  but was also looking around. He randomly looked at visual display 2 (primary flight display), the runway and around, indicating a lack of control of the aircraft and the fact that he does not know where to look at.  
   
  Fig. 4. Distribution of fixation duration across AOIs 3 s before and after engine failure (Related to Pilot 6 and 5)  
   
  Based on the pie chart (Fig. 5), we can see how pilots’ attention is divided between different visual displays (AOIs) throughout the whole flight. Visual displays are represented by slices of the circle. Based on the size of each slice, we can determine how much attention the pilot paid to each visual display during the flight. The figure on the top represents the 6th participant, and the figure on the down represents the 5th participant. As you can see, both participants looked at the runway for almost half of the flight (this is not unexpected since the pilot’s primary goal is to keep the plane on course, so spending so much time in the front window (runway) makes sense). However, it is the amount of time participants spend looking at different dashboards that distinguishes the experienced pilot participant from the non-pilot participant. As it is shown, participant 6, who was an expert pilot, spent more than a quarter of the flight looking at dashboard 3 (Engine/Warning Display), which is quite reasonable given the engine failure and shows he has control of the flight. He looked at the dashboard 2 (Primary Flight Display) and 4 (System Display) for about 6% of the total flight time (6.2% and 6.71% respectively). However, despite the importance of dashboard 3(Engine/Warning Display), only 7% of the 5th pilot’s attention was focused on this dashboard. A greater amount of attention was paid to dashboard 2 (Primary Flight Display) and dashboard 4(System Display). It shows he had no control over the flight, as he looked at different dashboards at random and was not aware of where to look at all times.  
   
  218  
   
  M. Ghaderi et al.  
   
  Fig. 5. Pilot attention distribution across areas of interest (AOIs) during flight.  
   
  7 Conclusion In conclusion, we measured the fixation duration during takeoff to investigate the attention distribution of expert and novice pilots. Attention can be measured by fixation duration, which measures the time spent looking at a particular location. There is generally a correlation between longer fixation durations and higher levels of attention, as the longer someone looks at a particular location, the more information they are likely to absorb. In another word, the fixation duration can thus be used to measure the amount of attention paid to different objects or locations. Locations or objects with longer fixation durations are likely to have received more attention. There was a clear difference in fixation duration between the two groups, with the expert pilot maintaining constant attention on the relevant display window, while the novice pilot was less focused. In this study, fixation duration was demonstrated to be a useful measure of attention allocation, and it was revealed that expert pilots have a more developed and efficient system for allocating attention. By utilizing this information, expert pilots can be differentiated from novice pilots, and training programs can be designed to improve aviation safety. Overall, our study brings important novel insights into the relationship between attention and performance in complex tasks and stresses the importance of attention during critical phases of flight. The results of this study point to new avenues for future research in this area, aimed at increasing the safety of air travel. Acknowledgments. We acknowledge the support from NSERC-Alliance, CRIAQ, CAE, Bombardier, and BMU for funding this work.  
   
  References 1. Glaholt, M.G.: Eye Tracking in the Cockpit: A Review of the Relationships Between Eye Movements and the Aviators Cognitive State (2014)  
   
  Attention Assessment of Aircraft Pilots Using Eye Tracking  
   
  219  
   
  2. Bigelow, S.J.: Senior Technology Editor in the Data Center and Virtualization Media Group at TechTarget Inc. https://www.skybrary.aero/ 3. Wickens, C.D., McCarley, J.S.: Attention-Situation Awareness (A-SA) Model of Pilot Error (2007) 4. Ghaderi, M., Ben Abdessalem, H., Frasson, C.: An analysis of mental workload involved in piloting tasks. In: Krouska, A., Troussas, C., Caro, J. (eds.) Novel & Intelligent Digital Systems: Proceedings of the 2nd International Conference (NiDS 2022). Lecture Notes in Networks and Systems, vol. 556. Springer, Cham (2023). https://doi.org/10.1007/978-3-03117601-2_21 5. Bull, D.R.: Chapter 2—The Human Visual System. Elsevier Ltd., Amsterdam, The Netherlands (2014) 6. Yang, B., Li, H.: A visual attention model based on eye tracking in 3D scene maps. ISPRS Int. J. Geo-Inf. 10(10), 664 (2021). https://doi.org/10.3390/ijgi10100664 7. Wade, N., Tatler, B.W.: The Moving Tablet of the Eye: The Origins of Modern Eye Movement Research. Oxford University Press, USA (2005). https://doi.org/10.1093/acprof:oso/978019 8566175.001.0001 8. Charles, B.: On the motions of the eye, in illustration of the uses of the muscles and nerves of the orbit. Philos. Trans. R. Soc. Lond. 113, 166–186. https://doi.org/10.1098/rstl.1823.0017 9. Fitts, P.M., Jones, R.E., Milton, J.L.: Eye movements of aircraft pilots during instrumentlanding approaches. Aeronaut. Eng. Rev. 9, 24–29 (1950) 10. Hirt, C., Eckard, M., Kunz, A.: Stress generation and non-intrusive measurement in virtual environments using eye tracking. J. Ambient. Intell. Humaniz. Comput. 11(12), 5977–5989 (2020). https://doi.org/10.1007/s12652-020-01845-y 11. Eivazi, S., Bednarik, R.: Predicting problem-solving behavior and performance levels from visual attention data. In: Proceedings of 2nd Workshop on Eye Gaze in Intelligent Human Machine Interaction at IUI, pp. 9–16. ACM, New York (2011) 12. Bozkir, E., Geisler, D., Kasneci, E.: Assessment of driver attention during a safety critical situation in VR to generate VR-based training. In: ACM Symposium on Applied Perception 2019. ACM, New York (2019). https://doi.org/10.1145/3343036.3343138 13. Bozkir, E., et al.: Exploiting object-of-interest information to understand attention in VR classrooms. In: 2021 IEEE Virtual Reality and 3D User Interfaces (VR), Lisboa, Portugal, pp. 597–605 (2021). https://doi.org/10.1109/VR50410.2021.00085 14. Kasneci, E., Kasneci, G., Trautwein, U., et al.: Do your eye movements reveal your performance on an IQ test? A study linking eye movements and socio-demographic information to fluid intelligence. PLoS ONE 17(3), 1–23 (2022). https://doi.org/10.1371/journal.pone.026 4316 15. Ghaderi, M., Courtemanche, M.A., Ben Abdessalem, H., Nkambou, R., Frasson, C.: Attentional tasks model: a focus group approach. In: Krouska, A., Troussas, C., Caro, J. (eds.) Novel & Intelligent Digital Systems: Proceedings of the 2nd International Conference (NiDS 2022). NiDS 2022. Lecture Notes in Networks and Systems, vol. 556. Springer, Cham (2023). https://doi.org/10.1007/978-3-031-17601-2_29 16. Abdelrahman, Y., et al.: Classifying attention types with thermal imaging and eye tracking. In: Proc. ACM Interact. Mob. Wearable Ubiquitous Technol. 3, 3, Article 69, 27 p. (2019). https://doi.org/10.1145/3351227 17. Mancas, M., Ferrera, V.P.P., Riche, N., Taylor, J.G.G. (eds.): Springer, New York (2016) 18. Jin, H., et al.: Study on how expert and novice pilots can distribute their visual attention to improve flight performance. IEEE Access 9, 44757–44769 (2021). https://doi.org/10.1109/ ACCESS.2021.3066880  
   
  KEMMRL: Knowledge Extraction Model for Morphologically Rich Languages Daniel Vasić1,3(B) , Branko Žitko2,3 , Ani Grubišić2,3 , and Angelina Gašpar2,3 1  
   
  Faculty of Science and Education, University of Mostar, Matice hrvatske b.b., Mostar 88000, Bosnia and Herzegovina [email protected]  2 Faculty of Science, University of Split, Rudera Boškovića 33 Split, 21000 Split, Croatia {bzitko,ani}@pmfst.hr 3 Catholic Faculty of Theology, University of Split, Zrinsko-Frankopanska 19, 21000 Split, Croatia [email protected]   
   
  Abstract. There is a growing interest in automatic text processing and knowledge extraction from text repositories which often requires building new language resources and technologies. We present the KEMMRL model designed for the under-resourced but morphologically rich Croatian language. The proposed model uses natural language processing techniques, state-of-the-art deep learning algorithms and a rule-based approach to generate knowledge representations. The output of the newly developed HRtagger and HRparser methods in combination with the KEMMRL model is knowledge represented in the form of an ordered recursive hypergraph. Since the performance of KEMMRL is highly dependent on the applied deep learning methods, we evaluated them using hr500k reference corpus in the training and testing phase and manually designed out-of-domain Semantic Hypergraph Corpus (SemCro). The results of standard evaluation metrics showed that the HRtagger and HRparser achieved signiﬁcantly better results than other state-ofthe-art methods. These methods also showed the best results in measuring the structural similarity of hypergraphs, the highest average similarity to the manually annotated semantic hypergraphs and the number of semantic hyperedges correctly annotated by the model. The semantic hypergraph proved to be an ideal structure to capture and represent knowledge from more complex sentences without information loss. Researchers and developers of similar morphologically rich languages can customize and extend KEMMRL to their requirements. This article highlights the potential beneﬁts of implementing the KEMMRL model into an Intelligent Tutoring System (ITS), and future research may focus on developing and testing such implementations. Keywords: Knowledge extraction · natural language processing learning techniques · morphologically rich languages · knowledge representation · semantic hypergraph c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 220–232, 2023. https://doi.org/10.1007/978-3-031-32883-1_19  
   
  · deep  
   
  KEMMRL: Knowledge Extraction Model  
   
  1  
   
  221  
   
  Introduction  
   
  People exchange or gain knowledge using languages, images, symbols, and other communication tools. Eﬃcient communication or knowledge exchange depends on one’s ability to convey information clearly and accurately so that its receiver can easily understand or decode it. Similarly, machines interpret and process natural language only if it is machine-readable. The automatic conversion from unstructured data into structured one is known as knowledge extraction, which can be arduous due to polysemy, free word order, complex morphology, etc. Artiﬁcial Intelligence researchers have developed various natural language processing (NLP) techniques to allow machines to read, understand and derive meaning from a human language. Natural language processing (NLP) is a subﬁeld of computer science, linguistics, and artiﬁcial intelligence that studies the interaction between computers and natural languages. NLP tasks include natural language understanding (NLU, transforming human language into a machine-readable format) and natural language generation (NLG, converting information from computer representations into human-readable text). NLP techniques can be applied to several modules of an Intelligent Tutoring System, such as knowledge representation, user modelling, feedback and assessment, and dialogue management. This can enable the system to provide a more personalized and engaging learning experience by better understanding learners’ needs and interactions. The KEMMRL converts natural language text into a semantic hypergraph using standard deep learning techniques in the natural language processing phase and specially deﬁned rules in the knowledge extraction phase. We created knowledge extraction rules that convert syntactic annotations into speciﬁc labels to be embedded in the semantic hypergraph [18]. Compared to other methods for semantic parsing in [8], KEMMRL allows diﬀerent natural language processing (NLP) and natural language generation (NLG) tasks. It provides mechanisms for natural language inference, co-reference resolution, topic modelling, etc. The advantage of using a semantic hypergraph to represent knowledge is that it allows the reconstruction of a sentence in its original form and the creation of new concepts from existing ones. However, its main disadvantage is its inability to reduce vagueness in automatic knowledge inference. The motivation behind this research is to apply semantic hypergraph in an Intelligent Tutoring System (ITS) [22] more precisely in its communication module designed for question-answer pair generation. The hypergraph can help the system identify relevant concepts and associations that may be overlooked by traditional keyword-based approaches and other similar approaches, resulting in more accurate and comprehensive answers to learner queries. Our main contributions are as follows: – We designed a model for knowledge extraction and semantic hypergraphbased knowledge representation. – The KEMMRL ﬂexibility and extensibility allow researchers of similar languages to adapt the model to their requirements.  
   
  222  
   
  D. Vasić et al.  
   
  – Manually designed Semantic Hypergraph Corpus (SemCro) is freely available under the CC-BY SA license at the CLARIN.SI repository of the Slovene National Consortium of the European Research Infrastructure (CLARIN). The following section provides an overview of the related work.  
   
  2  
   
  Related Work  
   
  Traditional NLP methods require handcrafted features and their manual design is a lengthy process. Deep learning, aiming at new applications(e.g. summarization, intelligent tutoring, etc.) can acquire new eﬀective feature representation from training data. State-of-the-art NLP methods for morphologically rich languages are based on deep learning and show good results for Croatian language [16]. 2.1  
   
  Methods for POS Tagging  
   
  The emergence of recurrent neural networks has enabled the development of methods for POS tagging without manually deﬁning the features but using a gate mechanism (Long-Short Term Memory LSTM) and two-way connections (Bidirectional LSTM) between neural networks layer. Even though it can be a problem for under-resourced languages that lack annotated corpora, transfer learning is the solution to overcome it. We propose a similar model that uses MaxOut on the output of the transformer and single-layer neural network with Softmax activation for the output predictions, The advancement in modelling attention [24] in neural networks allowed the model to focus only on relevant parts of the input. These unsupervised learning models are state-of-the-art for multiple NLP tasks. In [6], the authors propose a model for POS-tagging based on the open-source T’n’T implementation called HunPos [13]. An improvement of this model presented in [15] refers to the optimization of the algorithm and the training corpus. Instead of the HunPos implementation, an algorithm based on Conditional Random Fields (CRF) was used. A speciﬁc set of features used as input to the CRF algorithm contributed to the improvement of POS tagging for the Croatian language [15]. 2.2  
   
  Methods for Dependency Parsing  
   
  Most modern parsers are statistical and data-driven, relying on manually annotated corpora. Typically, data-driven parsers do not require formal grammar but use statistics instead. Data-driven dependency parsing solutions for underresourced languages include the approaches that use annotation projection [3] and/or transfer learning [16,23]. The ﬁrst Croatian SETimes.HR corpus [4] was developed for data-driven parsing and other NLP tasks. In [2], the authors propose a graph-based dependency parsing approach with predeﬁned rules for parsing non-projective trees. This approach achieved the unlabeled attachment score  
   
  KEMMRL: Knowledge Extraction Model  
   
  223  
   
  (UAS) of 73.4% and labelled attachment score (LAS) of 69.7% for the SETimes. They evaluated it using an hr500k corpus. In [5], the authors obtained better results, the UAS of 85.3% and the LAS of 79.4% employing graph-based dependency parsing and assigning the universal dependency labels for dependency trees. 2.3  
   
  Methods for Knowledge Extraction and Semantic Hypergraph-Based Knowledge Representation  
   
  Recent research on big data [11] shows that they come in various forms (text, XML, emails, images) or mostly (80%) in textual form. The manual extraction of these textual knowledge repositories requires eﬀort and time, so there is a growing interest in automatic knowledge extraction. Knowledge extraction methods commonly identify triplets, concepts, and dependency relations in the text. Knowledge representation formalisms are semantic networks, conceptual graphs, existential graphs, predicate logic, etc. Methods presented in [7] for concept extraction from the text and determining their interrelationships rely on rules and semantic knowledge bases. Knowledge extraction can refer to a task of learning, grouping, or classiﬁcation. The automatic extraction of semantic networks from text implies the extraction of triplets and the merging of these triplets into a unique graphic representation of knowledge. The main disadvantage of these methods is their inability to present all the knowledge contained in the text because they are focused on the extraction of triplets. Although triplets represent most knowledge in the text the representation of more complex sentences in this form would result in information loss because of an incomplete and incorrect knowledge representation. The knowledge representation technique that can meet these prerequisites is a semantic hypergraph [19]. The semantic hypergraph can entirely capture the richness of knowledge contained in natural language text.  
   
  3  
   
  The KEMMRL Architecture and Core Functions  
   
  This section presents a model for knowledge extraction from a text in the Croatian language. The proposed model uses natural language processing techniques, state-of-the-art deep learning algorithms and a rule-based approach to generate knowledge representations. The knowledge extraction model is rule-based and the output of HRtagger and HRparser is knowledge represented in the form of a semantic hypergraph. 3.1  
   
  Knowledge Extraction  
   
  Knowledge extraction from the text in a morphologically rich language such as Croatian is a demanding task. In highly inﬂected language, one word can have multiple forms that convey the same meaning. The proposed model for knowledge extraction and hypergraphic representation is shown in Fig. 1.  
   
  224  
   
  D. Vasić et al.  
   
  Fig. 1. Model for knowledge extraction and semantic hypergraph-based knowledge representation  
   
  The proposed model for knowledge extraction and semantic hypergraphbased knowledge representation consists of three components. – The text processing component uses Croatian text as input and produces syntactic and semantic annotations as output. – The hypergraph extraction component consists of a hypergraph extraction model that generates a semantic hypergraph as the output. It uses a rulebased approach to extract the hypergraph in two phases. – The inference component is an inference mechanism that uses retrieval and inference rules. It relies on a structured source such as a dictionary to describe the properties of the predicates over which it makes inferences. The proposed model for hyperedge extraction and knowledge representation relays on syntactic annotation methods deﬁned by the MULTEXT-East [12] Morphosyntactic Speciﬁcations and the Universal Dependencies [17]. The KEMMRL model supports languages that comply with these two speciﬁcations. The KEMMRL is a rule-based model independent of the tagging and parsing methods but dependent on the tagging and parsing speciﬁcations. Thus, it is easily extendable to many morphologically rich languages, including Romanian, Macedonian, Torlak and other languages in line with the MULTEXT-East speciﬁcations. The higher accuracy of the tagging methods, the better quality of knowledge extraction and representation. We used POS tags and dependency tree annotations to create an algorithm for hypergraph building in two phases. In the ﬁrst phase, the vertices of hyperedges were formed and semantically labelled. In the second phase, the model built hyperedges using semantic labels and dependency tree labels. We used a manually annotated hr500k corpus [14] as a reference training and evaluation corpus. The deep learning model for POS tagging and dependency parser uses transformer-based architecture. In the feature extraction phase it uses CSEBert model [23]. The model proposed in this article is modular and can be easily upgraded by using diﬀerent transformer-based architectures in the text processing stages.  
   
  KEMMRL: Knowledge Extraction Model  
   
  3.2  
   
  225  
   
  HRtagger  
   
  As a sub-component of the text processing component, HRtagger is a deep learning-based method that uses transfer learning to achieve state-of-the-art results. It uses Bidirectional Encoder Representation from Transformers (BERT) [9] in the training phase and the CSEBert model to initialize the neural network with the pre-trained weights for feature extraction. For parameter optimization in the neural network, the HRtagger uses the Adam optimization algorithm instead of the SGD [21] optimizer with an adaptive learning rate method [10] and L2 regularization. The default value of 0.9 is for beta1 and 0.999 for beta2. In initial training, the neural network uses the ﬁrst 10 warm-up steps. The reason for this neural network training is that the pre-trained data of the model diﬀer from the training data. If the model immediately adjusts the weight values to a ﬁxed learning rate, it would likely overﬁt the learning data and give no optimal results. The neural network is trained with an adjustable number of steps with a maximum of 2000 steps. After 25 iterations, there is no improvement in parameter optimization and neural network training stops. Figure 2 shows the training process, the accuracy of HRtagger, and the value of the loss function of the evaluation data set. The model gradually adjusts the learning rate, increasing it over the warm-up period to avoid overﬁtting. At this stage, the learned weight values of the CSEBert model slowly ﬁt sequence classiﬁcation.  
   
  Fig. 2. Accuracy and loss function values of HRtagger during training  
   
  3.3  
   
  HRParser  
   
  The HRparser is another sub-component of the text processing component and a deep learning-based method. A neural network parser uses a similar conﬁguration for feature extraction as the HRtagger. It employs a dynamic oracle for arc-eager parsing and performs real-time training. The neural network architecture is based on the BERT model and initialized with CSEBert weights. The HRparser is trained on the hr500k corpus and gradually adjusts the learning rate and warm-up training with adaptable iterations to avoid overﬁtting.  
   
  226  
   
  D. Vasić et al.  
   
  Adam algorithm with an adaptive learning rate and L2 regularization are used instead of the SGD optimization algorithm. The default value of 0.9 is for Beta1 and 0.999 for Beta2. During the training, the model makes 10 warm-up iterations, gradually lowers the learning rate and does not update the weight values of the CSEBert model. After 26 iterations, the model shows no decrease in loss function or increase in model accuracy, so training stops. Figure 3 shows the values of a loss function and model accuracy during the training phase.  
   
  Fig. 3. Accuracy and loss function values of HRparser during training  
   
  3.4  
   
  Semantic Hypergraph-Based Knowledge Representation  
   
  As mentioned before, the output of the knowledge extraction is knowledge represented in the form of a semantic hypergraph. It is a graph whose vertices and hyperedges have speciﬁc labels representing the roles of hyperedges in the sentence. They also determine the semantics of the event expressed in it. The semantic hypergraph used in this research is an ordered recursive hypergraph. Its ordering property is as essential as the word order in the sentence. The recursive property allows hyperedges to connect with other hyperedges similar to sentence building blocks. These properties make an ordered recursive hypergraph an ideal structure for knowledge representation.  : V → Uv⊆V π(v) for every vertex v ∈ V Let V = {v1 , ..., vn }, the function associates all permutations of set π(v). π(v) =  
   
   n!  {v} | v is not a set πi (v)| v is a set, πi (v) ith per. of v  
   
  (1)  
   
  i=1  
   
  The permutation of the set as shown in Eq. 1 determines all possible iterations of the set. If V = {v1 , . . . vn } is a set, then the ﬁrst permutation π1 (V ) is deﬁned with the sequence (v1 . . . vn ), and the second permutation π2 (V ) is equal to (v1 . . . vn vn−1 ), while for the last permutation πn! (V ) = (vn . . . v1 )). The order of hyperedges determines their recursivity. A hyperedge of order k contains at least one hyperedge of order k − 1, at least one hyperedge of order  
   
  KEMMRL: Knowledge Extraction Model  
   
  227  
   
  k − 2 and so on up to a hyperedge of order 0. The recursivity of a hyperedge is deﬁned inductively starting from the set of vertices Po = V = v1 , . . . , vn . hyperedge of order 0 is now deﬁned in Eq ??. Π (P0 ) = Π (v1 ) ∪ . . . ∪ Π (vn ) = v1 , . . . , v n  
   
  (2)  
   
  Let P1 = 2P0 − ∅ = {{v1 } , . . . , {v1 , . . . , vn }} a set of all possible hyperedges of order 0 of set V. In this way, an ordered and recursive hypergraph is deﬁned as an ordered pair V, E hyper where V = {v1, . . . , vn } is a set of vertices, n and E hyper subset i=0 Π (Pi ) = HV set of all possible hyperedges of highest order n. With such a deﬁned, arranged and recursive hypergraph, the structural foundations for the semantic hypergraph H have been deﬁned.  
   
  4  
   
  Evaluation Results  
   
  The complexity of the knowledge extraction task makes the evaluation task complex too. The text processing component of the KEMMRL relies on state-ofthe-art deep learning methods for POS tagging and dependency parsing. Hence, the accuracy of the KEMMRL depends on the accuracy of the applied ML methods, which require evaluation. We evaluated these methods in the testing phase on the hr500k corpus. To further check the accuracy of the HRtagger and HRparser methods, we used an out-of-domain corpus diﬀerent from the training one [20], the SemCro corpus. We applied the algorithm for measuring the structural similarity of hypergraphs described in the previous section and the metric for measuring correctly labelled semantic roles. The highest average structural similarity to the reference hypergraph was considered the best. The evaluation metric computed the percentage of correctly labelled semantic roles out of all ones. We also evaluated the HRtagger and HRparser methods by comparing them with existing Classla and ReLDI [1] methods and evaluated on the SemCro corpus. 4.1  
   
  Evaluation Results for HRtagger and HRparser  
   
  KEMMRL extracted knowledge by applying rules over syntactic information, which meant the higher the POS tagging precision, the higher the knowledge extraction accuracy. HRtagger method was compared with state-of-the-art methods for the Croatian language and tested on the SemCro corpus. Typically, methods created by training on thematic texts are biased to the text type and genre (science, literature, media, etc.). Therefore, methods developed on the SemCro corpus would likely obtain lower results if used on a diﬀerent text type or genre. However, the SemCro corpus encompasses various grammatical structures that are not domain-speciﬁc but belong to a general language. Table 1 shows the evaluation results obtained for the HRtagger method using the measures of precision, recall, and F-score.  
   
  228  
   
  D. Vasić et al. Table 1. Evaluation results for HRtagger Method  
   
  hr500k corpus SemCro corpus Precision Recall F1 score Precision Recall F1 score  
   
  Classla 94% HRtagger 95% 92% ReLDI  
   
  94% 95% 92%  
   
  94% 95% 92%  
   
  95% 94% 92%  
   
  94% 93% 92%  
   
  95% 94% 92%  
   
  Although the HRtagger achieved better results on the hr500k corpus, the evaluation results for the SemCro were slightly worse because it overﬁtted the training data and evaluated on out-of-domain text the HRtagger was not so eﬃcient. So, we used diﬀerent hyperparameters and applied regularization methods to reduce overﬁtting. Comparison to the state-of-the-art POS tagging methods in the knowledge extraction phase revealed that the HRtagger achieved the best results and created knowledge that was more similar to the gold standard. Presumably, because the KEMMRL does not consider morphological features but only POS tags (if the word is a noun or verb etc.). We evaluated the accuracy of HRparser using standard evaluation metrics Labeled Attachment Score (LAS) and Unlabeled Attachment Score (UAS) to compute the percentage of words assigned to the correct head with the proper relation. Also, a label accuracy score (LS) counted the percentage of correctly labelled tokens at the level of all sentences. The HRparser was also evaluated on hr500k and SemCro corpus. Table 2. Evaluation results for HRparser Method  
   
  hr500k corpus SemCro corpus UAS LAS UAS LAS LS  
   
  Classla 86% 91% HRparser 89% 94% 86% 90% ReLDI  
   
  86% 75% 86% 95% 86% 88% 77% 53% 66%  
   
  As shown in Table 2, the HRparser method achieved the best results, followed by the Classla and the ReLDI methods. Those results were not surprising because the HRparser achieved similar scores when testing on the hr500k corpus. The HRparser architecture used a contextual vector representation and the transition-based method, which resulted in better scores. Using the BERT model, the HRparser achieved signiﬁcantly better results. HRparser achieved a 9% increase in UAS score for a given sentence and an 11% increase in LAS score on SemCro. This signiﬁcant improvement opened the possibility of developing a robust HRparser method for knowledge extraction based on the syntactic annotation of text.  
   
  KEMMRL: Knowledge Extraction Model  
   
  4.2  
   
  229  
   
  The Evaluation of Semantic Hypergraph Representations  
   
  We evaluated semantic hypergraph representations using measures for computing the structural similarity of hyperedges and the number of correctly labelled hypergraph vertices. We used methods for extracting hyperedges β and labelling vertices with semantic roles α. The algorithm shown in 1 was used to evaluate the quality of the β method. The proposed similarity measure captured hyperedges whose average similarity was maximal. Evaluating the structure of a hypergraph consisted in evaluating the method for extracting hyperedges β. Table 3 shows similarity metrics scores obtained for HRtagger and HRparser on the SemCro, compared to other methods. Table 3. The results of similarity metrics Method  
   
  Average similarity  
   
  Classla 64.64% HRtagger + HRparser 67.55% 62.54% ReLDI  
   
  The HRtagger and HRparser showed the best results in measuring the structural similarity of hypergraphs. They used an algorithm for comparing the similarity of the adjacency matrices of two hypergraphs. As expected the method with the best parsing accuracy (due to a dependency tree-based structure) obtained the best results in measuring the structural similarity of hypergraphs. We also evaluated the percentage of semantic roles and labels of hyperedge vertices that the HRtagger and HRparser successfully identiﬁed. The α evaluation method checked the quality of knowledge extracted using HRtagger and HRparser methods. Table 4 shows the results of the α evaluation method, using Precision, Recall and F1 metrics. Table 4. Results indicating the percentage of correctly identiﬁed semantic roles and labels in the SemCro corpus. Method  
   
  Precision Recall  
   
  Classla  
   
  F1 score  
   
  45.79%  
   
  47.79% 45.73%  
   
  HRtagger + HRparser 47.70%  
   
  47.57% 47.03%  
   
  ReLDI  
   
  44.87% 44.35%  
   
  44.88%  
   
  All methods performed approximately the same. We calculated the percentage of semantic roles and labels of hyperedge vertices that the HRtagger and HRparser successfully identiﬁed in each sentence. We compared automatically  
   
  230  
   
  D. Vasić et al.  
   
  identiﬁed semantic roles to manually annotated ones in the SemCro corpus, representing the gold standard. The HRtagger + HRparser methods showed the best results when applying the alpha method. Although the HRtagger showed slightly lower results, the high precision of HRparser compensated for it.  
   
  5  
   
  Conclusion and Future Work  
   
  This paper presents the model for knowledge extraction for morphologically rich languages (KEMMRL) as the Croatian language and semantic hypergraph representation. An extensive evaluation demonstrates the eﬃciency and accuracy of the newly developed HRtagger and HRparser methods compared to the state-ofart methods for text processing in the Croatian language. Most systems that use text in natural language can represent knowledge using semantic hypergraphs. Automatic similarity metrics can capture hypergraphs’ similarity. A semantic hypergraph is the most suitable form for knowledge representation and evaluation based on a similarity algorithm. The application of the semantic hypergraph is not limited to knowledge-based systems but also other natural language processing tasks such as text summarization. Lengthy texts can be converted into semantic hypergraphs and then compressed by reducing the number of edges and vertices in the semantic hypergraph. The KEMMRL uses a statistical model for hyperedge identiﬁcation and building without handmade rules. Future research will include more precise knowledge extraction rules and a statistical model for semantic hypergraph building. The objective is to apply this model as knowledge representation in an intelligent tutoring system. The implementation of a semantic hypergraph into modules of an ITS can enable the system to represent complex knowledge structures and relationships between concepts more eﬀectively. This can lead to more personalized and adaptive tutoring experiences for learners, as the system can better understand their knowledge gaps and provide targeted feedback and resources. Acknowledgements. The paper is part of the work supported by the Oﬃce of Naval Research Grant No.N00014-20-1-2066  
   
  References 1. ReLDIanno – text annotation service for processing slovenian, croatian and serbian – CLARIN Slovenia. https://www.clarin.si/info/k-centre/web-servicesdocumentation/. Accessed 21 Jan 2022 2. Agić, Ž., Merkler, D., Berović, D.: Parsing croatian and serbian by using croatian dependency treebanks. In: Proceedings of the 4th Workshop on Statistical Parsing of Morphologically-Rich Languages, pp. 22–33. Association for Computational Linguistics, Seattle, Washington, USA (2013). https://aclanthology.org/W13-4903 3. Agić, Ž., Tiedemann, J., Merkler, D., Krek, S., Dobrovoljc, K., Može, S.: Crosslingual dependency parsing of related languages with rich morphosyntactic Tagsets. In: Proceedings of the EMNLP’2014 Workshop on Language Technology for Closely  
   
  KEMMRL: Knowledge Extraction Model  
   
  4. 5.  
   
  6.  
   
  7. 8.  
   
  9.  
   
  10.  
   
  11.  
   
  12.  
   
  13.  
   
  14.  
   
  15.  
   
  16.  
   
  17.  
   
  18. 19.  
   
  231  
   
  Related Languages and Language Variants, pp. 13–24. Association for Computational Linguistics, Doha, Qatar (2014). https://doi.org/10.3115/v1/W14-4203. https://aclanthology.org/W14-4203 Željko Agić, Ljubešić, N.: The SETIMES.HR linguistically annotated corpus of croatian, pp. 1724–1727 (2014). http://nlp.ﬀzg.hr/resources/corpora/ Željko Agić, Ljubešić, N.: Universal dependencies for croatian (that work for serbian, too), pp. 1–8 (2015). http://universaldependencies.github, http://bsnlp2015.cs.helsinki.ﬁ/bsnlp2015-book.pdf Željko Agić, Ljubešić, N., Merkler, D.: Lemmatization and morphosyntactic tagging of croatian and serbian. In: Proceedings of the 4th Biennial International Workshop on Balto-Slavic Natural Language Processing, pp. 48–57 (2013). http://www.nljubesic.net/resources/corpora/setimes/, http://nlp.ﬀzg.hr/ resources/models/tagging/ Banko, M., Cafarella, M.J., Soderland, S., Broadhead, M., Etzioni, O.: Open information extraction from the web, pp. 2670–2676 (2007) Batanović, V., Cvetanović, M., Nikolic, B.: A versatile framework for resourcelimited sentiment articulation, annotation, and analysis of short texts. PLOS ONE 15, e0242050 (2020). https://doi.org/10.1371/journal.pone.0242050 Devlin, J., Chang, M.W., Lee, K., Toutanova, K.: Bert: pre-training of deep bidirectional transformers for language understanding (2018). http://arxiv.org/abs/ 1810.04805 Duchi, J., Hazan, E., Singer, Y.: Adaptive subgradient methods for online learning and stochastic optimization. J. Mach. Learn. Res. 12, 2121–2159 (2011). https://doi.org/10.1109/CDC.2012.6426698, http://www.eecs.berkeley. edu/Pubs/TechRpts/2010/EECS-2010-24.html Eberendu, A.C.: Unstructured data: an overview of the data of big data. Int. J. Comput. Trends Technol. 38, 46–50 (2016). https://doi.org/10.14445/22312803/ IJCTT-V38P109 Erjavec, T.: Multext-east: morphosyntactic resources for central and eastern European languages. Lang. Res. Eval. 46, 131–142 (2012). https://doi.org/10.1007/ s10579-011-9174-8, https://link.springer.com/article/10.1007/s10579-011-9174-8 Halácsy, P., Kornai, A., Oravecz, C.: Hunpos-an open source trigram tagger, pp. 209–212 (2007). https://doi.org/10.5555/1557769, http://mokk.bme.hu/ resources/hunpos/ Ljubešić, N., Agić, Ž., Klubička, F., Batanović, V., Erjavec, T.: Training corpus hr500k 1.0 (2018). http://hdl.handle.net/11356/1183, slovenian language resource repository CLARIN.SI Ljubesic, N., et al., (eds.) Proceedings of the 10th International Conference on Language Resources and Evaluation LREC 2016, Portorož, Slovenia, 23–28 May 2016. European Language Resources Association (ELRA) (2016). http://www.lrecconf.org/proceedings/lrec2016/summaries/340.html Ljubešić, N., Lauc, D.: BERTić- The transformer language model for bosnian, croatian, montenegrin and serbian, pp. 37–42 (2021). https://www.clarin.si/info/ k-centre/, http://arxiv.org/abs/2104.09243 de Marneﬀe, M.C., Manning, C.D., Nivre, J., Zeman, D.: Universal dependencies. Comput. Linguist. 47, 255–308 (2021). https://doi.org/10.1162/COLI-a-00402, http://universaldependencies.org/ Menezes, T., Roth, C.: Semantic hypergraphs. CoRR abs/1908.10784 (2019). http://arxiv.org/abs/1908.10784 Menezes, T., Roth, C.: Semantic hypergraphs. https://arxiv.org/abs/1908.10784 (2019). https://doi.org/10.48550/ARXIV.1908.10784  
   
  232  
   
  D. Vasić et al.  
   
  20. Paroubek, P., Chaudiron, S., Hirschman, L., Chaudiron, S., Hirschman, L.: Principles of evaluation in natural language processing. Revue TAL 48, 7–31 (2007). http://www.technolangue.net 21. Robbins, H., Monro, S.: A stochastic approximation method. Ann. Math. Stat. 22, 400–407 (1951). https://doi.org/10.1214/AOMS/1177729586 22. Stankov, S., Rosić, M., Žitko, B., Grubišić, A.: Tex-sys model for building intelligent tutoring systems. Comput. Educ. 5, 1017–1036 (2008) 23. Ulčar, M., Robnik-Šikonja, M.: Finest Bert and Crosloengual Bert, pp. 104–111. Springer International Publishing (2020) 24. Vaswani, A., et al.: Attention is all you need. In: Guyon, I., Luxburg, U.V., Bengio, S., Wallach, H., Fergus, R., Vishwanathan, S., Garnett, R. (eds.) Advances in Neural Information Processing Systems, vol. 30. Curran Associates, Inc. (2017). https://proceedings.neurips.cc/paper/2017/ﬁle/ 3f5ee243547dee91fbd053c1c4a845aa-Paper.pdf  
   
  Synthesizing Didactic Explanatory Texts in Intelligent Tutoring Systems Based on the Information in Cognitive Maps Viktor Uglev1(B)  
   
  and Oleg Sychev2  
   
  1  
   
  2  
   
  Siberian Federal University, Zheleznogorsk, Russia [email protected]  Volgograd State Technical University, Volgograd, Russia  
   
  Abstract. The paper deals with the problem of synthesizing texts that explain decisions of an Intelligent Tutoring System for the learner. Solving this problem is important for increasing human trust in the ITS decisions by ﬁnding eﬀective arguments and synthesizing explanatory texts. We describe an approach to preparing and concentrating raw data that is similar to the process used for mapping. The texts explaining the system’s decisions are generated using the method of parametric maps, which are visualized as Cognitive Maps of Knowledge Diagnosis: the transition from particular maps to the combined map and the development of a system of arguments based on these data. We show the structure of an explanatory text and the accompanying visualization of a cognitive map. We demonstrate the explanation synthesis on the example of a graduate student in the course “Simulation modeling”. The explanation consists of the text and supporting visualization. Preliminary analysis has shown signiﬁcant student interest in receiving explanations, containing verbal and non-verbal (cognitive maps) components, from the Intelligent Tutoring System about its decisions. Keywords: Intelligent Tutoring Systems · cognitive visualization · decision making · explainable AI · explanatory text · Cognitive Maps of Knowledge Diagnosis  
   
  1  
   
  Introduction and Related Works  
   
  Using Intelligent Tutoring Systems (ITS) in online learning involves making diﬃcult decisions corresponding to the learning situation. A human learner is more complex than any current tutoring system, including intelligent systems, and not inclined to trust unknown sources; this lowers learners’ trust in recommendations and decisions made by ITS [1,9]. Human-computer communication happens through the ITS interface and can take diﬀerent forms: text, synthesized speech, images, and changes in the availability of navigation widgets. When ITS decisions are not clear to the learner and the system simply states them, it can irritate the learner and lower the learning speed [2,12]. This problem can be solved by organizing a dialogue between ITS and the learner to let the learner c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 233–246, 2023. https://doi.org/10.1007/978-3-031-32883-1_20  
   
  234  
   
  V. Uglev and O. Sychev  
   
  learn more about the reasons for the ITS decisions while the system can update the learner model using the information acquired through the explanatory dialogue. Dialogue in ITS can be divided into two chief categories: dialogue related to the studied material (content-related dialogue) and dialogue related to learning process (didactic dialogue). Some ITS use static content-related dialogue entered by authors or teachers (e.g., in the form of scaﬀolding questions [11]). It can be dynamically generated based on ontologies of subject domains (e.g., [10,17,24]). But developing speciﬁc subject-domain models is very time-consuming and their usage is limited to the courses teaching the relevant subject domain. Didactic dialogue is more generalizable because decisions making and explanatory text synthesis in ITS can by uniﬁed if the course speciﬁcs are described in general terms by a learning-process ontology (e.g., [5]) or using other methods of learning-unit organization (e.g., [22,25]). So we can develop a generalized method of generating explanations which allow answering questions like “Why and how this decision was made?” or “Why do I need this?”. Let’s call this kind of dialogue a didactic dialogue. It can be useful in forming personalised learning collections and personalised learning trajectories when showing hints and recommendations about topics to study next, during an assessment of the learning situation, and while discussing the situation [19]. The dialogue mode can be initiated by the learner or by the ITS. The topic of didactic dialogue can be either a part of a course (e.g., a term, assignment, learning unit, topic, course or curriculum) or other learning entities (e.g., competencies, standards, methods of grading and decision-making, learner’s actions). This makes it important to use both verbal and non-verbal (e.g., cognitive maps) methods of supporting the dialogue. The didactic dialogue starts from a well-reasoned explanatory text which starts the dialogue. In this paper, we consider the problem of synthesizing explanatory texts that start didactic dialogues with an ITS. Table 1 shows a comparative analysis of modern ITS with developed explanatory text capabilities. They mostly lack complex solutions using ﬂexible (for different entities) support of the didactic dialogue process with explanations and supporting cognitive visualization. No ITS has “Yes” in all the columns. So further research in this ﬁeld is relevant. In this paper, we consider an approach to explaining didactic decisions in ITS based on the information concentrated for cognitive maps (including their visualization). We brieﬂy sketch the technology of concentrating and mapping data, describe the stages of synthesizing explanatory text and the templates used, consider a case study of didactic explanation and formulate recommendations for developing and using the explainable AI approach for ITS.  
   
  2 2.1  
   
  Method of Synthesizing Explanatory Text Data Concentration and Mapping  
   
  Consider the model of an e-learning course, consisting of course elements, connections between them, and supporting entities. ITS logs (as a digital learning  
   
  Synthesizing Didactic Explanatory Texts ITS  
   
  235  
   
  Table 1. Comparison of didactic-explanation characteristics of diﬀerent ITS System  
   
  Interdisciplinary connections  
   
  Changing the subject and level of abstraction  
   
  Explanation of Graphic decision supplement making  
   
  GIFT [8]  
   
  Yes  
   
  No  
   
  No  
   
  No  
   
  Mastery Grid [3]  
   
  No  
   
  No  
   
  No  
   
  Yes  
   
  ITS with knowledge graphs [18]  
   
  No  
   
  No  
   
  No  
   
  Yes  
   
  AT-TECHNOLOGY [15]  
   
  Yes  
   
  No  
   
  No  
   
  No  
   
  DeepTutor [14]  
   
  No  
   
  Yes  
   
  Yes  
   
  No  
   
  footprint) time and frequency data concerning working with course elements, answers to tests and assignments, and survey data. These data require generalization (concentration) both for determining the control action and synthesizing its explanation. For this, a chain of concentration is used: statistical concentrations → metric concentration → semantic concentration → logical concentration. At the stage of metric concentrations, mapping techniques are used: the basic model of the e-learning course in the Cognitive Map of Knowledge Diagnosis (CMKD) notation (see Fig. 1a) is overlaid with the digital footprint data regarding the chosen analysis aspect, time dynamics and decision-making level (see the visualized example of a cognitive map for competency aspect in Fig. 1b; it is explained in detail in [20]). These cognitive maps will be discussed in Sect. 3 during a case study.  
   
  Fig. 1. Basic CMKD for the course “Simulation modeling” (a) and its individualized variants for the competence (b) and course (c) aspects.  
   
  2.2  
   
  Explanatory Form  
   
  Explanatory form is shown as the ITS reaction to an event (e.g., passing a control point in the course) or at the learner’s initiative (e.g., by pressing the button  
   
  236  
   
  V. Uglev and O. Sychev  
   
  to ask for explanation while watching learning material). Further in this paper, we will consider using the explanatory form to explain the system’s decision as a reaction to an event which is the most important case. Didactic explanation combines verbal (text) and non-verbal (cognitive map in the visualized form) parts. The basic explanatory text generated by ITS must include the following: – the sentence of qualitative evaluation of learner’s actions or the learning situation α; – sentences, brieﬂy describing the current situation, emphasizing 1–3 relevant parameters βj ; – sentences γk , formulating recommendations for further work with the course elements (mentioning the expected result regarding the learner’s goals) for furthering pedagogical intervention and increasing the learner’s motivation; – the sentence that invites the learner for further explanatory dialogue δ. The non-verbal part of the explanation is shown as a CMKD (basic, extended, or simpliﬁed), focusing attention on the subject matter. It is oriented at convincing the learner in the potential usefulness of following the system recommendations. The invitation to continue dialogue is supplemented with the necessary controls (request constructor). According to our method, to generate the verbal part of the explanatory form, ITS should perform the following actions, based on the cross-cutting approach to decision-making on the course level [22]: 1. statistic concentration of data regarding the chosen (by ITS) pedagogical intervention for each learning unit ui with overlaying of these data on the individualized course map for each relevant aspect (the relevant aspects are selected according to the current learning problems as shown in [20]); 2. uniting all the problematic elements ui ' in the combined parametric map, characterizing the situation as a whole, which can be extended by inserting additional entities (competences, learner’s goals, etc., which can be semantically linked to the relevant units ui '); 3. evaluation of the signiﬁcance of the learning problems using expert-systems methods and sorting values in ui ' according to their signiﬁcance; 4. simplifying the combined map by removing the less-signiﬁcant elements, emphasizing the elements ui '', which are most signiﬁcant for achieving the result of the pedagogical intervention; 5. selecting 1–2 key problems from ui '' and synthesizing the sentence α according to them; 6. iterating over ui '' and synthesizing sentences βj , reﬂecting the evaluation of mastering learning units or their groups, indicating the found causes of problems in learning and the linked entities; 7. iterating over ui '' and synthesizing (for each problematic unit or their group) 1–3 sentences δk , mentioning the learner’s action that will have the best eﬀect according to the ITS estimation: these sentences include didactic evaluation  
   
  Synthesizing Didactic Explanatory Texts ITS  
   
  237  
   
  of learning units (their groups) stating found causes of problems and the relevant entities, enhanced with personally-oriented arguments according to the learner’s model; 8. showing the sentences α, βj and δk ; 9. selecting the most relevant analysis aspect according to the goal of pedagogical intervention and showing the relevant CMKD (typically, in the simpliﬁed form); 10. showing the invitation to continue dialogue δ and request constructor. The method shown above is based on the ITS ability to concentrate data into CMKDs and give the learner an option to interact with the map. The learner, after reviewing the content of the explanatory form, can initiate dialogue (ask to synthesize a new form by their request), jump to one of the mentioned learning units using its hyperlink, return to one of the previous forms (later during the dialogue), start the process of clarifying their preferences (correcting personal goals), or close the explanatory form. 2.3  
   
  Text Synthesis  
   
  In the developed ITS AESU, we employed the template-based text synthesis technique. Didactic texts use dictionaries of user-created learning entities which are entered when a course is published in the tutoring system. Teachers cannot aﬀect the general structure of the explanation and its sentences; they can only enter a textual description of entities in their courses. The text is synthesized according to the speciﬁcs of a particular learning situation and the learner’s goals. Let us consider the generation of each block of explanatory text in the situation when the system formulates recommendations on further study of the course after the mid-term exam. The ﬁrst block of explanatory text (α) consists of three parts: statement of the facts (grade) and generalized problem; quality of the learner’s work when studying the course, and a brief listing of the learned objects which are recommended for further study. Grade and Generalized Problem. This sentence is generated according to the following template (translated to English): Your learning results have P1.1 dynamics (the current grade is P1.2 % If1 { and it P1.3 by P1.4 % in comparison with the previous results}) If2 {, but P1.5 problems arise because of inadequate absorption of some elements of the previously studied material}. The parameters P and conditions If are determined as follows: – P1.1 is a qualitative estimate, calculated using fuzzy-logic methods (see [23]) from quantitative grades for the current and previous exams and can be one of the following: {highly positive, positive, slightly positive, slightly negative, negative, highly negative};  
   
  238  
   
  V. Uglev and O. Sychev  
   
  – P1.2 and P1.4 are calculated from the grades in the digital learning footprint; – P1.3 is an evaluation of the diﬀerence between the latest and previous grade, which takes a value from the following set {increased, same, decreased}; – P1.5 is a fuzzy estimate of the level of problems in the current learning situation, calculated by an expert system, and can be one of the following {no, some, signiﬁcant, very signiﬁcant}; – the block If1 is shown only if P1.1 is “slightly positive”; – the block If2 is shown only if P1.1 is not “highly positive”. The usage of quantitative fuzzy estimates allows making the explanatory text closer to natural-language dialogue and stimulates the learner to ask for further clariﬁcation of the summarized statements made by the ITS. Quality of the Learner’s Work. This part uses the following template: Your intensity of learning is estimated as P2.1 , while your intention to achieve your stated goals is estimated as P2.2 . Both qualitative parameters of this sentence are estimated by the ITS based on the data in the digital learning footprint, including the data concentrated for the combined CMKD. Intensity of learning is based on the evaluating the frequency of using learning materials in the ITS and time spent learning; the method of estimating the intent to achieve student’s stated goals is described in [19]. The values of P2.1 and P2.2 can be one of the following: {low, average, high}. Recommendation for Further Study. If there are problems in the learning situation (i.e., the value of P1.5 is diﬀerent from “no problems”), the explanatory message is enhanced with the sentence, recommending the learning units that, according to the system estimates, can help with solving the learning problems most. The following sentence template is used: Please, If3 {ﬁrst of all} pay more attention to If1 {P3.1 , P3.2 }. The parameters P and the output condition If are determined as follows: – P3.2 is the list of the most signiﬁcant learning units from ui“ , which were detected during analysis of the combined CMKD (1–3 units), which are joined by commas and the conjunction “and” depending on their number; – P3.1 changes depending on the number of recommended units (i.e., singular “learning unit” or plural “learning units” depending on the number of elements in P3.2 ); – the block If3 is shown if ui“ contains more than 3 values for P3.2 . Russian is a synthetic language [6] so it has more diverse morphology than partly analytical languages like English. The template method of text synthesis allowed us to avoid problems with word form changes. The user-depending words and collocations are entered in the system dictionaries in the required case; an eﬀort was made to formulate all the template phrases so that each user-depending parameter is used in one case only.  
   
  Synthesizing Didactic Explanatory Texts ITS  
   
  3  
   
  239  
   
  Case Study  
   
  For a case study of explanatory text generation, we used the learning situation of a graduate student majoring in “Informatics and Computing” (3rd semester, Siberian Federal University) in the ITS AESU1 ). The learner studies the course “Simulation modeling” (code d3.2; the basic CMKD for this course is shown in Fig. 1a), which consists of 19 learning units, combined into four topics (from t4 to t7 according to the cross-cutting numbering of semester’s topics). The ITS has the results of mid-semester exams for all the semester courses (grades and competence proﬁle according to [20]), survey data (the student indicated their preferences regarding learning units, competences PK-7, OK-3 and UK-1, and skill development ψ6 ). We consider the case of the explanation that is shown after the event “showing the results of mid-term exams for the course d3.2” by the ITS planner. The ITS decided to recommend the student to work more with some of the more signiﬁcant (in the context of the current learning situation) learning units of the course d3.2, which was supported by generating textual arguments and cognitive visualization (the expected reaction of the student is working on the recommended learning units). The following actions were performed automatically: 1. the data regarding knowledge and competence proﬁle of the student were gathered from their digital learning footprint; they were overlaid on the individualized parametric multi-aspect map (the map is shown in the CMKD notation in the course aspect in Fig. 1c and shown in the competence aspect in Fig. 1b for the competency UK-1 ); for each generated map the problematic units were selected according to the method described in [20](these were the learning units u1 , u6 , u7 , u9 , u10 , u11 , u12 , u18 and u19 ); 2. the combined parametric map was generated (which united all “problematic” elements (with zero or negative certainty factor values; visualized as white and red ﬁgures) both from the target course (d3.2, 41 learning units were selected) and the linked courses (directly or indirectly) (the set ui‘ , uniting the learning units from the 6 courses of the current semester, one course from the previous semester, and one course from the next semester) and also the personal preferences and key learning entities that were closely linked to the problematic elements (the competences PK-2, PK-7, UK-1, UK-4, OK-5 and the personal goal ψ6 ); 3. for each of the elements from ui ' the complex estimate of the degree of their “level of being problematic” was made (a production-based expert system with composite reasoning rules [4]) and sorted according to it (e.g., for u6 the certainty coeﬃcient of being problematic was 0.62, while for u7 it was 0.17); 4. the new set ui ''was created, which included the most signiﬁcant elements from ui ' (u6 , u11 , u12 ) for the course d3.2 and other entities (27 elements 1  
   
  https://aesfu.ru/.  
   
  240  
   
  V. Uglev and O. Sychev  
   
  total); a simpliﬁed combined parametric map was synthesized (it is visualized in Fig. 2);  
   
  Fig. 2. A combined parametric map in the CMKD notation for the current learning situation.  
   
  5. the expert system analyzed all the elements from the combined parametric map belonging to the course d3.2 (in ui '' the most signiﬁcant problems were found in the competence aspect for the competence UK-1 which was a priority for the student, which was caused by the low mastery of the learning unit u7 “Monte-Carlo method” (the learning material from the course core which is semantically linked to the competence UK-1 which is important for the student and determines the success in studying the following learning unit u10 ) and u10 “Simulation of analog processes using pseudo-random numbers” (this learning unit is semantically linked to ψ6 and causes problems in studying the dependent units u11 and u12 ); this resulted in the synthesis of the following α block of text (hyper references are underscored on the upper block in Fig. 3); Your learning results have positive dynamics (your grade is 76%; it increased by 3% compared to the previous grade), but signiﬁcant problems arise because of inadequate absorption of some elements of the previously studied material. Your intensity of learning is estimated as average, while your intention to achieve your stated goals is estimated as low. Please, ﬁrst of all, pay more attention to “Monte-Carlo  
   
  Synthesizing Didactic Explanatory Texts ITS  
   
  241  
   
  method” (u7 ) and “Simulation of analog processes using pseudo-random numbers” (u10 ).  
   
  Fig. 3. Explanatory form for the student described in the case study enhanced by the visualization of simpliﬁed CMKD; course “Simulation modeling” (translated from Russian).  
   
  6. for each element of ui '', belonging to d3.2, the synthesis of the sentences βj , was conducted to describe the found problem as in the following example for the learning unit u6 (the middle block in Fig. 3): The found problems in the learning unit “Random variables and their characteristics” (u6 ) belong to the assignments, verifying the development of the competence “Can estimate modes of operation of IT-subsystems of space systems and take them into account during development” (PK-7) (the competence development level is estimated as not developed) and “Can analyse professional information, highlight the most important, structure, draw up documents, and present with well-grounded conclusions and recommendations”(OK-3) (the competence development level is estimated as likely not developed), while you indicated that you consider these competencies important for your professional development; the low level of their development keeps your from reaching the goal “Study the methods of working in specialized software for modeling and engineering design” (ψ6 ).  
   
  242  
   
  V. Uglev and O. Sychev  
   
  7. the sentences δk were synthesised for each element of ui '' to describe the recommended actions and their expected outcomes as in the following example for the unit u6 (the lower block of the explanatory text in Fig. 3): In the topic 2 “Distributions of pseudo-random variables and their simulation” (t5 ) you should work more on the learning unit “Random variables and their characteristics” (u6 ), which will allow to better develop the competences ‘Can estimate modes of operation of IT-subsystems of space systems and take them into account during development” (PK-7) and “Can analyse professional information, highlight the most important, structure, draw up documents, and present with well-grounded conclusions and recommendations”(OK-3) which are important for you, and also let you better understand the problematic unit “Formalizing transaction streams in queueing models” (u11 ). This recommendation is given to you for the second time! 8. the text α, βj and δk is shown to the student; 9. the most important analysis aspect for the recommendations in α was identiﬁed as the course aspect (for u11 and u12 ), which allowed to generate the simpliﬁed CMKD (see Fig. 3), emphasizing the necessary cause-eﬀect links by red colour, to enhance the generated text; 10. the sentence δ was shown to invite the student to discuss the system to get more information about the ITS decision: see the lower part of the window in Fig. 3 with the request constructor (see Fig. 4) that is collapsed for now to let the student concentrate on the explanation ﬁrst.  
   
  Fig. 4. Request constructor form in ITS AESU with ﬁlled ﬁelds (translated from Russian).  
   
  After reading the explanatory text shown above, the graduate student followed the system recommendation and jumped to the learning unit u10 . In general, the student whose situation was shown in this example, received 114 didactic explanations while studying the course “Simulation modeling” in 62%  
   
  Synthesizing Didactic Explanatory Texts ITS  
   
  243  
   
  of occurrences he used the links in the text or visualized map to jump to the recommended learning material, while in 38% of occurrences, the student started a dialogue with the ITS to deepen their understanding of the reasons of ITS decisions.  
   
  4  
   
  Results and Discussion  
   
  Textual and graphic explanations of the ITS decisions, synthesized according to the method described above were used to support experimental online learning for graduate students majoring in “Informatics and computing” in Siberian Federal University enrolled in the 2020 year year (see [22] for details of method). For each course, we formed individual learning trajectories, taking into account learners’ goals. So, while the curriculum was the same for all the learners, its content diﬀered by the lists of learned topics and levels of control of knowing each topic. Students received recommendations from ITS; they could ask for explanations of these recommendations in text form, which was supported by cognitive visualization in the CMKD notation. We recorded all learners’ dialogues with the ITS, the frequency of asking for explanations of ITS decisions, and the following jumps to the pages with learning content. At the end of each course, the students completed a survey about their trust in ITS decisions. The high percentage of asking for explanations (up to 68% cases of asking for didactic explanations) is consistent with the ﬁndings of Bodily and Verbert [2], “if students know why they receive a particular recommendation, it could increase their trust in the system along with the likelihood of them following feedback provided by the system”. Our results are also consistent with most of the ﬁndings of Ilves et al. [7], but we did not ﬁnd a lowering in the quality of learning for the diﬀerent groups of learners (see [22]). We consider these results preliminary; they require a more thorough study (e.g., to determine the comparative eﬀectiveness of diﬀerent parts of the explanation and improve them). However, our current ﬁndings let us recommend the following: – for making decisions and explanation generation, online course model (structural component) and target activities model (functional component) require not just developing hierarchies of entities, but also links between them and graded tasks (tests and assignments); – learner surveys must contain information necessary to ﬁnd personal preferences on diﬀerent education levels (from a particular course to the whole curriculum); – the textual explanation must be compact to avoid overloading the learner with the volume of information and too many details [16]; – templates for repeated sentences (e.g., for the parts βj and δk ) should have several variants (e.g., using synonyms) to increase text diversity [13]. The disadvantage of the proposed approach is the very labour-intensive process of creating the knowledge base of the course (curriculum) that is necessary  
   
  244  
   
  V. Uglev and O. Sychev  
   
  for making automatic decisions in the learning situation and explaining these decisions. The advantage is applying a uniﬁed approach of analysing learning situations to a wide range of courses. In our experience, an experienced teacher can specify a new course and gather personal preferences using ITS services without spending too much time: a course can be parameterized in 1–1.5 h, while formalization of the existing bank of assignments and tests requires 1–2 working days. The data for CMKD is concentrated automatically and can be used to generate textual explanations according to our method, which makes explanatory forms enhancement of existing decision-supporting techniques which does not require additional input from the teacher.  
   
  5  
   
  Conclusion  
   
  The quality of communication between a learner and an ITS depends heavily on the level of trust in the system’s decisions. Combining methods of text synthesis and cognitive visualization to explain AI decisions increases the eﬀectiveness of online learning. We found a steady interest to the didactic explanations provided by the ITS for its decisions both supported by cognitive visualizations (up to 68% of cases) and without graphic support (in about 30% of cases). Our further work will be aimed at complex support of ITS decision with natural-language dialogue with elements on cognitive visualizations on the curriculum level. Adding the ability to make further requests for explanations will make the system more interactive. We also plan to perform in-depth evaluation of the cross-cutting approach described in [22] and graphic notations CMKD and UGVA ([21]) to ﬁnd its inﬂuence on the students’ learning gains. It is also important to upgrade the sentence templates based on the experimental data, increase their variety, and adding support of other natural languages than Russian.  
   
  References 1. Arrieta, A.B., et al.: Explainable artiﬁcial intelligence (XAI): concepts, taxonomies, opportunities and challenges toward responsible AI. Inf. Fusion 58, 82–115 (2020). https://doi.org/10.1016/j.inﬀus.2019.12.012 2. Bodily, R., Verbert, K.: Trends and issues in student-facing learning analytics reporting systems research. In: Proceedings of the Seventh International Learning Analytics & Knowledge Conference, pp. 309–318. LAK 2017, Association for Computing Machinery, New York, NY, USA (2017). https://doi.org/10.1145/3027385. 3027403 3. Brusilovsky, P., Rus, V.: Social Navigation for Self-Improving Intelligent Educational Systems, pp. 131–145. Army Research Laboratory (2019). https://www.pitt. edu/peterb/papers/SocNav4SIS.pdf 4. Full´er, R., et al.: Fuzzy Reasoning and Fuzzy Optimization. Turku Centre for Computer Science Turku, Finland (1998) 5. Gavrilova, T.A., Kokoulina, L.: Using ontology engineering to design an artiﬁcial intelligence course. In: Uskov, V.L., Howlett, R.J., Jain, L.C. (eds.) Smart Education and e-Learning 2019. SIST, vol. 144, pp. 201–207. Springer, Singapore (2019). https://doi.org/10.1007/978-981-13-8260-4 19  
   
  Synthesizing Didactic Explanatory Texts ITS  
   
  245  
   
  6. Haspelmath, M., Michaelis, S.M.: Analytic and synthetic: typological change in varieties of European languages. In: Language Variation-European Perspectives VI: Selected Papers from the Eighth International Conference on Language Variation in Europe (ICLaVE 8), pp. 3–22. John Benjamins, Amsterdam (2017) 7. Ilves, K., Leinonen, J., Hellas, A.: Supporting self-regulated learning with visualizations in online learning environments. In: Proceedings of the 49th ACM Technical Symposium on Computer Science Education, pp. 257–262. Association for Computing Machinery, New York, USA (2018). https://doi.org/10.1145/3159450. 3159509 8. Kelsey, E., Ray, F., Brown, D., Robson, R.: Design of a domain-independent, interactive, dialogue-based tutor for use within the GIFT framework. In: Generalized Intelligent Framework for Tutoring (GIFT) Users Symposium (giftsym3), pp. 161– 168 (2015) 9. Mashbitz, E., Andrievskays, V., Komissarova, E.: Dialog in a Tutoring System. Higher School, Kiev (1989). (in Russian) 10. O’Rourke, E., Andersen, E., Gulwani, S., Popovi´c, Z.: A framework for automatically generating interactive instructional scaﬀolding. In: Proceedings of the 33rd Annual ACM Conference on Human Factors in Computing Systems, pp. 1545–1554. CHI 2015, Association for Computing Machinery, New York, NY, USA (2015). https://doi.org/10.1145/2702123.2702580 11. Razzaq, L., Heﬀernan, N.T.: Scaﬀolding vs. hints in the assistment system. In: Ikeda, M., Ashley, K.D., Chan, T.-W. (eds.) ITS 2006. LNCS, vol. 4053, pp. 635– 644. Springer, Heidelberg (2006). https://doi.org/10.1007/11774303 63 12. Risha, Z., Barria-Pineda, J., Akhuseyinoglu, K., Brusilovsky, P.: Stepwise help and scaﬀolding for java code tracing problems with an interactive trace table. In: Proceedings of the 21st Koli Calling International Conference on Computing Education Research. Koli Calling 2021, Association for Computing Machinery, New York, NY, USA (2021). https://doi.org/10.1145/3488042.3490508 13. Rubinstein, R.Y., Kroese, D.P.: Simulation and the Monte Carlo Method. Wiley, Hoboken (2016) 14. Rus, V., Stefanescu, D., Niraula, N., Graesser, A.C.: DeepTutor: towards macroand micro-adaptive conversational intelligent tutoring at scale. In: Proceedings of the First ACM Conference on Learning @ Scale Conference. p. 209–210. L@S 2014, Association for Computing Machinery, New York, NY, USA (2014). https://doi. org/10.1145/2556325.2567885 15. Rybina, G., Slinkov, A.: The implementation of the ontological approach to control of the processes of designing integrated expert systems based on the problemoriented methodology. In: Kovalev, S.M., Kuznetsov, S.O., Panov, A.I. (eds.) RCAI 2021. LNCS (LNAI), vol. 12948, pp. 354–364. Springer, Cham (2021). https://doi. org/10.1007/978-3-030-86855-0 25 16. Stefanuk, V.L.: Learning levels in intelligent tutoring systems. IEICE Trans. Inf. Syst. 78(9), 1103–1107 (1995) 17. Sychev, O., Anikin, A., Penskoy, N., Denisov, M., Prokudin, A.: CompPrehension - model-based intelligent tutoring system on comprehension level. In: Cristea, A.I., Troussas, C. (eds.) ITS 2021. LNCS, vol. 12677, pp. 52–59. Springer, Cham (2021). https://doi.org/10.1007/978-3-030-80421-3 6 18. Troussas, C., Krouska, A.: Path-based recommender system for learning activities using knowledge graphs. Information 14(1), 9 (2023) 19. Uglev, V., Rogozhnikova, M.: Individualized natural language dialogue with the students in the intellectual education system. In: Interactive Systems and Tech-  
   
  246  
   
  20.  
   
  21.  
   
  22.  
   
  23. 24.  
   
  25.  
   
  V. Uglev and O. Sychev nologies: the Problem of Human-Computer Interaction, vol. 11, pp. 255–259 (2015). http://conf-is.ulstu.ru/sites/default/ﬁles/IS 2015 Part II 1.pdf Uglev, V., Sychev, O.: Creating and visualising cognitive maps of knowledge diagnosis during the processing of learning digital footprint. In: Cristea, A.I., Troussas, C. (eds.) ITS 2021. LNCS, vol. 12677, pp. 93–98. Springer, Cham (2021). https:// doi.org/10.1007/978-3-030-80421-3 11 Uglev, V., Sychev, O.: Evaluation, comparison and monitoring of multiparameter systems by uniﬁed graphic visualization of activity method on the example of learning process. Algorithms 15(21), 468 (2022). https://doi.org/10.3390/a15120468 Uglev, V., Sychev, O., Gavrilova, T.: Cross-cutting support of making and explaining decisions in Intelligent tutoring systems using cognitive maps of knowledge diagnosis. In: Crossley, S., Popescu, E. (eds.) Intelligent Tutoring Systems ITS 2022. Lecture Notes in Computer Science, vol. 13284, pp. 51–64. Springer, Cham (2022). https://doi.org/10.1007/978-3-031-09680-8 5 Zadeh, L.A., Aliev, R.A.: Fuzzy Logic Theory and Applications: Part I and Part II. World Scientiﬁc Publishing, Singapore (2018) Zouri, M., Ferworn, A.: An ontology-based approach for curriculum mapping in higher education. In: 2021 IEEE 11th Annual Computing and Communication Workshop and Conference (CCWC), pp. 0141–0147. IEEE (2021). https://doi. org/10.1109/CCWC51732.2021.9376163 Zykina, A., Kaneva, O., Munko, V.: The development of approaches for obtaining automated solution on the formation of the curriculum. Mod. Inf. Technol. ITEduc. 14(4), 931–937 (2018). https://doi.org/10.25559/SITITO.14.201804.931-937 https://doi.org/10.25559/SITITO.14.201804.931-937  
   
  Using the ITS Components in Improving the Q-Learning Policy for Instructional Sequencing Amel Yessad(B) Sorbonne Universit´e, CNRS, LIP6, 4 place Jussieu, 75252 Paris Cedex 05, France [email protected]   
   
  Abstract. In this paper, we aim to optimize the sequencing of learning activities using the Q-learning, a reinforcement learning method. The Q-learning agent decides each time which activity to propose to the student. The sequencing policy we propose is guided by the aim to improve eﬃciently the student knowledge state. Thus, the Q-learning learns a mapping of the student knowledge states to the optimal activity to perform in that state. In this paper, we tackle two main issues in implementing the Qlearning oﬀ-policy: the combinatorial explosion of the student knowledge states and the deﬁnition of the reward function allowing to improve eﬃciently the student knowledge state. We rely on the student model and the domain model to answer these two challenges. We carried out a study to evaluate the approach we propose on simulated students. We show that our approach is more eﬃcient since it achieves better learning gain with fewer activities than a random policy or an expert based policy. Keywords: Instructional Sequencing · Sequencing policy · Reinforcement learning · Q-learning · student model · domain model Intelligent tutoring system  
   
  1  
   
  ·  
   
  Introduction  
   
  In intelligent tutoring systems literature, we can distinguish between two main categories to adapt instructional sequencing in terms of the granularity of the instructional activities and time scales: task-loop (or outer loop) and step-loop (or inner loop) [1,12]. Task-loop adaptivity involves data-driven decisions the system makes to select instructional activities for the student. Step-loop adaptivity involves data-driven decisions the system makes in response to individual actions a student takes within an instructional activity. In this research, we focus on task-loop adaptivity which consists on the sequencing of learning activities (lectures, problems, quizzes, etc.) that are most suitable according to the student characteristics [1]. It has been widely studied but remains a hard challenge c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 247–256, 2023. https://doi.org/10.1007/978-3-031-32883-1_21  
   
  248  
   
  A. Yessad  
   
  in ITS since the adaptation process depends on several dimensions of the student (knowledge state, emotional state, motivation, etc.) often hidden and not directly observable by the systems. Several research [2,5,6] have shown the interest of reinforcement learning (RL) for instructional policies, as RL models can learn complex and latent relationships between instructional tasks, students actions, and knowledge outcomes. Given the importance of sequential student-teacher interactions in education, there is a real interest in applying RL to improve the state-of-the-art technology for ITS. In particular, the problem of sequencing the learning activities according to the student characteristics ﬁts well a RL problem [2]. Unlike supervised learning and unsupervised learning, a RL agent learns from direct interaction with its environment. RL is suitable for systems where the agent needs to learn a policy on what to do in diﬀerent situations to maximize a long-term utility [9]. Concretely, it is for an agent to learn how to map states to actions. Often, instructional sequencing approaches rely on a student model that is a partially observable Markov decision process (POMDP) [10]. POMDP models the fact that the student’s knowledge state is a latent variable inferred from some observation function which maps states to probability distributions of observations (student answers). The Bayesian knowledge tracing model (BKT) [4] is a POMDP which has been used to implement cognitive mastery learning in intelligent tutoring systems. Surprisingly, BKT is not considered in the RL framework, because a reward function is not explicitly speciﬁed [5]. We propose in this research to connect the BKT to a RL agent by explicitely deﬁning a reward function. Using the RL raises two challenging tasks: the deﬁnition of the environment state as an input of the RL agent and the deﬁnition of the reward function guiding the learning of the optimal policy. Several model-Based Policies [8] and model-free policies [3] were proposed in the state of the art. In this research, we propose to use the Q-learning [14], a model-free algorithm to learn a sequencing policy. The Q-learning seems to be a good method since we haven’t any explicit model of the optimal decision. We hypothesize that the optimal polocy can be reached through a trial and error strategy. In this research, we rely on the two main components of an ITS, the student model and the domain model to improve the training process of the Q-learning algorithm. On the one hand, the student model is used to infer the student knowledge state each time the student performs a learning activity. The Qlearning learns a mapping of the student knowledge states to a learning activity to recommend in that state. In this paper, we consider only the knowledge state of the student as input to the Q-learning agent. The objective is to learn a sequencing policy that improves eﬃciently the knowledge state of the students. It is well known that the student’s knowledge state may be a complicated function of the history of activities and estimating the parameters of the student model may require enormous amount of data [5]. But we make the assumption that the  
   
  Instructional Sequencing for ITS  
   
  249  
   
  student model, when available, allows the convergence of the Q-learning to an eﬃcient sequencing policy. Moreover, we propose a reward function that quantiﬁes the student learning gain according to the student knowledge states inferred by the BKT model [4]. More precisely, we deﬁne the student’s learning gain as the number of new knowledge components acquired by the student since the last recommended learning activity. The reward function we propose aims to maximize the expectation of future learning gains. On the other hand, the domain model allows us to reduce the combinatorial explosion of the number of student knowledge states. RL models need to be trained on student historical data to converge to a good sequencing policy [7]. However, in education, policy evaluation becomes challenging because of the experience is scarce and expensive and the data are sometimes unavailable. In this paper, we answer the issue of data availability by carrying out a ﬁrst study on simulated students. We ﬁrst formalise the problem of instructional sequencing by deﬁning the main elements of the Q-learning policy and the BKT student model. Then, we present our apporoach and focus on the contributions of the domain experts to reduce, on the one hand the combinatorial explosion of the student knowledge states and on the other hand to deﬁne the reward function. Finally, we present the study we carried out to evaluate the proposed approach and its results.  
   
  2  
   
  Reinforcement Learning  
   
  The reinforcement learning (RL) problem is usually modeled as a Markov decision process (MDP) giving rise to a sequence of observed, states, actions and rewards: s0 , a0 , r1 , s1 , a1 , r2 , s2 , ..., sT . The st is the state of the environment, at the action taken by the agent and rt the reward received by the agent at timestep t. A RL agent learns to decide actions in diﬀerent states through trial and error strategy. RL algorithms can be mainly divided into two categories modelbased and model-free. In the context of deciding learning activities, the objective is to explore the consequences of decisions on the students and we haven’t any, a priori model of the optimal decision. Thus, the model-free methods are more adapted for the context of instructional sequencing. In this work, we focus on the Q-learning, a type of model-free RL algorithms. It relies on a Q-table that associates observed states with actions and a Q-function that maximizes a “reward function” received by the Q-learning agent from the environement after each action. The Q-table is the key component of the Q-learning algorithm and it is used to calculate the expected maximum future rewards for each learning activity at each student knowledge state. The Q-table guides the Q-learning agent to choose the “optimal” learning activity for each student to maximize her learning gain. Each value of the Q-table is ﬁrst initialized randomly and then learned iteratively via the Bellman recurrence equation:  
   
  250  
   
  A. Yessad Maximum predicted reward, given new state s’ and all its possible actions a’  
   
  NewQ(s, a) = Q(s, a) + α [ R(s, a) +         Immediate reward New Q-Value learning rate  
   
  γ      
   
     max Q (s , a )  
   
  −Q(s, a)]  
   
  Discount rate  
   
  where R(s, a) is the immediate reward received when selecting the action a in the state s, α is the learning rate (0 < α ≤ 1) and γ is the discount rate (0 < γ ≤ 1), reﬂecting the importance of the immediate reward comparing to the future rewards.  
   
  3  
   
  BKT Model  
   
  The BKT model [4] is a student modeling method. It is a two state hidden Markov model (see Fig. 1) that is used to infer the student’s mastery of a knowledge component (KC). The BKT assumes that student knowledge is represented as a set of binary variables - one per KC (the skill is either mastered by the student or not). Observations in BKT are also binary: a student gets a problem (or a problem step) either right or wrong [15]. A student has an initial mastery parameter L0 and at every practice opportunity (or observation), a student who has not mastered the KC has some probability of attaining mastery (the parameter T ). If a student has mastered a KC, they will answer a question correctly unless they “slip” with some probability (the parameter S), and if the student has not mastered the KC, they can only guess correctly with some probability (the parameter G). In BKT, each KC is modeled separately without considering any relationships between KCs. Other work on individualized BKT models [15] describes diﬀerent approaches for deﬁning and learning student-speciﬁc parameters. In this reserach, we use the Individualized BKT with student-speciﬁc p(L0) and p(T) [4]. These speciﬁc parameters depend on the KC complexity and the student class (see 7.2). The inference model of the BKT gives us a vector of real values (comprise between 0 and 1)—each value represents the probability of mastery for a KC. In the rest of the paper, this vector related to a student is named the knowledge state of the student.  
   
  4  
   
  Proposed Approach  
   
  In this work, we aim to learn a sequencing policy that assigns learning activities to students in order to maximize their learning gains. Our contributions are the following:  
   
  Instructional Sequencing for ITS  
   
  251  
   
  Fig. 1. The BKT model and its parameters T, S and G  
   
  1. we propose a domain-based method to reduce the risk of combinatorial explosion of the number of students’ knowledge states, 2. we deﬁne a reward function that relies on the knowledge states inferred by the BKT model, 3. we evaluate the sequencing policy we propose by comparing it with two baseline approaches  
   
  5  
   
  Contributions of Human Expertise to the Q-Learning Function Approximation  
   
  In this section, we present the contributions of domain experts to the Q-learning function approximation. In our case, we identify two major issues that can prevent the convergence of the Q-learning: the combinatorial explosion of the number of the Q-table states (usually called curse of dimensionality) and the deﬁnition of an irrelevant reward function. On the one hand, when the state-action space is small enough, the iterative approximation of the Q-learning algorithm is proved to converge to the true Q-values [13]. However, the combinatorial explosion of the number of possible states in even a modest-size environment makes this table based implementation of Q-learning unfeasible. In our case, we can observe that there is a risk of combinatorial explosion of the number of the Q-table states when the number of the KCs increases. For example, if we have n KCs in the domain model and for each KC we consider a binary random variable representing its mastery (1 if the KC is mastered by the student, 0 otherwise), we obtain 2n knowledge states. Thus, the number of states increases considerably with the number of KC. To answer this issue, we propose an approach based on the domain model. On the other hand, the deﬁnition of a relevant reward function is a challenged task because it guides the sequencing policy towards the objective [11], in our case, achieving eﬃciently the mastering the domain KCs by the students. 5.1  
   
  Competence Structure  
   
  To answer the combinatorial explosion of the number of possible knowledge states, we ask domain experts to identify prerequisite relationships between the  
   
  252  
   
  A. Yessad  
   
  Fig. 2. Example of domain model (left graph) and competence structure (right graph).  
   
  KCs in order to reduce the number of possible knowledge states of the students. Two KCs X and Y are related by a prerequisite relationship X→Y if and only if the mastery of Y implies the mastery of X and the non mastery of X implies the non mastery of Y. Thus, given prerequisite relationships between KCs, some knowledge states are inprobable and thus considered as non admissible. For instance, if we consider the domain model of the Fig. 2: {a → b, a → c, b → d, b → e, c → e, d → f , e → f }. The competence structure is obtained by deriving all the admissible knowledge states of the domain model. We can observe that all combinations of KC are not admissible. For instance, the knowledge state {a, d} which means that both the KCs a and d are mastered whereas all others are not mastered, cannot be a knowledge state since the KC b has to be mastered before mastering the KC d. Thus, only 10 knowledge states are admissible instead of 26 possible knowledge states (6 is the number of KCs). In summary, the more the KS are connected by prerequisite links, the less the number of knowledge states is. As we consider each knowledge state as an entry of the Q-table, considering the prerequisite relationships between the KCs allows to reduce considerably the size of this table. Given N KCs, we reduce the number of states at least from 2N to 3 ∗ 2N −2 (we are reducing by a quarter the number of knowledge states) if we consider only one prerequisite relationship in the domain model. In the best case we have only N states if each KC is chained to one other KC with a prerequisite relationship.  
   
  6  
   
  Definition of the Reward  
   
  The Q-learning agent performs an iterative process until reaching the knowledge state where all the KC are mastered by the student. In each learning episode, the Q-Leaning selects a learning activity to present to the student, based on the  
   
  Instructional Sequencing for ITS  
   
  253  
   
  Q-table and the -greedy exploration/exploitation strategy. When the student answers the testing activity associated to the selected learning activity, the BKT model infers the new mastery of the KCs worked on the learning activity. Then, the new knowledge state is communicated to the Q-learning agent. Finally, the agent calculates the reward corresponding to the move from the previous knowledge state to the new knowledge state in order to update the Q-table entry according to the Bellman equation (see Fig. 3).  
   
  Fig. 3. Connection between the Q-learning and the BKT student model  
   
  The reward function is deﬁned as the following: R(s, a) =  
   
  N i=1  
   
  (si − si ) if si > si  
   
  where s is the new knowledge state of the student inferred by the BKT model after selecting the learning activity a and N the number of KCs. This reward function means that the reward depends on the number of new mastered KCs. More the observations allow an improving of the KCs mastery more the reward is signiﬁcant. We make the choice that the cumulative rewards rely on the distance between knowledge states to quantify the learning gain of the student. We evaluate the relevance of this function in the study presented in the next section.  
   
  7  
   
  Evaluation  
   
  We evaluate our sequencing policy using simulated students. The evaluation consists on comparing the Q-learning (Ql) with two baseline approaches: randombased approach (Ra) and expert-based approach (Ex). The three approaches serve to design a sequencing policy and aim to achieve eﬃciently the mastering of all KCs. In this evaluation, we are interested in the number of activities recommended to the student before mastering all KCs.  
   
  254  
   
  7.1  
   
  A. Yessad  
   
  Random-Based and Expert-Based Approaches  
   
  To evaluate our approach Ql we compare it to two baseline approaches for designing a sequencing policy: Random-based approach (Ra) and Expert-based approach (Ex). Ra is straightforward, we randomly select a learning activity by excluding the learning activities already proposed. Ex is based on the competence structure presented in Sect. 5.1. The principle of Ex is that as long as all the prerequisite KCs of a KC X have not been mastered, the learning activities about these KCs still recommended to the student. One all the prerequisite KCs are mastered, the system starts to recommend learning activities to work on X. We note that for these two baseline approaches, we also use the BKT model to infer the knowledge state of the simulated student. This allows us to evaluate only the impact of the reinforcement learning as a strategy of instructional sequencing. 7.2  
   
  Simulated Students  
   
  for the study, we generate two synthetic datasets in two diﬀerent ways. On the one hand, we generate a dataset consisting of 20,000 simulated students that is used to learn the parameters of the BKT model for each KC. To do so, we ﬁrst deﬁne three student classes with a probability distribution for each student to belong to one of these classes. Then, for each student class, we set the success of a student in an activity in function of four parameters inspired from the BKT parameters: prior, learn, guess and slip. The parameters prior and learn depend on the complexity of the KC and the student class. The parameters guess and slip depend on the type of the performed activity (quiz, open-ended question, etc.). In addition and based on the prerequisite relationships between KCs, we have added the assumption that a student cannot answer correctly a testing activity on X without having ﬁrst mastered enough all its prerequisite KCs. In this simulation, we generate data for 20 KCs, 50 prerequisite relationships and 100 activities for each KC. All these constraints for the data generation, allow us to have a suﬃciently clear characterization of the simulated data. The evaluation of the ﬁtted BKT model obtains an average RMSE of 0.45180 and an average AUC of 0.710705. On the other hand, we generate in real time student’s interactions that are used to learn the sequencing policy with the Ql approach. Each time an activity is performed by the simulated student, an observation (right or wrong) is sent to the Q-learning agent and based on the current knowledge state of the simulated student. This observation is then used by the BKT model to update the knwledge state of the simulated student. In this way, the Q-learning agent receives iteratively the environment state and decides an activity to the simulated student. We note that students from the three classes are generated with ﬁxed probabilities.  
   
  Instructional Sequencing for ITS  
   
  7.3  
   
  255  
   
  Results  
   
  Table 1 is a summary of results for the proposed approach Ql (a Q-learning based policy) and the two used baseline approaches: Ra (a random policy) and Ex (an expert-based policy). For each policy, we compute after one hundred executions the mean and the SD (standard deviation) of the number of activities proposed to the students before acquiring all KCs, Table 1. The mean and the SD (standard deviation) of the number of activities proposed to the students before acquiring all KCs, after one hundred simulations. The total number of simulated activities is 2000 (20 KCs and 100 activities per KC) Sequencing policies  
   
  Mean  
   
  SD  
   
  Random policy (Ra)  
   
  754  
   
  469.57  
   
  Expert-based policy (Ex)  
   
  516.54  
   
  19.66  
   
  Q-learning based policy (Ql) 479.54 49.28  
   
  The results show that the Q-learning policy is in average the most eﬃcient even if it has a standard-deviation greater than the expert-based approach. This is explained by the random initialisations of the Q-table where some ones make longuer the convergence time of the learning process. As expected, the random policy gives the worst results, the standarddeviation between the executions shows a big variations between the executions. The expert based approach is less eﬃcient to the Q-learning policy but close. This result is interesting because it gives us insight into whether RL-based policies lead to better instructional sequences than relying on experts for sequencing. However, we could also explain it that the expert policy is less eﬃcient because certain prerequisite KCs are not necessary to master some KCs and increase thus the mean number for the expert approach. But, we know that is quite hard to have a consensus on the domain model. T-test on these results showed a signiﬁcant diﬀerence between the Q-learning policy and both the Expert-based policy (p = 0.02) and the Random policy (p = 0.03). Moreover, we observe clearly in the learned Q-table that the Q-learning reproduces most of the prerequisite relationships between the KC. This observation is interesting because it may provide a solution to the cold-start issue of the Qlearning when the system interacts with real students. Indeed, we can initialize the Q-table with a dataset of simulated students before using the Q-learning on real data.  
   
  8  
   
  Conclusion  
   
  In this research, we propose to use the Q-learning algorithm to decide the more suitable next learning activity to recommend to the students. The sequencing policy aims to improve eﬃciently the student knowledge state. Student knowledge states are inferred dynamically by using the BKT student model.  
   
  256  
   
  A. Yessad  
   
  The proposed approach poses the problem of the combinatorial explosion of the student knowledge states. For that, a domain-based method is proposed to reduce the number of the admissible knowledge states and thus the size of the Q-table. Based on the objective of improving eﬃciently the student knowledge states, a reward function is deﬁned. We carried out a study on simulated data to evaluate the eﬃciency of the proposed Q-learning based approach by comparing it with two baseline approaches: random-based approach and expert-based approach. The results show that our apporach is the most eﬃcient one but very close to the expert-based approach. There are several research directions for future work, in particular, to provide evidence about the beneﬁts of this approach by experimenting it on real data.  
   
  References 1. Aleven, V., McLaughlin, E.A., Glenn, R.A., Koedinger, K.R.: Instruction based on adaptive learning technologies. In: Handbook of Research on Learning and Instruction, vol. 2, pp. 522–560 (2016) 2. Bassen, J., et al.: Reinforcement learning for the adaptive scheduling of educational activities. In: Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems, pp. 1–12 (2020) 3. Clement, B., Roy, D., Oudeyer, P.Y., Lopes, M.: Multi-armed bandits for intelligent tutoring systems. arXiv preprint arXiv:1310.3174 (2013) 4. Corbett, A.T., Anderson, J.R.: Knowledge tracing: modeling the acquisition of procedural knowledge. User Model. User-Adap. Inter. 4, 253–278 (1994) 5. Doroudi, S., Aleven, V., Brunskill, E.: Where’s the reward? Int. J. Artif. Intell. Educ. 29(4), 568–620 (2019) 6. Efremov, A., Ghosh, A., Singla, A.: Zero-shot learning of hint policy via reinforcement learning and program synthesis. In: EDM (2020) 7. Mandel, T., Liu, Y.E., Levine, S., Brunskill, E., Popovic, Z.: Oﬄine policy evaluation across representations with applications to educational games. In: AAMAS, vol. 1077 (2014) 8. Sen, A., et al.: Machine beats human at sequencing visuals for perceptual-ﬂuency practice. International Educational Data Mining Society (2018) 9. Singla, A., Raﬀerty, A.N., Radanovic, G., Heﬀernan, N.T.: Reinforcement learning for education: opportunities and challenges. arXiv preprint arXiv:2107.08828 (2021) 10. Sondik, E.J.: The optimal control of partially observable Markov decision processes. PhD thesis, Stanford University (1971) 11. Tessler, C., Mankowitz, D.J., Mannor, S.: Reward constrained policy optimization. arXiv preprint arXiv:1805.11074 (2018) 12. VanLehn, K.: Regulative loops, step loops and task loops. Int. J. Artif. Intell. Educ. 26, 107–112 (2016) 13. Watkins, C.J., Dayan, P.: Q-learning. Mach. Learn. 8(3), 279–292 (1992) 14. Watkins, C.J.C.H.: Learning from delayed rewards (1989) 15. Yudelson, M.V., Koedinger, K.R., Gordon, G.J.: Individualized Bayesian knowledge tracing models. In: Lane, H.C., Yacef, K., Mostow, J., Pavlik, P. (eds.) AIED 2013. LNCS (LNAI), vol. 7926, pp. 171–180. Springer, Heidelberg (2013). https:// doi.org/10.1007/978-3-642-39112-5 18  
   
  Stargazing Live! Inspiring with Real Data in a Mobile Planetarium and Learning Through Conceptual Modelling Bert Bredeweg1,2(B)  
   
  , Marco Kragten1 , Joanna Holt1,3 , Dennis Vaendel3 , Joris Hanse3 , and Steven Bloemen4  
   
  1 Faculty of Education, Amsterdam University of Applied  
   
  Sciences, Amsterdam, The Netherlands [email protected]  2 Faculty of Science, Informatics Institute, University of Amsterdam, Amsterdam, The Netherlands 3 Faculty of Science, API/NOVA, University of Amsterdam, Amsterdam, The Netherlands 4 Department of Astrophysics/IMAPP, Radboud University Nijmegen, Nijmegen, The Netherlands  
   
  Abstract. We present the Stargazing Live! program comprising a planetarium experience and supporting lesson activities for pre-university physics education. The mobile planetarium aims to inspire and motivate learners using real telescope data during the experience. Learners then consolidate their learning by creating conceptual models in the DynaLearn software. During development of the program, content experts and stakeholders were consulted. Three conceptual model lesson activities have been created: star properties, star states and the fusion-gravity balance. The present paper evaluates the planetarium experience plus the star properties lesson activity in nine grade 11 and 12 classes across three secondary schools in the Netherlands. Learners are very positive about the planetarium experience, but they are less able to link the topics in the planetarium to the curriculum. The conceptual modelling activity improves the learners understanding of the causal relationship between the various stellar properties. Future work includes classroom testing of the star states and fusion-gravity balance lessons. Keywords: Education · Physics education · Planetarium · Conceptual modelling  
   
  1 Introduction Star formation, stellar properties and the underlying physical laws are fundamental topics in pre-university physics education. However, learning about stars can be challenging for learners, due to a variety of pre-instructional conceptions and learning difficulties. For example, learners often do not know that nuclear fusion provides stars with their energy, allowing them to generate light [1, 3]. In addition, they have an incomplete understanding of how stars are formed. When asked how stars differ from each other, learners often mention properties such as size or composition, but less often luminosity, © The Author(s), under exclusive license to Springer Nature Switzerland AG 2023 C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 257–269, 2023. https://doi.org/10.1007/978-3-031-32883-1_22  
   
  258  
   
  B. Bredeweg et al.  
   
  temperature or lifespan. For example, in Bailey and colleagues’ study [2], only 21 of 381 learners named mass as a property that distinguishes stars. Previous research shows that traditional instruction in astrophysics courses is not always sufficiently effective and that there is a need for interventions that stimulate conceptual understanding [3]. The Stargazing Live! project [12] uses a mobile planetarium to bring semi-live real scientific astronomy data into the classroom. Planetariums have played a role in the learning of astronomical concepts since their inception [4]. They can provide a unique and enriching learning experience [14] and spark learners interest and excitement for astronomy [13, 16] and help improving retention [19]. Planetariums can be used to observe different parts of the sky at different times of the year, to view the sky from different perspectives (e.g. from the equator, southern hemisphere, poles, etc.), and to simulate the appearance of the sky at different times in history. They can also show 3D-models of all kinds of celestial objects from up close, show full-dome videos and present complex simulations. Together this allows learners to gain a better understanding of complex phenomena and their dynamics [15]. Key requirements for an effective learning experience in a planetarium is that viewers are allowed and encouraged to ask questions, participate in simulations, and engage in hands-on activities to deepen their understanding of the concepts [13, 16, 17]. The combination of planetarium and traditional classroom lessons can provide a well-rounded education experience that complements and reinforces each other [14, 15]. Key aims for the Stargazing Live! are to inspire learners and to support the teaching and learning of pre-university physics. Furthermore, shortly after the project kick-off in early 2021, evaluation with stakeholders highlighted the need to link the planetarium experience more closely to the curriculum and the need for related lesson activities [11]. In order to address these issues, the Stargazing Live! program now comprises two parts. First, learners are introduced to the idea of the changing universe and associated astronomy concepts during a live and interactive planetarium experience (Sect. 2.1). Shortly thereafter, learners further develop and consolidate their knowledge with a lesson activity during which they create and simulate a cause-and-effect model using computersupported modelling software (Sect. 2.2). By constructing a model of a system, learners develop a deeper understanding of its underlying principles and relationships between components. This process helps to build and refine their conceptual model, providing a clearer and more comprehensive understanding of the system [8, 9]. Moreover, constructing a model requires active engagement, as learners think deeply about the information and make connections to their prior knowledge. This form of active learning, where learners are actively involved in the learning process, has been shown to be more effective than passive forms of learning [18]. This paper first discusses the development of the planetarium experience and the conceptual modelling lesson activities of the Stargazing Live! program. Next, we report the results of the evaluation study to assess (i) how learners experience the live and interactive planetarium, and (ii) how learners learn by creating the cause-effect model.  
   
  Stargazing Live! Inspiring with Real Data  
   
  259  
   
  2 Development of the Stargazing Live! Program 2.1 Planetarium Experience The planetarium experience has been developed by NOVA (Netherlands Research School for Astronomy) using a Mobile Planetarium (Fig. 1). The semi-live real data are taken from the small optical telescopes MeerLICHT (www.meerlicht.org) and BlackGEM (www.blackgem.org), both operated by Radboud University in the Netherlands. MeerLICHT is stationed in South Africa and performs optical follow-up for the MeerKAT radio telescope. The BlackGEM array is in La Silla, Chile and currently comprises three telescopes. Data from the telescopes are uploaded each night, processed automatically, and made available for use within 20 min. For the lessons described in Sect. 3, the planetarium used a standard dataset and customized scripts in the Digistar 6 software. The topic is the changing universe and discusses a range of transient phenomena in the night sky including (near Earth) asteroids, variable stars, (super)novae and gravitational wave events, such as kilonovae. Each topic is introduced with a discussion around a data set from the telescopes projected onto the correct region of the sky in the planetarium software. Learners are asked to identify changing features in the images and think about what they might be seeing. The various physical processes at work are then explained using custom-made 3D-visualisations and animations. Key curriculum topics for preuniversity level astrophysics are also included such as an explanation of how Wien’s law connects stellar surface temperature to the observed color of an object and how the luminosity of a star is related to other measurable parameters.  
   
  Fig. 1. During the planetarium experience, learners learn about the transient universe.  
   
  2.2 Conceptual Modelling Lesson Activities Lesson activities were developed to extend the planetarium experience, focusing on key concepts in the Dutch secondary school physics curriculum. A specific request  
   
  260  
   
  B. Bredeweg et al.  
   
  was to focus on conceptual understanding of star formation and star properties and the associated laws (e.g. Wien’s law and the Stefan-Boltzmann law). Three lesson activities were created. The star properties activity focuses on learners identifying the key quantities that characterize stars and establishing the causal dependencies between those quantities. The star states activity follows on from the star properties assignment by adding ranges of qualitative values (known as quantity spaces) to the quantities (e.g. temperature, peak wavelength and life-span). During this assignment learners learn how stellar mass relates to the different stellar properties. The fusiongravity balance model focusses on the birth of stars and how a balance emerges between the gravitational force (inwards) and the nuclear fusion force (outwards). The lesson activities for the Stargazing Live! project use the DynaLearn software (https://dynalearn.nl) [6]. This software provides a qualitative vocabulary to represent conceptual models [10]. No quantitative information is used. Instead, logic-based algorithms are used to generate simulations [5]. Models built in DynaLearn can be represented at four levels of complexity [6]. Higher levels use a richer vocabulary to express the system and its behavior. At each level, the software has scaffolds to support learners during their knowledge creating effort. The norm-based feedback pinpoints errors made by learners (solving these remains a task of the learner). The scenario advisor inspects the status of the model before starting a simulation and automatically highlights missing initial settings as well inconsistent settings. The progress bar shows how many ingredients have already been created and how many still need to be created. The working of the software is partly explained in the workbook which guides learners through the assignments, but it is also provided from within the software [7]. The following section discusses the star properties model which, along with the planetarium experience, is the focus of this article. 2.3 Star Properties The star properties model is shown in Fig. 2. The model is created at level 2, which is relatively simple for learners in pre-university education. The complexity arises from the number of ingredients that need to be created and connected (26 modelling steps) combined with running various intermediate simulations with various initial values. Entities are used to represent the objects (or parts) that together form the system. This model comprises three entities, Stars (the overarching object), the inner Core and the outer Surface. Two configurations specify that Stars have a Core and Stars have a Surface. Quantities represent the dynamic and measurable properties that characterize the stars and their behavior. Eleven quantities are defined, such as Mass, Gravity, Fusionenergy, etc. Causal dependencies specify how the change of one quantity influences the change of another quantity. They can be positive, e.g. more Mass results in more Gravity, or negative, e.g. higher Fusion-energy results in a shorter Life-span. Initial values are required to run a simulation. Mass is the quantity at the beginning of the causal chain and thus the only quantity for which an initial change must be specified. When the Mass is set to change, the simulation shows how the remaining quantities will change (green arrows in Fig. 3). As can be seen in Fig. 3, when the Mass decreases, all intermediate quantities also decrease, and at the end of the causal chain, Radius and Luminosity also decrease while Wavelength and Life-span increase.  
   
  Stargazing Live! Inspiring with Real Data  
   
  261  
   
  Fig. 2. Star properties model with three entities (Stars, Core & Surface), two configurations (2x have), eleven quantities (Mass, Gravity, Pressure, Temperature (of the Core), Fusion-energy, Temperature (of the Surface), Wavelength, Luminosity, Gas pressure, Radius & Life span), and ten causal dependencies (2 negative & 8 positive). Mass is set to initially decrease (blue arrow).  
   
  Fig. 3. Simulation result for the star properties model shown in Fig. 2. Each quantity has a ∂ which can be decreasing (arrow down), steady (∅), or increasing (arrow up). Starting with Mass decreasing, the simulation shows how other quantities change depending on their proportional relationship with the preceding quantity.  
   
  Developed with Experts. Three astrophysics experts contributed to creating the star properties model, which took 6 one-hour meetings. During each meeting an improved model was presented to the experts for critical reflection. After consensus was reached, the model was reviewed by two further experts, each taking a two-hour session. In addition to clarifying terms and agreeing on the basic mechanism, most discussion concerned the notion of temperature and pressure before and after the start of nuclear fusion. Two postulates were formulated to reach consensus. Firstly, the model represents a family of stars, those in the main sequence, and not the specific behavior of a single star. Hence, ‘changing the Mass of a star’ refers to comparing stars of different mass in  
   
  262  
   
  B. Bredeweg et al.  
   
  the main sequence. Secondly, the quantities may refer to features at different moments during the life span of stars. As such, Pressure and Temperature (of the Core) refer to the features that led to the nuclear fusion starting, while Temperature and Gas pressure (of the Surface) refer to features that result from the nuclear fusion being active. Pilot. A pilot version of the lesson activity star properties was tested by two astrophysics master students, taking about 1 h to complete. Students reflected on the activity and suggested improvements to the workbooks. The models remained unchanged. Model Construction. During the lesson activity each learner starts with an empty canvas and creates the complete model. The task is divided into four steps: (i) the Star with Mass and Gravity, (ii) the Core with Pressure, Temperature and Fusion-Energy, and their relationships with the ingredients in the previous step, (iii) the Surface with Temperature, Wavelength and Luminosity and their relationships with the ingredients in the previous steps, and (iv) discovering the still missing quantities (Gas pressure, Radius and Life span), add those and relate them to the rest of the model.  
   
  2.4 Star States Model and Fusion-Gravity Balance Model The star states model is created at level 3 and augments six key quantities from the star properties model with a quantity space, notably Mass, Temperature (of the Surface), Wavelength, Luminosity, Radius & Life-span. Each quantity space holds five values (three intervals separated by two points), and specific values correspond to quantities across the model. For instance, stars with Mass in the red dwarf region (0.5 or less times the mass of the sun), have a (Surface) Temperature of less than 4000 K, a Life span of more than 1011 years and a peak Wavelength of more than 720 nm, etc. Learners build the quantity space for each of the key quantities and specify how these values correspond across the model. The hypothesis is that by creating this model, learners learn about typical star types. The fusion-gravity balance model is created at level 4 and is the most complex. It represents how the accretion process builds the Mass of a star, how this leads to in-creased Gravity, which at some point ignites the fusion process, that counteracts Gravity resulting in a balance between these two forces (gravitation inwards and fusion outwards). Learners create the model stepwise from scratch interleaved with simulations.  
   
  3 Method 3.1 Planetarium Experience The planetarium experience was provided as a live event by astronomers or university astronomy students and lasted around 50 min. Questionnaire. The experience was evaluated using a questionnaire including Likertscale statements and open-ended questions. The questions focused on the student experience including questions such as ‘What is your first reaction to seeing the planetarium?  
   
  Stargazing Live! Inspiring with Real Data  
   
  263  
   
  (answer options on a 7-point Likert-scale; 1 = negative and 7 = positive). We also wanted to know if the key message that the sky is ever changing came clearly across (‘I did not know that so many things changed in the night sky’: answer options on a 5-point Likert-scale; 1 = strongly disagree and 5 = strongly agree). Learners were also asked to comment on the relevance of the telescope data (‘The live data added value to the planetarium lesson’; answers using the 5-point Likert-scale described above). Both 5-point Likert scale statements and open questions also asked about the link between the planetarium experience and curriculum topics. 3.2 Conceptual Modelling Lesson Teachers. During a 90-min teacher-training, physics teachers from the participating schools where informed about the lesson activities and the evaluation study. Teachers agreed to reserve 90 min for this lesson, including a pre- and post-test. Pre-test and Post-test. The tests consist of two parts. The first part of the test measures the extent to which learners understand the qualitative vocabulary of conceptual modelling. This part of the test has six multiple-choice and -response items (Table 1). Simple contexts were used to avoid the effect of prior domain knowledge during this part of the test. For example, the fourth item required learners to choose the representation that correctly describes the effect of ocean pollution on coral reef mortality, i.e., this system has two entities (ocean and coral reef), two quantities (pollution and mortality) and one causal relationship (pollution causes mortality). In the fifth item learners were given a causal chain of three quantities. The first quantity is positively proportionally related (+) to the second quantity which itself is negatively proportionally related (−) to the third quantity. Learners were required to describe the behavior of the third quantity when the first quantity increases or remains stable. The second part of the test (Table 1) measures learners’ understanding of the causal relationships between quantities of stars in the main sequence. Firstly, learners were required to answer an open question: ‘Explain, step-by-step, the effect of a high stellar mass on the luminosity of a star’. Next, learners were required to answer a multiplechoice item regarding the effect of high stellar mass on a star’s fusion, life-span, radius, luminosity and wavelength. Learners were not able to return to the open question after answering the multiple-choice question to avoid answers being adjusted. Data-Analysis. The score of the multiple-response items is calculated as correct minus incorrect and then normalized to a number between 0 and 1. The multiple-choice items are scored as 1 if correct. The first part of the test has a maximum score of 6 (i.e., six items) and the second part of the test has a maximum score of 5. The data were first pre-analyzed to check for potential differences between schools and classes, however the pre-analysis showed no significant differences. We therefore made no further distinction between participating groups and analyzed the data as one data set. Firstly, a paired t-test was used to test if there is a significant difference between the pre-test and post-test scores per item. Secondly, the total score for both parts of the test was calculated and analyzed using a paired t-test to test if there is a difference between total pre-test and post-test scores. The open question of part 2 was analyzed for the number of causal relationships that learners describe between quantities.  
   
  264  
   
  B. Bredeweg et al. Table 1. Items of the pre-test and post-test.  
   
  Part 1. Qualitative vocabulary  
   
  Part 2. Causal relationships in a star  
   
  What is an entity (MR)?  
   
  Effect of high mass on luminosity of star (O)  
   
  What is a quantity (MR)?  
   
  Stars with high mass have high/low (MC):  
   
  What is a causal relationship (MR)?  
   
  o Fusion-energy (Fe)  
   
  What is a system (MC)?  
   
  o Life span (Ls)  
   
  Propagation in a causal chain (MR)  
   
  o Radius (R)  
   
  Simulation results (MC)  
   
  o Luminosity (L) o Wavelength (W)  
   
  Note. MR = multiple-response, MC = multiple-choice, O = open.  
   
  4 Results One hundred and fifty-two learners from three secondary schools (across the Netherlands) participated in the study. From the first school three grade-12 classes participated (n = 56), from the second school one grade-12 class participated (n = 15) and from the third school two grade-12 and three grade-11 classes (n = 81) participated. Learners had no previous experience with learning by constructing qualitative representations. 4.1 Planetarium Experience The overall reaction to the planetarium was positive, scoring on average 5.8 (SD = .7) and 6.6 (SD = .6) in the digital survey. The question ‘Did the physics content in the planetarium match with what you had learned in your physics lessons?’ returned an average of 2.9 (SD = 1.3). So, whilst the planetarium experience aimed to make clear links with the curriculum, most learners recognized few curriculum topics in the planetarium lessons. However, learners did not find this a problem and the majority agreed that the planetarium experience taught them new things (M = 4.2, SD = .8). Topics which many learners easily recognized included both Wien’s Law and Stefan Boltzmann’s Law (open question), two key curriculum concepts which were included after the stakeholder evaluation [11]. The learners were very positive about the use of real astronomical data in the classroom (M = 4.6, SD = .6). The majority of learners also agreed that they were unaware that the universe contained so many transient phenomena, a key messages in the planetarium experience (M = 3.8, SD = 1.0). 4.2 Conceptual Modelling Lesson Figure 4 shows the pre-test and post-test scores per item of part 1 (qualitative vocabulary) and part 2 (causal relationships between quantities of stars). Paired t-tests showed that there is a significant difference between the score on all pre-test and post-test items (p < .05). In part 1, the first (‘What is an entity?’) and sixth items (‘Simulation results.’) showed the highest increase in score from pre-test to post-test (.41 and .38 points,  
   
  Stargazing Live! Inspiring with Real Data  
   
  265  
   
  respectively). Regarding part 2, the highest increase was found for the effect of mass on life span (Ls, .55 points increase) and on the peak wavelength (W, .36 points increase). There is a significant difference in total pre-test (M = 3.82, SD = .96) and post-test score (M = 5.01, SD = .86) of part 1 (paired t-test: t = 13.20, df = 151, p = < .001, Cohens’ d = 1.07). We can therefore conclude that the lesson significantly increases the understanding of the qualitative vocabulary associated with concept modelling. We also found a significant difference in total pre-test (M = 3.61, SD = 1.12) and post-test score (M = 4.28, SD = 1.03) related to the understanding of the causal relationships between the properties of stars (t = 6.26, df = 151, p = < .001, Cohens’ d = .51).  
   
  Fig. 4. Pre-test and post-test scores per item. Fe = Fusion-energy, Ls = Life span, R = Radius, L = Luminosity, W = Wavelength.  
   
  Figure 5 shows the number of causal relationships that learners describe between quantities in their answer to the open question. In the pre-test, 52 learners describe a direct causal relationship between mass (M) and luminosity (L), e.g., ‘Stars with a high mass have a high luminosity…’. Sixteen learners describe this relationship incorrectly, i.e., they describe a negative proportional relationship. Thirty learners describe the causal relationship between mass (M) and fusion-energy (Fe) and 29 learners describe the relationship between fusion-energy (Fe) and luminosity (L). Eight learners describe the relationship between mass (M) and pressure (P), and one student describes the relationship between gravity (G) and pressure (P). Learners mentioning pressure in their answer also continue to describe the relationship between pressure with temperature of the core (Tc, n = 2), fusion energy (Fe, n = 2) and luminosity (L, n = 3). A small number of learners describe causal relationships other than those mentioned. Some learners also describe relationships between quantities that are not part of the correct causal path. Ten learners describe a causal relationship between mass (M) and radius (R) and then state that radius (R) causes luminosity (L). Five learners describe a causal relationship between surface area (S) and luminosity (L).  
   
  266  
   
  B. Bredeweg et al.  
   
  In total, 104 learners correctly describe the relationship between mass and luminosity. Note that the latter number also includes learners that include quantities in their answer that are not part of the correct causal path. In the post-test there is an increase in the number of learners that describe causal relationships between quantities that are part of the correct causal path. 59 learners describe the causal relationship between mass (M) and gravity (G), 47 between gravity (G) and pressure (P), 43 between pressure (P) and temperature of the core (Tc), 35 between temperature of the core (Tc) and fusion-energy (Fe), 38 between fusion-energy  
   
  Fig. 5. Causal relationships that learners describe between quantities in the open question in the pre-test (upper figure) and post-test (lower figure). Quantities G, P, Tc, Fe and Ts are part of the correct and complete causal path and are aligned horizontally between mass (M) and luminosity (L). Dashed lines show the causal relationships that are not part of the correct path (W, R, S and Ls). To maintain readability, only numbers greater than 3 are shown. The number of learners that describe causal relationships of the wrong type (positive instead of negative or vice versa) are indicated by a dashed circle bottom right of the number of correct causal relationships. M = Mass, G = Gravity, P = Pressure, Tc = Temperature core, Fe = Fusion energy, Ts = Temperature surface, L = Luminosity, W = Wavelength, R = Radius, S = Surface area, Ls = Life span.  
   
  Stargazing Live! Inspiring with Real Data  
   
  267  
   
  (Fe) and temperature of the surface (Ts) and 41 between temperature of the surface (Ts) and luminosity (L). Twenty-seven learners describe a direct causal relationship between mass (M) and luminosity (L), and two learners describe this relationship incorrectly with a negative proportional relationship. Seventeen learners describe the causal relationship between mass (M) and fusion-energy (Fe) and 31 learners that describe the relationship between fusion-energy (Fe) and luminosity (L). Several learners include quantities in their answer that are not part of the correct causal path. For example, eight learners describe a relationship between radius (R) and fusion-energy (Fe), e.g., ‘If mass is higher than the radius increases and then the fusionenergy will increase…’. Finally, 126 learners correctly describe the relationship between mass and luminosity.  
   
  5 Discussion and Conclusion In this contribution we report on the Stargazing Live! program. This program has two parts: a planetarium experience and a conceptual modelling lesson activity. The planetarium experience is given live in a mobile planetarium that projects semi-live real data. The goal is to inspire learners and make them aware of the continuously changing universe. It touches on curriculum topics which also return in more depth in the modelling lesson activity. The conceptual modelling lesson activity takes place in the classroom. Learners individually build a conceptual model using interactive modelling software. Three assignments and corresponding models have been developed to extend the planetarium experience with lesson activities that relate to the Dutch secondary school physics curriculum. From these assignments, the cause-effect model on star properties was selected by the participating teachers to be used and evaluated in their classes. The results from the evaluation study show that learners are very positive regarding the planetarium experience. They find it engaging and it creates an awareness of the many transient phenomena in the universe. However, learners are less able to see how the provided information relates to the topics in the school curriculum. The latter supports the need for the additional lesson activities that we have created to further support learners’ development and consolidate their knowledge concerning star formation, star properties and the underlying physical concepts and laws. Results obtained during the conceptual modelling lesson show that there is a positive effect of conceptual modelling on learners’ understanding of the causal relationships between quantities of stars in the main sequence and the qualitative vocabulary. In the pre-test, 104 learners correctly described the relationship between mass and luminosity, while in the post-test, this number increased to 126. There were also improvements in the number of learners correctly describing other causal relationships, such as between mass and gravity, pressure and temperature of the core, and fusion-energy and temperature of the surface. However, some learners still described relationships incorrectly or included quantities that were not part of the correct causal path. Notable is that none of the answers (i.e., both in the pre- and post-test) contain non-scientific descriptions [2]. As future research we plan to evaluate the assignments on star states and on fusiongravity balance, in schools participating in the project Denker (https://denker.nu). Learners in these schools have multiple years of experience with conceptual modeling using  
   
  268  
   
  B. Bredeweg et al.  
   
  interactive qualitative representations and will more easily cope with the higher-level model representations (level 3 and 4). Furthermore, we intend to expand the set of conceptual modelling lessons to include other phenomena discussed in the planetarium lesson. For instance, we are currently developing conceptual modeling lessons relating to circular and elliptical orbits of celestial bodies.  
   
  References 1. Agan, L.: Stellar ideas: Exploring students’ understanding of stars. Astro. Educ. Rev. 3(1), 77–97 (2004) 2. Bailey, J.M., Prather, E.E., Johnson, B., Slater, T.F.: College students’ pre-instructional ideas about stars and star formation. Astron. Educ. Rev. 8(1), 010110–010111 (2009) 3. Bailey, J.M., Johnson, B., Prather, E.E., Slater, T.F.: Development and validation of the star properties concept inventory. Int. J. Sci. Educ. 34(14), 2257–2286 (2012) 4. Branley, F.M.: Planetariums – an evaluation. Sci. Teach. 31(6), 18–19 (1964) 5. Bredeweg, B., Linnebank, F., Bouwer, A., Liem, J.: Garp3 – workbench for qualitative modelling and simulation. Eco. Inform. 4(5–6), 263–281 (2009) 6. Bredeweg, B., et al.: Dynalearn - an intelligent learning environment for learning conceptual knowledge. AI Mag. 34(4), 46–65 (2013) 7. Bredeweg, B., Kragten, M., Spitz, L.: Qualitative representations for systems thinking in secondary education. In: Proceedings of the 34th International QR Workshop. Montreal, Canada (2021) 8. Doyle, J.K., Ford, D.N.: Mental models concepts for system dynamics research. Syst. Dyn. Rev. 14(1), 3–29 (1998) 9. Greca, I.M., Moreira, M.A.: Mental, physical, and mathematical models in the teaching and learning of physics. Sci. Educ. 86(1), 106–121 (2002) 10. Forbus, K.D.: Qualitative Representations. How People Reason and Learn About the Continuous World. The MIT Press, Cambridge, MA (2018) 11. Holt, J., Hanse, J., Baan, M., Groot, P., Bloemen, S.: Co-creation 3.0: taking the development of astronomy education resources to the next level in the project Star-gazing Live! In: Proceedings of the 3rd Shaw IAU Workshop on Astronomy for Education International Astronomical Union (2021) 12. Holt, J., et al.: Stargazing Live! Inspiring with semi-live astronomy data; teaching curriculum topics using smart education tools. In: Proceedings of the 4th Shaw IAU Workshop on Astronomy for Educational International Astronomical Union (2022) 13. Plummer, J.D., Small, K.J.: Informal science educators’ pedagogical choices and goals for learners: The case of planetarium professionals. Astron. Educ. Rev. 12(1), 1–16 (2013) 14. Plummer, J.D., Kocareli, A., Slagle, C.: Learning to explain astronomy across moving frames of reference: exploring the role of classroom and planetarium-based instructional contexts. Int. J. Sci. Educ. 36(7), 1083–1106 (2014) 15. Plummer, J.D., Small, K.J.: Using a planetarium fieldtrip to engage young children in threedimensional learning through representations, patterns, and lunar phenomena. Int. J. Sci. Edu. 8(3), 193–212 (2018) 16. Schmoll, S.E.: Toward a framework for integrating planetarium and classroom learning. Doctoral Dissertation (2013) 17. Schultz, S.K., Slater, T.F.: Use of formative assessment-based active learning by astronomy educators teaching in live planetarium learning environments. J. Astron. Earth Sci. Educ. 8(1), 27–38 (2021)  
   
  Stargazing Live! Inspiring with Real Data  
   
  269  
   
  18. Tippett, C.D.: What recent research on diagrams suggests about learning with rather than learning from visual representations in science. Int. J. Sci. Educ. 38(5), 725–746 (2016) 19. Zimmerman, L., Spillane, S., Reiff, P., Sumners, C.: Comparison of student learning about space in immersive and computer environments. J. Rev. Astron. Educ. Outreach V1, A5–A20 (2014)  
   
  A GPT-Based Vocabulary Tutor George Zografos(B)  
   
  and Lefteris Moussiades  
   
  International Hellenic University, 65404 Kavala, Greece {gezozra,lmous}@cs.ihu.gr  
   
  Abstract. Students of a foreign language need help to study vocabulary usually housed in foreign language textbooks. This need can be supported by an artificial vocabulary learning assistant, i.e., software that can ask relevant questions and reliably evaluate the answers. In this work, we present an assistant based on a combination of traditional dialogue generation technology with the latest technology of Generative Pre-trained Transformers. Moreover, we test our software and get admirable results that encourage us to continue our research in this direction. Keywords: Vocabulary tutor · GPT-3 · dialogue system · natural language interface  
   
  1 Introduction In foreign language learning books, vocabulary sections are often included, i.e., areas that have the structure of a dictionary. More specifically, these sections include a series of terms. For each term, they give its definition, usage examples, explanation, translation in the student’s language and other information, such as what part of speech the term is, etc. When studying such a vocabulary, students often need someone to help them. Typically, the assistant’s role is to hold the book and ask questions of the type: Give me the definition of the term X or an example of its use. After each question, the assistant assesses the student’s answers. In this work, we present such an assistant, which is nevertheless artificial and performs its tasks with admirable reliability. The assistant we propose is based on various technologies with the GPT-3 language model prominent [1], and we call it GPT Vocabulary Tutor or GPT-VT for short. GPT-VT communicates with the learner through natural language and directs the dialogue towards learning specific vocabulary, which can be defined by the learner himself or the learner’s human teacher. GPT-VT also follows basic pedagogical principles. Our contribution consists of the following: 1. In the construction and delivery of a novel artificial vocabulary-learning assistant. The GPT-VT differs substantially from any previous construct intended to aid vocabulary learning.  
   
  © The Author(s), under exclusive license to Springer Nature Switzerland AG 2023 C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 270–280, 2023. https://doi.org/10.1007/978-3-031-32883-1_23  
   
  A GPT-Based Vocabulary Tutor  
   
  271  
   
  2. We present an architecture that combines the traditional rule-based and patternmatching technology of natural dialogues with modern technology based on the sophisticated transformer neural network [2] and, more specifically, on the GPT3 language model. We manage with this architecture to limit GPT-3, which is an open-domain dialogue system, exclusively to vocabulary learning. 3. We study the effectiveness and weaknesses of GPT-VT, which is at the same time a study of the efficacy and deficiencies of GPT-3 underline technology about the specific tasks of evaluating definitions of terms and examples of their use.  
   
  2 Intelligent Vocabulary Tutors Intelligent tutoring systems are pretty widespread. You can find a lot of information about them in reviews [3, 4]. Some of them deal with helping students learn vocabulary. Paper [5] presents a small French vocabulary tutor for the World Wide Web, which helps students learn new French words and their pronunciation through words, pictures, and sounds. This work does not support a natural language interface. The work in [6] presents the Web-based Intelligent Learning Environment (WILE) framework as a solution. WILE includes four essential components: a communication module, a pedagogical module, a student model and an expert module, deployed over a client-server architecture. The article also mentions the emergence of mobile learning (mLearning) as an alternative to eLearning, and its advantages and constraints, such as the display of large content. It also does not support a natural language interface. Paper [7] proposes a mobile-based vocabulary tutor and examines its use. The presented tutor allows learners to complete vocabulary activities through mobile phones or computers and tracks their progress. The system creates a profile of each learner based on the vocabulary they have difficulty with and provides more practice for those words. The study analysed the learners’ usage patterns and surveyed them at the end of the project to gather their perspectives on the system. It also does not support a natural language interface. A web-based system aiming at learning vocabulary through personalised word association games is presented by [8]. This work focuses on personalising the learning process and game-based learning to make language learning more attractive to students. It does not support a natural language interface. The study [9] examines the impact of sociocultural factors on using a web-based tool for learning English vocabulary. Other works relative to vocabulary acquisition include: STI-DICO [10] is an Intelligent Tutoring System (ITS) that incorporates a Learning Management System (LMS) as its learning interface. It aims to help future French primary school teachers acquire the knowledge and skills to use the French dictionary. It uses authentic learning scenarios to allow learners to develop the skills and knowledge needed for the classroom. A web-based training platform for those who struggle with acquiring German orthography is presented by [11]. On this platform, students can write, publish and correct texts supported by a feature that gives feedback automatically and is called the intelligent dictionary.  
   
  272  
   
  G. Zografos and L. Moussiades  
   
  A systematic review of AI-based language learning tools is presented in [12] for more information. Finally, specifications for a vocabulary learning assistant based on a natural language interface are given in [13], while in [14], vocabulary structure recognition is attempted to be utilised in such an artificial teacher.  
   
  3 Architecture, Functionality and Technology None of the efforts mentioned above yielded a satisfactory solution to the following question. How can we reliably evaluate the student’s response that will be given in natural language? Then, transformer neural networks appeared, and GPT-3, a transformer-based language model, solved the question. GPT-3 (Generative Pre-trained Transformer 3) is a state-of-the-art language generation model developed by OpenAI. It is trained on a massive dataset of text data and can generate human-like text on a wide range of topics. It can perform various natural language processing tasks, such as language translation, text summarisation, question-answering and text generation. It is considered one of the most advanced language models currently available, with the ability to generate highly coherent and fluent text, and can be fine-tuned for specific tasks. GPT-3 is also notable for its ability to generate text independently without being prompted with a particular task, making it a powerful tool for chatbots implementing natural language application interfaces. However, GPT-3 cannot be used directly to play the role of a vocabulary assistant. This is because GPT-3 is an open-domain system, i.e. it can enter into dialogues on various issues. This functionality does not serve the GPT-VT, which requires exchanges to be directed solely at learning a specific vocabulary at a time. Therefore, the solution we propose is the cooperation of Chatscript with GPT-3. ChatScript is a free, open-source platform for creating natural language processing (NLP) tasks [15]. It uses a combination of pattern matching and rule-based processing to understand the context and respond accordingly. The platform features a patternmatching system that allows it to understand a wide range of inputs, a scripting language for creating custom rules, and a built-in dialogue management system that enables the creation of complex multi-turn conversations. In Fig. 1, we present GPT-VT’s abstract architecture. Then we analyse each component. • Dictionary: The Dictionary is a data pool where vocabulary entries are stored as JSON records. Currently, two types of such records are supported: definition and usage. The definition type causes the guiding module to ask the user for an explanation of the term, while the usage type questions for a usage example. An example of each type follows. – {term: “chair”, type:”definition”, response:”a piece of furniture with a raised surface supported by legs, commonly used to seat a single person”} – {term: “chair”, type:”usage”, response:”he pulled out a chair from the dining table and sat down for dinner”}  
   
  A GPT-Based Vocabulary Tutor  
   
  273  
   
  Fig. 1. GPT-VT’s abstract architecture  
   
  This arrangement enables the human teacher to precisely determine the type of questions to be asked of the student and the terms these questions will include by simply loading an appropriate JSON file. However, a facility is also provided to load definition entries automatically from the Cambridge Dictionary1 . • Guiding module: Based on an entry from the Dictionary, the guiding module constructs the question for the user. Within the guiding module, Chatscript operates, which combines data from the Dictionary with its pattern-matching rules to differentiate the questions to the user making the dialogue more human-like. So, we have two main types of questions, one on the definition and one on usage. However, its role is not limited to query formulation based on the Dictionary. Its remaining functions are described below when describing the functionality of the remaining components. • User Interface: The user interface design is inspired by the interface of bot LIA [16]. Figure 2 provides a view of the user interface design. It features a student’s sketch on the right side communicating with a computer, a moving robot on the left side, and a dialogue box between them. The robot is labelled as the GPT-VT, and when the student gives their name, it appears as a tag on the student’s sketch. The purpose is to identify the student with the corresponding image and create the perception that the student is talking to a robot. The interface supports text-based dialogues but also includes ASR (Automatic Speech Recognition) and TTS (Text-to-Speech) interfaces that can be controlled by voice and microphone icons. The microphone can be activated automatically when the GPT-VT expects a student’s response, and it will be maintained for a short time or until the student completes their phrase. If the student does not speak, the microphone can be turned on by clicking the microphone icon. This practice aims to achieve seamless voice communication between the student and the GPT-VT. Its operation consists of the following: It sends the question to the user and receives the answer. Often, in studying a particular vocabulary, students know the answer as it is in the response field. If the student’s answer is identical to JSON’s response field, the  
   
  1 https://dictionary.cambridge.org/.  
   
  274  
   
  G. Zografos and L. Moussiades  
   
  User Interface updates the Guiding module backwards. Thus, GPT -VT saves time; otherwise, it passes the question along with the user’s response to the API gateway.  
   
  Fig. 2. GTP-VT user interface  
   
  • API gateway: The API gateway performs the following tasks. Configures the phrase to be sent to GPT-3. For example, suppose the definition of the term chair has been requested, and the user answered, ‘A chair is a piece of furniture with a raised surface supported by legs, commonly used to seat a single person’. In that case, the sent sentence is formatted as follows: Is the phrase “A chair is a piece of furniture with a raised surface supported by legs, commonly used to seat a single person” a correct definition for ‘chair’? Start your answer with yes or no and include a proper explanation. In general, phrases send to GPT-3 formulate according to the two types of JSON entries: – Is the phrase [“user answer”] a correct definition for [“JSON’s term”]? Start your answer with yes or no and include a proper explanation. – Is the phrase [“user answer”] a representative example of [“JSON’s term”]? Start your answer with yes or no and include a good usage example. API gateway also includes a PHP handler acting as an interface between the user interface and the GPT-3 API. • GPT-API: The GPT-API sends the appropriate phrase to GPT neural network and receives GPT’s evaluation, which it forwards to the Guiding module. The Guiding module analyses the assessment to understand whether the student’s answer is correct. This analysis for the definition and usage types is based on the fact that the GPT evaluation starts with Yes or No.  
   
  A GPT-Based Vocabulary Tutor  
   
  275  
   
  If the user’s answer is identified to be correct, the Guiding module proceeds to the next JSON record. Suppose the user’s response is recognised as incorrect. In that case, the Guiding module informs the student of the GPT’s evaluation and asks if they would like a second attempt with the same term to facilitate the student to consolidate the term. The Guiding module also recognises students based on their name and IP address. These credentials were chosen so the system can be accessed by young students who may be troubled by the login process. However, this is an option that can easily be changed. In addition to these functions, the Guiding module keeps the history of GPT-VT interaction with the student. Therefore, it enables the system to continue the study of a vocabulary even in different sessions while maintaining information that can be used to evaluate the student. Besides, when a cycle with the dictionary terms is completed, the Guiding module repeats questions that only address the words that were not answered correctly. The vocabulary study is completed when the student has answered correctly at least once for each Dictionary term. The technology that supports the described architecture includes Chatscript for the Guiding module, HTML, CSS, Javascript and Ajax for the User Interface, PHP for the API gateway and Python for the GPT3 API. It follows an example dialogue between GPT-VT and a human reviewer. GPT-VT User GPT-VT User GPT-VT  
   
  : Hello George! Do you want to practice vocabulary? : yes : Can you explain to me what chair mean? : a piece of furniture made of steel with two legs : No, the correct definition for the term chair is a piece of furniture for one person to sit on, typically with four legs and a back. Your example was not quite accurate. Do you want to try again with the same lemma? User : yes GPT-VT : Okay, let’s try again. What’s your definition? User : a furniture you can sit on GPT-VT : Yes, a chair is a piece of furniture designed for a person to sit on. Ok, you are good so let’s move to the next one! Give me a usage example of the term chair. User : I got tired of standing for so many hours. I urgently need a chair. GPT-VT : Yes, this is a correct usage example for the term “chair”. Another correct usage example is: “I went to the store to buy a chair for my office.” Ok, so let’s move to the next one! What does record mean?  
   
  4 Pedagogical Principles The GPT-VT was designed from the author’s experience as their children often give them a foreign language book and ask for help practising vocabulary. However, it follows some basic pedagogical principles: • Active learning [17]: The use of GPT-VT demands interaction with the student. Furthermore, it supports self-directed learning allowing the student to load vocabulary of their liking using an appropriate JSON file.  
   
  276  
   
  G. Zografos and L. Moussiades  
   
  • Instructional scaffolding: It supports the essential features of scaffolding [18]. It supports the interaction between the learner and the expert, where the expert is the GPT-VT. It allows the human tutor to set the appropriate vocabulary such that learning takes place in the learner’s zone of proximal development [19]. As it keeps the history of the interactions, it can easily be extended to adapt to the appropriate vocabulary automatically. • Content differentiation is also supported by selecting the appropriate JSON file, and feedback is immediate.  
   
  5 Experimentation To evaluate the performance of GPT-VT, we used 35 terms from the Cambridge dictionary. For 18 of them, we checked whether GPT-VT correctly evaluates their definition. For each of the 18 terms, we submitted a correct definition from the Cambridge dictionary and an incorrect definition according to a human reviewer. Because GPT-VT results are not deterministic, we repeated this test 50 times. Therefore, to check the definition evaluation, we asked a total of 18 × 2 × 50 = 1800 questions to GPT-VT. We did precisely the same for testing the usage examples. So here we were asking a total of 17 × 2 × 50 = 1700 questions. The total number of definition and usage example questions is 3500. For this test, we have used text-davinci-003, the most advanced model of the GPT-3 series (except ChatGPT) [20], setting the maximum length to 256 and temperature to 0.5. The maximum length parameter represents the maximum number of tokens to generate. Its highest accepted value is 4000. Temperature controls the degree of randomness of the generated responses. It takes values from 0 to 1. If the temperature equals 0, the model becomes deterministic [21]. In the following, we present the aggregated results and then analyse them with particular emphasis on GPT-VT errors. 5.1 Results Table 1 presents the aggregated results. Table 1. Aggregated results Prediction User Response  
   
  Positive  
   
  Negative  
   
  Correct  
   
  TP: 1648  
   
  FN: 102  
   
  False  
   
  FP: 337  
   
  TN: 1413  
   
  Based on Table 1, we calculated the measures presented in Table 2. The high sensitivity value indicates the GPT-VT’s ability to correctly identify correct user responses.  
   
  A GPT-Based Vocabulary Tutor  
   
  277  
   
  Table 2. Performance Measures Measure  
   
  Formula  
   
  Value  
   
  Sensitivity  
   
  TP TPR = (TP+FN ) TN SPC = (FP+TN ) TP PPV = (TP+FP) ) ACC = (TP+TN (P+N ) 2TP F1 = (2TP+FP+FN ) TP∗TN −FP∗FN √ (TP+FP)∗(TP+FN )∗(TN +FP)∗(TN +FN )  
   
  0.9417  
   
  Specificity Precision Accuracy F1 Score Matthews Correlation Coefficient  
   
  0.8385 0.8302 0.8856 0.8825 0.7777  
   
  The specificity that reflects the GPT-VT’s ability to identify incorrect user responses correctly is also relatively high. However, it is lower than sensitivity, which means that GPT-VT is better at identifying correct than wrong user answers. Precision reflects how many of the answers detected as correct are actually correct. Accuracy is considered a measure of the overall performance of a model. F1 Score measures a model’s performance and balances precision and recall. It is calculated as the harmonic mean of precision and recall. All the above measures take values from 0 to 1. Matthews Correlation Coefficient differs; its lowest value is −1, and its highest is 1. It computes the correlation between observed and predicted binary classifications and is considered a robust metric of binary classification performance. The general picture from the measurements in Table 2 is that GPT-VT performs significantly well. However, the deviation from optimal performance raises questions analysed in Sect. 5.2. 5.2 Analysis of the Results Analysing the results, we identified three different types of GPT-VT errors. The first type concerns the definitions of the terms. In this case, they were evaluated as incorrect user responses, whereas they were correct. Both terms for which we had such a result were homonyms. So GPT-VT compared the definition we gave it with another meaning. We call this type of error the homonym error. An example of a homonym error is shown next. – Query: Is the phrase “the power and ability to be physically and mentally active “ a correct definition for “energy”? Start your answer with yes or no and include a proper explanation. – Response: No, this is not a correct definition for “energy.” Energy is defined as the ability to do work or cause change. It is the capacity to cause motion or create change.  
   
  278  
   
  G. Zografos and L. Moussiades  
   
  This phrase describes the ability to be physically and mentally active, but does not address the capacity to cause motion or create change. The remaining two error types concern the usage examples, and we call them conceptual and metaphorical errors. Conceptual errors refer to phrases that are syntactically correct but could not be considered appropriate examples of the use of the term. For example, – Query: Is the phrase “What is your car’s opinion?” a representative example of “opinion”? Start your answer with yes or no and include a good usage example. – Response: Yes, “What is your car’s opinion?” is a representative example of “opinion”. For example, you could ask a friend, “What is your opinion on the new movie?” The metaphorical errors concern usage examples that are linguistically correct but do not adequately convey the term’s literal meaning. At the same time, however, they could be considered useful examples in a metaphorical sense of the term. Here is an example of a metaphorical error. – Query: Is the phrase “The conclusion of the story was its beginning.” a representative example of “conclusion”? Start your answer with yes or no and include a good usage example. – Response: Yes, this phrase is a representative example of “conclusion”. For example, the conclusion of the novel was that the protagonist had to go back to the moment when the story began in order to resolve the conflict. Table 3 presents statistics for the three types of errors. Table 3. Statistics of three types of Errors. Homonym Error  
   
  Conceptual Error  
   
  Metaphorical Error  
   
  Number of phrases  
   
  2  
   
  3  
   
  4  
   
  FP  
   
  –  
   
  78  
   
  200  
   
  FN  
   
  100  
   
  –  
   
  –  
   
  TN  
   
  –  
   
  72  
   
  –  
   
  According to Table 3, we had a Homonym error in two phrases. This happened all fifty times that each phrase was submitted as a question. We had conceptual errors in three phrases. In this case, GPT-VT considered about half of the user responses correct and the remaining incorrect. Finally, four phrases were detected with a metaphorical error. All questions related to them were rejected.  
   
  A GPT-Based Vocabulary Tutor  
   
  279  
   
  6 Conclusions This paper presents an artificial vocabulary tutor based on GPT-3. Its overall performance is shown by the measurements in Table 2. The cases where GPT-VT fails to evaluate correctly, we believe, can be largely mitigated. As for homonym errors, the question to GPT-3 could be formatted to include the term’s meaning along with the user’s answer. This may limit, perhaps even eliminate, homonym errors. For the other types of errors, more investigation is needed. Apparently, GPT-3 takes examples that make metaphorical use of a term primarily as correct ones. On the other hand, conceptual errors are sometimes considered correct and sometimes incorrect. Also, it should be noted that the temperature parameter plays a significant role in shaping the results. We intend to do experiments with more conditions, with varying temperature values and, of course, with better statistical processing of the results. Also, we intend to compare our model using GPT-3 and ChatGPT. Moreover, our work should be extended to investigate the effect of the vocabulary tutor on the student’s knowledge acquisition. Although there is a lot to do, the results so far show us that the road to such reliable applications is wide open as long as we take it. Acknowledgements. This work was supported by the MPhil program “Advanced Technologies in Informatics and Computers”, hosted by the Department of Computer Science, International Hellenic University, Greece.  
   
  References 1. Radford, A., Narasimhan, K.: Improving Language Understanding by Generative PreTraining. https://www.semanticscholar.org/paper/Improving-Language-Understanding-byGenerative-Radford-Narasimhan/cd18800a0fe0b668a1cc19f2ec95b5003d0a5035 (2018). Accessed: 16 Jan. 2023 2. Vaswani, A., et al.: Attention Is All You Need. arXiv, 05 Dec 2017 3. Paladines, J., Ramirez, J.: A systematic literature review of intelligent tutoring systems with dialogue in natural language. IEEE Access 8, 164246–164267 (2020) 4. Mousavinasab, E., Zarifsanaiey, N., Niakan Kalhori, S.R., Rakhshan, M., Keikha, L., Ghazi Saeedi, M.: Intelligent tutoring systems: a systematic review of characteristics, applications, and evaluation methods. Interact. Learn. Environ. 29(1), 142–163 (2021) 5. Labrie, G.: A french vocabulary tutor for the web. CALICO J. 17(3), 475–499 (2000) 6. Kazi, S.A.: VocaTest : an intelligent tutoring system for vocabulary learning using the ‘mLearning’ approach. https://repository.nie.edu.sg/handle/10497/217 (2005). Accessed: 15 Jan 2023 7. Stockwell, G.: Vocabulary on the move: Investigating an intelligent mobile phone-based vocabulary tutor. Comput. Assist. Lang. Learn. 20(4), 365–383 (2007) 8. Jung, J., Graf, S.: An approach for personalised web-based vocabulary learning through word association games. In: 2008 International Symposium on Applications and the Internet, pp. 325–328 (2008) 9. Juffs, A., Friedline, B.E.: Sociocultural influences on the use of a web-based tool for learning English vocabulary. System 42, 48–59 (2014)  
   
  280  
   
  G. Zografos and L. Moussiades  
   
  10. Luccioni, A., Nkambou, R., Massardi, J., Bourdeau, J., Coulombe, C.: STI-DICO: a webbased system for intelligent tutoring of dictionary skills. In: Proceedings of the 25th International Conference Companion on World Wide Web, Republic and Canton of Geneva, CHE, pp. 923–928 (2016) 11. Ebner, M., Edtstadler, K., Ebner, M.: Tutoring writing spelling skills within a web-based platform for children. Univ. Access Inf. Soc. 17, 305–323 (2017). https://doi.org/10.1007/s10 209-017-0564-6 12. Woo, J.H., Choi, H.: Systematic Review for AI-based Language Learning Tools. arXiv, 29 Oct 2021 13. Towards a robot assistant in vocabulary learning - International Conference on Robotics, Mechatronics and Social Implementation 2018, Varna, Bulgaria, In: HUMAIN Lab. http://humain-lab.cs.ihu.gr/index.php/2018/09/01/towards-a-robot-assistant-in-vocabu lary-learning/?lang=en (2018). Accessed 16 Jan 2023 14. Moussiades, L., Tsimperidis, I., Karanakis, S.: Dictionary structure identification. Eng. Sci. Technol. Rev. 14(6), 28–34 (2021) 15. ChatScript: SourceForge. https://sourceforge.net/projects/chatscript/. Accessed 16 Jan 2023 16. Moussiades, L., Zografos, G.: LIA: a mathbot assistant for first-grade students. Eur. J. Eng. Technol. Res. 6(5), 89–93 (2021) 17. Bonwell, C.C.: Active Learning : Creating Excitement in the Classroom. School of Education and Human Development, George Washington University, Washington, D.C. http://archive. org/details/activelearningcr0000bonw (1991). Accessed 18 Jan 2023 18. Beed, P.: Moving Learners toward Independence: The Power of Scaffolded Instruction. The Reading Teacher. https://www.semanticscholar.org/paper/Moving-Learners-toward-Ind ependence%3A-The-Power-of-Beed/a7fff77e4215f373570407892ac9fc77ba3f6399 (1991). Accessed 18 Jan 2023 19. McLeod, S.A.: What Is the Zone of Proximal Development? https://www.simplypsychology. org/Zone-of-Proximal-Development.html (2012). Accessed 18 Jan 2023 20. How do text-davinci-002 and text-davinci-003 differ?. https://help.openai.com/en/articles/ 6779149-how-do-text-davinci-002-and-text-davinci-003-differ. Accessed 21 Jan 2023 21. Zong, M., Krishnamachari, B.: A survey on GPT-3 (2022)  
   
  ETHOSCHOOL: An Artificial Moral Agent Model for Collaborative Learning Paulo Roberto Córdova1(B) , Iderli Pereira de Souza Filho2 , Gilleanes Thorwald Araujo Guedes2 , and Rosa Maria Vicari1 1 Federal University of Rio Grande do Sul-UFRGS, Porto Alegre, Brazil  
   
  [email protected]  , [email protected]  2 Federal University of Pampa-UNIPAMPA, Alegrete, Brazil [email protected]   
   
  Abstract. The growing popularization of Artificial Intelligence (AI) technologies to support most different human activities, including education, has been a subject of research and concern among researchers in the area. In this sense, how to translate ethical principles into computational models; how to avoid biases; how to make intelligent systems accountable; and how to make them more predictable and able to explain their actions are among the main issues raised. Such questions also extend to the Education area, where it is necessary to address this matter with the same seriousness. Despite this, few proposals in ethics by design have been observed for the Education area. To help fill this gap, this work presents a proposal for an Artificial Moral Agent (AMA) to aid in collaborative learning. The proposed AMA implements a hybrid approach between deontological and utilitarian ethical frameworks, using the Belief, Desire, and Intention (BDI) architecture. For this, through Agent-Oriented Software Engineering (AOSE) techniques, which is the focus of this paper, the functional requirements of the proposed AMA will be described, as well as its structural model. Keywords: Artificial Intelligence · Ethics · Education · Software Design  
   
  1 Introduction The use of AI technologies in the Education field have rising some reflections on the risks and effects that the use of this kind of solutions for teaching and learning represents for future generations [3]. In this sense, the ethical implications of using intelligent systems capable of supporting, driving, or influencing learning need to be considered with the same seriousness as they have been in other areas. The present work proposes an investigation in ethics by design, a research area which seeks to develop algorithmic solutions to endow autonomous artificial systems with the capacity for ethical reasoning. In this context, the set of efforts undertaken by the research community, to produce intelligent systems aligned with human values, is organized in a field called Value Alignment (VA) in AI [9]. Researchers in this field have sought answers to questions related to how to translate ethical principles into computational © The Author(s), under exclusive license to Springer Nature Switzerland AG 2023 C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 281–289, 2023. https://doi.org/10.1007/978-3-031-32883-1_24  
   
  282  
   
  P. R. Córdova et al.  
   
  models, how to avoid data bias, how to make intelligent systems accountable for their decisions, among others [9]. This set of questions gave rise to the development of a special type of artificial agent capable of demonstrating behaviors considered ethical: the Artificial Moral Agent. This kind of agents must be capable of demonstrating moral behavior or preventing immoral behavior [4]. Despite the importance and the clear need to search for solutions in ethics by design, few initiatives have been observed in Education area. To help fill this gap, this article proposes and describes an AMA model to support collaborative learning using AgentOriented Software Engineering (AOSE) techniques. About this proposal, one can see previous results in [5] and [6]. The aim of this research is to investigate how to make more ethical use of AI in education area. To test our proposal, presented in more details in [5] and [6], we chose a collaborative learning scenario. In this sense, to understand how computer systems have been used to support collaborative learning, one can resort to Computer Supported Collaborative Learning (CSCL), a branch of learning science concerned about investigating how people can learn together by being aided by computers [11]. We have addressed this topic and its relation to this work and presented a conceptual outline of the AMA described in this paper, including scenarios and examples of application in [5]. Finally, to allow understanding of the proposed model, the functional requirements of the proposed AMA will first be described and, subsequently, its structural model will be presented.  
   
  2 Methodology In this work, different methodologies and modeling languages are used for different stages of the proposed MAS project. This way, for the specification of requirements, the Multi-Agent Systems Requirements Modeling Language (MASRML), a domain-specific language based on the Unified Modeling Language (UML) for modeling requirements in Multi-Agent Systems (MAS) projects [8], was applied. Regarding the structural aspect of the proposed MAS, the Multi-Agent System Modeling Language MAS-ML will be applied. This language can represent the essential static and dynamic aspects of the MAS, emphasizing a clear representation of their concepts and relationships [10].  
   
  3 Results and Discussion The present work envisages the modeling of the Ethoschool, a MAS designed to guide collaborative learning groups through discussion forums considering ethical criteria. This solution has an AMA based on the BDI architecture, capable of making decisions based on predetermined deontological moral principles and dealing with ethical dilemmas using utilitarian reasoning [6]. Ethoschool was idealized to act as a CSCL, interacting with students to maintain the team of work cohesive. Besides, this CSCL ought to operate so that all students participate in an equitably way during the activities time.  
   
  ETHOSCHOOL: An Artificial Moral Agent Model  
   
  283  
   
  In this way, the proposed solution is constituted by an environment in which there are two agent roles named Monitor and Tutor. The first one aims to fetch and organize the interactions carried out by the students and registered in the forum’s database. Such a fetch will temporally take place and once the Monitor has the interactions data, it will have as its plan to distribute the information, sending it to the Tutor agent. The Tutor agent, by its turn, is an AMA that follows the top-down approach [1] and aims to analyze the need for intervention by the agent in the students’ interactions in the forum. This approach was chosen, as it is understood that learning ethical behavior is inappropriate for the classroom environment [6]. Therefore, the Ethoschool needs to follow rules derived from some of the ethical principles established by [12], in some characteristics of CSCL systems, and in some collaborative learning assumptions. These rules and their relationship with the principles proposed by [12] were described in [5]. Table 1 shows the rules that the Tutor ought to follow. Table 1. Rules the Tutor Ought to Follow. ID  
   
  Priority  
   
  Rules  
   
  1  
   
  1  
   
  Some student in the group must interact  
   
  2  
   
  2  
   
  All students must interact  
   
  3  
   
  3  
   
  All students must interact equitably  
   
  4  
   
  4  
   
  All students must continue to interact through-out the activity  
   
  5  
   
  1  
   
  All groups must complete activities in time  
   
  6  
   
  1  
   
  All students must be informed of their peer interactions  
   
  7  
   
  1  
   
  Do not interfere in students’ decisions  
   
  8  
   
  1  
   
  Avoid disproportionate levels of demand  
   
  9  
   
  1  
   
  Avoid sending discouraging messages  
   
  10  
   
  1  
   
  Avoid exposing the student to peers in the group  
   
  The imposing character of the rules presented in Table 1, as described in more detail in [5], is directed to the Tutor agent, who must seek to satisfy them, even if it is not always possible, given the environmental variables. The contradictions, as well as the prioritization between the presented rules in order to mitigate possible conflicts are further explained in [5]. Regarding the other functional requirements of the Tutor agent, its perception is limited to perceiving the messages sent by the Monitor agent containing the compiled data from the interactions carried out by the students in the forum. Inside the Tutor’s plan is included the analysis of this data, and the actions resulting from this analysis must be executed under environmental conditions. In this sense, in [5] are described the complexity of the environment, as well as the fourth scenario modeled to explain in more detail the behavior of the proposed MAS.  
   
  284  
   
  P. R. Córdova et al.  
   
  As for the utilitarian dimension of the AMA, the algorithm known as Hedonistic Act Utilitarianism (HAU) will be used, also as described in [5]. The HAU formula is presented below. n  Total Net Pleasure = (Intensityi · Durationi · Probatilityi ) i=1  
   
  3.1 Requirements Specification During requirements engineering, we used the MASRML modeling language [8] to help to identify specific functional requirements for the Ethoschool Multi-agent system. Thus, an Use Case Diagram (UCD) was produced, as shown in Fig. 1.  
   
  Fig. 1. Representation of Functional Requirements Using MASRML.  
   
  The requirements modeled in this UCD represent system behaviors. Therefore, when we examine Fig. 1, we can see that the Student and Teacher actors are normal UML actors, representing roles assumed by external users who operate the system. While Monitor and Tutor are AgentRole_Actors, as shown by their stereotypes, representing roles that can be assumed by agents and commit to their goals. Still examining Fig. 1, we can see that the use cases “Interact in the forum”, “Delete topic”, and “Set agent verification time” are normal use cases, that is, behaviors that can be performed by users who assume the role of teacher or student in the system. The Internal Use Cases (IUC) “Check Forum” and “Check need for intervention” are goals, as can be seen from their stereotypes. These IUCs are associated with AgentRole_Actors Monitor and Tutor respectively. This means that the agents who assume these roles must verify whether these goals can be achieved and act on them if they do.  
   
  ETHOSCHOOL: An Artificial Moral Agent Model  
   
  285  
   
  Since for these desires (goals) to become intentions, it is often needed for agents to receive perceptions from the environment that make them believe that the goals can be achieved, there is an IUC representing a perception (stereotype Perception) associated with each IUC Goal (“Check the verification time” and “Perceive message from monitor”). It should be noted that these Perception IUCs are associated with Goal IUCs through actionPerceptionInclude associations, which is similar to the standard UML inclusion association in which the execution of the IUC Goal implies the execution of the IUC Perception associated with it. Thus, whenever goals are executed by agents, their perceptions must also be executed to determine if the goal can become an intention. It can also be observed that there are IUCs with the Plan stereotype associated with the IUCs Goals. These IUCs represent the plans that will be executed by an agent if he believes that the goal can be achieved and has become an intention. Plan IUCs are associated with Goals IUCs through PlanExtend relationships. This means that plans will only be executed upon satisfaction of a certain conditions, in the case where the agent believes that the goal in the matter has become an intention. To exemplify the functioning of the MASRML documentation, Table 2, Table 3, and Table 4 present the documentation related to the Tutor Agent. Table 2. Goal – Check need for intervention Internal Use Case Name Stereotype AgentRoleActor Description  
   
  Check need for intervention Goal Tutor Describes the steps followed by the Tutor Agent to verify the need and the type of intervention to each student or group. Initial Beliefs Students interacting properly Perceptions Polling for new messages from the Monitor Main Scenario AgentRoleActor Actions 1. Execute the internal use case "Perceiving message from Monitor". Alternative Scenario - Students not interacting properly. AgentRoleActor Actions 1. Evidence that there are students not interacting. 2. Change belief to need to verify intervention = true. 3. Solve ethical dilemma using the Hedonistic Act Utilitarianism (HAU). 4. Make the goal into an intention. Alternative Scenario 2 - Students are interacting properly. AgentRoleActor Actions 1. Evidence that students are interacting properly. 2. Tutor agent saves the decision made and the data used to make it.  
   
  The Tables 2, 3 and 4 describe the behavioral steps relative to the perception and plan associated to the goal “Check need for intervention”. Next, more details about the internal functionalities, which cannot be represented by the UCD, will be discussed.  
   
  286  
   
  P. R. Córdova et al. Table 3. Perception – Perceive message from Monitor.  
   
  Internal Use Case Name Stereotype AgentRoleActor Description Preconditions  
   
  Perceive message from Monitor Perception Tutor Describes the probing for possible Monitor Agent’s messages. The internal use case Goal "Check the need for intervention" must be in execution. Initial Beliefs Message received from Monitor = false. Main Scenario AgentRoleActor Actions 1. Probe the environment to verify the occurrence of a new message sent from the Monitor containing the data of the students’ interactions in the forum. Alternative Scenario - Monitor message sent AgentRoleActor Actions 1. Come to believe that Student data was sent. 2. Receive Student Data.  
   
  3.2 Structural Model During the design phase, we used the MAS-ML language [7] to model the structure of the Ethoschool. As one can see, MASRML [8] and MAS-ML complement each other in describing software characteristics. Structural models help to illustrate the physical or logical composition of software from its components. In this sense, structural modeling establishes the boundary between the software being modeled and the environment in which it must operate [2]. This way, Fig. 2 was produced, presenting a structural model in the form of a MASML organizational diagram, which allows identifying the types of agents supported by the system and the roles that they can assume in its organization. In this diagram, there are two types of agents and two agent roles that can be assumed. Thus, when looking at Fig. 2, we can see that Ethosschool supports the Monitor and Tutor agent roles, which are interpreted by the Assistant and Ethical agents, which, in turn, are agent classes. The Assistant AgentRole has the purpose of checking the forum to verify students’ interactions. In addition, it also has a protocol to communicate the interactions performed by the students to the tutor. The Monitor agent has the plan to distribute information to the agent that assumes the Tutor role. This plan will only be executed when the check forum goal becomes an intention. The Assistant agent also has the beliefs through which it believes or not that the students are interacting properly and whether or not the students have started a new task on the forum. Tutor AgentRole, in turn, aims to verify the need for intervention to encourage students’ participation by analyzing the forum interaction data sent by the agent that assumes the Monitor role and perceiving the receipt of new messages sent by him. This role has also protocols for sending encouraging messages to the students, as well as the duty of saving the decision made and the data used to make it. For this, the analysis of the students’ interactions data is materialized in the form of an agent’s plan, which is triggered when the goal of verifying the need for intervention  
   
  ETHOSCHOOL: An Artificial Moral Agent Model  
   
  287  
   
  Table 4. Plan – Analyze Student Interaction Data Internal Use Case Name Stereotype AgentRoleActor Description  
   
  Analyze Student Interaction Data Plan Tutor Describes the steps followed by the Tutor Agent when analyzing data from student interactions in the forum. Main Scenario AgentRoleActor Actions 1. To determine the number of students who are not interacting. Alternative Scenario - Identified student not interacting AgentRoleActor Actions 1. Send individual motivating message. 2. The Tutor agent saves the decision made and the data used to make it. Alternative Scenario - Identified students who are not interacting equitably AgentRoleActor Actions 1. Send message to instigate equity in the group participation. 2. Tutor saves the decision made and the data used to make it. Alternative Scenario - Identified team of students not interacting AgentRoleActor Actions 1. Send a motivating message to the students of the team. 2. Tutor agent saves the decision made and the data used to make it. Alternative Scenario - Identified a team of students with large gap since last interaction AgentRoleActor Actions 1. Send a message to the group reminding about the task. 2. Tutor agent saves the decision made and the data used to make it. Alternative Scenario - Utilitarian reasoning deliberates for non-intervention AgentRoleActor Actions 1. Determine the inadequacy of the intervention. 2. Tutor agent saves the decision made and the data used to make it.  
   
  of the Tutor AgentRole becomes an intention. This agent also has beliefs determining whether or not it is necessary to execute the need for intervention analysis and whether or not a message has been received from the Monitor.  
   
  4 Final Considerations Solutions for a more responsible, explainable, predictable, and therefore, reliable AI are an important contemporary demand. In this sense, one can say that in the teaching and learning context, it is an even more sensitive issue, as AI technologies can direct, with greater or lesser autonomy, the directions of a classroom. Aiming to help fill some gaps in this research area, this work proposes a hybrid solution based on the deontological and utilitarian ethical frameworks. Such a solution uses the BDI model to construct a MAS capable to guide students in a collaborative learning group interacting through a forum. During the requirements engineering phase of the proposed solution, we applied the MASRML language to identify and represent the functional requirements of the  
   
  288  
   
  P. R. Córdova et al.  
   
  Fig. 2. MASML Class Diagram  
   
  Ethoschool. In addition, the structural design was produced by applying the MASML language. The model was designed to guide its decisions on ethical principles based on UNESCO’s proposal for ethics in AI and to be able to deal with ethical dilemmas. This is possible due to its structure that embraces a Monitor Agent, responsible for monitoring the forum searching for students’ interaction data and sending them to the Tutor Agent. The late is an AMA, responsible for processing data from students’ interactions in the forum and deciding if, how, and when to intervene in student interactions. Such a solution can bring at least two advantages: as agents based on the BDI model are guided by intentions, it is more intuitive for the end-user to understand why an agent made a certain decision; and the use of ethical frameworks already validated by a community of research, such as ethical principles and the use of reasoning capabilities to solve ethical dilemmas can make the decisions made by intelligent systems more predictable [5]. These features help to construct an AI solution able to meet an important requirement for ethics in AI, named explainability. Thus, we believe that this solution can help make AI more reliable, especially in the education field, in which, more than relating to people, AI can drive learning processes playing an important impact on human formation and in society. For these reasons, the model proposed in this work can contribute to a more ethical AI in Education area. Acknowledgements. This study was financed in part by the Coordenação de Aperfeiçoamento de Pessoal de Nível Superior – Brasil (CAPES) – Finance Code 001.  
   
  ETHOSCHOOL: An Artificial Moral Agent Model  
   
  289  
   
  References 1. Allen, C., Smit, I., Wallach, W.: Artificial morality: top-down, bottom-up, and hybrid approaches. Ethics Inf. Technol. 7(3), 149–155 (2005) 2. Bourque, P., Farley, R.E.: Guide to the Software Engineering Body of Knowledge (SWEBOK (R)): Version 3.0. IEEE Computer Society Press (2014) 3. Casas-Roma, J., Arnedo-Moreno, J.: From Games to Moral Agents: Towards a Model for Moral Actions, pp. 19–28. IOS Press (2019) 4. Cervantes, J.A., López, S., Rodríguez, L.F., Cervantes, S., Cervantes, F., Ramos, F.: Artificial moral agents: a survey of the current status. Sci. Eng. Ethics 26(2), 501–532 (2020) 5. Córdova, P.R., Vicari, R.M.: Practical ethical issues for artificial intelligence in education. In: Reis, A., Barroso, J., Martins, P., Jimoyiannis, A., Huang, R.Y.M., Henriques, R. (eds.) Technology and Innovation in Learning, Teaching and Education, pp. 437–445. Springer Nature Switzerland, Cham (2022) 6. Córdova, P.R., Vicari, R.M., Brusius, C., Coelho, H.: A proposal for artificial moral pedagogical agents. In: Rocha, A., Adeli, H., Dzemyda, G., Moreira, F., Ramalho Correia, A.M. (eds.) Trends and Applications in Information Systems and Technologies, pp. 396–401. Springer International Publishing (2021) 7. Da Silva, V.T., de Lucena, C.J.: Mas-ml: a multiagent system modelling language. Int. J. Agent-Oriented Softw. 2, 382–421 (2008) 8. Guedes, G.T.A., de Souza Filho, I.P., Gaedicke, L.F., Mendonça, G.D., Vicari, R.M., Brusius, C.: MASRML-a domain-specific modeling language for multi-agent systems requirements. Int. J. Softw. Eng. Appl. (IJSEA) 11(5), 25–45 (2020) 9. Kim, T.W., Donaldson, T., Hooker, J.: Grounding value alignment with ethical principles (2019) 10. da Silva, V.T., Lucena, C.J.: MAS-ML: a multi-agent system modeling language. In: Companion of the 18th annual ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, pp. 126–127 (2003) 11. Stahl, G., Koschmann, T., Suthers, D.D.: Computer-supported collaborative learning. In: Keith Sawyer, R. (ed.) The Cambridge Handbook of the Learning Sciences, pp. 409–426. Cambridge University Press (2012). https://doi.org/10.1017/CBO9780511816833.025 12. UNESCO: first draft of the recommendation on the ethics of artificial intelligence (2020)  
   
  Toward a Smart Tool for Supporting Programming Lab Work Anis Bey1,2(B) and Ronan Champagnat1 1  
   
  2  
   
  La Rochelle University, La Rochelle, France {anis.bey,ronan.champagnat}@univ-lr.fr Higher School of Management Sciences, Annaba, Algeria  
   
  Abstract. In a lab work session, students may spend an inordinate amount of time attempting to correct simple errors, repeatedly revisiting and repeating the same errors due to the limited access to the tutor. Instructors, on the other hand, frequently find themselves explaining the same errors. This tool is designed to improve the educational environment in the computer lab for both students and instructors. The first experiment did not show that the tool improves learning programming, but it showed some insights about students that use the tool only in face-to-face sessions and students that use it only with the training mode compared to a control group. Keywords: Smart lab · Introductory programming Tutoring System · Feedback · Learning Analytics  
   
  1  
   
  · Intelligent  
   
  Introduction  
   
  One way to help students overcome diﬃculties in learning to program is to give them programming tasks to complete in the computer lab with the assistance of a tutor. A tutor can inspect the students’ code, investigate the issue, and then provide the students with the necessary assistance. However, communication between students and instructors in the lab is usually limited. The amount of time the instructor can devote to each student decreases as the number of students in the lab increases. With limited access to the tutor, students may spend undue time attempting to correct simple errors, repeatedly revisiting and repeating the same. They may need help comprehending compiler messages, making code correction a frustrating experience. Many researchers have studied diagnostic messages generated by compilers and interpreters during the last decade, such as syntactical errors. [1] states that these messages, which include error, warning, and run-time messages, are diﬃcult to understand, especially for beginners. In recent years, various tools have been developed to help instructors provide feedback to students on their work. All the tools of the state of the art were intended to provide feedback on students’ assignments after completing and c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 290–297, 2023. https://doi.org/10.1007/978-3-031-32883-1_25  
   
  Toward a Smart Tool for Supporting Programming Lab Work  
   
  291  
   
  submitting their work rather than for their work on programming activities in lab classes. This paper presents the main functionalities of Smart Lab technology for introductory programming computer laboratories and the early results of the ﬁrst experiment. We addressed two research questions : RQ1: Are there any signiﬁcant diﬀerences in the ﬁnal course score between groups of students that did not use the tool, students who used only the smart lab with a teacher, and students that have been logged in, and practicing by solving some exercises freely? RQ2: Is there any signiﬁcant diﬀerence in the ﬁnal course score between students in terms of the number of solved exercises? This paper is organized as follows. Section 2 shows some solutions to address the diﬃculties faced by programming students and the Smart Lab environment, with a presentation of a new Smart Lab described in Sect. 3, followed by Sect. 4, which presents a general workﬂow of how the tool works. Section 5 gives the leading indicators of students’ and teachers’ dashboard. In Sect. 6, details of the result of the ﬁrst experiment of the tool are provided, followed by a discussion, conclusion, and guidelines for future work.  
   
  2  
   
  Smart Lab Previous Work Survey  
   
  A Smart Lab is a lab that is outﬁtted with tools to improve instruction and learning [3]. The Smart Lab concept is to use technology to provide students and teachers with tools to improve their ability to communicate eﬀectively and engage successfully with the curriculum. A Smart Lab can be implemented in a variety of ways to achieve various objectives. [4], for example, describe a lab that was built in layers using a variety of approaches and devices. The main goal of that implementation was to allow students to visualize problems and their solutions on the lab’s large display screen. Prieto-Blazquez et al. in [2] created a virtual programming laboratory known as VPLab. They identify several key components needed to ensure VPLab’s success in improving students’ knowledge and skills in computer programming language. These essential components are further divided into three types of resources: technological resources, pedagogical and strategic resources, and academic staﬀ resources. The technological resources concentrate on artifacts of technology that can be used to simulate virtual laboratories and evaluate student knowledge and comprehension. Learning methodology, support documentation and other materials, and assessment are the pedagogical and strategic resources used in VPLab. The authors conducted a questionnaire-style survey to 284 distance learning students in order to assess the relevance of the suggested structure and its critical components. The main ﬁnding in the study was that although technological resources were rated highly by the students, the distance learning students appeared to place more importance on pedagogical and human factors. In [5], authors present the Lab4CE environment, a remote laboratory for computer education. This tool aims to increase students’ engagement in remote  
   
  292  
   
  A. Bey and R. Champagnat  
   
  practical activities by analyzing students’ interactions. The experiment was conducted using 139 undergraduate students enrolled in the ﬁrst year of a computer science degree. The results have shown that the framework has a positive eﬀect on learners’ engagement. Also, they found a signiﬁcant positive correlation between students’ activity and students’ course achievement. In general, smart lab technology implementations found in the literature were complex and included various components. As well as expensive hardware, they also required expensive displays, servers, and video cameras. To our knowledge, no smart lab technology reviewed dealt speciﬁcally with computer programming labs.  
   
  3  
   
  Software Description  
   
  The smart lab tool is a web application that aims to facilitate learning programming. The tool oﬀers two modes. The ﬁrst mode is to be used during a lab work session with a teacher. Once logged in, students must connect to the lab work session with an access code delivered by the instructor. They ﬁnd the exercises of the current session deﬁned by the instructor. Students can start solving an exercise, propose and run a solution, and receive an immediate assessment of the correctness and feedback about some code quality rules. The instructor can consult all submissions and give instant feedback to those struggling. The second mode of this tool is practicing. Students can access the tool and practice by solving some exercises. They receive the same feedback as in the smart lab mode used in the lab work session, but they do not have a teacher to notify them and give them more precise and tailored feedback.  
   
  4  
   
  Workflow  
   
  Teachers create exercises by deﬁning three pieces of information: the exercise statement, the aimed competencies, and the input/output tests. The IO test speciﬁes an input to a program and the expected output. If the students’ program produces the expected output, the test is passed, and they receive points. The tool user interface makes it simple to create IO tests. Multiple pairs of input and output can be used in a single IO test. The aimed competencies are selected to help students choose exercises to solve according to their weaknesses.  
   
  5  
   
  Dashboards for Insights and Support During Programming  
   
  We have conceived a dashboard for both students and teachers. For Students, to give some indicators about how they perform and to self-regulate their learning. For teachers, to give them some students’ insights and practices that can be used to give some feedback in the face-to-face course.  
   
  Toward a Smart Tool for Supporting Programming Lab Work  
   
  5.1  
   
  293  
   
  Teachers’ Dashboard  
   
  Teachers have a dashboard built with some indicators about the performance of students. We ﬁnd the following indicators: – Number of students: Total number of signed up students. – Number of active students: Total number of students that have submit at least one submission during the last week. – Number of submissions: Total number of submissions made by students. – Percentage of each type of submission: Correct, Erroneous, In Progress, Compilation Error. – Average percentage of Indentation, Comments, Expression, Variable, Repetition (see Sect. 5.3 for more information) – Distribution of submissions’ types per student. – Number and type of submissions (correct, in-progress, correct, compilation Error) per day. 5.2  
   
  Students’ Dashboard  
   
  Students’ dashboard is described and composed of the following indicators : – – – –  
   
  The rank of students in terms of solved exercises. Number of solved exercises. Number of remaining exercises. Percentage of each type of submission: Correct, Erroneous, In Progress, Compilation Errors. – Average percentage of each feature: indentation, comments, expression, variable, repetition (see Sect. 5.3 for more information). 5.3  
   
  Student’s Final Report  
   
  Whether in the smart lab mode with teacher or in the practicing mode, when a student submits a solution for a given exercise, the tool gives a report in the form of three parts: Output. In this space, the student will see if there is a syntactical error in his codes; otherwise, the number of successful IO tests. Feedback. The submitted code is evaluated in this part of the report according to ﬁve features: – Comments: to check if the submission is well commented. – Expressions: to evaluate expression complexity, we just look at compound expressions and long-expression lines. – Indentation: to evaluate indentation/formatting consistency. – Repetition: Repeating code is probably the top indicator of poor abstraction. – Variables: to evaluate if some variable names have meaningful lengths and are scoped within loops.  
   
  294  
   
  A. Bey and R. Champagnat  
   
  Quality. Here the quality of how well the code was written is reported according to 29 rules. The rules were gathered to give guidelines for developing reliable, maintainable, clearly structured, and clearly written object-oriented programs with special emphasis on the correct use of the risky features of the C++ programming language.  
   
  6  
   
  Early Experiment  
   
  A ﬁrst early experiment was conducted with 65 ﬁrst-year students of an introductory C++ programming university course. Students did not have prior knowledge of programming, but they mastered basic operations to use a computer system. Three lab work sessions were organized with a teacher in a computer lab where students were asked to login into the tool and used an access code to connect to a session deﬁned by the teacher. Also, we allowed the students to use the tool outside the face-to-face lab work session so that they could practice it. Also, we used a group of students that have not participated in the experiment as a control group (n = 15) for comparison against students who used the tool. 6.1  
   
  Results and Discussion  
   
  The experimental protocol was designed to test two modes. The ﬁrst mode is the use of the tool during lab work sessions. In this mode, students used the tool to do the exercises of the lab work with the teacher. The teacher can use the dashboard to see all submissions and also some indicators for all students of the session and also the progression of each student individually, as described in Sect. 5.1. Table 1. Mean and standard deviation of each feature (clusters of level2). Session type #Students #Submissions %Correct %Progress %Compil. %Erronuous SmartLab1  
   
  24  
   
  270  
   
  11.85  
   
  15.18  
   
  29.25  
   
  43.70  
   
  SmartLab2  
   
  29  
   
  368  
   
  17.39  
   
  4.34  
   
  42.11  
   
  36.14  
   
  SmartLab3  
   
  11  
   
  183  
   
  8.19  
   
  2.73  
   
  50.81  
   
  38.25  
   
  Training  
   
  21  
   
  275  
   
  11.63  
   
  4.36  
   
  37.45  
   
  46.54  
   
  The second mode consists of letting students free if they want to access on their own to solve some exercises in the tool when they are not in the lab session with the teacher. Table 1 shows the distribution of students in each session with the number of submissions, the percentage of correct, in-progress, compilation errors, and erroneous submissions.  
   
  Toward a Smart Tool for Supporting Programming Lab Work  
   
  295  
   
  In the ﬁrst session, 24 students participated and produced 270 submissions trying to solve three exercises. About 12% of these submissions were correct, 15% somewhat correct submissions, 29% of submissions had syntactical errors, and 43% were syntactically correct, but they did not provide the expected output. In the second session, 29 students participated and produced 368 submissions trying to solve three exercises. About 17% of these submissions were correct, 4.35% were somewhat correct submissions, 42% of submissions had syntactical errors, and 36.14% were syntactically correct, but they did not provide the expected output. In the third session, only 11 students participated and produced 183 submissions trying to solve three exercises. About 08% of these submissions were correct, 3% somewhat correct submissions, 51% of submissions had syntactical errors, and 38.25% were syntactically correct, but they did not provide the expected output. However, in the training mode, where students are free to log in and practice by solving some exercises, only 21 students have logged in and tried to practice. They have produced 275 submissions where 11.63% were correct, 4.35% were somewhat correct submissions, 37.45% of submissions having syntactical errors, and 46.54% were syntactically correct, but they did not provide the expected output. RQ1: Are there any signiﬁcant diﬀerences in the ﬁnal course score between groups of students that did not use the tool (control group), students who used only the smart lab with a teacher, and students that have been logged in and practicing by solving some exercises freely? We found a statistically-signiﬁcant diﬀerence in average ﬁnal course score according to session type (F (3) = 3.096, p < 0.05). A Tukey post-hoc test revealed signiﬁcant pairwise diﬀerences between students that just train by solving some exercise and the control group with an average diﬀerence of 3.3 (p < 0.05). However, there is no signiﬁcant diﬀerence between the other groups of students. The control group represents the group that has obtained the lowest ﬁnal course score (mean = 7.93, sd = 2.19). Students who have practiced by solving some exercises without participating in sessions with teachers have obtained the highest ﬁnal course score (mean = 11.24, sd = 2.83). To analyze the characteristics of each group of students according to the mode of practicing, we summarized the mean and standard deviation values of each group and this for the number of submissions, the number of correct, inprogress, compilation.Error and erroneous submissions as described in Table 2. A Kruskal-Wallis test was conducted to determine whether there is a significant diﬀerence in the medians of these groups of students. – Number of submissions: The test statistic was H = 5.87, with 2◦ of freedom, and the p-value was < 0.05. Based on this result, we reject the null hypothesis and conclude that there is a signiﬁcant diﬀerence in the medians of the groups. Post-hoc analysis using the Dunn’s test revealed that students that were in  
   
  296  
   
  –  
   
  –  
   
  –  
   
  –  
   
  A. Bey and R. Champagnat  
   
  both SmartLab sessions and Training mode were signiﬁcantly diﬀerent from students that only were in Training mode (p = 0.04), but there was no signiﬁcant diﬀerence between the other groups. Number of correct submissions: The test statistic was H = 1.78, with 2◦ of freedom, and the p-value was > 0.05. Based on this result, we accept the null hypothesis and conclude that there is a no signiﬁcant diﬀerence in the medians of the groups. Number of in-progress submissions: The test statistic was H = 5.07, with 2◦ of freedom, and the p-value was > 0.05. Based on this result, we accept the null hypothesis and conclude that there is a no signiﬁcant diﬀerence in the medians of the groups. Number of submissions with compilation errors: The test statistic was H = 8.5, with 2◦ of freedom, and the p-value was < 0.05. Based on this result, we reject the null hypothesis and conclude that there is a signiﬁcant diﬀerence in the medians of the groups. Post-hoc analysis using the Dunn’s test revealed that students that were in both SmartLab sessions and Training mode were signiﬁcantly diﬀerent from students that only were in Training mode (p = 0.01), but there was no signiﬁcant diﬀerence between the other groups. Number of erroneous submissions: The test statistic was H = 6.35, with 2◦ of freedom, and the p-value was < 0.05. Based on this result, we reject the null hypothesis and conclude that there is a signiﬁcant diﬀerence in the medians of the groups. However, Post-hoc analysis using the Dunn’s test did not reveal any diﬀerence between students’ groups.  
   
  According to this analysis, we found that only the number of submissions and the number of submissions with compilation errors distinguish the group of students that only practice in the training mode from the students’ group that use the smartlab in face-to-face sessions with the teacher and also practice in the training mode. Table 2. Mean and standard deviation of types of submissions according to practicing mode. Session mode  
   
  N Submissions Correct  
   
  SmartLab  
   
  43 16.58(15.35) 2.60(3.35) 2.09(5.07)  
   
  6.41(7.48)  
   
  5.46(6.20)  
   
  Training  
   
  11 17.92(9.49)  
   
  2.30(1.31) 0.92(1.93)  
   
  6.92(5.45)  
   
  7.76(6.90)  
   
  2.62(3.46) 0.12(0.35)  
   
  17.37(10.45)  
   
  12.87(11.25)  
   
  SmartLab+Training 08 33(20.16)  
   
  In-Progress Compil.Error Erroneous  
   
  RQ2: Is there any signiﬁcant diﬀerence in the ﬁnal course score between students in terms of the number of solved exercises? To answer this question, we have compared groups of students according to the number of solved exercises (one, two, or three exercises). The result shows that there is no signiﬁcant diﬀerence between students having solved one exercise (M = 9.48, SD = 2.08 ) and with whom solved two (M = 8.8, SD = 3.28 ) or  
   
  Toward a Smart Tool for Supporting Programming Lab Work  
   
  297  
   
  three (M = 10.75, SD = 3.38 ) exercises in terms of ﬁnal course score (p < 0.05). However, there is a signiﬁcant diﬀerence between students having solved two exercises and who solved three exercises.  
   
  7  
   
  Conclusion and Future Works  
   
  This research resulted in using smart classroom technology in introductory programming lab works. The Smart Lab system was successfully implemented and met its intended goal of providing instructors with speciﬁc, timely, and detailed information about their student’s performance on programming tasks during lab class sessions. The Smart Lab improved the overall eﬀectiveness of the lab session in achieving the learning objectives by facilitating communication between tutors and their students in the lab. This tool allows teachers to understand their students’ programming strategies and compiling behaviors and identify the progress made by each student in solving the programming exercises. In terms of future works, the most important functionality that could be very helpful for both teachers and students is to implement an algorithm to capitalize on recurrent errors made by students. Also, this tool could be extended by adding automated feedback for students about the errors they make and the actions they miss.  
   
  References 1. Becker, B. A., et al.: Compiler error messages considered unhelpful: the landscape of text-based programming error message research. In: 2019 ITiCSE Working Group Reports (ITiCSE-WGR 2019), 15–17 July 2019, Aberdeen, Scotland UK. ACM, New York, NY, USA, p. 34 (2019). https://doi.org/10.1145/3344429.3372508 2. Prieto-Blazquez, J., Herrera-Joancomarti, J., Guerrero-Rolda, A.: A virtual laboratory structure for developing programming labs. Int. J. Emerg. Technol. Learn. (iJET) 4(2009), 47–52 (2009) 3. Di, C., Gang, Z., Juhong, X.: An introduction to the technology of blending-reality smart classroom. In: 2008 International Symposium on Knowledge Acquisition and Modeling, Wuhan, pp. 516–519. IEEE Computer Society (2008) 4. Tissenbaum, M., Slotta, J.D.: A new framework for smart classroom research: codesigning curriculum, research and technology. In: Proceedings of the 9th International Conference on Computer Supported Collaborative Learning, Rhodes, Greece: International Society of the Learning Sciences, pp. 91–93 (2009) 5. Broisin, J., Venant, R., Vidal, P.: Lab4CE: a remote laboratory for computer education. Int. J. Artif. Intell. Educ. 27(1), 154–180 (2017)  
   
  Towards Embodied Wearable Intelligent Tutoring Systems Injila Rasul(B) , Francisco Castro, and Ivon Arroyo University of Massachusetts Amherst, Amherst, USA [email protected]  , {fcastro,ivon}@cs.umass.edu  
   
  Abstract. Embodied cognition posits that human-environment interaction positively impacts thinking and learning, making it a valuable pedagogical tool. Technology in teaching and learning has seen tremendous maturation, such as the development of Intelligent Tutoring Systems (ITS). However, most ITS provide static learning experiences that do not incorporate embodiment, movement, and interaction with the space around the learner. This paper examines the results of using an embodied tutoring system across three case studies with diﬀerent dimensions of embodiment. In all cases, we found trends highlighting how embodied tutoring systems can support learning. We also discuss diﬀerent ways to incorporate embodiment into future research on ITS. Keywords: Embodied Cognition Math  
   
  1  
   
  · Intelligent Tutoring Systems ·  
   
  Introduction and Motivation  
   
  Embodied learning has emerged as a powerful pedagogical approach for mathematics education, with mounting evidence about its essential role in developing and strengthening mathematical thinking skills [2,7,10]. At the core of embodied learning is the notion of embodied cognition, which asserts that knowledge develops from our understanding of the interactions between ourselves, our environment, and elements within the environment. This suggests that incorporating sensorimotor processes in learning activities can strengthen learning through learners’ use of their bodies, reﬂection, and social interaction [7,16]. Intelligent Tutoring Systems (ITS), however, particularly within mathematics education, have traditionally been screen-based (i.e., students use a computer and answer math problems on screen—e.g., MathSpring [4,11]) and do not support learners in engaging in embodied learning practices. As new theories of learning evolve, with more signiﬁcant evidence supporting the incorporation of embodiment, there is also a need for ITS to adapt. For example, ITS that can be accessed through mobile devices, enabling movement and exploration within physical environments, is one way of re-imagining embodied ITS. Developing technologies that support mathematics learning through environments that enable embodied interactions is thus a key area for future development [1,6]. c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 298–306, 2023. https://doi.org/10.1007/978-3-031-32883-1_26  
   
  Towards Embodied Wearable Intelligent Tutoring Systems  
   
  299  
   
  We present three case studies that analyze the eﬀectiveness of embodiment in tutoring systems. We explore diﬀerent kinds of embodied interaction in digital learning environments by comparing traditional tutoring systems with a tutoring system that incorporates embodiment.  
   
  2  
   
  Related Work  
   
  Embodied Cognition and Pedagogy. Embodied cognition is the idea that perception of the environment, and the body’s interactions with elements within it, inﬂuence cognition [2,16]. Embodied learning emphasizes that learning is supported and bolstered when the deep connection between the mind and the body [12] is employed as a pedagogical tool [16]. A key aspect of embodied cognition is spatial cognition, the cognitive process involved in spatial reasoning and problemsolving. Spatial cognition is signiﬁcant to STEM pedagogy because concepts in mathematics and science incorporate ideas from the physical world around us, such as position, direction, relative speed, and spatial perception, among others. Prior research has shown gains in STEM performance when leveraging spatial cognition as a pedagogical tool [14,16], which supports the case for instruction that incorporates spatial cognition, such as visuospatial skills (the ability to recognize visual and spatial relationships among objects [16]), as a means to improve conceptual understanding in STEM education. Making the Abstract Concrete. The potential of embodied learning leads to the question: how can embodiment be incorporated into ITS eﬀectively to support STEM learning? Weisberg and Newcombe [16] presented a framework that outlines mechanisms through which this is possible: (a) linking sensorimotor information with abstract concepts, (b) using gestures as a cognitive tool, (c) developing cognitive skills such as spatial cognition, (d) oﬄoading onto the body/environment to free up cognitive processing, and (e) creating and understanding visual representations. Oﬄoading refers to storing information in the environment/body without further burdening their mental resources, focusing cognitive capacity on problem-solving, inference-making, and communicating ideas [16]. An example is a student oﬄoading a shape’s mental rotation onto a physical object’s rotation to retain a visual representation of its direction and orientation, enabling them to move on to another part of the problem. Creating visual representations is also critical in communicating ideas and seeing the bigger picture while problem-solving. Additionally, analogy-building between sensorimotor and abstract concepts (such as moving along a number line while adding numbers; a number line does not concretely exist in the natural world) and visual representations (i.e., a number line drawn on the ﬂoor) supports the learning of abstract concepts, using the physical world around learners [10,16]. Embodiment as Support for Mathematical Ideas. Tools and manipulatives can illustrate, communicate, and test concepts and serve as testing grounds for emerging mathematical ideas, where the mind can impose mathematical relationships on the objects [15]. According to Walle, there are ﬁve ways to represent mathematical ideas: (1) manipulative models, (2) pictures, (3) real-world  
   
  300  
   
  I. Rasul et al.  
   
  situations, (4) written symbols, and (5) translations between and within representations. These representations help develop new mathematical concepts [15]. Prior research suggests that mathematics learning is embodied, based on perception and action, grounded in the physical environment and that diﬀerent gestures suggest diﬀerent types of thinking [6,10]. Gestures with hands and body, which are “inherently spatial” because they are expressed in the space that a person occupies/perceives [16], become mechanisms through which cognition is communicated and information is encoded [2]. Prior work suggests that gestures are evidence of involvement in mathematical thinking [2] and may be a vital aspect of learning as students work with their peers and around physical objects. Intelligent Tutoring Systems and Embodied Cognition. Given the impact of embodied pedagogy on STEM learning, designing ITS to incorporate embodiment is a good path forward for improving ITS [6,7]. Technology that can support and enhance active learning environments has been studied previously, with increased learning gains compared to control groups [7]. However, most ITS are currently largely screen-based and do not incorporate movement. The ones that do often focus heavily on gesture-based movements rather than engaging the entire body [7]. It is crucial to re-conceptualize how ITS can provide embodied pedagogical support for STEM classrooms.  
   
  3  
   
  The WearableLearning Platform and Embodied Games  
   
  Our team developed WL1 a web-based platform that enables users to play physically active, embodied, educational math games using mobile devices that students carry [3]. Thus, WL games can be situated within physical classrooms and incorporate movement, physical manipulations, and teamwork. Within the WL interface (Fig. 1), students can input answers to question prompts to receive feedback, request hints, and proceed through the game. Students can be organized into multiplayer teams, with each member taking on a speciﬁc role throughout the game, which may be complementary to other team members. 3.1  
   
  WearableLearning Case Studies  
   
  Case 1: WL Games. Three teacher-created games, “Integer Hopscotch”, “Let’s Shop”, and “What’s my Line?”, were played with groups of 49 (6th grade), 84 (7th grade), and 102 (8th grade) students, respectively. These games focused on concepts of integer addition/subtraction operations, price percentage calculations, and graphs. Integer Hopscotch uses word problems on addition/subtraction of integers to prompt students to walk along a 20-foot number line to ﬁnd the correct answer. Let’s Shop uses word problems based on shopping scenarios, where students need to ﬁnd the correct price or discount for shopping items (e.g., tips, ﬁnal sale price, amount of tax, see Fig. 1). Teams calculate the answer and locate it on color-coded cards scattered in the classroom, like a scavenger hunt. What’s 1  
   
  WearableLearning: http://wearablelearning.org/.  
   
  Towards Embodied Wearable Intelligent Tutoring Systems  
   
  301  
   
  Fig. 1. (Top) Tangrams Race: shapes with color combination codes; a student retrieving a piece guided by WL on a phone; a math question in Tangrams Race; students building a Tangrams puzzle with retrieved pieces. (Bottom) Left: Integer Hopscotch; Middle: screenshot of the Let’s Shop game; Right: a What’s my Line? game object.  
   
  My Line? is a slope-equation and graph-matching game that involves the slopeintercept form of equations to challenge students to read and interpret equations. Teams match equations in WL with the corresponding line on a paper graph, with several other lines drawn as distractions (see Fig. 1), at one of seven diﬀerent stations. Students race through all stations to correctly match each equation to its line graph and draw the correct lines. Data Collection. Pre- and post-tests assessed student content knowledge. Students playing Integer Hopscotch were tested on integer addition and subtraction. Students playing Let’s Shop were tested on percentages. Students playing What’s my Line? were tested on equations. Results. For Integer Hopscotch, students improved signiﬁcantly from pre-test (M=.62, SD=.26) to post-test (M=.79 SD=.17), t=6.39, p. The map shows that the expert system synthesizing the explanatory text of recommendations suggests repeating the u7 and u10. Having received the ITS recommendation, the student requests an explanation of the decisions using the query builder (the query block is collapsed on the bottom of Fig. 3 in article [19]). To do this, he enters data into the query template as shown in Fig. 4 in article [19]. It corresponds to the text: Why is the learning unit “Monte Carlo Method” (u10 ) assessed as insuﬃciently mastered by the parameter “Subject Assessment”? Next, the user initiates the execution of the query and receives a new dialogue form, thus developing the dialogue in the direction of the block “Explanation of the decision” shown in Fig. 1. An explanatory text will be synthesized, relying on both the combined parametric map and data from the ITS knowledge base. Its structure will include a block of qualitative assessment of the student’s actions, clariﬁcation and an invitation to further dialogue (only θ and ϑ): The level of mastery of the “Monte Carlo Method” (u10 ) in the subject context is assessed through three assignments (assignment #2 and tests #15 and #17). The grade is 47% per 100%. This grade level is interpreted qualitatively by the ITS as insuﬃciently mastered (the fuzzy logic method is applied, the conﬁdence factor in the answer was equal to 0.86). The explanatory didactic dialogue as a means of increasing the learner’s trust in ITS decisions can be assessed by both the fact of following the system’s recommendations accompanied with their reasoning, and by the degree to which the learner is engaged in communication with the intelligent planner. The student whose data were used to illustrate this approach developed the dialogue in 38% of cases (114 entries in total) while studying the discipline “Simulation Modeling” (in 68% of cases when the dialogue was developed the student interacted with the CMKD). The student followed the ITS recommendations in 78.2% of cases when the dialogue was developed (when the dialogue did not continue, the student followed the recommendations only in 44.5% of the cases). A summary of the results of the experiment with student groups in the Siberian Federal University is given in [20]. Despite the results obtained, we consider them preliminary and there is a need of a larger pedagogical experiment. The explanatory didactic dialogue between a learner and the ITS gives the possibility to change the objects of discussion (cross-cutting approach [18]) and aims to increase the level of trust in the system’s decisions. Our research has shown that such an eﬀect is in general observed and it is consistent with the trends that exist in the ﬁeld of the explanation synthesis [8]. The possibility of combining verbal and non-verbal types of information within a single dialogue form (using the CMKD) plays a particularly positive role. The current areas of our work are collection and generalization of more experimental data.  
   
  Explanatory Didactic Dialogue in the ITS  
   
  379  
   
  References 1. Agarwal, A., Mishra, D.S., Kolekar, S.V.: Knowledge-based recommendation system using semantic web rules based on learning styles for MOOCs. Cogent Eng. 9(1), 2022568 (2022). https://doi.org/10.1080/23311916.2021.2022568 2. Alepis, E., Virvou, M., Kabassi, K.: Development process of an aﬀective bi-modal intelligent tutoring system. Intell. Decis. Technol. 1(3), 117–126 (2007) 3. Arrieta, A.B., et al.: Explainable artiﬁcial intelligence (XAI): concepts, taxonomies, opportunities and challenges toward responsible AI. Inf. Fusion 58, 82–115 (2020) 4. Belnap, N.D., Steel, T.B.: The Logic of Questions and Answers. Yale University Press, London (1976) 5. Du, H., Li, N., Ma, F., Palaoag, T.: Personalization exercise recommendation based on cognitive diagnosis. In: Proceedings of the 6th International Conference on Computer Science and Application Engineering. CSAE 2022, Association for Computing Machinery, New York, NY, USA (2022). https://doi.org/10.1145/3565387. 3565416 6. Gavrilova, T.A., Kokoulina, L.: Using ontology engineering to design an artiﬁcial intelligence course. In: Uskov, V.L., Howlett, R.J., Jain, L.C. (eds.) Smart Education and e-Learning 2019. SIST, vol. 144, pp. 201–207. Springer, Singapore (2019). https://doi.org/10.1007/978-981-13-8260-4 19 7. Gribova, V.V., Ostrovskii, G.E.: An intelligent cloud service for training diagnostics skills. Biomed. Eng. 51(6), 416–421 (2018). https://doi.org/10.1007/s10527-0189761-8 8. Ilves, K., Leinonen, J., Hellas, A.: Supporting self-regulated learning with visualizations in online learning environments. In: Proceedings of the 49th ACM Technical Symposium on Computer Science Education, pp. 257–262. Association for Computing Machinery, New York, USA (2018). https://doi.org/10.1145/3159450. 3159509 9. Karpenko, A., Dobryakov, A.: Model for automated training systems. overview, science and education. Sci. Educ. 7, 1–63 (2011). http://technomag.edu.ru/ﬁle/ out/504730, (in Russian) 10. Kumar, A.N.: The eﬀectiveness of visualization for learning expression evaluation: a reproducibility study. In: Proceedings of the 2016 ACM Conference on Innovation and Technology in Computer Science Education, pp. 192–197. ITiCSE 2016, Association for Computing Machinery, New York, NY, USA (2016). https://doi. org/10.1145/2899415.2899427 11. Mashbitz, E., Andrievskays, V., Komissarova, E.: Dialog in a Tutoring System. Higher school, Kiev (1989). (in Russian) 12. Pospelov, D., Osipov, G.: Applied semiotics. News Artif. Intell. 1, 9–35 (1999). (in Russian) 13. Song, Y.Y., Ying, L.: Decision tree methods: applications for classiﬁcation and prediction. Shanghai Arch. psychiatry 27(2), 130 (2015). https://doi.org/10.11919/j. issn.1002-0829.215044 14. Stefanuk, V.L.: Learning levels in intelligent tutoring systems. IEICE Trans. Inf. Syst. 78(9), 1103–1107 (1995) 15. Sychev, O., Penskoy, N., Anikin, A., Denisov, M., Prokudin, A.: Improving comprehension: intelligent tutoring system explaining the domain rules when students break them. Educ. Sci. 11(11), 719 (2021). https://doi.org/10.3390/ educsci11110719  
   
  380  
   
  V. Uglev  
   
  16. Troussas, C., Krouska, A.: Path-based recommender system for learning activities using knowledge graphs. Information 14(1), 9 (2023) 17. Ugly, V., Zakharin, K., Baryshev, R.: Cognitive maps of knowledge diagnosis as an element of a digital educational footprint and a copyright object. In: Silhavy, R., Silhavy, P., Prokopova, Z. (eds.) CoMeSySo 2020. AISC, vol. 1295, pp. 349–357. Springer, Cham (2020). https://doi.org/10.1007/978-3-030-63319-6 31 18. Uglev, V., Gavrilova, T.: Cross-cutting visual support of decision making for forming personalized learning spaces. In: Krouska, A., Troussas, C., Caro, J. (eds.) Novel and Intelligent Digital Systems: Proceedings of the 2nd International Conference (NiDS 2022). NiDS 2022. Lecture Notes in Networks and Systems, vol. 556, pp. 3–12. Springer, Cham (2022). https://doi.org/10.1007/978-3-031-17601-2 1 19. Uglev, V., Sychev, O.: Synthesizing didactic explanatory texts in intelligent tutoring system based on the information in cognitive maps. In: Frasson, C., et al. (eds.) ITS 2023. LNCS, vol. 13891, pp. 233–246. Springer, Cham (2023) 20. Uglev, V., Sychev, O., Gavrilova, T.: Cross-cutting support of making and explaining decisions in intelligent tutoring systems using cognitive maps of knowledge diagnosis. In: Crossley, S., Popescu, E. (eds.) ITS 2022. Lecture Notes in Computer Science, vol. 13284, pp. 51–64. Springer, Cham (2022). https://doi.org/10. 1007/978-3-031-09680-8 5  
   
  Estimation of Piloting Attention Level Based on the Correlation of Pupil Dilation and EEG Maryam Ghaderi, Hamdi Ben Abdessalem(B) , Maxime Antoine, and Claude Frasson Département d’Informatique et de Recherche Opérationnelle, Université de Montréal, H3C 3J7 Montréal, Canada {maryam.ghaderi,hamdi.ben.abdessalem, maxime.antoine}@umontreal.ca, [email protected]   
   
  Abstract. An aircrew’s behaviour greatly affects aviation safety and efficiency, especially in emergency situations. Considering vision is the primary method by which pilots acquire information, the way in which they distribute their attention greatly influences the amount of information they acquire. The purpose of this study was to examine pilots’ attention levels during a simulated takeoff procedure. In our study, we collected time series data on 136 takeoffs from 13 pilots over nine hours. In this study, we aimed to identify if pupil dilation measured by eye tracking correlates with engagement measured by EEG, especially during critical periods such as engine failures. According to the results, pupil dilation is correlated with EEG activity, suggesting that changes in pupil size indicate changes in engagement. Based on these findings, pupil dilation and EEG can be used together to examine pilot behaviour more comprehensively, since both measures are valid measures of engagement and cognitive workload. Keywords: Attention · Engagement · Pupil dilation · EEG · Workload  
   
  1 Introduction Aircrew member behaviour is crucial for aviation safety and efficient operation, especially during emergencies. It is a critical element for the stable development of the civil aviation industry [1, 2]. In the takeoff phase, pilots are required to perform a series of complex operation procedures and monitor the external environment and specific flight instruments (e.g., altimeter, attitude indicator, engine parameters and speed) and organize it into a cohesive picture for flight management [3]. As a result of this extremely complex task, pilots would be subjected to a great deal of load on the cognitive system [2, 4]. A pilot’s visual-motor skills and capability are impacted by cognitive load, which affects aircraft control accuracy [5]. It is evident that high cognitive load can lead to illusions and misjudgments, so correcting parameter deviations in a timely manner ensures an optimal level of safety [6]. Human activities are affected by attention, a complex cognitive process that limits the ability to focus on and understand everything at the same time [7]. Basically, attention is the ability to focus on and avoid distractions while maintaining an interest in a particular © The Author(s), under exclusive license to Springer Nature Switzerland AG 2023 C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 381–390, 2023. https://doi.org/10.1007/978-3-031-32883-1_35  
   
  382  
   
  M. Ghaderi et al.  
   
  task or idea [8]. In visual information processing activities, the study of human vision is the source of the visual attention mechanism [9]. Pilots’ attention distribution mode greatly impacts the extent to which they acquire information because vision is the most significant channel for information acquisition [2, 10]. An aircraft’s position, motion, and attitude can be accurately and reliably determined by a pilot’s reasonable visual scanning strategy. This information can be used to respond to and prevent spatial disorientation [10]. Conversely, improper allocation of attention resources can result in overlooking or forgetting certain parameters, leading to serious risks to aircraft safety [11, 12]. A reduction in attention to special tasks can have terrible consequences, which makes this especially important. It is advantageous to direct the brain’s attention toward the relevant stimulus, location, or action when it is engaged in attention-demanding tasks. Thus, a hypothesis that this research attempts to answer is whether pupil dilation follows the same pattern as EEG engagement or not. The main goal of this study is to identify if pupil dilation measured by eye tracking correlates with engagement measured by EEG, especially during critical periods such as engine failures and how these findings can be used to train novice pilots. The rest of this article is organized as follows: in Sect. 2 several past articles that studied attention in aviation are summarized. In Sect. 3, we explain the concepts of engagement and attention. In Sect. 4, we describe our methodology, including participants, materials, and procedures. Section 5 presents the data analysis, discussion, and results of this study.  
   
  2 Related Work Recently, researchers are widely using eye movement technologies in their studies about pilots’ attention. They investigated whether the regularity of attention distribution can be objectively reflected by eye movement indicators. Results of [13] show that observing human gaze behaviour can reveal a lot about attention distribution. Another scholar [14], monitored pilots’ attention during different flight phases using eye movement indexes. The authors found that high workload resulted in smaller sweep amplitude, longer fixation duration, and more pupil dilation. Moreover, Authors in [15] studied pilots’ eye fixation during turning maneuvers near intersections by analyzing fixation rate, duration, and dwell time percentage in different AOI [15]. As noted in [16, 17], pilots face challenges in managing their attention during high and low workload situations, which can negatively affect performance and safety.  
   
  3 Attention and Engagement Attention and engagement are related concepts in human behavior and cognition, where attention refers to an individual’s ability to focus on a specific task, information, or object while avoiding distractions. It involves selectively filtering out distractions and directing focus towards a target [18]. Aviation researchers have studied attention and engagement for decades to prevent repetitive aircraft accidents. Engagement refers to being fully absorbed in a task, with characteristics such as motivation, focus, and enjoyment. It is  
   
  Estimation of Piloting Attention Level Based  
   
  383  
   
  more than just enjoyment and can involve withdrawing attention as a way of engaging [19]. Engagement and attention are often interdependent. When people are highly engaged in an activity, they tend to pay close attention, which helps them maintain engagement. Similarly, paying close attention to something can increase engagement and result in a positive experience. These two concepts are interconnected and influence our behaviors and experiences [18, 19]. Various sensors can be used to track participants’ electro-dermal activity, heart rate, eye movements, brain activity, facial expressions, or posture to infer states such as attention, engagement, boredom, flow, frustration, etc. [15]. Electroencephalogram (EEG) signals can be used to extract two mental indices: mental engagement and cognitive load. Several fields, including aviation, robotics, and the military, use these states to dynamically assess changes in the user’s state, since they are closely related to the user’s performance and experience [20, 21]. The engagement index can be calculated directly from EEG signal frequency bands [22]. This is based on three EEG frequency bands, which are: (4–8 Hz), (8–13 Hz) and 13–22 Hz: Engagement = β/(θ + α)  
   
  (1)  
   
  Emotiv headsets measure 14 regions simultaneously, so you can sum the values of all the frequency bands over all the measured regions to get a combined value of the θ, α and β frequency bands. From the EEG signal, an engagement index is calculated every second [22, 23].  
   
  4 Experiments An experiment was conducted aiming to gather pilot CW and PD during a takeoff procedure in an Airbus A320 in real time. It consisted of six different scenarios with varying weather, time, and conditions as well as the possibility of a failure. The first to third scenarios relate to standard takeoff sessions, while scenarios four to six relate to failure sessions. Different scenarios were given to participants to perform the takeoff procedure. In a session, no limits were placed on the number of takeoffs that a participant could take. A pilot monitor and a pilot are required to operate the Airbus A320. In this experiment, the participants served as pilots and the experimenter as pilot monitors. The experiment was conducted at the University of Montreal and with participants from CAE and Bombardier who all signed informed written consent forms. 4.1 Participants Participants from CAE and Bombardier participated in the experiment at the University of Montreal. The study included 13 male subjects (all between 24 and 49 years of age) with an average age of 36 years. It was required that participants work in an industry related to aviation. The 13 participants included 7 pilots with piloting experience, piloting license and A320 piloting experience. The other 6 participants were engineers at Bombardier and CAE who were familiar with most aircraft procedures but without holding a piloting license. For these participants, the minimum and maximum flight hours were 1 h and 3000 h, respectively.  
   
  384  
   
  M. Ghaderi et al.  
   
  4.2 Materials Eye-Tracking Module. Gaze point is the most affordable, research-grade eye tracker on the market, used in the experiment to measure pupil dilation. Eye-tracking is a technique to investigate visual attention, where eye movements such as fixations (stationary phase) and saccades (rapid phase) are measured along with gaze point location to study visual attention [24, 25]. Pupil Dilation. Pupil dilation is a physiological response that can provide information about a person’s level of attention and engagement. When a person is paying attention to a visual stimulus, the dilator muscle contracts, causing the pupil to enlarge. This increase in pupil size is known as pupil dilation. Studies have shown that pupil dilation can be used as a measure of attention and engagement in a variety of contexts [26]. Electroencephalography (EEG). The electroencephalography technique measures and records electrical activity in the brain. An EEG measures electrical signals generated by the brain by placing electrodes on the scalp, which are amplified and recorded. In the traditional EEG analysis method, EEG signals (the brain activity) are divided into the different five wavebands Based on the frequency range, including: • Delta (1–4 Hz), or δ activity is a periodic electromagnetic wave that has a frequency ranging from 1 to 3 Hz and an amplitude between 100 and 200 V. • Theta (4–8 Hz), or θ activity is a periodic electromagnetic wave that has a frequency ranging from 4 to 7 Hz and an amplitude of under 30 μV. When people are under stress or during a period of profound relaxation, these waves are generated. • Alpha (8–13 Hz), or α activity is a type of periodic electromagnetic wave that has a frequency ranging from 8 to 13 Hz and an amplitude between 30 and 50 V. Whenever a person is conscious, relaxed, or at rest, the brain emits waves in the parietal region and the occipital region. • Beta (13–30 Hz), β activity wave is a periodic electromagnetic wave with a frequency between 14 and 30 Hz and an amplitude ranging from 5 to 20 V. During times of thought or sensory stimulation, these waves are especially noticeable. • Gamma (30–60 Hz), or γ activity is a type of periodic electromagnetic wave with a frequency of 31–60 Hz and an amplitude of 5–10 V. γ activity is associated with selective attention, cognition, and perceptual activity. EEG can be used to calculate attention and engagement levels by measuring specific frequency bands such as alpha and beta. Higher levels of beta and lower levels of alpha indicate increased attention, while higher levels of alpha and lower levels of beta indicate decreased attention [27]. It should be noted that the workload is directly gained from the EEG Module. By connecting to the EEG headset, the module is able to measure the cognitive workload of the pilot in real-time. This module is actually part of the NCO software, which is owned by the BMU lab and is specifically designed for this purpose [28].  
   
  Estimation of Piloting Attention Level Based  
   
  385  
   
  4.3 Procedure The experiment environment was comprised of a participant (for each experiment) as the pilot and the experimenter as the pilot monitor. Ethics committee and partners’ approval were obtained for the experiment’s procedure. Participants received a detailed description of the A320 takeoff procedure a week before their experiment to familiarize themselves with the handling characteristics of the joystick, side stick, and pedals used to control the aircraft during takeoff. The experiment included various scenarios with and without failure, such as a rejected takeoff, an engine failure after V1 procedure, and a standard takeoff procedure. The experiment also featured several visual displays, including the navigation display, primary flight display, engine/warning display, system display, and engine display. In order to generate a more cognitive workload for every scenario, participants were not aware of the scenarios beforehand. The experiment was found to be easier for participants with piloting experience compared to those without.  
   
  5 Results and Discussion One of the hypotheses that this research tries to answer is: “Is it possible to measure pilot attention during a takeoff flight?”. Here we show the data output examples of two participants. The first one (Fig. 1) shows the data output of an official A320 pilot with eight years of experience and more than 250 official flight hours during a rejected takeoff. The other figure (Fig. 4) is related to output of a non-licensed pilot for the same scenario. This pilot is an A320 engineer who knows the ins and outs of the A320 and has flown on the simulator with it for testing purposes but is not a licensed pilot. The figures include: 1. The Engagement, Pupil Dilation, and Cognitive Workload of the pilot at a time t 2. Important events, which resulted in a Cognitive Workload increase. The three plots are aligned vertically based on time. Time 05th s is the start of this scenario when the parking brake is released (first vertical line) and 50th s is almost the end of scenario, ECAM action and when the pilot confirms the engine must be turned off (last two vertical lines). As pupil dilation directly relates to someone’s attention and is often used as a physiological measure of cognitive load, attention, and engagement, our main focus will be on the dilation directly and its relation with cognitive workload. As we can see in the Fig. 1, from time zero to 05th s, which is the start of this scenario when the parking brake is released (first vertical line), the workload is low due to the fact that the flight is a regular operation and does not require excessive resources. The pupil dilation is high from the beginning until 15th s, because the plane is about to take off and the participant wants to maintain it in the middle of the runway. There is a medium to high level of engagement during this period of time. This is the first reaction of pilots and shows that attention is triggered before the workload. The workload increased noticeable after a short delay because the brain energy was mobilized. What we see before reaching 15th s, is the peak of workload and we see that the engagement and pupil dilation has been reduced a little and then maintained at a medium to high level.  
   
  386  
   
  M. Ghaderi et al.  
   
  Although there is some peak in workload between 15th and 33th s, in general the workload is low. At the time of peaks in workload (which are mainly a search), we see a decrease in engagement and pupil dilation (20th s after the plane leaves the ground), but shortly thereafter, both engagement and pupil dilation increase as the pilot realizes its normal occurrence. Which means that the pilot has identified the problem, knows what to do and has applied the right task (The pilot is in full control of the problem). Again, at 30th , there is a search and the workload increase again in parallel until th 34 s. There is an engine failure at 34th s. Thus, after the pilot discovered the engine failure at 33th and 34th s (when it was announced by the copilot), there was a considerable workload at first, but it decreased rapidly at 35th , which indicates that the pilot was not surprised, knows the problem and has applied the right task. The pupil dilation changed quickly because of the urgency of the situation, and he knew he was going to need to be very careful. At this time, engagement also increased somewhat, but not too much because as we mentioned, he was a master pilot and had flight under control even during a failure. Again, at 50th s we see a considerable increase of workload which is almost the end of scenario(takeoff), ECAM action and when the pilot confirms the engine must be turned off (last vertical line). The workload increased because it is the end of takeoff and pilot had to think about the next action and to see what to do. Then, as we progressed from 50th to the end of the flight, after making the correct action, when arriving at 52th s, the workload decreased and was low in general since he has done the correct action. In this period, we see that the engagement was medium which means that in pilots mind, he has completed the takeoff and now he is entering to navigate. However, the pupil dilation was high due to his concern for maintaining the plane’s course. We should take into account the fact that participants know that a failure may occur during takeoff. The PD and CW curves show that despite the fact that the workload decreased and increased at different points (each CW increase was due to a specific action the pilot needed to perform), the pilot continued to be engaged even when a failure occurred, which proves that the pilot has identified the problem and knows what to do about it. On the other hand, for the other participant (pilot 5) who was a non-licensed pilot (Fig. 2), everything was completely different. At the beginning of the flight, he has a high workload since it is not a normal operation and will require a lot of energy consumption. He is unfamiliar with the procedure, and this is why the engagement and pupil dilation are low (decreased). In general, even though there are two peaks in workload, we have seen a decrease in workload until the 10th s. This is while both engagement and pupil dilation decreased and maintained a medium level after a sharp increase at around 4th s. Which is not normal because the pilot has decreased the workload and not fully mobilized on the task and the workload is decreased while the attention remains medium to high. From the 10th s to the 26th -s pilot realized that he has to face over steps of tasks that is why workload increased. At this point, the workload is maximum and in parallel, the pilot’s Engagement and pupil dilation increased slowly. This means that the capability of pilot is fully mobilized. The engine failure was announced in Sec 26. Pilots, however, did not realize this before announcing it as we see that the workload increased following the announcement of engine failure. Engagement and pupil dilation increased at first,  
   
  Estimation of Piloting Attention Level Based  
   
  387  
   
  but not much (just a small amount) and then decreased, showing he wasn’t engaged and unsure of what to do. From 35th s to 43th s, the workload increased while both engagement and pupil dilation decreased which is not good and he should be fully attended, because he did not know what to do and looking for what to do. After that, we see a sharp increase in workload ((very high workload)) during the ECAM action period, which is between 43th and 50th s, whereas engagement and pupil dilation are low or medium. Which is again not good and normal. The graph shows that most of the time when the workload is high, engagement is low or average. When the workload is low, engagement is high, but that’s no sign of flight control. When the engagement is increase while the workload is low, means that the pilot has not enough resources and look around to see what to do.  
   
  Fig. 1. Data output of an official A320 pilot with eight years of experience and more than 250 official flight hours.  
   
  388  
   
  M. Ghaderi et al.  
   
  Fig. 2. The data output of a non-licensed pilot (an A320 engineer).  
   
  6 Conclusion In conclusion, this study investigated the relationship between pupil dilation, engagement measured by EEG, and workload in pilots. Pupil dilation is a commonly used physiological measure of cognitive workload and attention, and EEG measures the electrical activity of the brain. The results showed a strong correlation between pupil dilation and engagement measured by EEG, indicating that these two physiological measures are related and follow the same pattern. A positive correlation was also found between pupil dilation and engagement with the workload as measured by EEG, further emphasizing pupil dilation’s usefulness as a cognitive process indicator. Combining both of these physiological measures has been shown to be useful for understanding pilots’ engagement levels and cognitive workload.  
   
  Estimation of Piloting Attention Level Based  
   
  389  
   
  The study’s results have significant implications for aviation safety and pilot training programs. By identifying areas of weakness in pilots’ performance, targeted training programs can be developed to enhance their skills and improve their overall performance. This approach can help reduce the number of accidents caused by human error and ensure the safety of passengers and crew. Additionally, the use of physiological measures such as pupil dilation and EEG to understand engagement and workload in pilots can provide valuable insights into how pilots react to various flight phases and situations. This information can be used to optimize pilot training programs and improve aviation safety and efficiency. Overall, the study’s findings have the potential to make a significant contribution to the field of aviation research and improve air travel safety. Acknowledgments. We acknowledge the support from NSERC-Alliance, CRIAQ, CAE, Bombardier, and BMU for funding this work.  
   
  References 1. Harris, D.: The influence of human factors on operational efficiency. Aircr. Eng. Aerosp. Technol. 78(1), 20–25 (2006). https://doi.org/10.1108/17488840610639645 2. Jin, H., et al.: Study on how expert and novice pilots can distribute their visual attention to improve flight performance. IEEE Access 9, 44757–44769 (2021). https://doi.org/10.1109/ ACCESS.2021.3066880 3. Peißl, S., Wickens, C.D., Baruah, R.: Eye-tracking measures in aviation: a selective literature review. Int. J. Aerosp. Psychol. 28(3–4), 98–112 (2018). https://doi.org/10.1080/24721840. 2018.1514978 4. Lounis, C., Peysakhovich, V., Causse, M.: Visual scanning strategies in the cockpit are modulated by pilots’ expertise: a flight simulator study. PLOS ONE 16(2), e0247061 (2021). https://doi.org/10.1371/journal.pone.0247061 5. Dehais, F., Behrend, J., Peysakhovich, V., Causse, M., Wickens, C.D.: Pilot flying and pilot Monitoring’s aircraft state awareness during goaround execution in aviation: a behavioral and eye tracking study. Int. J. Aerosp. Psychol. 27(1–2), 15–28 (2017). https://doi.org/10.1080/ 10508414.2017.1366269 6. Wei, H., Zhuang, D., Wanyan, X., Wang, Q.: An experimental analysis of situation awareness for cockpit display interface evaluation based on flight simulation. Chin. J. Aeronaut. 26(4), 884–889 (2013). https://doi.org/10.1016/j.cja.2013.04.053 7. www.skybrary.aero, Attention and vigilance 8. Wickens, C.D., McCarley, J.S.: Attention-Situation Awareness (A-SA) Model of Pilot Error. CRC Press (2007) 9. Yang, B., Li, H.: A visual attention model based on eye tracking in 3D scene maps. ISPRS Int. J. Geo-Inf. 10, 664 (2021). https://doi.org/10.3390/ijgi10100664 10. Bałaj, B., et al.: Spatial disorientation cue effects on gaze behaviour in pilots and non-pilots. Cogn. Technol. Work 21(3), 473–486 (2018). https://doi.org/10.1007/s10111-018-0534-7 11. Chen, H.:‘Error analysis of student pilots in the approach phase. Sci. Technol. Inf. 15, 218 and 220, 201. https://doi.org/10.16661/j.cnki.1672-3791.2012.15.175 (in Chinese) 12. Li, G., Lai, W., Sui, X., Li, X., Qu, X., Zhang, T., Li, Y.: Influence of traffic congestion on driver behavior in post-congestion driving. Acc. Anal. Prev. 141, 105508 (2020). https://doi. org/10.1016/j.aap.2020.105508 13. Wanyan, X., Zhuang, D., Wei, H., Song, J.: Pilot attention allocation model based on fuzzy theory. Comput. Math. Appl. 62(7), 2727–2735 (2011)  
   
  390  
   
  M. Ghaderi et al.  
   
  14. Liu, Z.Q., Yuan, X.G., Liu, W., Kang, W.Y., Han, Y.D., Ma, R.: Analysis on eye movement indices based on simulated flight task. China Saf. Sci. J. 16(2), 51–55 and 149 (2006) 15. Zhang, X., Li, G., Xue, H., Zhao, H.: Pilots’ scanning behavior between different airport intersection maneuvers in a simulated taxiing task. IEEE Access 7, 150395–150402 (2019). https://doi.org/10.1109/ACCESS.2019.2947530 16. Ghaderi, M., Ben Abdessalem, H., Frasson, C.: An analysis of mental workload involved in piloting tasks. In: Krouska, A., Troussas, C., Caro, J. (eds.) Novel & Intelligent Digital Systems: Proceedings of the 2nd International Conference (NiDS 2022). NiDS 2022. Lecture Notes in Networks and Systems, vol. 556. Springer, Cham (2023). https://doi.org/10.1007/ 978-3-031-17601-2_21 17. Ghaderi, M., Courtemanche, MA., Ben Abdessalem, H., Nkambou, R., Frasson, C.: Attentional tasks model: a focus group approach. In: Krouska, A., Troussas, C., Caro, J. (eds.) Novel & Intelligent Digital Systems: Proceedings of the 2nd International Conference (NiDS 2022). NiDS 2022. Lecture Notes in Networks and Systems, vol. 556. Springer, Cham (2023) https://doi.org/10.1007/978-3-031-17601-2_29 18. Charles, H.M., Leung, Y.K.: Pilot mental workload: how well do pilots really perform? Ergonomics 49(15), 1581–1596 (2006) 19. Battiste, V., Bortolussi, M.: Transport pilot workload: a comparison of two subjective techniques. Proc. Hum. Factors Soc. Annu. Meet. 32(2), 150–154 (1988). https://doi.org/10.1177/ 154193128803200232 20. Li, Y., Li, X., Ratcliffe, M., Liu, L., Qi, Y., Liu, Q.: A real-time EEG-based BCI system for attention recognition in ubiquitous environment. In: Proceedings of 2011 International Workshop on Ubiquitous Affective Awareness and Intelligent Interaction (UAAII ‘11). ACM, New York, NY, USA, pp. 33–40 (2011). https://doi.org/10.1145/2030092.2030099 21. Liu, N.-H., Chiang, C.-Y., Chu, H.-C.: Recognizing the degree of human attention using EEG signals from mobile sensors. Sensors 13(8), 10273–10286 (2013). https://doi.org/10.3390/ s130810273 22. Kosmyna, N., Morris, C., Sarawgi, U., Maes, P.: AttentivU: a biofeedback system for realtime monitoring and improvement of engagement. In: Extended Abstracts of the 2019 CHI Conference on Human Factors in Computing Systems (CHI EA ‘19), Article VS07, 2 p. ACM, New York, NY, USA (2019). https://doi.org/10.1145/3290607.3311768 23. Carreiras, C., Lourenço, A., Aidos, H., da Silva, H.P., Fred, A.L.N.: Unsupervised analysis of morphological ECG features for attention detection. In: Madani, K., Dourado, A., Rosa, A., Filipe, J., Kacprzyk, J. (eds.) Computational Intelligence. SCI, vol. 613, pp. 437–453. Springer, Cham (2016). https://doi.org/10.1007/978-3-319-23392-5_24 24. Abdelrahman, Y., et al.: Classifying attention types with thermal imaging and eye tracking. Proc. ACM on Interact., Mob., Wearable Ubiquitous Technol. 3(3), 1–27 (2019). https://doi. org/10.1145/3351227 25. Mancas, M., Ferrera, V.P.P., Riche, N., Taylor, J.G.G. (eds.): SSCNS, vol. 10. Springer, New York (2016). https://doi.org/10.1007/978-1-4939-3435-5 26. Jacob, R.J., Nessler, D.: Pupil dilation reveals sympathetic activation during emotional picture viewing. Sci. Rep. 7(1), 7986 (2017) 27. Liu, Y., Perlmutter, S.I.: The functional significance of alpha and beta oscillations in the human brain. Neuropsychopharmacology 43(1), 4–17 (2018) 28. Benlamine, M. S., Chaouachi, M., Frasson, C., Dufresne, A.: Physiology-based recognition of facial micro-expressions using EEG and identification of the relevant sensors by emotion. In: Proceedings of the 3rd International Conference on Physiological Computing Systems, pp. 130–137 (2016). https://doi.org/10.5220/0006002701300137  
   
  Functional Programming of Intelligent Systems Vladymyr Meitus(B)  
   
  and Clara Simon de Blas(B)  
   
  Rey Juan Carlos University, 28933 Mostoles, Madrid, Spain [email protected]  , [email protected]   
   
  Abstract. The paper considers the problem associated with the possibility of functional programming of intelligent systems, which are based on the definition of intelligence as the ability to model the environment around the system in order to use this model to form the specified behavior of the system in this environment. Such behavior is considered as the result of a consistent solution of intermediate tasks, into which the general task is divided, determined by the goal set for the system. In the variant under consideration, the environment model is built on the basis of knowledge collected by the system or obtained from its knowledge base. Separate knowledge has a multi-element representation, making available for the user several tools for solving problems. The options proposed in his paper are: sets of properties, logical and ontological representations of individual components of the environment surrounding the system, and related associations of these components. It should be noted that various variants of logics can be incorporated into the system, including non-classical ones, on which the system builds its conclusions. In addition, the system can use various variants of mathematical structures that are stored in its knowledge base when building a model. When developing an intelligent system, the methods and tools of functional design can be applied as a way to develop a specific system. In this work, this approach is applied on the example of the development of an intelligent military robot that operates in a specific subject area and solves the problem of defending and attacking a specific enemy. Keywords: intelligence · modeling · intelligent system · knowledge representation · intelligent robots  
   
  1 Introduction The problem of building and using intelligent systems today is one of the most urgent, since it is in this direction that a colossal resource for the development of human society is potentially laid. Throughout its history, man has constantly – sometimes faster, sometimes more slowly – learned how the world around him works, and how it can be used. With the advent of smart intelligent systems that allow solving problems, demonstrating intelligent behavior, independently finding and describing new structures in the world around us, creating artistic, musical, literary works, proving theorems, developing intelligent robots, the world around us has changed. And, above all, because the new intelligence that mankind has been looking for for hundreds of years in the Universe, © The Author(s), under exclusive license to Springer Nature Switzerland AG 2023 C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 391–403, 2023. https://doi.org/10.1007/978-3-031-32883-1_36  
   
  392  
   
  V. Meitus and C. S. de Blas  
   
  suddenly began to appear in artificial intelligence systems created by man and entering our lives. Although the field of artificial intelligence has been developing only in the last 70 years, numerous results have been obtained in it, which only confirm the necessity and importance of these studies. And practical application begins to reveal the numerous facets of these studies and their role in shaping the conditions for the existence of modern society [1–4]. It turns out that artificial intelligence can be successfully implemented in numerous processes (production, scientific, cultural, informational) that define modern society. Moreover, the use of intelligent systems changes the nature of these processes, significantly raising their level. Humanity has received a new resource and new opportunities. The study of this general trend in the development of society is not the subject of this work. Therefore, only one problem is considered below: the use of functional programming methods to build systems with some intelligence – intelligent systems. As an example, the development of one of the classes of modern robots, namely, robots with a military purpose, is considered. The general approach to the construction of intelligent systems is based on the definition of intelligence given in [5–8]. The language considered to implement functional programming in this work is Python, as it is one of the most widely used programming languages today and its use continues to grow, due to its simple syntax and that is open source. The approach to the development of such systems assumes that a system can be considered as intelligent if its behavior is determined by properties that are defined as a manifestation of intelligence. And the stronger these properties are manifested, the higher the level of intelligence that the system possesses. But even in the simplest cases, the intellectuality of actions is a necessary condition for the existence, development and use of any field of knowledge, both scientific and technical – industrial, technical, household, research, cultural and educational – for the development and application of systems that use intelligence as the basis of their behavior.  
   
  2 Intelligent systems Intelligence, considered as a property of a subject or system, is determined by the ability using some logic, firstly, to model the subject area (SbA) in which this subject (system) operates, and, secondly, on the basis of this model, to effectively solve the tasks assigned to this subject (system) [5, 6]. A system with intelligence is hereinafter referred to as an intelligent system (IS). There are many different ways of modeling SbA [5, 9, 10], as well as approaches to solving problems in these models. In [6–8] it was proposed to use various logics to describe the tasks themselves, and options for drawing conclusions from the logical description of the problem condition to its solution. In this paper, we consider the problem of applying functional programming representations to the development of IS. In this case, it is necessary to use an approach, which is based on the original definition of intelligence, to the creation of IS. This approach  
   
  Functional Programming of Intelligent Systems  
   
  393  
   
  will serve as the basis for developing a programming representation. It is assumed that the system has a set of organs that allow it to perceive the environment, and on the basis of this perception and the initial knowledge existing in the system, build a model of the environment. This model contains in advance the rules and structures related to the SbA in which it is supposed to use the IS or to customize its actions for the finished system. Unlike universal IS, which allow an independent choice of the method of modeling the environment, in the case under consideration, some forms of the SbA representation are predetermined, and a specific version of the IS is selected based on the information that it can collect. In other words, a certain class of SbA is built for IS, from which the system selects a specific environment, focusing on the information that it collects or that it previously receives from auxiliary sources. This approach narrows the scope of IS, limiting the class of SbA in which the system operates, but increases the level of its efficiency, reducing the time spent on the detailed process of modeling and checking the model’s compliance with the reality in which the system is located. For example, if an IS is the “brain” of a robot, then the conditions characteristic of the environment in which the robot must operate, that is, solve problems, are pre-set in it. Also, the means that the robot can use and which are included in its structure are also associated with this environment. The intelligent robot does not create these tools, but only chooses from what it already has to solve its problems. In this case, the modeling process is divided into two parts. The first is the creation of a knowledge base that contains a description of the possible constituent elements of the simulated SbA, at the level of individual features and logical relationships between them, as well as the impact of these elements on other elements included in the modeled area. The base includes a description of the possible structures included in the SbA that determine the links between the elements of the domain, the assignment of links between the elements and structures. A separate component of the IS knowledge base are mathematical models that can be used in modeling the SbA and solving problems in it. At the same time, it is assumed that at the level of such a model, the internal “skeleton” of the considered SbA and the connections that exist in it can be represented. When an IS enters the SbA, it first orients itself in it, highlighting individual elements and structures based on the collected features, and then turns to its knowledge base (KB), in which it looks for matches with the elements and structures identified by it in the environment. There is a process of recognition and identification of these elements and structures, as a result of which the SbA modeling is performed, which combines the perception of the IS and information from its knowledge base. The process of recognition of the observed components and components of the KB is usually based on the selection of a group of observed features that are compared to a separate component, the formation of a neighborhood of these features that correspond to some generalized image and the search in the KB for a prototype whose features fit into the constructed neighborhood. If there are several such elements, then an extended (multiple) representation of the SbA is constructed, which is refined in the process of interaction between the IS and the SbA. The constructed SbA model further serves as the basis for solving problems that may arise or be put before the IS. It is assumed that when developing an IS, the range of tasks that this system should solve in the SbA is also outlined in advance. Designing a set of tasks to be solved is one of  
   
  394  
   
  V. Meitus and C. S. de Blas  
   
  the common problems that IS solves. It is quite acceptable that the IS performs its actions on the basis of some general principles. But this is the next level of IS construction. For example, in the stories of A. Azimov, the behavior of robots was limited to three general principles that forbade robots from performing certain actions. A simpler variant can be specified under conditions when the range of tasks to be solved is defined for the IS, and the sequence of possible actions of the IS is specified for each task. Such program descriptions are a separate part of the knowledge base, which is associated with the IS. Note that the solution of a specific problem may be associated with a certain sequence of actions, but, at the same time, such a solution may include some general algorithm for analyzing the situation, and only then a specific program of actions associated with this situation. Moreover, the algorithm of behavior may involve the choice of some optimal sequence of actions, which is based on an analysis of the situation. Thus, the functional programming of an IS with this approach is divided into two parts: the first is the functional programming of a set of knowledge and operating with it, which provides modeling of the SbA. And the second part is the functional programming of the operational space of the IS, determined by the possibilities of solving the problems of the IS. Let us now consider the formal representation of each part separately. In the formalization of representations in the future, we will use the concepts of the Python programming language without additional references [11, 12]. In this work, the SbA and the tasks solved in it are considered on the example of the development of an IS that controls a military robot. 2.1 Subject Area Modeling As discussed above, the intellectual behavior of the subject in the SbA is determined by two main factors that form the intellect of the subject interacting with the SbA: firstly, by its ability to model the environment – the SbA in which it is located, and, secondly, by its ability to based on this model to solve problems related to this environment. The work [5] considered the modeling of the SbA based on the knowledge that the subject collects and accumulates, perceiving and analyzing this environment. Currently, there are various approaches to the use of knowledge in systems related to artificial intelligence. An example is different versions of knowledge-based systems [13, 14]. In this work, firstly, knowledge serves as the basis used in the process of modeling the SbA. They build a model in which problems are solved. And, secondly, this knowledge has a rather complex structure that combines various forms – descriptive, functional, logical and ontological – in a single knowledge, which makes it possible to build an SbA model in a representation which focused on multilateral problem solving. This property is characteristic of the intellect of a person who usually evaluates the problem being solved from different angles. The process of forming knowledge about the elements of the SbA is the first intellectual component of the general modeling process, because the subject must, on the basis of this knowledge, recognize the object and link it with the ontology representing the SbA. At the same time, for an object, its links with other objects in the given SbA are indicated. At the same time, it is assumed that the subject in the SbA can single out its separate parts, which are considered as generalized objects of this area, and these parts are also  
   
  Functional Programming of Intelligent Systems  
   
  395  
   
  characterized by a certain knowledge system, including features, connections, ontology. Separate features are associated primarily with the senses of the subject, or are derived from individual tuples or sets of features. A structured list of such features is the first component of knowledge about an object. The second component of knowledge is a logical expression that describes the object in the logic used by the subject to represent objects and to draw his conclusions in the process of solving problems in the SbA. The third component of knowledge about an object from an SbA is a set of connections that exist and are found by the subject in the course of his perception and subsequent analysis of the object. These links define some neighborhood of the object, defining its interaction with other objects of the SbA. Connections and their compositions are a necessary condition for solving problems by the subject. From them, a solution to the problem is compiled, as a path connecting the condition of the problem with the expected result. Finally, the fourth component of knowledge about an object is its ontological description, which assumes that information about individual objects of the SbA exists and is represented in some general catalog of possible objects. Such a catalog contains more detailed information that the subject may not find or obtain using only his senses. For example, a robot can observe individual elements of a tank in the SbA, which allow it to give an external characteristic of the observed object. But he will get a number of other characteristics if he can find the necessary prototype in the knowledge base and determine what type of tank he observes and what are its properties and capabilities, or means of protection. It depends on whether the robot will be able to destroy the tank with the weapons it has. These four components of knowledge give some characteristic of the SbA object that is static in time. But this is not enough for ordinary real conditions, in which, for example, an unmanned vehicle or an aircraft, a robot or an autonomous control complex, a tank, a tractor, which are equipped with a control device and operate in a variable environment, are considered as an object, changing their position and their performance. Therefore, a pure function environment is needed, where stable, consistent, and predictable outcomes are given. Only for the case new data are given, new variable environment must be created. In order to represent possible dynamic changes in knowledge, it is necessary to add at least one more component to them, which includes a set of operators (1 , …, n ), potentially transforming the observed state of a particular object at each moment of time. In other words, operators set the dynamics of the individual components of the object, which the subject must take into account when solving the tasks assigned to him. For example, with the help of an operator, it is possible to describe the movement of a car in the form of a change in a part of the features associated with it or in the neighborhood in the SbA, which is determined by the car object. The fifth, operator component of knowledge allows a more complete representation of the SbA model, reflecting its potential dynamics and, consequently, expanding the range of tasks that an intellectual subject (ISb) can solve. This component can be enriched with the aggregation rules for the set of operators (1 , …, n ). The knowledge collected by the subject is only one part that is related to the general task of modeling the SbA. The second part consists of a body of knowledge containing information about the areas in which the subject can act and the possible components  
   
  396  
   
  V. Meitus and C. S. de Blas  
   
  that these areas consist of. This knowledge contains the accumulated experience that reflects the possible scenarios that a subject may encounter when entering a particular environment (see Fig. 1). For example, a person who is going to visit another country usually first gets acquainted with the rules, traditions, features of his stay in this country, which may differ from the same features of his own place of stay.  
   
  Fig. 1. Representation of model of subject area.  
   
  And if the ISb has to model some environment, then it is desirable that it has preliminary information about what type of environment it may encounter. For example, if a robot has to simulate a forest, then it needs one piece of information, and if it ends up in a desert, in a field, in a city, then another. Of course, one could consider the possibility of the robot independently forming its own idea of the environment. But, firstly, it would take additional time, and in conditions where the environment is not favorable for the robot, it could pose a threat to its existence. Secondly, in order to adapt to different environments in conditions when the necessary information needs to be collected, analyzed and built in different models, a sufficiently high level of intelligence and the ability to restructure one’s perception are required. And this is due to a longer general period of training and adaptation of the robot to the SbA. Therefore, if it is possible to preselect the main environment model from the knowledge base, then this should be used to ensure that the robot is quickly configured for a specific environment. Such a model includes the main elements that ISb can meet under the conditions during consideration, as well as a certain formal organization of these elements at the level of some mathematical structure [5]. And the further modeling process consists in setting up the selected main model, for example, a city, forest, steppe, jungle, desert, mountains, for specific conditions and objects in this main model, detailing this model, with the transition to solving already specific problems. Naturally, the choice of the main model also narrows the class of possible objects that the subject will put into the model based on his perception, and reduces the time required to develop the SbA model. It is assumed that the ISb is located on our planet, but can fall into different climatic zones and at different times of the year, operate in different environments – on the  
   
  Functional Programming of Intelligent Systems  
   
  397  
   
  ground, in the air, under water, and has equipment for perceiving the environment and solving the tasks assigned to the subject. The main advantage of the subject (robot) is in a variety of means of perceiving the environment: the possibility of using a wide range from infrared to ultrasonic, the possibility of sensing the environment in various ways, obtaining information from flying drones and satellites. For example, a drone can be an integral part of a robot, which allows expanding its ability to obtain additional information about the SbA for each specific situation. In other words, such robots can collect information and build SbA models in more detail and perfection than a human does. 2.2 Functional Representation of the Modeling Process Assuming that the robot has already collected data about its environment, transformed it into knowledge about individual objects, and it is given tasks that need to be solved based on this information, the SbA modeling process itself can be considered as the process of constructing and using a function that displays these knowledge into a structural model of the environment surrounding the robot. To formalize the representation of the description of the environment, we use the concepts of the Python programming language. This can be easily generalized to other functional programming languages. In this case, knowledge about the individual components of the SbA and its structures is specified in the form of lists and named dictionaries. At the same time, the dictionaries include names derived from the ontology, which is included in the knowledge and is associated with this area. For an SbA, there is a knowledge base that the robot can use to build knowledge based on its perception. If knowledge about the object is incomplete, for example, it was not possible to fully identify the object based on the collected features, then the model for this object saves the collected information, and the process of knowledge formation is stretched in time. Based on the collected data, the robot can make several assumptions about what the analyzed object is. It may turn out that an exact classification of the object is not needed to solve the problem. The dictionary associated with an individual object (Fig. 2) includes, firstly, information about the position of the object in the SbA and its main characteristics that determine this position. Secondly, possible external links with other, mostly neighboring objects. Thirdly, the proposed structure of the object and possible internal and external subobjects that are combined with this object of the SbA, but allow their independent existence and behavior. Fourth, the possible dynamic characteristics of internal subobjects, reflecting, for example, the movement of internal objects in the structure of the original object. Fifth, a possible assessment of the value of the object, which is given by the robot in relation to the SbA. As a subobject, we consider some structure, which is considered as part of the original object. For example, in the course of military operations, people who take shelter in this building, or observation and firing points with which the building is equipped, or some structures with which the building is supplemented, can be considered as a subobject of a building. The model itself is defined as a multi-layer system of maps, starting with maps that indicate the relative position of objects with varying degrees of their detail in the  
   
  398  
   
  V. Meitus and C. S. de Blas  
   
  Fig. 2. Subject dictionary components  
   
  representation, and ending with maps that show the possible dynamics of SbA objects reflected in the robot’s information. Note that the map can include both a graphical representation of the environment and sets of programs corresponding to the actions that the robot can perform in a particular environment. Finally, the mapping program may include algorithms that determine and optimize the actions that the robot must perform to solve the problem. The set of functions that transform the initial knowledge of the robot into such a system of maps, together with the functions that implement transitions between different layers of maps upon request from the subsystem of the robot that solves the tasks assigned to it, constitutes the functional system of modeling SbA.  
   
  3 Problem Solving The solution of problems by an system is provided, firstly, by knowledge of the SbA in which the system must solve these problems. And, secondly, by structuring methods – dividing the task into parts that are associated with individual parts of the overall solution path. From these parts, a solution is formed, which is determined by the transition from the condition of the problem to its result. During the solution, individual transformations of the condition of the problem or intermediate results of the solution are performed in such a way as to ultimately obtain the desired result. As the intellectual experience of people who solve problems shows, this process can be quite complex, including dozens and hundreds of separate transformation steps. There are, for example, problems in mathematics that a person cannot solve for centuries, although thousands of attempts are made. Examples are Fermat’s Last Theorem (proved only in 1994) or the Riemann Hypothesis. The latter has not yet been resolved. The general way to solve problems for IS is to use inference to move from the condition of the problem to its solution, using the logic specified for the IS. But if the range of tasks is limited and known, then the developer can single out and independently propose  
   
  Functional Programming of Intelligent Systems  
   
  399  
   
  a set of methods for solving such a task. In this case, the result of the decision depends only on specific data. This approach can be used in the development of robots. Besides, other problem resolution strategies, such as non structure decision making, heuristic approaches or unsupervised learning requires a combination of fact based data analysis and highly subjective and even intuitive judgements about aspects of the problem. Therefore, when developing an IS, especially in the form of robotic systems, it is desirable to build it in such a way that, under the conditions of using the given SbA, it would be possible to first formulate the classes of problems that such a system should solve. For example, considering the behavior of a military intelligent robot, we simultaneously assume that it must solve a given range of tasks for which this robot is built. One and the same task can be solved under different specific conditions and with different possibilities of interaction with the enemy. The intelligence of the robot is manifested in the fact that it manages to find a good solution to the task assigned to it for these conditions, when the general nature of the desired solution is known, but adaptation to the specific features of the environment is determined by the intelligence of the robot. This intelligence is manifested in the fact that, based on the general principles and classes of tasks known to the robot, it must select and solve a problem in a specific environment, based on these principles, using the methods of solution and optimization already known to it. In many respects, this approach is determined by the fact that in the conditions of interaction with the enemy, the time for solving the problem is limited by the actions of the enemy. The robot does not have time to look for a variety of original solutions, while simultaneously collecting the necessary information that it lacks, analyzing numerous options for possible solutions, and looking for new options. On the other hand, the conditions for solving a problem always remain incompletely defined. Therefore, it is impossible to put one ready-made solution into the robot’s memory in advance, removing the intellectual component for it. For example, considering a military robot of the simplest structure – an intelligent agent with organs of perception and execution – we can formulate the following tasks. The task of reconnaissance of the situation on the line of contact with the enemy or in his rear, in the face of possible opposition from the enemy; the task of destroying military or technical means, logistics, warehouses, command posts, personnel, in conditions where there are several goals and means of defense against attack; the task of countering offensive and reconnaissance actions of the enemy; the task of protecting personnel and equipment in an attack. These are classes of possible problems that may have different solutions depending on the specific conditions of the SbA. Accordingly, the real range of specific tasks and their solutions that are available to such a robot is much wider. It is important that when solving problems, the robot can use methods and tools that are inaccessible to humans under similar conditions. At the same time, the robot goes through numerous solutions, uses mathematical models and a large amount of memory, which stores the experience of successful solutions. A situation arises, known in modern chess, when a person who owns a computer plus a high-speed computer with a large memory defeats a professional grandmaster. Modern chess experience shows that in order to solve a narrow class of problems, it is always possible to create a computer that, after training in a certain SbA, will solve  
   
  400  
   
  V. Meitus and C. S. de Blas  
   
  these problems in it more efficiently than a person does. A similar situation occurs when playing poker, in which a trained computer beats a human. The learning process that determines the creation of an SbA model is an integral part of the process of developing an intelligent robot. Under certain conditions, tasks can be combined with each other into some common complexes. For example, countering enemy reconnaissance activities can be considered as a task of sequentially solving two subtasks: first, the subtask of recognizing and finding enemy assets used for reconnaissance – radar stations, drones and unmanned devices, and other modern technical reconnaissance equipment. This subtask is a component of the main task of reconnaissance of the enemy. Based on the information collected by the first subtask, the second subtask is solved – the choice of means and the destruction (or incapacitation) of enemy reconnaissance means: disruption or destruction of radar stations with special anti-radar missiles, destruction of drones and drones with missiles or a robot laser, data transmission to other complexes combating enemy reconnaissance assets. This may also include the destruction of command posts for collecting intelligence information with the help of missiles and firepower of the robot. Note that the second subtask can be considered as a component of other classes of problems identified above. 3.1 Functional Programming of Problem Solving The development of an intelligent robot implies the possibility of programming for it the processes of solving problems that the robot must solve in the course of its activity. In particular, such programming can be performed at the functional level. In this case, for each task, its own function is constructed, which transforms the condition of the tasks into some result, considered as a solution to this task. Let’s consider how the functions associated with the above task classes are created. Based on the fact that the robot has built a system of knowledge about the SbA and modeled this area using its knowledge and the modeling method based on this knowledge, any task from the classes of problems considered above is solved as a task of constructing a function that maps the data from the SbA model to the data corresponding to conditions that are determined by the corresponding class of problems. The collection of intelligence information by a robot assumes that using the SbA model it is possible to find the military and technical means of the enemy, which the robot recognized in the SbA. If the model information is presented in the form of a database consisting of named tuples or dictionaries, then we build a function that selects those names that are recognized as enemy assets. At the same time, we bind the found objects to the map of the area. The resulting map is considered as the result of exploration. The second class of tasks is the destruction of control systems, technical means, enemy logistics or means that are installed on the robot and controlled by it, or by other military or technical means, but based on information received by the robot. This task, if solved by the robot, is divided into subtasks: • select those enemy assets that need to be destroyed; • choose their own means, which the robot uses to strike independently or to call stationary means of attack – artillery, missiles, aircraft, drones;  
   
  Functional Programming of Intelligent Systems  
   
  401  
   
  • determine the optimal order of strikes, based on the selected targets; • calculate the order of actions and movements of the robot, providing it with safety. It should be noted that when modeling an SbA on the basis of the information received by the robot, not only the formation of features takes place, but also the recognition of objects to which these features correspond. After recognizing an object, its ontology is formed, with which the assessment of this object is associated in the form of an object weight that characterizes the value of the object. It is assumed that the higher the weight, the higher the need to destroy the object. In addition, as an element of the ontology, the robot can specify the choice of means by which the object can be disabled. After that, a situational graph is built, the vertices of which are the objects that the robot needs to hit, and the directed arcs from the vertex x determine the objects that the robot can hit next. See Fig. 3 for an example of situational graph for a military target.  
   
  Fig. 3. Situational graph for a military target.  
   
  The situational graph is used to construct a behavior graph representing the optimal order in which the robot performs its tasks (see Fig. 4). When constructing this graph, an algorithm is used to select the next object, depending on the weight of the next object and the ability of the robot to reduce the time of the next strike. This possibility depends on the robot control system – capturing a new target, choosing a possible means of destruction, assessing the degree of enemy opposition, and moving on to the analysis of the next object. Note that as separate conditions for constructing a behavior graph, it is necessary to take into account the possibility of moving the robot either to create favorable conditions for the next strike, or to ensure its own safety. The function of constructing a behavior graph – static, in which the robot remains in place while solving its task – delivering successive strikes, or dynamic – in which the position of the robot changes after performing several individual strikes, is the main function used in solving this problem. At the same time, the robot can deliver several  
   
  402  
   
  V. Meitus and C. S. de Blas  
   
  Fig. 4. Behavior graph  
   
  blows to the same target, separated by time intervals, during which the robot performs other actions. The following classes of tasks of countering the enemy and protecting people and military support are built as a combination of applying the solutions that were obtained for the intelligence and attack classes. At this level, both the behavior of an individual robot and the combination of several robots to solve one common task can be considered. In this case, the situational graph is represented as the sum of situational graphs of either individual robots or situational graphs in which several robots act synchronously, inflicting joint strikes on enemy objects. In this case, some generalized robot can be formally considered, consisting of several interconnected robots operating in parallel with each other. The task of functional description is similar to the previous one, with the difference that the number of damaging agents (multiplied by the number of robots included in the association) that such a generalized robot disposes of is increased several times. True, in this case, another problem arises – a generalized robot can be divided into several smaller generalized ones of a smaller size, each of which solves its own separate tasks.  
   
  4 Conclusion An intelligent system is a system that uses intelligence to shape its behavior in its environment. This intelligence is determined by two main factors: the first factor is the ability to model the environment, and the second is the use of this model to successfully solve problems that determine the behavior of the system in the environment. Environment modeling is based on the use of knowledge about the environment and its components. The system collects this knowledge using its sensors and sense organs, as well as the knowledge base, which stores information previously collected or incorporated during the development of the system. In particular, this information may include various forms of mathematical structures that form the basis of the environmental model. When solving problems, previous experience collected in the knowledge base can also be applied, simultaneously with a logical conclusion, based on the logic embedded in the intelligent system during its development. Creating an intelligent system, you can apply functional programming methods. First, by using programming language structures to represent individual knowledge and knowledge bases. Secondly, by developing functions that transform this knowledge  
   
  Functional Programming of Intelligent Systems  
   
  403  
   
  into a representation of the environment model at three possible levels: at the feature level, at the inference level, and at the ontological level. Similarly, problem solving can be represented as a function that transforms the initial knowledge into system actions in the subject area to obtain the required form of representation. At the same time, changes in the system itself are also considered at the functional level. An example is the design of an intelligent military robot, whose task is to protect against an attack by actively influencing the enemy with the help of the means that the robot is equipped with. Note that the approach under consideration is quite universal, applicable in almost any environment.  
   
  References 1. 2. 3. 4. 5. 6. 7. 8. 9. 10. 11. 12. 13. 14.  
   
  Russell, S., Norvig, P.: Artificial Intelligence: A Modern Approach. Pearson (2016) Bostrom, N.: Superintelligence: Paths, Dangers. Oxford University Press, Strategies (2014) Laurier, J.L.: Systems of Artificial Intelligence. Mir, Moscow (1991). (in Russian) Letichevsky, A.: Theory of interaction, insertion modeling, and cognitive architectures. Biol. Inspired Cogn. Architectures 8, 19–32 (2014) Meitus, V.Yu.: Problems of Building Intelligent Systems. Intell. Model. Cyber. Syst. Analysis (4), 3–19 (2021). (in Russian) Meitus, V.Yu.: Problems of building intelligent systems. Representation of knowledge. Cyber. Syst. Analysis (4), 3–14 (2019). (in Russian) Meitus, V.Yu.: Introduction to the Theory of Intelligent Systems. Basic Representations. Palmarium Academic Publishing, Saarbrücken (2015). (in Russian) Meitus, V.Yu.: Problems of building intelligent systems. Levels of intelligence. Cyber. Syst. Analysis (4), 32–44 (2018). (in Russian) Khaikin, S.: Neural Networks: Full Course. Williams, Moscow (2006). (in Russian) Glibovets, M.M., Gulaeva, N.M.: Evolutionary Algorithms: Assistant. NaUKMA, Kyiv (2013). (in Ukrainian) Summerfield, M.: Python in Practice: Create Better Programs Using Concurrency, Libraries, and Patterns. Addison-Wesley (2013) Lutz, M.: Programming Python. O’Reilly Media, Inc. (2010) Smith, R.G.: Knowledge-Based Systems. Concepts, techniques, examples. SchlumbergerDoll Research (1985). http://www.reidgsmith.com Chandrasekaran, B., Johnson, T.R., Smith, J.W.: Task-structure analysis for knowledge modeling. Commun. ACM 35(9), 124–137 (1992)  
   
  Model-Based Support for Collaborative Concept Mapping in Open-ended Domains Junya Morita1(B) , Masaji Kano1 , Shigen Shimojo2 , Yoshimasa Ohmoto1 , and Yugo Hayashi2 1  
   
  2  
   
  Shizuoka University, 3-5-1 Johoku, Naka-ku, Hamamatsu 432-8011, Japan [email protected]  Ristumeikan University, 2-150 Iwakura-cho, Ibaraki, Osaka 567-8570, Japan Abstract. This paper presents a concept of model-based support for collaborative learning using concept mapping, which is a tool for externalizing learners’ knowledge. The proposed support for this activity uses computational modeling of the process of constructing knowledge building. This paper first proposes cognitive models of individual and collaborative concept mapping based on the Adaptive Control of ThoughtRational (ACT-R) cognitive architecture. We then discuss a method for supporting concept mapping in both individual and collaborative learning situations based on the proposed cognitive models. Keywords: Collaboration ACT-R  
   
  1  
   
  · Concept map · Cognitive modeling ·  
   
  Introduction  
   
  Concept mapping is a tool for modeling and externalizing knowledge stored in learners’ internal memory [11,15]. It requires observing internal thought and clarifying and resolving contradictions in understanding. Research on collaborative learning using concept maps has also been conducted [5,14]. As an example, Fig. 1 shows an environment developed in our previous study [9], where pairs of learners who have built their own concept maps (the right panels) in advance also interact through a collaborative concept map (the left panel) to marge their understanding on the topic. This activity facilitates detection of discrepancies in understanding between the learners because the collaborative concept mapping externalizes the learner’s knowledge in an observable manner. For this reason, concept mapping is expected to be a valuable tool for collaborative problem solving, especially for open problems with no ﬁxed solution. Following this background, the present study aims to address the following questions: 1. How can the process of constructing collaborative concept mapping be modeled in a computational system? 2. How can the models thus developed be used to support the creation of collaborative concept mapping between learners? c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 404–411, 2023. https://doi.org/10.1007/978-3-031-32883-1_37  
   
  Model-Based Concept Mapping  
   
  405  
   
  Fig. 1. Example of collaborative concept mapping. The details of the activities are shown in our previous paper [9]  
   
  The challenge of our study is to explore model-based support in an openended domain. In the past, model-based support has usually provided hints to learners solving problems with speciﬁc correct answers, such as programming or mathematics problems (e.g., [3]). In contrast, concept mapping has been applied to activities for which it is hard to deﬁne one correct solution, such as exploring the causes of natural, social, or psychological phenomena [11,15] or summarizing academic papers [9]. In this paper, we describe a cognitive model for constructing concept maps as well as the ideas and challenges of modeling this activity in the Adaptive Control of Thought-Rational (ACT-R) cognitive architecture [2], in particular for realizing interventions based on the computational cognitive model. Before presenting our models and supports, we brieﬂy introduce this cognitive architecture.  
   
  2  
   
  Cognitive Architecture and ACT-R  
   
  The term “architecture” conventionally indicates a blueprint that connects functions and structures as a plan for constructing an artifact (e.g., [4,6]). In other words, it is a medium for creating a model in a top-down manner. Cognitive architecture is a type of software architecture that simulates the functions and structure of human cognition [2]. Among the several commonly studied cognitive architectures, ACT-R is both representative and the most frequently used (see [8] for an extensive review of cognitive architectures). Using ACT-R, a modeler can build a cognitive model that executes a task compatible with human participants by combining modules, as has been veriﬁed by previous psychological studies. To model concept mapping activity, we use ACT-R because it features a declarative module, a rich model of memory that connects memory elements (chunks) as a semantic network. Figure 2 shows examples of chunks modeled in  
   
  406  
   
  J. Morita et al.  
   
  Fig. 2. Examples of chunks.  
   
  ACT-R. Each chunk consists of a chunk name as the ﬁrst element (e.g., machinelearning, supervised-learning, and type1) and the following pairs of attributes and values (e.g., the pair of isa (attribute) and node (value), the pair of label (attribute) and “machine-learning” (value)). Among these, concepts such as machine-learning and supervised-learning are deﬁned as nodes (lines 1–2); these are connected by other chunks such as learning-method (line 6–7). Additionally, chunks in ACT-R are retrieved based on a numerical activation parameter. When several chunks match the retrieval cue, the most activated chunk is retrieved. This parameter is computed as a summation of several components, the main ones being base-level activation and spreading activation. The former is determined by recency and frequency eﬀects (when the chunk was created and how often it is used, respectively). These eﬀects are thought to be related to the personal importance of memory for the individual at the time of processing [1]. In contrast, spreading activation controls memory activation according to the context provided by the external world, such as visual stimuli or goal settings. Thus, we can summarize the mechanism of ACT-R memory theory as the balance of factors driving exploration (spreading activation) and exploitation (base level) in search of a semantic network.  
   
  3  
   
  Cognitive Modeling of Concept Mapping  
   
  To realize model-based support for collaborative concept mapping, we ﬁrst need to consider how such activities are represented in a cognitive architecture like ACT-R. This section presents notions of modeling concept mapping for two situations: individual and collaborative mapping. 3.1  
   
  Cognitive Modeling for Individual Concept Mapping  
   
  As mentioned earlier, concept mapping can be considered as an activity that externalizes knowledge structure stored in a learner’s memory. The declarative module of ACT-R is assumed to represent a concept map directly because ACTR stores memory as a network of chunks. In fact, a tool for representing concept  
   
  Model-Based Concept Mapping  
   
  407  
   
  maps such as in Fig. 1 actually holds an analogous data structure represented as in Fig. 2 (see [9]). In a situation where learners engage in individual concept mapping in a leaning setting, they usually create a novel semantic network connecting existing knowledge elements that have not been explicitly related to each other before. In ACT-R, such a process is modeled by three sequential activities: 1. Input of chunks from a textbook or other source to the model. 2. Retrieval of relevant existing knowledge using input chunks as cues. The activation of chunks governs this process. Thus, memorized chunks with commonalities to the input chunk are activated by spreading activation while prioritizing frequently used recent items (the base-level component). 3. Construction of a new chunk connecting input and retrieved chunks, which is then stored in the declarative module. This follows a standard process of text comprehension that makes situation models [7] and assumes that an idealized concept mapping activity is the externalization of the semantic network in the declarative module, although the granularity of the externalization depends on several factors (e.g., the time of the task, the user interface for the concept mapping tool). 3.2  
   
  Cognitive Modeling for Collaborative Concept Mapping  
   
  As previously mentioned, we essentially do not distinguish between internal (declarative module) and external concept mapping. In this approach, idealized collaborative concept mapping is obtained based on an ACT-R model that merges declarative memories obtained from two learners. However, this merging process can be challenging for learners because of time and technical constraints. Collaborating learners have to integrate their individual concept maps sequentially. This process requires a visual attention mechanism that selects information from the external world. It is natural to assume that the probability of picking speciﬁc visible items varies depending on the learners’ characteristics. To model this individual diﬀerence, we can utilize models of visual saliency developed for ACT-R [12,13]. This mechanism assumes the inﬂuence of low level visual features such as shapes, color, and on-screen locations on intentional process; also, individual diﬀerences of this mechanism come from diﬀerent experiences stored in the declarative module.  
   
  4  
   
  Model-Based Support for Concept Mapping  
   
  So far, we have presented several ideas for modeling concept mapping activity based on ACT-R. This section discusses how this simple model can be used to support learners’ concept mapping activities. We discuss two application settings, each utilizing the above individual and collaborative concept mapping models.  
   
  408  
   
  J. Morita et al.  
   
  Fig. 3. Example of concept mapping modeling hint.  
   
  4.1  
   
  Collaborative Concept Mapping Based on a Cognitive Model of the Learner  
   
  First, we consider a situation where a single learner collaboratively constructs a concept map with their model. To create the learner’s model in ACT-R, we need to deﬁne two main components: chunks in the declarative memory and activation values attached to the chunks. Our approach is to model these components by collecting learning logs for the learner. A modern learning management system (LMS) stores ﬁne-grained learning activities for each user. Chunks described in Fig. 2 can be easily extracted from simple concurrence analysis, leveraging past reports written by the learner. By utilizing such a personalized cognitive model, we can set up a situation where learners construct their concept maps while receiving personalized hints. Such a situation is predicted to reduce mental costs related to externalizing internal knowledge. Figure 3 illustrates creating such a hint. This example assumes that the concept map presented in Fig. 3a was created by a learner who holds declarative knowledge as in Fig. 2. The ACT-R model holding knowledge in this format can provide a hint by retrieving a node indicating “logistic-regression” and utilizing the current concept map as a cue (Fig. 3b). In addition to reducing mental cost, a personalized model can support memory retrieval in terms of explore-exploit balance. As noted in Sect. 2, ACT-R explains memory retrieval as the summation of elements relating exploration (spreading activation) and exploitation (base-level activation). The degree of prioritizing these elements is assumed to be varied between individuals. Therefore, collaboration with the model having diﬀerent tendencies leads well-balanced memory search as presented in the past study [10]. For an over-exploiting learner, collaboration with a model prioritizing spreading activation might generate new insights by relaxing concentrations on already retrieved memory elements. Contrary, for an over-exploring learner, a model with high priority in the base-level component might regulate divergent memory search by presenting important concepts that frequently appear in the text.  
   
  Model-Based Concept Mapping  
   
  4.2  
   
  409  
   
  Cognitive Model for Connecting Learners via Collaborative Concept Mapping  
   
  The support presented in Fig. 3 can also be applied to collaborative concept mapping. It is especially expected to play the role of facilitator in human collaborative concept mapping. In a collaborative situation, the ACT-R model has declarative knowledge constructed from both learners’ learning logs. In a normal learning situation, learners could not directly access such joint knowledge (i.e., as a state of collaborative knowledge). Because of this lack of common ground, learners in collaborative learning tend to suﬀer several conﬂicts or lack of interaction. Our previous study [9] shows examples of such problems. Here, predictions by the cognitive model including the joint knowledge at each step of the task help resolve conﬂicts that have emerged during the open-ended collaborative concept mapping task.  
   
  5  
   
  Summary and Future Studies  
   
  This manuscript has presented models and supports for engaging in collaborative concept mapping. The ideas presented address the questions identiﬁed in the introduction as follows: 1. How can the process of constructing collaborative concept mapping be modeled in a computational system? – By externalizing declarative knowledge within constraints of time, tools, and cognitive tendencies (e.g., “explore” vs. “exploit” approaches). 2. How can the models thus developed be used to support the creation of collaborative concept mapping between learners? – By using nodes and links to build a model holding knowledge extracted from both participants. The authors have already developed some of the system modules described here and have encountered some challenges in realizing the proposed support. In the prototype implementation, the ACT-R model retrieves a chunk by observing the current state of the concept map and then modiﬁes the concept map based on the contents of the retrieved chunk (by either adding a node or connecting two nodes with a link). One of the technical challenges is placing nodes in an appropriate location on the screen. In human concept mapping, the location of nodes is important for representing hierarchical structure or grouping. However, the current implementation of the model does not include such higher-order reasoning but only simple perceptual and memory processes. Therefore, in the future, we need to explore method of including structural aspects of knowledge representation (i.e., placing higher-order concepts on the top of the screen) to elicit deeper insight into the learner’s cognitive process. The other challenge is the timing of interventions. Section 4.1 presents ways in which the ACT-R model collaborates with human learners. At present, however, using the model as an agent substituting for human collaborators is challenging.  
   
  410  
   
  J. Morita et al.  
   
  Reproducing verbal communication, which is a key medium in conventional collaborative learning, is diﬃcult using the ACT-R model alone. Even if we omit verbal communication and arrange for learners to collaborate with a nonverbal online agent, another technical diﬃculty arises: in order to intervene with appropriate timing, human internal processes must be simulated in real time. Although ACT-R possesses a function that estimates human execution time for each action in a task, it is still diﬃcult to represent the complexities of internal processes in this task. We believe these challenges can be met successfully through a recursive process of experiment and modiﬁcation of the system. We need to use recent highspeed technological developments eﬀectively. There are also several practical solutions for the aforementioned challenges (i.e., setting the hint button). In the future, we plan to conduct simulations and experimental studies based on the ideas presented in this paper. Acknowledgements. This work was supported by JSPS KAKENHI Grant Number JP20H04299.  
   
  References 1. Anderson, J.R., Schooler, L.J.: Reflections of the environment in memory. Psychol. Sci. 2(6), 396–408 (1991) 2. Anderson, J.R.: How Can the Human Mind Occur in the Physical Universe? Oxford University Press, Oxford (2007) 3. Anderson, J.R., Boyle, C.F., Reiser, B.J.: Intelligent tutoring systems. Science 228(4698), 456–462 (1985) 4. Bell, C.G., Newell, A.: Computer structures: Readings and examples (1971) 5. Ca˜ nas, A.J., et al.: CmapTools: a knowledge modeling and sharing environment (2004) 6. Ford, N., Richards, M.: Fundamentals of Software Architecture. O’Reilly Media, Sebastopol (2020) 7. Kintsch, W.: Text comprehension, memory, and learning. Am. Psychol. 49(4), 294 (1994) 8. Kotseruba, I., Tsotsos, J.K.: 40 years of cognitive architectures: core cognitive abilities and practical applications. Artif. Intell. Revi. 53(1), 17–94 (2018). https:// doi.org/10.1007/s10462-018-9646-y 9. Morita, J., Ohmoto, Y., Hayashi, Y.: Integrating knowledge in collaborative concept mapping: cases in an online class setting. In: Cristea, A.I., Troussas, C. (eds.) ITS 2021. LNCS, vol. 12677, pp. 99–106. Springer, Cham (2021). https://doi.org/ 10.1007/978-3-030-80421-3 12 10. Morita, J., Pitakchokchai, T., Raj, G.B., Yamamoto, Y., Yuhashi, H., Koguchi, T.: Regulating ruminative web browsing based on the counterbalance modeling approach. Front. Artif. Intell. 5, 1 (2022) 11. Novak, J.D.: Concept mapping: a useful tool for science education. J. Res. Sci. Teach. 27(10), 937–949 (1990) 12. Salvucci, D.D.: An integrated model of eye movements and visual encoding. Cognit. Syst. Res. 1(4), 201–220 (2001)  
   
  Model-Based Concept Mapping  
   
  411  
   
  13. Stewart, T.C., West, R.L.: Cognitive redeployment in ACT-R: salience, vision, and memory. In: The 8th International Conference on Cognitive Modelling, Ann Arbor, MI (2007) 14. Tohyama, S., Miyake, N.: The evaluation of ReCoNote summaries for learnercentered integration. In: 2011 Third International Conference on Intelligent Networking and Collaborative Systems, pp. 855–856. IEEE (2011) 15. White, R., Gunstone, R.: Probing Understanding. The Falmer Press, London (1992)  
   
  Augmented Intelligence in Healthcare Informatics  
   
  CPR Emergency Assistance Through Mixed Reality Communication Manuel Rebol1,2,3(B) , Alexander Steinmaurer1 , Florian Gamillscheg1 , utl1 , Claudia Ranniger3 , Krzysztof Pietroszek2 , Christian G¨ 3 Colton Hood , Adam Rutenberg3 , and Neal Sikka3 1  
   
  3  
   
  Graz University of Technology, Graz, Austria [email protected]  2 American University, Washington, D.C., USA George Washington University, Washington, D.C., USA  
   
  Abstract. We design and evaluate a mixed reality real-time communication system for remote assistance during CPR emergencies. Our system allows an expert to guide a ﬁrst responder, remotely, on how to give ﬁrst aid. RGBD cameras capture a volumetric view of the local scene including the patient, the ﬁrst responder, and the environment. The volumetric capture is augmented onto the remote expert’s view to spatially guide the ﬁrst responder using visual and verbal instructions. We evaluate the mixed reality communication system in a research study in which participants face a simulated emergency. The ﬁrst responder moves the patient to the recovery position and performs chest compressions as well as mouth-to-mask ventilation. Our study compares mixed reality against videoconferencing-based assistance using CPR performance measures, cognitive workload surveys, and semi-structured interviews. We ﬁnd that more visual communication including gestures and objects is used by the remote expert when assisting in mixed reality compared to videoconferencing. Moreover, the performance and the workload for the ﬁrst responder during simulation does not diﬀer signiﬁcantly between the two technologies.  
   
  Keywords: Mixed Reality  
   
  1  
   
  · CPR · Remote collaboration  
   
  Introduction  
   
  In recent years interest and popularity in Augmented Reality (AR) devices have increased drastically and have attracted the attention of the research world and consumers alike [8]. AR has many possible applications that range from entertainment and education to design and manufacturing [8,21,28]. AR can be described as a technique that augments the real world with virtual computergenerated information or content with which the user is able to interact [4,8]. As opposed to Virtual Reality (VR) approaches, where users are fully immersed in the virtual environment and have no connection to the real world, AR tries c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 415–429, 2023. https://doi.org/10.1007/978-3-031-32883-1_38  
   
  416  
   
  M. Rebol et al.  
   
  Fig. 1. First aid assistance through mixed reality. The instructor (b) points at a 3D holographic model that demonstrates the recovery position (a) in the augmented ﬁeld of view of the ﬁrst responder. The instructor uses a 3D holographic hand model (c) for guidance when giving chest compressions to the patient.  
   
  to superimpose virtual objects upon the user’s surroundings [8]. AR technology is not restricted to head-mounted displays (HMD) but is also used in handheld devices like smartphones and tablets [4]. The virtual objects that are embedded in the real world provide information to the user, which can help in performing tasks, such as by helping workers through the electrical wire system of an aircraft [8,27]. In the past few years AR has progressed immensely and more and more AR applications and devices have entered the market. In medicine, AR technology has enormous potential, where HMDs are for example an essential tool in computer-aided surgery (CAS) [6]. In this ﬁeld, AR can provide useful information to surgeons in a less distracting manner, compared to information on a monitor [6]. In addition to surgical settings, AR has been used in endoscopic procedures [26], needle puncture procedures [22] and in training for complex surgical procedures [12]. Aside from practical applications, AR has gained a lot of attention in the ﬁeld of medical education like anatomy, where teaching methods have not changed signiﬁcantly over the last century. [13]. In the medical ﬁeld, learning predominantly involves workplace training, which is time-consuming, not very cost-eﬃcient, and comes with some risk [21]. AR can oﬀer a safer learning environment, where concepts can be practiced without the fear of making errors [21]. One area where proper training is particularly important is cardiopulmonary resuscitation (CPR) [9]. Cardiac arrest is a signiﬁcant public health problem, with approximately 350,000 people per year in the US and Canada alone receiving CPR [36]. Well-executed and timely CPR has a signiﬁcant impact on survival and neurological outcome, which is why in 2011 the American Heart Association (AHA) published a recommendation for mandatory CPR training starting at school-age [9,10]. However, multiple studies have shown that even when carried out by healthcare professionals, CPR quality is often poor [1,16]. With its visual feedback, AR technology can be a valuable tool for guiding responders.  
   
  CPR Emergency Assistance Through Mixed Reality Communication  
   
  417  
   
  In this research project, we introduce a mixed reality system, where the user is guided by a remote expert in performing ﬁrst aid (Fig. 1). Our RGBD cameras allow for three-dimensional visual information that helps the user through the steps. Within this project, we conducted an evaluation with 30 participants separated into two groups. Both groups were given the same tasks. They had to give ﬁrst aid to a lifeless person, bring the person into the recovery position and start with CPR after the person stopped breathing. We compared instruction via the mixed reality (MR) approach (group A) with video-based communication (group B). We analyzed objective metrics of CPR quality recorded by the CPR mannequin, and data from users including workload surveys and interviews. We conclude our main contributions as follows: 1. We introduce an MR communication system designed for remote ﬁrst aid assistance. 2. We conducted a comparison between MR communication technology and video-based communication. 3. The project team measured workload and performance when giving assisted ﬁrst aid in MR and videoconferencing. The paper is structured as follows: Sect. 2 gives an overview of past research of Extended Reality (XR) applications for ﬁrst aid assistance. In Sect. 3, we discuss the design of the MR communication system, focusing on the diﬀerent views and their interaction with each other and the devices and software that were used. We evaluate the presented MR communication system in a research study described in Sect. 4. After introducing the study procedure, we present and discuss the results that were obtained. In the end, we summarize the work and give an outlook on future work.  
   
  2  
   
  Related Work  
   
  Extended Reality (XR) [32] has been a valuable communication tool especially in medicine. In medical education, AR-supported instructions assist students in demanding tasks by oﬀering a realistic learning environment in which they can develop their theoretical knowledge through didactics, as well as improve their practical skills through interactive simulation [11,35]. In the ﬁeld of telemedicine, a ﬁeld that uses communication technology to diagnose and treat patients remotely, AR has developed great potential. Wang et al. [37] developed a telemedicine mentoring application using Microsoft’s HoloLens. Their application allows remote experts to guide trainees through complex medical situations with hand gestures that were then displayed in the AR environment of the trainee. Their study, which examined the usability in a trauma setting revealed that their AR setup was regarded as more immersive than other telemedicine approaches. Similarly, Lin et al. [25] used AR in a surgical setting in combination with a Microsoft HoloLens. Their study, which used a lower-leg fasciotomy as a training task, revealed that participants that used the headset received a higher performance score and reported higher usability. In surgical settings, AR allows  
   
  418  
   
  M. Rebol et al.  
   
  surgeons to better concentrate on the operating ﬁeld in comparison to traditional telemedical approaches, where surgeons are often forced to shift their focus to screens for receiving assistance from an expert, which can result in more errors [2]. Andersen et al. [2] used a diﬀerent approach, which features a tablet PC that is located between the local surgeon and the patient. The tablet captures live video that is sent to the remote expert. The remote expert can then annotate the video with graphical information, which is then sent back to the local surgeon’s screen. The user study found that participants that used the AR approach completed the tasks with higher accuracy and less distractions. Besides surgical settings, XR technology has been also used for consultation purposes. Anton et al. [3] used a combination of AR and VR devices to build a telemedicine system for remote consultations. Their setup consists of an AR client, that captures 3D surface information of the environment, which is then transmitted to the remote expert via a communication module, which enables peer-to-peer connection. On the physician side, the VR client receives the streamed data and is responsible for the rendering on a 3D display, which allows the physician to examine the information and interact with it. In the ﬁeld of postoperative care, Ponce et al. [29] used AR on mobile devices in their study to let physicians virtually examine the patient over a long distance. Their application allows users to interact with each other via mobile devices e.g. with visual annotations on the patient’s screen. Their user study revealed that the 96% of the patients regarded the setup as useful, while physicians were slightly less satisﬁed with 89.6% of them expressing that the application was useful. 2.1  
   
  Extended Reality for First Aid Assistance  
   
  Multiple studies have demonstrated the potential of extended reality for assisting users in ﬁrst aid. Already in 1997 Zajtchuk and Satava [38] pointed out the potential of VR for medical education. Kuyt et al. [23] included 42 articles in their review on the evolution of XR approaches for CPR training. Their study indicated that the number of both VR and AR applications for resuscitation training is rapidly growing. Due to the high rise of AR-related CPR publications and advancements in technology in recent years, the proportion of AR-related articles is expected to rise in the future. The study concludes that XR shows great potential for CPR training environments, which will likely result in innovations and novel applications. As an example, Girau1 et al. [17] proposed a VR-based training application for ﬁrst aid, using an HTC Vive headset and a real mannequin to provide haptic feedback. Similarly, Blome et al. [7] also described a VR setup that uses a non-verbal approach for teaching and practicing reanimation. In contrast to VR, where users are fully immersed in their virtual environment, AR shifts the focus of the user’s interaction to the real world [5]. It follows that AR applications can represent tasks in the real world more realistically than their VR-based counterparts. Some studies have already shown the potential of AR in medical education and ﬁrst aid assistance. Fromm et al. [14] developed a concept for an AR application that teaches users ﬁrst aid. The study revealed that an AR application would help users in emergency situations  
   
  CPR Emergency Assistance Through Mixed Reality Communication  
   
  419  
   
  in an intuitive and quick matter. Johnson et al. [20] used Microsoft’s HoloLens for building HoloCPR, an AR application that provides real-time instructions for CPR. The subsequent evaluation revealed how the use of such devices can result in a better reaction time and improved accuracy. Frøland et al. [15] also used Microsoft HoloLens for developing a training environment for trauma ﬁrst aid. In their study, they simulated an emergency, where a patient suﬀers from severe bleeding that had to be stopped by the participants.  
   
  3  
   
  Designing Mixed Reality Communication for First Aid Assistance  
   
  We designed the mixed reality (MR) communication system in consultation with a ﬁrst aid instructor. The domain expert described the information required to understand the emergency situation. Moreover, the domain expert suggested how visual communication can be supported using virtual objects. The detailed system design approach and implementation details approach were described in [33] and [34], respectively.  
   
  Fig. 2. MR system components. The ﬁrst responder’s scene (right) is captured using RGBD cameras (green) and sent over to the remote expert (left). The remote expert uses the 3D information to guide the ﬁrst responder using head-mounted displays (red). Computers (purple) handle the network communication and rendering. (Color ﬁgure online)  
   
  3.1  
   
  Augmented Views  
   
  Both the expert and the ﬁrst responder wear the Microsoft Hololens 2 headmounted display (HMD) to communicate. In addition, to the view, the HMD  
   
  420  
   
  M. Rebol et al.  
   
  oﬀers head and hand tracking. Head tracking is needed to anchor augmented objects in the physical environment. Thus, alignment between the views and visual interaction on a shared view is possible. Hand tracking allows for gesture communication between the users of the system. Remote Expert. The remote expert’s view is dominated by a mesh view of the local ﬁrst responder’s scene. The view is captured by Microsoft Azure Kinect RGBD cameras at the local scene. The remote expert can switch between two diﬀerent RGBD cameras to get a volumetric view of the local scene. The RGBD cameras are positioned such that they capture the patient, the ﬁrst responder, and the environment. In future versions of the system, the HMD-included camera can be used to capture the local scene instead of the separate RGBD camera. We used a separate Azure Kinect camera because the current Microsoft Hololens depth sensor does not provide suﬃcient quality. In addition to the mesh view, the remote expert is presented with an augmented video feed from the local scene. The 1920 × 1080 video feed provides the remote expert with a high-quality view of the local scene including details the mesh view misses because of limitations of the time-of-ﬂight technology. Besides the views of the local scene, the remote expert sees augmented objects which they can use to visually guide the ﬁrst responder. The remote expert can manipulate the objects, i.e. resize, rotate, move, using gestures. First Responder. The ﬁrst responder’s view is dominated by the physical environment. The augmented information for the ﬁrst responder is kept to a minimum such that they can focus on the emergency. The augmented information for the ﬁrst responder consists of augmented objects, the expert’s augmented hands, and a video feed showing the remote expert. The ﬁrst responder’s MR communication role is passive. They see augmented objects and screens but do not actively manipulate them. 3.2  
   
  Interaction  
   
  The remote expert and the ﬁrst responder can verbally communicate using audio. Moreover, the mixed reality system supports visual communication using gestures and case-speciﬁc augmented objects. For ﬁrst aid, we provide a 3D holographic model that demonstrates the rescue position, hands illustrating the chest compression position, and an object to show the depth of the chest compressions. Only the remote expert actively manipulates augmented objects and screens in MR using gestures. The ﬁrst responder manipulates the physical environment. We show the devices used given the research study setup in Fig. 2.  
   
  4  
   
  Research Study  
   
  We evaluated the proposed MR system in a research study in which we compare it against videoconferencing-based communication. Our research focused  
   
  CPR Emergency Assistance Through Mixed Reality Communication  
   
  421  
   
  on understanding how MR communication can be used in medical emergencies. We measured the workload between video-only and MR assistance and analyzed how it diﬀers. Moreover, we were interested in whether higher performance can be achieved when using MR for emergency assistance compared to video-only communication in the context of ﬁrst aid/CPR.  
   
  Fig. 3. CPR assistance through videoconferencing. A remote expert (left) guides the ﬁrst responder (right) through the emergency using video communication.  
   
  4.1  
   
  Study Design  
   
  Subjects. Altogether, 30 participants were recruited as ﬁrst responders. The study participants did not receive information about the content of the training prior to arrival at the test site, to prevent preparation and more closely simulate an unexpected emergency. Informed consent was obtained, and subjects were randomized to either test condition. All training sessions were conducted by a single expert who has over 10 years professional experience in ﬁrst aid training. Room Setup. Expert and ﬁrst responder were placed in separate rooms to ensure that all communications occurred through the speciﬁed modality; room setup remained otherwise static for both conditions. Each room contained a patient actor who simulated an unconscious but still breathing patient, a CPR mannequin (Laerdal Little Anne QCPR mannequin) capable of measuring metrics of CPR quality that are aligned with AHA guidelines [24], and a mask for ventilation. We show the MR setup in Fig. 2, and videoconference setup (Cisco Webex) in Fig. 3. First Aid Training. We illustrate the four main steps actively performed by the ﬁrst responder in Fig. 4. The responder ﬁrst assessed the patient actor to determine that they were unconscious but breathing, and placed the patient in the recovery position. The responder then continued to monitor the patient’s breathing. After a deﬁned period the patient actor held their breath to simulate cardiac arrest, at which time a CPR mannequin replaced the patient. The responder then  
   
  422  
   
  M. Rebol et al.  
   
  provided chest compressions and mouth-to-mask ventilation. In total each participant was instructed to give CPR for 4 min. Metrics of CPR quality such as rate and depth of compression were recorded from the mannequin during this time. Surveys. At the conclusion of the simulation, participants completed a demographic survey, the NASA Task Load Index (NASA-TLX) [19] and the Simulation Task Load Index (SIM-TLX) [18], both metrics of cognitive workload. Finally, the MR group also completed an MR-speciﬁc questionnaire. The expert instructor completed NASA- and SIM-TLX once after completing the training.  
   
  (a) Recovery position (b) Breathing check (c) Chest compres.  
   
  (d) Ventilation  
   
  Fig. 4. First aid steps. We present the 4 main steps of the ﬁrst aid simulation. The ﬁrst responder performs steps (a) and (b) on a patient actor and steps (c) and (d) on a CPR mannequin.  
   
  4.2  
   
  Results and Discussion  
   
  Subject Demographics. We illustrate the ﬁrst responder demographics in Table 1. Table 1. First responder demographics and prior experience. Video Age  
   
  MR  
   
  23(7) y 23(4) y  
   
  Male/Female  
   
  11/4  
   
  11/4  
   
  Nr of prior ﬁrst aid exposures  
   
  5(9)  
   
  4(6)  
   
  0  
   
  0  
   
  Nr of prior MR experiences  
   
  CPR Performance. Data for 25 learners (13 video and 12 MR) was included; 5 data samples were removed due to mannequin malfunction. There was no significant diﬀerence in CPR performance when comparing video and MR conditions for any CPR performance category (2 sample, 2 tailed t test with signiﬁcance of α = 0.05). The data is presented in Table 2.  
   
  CPR Emergency Assistance Through Mixed Reality Communication  
   
  423  
   
  Table 2. CPR mannequin data. Mean (¯ x) and standard deviation (σ) for mannequinderived CPR performance metrics, in Video and MR. The last column compares the two groups by presenting the p-value of a Student’s t-test. Video x ¯ σ  
   
  x ¯  
   
  MR σ  
   
  T-test p-val.  
   
  Category  
   
  Measurement [unit]  
   
  Overall  
   
  Score [%] Flow Fraction [%]  
   
  59% 20% 56% 23% 60% 6% 60% 10%  
   
  0.76 0.97  
   
  Transition  
   
  Heart Lung  
   
  33 1.0  
   
  5 0.7  
   
  34 1.3  
   
  8 0.9  
   
  0.74 0.31  
   
  Compress.  
   
  Compression Score [%] Number of Compressions [n] Avg (n/min) Correct Release [%] Correct Depth Rate [%] Compr. w/ adeq. speed [%]  
   
  82% 253 109 92% 96% 42%  
   
  17% 33 17 17% 8% 36%  
   
  68% 266 114 80% 94% 44%  
   
  19% 40 18 28% 12% 40%  
   
  0.07 0.41 0.48 0.22 0.66 0.87  
   
  48% 31% 55% 25% 7 4 10 6 99% 5% 99% 3% 1% 5% 1% 3%  
   
  0.53 0.23 0.99 0.99  
   
  Ventilation Score [%] Number of ventilations [n] Ventilation Adequate ventiliation [%] Hyperventilation [%]  
   
  Workload. We illustrate the overall results of both workload surveys, NASATLX and SIM-TLX, for ﬁrst responders and the expert in Table 3. The expert reported a lower overall workload for both surveys when using the MR technology compared to videoconferencing. The ﬁrst responders reported similar workload between the two technologies. A two-sample two-tailed t-test was not able to show a signiﬁcant diﬀerence (α = 0.05) between the groups. The mean overall workload is similar when comparing the two technologies. We present the per-category workload results for ﬁrst responders in Fig. 5 to give a more in-depth insight. The physical demand was the highest during the ﬁrst aid emergency. We posit that this is related to the physical exertion during chest compressions. The SIM-TLX signals three interesting trends. The video-assisted ﬁrst responders reported higher frustration but lower distraction and perceptual strain than the MR communications group. We propose that the higher frustration with video results from two factors. First, instructions involving physical space must be communicated via 2D video and voice, which must then be translated into actions, rather than by using virtual objects to provide visual demonstration of the necessary action. Secondly, the ﬁrst responders must switch gaze from the task at hand to the video, in order to compare their own progress with the instructor’s directions. In MR, visual communication is more similar to in-person because the views are aligned, and pointing gestures and augmented object demonstrations can be used. The higher perceptual strain reported by the MR group may also be due to the relative increase in visual information presented to and processed by the learner in the MR mode. Higher  
   
  424  
   
  M. Rebol et al.  
   
  Fig. 5. First responder workload per category. We compare the NASA-TLX score (top) and the SIM-TLX score (bottom) presented as mean and (standard deviation) of the ﬁrst responder when getting assistance through video (solid) and mixed reality (line pattern). Table 3. NASA-TLX and SIM-TLX workload presented as mean and (standard deviation) for ﬁrst responders and the expert during ﬁrst aid emergency simulations using videoconferencing and MR technology. NASA-TLX Video MR  
   
  SIM-TLX Video MR  
   
  First responder 51(12) 49(14) 39(15) 42(17) Expert  
   
  49  
   
  35  
   
  39  
   
  30  
   
  distraction ratings in the MR group may result from the limited ﬁeld of view (FOV) of the Hololens 2 headset, and the need to locate or track instructor input outside the FOV. We argue that this can be improved by only showing them the remote hands when necessary, for example when the remote expert decides to point or gesture actively. Mixed Reality Survey. The ﬁrst responders noted in the open-ended questions that they especially liked the gestural communication including pointing by the remote expert. They highlighted the importance of visual communication in stressful situations. When asked about problems with the MR system, some participants noted that the visual instructions were not always given at the best position such that  
   
  CPR Emergency Assistance Through Mixed Reality Communication  
   
  425  
   
  they had to look around to see the augmented instructions. When asked about what they liked about the experience, the expert reported: “I really liked the possibility to have additional holograms illustrating hand positions or rescue positions. This helped to provide faster help and spend less time with instructions. Additionally, the diﬀerent camera perspectives were great for evaluating the quality of the CPR (chest compressions and ventilation).” The negative aspects were: “The initial setup of the 2D and 3D areas was sometimes a bit cumbersome. When moving the cube (a handle for moving the location of the visual feeds) the area did not move adequately. Sometimes the connection got lost due to some reason but restarting the system was not a big deal.” The expert was also asked about features that could be added: “Some participants complained that audio and visual instructions can be a bit overwhelming. Therefore, a visual way to show the frequency of chest compressions would be great. Especially for the rescue position, a 3D object with movable joints (knee, arm, etc.) would be helpful to show how to bring a person to the rescue position (instead of an object of the already correct position).” Discussion. Although the application of MR devices seem to be futuristic within the context of emergency situations, it enables interesting perspectives. Many countries have successfully implemented guided ﬁrst aid instructions over an emergency call. A (3D) video channel could provide additional information to the emergency call center regarding the set measures and their quality. Although the MR and video groups did not diﬀer signiﬁcantly in terms of CPR performance in this study, use of MR with truly novice ﬁrst responders may be more beneﬁcial during complex maneuvers, for instance to evaluate and demonstrate head tilt-chin lift for ventilation. Similar to AEDs, which are usually close by to an emergency situation in urban areas, MR devices could be co-located with them to initiate an emergency call or request for additional support from the emergency call center. Analyzing the combined performance and workload results, we conclude that the technology is well suited for emergencies because the usage is intuitive. The remote expert only required brief guidance on how the MR technology works. Furthermore, the ﬁrst responders put on their HMD only about 30 s before the actual simulation started. Moreover, assuming that the technology has a learning curve, better MR results can be expected after using the technology longer or more frequently. Broader Impact. MR technologies are used for communication across industries. Since ﬁrst aid emergencies are stressful and complex procedures, we believe that the technology can not only be used for other medical procedures including medical training, but also across domains. An example could be remote repair emergencies where a local operator needs to receive guidance from a remote expert to complete the task as quickly and accurately as possible. Similar to giving CPR, spatial information and visual communication including pointing, gestures, and augmented objects seem invaluable.  
   
  426  
   
  4.3  
   
  M. Rebol et al.  
   
  Limitation  
   
  One of the main concerns of this research study is its feasibility for deployment in real-life emergency situations. However, due to the rapid development and spread of AR technologies such devices and application areas are increasing. We believe that as HMDs become lighter and slimmer, sooner than later people will wear MR devices in their everyday lives. Thus, what now seems futuristic, will become relevant in the near future. The current setup requires some time and experience to be installed. In emergency situations this is not possible. However, the setup can be faster and require fewer devices as technology progresses. For example, instead of Azure Kinect RGBD cameras, the Hololens 2 integrated RGBD cameras could be used to transmit spatial information to the remote expert. This would make the system more portable and easy to deploy in emergencies. Similarly, communication computers can be replaced by handheld phones or better HMD-integrated hardware. The current research study was conducted on a local network. However, the MR system was designed for remote data transfer over the internet. Especially, given recent 5G developments, bandwidth and latency deﬁciencies have already been resolved in many parts of the world. The limitation of low 3D mesh quality when the system is used outdoors because of the interference of natural infrared light with the time of ﬂight sensor technology can be tackled by using prerecorded volumetric information. Moreover, machine learning can be used to ﬁll in missing information and provide the remote expert with a higher-quality 3D mesh view.  
   
  5  
   
  Conclusion  
   
  We presented the design and the evaluation of a mixed reality (MR) communication system for ﬁrst aid. The system allows a remote expert to guide a local ﬁrst responder through giving ﬁrst aid. Compared to help over phone and videoconferencing, the MR system allows for augmented visual instructions such as gestures, annotations, and object demonstrations. Moreover, the remote instructor is presented with a volumetric view which gives them spatial information, important for various medical procedures. We evaluated the MR system in a research study in which we compared MR against videoconferencing. We found that overall, the results including objective CPR mannequin performance and subjective workload measures remains similar between the technologies. We identiﬁed many new opportunities that MR oﬀers for an expert to visually guide a ﬁrst responder. The results show that visual guides do help ﬁrst responders. In future work, we will analyze how MR can be used for other medical procedures. Moreover, we are interested in combining prerecorded procedural guidance including avatars [30,31] for the local operator with active help from the remote expert in problematic situations. This would standardize the process and allow the remote expert to save energy by reducing repetitive instructing and  
   
  CPR Emergency Assistance Through Mixed Reality Communication  
   
  427  
   
  only intervene in critical situations, when the ﬁrst responder needs additional guidance. Acknowledgements. The work is supported by National Science Foundation grant no. 2026505 and 2026568.  
   
  References 1. Abella, B., et al.: Quality of cardiopulmonary resuscitation during in-hospital cardiac arrest. J. Am. Med. Assoc. 293, 305–310 (2005) 2. Andersen, D., et al.: An augmented reality-based approach for surgical telementoring in austere environments. Mil. Med. 182, 310–315 (2017) 3. Anton, D., Kurillo, G., Yang, A.Y., Bajcsy, R.: Augmented telemedicine platform for real-time remote medical consultation. In: Amsaleg, L., Guðmundsson, G.Þ, Gurrin, C., J´ onsson, B.Þ, Satoh, S. (eds.) MMM 2017. LNCS, vol. 10132, pp. 77– 89. Springer, Cham (2017). https://doi.org/10.1007/978-3-319-51811-4 7 4. Azuma, R., Baillot, Y., Behringer, R., Feiner, S., Julier, S., MacIntyre, B.: Recent advances in augmented reality. IEEE Comput. Graph. Appl. 21(6), 34–47 (2001) 5. Barsom, E.Z., Graaﬂand, M., Schijven, M.P.: Systematic review on the eﬀectiveness of augmented reality applications in medical training. Surg. Endosc. 30(10), 4174– 4183 (2016). https://doi.org/10.1007/s00464-016-4800-6 6. Birkfellner, W., et al.: A head-mounted operating binocular for augmented reality visualization in medicine - design and initial evaluation. IEEE Trans. Med. Imaging 21(8), 991–997 (2002) 7. Blome, T., Diefenbach, A., Rudolph, S., Bucher, K., von Mammen, S.: VReanimate - non-verbal guidance and learning in virtual reality. In: Proceedings of the International Conference on Virtual Worlds and Games for Serious Applications (VS-Games), pp. 23–30 (2017) 8. Carmigniani, J., Furht, B., Anisetti, M., Ceravolo, P., Damiani, E., Ivkovic, M.: Augmented reality technologies, systems and applications. Multimed. Tools Appl. 51, 341–377 (2010) 9. Cave, D., et al.: Importance and implementation of training in cardiopulmonary resuscitation and automated external deﬁbrillation in schools a science advisory from the American heart association. Circulation 123, 691–706 (2011) 10. Cheng, A., et al.: Perception of CPR quality: inﬂuence of CPR feedback, justin-time CPR training and provider role. Resuscitation 87, 44–50 (2015). https:// www.sciencedirect.com/science/article/pii/S0300957214008351 11. Christopoulos, A., Pellas, N., Kurczaba, J., Macredie, R.: The eﬀects of augmented reality-supported instruction in tertiary-level medical education. Br. J. Edu. Technol. 53(2), 307–325 (2022) 12. Coles, T., John, N., Gould, D., Caldwell, D.: Integrating haptics with augmented reality in a femoral palpation and needle insertion training simulation. IEEE Trans. Haptics 4, 199–209 (2011) 13. Duarte, M., Santos, L., Guimar˜ aes J´ unior, J., Peccin, M.: Learning anatomy by virtual reality and augmented reality. A scope review. Morphologie 104(347), 254–266 (2020). https://www.sciencedirect.com/science/article/pii/S1286011520300813 14. Fromm, J., Mirbabaie, M., Stieglitz, S.: The potential of augmented reality for improving occupational ﬁrst aid. In: Proceedings of the International Conference on Wirtschaftsinformatik (2019)  
   
  428  
   
  M. Rebol et al.  
   
  15. Frøland, T.H., Heldal, I., Ersvær, E., Sjøholt, G.: State-of-the-art and future directions for using augmented reality head mounted displays for ﬁrst aid live training. In: Proceedings of the International Conference on e-Health and Bioengineering (EHB), pp. 1–6 (2020) 16. Gallagher, E.J., Lombardi, G., Gennis, P.: Eﬀectiveness of bystander cardiopulmonary resuscitation and survival following out-of-hospital cardiac arrest. J. Am. Med. Assoc. 274(24), 1922–1925 (1995) 17. Girau, E., et al.: A mixed reality system for the simulation of emergency and ﬁrstaid scenarios. In: Proceedings of the Annual International Conference of the IEEE Engineering in Medicine and Biology Society (EMBC), pp. 5690–5695 (2019) 18. Harris, D., Wilson, M., Vine, S.: Development and validation of a simulation workload measure: the simulation task load index (SIM-TLX). Virtual Reality 24(4), 557–566 (2019). https://doi.org/10.1007/s10055-019-00422-9 19. Hart, S.G., Staveland, L.E.: Development of NASA-TLX (task load index): Results of empirical and theoretical research. Hum. Mental Workload 1(3), 139–183 (1988) 20. Johnson, J., Rodrigues, D., Madhuri, G., Weibel, N.: HoloCPR: designing and evaluating a mixed reality interface for time-critical emergencies. In: Proceedings of the EAI International Conference, pp. 67–76 (2018) 21. Kamphuis, C., Barsom, E., Schijven, M., Christoph, N.: Augmented reality in medical education? Perspect. Med. Educ. 3(4), 300–311 (2014). https://doi.org/ 10.1007/s40037-013-0107-7 22. Kim, M., et al.: Eﬃcacy of VeinViewer in pediatric peripheral intravenous access: a randomized controlled trial. Eur. J. Pediatr. 171, 1121–1125 (2012) 23. Kuyt, K., Park, S.H., Chang, T.P., Jung, T., MacKinnon, R.: The use of virtual reality and augmented reality to enhance cardio-pulmonary resuscitation: a scoping review. Adv. Simul. 6(1), 11 (2021). https://doi.org/10.1186/s41077-021-00158-0 24. Laerdal: Little Anne QCPR (2022). https://laerdal.com/us/products/simulationtraining/resuscitation-training/little-anne-qcpr/ 25. Lin, C., et al.: A ﬁrst-person mentee second-person mentor AR interface for surgical telementoring. In: Proceedings of the IEEE International Symposium on Mixed and Augmented Reality Adjunct (ISMAR-Adjunct), pp. 3–8 (2018) 26. Mahmud, N., Cohen, J., Tsourides, K., Berzin, T.: Computer vision and augmented reality in gastrointestinal endoscopy. Gastroenterol. Rep. 3 (2015) 27. Mizell, D.: Augmented reality applications in aerospace. In: Proceedings of the IEEE and ACM International Symposium on Augmented Reality, Los Alamitos, CA, USA, p. 11. IEEE Computer Society (2000). https://doi.ieeecomputersociety. org/10.1109/IWADS.2000.880913 28. Nee, A., Ong, S., Chryssolouris, G., Mourtzis, D.: Augmented reality applications in design and manufacturing. CIRP Ann. 61(2), 657–679 (2012). https://www. sciencedirect.com/science/article/pii/S0007850612002090 29. Ponce, B.A., et al.: Telemedicine with mobile devices and augmented reality for early postoperative care. In: Proceedings of the Annual International Conference of the IEEE Engineering in Medicine and Biology Society, pp. 4411–4414 (2016) 30. Rebol, M., G¨ utl, C., Pietroszek, K.: Real-time gesture animation generation from speech for virtual human interaction. In: Extended Abstracts of the 2021 CHI Conference on Human Factors in Computing Systems, CHI EA 2021. Association for Computing Machinery, New York (2021). https://doi.org/10.1145/3411763. 3451554 31. Rebol, M., G¨ utl, C., Pietroszek, K.: Passing a non-verbal turing test: evaluating gesture animations generated from speech. In: 2021 IEEE Virtual Reality and 3D User Interfaces (VR), pp. 573–581 (2021)  
   
  CPR Emergency Assistance Through Mixed Reality Communication  
   
  429  
   
  32. Rebol, M., Pietroszek, K.: Artiﬁcial Reality Continuum. Springer, Heidelberg (2023) 33. Rebol, M., et al.: Collaborative system design of mixed reality communication for medical training. In: Proceedings of the 56th Hawaii International Conference on System Sciences, pp. 418–427 (2023) 34. Rebol, M., et al.: Mixed reality communication for medical procedures: teaching the placement of a central venous catheter. In: 2022 IEEE International Symposium on Mixed and Augmented Reality (ISMAR), pp. 346–354 (2022) 35. Tang, K., Cheng, D., Mi, E., Greenberg, P.: Augmented reality in medical education: a systematic review. Can. Med. Educ. J. 11 (2019) 36. Travers, A., et al.: Part 4: CPR overview: 2010 American heart association guidelines for cardiopulmonary resuscitation and emergency cardiovascular care. Circulation 122, S676–S684 (2010) 37. Wang, S., et al.: Augmented reality as a telemedicine platform for remote procedural training. Sensors 17, 2294 (2017) 38. Zajtchuk, R., Satava, R.M.: Medical applications of virtual reality. Commun. ACM 40(9), 63–64 (1997). https://doi.org/10.1145/260750.260768  
   
  The Relative Importance of Cognitive and Behavioral Engagement to Task Performance in Self-regulated Learning with an Intelligent Tutoring System Xiaoshan Huang1(B)  
   
  , Shan Li2  
   
  , and Susanne P. Lajoie1  
   
  1 McGill University, Montréal, QC H3A 0G4, Canada  
   
  [email protected]  2 Lehigh University, Bethlehem, PA 18015, USA  
   
  Abstract. Self-regulated learning (SRL) is essential in promoting students’ learning performance, especially in technology-rich environments where learning can be disorienting. Student engagement is closely associated with SRL, although the regulation of engagement in SRL is still underexplored. In this study, we aimed to compare the relative importance of cognitive and behavioral engagement in the three SRL phases (i.e., forethought, performance, self-reflection) to learning performance in the context of clinical reasoning. Specifically, students were tasked to solve two virtual patients in BioWorld, an intelligent tutoring system. We measured student behavioral engagement as their time spent on diagnostic behaviors. Students’ cognitive engagement was extracted from their think-aloud protocols as they verbalized their thinking and reasoning process during the tasks. We analyzed the relative importance of cognitive and behavioral engagement in the three SRL phases to diagnostic efficacy. Results suggested that the effects of engagement on student performance depend on task complexity. In the complex task, the six predictors (i.e., two types of engagement in the three SRL phases) explained 36.81% of the overall variances in learner performance. Cognitive engagement in SRL played a more significant role than behavioral engagement in predicting students’ performance in clinical reasoning. Keywords: Self-Regulated Learning · Cognitive Engagement · Behavioral Engagement · Relative Importance · Intelligent Tutoring System  
   
  1 Introduction Intelligent tutoring systems (ITS) can promote learners’ self-regulated learning (SRL), a pivotal competency for achieving better learning performance [1–3]. Meanwhile, student engagement is also found to be positively related to their learning performance within ITS [4]. The literature is well-documented about the measurement and effect of two types of student engagement, i.e., behavioral engagement and cognitive engagement, on student learning. Behavioral engagement is typically defined as on-task behaviors in © The Author(s), under exclusive license to Springer Nature Switzerland AG 2023 C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 430–441, 2023. https://doi.org/10.1007/978-3-031-32883-1_39  
   
  The Relative Importance of Cognitive and Behavioral Engagement  
   
  431  
   
  learning or problem-solving. Cognitive engagement involves specific learning-oriented strategies [5]. Effectively facilitating behavioral and cognitive engagement in SRL yields optimal learning performance. Nevertheless, limited studies have investigated the patterns of behavioral and cognitive engagement within SRL processes and their effects on learning performance. Particularly, to our knowledge, no study has examined the relative importance of behavioral and cognitive engagement to task performance in SRL with an ITS. In this study, we explored medical students’ cognitive and behavioral engagement in different SRL phases as they solved clinical reasoning tasks with an ITS. We attempted to understand the relative importance of behavioral and cognitive engagement, as they occurred in each phase of SRL, to student performance. In line with the literature, we conceptualized behavioral engagement as on-task behaviors. We used think-aloud protocols to capture students’ thinking and reasoning activities in clinical reasoning, based on which we calculated students’ cognitive engagement in SRL phases. We will explain the measurement of behavioral and cognitive engagement further in the method section. In sum, the overarching goal of this study is to unravel the relationships among SRL, behavioral engagement, cognitive engagement, and task performance as students solved clinical reasoning problems with an ITS. We also look into how task complexity affects those relationships. This study has practical and methodological implications. This study also informs the design of augmented intelligence in intelligent tutoring systems.  
   
  2 Theoretical Framework SRL is an active, constructive process through which students monitor, regulate, and control their learning efforts in both external and internal dimensions [6]. SRL is a cyclical process consisting of three phases [7]: forethought, performance, and self-reflection. In the forethought phase, students set goals and plan the strategies and effort to achieve their goals. The performance phase involves self-observation and self-control, whereby students monitor and control their actions to approach their goals. In the self-reflection phase, students reflect on their learning trajectories and progresses, based on which they make adaptations towards desired outcomes. In technology-rich environments (e.g., ITS), SRL is pivotal to better performance, higher achievement, and a satisfied learner experience [8, 9]. Engagement was first defined in school contexts as a multidimensional concept consisting of behavioral, cognitive, emotional, and psychological components [5]. In this study, we were particularly interested in the behavioral and cognitive aspects of engagement. The differentiation between behavioral and cognitive engagement helps understand student effort in learning. Behavioral engagement is the observable behaviors of students in completing a learning task, whereas cognitive engagement shows the amount of mental effort students investigate in working on the task [5]. Researchers have reached a consensus that both behavioral and cognitive engagement is positively related to task performance. Instructors should design strategies or scaffoldings to promote behavioral and cognitive engagement. Nevertheless, rarely the relative importance of behavioral and cognitive engagement to task performance is studied. The research is  
   
  432  
   
  X. Huang et al.  
   
  even more scarce when it comes to the context of self-regulated learning. Researchers have investigated the relationships between SRL and engagement in various contexts, e.g., collaborative learning [2], and flipped classroom [3]. For instance, findings from a qualitative study indicated that engagement varied across an SRL cycle [10]. However, no studies have compared the relative importance of the two types of engagement (i.e., behavioral engagement and cognitive engagement) within the SRL process. It is also noteworthy that the concepts of engagement and SRL could sometimes be less welldefined, which may lead to ambiguous interpretations [11]. The boundaries between behavioral and cognitive engagement are blurred. In this study, we make a clear distinction between the two constructs, and we compare their relative importance to task performance in SRL with an ITS. We situate this study in clinical reasoning, a complex problem-solving setting that requires critical thinking and reasoning skills. In clinical reasoning, medical practitioners diagnose patients (or virtual patients) by inquiring about a patient’s symptoms and life experience, performing medical tests, seeking for guidance, proposing diagnostic hypotheses, assessing the probability of each hypothesis, and making a final decision. As such, clinical reasoning asks medical practitioners to be behaviorally and cognitively engaged during diagnostic processes. Meanwhile, clinical reasoning consists of forethought, performance, and self-reflection activities. Therefore, clinical reasoning represents a good example of studying the relationships between engagement, SLR, and task performance. Specifically, this study aims to answer the following two research questions: (1) What is the relative importance of cognitive and behavioral engagement in the three SRL phases (i.e., forethought, performance, and self-reflection) to clinical reasoning performance? (2) Does task complexity affect the relative importance of cognitive and behavioral engagement to clinical reasoning performance?  
   
  3 Methods 3.1 Participants Thirty-three medical students (23 Female, 10 Male; Mage = 23.24, SD = 3.00) from a large North American university volunteered to participate in this study. We had obtained ethical approval from the Research Ethics Board (REB) Office at the institute where the study was conducted. The participants signed a consent form before the experiment. They were also informed that they could withdraw anytime during the experiment without worrying out detrimental consequences. During the experiment, the participants were asked to diagnose two virtual patients (i.e., one easy task and one complex task). The students were asked to think aloud while diagnosing patient cases with an ITS, BioWorld. One participant only completed the think-aloud in the easy task, whereas the remaining 32 students did think-aloud in both tasks. Thus, we used 65 cases altogether to study learners’ engagement within SRL phases.  
   
  The Relative Importance of Cognitive and Behavioral Engagement  
   
  433  
   
  3.2 Learning Contexts and Task BioWorld is an intelligent tutoring system designed to assist medical students in practicing clinical reasoning skills in a simulated learning environment [12, 13] (see Fig. 1). Each case in BioWorld begins with a description of a virtual patient and pertinent symptoms. Students select useful evidence based on the presented case facts by recalling their prior knowledge of the disease. Then, students formulate one or more hypotheses. To validate or refute their findings, students can order medical lab tests or search an embedded medical library for additional explanations. After providing a final diagnosis, students are required to assess the relevance of the collected evidence to their hypotheses, justify the probability of each hypothesis, and summarize their clinical reasoning processes. In this study, participants were assigned to resolve the Amy and Cynthia patient cases in BioWorld. The accurate diagnoses for the two cases were Type 1 diabetes and pheochromocytoma, respectively. The Amy case was designed to be simple, whereas the Cynthia case was designed to be difficult.  
   
  Fig. 1. The main interface of BioWorld [12, 14].  
   
  3.3 Procedure Before the experiment, we provided a training session to teach participants how to use the BioWorld system. In addition, they had the opportunity to become familiar with the system by solving a sample case in BioWorld. After the training session, participants were required to independently solve two clinical cases (i.e., the Amy case and the  
   
  434  
   
  X. Huang et al.  
   
  Cynthia case) for a total of 1.5 h. Students’ diagnostic behaviors were automatically recorded in the log files of the BioWorld system in real-time. We randomized the order of the patient cases to counteract its effect on participant performance. 3.4 Measurements and Diagnostic Performance Using the log file data, we identified eight types of diagnostic behaviors in the three SRL phases (i.e., forethought, performance, and self-reflection). Collecting evidence items (CO) was coded as the forethought phase. Three clinical reasoning behaviors were coded in the performance phase: raising/managing hypotheses (RA), adding tests (AD), and searching the library for information (SE). The self-reflection phase included categorizing evidence/results (CA), linking evidence/results (LI), prioritizing evidence/results (PR), and summarization for final diagnosis (SU). Specifically, we calculated the portion of students’ behavior duration (i.e., how long a behavior lasts) in each SRL phase as their behavioral engagement. The duration of a diagnostic behavior was obtained by subtracting the timestamp of the behavior itself from the subsequent one. The portion of behavior duration in each SRL phase was the accumulated duration of each SRL phase divided by the total duration. Moreover, we manually coded six SRL strategies in the three SRL phases (i.e., forethought: orientation and planning; performance: monitoring, evaluation, elaboration; reflection: self-reflection) based on a previous coding scheme (see Table 1, [15]). We used SRL strategies to indicate learners’ cognitive engagement in each SRL phase. Three coders were assigned 30% of the protocols in a way that two raters coded each protocol. We used Cohen’s Kappa to assess inter-rater reliability in that it is widely regarded as the gold standard of reliability indices [16]. The final inter-rater reliability for SRL activities was .813, indicating a high degree of agreement between coders [17]. We then calculated the frequency of each SRL phase and used the accumulated score of each SRL phase divided by the total SRL score to represent cognitive engagement in the relevant SRL phase. Table 1. The Coding Scheme of Self-Regulated Learning Strategies in Clinical Reasoning. Code  
   
  Sub-Code  
   
  Definition  
   
  Orientation (OR)  
   
  Hypothesizing (H)  
   
  Outlining a single or multiple diagnoses  
   
  Identifying/repeating important information (IR)  
   
  Highlighting information in relation to the case  
   
  Activating prior knowledge (APK) Recalling information pertaining to the disease Planning (PL)  
   
  Goal setting (GS)  
   
  Formulating a superordinate goal wherein multiple actions plans are executed (continued)  
   
  The Relative Importance of Cognitive and Behavioral Engagement  
   
  435  
   
  Table 1. (continued) Code  
   
  Sub-Code  
   
  Definition  
   
  Sub-goaling: Form action plan (FAP)  
   
  Forming a plan to order lab tests/identify symptoms while formulating a diagnosis  
   
  Sub-goaling: Looking for information (LI)  
   
  Forming a plan to search for information in the library while formulating a diagnosis  
   
  Sub-goaling: Using external source Requesting a consult from to get an explanation (ES) BioWorld while formulating a diagnosis  
   
  Monitoring (MO)  
   
  Evaluation (EV)  
   
  Sub-goaling: Organizing thoughts by self-questioning (OSQ)  
   
  Asking questions to oneself in reference to the action plan being formulated  
   
  Claiming progress in understanding (CP −/+)  
   
  Mentioning that their overall understanding of the case improved (+). Alternatively, mentioning partial or lack of understanding (−)  
   
  Found required information (FI − /+)  
   
  Mentioning that lab tests ordered were pertinent/abnormal (+) or non-pertinent/normal (−)  
   
  Noticing unfamiliar words/terms (NU)  
   
  Mentioning an instance of confusion that is attributed to terminology  
   
  Noticing inconsistency, confusion, checking plausibility (NI)  
   
  Mentioning an instance of confusion pertaining to formulating their diagnosis  
   
  Checking (CH)  
   
  Reviewing the evidence, symptoms, and vital signs  
   
  Verifying (V)  
   
  Claiming/Proving/Disproving something exists or is true  
   
  Justifying (J −/+)  
   
  Justifying the probability of a hypothesis based on evidence items. The evidence items can be used to increase the likelihood of a particular diagnosis (+) or to decrease it (−)  
   
  Concluding (CO −/+)  
   
  Make a conclusion about the virtual patient (continued)  
   
  436  
   
  X. Huang et al. Table 1. (continued)  
   
  Code  
   
  Sub-Code  
   
  Definition  
   
  Elaboration (EL)  
   
  Integrating information  
   
  Adding more information to existing information to create a more complex, emergent whole  
   
  Connecting parts of the text by reasoning (CR −/+)  
   
  Connecting different pieces of information in a logical way to form a conclusion or judgment  
   
  Self-Reflection (RE) Self-questioning for reflection  
   
  Asking questions to oneself to check their understanding of certain contents or procedures  
   
  Causal attribution  
   
  Attributional judgments about the results, such as whether poor performance is because of one’s limited ability or insufficient effort  
   
  Self-satisfaction  
   
  Self-satisfaction involves perceptions of satisfaction or dissatisfaction and associated affect regarding one’s performance  
   
  In terms of student diagnostic performance, we calculated the match between a participant and experts’ solutions. It is worth mention that experts’ solutions, including useful evidence items, medical tests needed for diagnosis, and a correct diagnosis, are prefigured in the BioWorld system. Once a participant submit their final diagnosis, the system will generate the performance score for the participant [3]. 3.5 Data Analysis We used a relative importance analytic method [18] to compare the relative importance of students’ behavioral and cognitive engagement in the three SRL phases (i.e., forethought, performance, and self-reflection) to task performance. In other words, there were six predictive variables, i.e., two types of engagement in the three SRL phases. The relative-weight analysis deals with predictor intercorrelations using a variable transformation approach [19]. It is an alternative to the multiple regression technique, tackles the multicollinearity issue, and helps to determine the variables’ rank in importance. It helps answer the question “which variable is the most essential and ranks variables based on their R-Square contribution.“ Relative importance weights are estimated for each predictor variable and offer a complete decomposition of the total predicted variance to the model R2 [19, 20]. This method is promising to deal with multiple predictors when determining which predictor is more important or useful than others to predict an outcome variable. The data analysis is conducted in R using the package “relaimpo” [21].  
   
  The Relative Importance of Cognitive and Behavioral Engagement  
   
  437  
   
  4 Results (1) What is the relative importance of cognitive and behavioral engagement in the three SRL phases to clinical reasoning performance? Table 2 summarizes the relevant importance weights of all predictor variables on diagnostic performance. Relative importance weights sum to R2 , which represents the percentage of variance explained in the criterion that can be attributed to each predictor [20]. Regardless of the task complexity, the result showed that the predictors’ overall explanation of the variance in diagnostic outcome (i.e., efficacy) was 27%.  
   
  Table 2. Relative Importance of Behavioral and Cognitive Engagement to Task Performance Outcome Variable  
   
  Predictor Variables  
   
  Diagnostic Efficacy  
   
  Cognitive Engagement (CE)  
   
  Behavioral Engagement (BE)  
   
  FT  
   
  PE  
   
  RN  
   
  FT  
   
  PE  
   
  RN  
   
  .03  
   
  .04  
   
  .04  
   
  .04  
   
  .05  
   
  .07  
   
  Relative Importance  
   
  Note. FT: the forethought phase of SRL, PE: the performance phase of SRL, RN: the self-reflection phase of SRL  
   
  (2) Does task complexity affect the relative importance of cognitive and behavioral engagement to clinical reasoning performance? When distinguishing task complexity, a significant portion of explanation on the variances in efficacy was found in the difficult diagnostic case (R2 = 36.81) but not in the simple case (R2 = 17.05). The results indicated that the six engagementrelated variables could explain 36.81% of the variances in learners’ diagnostic efficacy when they solved a difficult task (Fig. 2). The relative importance indices for cognitive engagement in the three SRL phases (i.e., FT, PE, RN) are .06, .09, and .09, respectively. Regarding behavioral engagement in the three SRL phases, the relative weights are .03, .05, and .06, respectively. As shown in Fig. 2, cognitive engagement has greater contribution weights in all three SRL phases than behavioral engagement. Additionally, cognitive engagement and behavioral engagement in the self-reflection phase contributed higher predictive value on performance than engagement in the other two SRL phases. In contrast, in the easy patient case, the predictive power of the six engagementrelated variables were not as strong as it was in the difficult task (see Table 3). Specifically, the predictive power was less than half of the explanation power of a difficult task. It is suggested to run a bootstrapping procedure to determine the statistical significance of relative weights [18]. We applied 1,000 bootstrapping replicates to check if a particular type of engagement in a certain SRL phase is significantly more important than the other  
   
  438  
   
  X. Huang et al.  
   
  Fig. 2. The relative importance of six engagement-related variables to diagnostic efficacy. Note. pCEF: cognitive engagement in the forethought phase, pCEP: cognitive engagement in the performance phase, pCER: cognitive engagement in the self-reflection phase; pBEF: behavioral engagement in the forethought phase, pBEP: behavioral engagement in the performance phase, pBER: behavioral engagement in the self-reflection phase.  
   
  engagement. The result indicated that no specific engagement stood out from others when predicting diagnostic efficacy in the difficult task (i.e., all confidential intervals for difference include zero). Table 3. Relative Importance of Behavioral and Cognitive Engagement in the Different Task Task Complexity  
   
  Predictor Variables Cognitive Engagement (CE)  
   
  Behavioral Engagement (BE)  
   
  FT  
   
  PE  
   
  RN  
   
  FT  
   
  PE  
   
  RN  
   
  Easy  
   
  .02  
   
  .02  
   
  .01  
   
  .03  
   
  .03  
   
  .06  
   
  Difficult  
   
  .04  
   
  .10  
   
  .16  
   
  .01  
   
  .01  
   
  .03  
   
  Note. FT: the forethought phase of SRL, PE: the performance phase of SRL, RN: the self-reflection phase of SRL  
   
  5 Discussions and Conclusions In this study, we compared the relative importance of cognitive and behavioral engagement in the three SRL phases (i.e., forethought, performance, self-reflection) to diagnostic performance in clinical reasoning with an ITS. Findings from this study suggested that the effects of behavioral and cognitive engagement on student performance depends  
   
  The Relative Importance of Cognitive and Behavioral Engagement  
   
  439  
   
  on task complexity. Behavioral and cognitive engagement plays a more important role in predicting performance in a difficult task than in an easy task. Since we did not perform inferential statistics, this finding should be interpreted with caution. Despite this, our results highlighted the importance of behavioral and cognitive engagement in difficult tasks. In the easy task, the six engagement-related variables (i.e., two types of engagement in the three SRL phases) could explain 17.05% of the variance in students’ diagnostic performance. A possible explanation is that other factors, such as prior knowledge [22], emotions [23], motivation [2], interact with students’ SRL processes and outcomes. As task complexity increases, the importance of behavioral and cognitive engagement to performance increases. As a result, the six predictors explained 36.81% of the overall variances in learner performance in the difficult task. While the six engagement-related variables were strong predictors of performance in a difficult task, there were no statistically significant differences among the variables regarding their relative importance to task performance. However, based on the descriptive analysis, students’ cognitive engagement in all three SRL phases had a stronger influence on the variances of performance than behavioral engagement. This supports the importance of integrating cognitive engagement in SRL [24]. The result also suggested that instructors should emphasize both behavioral and cognitive engagement in complex clinical reasoning tasks, although more emphasis should be placed on cognitive engagement. In contrast, researchers and instructors should examine the factors other than engagement in easy tasks since engagement only accounts for a limited variance in student performance. For instance, prior knowledge may have a stronger influence on learners’ performance when solving an easy case using ITS [25]. In sum, this study was one of the first to investigate the relative importance of behavioral and cognitive engagement in SRL phases to task performance with an ITS. Findings from this study underscored the factor of task complexity in studying the relationships between engagement and performance. As discussed above, this study has significant practical implications. This study also informs the design of intelligent tutoring systems. For example, the current intelligent tutoring systems can automatically analyze on-task behaviors, providing important insights about learners’ behavioral engagement and behavioral patterns. It would be interesting to integrate augmented intelligence in an ITS so that it can grade the importance of behavioral engagement to learning performance in tasks of varying complexity. Acknowledgements. This work is supported by the Social Sciences and Humanities Research Council of Canada (SSHRC) under the grant number of 895-2011-1006. Any opinions, findings, and conclusions or recommendations expressed in this paper, however, are those of the authors and do not necessarily reflect the views of the SSHRC.  
   
  References 1. Pérez-Sanagustín, M., et al.: A MOOC-based flipped experience: scaffolding SRL strategies improves learners’ time management and engagement. Comput. Appl. Eng. Educ. 29, 750–768 (2021). https://doi.org/10.1002/cae.22337  
   
  440  
   
  X. Huang et al.  
   
  2. Duffy, M.C., Azevedo, R.: Motivation matters: Interactions between achievement goals and agent scaffolding for self-regulated learning within an intelligent tutoring system. Comput. Hum. Behav. 52, 338–348 (2015). https://doi.org/10.1016/j.chb.2015.05.041 3. Lajoie, S.P.: Student modeling for individuals and groups: the BioWorld and HOWARD platforms. Int. J. Artif. Intell. Educ. 31(3), 460–475 (2020). https://doi.org/10.1007/s40593020-00219-x 4. Fisher, R., Perényi, Á., Birdthistle, N.: The positive relationship between flipped and blended learning and student engagement, performance and satisfaction. Act. Learn. High. Educ. 22, 97–113 (2021). https://doi.org/10.1177/1469787418801702 5. Fredricks, J.A., Blumenfeld, P.C., Paris, A.H.: School engagement: potential of the concept, state of the evidence. Rev. Educ. Res. 74, 59–109 (2004). https://doi.org/10.3102/003465430 74001059 6. Pintrich, P.R.: A conceptual framework for assessing motivation and self-regulated learning in college students. Educ. Psychol. Rev. 16, 385–407 (2004). https://doi.org/10.1007/s10648004-0006-x 7. Zimmerman, B.J.: Becoming a self-regulated learner: an overview. Theory Into Practice. 41, 64–70 (2002). https://doi.org/10.1207/s15430421tip4102_2 8. Azevedo, R.: Reflections on the field of metacognition: issues, challenges, and opportunities. Metacogn. Learn. 15(2), 91–98 (2020). https://doi.org/10.1007/s11409-020-09231-x 9. Fitzpatrick, C.: Optimizing Learning in a Technology Rich Environment: The Importance of Cognitive and Metacognitive Processing. Presented at the Society for Information Technology & Teacher Education International Conference March 2 (2009) 10. Järvelä, S., Järvenoja, H., Malmberg, J., Isohätälä, J., Sobocinski, M.: How do types of interaction and phases of self-regulated learning set a stage for collaborative engagement? Learn. Instr. 43, 39–51 (2016). https://doi.org/10.1016/j.learninstruc.2016.01.005 11. Pizzimenti, M.A., Axelson, R.D.: Assessing student engagement and self-regulated learning in a medical gross anatomy course. Anat. Sci. Educ. 8, 104–110 (2015). https://doi.org/10. 1002/ase.1463 12. Lajoie, S.P.: Developing professional expertise with a cognitive apprenticeship model: examples from avionics and medicine. In: Ericsson, K.A. (ed.) Development of Professional Expertise: Toward Measurement of Expert Performance and Design of Optimal Learning Environments, pp. 61–83. Cambridge University Press, Cambridge (2009) 13. Li, S., Zheng, J., Poitras, E., Lajoie, S.: The allocation of time matters to students’ performance in clinical reasoning. In: Nkambou, R., Azevedo, R., Vassileva, J. (eds.) ITS 2018. LNCS, vol. 10858, pp. 110–119. Springer, Cham (2018). https://doi.org/10.1007/978-3-319-914640_11 14. Li, S., Zheng, J., Lajoie, S.P., Wiseman, J.: Examining the relationship between emotion variability, self-regulated learning, and task performance in an intelligent tutoring system. Educ. Tech. Research Dev. 69(2), 673–692 (2021). https://doi.org/10.1007/s11423-021-099 80-9 15. Lajoie, S.P., Lu, J.: Supporting collaboration with technology: does shared cognition lead to co-regulation in medicine? Metacognition Learn. 7, 45–62 (2012). https://doi.org/10.1007/ s11409-011-9077-5 16. Watson, P.F., Petrie, A.: Method agreement analysis: a review of correct methodology. Theriogenology 73, 1167–1179 (2010). https://doi.org/10.1016/j.theriogenology.2010. 01.003 17. Landis, J.R., Koch, G.G.: The measurement of observer agreement for categorical data. Biometrics 33, 159–174 (1977). https://doi.org/10.2307/2529310 18. Tonidandel, S., LeBreton, J.M., Johnson, J.W.: Determining the statistical significance of relative weights. Psychol. Methods 14, 387–399 (2009). https://doi.org/10.1037/a0017735  
   
  The Relative Importance of Cognitive and Behavioral Engagement  
   
  441  
   
  19. Dalal, R.S., Baysinger, M., Brummel, B.J., LeBreton, J.M.: The relative importance of employee engagement, other job attitudes, and trait affect as predictors of job performance. J. Appl. Soc. Psychol. 42, E295–E325 (2012). https://doi.org/10.1111/j.1559-1816.2012.010 17.x 20. Tonidandel, S., LeBreton, J.M.: Relative importance analysis: a useful supplement to regression analysis. J Bus Psychol. 26, 1–9 (2011). https://doi.org/10.1007/s10869-0109204-3 21. R: A Language and Environment for Statistical Computing (2014) 22. Trevors, G., Duffy, M., Azevedo, R.: Note-taking within MetaTutor: interactions between an intelligent tutoring system and prior knowledge on note-taking and learning. Educ. Tech. Res. Dev. 62(5), 507–528 (2014). https://doi.org/10.1007/s11423-014-9343-8 23. Huang, X., Huang, L., Lajoie, S.P.: Relationships between SRL and teachers’ emotions in technology integration. In: EDULEARN20 Proceedings, pp. 2249–2256 (2020). https://doi. org/10.21125/edulearn.2020.0692 24. Li, S., Lajoie, S.P.: Cognitive engagement in self-regulated learning: an integrative model. Eur. J. Psychol. Educ. 37(3), 833–852 (2022). https://doi.org/10.1007/s10212-021-00565-x 25. Taub, M., Azevedo, R.: How does prior knowledge influence eye fixations and sequences of cognitive and metacognitive SRL processes during learning with an intelligent tutoring system? Int. J. Artif. Intell. Educ. 29(1), 1–28 (2018). https://doi.org/10.1007/s40593-0180165-4  
   
  Emotional Impact of Cognitive Priming on Alzheimer’s Disease Hamdi Ben Abdessalem(B) and Claude Frasson Département d’Informatique et de Recherche Opérationnelle, Université de Montréal, Montréal H3C 3J7, Canada [email protected]  , [email protected]   
   
  Abstract. Subjective cognitive decline (SCD) is an early state of Alzheimer’s Disease. As this disease continues to spread, there is still no efficient pharmacological treatment to stop it. Non-pharmacological treatment may be effective to slow down the progression of the disease. We propose in this paper a cognitive priming system which projects the name of forgotten celebrity names in a very fast way (29 ms) so only the subconscious part of the patients’ brain can intercept it. Experiments with different SCD patients have been realized divided into 2 groups. The first group was to investigate the impact of the cognitive priming system, and the second one was to serve as a control group. Results show that SCD patients’ frustration decreased when the cognitive priming system projected the missing information. In addition, results show that their memory performance increased when the system performed the cognitive priming technique. Thus, cognitive priming can reduce negative emotion and improve memory performance. Keywords: Cognitive Priming · Alzheimer’s Disease · Negative Emotions · EEG · Behavior and Cognition · Health Care · Wellbeing  
   
  1 Introduction Alzheimer’s Disease (AD) is one of the most critical diseases and affects millions of people every year, yet there is no effective pharmaceutical treatment to improve the course of the disease. AD patients suffer from negative emotions which affect their cognition and memory as well as their well-being [1]. The most vulnerable persons to the disease are those over 65 years old and the risk increases with age [2]. AD is a neurodegenerative disease which deteriorates gradually over time. We focus our research on older adults with subjective cognitive decline (SCD) as these individuals progress to dementia at a higher rate than those with no subjective impression of decline and are sometimes in the early stages of the disease [3]. Non-pharmacological interventions such as music therapy and animal-assisted therapy have positive effects on cognitive function of older adults suffering from SCD or AD [4]. Furthermore, relaxing environments such as Virtual Travel [5], Zoo Therapy [6], and Music Therapy [7] mixed with virtual reality have been demonstrated to be helpful to reduce negative emotions and improve cognitive performance and short-term memory [8]. © The Author(s), under exclusive license to Springer Nature Switzerland AG 2023 C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 442–451, 2023. https://doi.org/10.1007/978-3-031-32883-1_40  
   
  Emotional Impact of Cognitive Priming on Alzheimer’s Disease  
   
  443  
   
  Another non-pharmacological technique which could be used to improve the memory of SCD patients, is the cognitive priming method. The principle of cognitive priming is to project information very quickly so the conscious part of the brain cannot receive it, but the subconscious part can intercept it [9]. We believe that this technique could help restore forgotten memory of AD patients. Is there a link with the reduction of negative emotions? In this goal we conducted experiments with SCD participants to verify the following research questions. Q1: Can cognitive priming reduce negative emotions of SCD patients? Q2: Is there a relation between the effect of cognitive priming on memory performance and its effect on negative emotions? The rest of this paper is organized as follows. In Sect. 2 we present an overview of the related work. Section 3 presents our methodology. In Sect. 4 we present the experiments. Finally, in Sect. 5 we present and discuss the obtained results.  
   
  2 Related Work 2.1 Non-pharmacological Treatment for Alzheimer’s Disease Several researchers utilized non-pharmacological approaches to treat AD patients. One of these approaches is Animal Assisted Therapy (AAT). AAT is a treatment that concentrates on psychosocial stimulation and human-animal interactions for therapeutic purposes. AD patients can have difficulties interacting with other people. The nonverbal action of a dog can be easily interpreted. Animals can play a role as transitional objects, allowing humans to first establish a connection with them and then extend that connection with other humans. AAT has a relaxing effect on patients with dementia and Alzheimer’s disease [10], particularly as therapy with dogs. Virtual Reality Zoo Therapy [6] incorporates the theory of AAT in addition to virtual reality to maximize its effect with immersion. Furthermore, another relaxing approach used for therapeutic reasons is music. It is commonly used for different conditions, such as autism, brain injury, and dementia [11–13]. Byrns et al. proved that they can reduce AD patients’ negative emotions by combining music therapy with EEG brain assessment in a virtual environment [7]. 2.2 Cognitive Priming Other than relaxing environment, cognitive priming could be an alternative solution to improve memory performances. In fact, priming is defined as an unconscious form of human memory. It affects the perceptual identification of words and objects and has been recognized as separate from other forms of memory or memory system [9]. Cognitive priming is a type of priming which aims to enhance specific cognitive processes such as decision-making toward the goal of indirectly enhancing knowledge acquisition [14]. Del Cul et al. were the first to utilize cognitive priming [15]. In addition, DeVaul used cognitive priming to better associate names to faces [16]. Moreover, Lowery et al. showed that cognitive priming can increase performance on midterm exams compared to neutral primes and that subliminal priming may have long-term effects on real-world behavior [17]. Finally, Chalfoun and Frasson used these techniques and discovered a clear memory and cognitive improvement [18].  
   
  444  
   
  H. Ben Abdessalem and C. Frasson  
   
  3 Methodology Our proposal is to utilize the approach of cognitive priming technique to reduce SCD patients’ negative emotion and restore missing information in their memory. Therefore, we created a cognitive priming system to identify the missing information and project it to SCD patients. The principle is to project an image containing the name of a celebrity that the participant did not recognize in addition to their picture during a short time (29 ms). This projection reaches the subconscious mind of the participant. The speed at which information is projected is crucial since there is a threshold for which the user can consciously perceive information (Del Cul et al., 2007 [15]). Our system operates in two phases. In the first one, it presents celebrity pictures and for each one, the participant should select one of these three choices: 1. I recognize the celebrity and remember their name. 2. I recognize the celebrity but do not remember their name. 3. I do not recognize the celebrity. Figure 1 illustrates a screen capture of celebrity Elvis Presley and the three choices listed above.  
   
  Fig. 1. Screen capture of the cognitive priming system  
   
  In the first phase, the system presents 25 celebrity pictures or more and stops when the patient selects the second or third option at least 5 times. After that, the participants take a break by looking at a gray screen for 3 min. Following that, the second phase begins in which the system presents again the celebrity that the patient did not recognize or remember the name during the first phase. During this phase, prior to presenting each picture, the system performs the cognitive prime method following these steps. 1. Step 1: the system presents a mask for 271 ms  
   
  Emotional Impact of Cognitive Priming on Alzheimer’s Disease  
   
  445  
   
  2. Step 2: the system presents one of the unrecognized celebrities in addition to their name for 29 ms 3. Step 3: the system presents a mask for 271 ms. Figure 2 shows an example of the sequence of cognitive priming method.  
   
  Fig. 2. Example of cognitive priming method  
   
  4 Experiments We conducted experiments on 34 total participants with SCD. The groups of participants were divided into 2 groups. The first group includes 18 participants, and the second group includes 16 participants. The first group performed the cognitive priming session and the second one was a control group, thus they did not. Before the experiments, all the participants took a pre-experiment session in which we make sure that they are SCD patients, and they are eligible to complete the experiments. Our eligibility criteria were the following: • • • • •  
   
  Older than aged 60 of age. Francophone. Normal or correct-to-normal vision. Normal hearing. Met the Consortium for the Early Identification of Alzheimer’s Disease – Quebec (CIMA-Q) criteria for SCD: – Presence of a complaint defined as a positive answer to the following statements: “My memory is not as good as it used to be” “and it worries me.” – MoCA 20–30. – No impairment on the logical memory scale based on the education-adjusted CIMAQ cut-off scores.  
   
  During the experiments of the first group, a series of photo appear one by one, and the participants must select if they recognize the person or not and know their name  
   
  446  
   
  H. Ben Abdessalem and C. Frasson  
   
  or not (celebrity test). Following, they take a three-minute break. After that, a second series of photo containing the ones they did not recognize and their name appear again and the participant must select the same options. However, during the second series, the cognitive priming technique is used by the system as indicated in Fig. 2 (celebrity test + cognitive priming). For the second group, the system presents a series of photo one by one, and the participants must select if they recognize the celebrity or not and know their name or not. Following, they take a three-minute break. Then, the system presents a second series of photo containing the ones they did not recognize, and they need to select the same options. During the second series, the system does NOT perform the cognitive priming technique, since this second group is our control group. Figure 3 details the process of the experiment.  
   
  Fig. 3. Process of the experiment  
   
  To perform the experiments, we used an MSI GE75 Raider 95F which has a Full-HD display capable of 144 Hz refresh rate. This screen refreshes every ~6.94 ms, in addition, our cognitive priming system runs at 250 frames per second (>144). Therefore, we are sure that the 29 ms cognitive priming will appear on the screen.  
   
  5 Results and Discussion The first objective of this research is to explore if cognitive priming reduces negative emotions of SCD patients. To this end, we analyzed participants’ frustration level (extracted from Emotiv EEG). We calculated the mean level of frustration for each participant comparing the results without the cognitive priming (before the break) with the results with the cognitive priming (after the break). Results show that the mean frustration without cognitive priming was 0.61 and with cognitive priming was 0.47. Thus, the participants’ frustration decreased when using the cognitive priming method.  
   
  Emotional Impact of Cognitive Priming on Alzheimer’s Disease  
   
  447  
   
  Individual results are shown in Fig. 4, in which we can observe a frustration decrease for 16 of the 19 participants. Only participants 7,14 and 15 failed to show the effect. This can be explained by the fact that participants succeeded in recovering memory and developed more positive motions.  
   
  Fig. 4. Frustration level per participant before and after cognitive priming.  
   
  To ensure that the obtained results are due to the cognitive priming effect, we analyzed participants’ frustration level of the control group. We calculated the mean level of frustration for each participant, comparing the results before the break with the results after the break. Results show that the mean frustration before the break was 0.54 and after the break was 0.67. Therefore, the participants’ frustration increased after the break. Individual results are shown in Fig. 5, in which we can observe a frustration increase for most participants. This can be explained by the fact that the participants still cannot retrieve the name of the celebrities. In addition, and to verify our second research question and see if there is a correlation between the effect of cognitive priming on memory performance and its effect on negative emotions, we proceeded by analyzing participants’ responses before and after the cognitive priming. We calculated the improvement for each participant comparing the results before the cognitive priming with the results after. Figure 5 shows the individual obtained results in which we can notice a clear increase in performance. When the participants respond that they do not recognize the celebrity at all before the priming, and after the priming they select that they recognize them but do not remember their name, we consider this an improvement as well, however, these results are separated in Fig. 6 (orange). To confirm that the observed results are an effect of the cognitive priming, we examined the percentage improvement of the control group as well. Figure 7 shows the individual obtained results in which we can observe a clear difference of performance  
   
  448  
   
  H. Ben Abdessalem and C. Frasson  
   
  Fig. 5. Frustration level per participant without cognitive priming (control group).  
   
  Fig. 6. Performance improvement per participant using cognitive priming. (Color figure online)  
   
  improvement comparing the improvement observed in Fig. 6. For the control group without the cognitive priming, most participants’ memory did not improve. Consequently, these results confirm that the use of cognitive priming technique can reduce negative emotions and improve memory performance. We believe that this reduction of negative emotions is due to memory performance improvement and satisfaction. As the participants retrieved missing information in their memory, they became less frustrated, and their negative emotions were reduced. These results encourage us to use our cognitive priming system with learning applications. Since learners experience negative emotions such as stress, we believe that the use of our method to help them acquire missing information, can reduce their negative  
   
  Emotional Impact of Cognitive Priming on Alzheimer’s Disease  
   
  449  
   
  Fig. 7. Performance improvement without cognitive priming (control group).  
   
  emotions and thus improve their learning capabilities. For instance, in the case of learning medical applications, medical students try to solve a medical case by reading the symptoms, performing analysis, choosing a diagnosis, and performing medical actions. We can modify our system to perform cognitive priming of the missing information when it detects that their negative emotions are increasing.  
   
  6 Conclusion In this paper, we introduced a novel approach which uses cognitive priming as a nonpharmacological treatment for SCD patients. Thus, we created a cognitive priming system for SCD patients aiming to investigate the effect of the cognitive priming technique on their emotions and memory. The experiments were divided into two groups. For the first group, the system performed the cognitive priming technique. The second group was our control group, so the system did not perform cognitive priming. Results showed that our system can increase memory performance using cognitive priming. In addition, results showed that cognitive priming system can reduce negative emotions. Besides SCD treatment, this system could be used to help reduce learners’ negative emotions by performing cognitive priming of their missing information. Acknowledgment. We acknowledge NSERC-CRD (National Science and Engineering Research Council Cooperative Research Development), PROMPT, and Beam Me Up for funding this work. Thanks to Alexie Byrns who contributed to the experiments. We also acknowledge the contributions of Sylvie Belleville and Marc Cuesta from IUGM (Institut Universitaire de Gériatrie de Montréal).  
   
  450  
   
  H. Ben Abdessalem and C. Frasson  
   
  References 1. Benoit, M., et al.: Behavioral and psychological symptoms in Alzheimer’s disease. Dement. Geriatr. Cogn. Disord. 10, 511–517 (1999) 2. Boyle, P.A., et al.: Attributable risk of Alzheimer’s dementia attributed to age-related neuropathologies. Ann. Neurol. 85, 114–124 (2019) 3. Jessen, F., et al.: A conceptual framework for research on subjective cognitive decline in preclinical Alzheimer’s disease. Alzheimer’s Dementia 10, 844–852 (2014) 4. Tsoi, K.K., Chan, J.Y., Ng, Y.-M., Lee, M.M., Kwok, T.C., Wong, S.Y.: Receptive music therapy is more effective than interactive music therapy to relieve behavioral and psychological symptoms of dementia: a systematic review and meta-analysis. J. Am. Med. Dir. Assoc. 19, 568–576 (2018) 5. Abdessalem, H.B., et al.: Application of virtual travel for Alzheimer’s Disease. In: 9th International Conference on Sensor Networks, pp. 52–60 (2020) 6. Ben Abdessalem, H., Ai, Y., Marulasidda Swamy, K.S., Frasson, C.: Virtual reality zoo therapy for Alzheimer’s disease using real-time gesture recognition. In: Vlamos, P. (ed.) GeNeDis 2020, pp. 97–105. Springer International Publishing, Cham (2021). https://doi.org/10.1007/ 978-3-030-78775-2_12 7. Byrns, A., Abdessalem, H.B., Cuesta, M., Bruneau, M.-A., Belleville, S., Frasson, C.: EEG analysis of the contribution of music therapy and virtual reality to the improvement of cognition in Alzheimer’s Disease. JBiSE. 13, 187–201 (2020). https://doi.org/10.4236/jbise.2020. 138018 8. Abdessalem, H.B., Byrns, A., Frasson, C.: Optimizing Alzheimer’s disease therapy using a neural intelligent agent-based platform. IJIS 11, 70–96 (2021). https://doi.org/10.4236/ijis. 2021.112006 9. Tulving, E., Schacter, D.L.: Priming and human memory systems. Science 247, 301–306 (1990). https://doi.org/10.1126/science.2296719 10. McCabe, B.W., Baun, M.M., Speich, D., Agrawal, S.: Resident dog in the Alzheimer’s special care unit. West J. Nurs. Res. 24, 684–696 (2002). https://doi.org/10.1177/019394502320 555421 11. Bradt, J., Magee, W.L., Dileo, C., Wheeler, B.L., McGilloway, E.: Music therapy for acquired brain injury. In: The Cochrane Collaboration (ed.) Cochrane Database of Systematic Reviews. p. CD006787.pub2. John Wiley & Sons, Ltd., Chichester, UK (2010). https://doi.org/10.1002/ 14651858.CD006787.pub2 12. Geretsegger, M., Elefant, C., Mössler, K.A., Gold, C.: Music therapy for people with autism spectrum disorder. Cochrane Database Syst. Rev. 2014, CD004381 (2014). https://doi.org/ 10.1002/14651858.CD004381.pub3 13. Moreno-Morales, C., Calero, R., Moreno-Morales, P., Pintado, C.: Music therapy in the treatment of dementia: a systematic review and meta-analysis. Front. Med. 7, 160 (2020). https:// doi.org/10.3389/fmed.2020.00160 14. Jraidi, I., Chalfoun, P., Frasson, C.: Implicit strategies for intelligent tutoring systems. In: Cerri, S.A., Clancey, W.J., Papadourakis, G., Panourgia, K. (eds.) ITS 2012. LNCS, vol. 7315, pp. 1–10. Springer, Heidelberg (2012). https://doi.org/10.1007/978-3-642-30950-2_1 15. Del Cul, A., Baillet, S., Dehaene, S.: Brain dynamics underlying the nonlinear threshold for access to consciousness. PLoS Biol. 5, e260 (2007). https://doi.org/10.1371/journal.pbio.005 0260 16. DeVaul, R.W., Pentland, A., Corey, V.R.: The memory glasses: subliminal vs. overt memory support with imperfect information. In: Seventh IEEE International Symposium on Wearable Computers, 2003. Proceedings. pp. 146–153. IEEE, White Plains, NY, USA (2003). https:// doi.org/10.1109/ISWC.2003.1241404  
   
  Emotional Impact of Cognitive Priming on Alzheimer’s Disease  
   
  451  
   
  17. Lowery, B.S., Eisenberger, N.I., Hardin, C.D., Sinclair, S.: Long-term effects of subliminal priming on academic performance. SSRN J. (2006).https://doi.org/10.2139/ssrn.937950 18. Chalfoun, P., Frasson, C.: Showing the positive influence of subliminal cues on learner’s performance and intuition: an ERP study. In: Aleven, V., Kay, J., Mostow, J. (eds.) ITS 2010. LNCS, vol. 6095, pp. 288–290. Springer, Heidelberg (2010). https://doi.org/10.1007/978-3642-13437-1_47  
   
  Combining XR and AI for Integrating the Best Pedagogical Approach to Providing Feedback in Surgical Medical Distance Education Yves S. Nkulu-Ily(B) University of Kentucky, Lexington, KY 40506, USA [email protected]   
   
  Abstract. This position paper maintains that learners’ involvement and accurate representation through cues and stimuli are essential aspects of an AI-guided XR app for learning surgery. It then shows how and why it is crucial to conduct expert interviews when designing/developing such an app. A multidisciplinary team of 22 experts was interviewed to provide insights into new visual technologies’ intercommunication (i.e., Extended Reality-XR, Artificial Intelligence -AI or Machine Learning-ML, and 360° videos) and the pedagogical aspects (i.e., educational theories, techniques, and practices) of designing an XR system supported by an ML-based subsystem. These insights are about instructional design elements to maximize the impact of simulation-based training (SBT). The paper guides educational games for medical surgery design and user experience theory and concepts. It shows how to capture the actual task’s and environment’s fundamental characteristics expressing realistic behaviors. It shows the significant issues (e.g., occlusion and the use of instruments) in capturing these tasks and possible options to overcome them (e.g., using video feeds from endoscopies and robotic surgery). It also provides practical opportunities for facilities in resource-constrained regions lacking internet access/reliability/speed. For qualifying impact, this paper provides the best way to measure learning experience return on investment for medical education. Keywords: extended reality · artificial intelligence · intelligent system  
   
  1 Introduction The higher level of realism in implementing appropriate pedagogical theories, practices, and techniques for medical education, the better the learning process is continuously modified during the performance and even post-hoc. At least, that is what is expected of orthopedic physicians training in an extended reality (XR)/artificial intelligence (AI) and distance education (DE) environment. I.e., the media (technology) cannot influence learning. Learning is influenced by pedagogical methods used in the media (or by a live teacher with the same amount and type of learning). Making things hard is the trying to incorporate the right way to learn better, and desirable difficulties of Bjork best demonstrate how surface learning often fails in the © The Author(s), under exclusive license to Springer Nature Switzerland AG 2023 C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 452–466, 2023. https://doi.org/10.1007/978-3-031-32883-1_41  
   
  Combining XR and AI for Integrating the Best Pedagogical Approach  
   
  453  
   
  long run. Desirable Difficulties or a considerable but desirable amount of effort in the initial learning period is a research-based principle for teaching and learning, leading to improved long-term performance [5, 6]. This difficulty level should involve a small investment of time and effort in spaced activities, calling for generation and self-testing through feedback to translate into significant learning gains identified as a desirable level of difficulty opening a window of learning opportunity [20]. It also looks like the information processing theory and the descriptive theory of skill acquisition align with the Challenge Point Framework (CPF) [21] and desirable difficulties [9]. I.e., challenges in a learning environment should match learners’ abilities. The CPF, coined by Guadagnoli and Lee [14], helps in the effects of various practice conditions’ conceptualization in motor learning by relating practice variables to the individual’s skill level, task difficulty, and information theory concepts. Hence, any raises in task difficulty may considerably impact learning potential with a reverse impact on performance, i.e., maximizing learning while minimizing any harm to performance in practice determines the optimal challenge point (OCP). It is believed that such a learning environment can create a model of success in which learning becomes inherently rewarding and enjoyable. However, “students may not engage in retrieval practice in their natural educational settings due to lacking metacognitive awareness of the mnemonic benefits of testing.“ Retrieval information practice through testing the latter positively impacts long-term retention and learning [19, 25]. In different terminology, Metcalfe’s [20] Region of Proximal Learning, Hitchcock and Mcallister’s [17] OCP, and both Hartwig and Dunlosky’s [16] Zone of Proximal Development (ZPD) and Desirable Difficulties refer to a similar concept, that students engage in independent learning and practice, which should be pretty tricky, but at an acceptable level. Students are challenged enough to maintain their focus, and they can learn new concepts with guided assistance and scaffolding. Then, as the learning proceeds, the support structure is slowly removed. While Verenikina [30] refers to the ZPD as scaffolding’s theoretical foundations, De Guerrero and Villamil [15] refer to scaffolding as ZPD’s metaphor. ZPD and scaffolding also seem synonymous in that they both suggest learning with adult guidance or more capable peers’ collaboration exceeds independent learning. The ZPD, or OCP, is a tool instructor can use to make complex decisions about when to give extra scaffolding. Reiser [23, 24] points out that scaffolding is possible by structuring and problematizing and argues the interest in taking advantage of software tools to scaffold learners’ complex tasks. These software tools can be used in structuring learning tasks while guiding learners through critical elements that support their planning and performance. Since learning strategies creating desirable difficulties in the learning environment are most effective for learning outcomes’ long run, Biwer et al. [4] demonstrated that these findings are reliable for practical students’ training in higher education (i.e., positive effects on knowledge about effective learning strategies and increased practice testing use). Finally, beyond OCPs’ potential maximizing for surgical training, Gofton and Regehr [13] also stress the irreplaceable value of a mentor. These approaches – i.e., OCP, desirable difficulties, scaffolding, and ZPD – seem related and should not be considered separately for their application in a medical or  
   
  454  
   
  Y. S. Nkulu-Ily  
   
  surgical AI/XR environment where practicing is a must. Such an environment has a high cognitive load (CL) for learners unfamiliar with it. Software tools can be leveraged for that purpose, and the interactivity effect of CL theory elements can help determine when to achieve “Desirable Difficulties.“ Hence, this paper aims to investigate how to integrate pedagogical aspects by combining AI, XR, and 360° videos to improve the learning curve in Orthopedic Surgery DE.  
   
  2 Background/Purpose This study will explore the use of XR, AI, and 360° videos in orthopedic surgery DE, focusing on understanding the appropriate level of realism for different learning stages (1–5 categorization) and using deep learning (DL) algorithms for skill training. An XR/AI system for competency-based training and assessment in orthopedic surgery DE, with live instructors lead 360° Procedure training with prerecorded elements, programmatic skills modules using augmented reality (AR), and AI-driven models for visual performance assessment, will be developed. As a potential further extension to the subsystem, a rule-based agent (i.e., CPF), with either tutor-specified or automatically learned rules, will be used to implement an ‘Adaptive Course Sequencing System (ACSS),’ such as Alzahrani et al. [2] model. Depending on students’ pedagogical capabilities and immediate needs, their intelligent pedagogical tutoring system can autonomously adjust its level of guidance; the instructor or students can do so too. The to-be-implemented ACSS will allow residents to grant the subsystem a level of autonomy in guiding them through cases of varying levels of difficulty and on different issues to assist them in becoming sufficiently competent in one subject before moving to another and suggesting appropriate sequences of points to optimize each resident’s learning experience.  
   
  Fig. 1. Learning Model  
   
  The focus is also on understanding how to use AI to provide feedback for reinforcement and assessment within the XR application and effectively communicate that feedback to users (see Fig. 1). In the trial, the intervention will be feedback to surgeons/medical students; 50% get feedback from technology and the other 50% from a human instructor.  
   
  Combining XR and AI for Integrating the Best Pedagogical Approach  
   
  455  
   
  3 Materials/Method Interviews and user surveys, with follow-up interviews, were conducted via email or Zoom, and 22 pieces of feedback from experts from the industry and academia were gathered. A few interviewees provided detailed, discipline-centered answers (i.e., sims in surgery and medical education). Some also did not have the time or inclination to write/answer the immediate Ph.D. length response needed to answer these questions correctly. Some others probably gave helpful answers to about 25% of them to prioritize their current deadlines and paid work. Based on the questions (see Appendices), user experience (UX) departments were contacted, especially for answers to human–computer interaction (HCI) questions related to AI and XR applied to surgical training. The other lines of inquiry touched on quite a few topics, including the application of AI (1) for pedagogical purposes, (2) for tracking a candidate’s movements, procedures, etc., based on video observations, and (3) for assessment and feedback. Twelve questions were more technical and back-end related, so data science or computer science experts were contacted for their perspectives. Nine out of the seventeen questions focused on medical and pedagogical aspects of the simulation, so experts from Educational Technology, Medical Education, and Orthopedic Surgery were sought for their perspective. Finally, industry experts and an international research organization were reached out to for synergetic expertise. (see Table 1). Table 1. Summary of the number of experts per category.  
   
  The need to use semi-structured user surveys/interviews with foundational questions was to propose insights improving XR medical education applications’ design knowledge for non-Medical XR people. It was also unclear to which extent the XR application and AI would communicate with one another to integrate pedagogical aspects.  
   
  4 Practical Implications The goal of developing an AI-guided XR tool for learning surgery (Orthopedic surgery) in DE is to understand how learning works in a medical education context. Most aspects of the learning trajectory are certainly similar for both an orthopedic and an appendix surgeon. The overall question is how to ensure the simulator training skills transfer to real life. Procedural motor learning requires practice in a realistic environment. It also involves variation in the training and adaptability of the training difficulty to match the student’s  
   
  456  
   
  Y. S. Nkulu-Ily  
   
  progress and improve both long-term memory and transfer of learning. It is essential for motivation and efficiency of learning to keep challenge and ability in lockstep. Otherwise, people get bored or intimidated by the tasks being too challenging, both of which result in the individual losing motivation to complete the training. Using the CPF adds variability in guidance that can be helpful to the learner. CPF simulations can be used to provide training examples so that the AI model can be trained. After training the AI model, the simulation may incorporate the model to show how well the AI model would work. Simulation is based on some formulas and assumptions, but actual operations from learners can be any type and in the wilderness/real-world (i.e., they are not controlled, and many unexpected operations/scenarios may occur). OCPs should be determined for each level of the learner. Each surgical skill or task will have its own learning curve that will be individualized for every learner. A decision should be made about where the limits of simulation are. The setback is that, at some point, the OCPs will require actual patient encounters; learning in the simulation will be asymptotic and a waste of time. Fortunately, deliberate practice, when used in addition to mentorship, is an excellent method to improve learner performance while shortening the growth phase of the learning curve [7, 12]. 4.1 How Will the AI Determine a Failure or Successful Event? In terms of how the AI will determine a failure or successful event, it may be helpful to define specific criteria or metrics that the AI can use to evaluate performance. These criteria or metrics could involve using data on the user’s movements and actions within the simulation, as well as other relevant factors such as time taken to complete the task or the accuracy of the user’s actions (e.g., through imitation by labeling images/videos and comparing “Ghost images” vs. “Real-world images,” [11]). However, generally speaking, AI is only “intelligent” in finding patterns in data. With the right AI algorithm, good training data, and optimal parameters, the AI could effectively be trained to recognize a “failure” or “success” event by seeing enough examples of each event. I.e., DL will need to be trained on hundreds of hours of video labeled by experts. Good refers to quality, right relates to functionality, and optimal refers to a balance between different attributes, such as performance vs. safety. The alternative would be that, rather than using a proper “AI,” the designer/programmer could manually determine a set of rules or heuristics that a program can use to determine failure or success. AI systems are generally based on goal functions (also called utility functions or the results from “criteria or metrics”). To know how to react (no matter if the AI learns or reacts), the AI system must compare alternative “actions” or picks to make decisions. Even in some expert systems, where no goal functions seem to be implemented, there are goal functions in place, but they are binary (generate true or false values for each step). Most of the work could go into the design of such a function. Most code in a chess computer player is based on the chess rules, which is the foundation of how the goal function can assess each “game position.” The AI could then use this information to provide feedback to the user and assess their performance. It may also be helpful to consider how the AI can be integrated into the XR application in a way that is seamless and intuitive for users. Whether the trained AI evaluator eventually is to be built into the XR application would reduce friction (i.e.,  
   
  Combining XR and AI for Integrating the Best Pedagogical Approach  
   
  457  
   
  it would allow for a better user experience). Yes, integration could be advantageous if program complexity can be held at a minimal level. There is no need to integrate it into the XR application as long as it is connected to the internet. However, once the model is trained, it should be relatively light on resources, so building it in should be possible. 4.2 AI Integration into the XR Application For the integration of the AI into the XR application, the considerations should weigh the AI’s performance needs/power consumption, especially when running on low power or low battery capacities devices. Mobile phones/tablets or standalone Head-mounted displays (HMDs), and response times – both from the perspective of how fast the AI can compute on the target hardware, as well as any latency introduced by having the AI running off device (e.g., in the cloud). For low-resource countries, another consideration is internet access/reliability/speed. Though running this AI off-device/in the cloud (i.e., content library; see Fig. 1) in places where internet access is reliable and fast enough would not be advantageous, it would serve as a backup solution in low-resource countries. Also, any hardware integration has its challenges. Using any XR with less than 60 Hz frame rate is not advisable because users will get nauseous. For the other applications, this determination will be based on the HCI and how close it is to the natural motion to which the skill will transfer. Holding a mouse or using a keyboard is a far-transfer skill for many of the skills taught unless they are cognitive or knowledge-based skills. Why is XR HCI a critical consideration too? XR HCI is not natural to the inputs used in surgery. Although some surgical robots use Xbox-type controllers (Auris), most do not have any joystick similar to what real surgeons use. XR applications that use natural hand motion have not had excellent fidelity for inputs and again have the same issue with occlusion and instrument handling. Some folks are looking at 3D-printed controls that look similar to the real thing but have built-in sensors (accelerometer, gyroscopes, etc.). Many commercial entities in the orthopedic space using XR (e.g., OssoVR, Precision OS, etc.) have some data, but they have not yet been validated or transferred to surgical skill. XR has a high CL for learners unfamiliar with it and can actually detract from the learning. How will the AI be integrated into the XR application to provide feedback? The guidance AI needs for the kind of feedback that will be provided is in terms of the values of the indicators established for data format or transfer process (i.e., the scales users are evaluated on). What is the point here? The guidance AI needs should be related to the type of categorization (e.g., Likert scale 1–5 or 1–10, etc.) for different learning stages. The Likert scale is a simplification to allow for expert review. 1–10 does not allow for humans to really make a sound judgment and drops the inter and intra-rater reliability. AI does not have this problem. It will analyze the experts (with a tight, narrow definition) to create the algorithm. The economy of motion has been the most significant area researched that can distinguish between novices and experts. That is on a continuous variable and not Likert. Given enough high-quality data and training time, a DL model should be able to learn an association between a video of a novice and a video of an expert. The question is really whether those ratings are satisfactory. With a clear definition of success states for each scale/level, the experience levels can be gated; i.e., users must succeed in the  
   
  458  
   
  Y. S. Nkulu-Ily  
   
  first level (or scale) to go to the next one. In each part of the experience, a decision must be made on what constitutes success and if the user can repeat the level to achieve a higher score. Users will be evaluated on a scale of 5 (skilled) to 1 (novice). However, scaling is dynamic according to needs, so any scaling method can be used depending on the AI system design. The same scale or different scales can be used. An attractive alternative could be to use raw data as input for the AI machinery to estimate probabilistic states [28]. A continuous variable would be used instead of a Likert one. However, if different scales are used, they must be rescaled to keep values consistent, i.e., the AI scale must be mapped with the one used in XR. Realism and Sophisticated Behaviors Based on a Likert scale measurement, how much fidelity would be needed? The question of how much fidelity is needed is hard to answer because the measurement of performance or learning is pretty blunt (1–5 categorization). Many things are being learned: anatomy, clinical knowledge, motor skills, procedures, and problem-solving. These can all be measured more precisely than 1–5 categorization. Each stage has specific goals (say, instrument familiarization and location in the training device). Moreover, there is no quick fix to design for anyone to capture and analyze sophisticated behaviors in real time for skill training. Learning is influenced by teaching methods provided in the media or by a live teacher with the same amount and type of learning. Teaching is complex, though, and no ‘best practice’ can be transferred from one situation to another. Expert teachers intuitively assess each learner’s current cognitive knowledge and affective state through engagement with the learner. How will this complexity be addressed? The app, through the ACSS, will automatically use the ZPD or OCP to make complex decisions about when to give extra scaffolding. Given that teaching is complex, what useful strategies could then be used to design the application to capture and analyze sophisticated behaviors in real-time? To design the application to capture and analyze sophisticated behaviors in real-time, high-speed videography and motion capture technology may be considered to replicate a tactile experience with real haptic feedback. The preceding reasoning could also involve using 3D assets and hardware that provide haptic feedback to the user, such as haptic gloves or other wearable devices. However, haptic feedback devices are very cool. Unfortunately, this technology is still in its infancy to date, and therefore, there are not yet any well-supported, commercially available haptic feedback devices that would work for this kind of app. Moreover, AI models cannot currently learn these sophisticated and tacit processes. The only way forward is to develop AI-human interfaces that help teachers and/or learners with these complex interactions. AI will catch the behavior of the user and see if the behavior is at or close to the right move. DL part will also require a lot of labeled data with many example videos (perhaps hundreds of hours) labeled by experts. There are commercial entities actually working on this aspect. With computer vision, movements can be tracked; the most significant issues obviously come with occlusion and the use of instruments. Some companies are working on overcoming these. The most successful applications (like Proximie) use video feeds from endoscopies and robotic surgery where only instruments are tracked, not the hands. The preceding is a precious  
   
  Combining XR and AI for Integrating the Best Pedagogical Approach  
   
  459  
   
  line of research, in any case. To allow anyone to capture, equipment and setting must be standardized. This is why laparoscopy and robotics are the first areas to look at this. An attractive alternative would be to add educational games with stealth assessment and built-in learning dashboards for instructors to provide real-time feedback [27]. The continuous interaction with stealth assessment produces rich sequences of actions as data points that the stealth assessment captures in log files. Stealth assessment rubrics automatically score these aggregated data in real-time by Bayesian networks (or other statistical models). This process shows evolving mastery levels on targeted competencies [27]. 4.3 AI-Human Interfaces or Educational Games’ Best Pedagogical Practices In determining the best pedagogical practices for these AI-human interfaces or educational games, the best practice is scaffolding the learner depending on their abilities and performance. The best application will keep them engaged at the edge of their abilities and increase the difficulty over time. The best formative will give them subtle feedback, and the experience guide them in what is right and wrong (similar to video games). Real-time feedback has to be immediate, succinct, actionable, and straightforward. Education around performing the task should be embedded in the experience. Summative performance data should delineate their skill level in separate domains (e.g., accuracy, efficiency, etc.). In learning applications, pedagogical agents are usually used. I.e., some characters communicate with each other with the user. This agent will also provide feedback later. In some applications, for example, a teacher or scientist character guides the user. AI needs to learn from each domain of the skill the novice’s delta from an expert. For example, they may be accurate but not efficient. This information needs to be communicated in some way to both the AI to evaluate and feedback to the user. In terms of using AI to provide feedback for reinforcement and assessment, it would also be essential to consider what information is most relevant and valuable for the users to receive. It may also be that showing/not showing this information is more appropriate/valuable at different stages in the educational pipeline. This decision may depend on the stage of learning and the specific skills being trained [26]. However, formative feedback is best served immediately and summative after each experience or set of experiences. For example, novice learners may benefit more from detailed explanations of how to perform a task, while more experienced learners may benefit more from feedback on their specific performance. It may also be helpful to consider different ways of communicating feedback to users, such as through visual or auditory cues within the simulation or more detailed reports or analyses provided later. Feedback should be multimodal (sounds, lights, vibrations, etc.) and nearly immediate. There are UX guidebooks on best practices. It should not distract from the experience but be very clear and succinct to the user, as in video games. At first, it would be desirable to try to make it accessible later. If it is built within the simulation, then only with sufficient data can the AI model tell if anything is wrong on the fly – the goal is to correct behaviors in real-time. Likely all the information listed will  
   
  460  
   
  Y. S. Nkulu-Ily  
   
  be needed, which means the context is leaning towards game design and user experience theory and concepts here—like a car racing simulator or Game, such as Forza 7. Regarding the relevance of the Game’s use, a few points must be considered carefully. Though serious games for medical education and surgical skills training can apply here, there are several concepts related to using games in medical learning. These concepts include: 1. The use of games in medical practice is still limited, and their use is only limited as a companion to the leading learning media. The understanding is that only AR and Virtual Reality (VR) expose medical models, and only a few have interactions (such as surgical practice). 2. Referring to the articles on JMIR Serious Games, the use of games is still limited to understanding the material, not the practice of surgical operations. 3. There are several VR applications with educational content on human anatomy, but there are still very few specifically related to surgery. 4. There are some medical games, but they are only for fun, not entirely educational games. 5. The experience must be embedded in an environment that reinforces skills through the gameplay without blindly putting on badges, scoring, and leaderboards. These should be meaningful to the experience. 6. Game-based stealth assessment seems valid, reliable, and improves learning [27]. 7. For DL, medical expert systems are suitable, and Ripple-Down Rules (RDR) may be more relevant [10]. I.e., combining ML and RDR, particularly RDR systems that recognize a case outside their competence. RDR is easier to implement on insufficient data than AI. 4.4 A Pedagogical Approach to Errors in a Simulated Environment Educators teach students about errors to help avoid them. Residents can make mistakes in the simulated environment since that is how they learn, so they should fail in a simulated environment rather than in real life. However, in general, the understanding of the research is that teaching about errors tends to increase the mistakes, not decrease them. In medicine, many (some say most) errors are due to missed condition/action situations. For example, forgetting to do something, and the second most frequent error is “doing something wrong,” missing steps in a procedure, or implementing the wrong approach for the conditions. In both cases, the error is sometimes due to the instructor skipping over a step or steps in a procedure/assessment that misses the student’s failure to remember the actions or process. Adequate instruction, practice, and corrective feedback should help avoid future errors. In some cases of coaxers, students become distracted and cause errors despite solid education. 4.5 Multi-device Considerations When Designing/Developing the App When developing an app. to be used for multi-devices, then one consideration that should be taken into account is whether this app can be available for multiple devices or require XR devices. The only natural way to understand it is to actually trial it since these  
   
  Combining XR and AI for Integrating the Best Pedagogical Approach  
   
  461  
   
  devices have many pros and cons (See Appendices, Table 2). However, potential issues with any preferences can be factored in at the start of a process. I.e., eliminating specific approaches due to technical limitations, pedagogic goal matching, budget constraints, and assessing possibilities. Here again, the cost is the most significant consideration. Also, any hardware integration has its challenges. Using any XR with less than 60 Hz frame rate is not advisable because users will get nauseous. For the other applications, this determination will be based on the HCI and how close it is to the natural motion to which the skill will transfer. Holding a mouse or using a keyboard is a far-transfer skill for many of the skills taught unless they are cognitive or knowledge-based skills. Broadly processing/computational power differs across all the devices, and the delivery modality (i.e., User Interface or UI and UX) will (or at least should) differ depending on whether mobile, XR headset, desktop, etc. The Oculus Rift is a high-powered 3D headset, whereas a Google Cardboard uses phones, so its power will depend on the quality of the user’s phone. VR headsets can provide 3D video, whereas smartphones, tablets, etc., will not. Fortunately, real-time engines (e.g., game engines Unity or Unreal) provide XR, support multiple platforms, and can connect to MATLAB by socket connection. So, an educational experience can be deployed to multiple platforms if the app is developed correctly to ensure it runs on multiple platforms. 4.6 Data on Decisions and Actions Source Event data is excellent depending on how the analytics are hooked up moment by moment. Still, a data plan is needed to clean, analyze, and visualize meaningful data. Secondary validation information like the Objective Structured Assessment of Technical Skill (OSAT) and expert reviews can help validate the AI assessments. I.e., the outputs will need to be compared to some established, validated form of data. XR and AI materials are all predicated on what is being done. Moreover, AI is good at classification and regression. Generation based on such technologies as stable diffusion is also in fashion. However, it is bad at identifying what is not known as unknown. It even tells seemingly plausible lies. Simply, it is lax, which is AI’s limitation today. When 100% guaranteed information is a requirement, it is too harsh for AI. Reinforcement learning algorithms are probably appropriate when inputting users’ scales to train AI systems is required. Getting information on a finer scale would be better, but if it is difficult to require that of humans, it would be advisable to use 1–5 scales. 4.7 Used AI Methodology/Realized Experimentation in Neurosurgery The Force sensor (i.e., educational system) lays a basis for integrating AI and VR simulation into surgical education with an algorithm distinguishing between two groups of expertise, objective feedback based on proficiency benchmarks, and instructor input [22]. Its rich digital output can establish a robust skill assessment and sharing platform for orthopedic surgical performance and training. Beyond distinguishing between  
   
  462  
   
  Y. S. Nkulu-Ily  
   
  groups of expertise, objective feedback based on proficiency benchmarks, and instructor input, the force sensor (i.e., using the support vector machine learning model) [22], SmartForceps data app [3], and tool-tissue forces in Newton (i.e., using deep neural networks) [1] can help improve training in orthopedic surgery and allow avoidance of these errors and resulting complications. The latest deep learning models (i.e., deep neural networks) can capture more parameters for performance metrics and perform more realistic simulations. 4.8 Learning Experiences in Healthcare Return on Investment (ROI) for Education – Measure “The level of expertise of surgeons performing procedures should be reported” to determine whether the technique or surgeon’s poor execution – of the technique – led to poor results. Not only is comparing results between surgeons with significantly different levels of expertise invalid, but this critical information is also generally missing from published articles. [29] A well-defined expertise definition includes (1) Non-specialist, (2) Specialist – less experienced, (3) Specialist – experienced, (4) Specialist – highly experienced, and (5) Expert [29]. Whether expertise or performance is measured, performance is usually measured by OSATs. However, surgical procedures’ performance and improved learning curves are rarely measured [7]. The technology vs. human comparison is a ‘teaching method one vs. teaching method 2’ study of the kind Clark [8] discouraged many years ago – on the ground, such comparisons are confounded, always. In this case, the question is: how does the feedback differ between the two conditions (other than the delivery via machine vs. human)? If the feedback has the same information, frequency, and structure, there should be no difference in outcomes. If they are different in any of these regards, those differences presumably underlie the results. If, for example, the machine can provide more or more frequent feedback and/or practice, then this is perhaps the basis of the difference, not the circumstance of machine vs. human. A suggestion to make the subsystem more “intelligent” would be by noting residents’ responses to individual cases in a way previously done for students learning computer programming [18]. Their system records every student interaction with it, providing a rich data set for analysis. Then, statistical pattern recognition and ML techniques automatically identify the “common mistakes” for each type of case. This improved subsystem should respond appropriately to a more comprehensive range of resident errors, including the possibility of mistakes that even an experienced tutor may not have anticipated.  
   
  5 Conclusion This qualitative interview is not a general survey, and these are complicated questions that require either substantial experience in this area of research or research investigation in their own right. Many of them are complex and not necessarily “solved” – many are thesis topics on their own that are probably better answered by someone with a background in education (i.e., educational technology or medical education).  
   
  Combining XR and AI for Integrating the Best Pedagogical Approach  
   
  463  
   
  This paper describes early-stage research that is setting out to investigate how AI, XR, and 360° videos should communicate to integrate the best surgical medical education approach from the perspective of an Instructional Systems Designer. However, the biggest question in this research is where do learners need to be on the learning curve before and after the XR experience. Can they start at zero (XR is their first experience with that surgery), or do they need some base knowledge? Different interactive elements of XR will support different levels (i.e., a learner just needing to know anatomy does not need a highly interactive, game-based experience to build foundational knowledge, but a more advanced learner will). Ultimately at which point is XR not enough for the learner? When do they need actual cases to advance their learning? According to Wang [31], no perfect product allows the fusion of AR, AI, and machine translation technologies. So, the intention should not be to fuse the models/technologies. AI and XR may be used together collaboratively without being fused. The RDR can be combined with the CPF and stealth assessment with built-in learning dashboards to help residents avoid mistakes while improving long-term retention and transfer of learning. Rules should be used to establish WHEN and HOW to deliver feedback to the learner. Different types and timings of feedback are applicable to different users. Finally, a straightforward way to design a goal function is to use the error between the resident’s operation and the instructor’s operation – because recorded operation steps and trajectories, and those from the residents are already available, they may be compared to get the errors. Other kinds of goal functions may also be used.  
   
  Appendices  
   
  Table 2. Hardware’s pros and cons.  
   
  464  
   
  Y. S. Nkulu-Ily  
   
  Sample Questions (Interviews/Questionnaire). The questions are way too detailed and the application domain very specialized. A lot of this set of opening questions are early questions, which means that refinement or more context will be given to answer where possible. 1.  
   
  2. 3. 4.  
   
  5. 6. 7. 8. 9. 10.  
   
  11.  
   
  12. 13. 14. 15. 16. 17.  
   
  How can I design for anyone to capture and analyze sophisticated behaviors in realtime in applying the field of high-speed videography of movement and its analysis by DL algorithms to skill training? Data format or transfer process: Users are evaluated on a scale of 5 (skilled) to 1 (novice). Should that be the same scale used in values sent to the AI? Would it be better for the trained AI evaluator eventually be built into the XR application? What is the best practice regarding pedagogy here? I’m also not sure exactly what information I will have to show the users - is it information on how to perform the task, their performance in the task, or something else? Would it be advisable that this information be shown to the users within the simulation, or would it be better if it is accessible later? How will AI be used in application development to provide feedback for reinforcement and assessment? What is the best pedagogical approach to providing feedback, and how best to communicate that feedback? How will AI determine a failure or successful event since AI needs some guidance for the kind of feedback that will be provided? Which “serious games” for medical education and surgical skills training would apply here, please? What type of data do you think will be helpful for my study, and what collection method would you recommend? Additionally, can you outline the development process for producing XR/AI materials, please? I want the app to be available for Smartphones, Tablet, PC / MAC (desktop/Laptop), moreover, will also require the use of VR devices such as a Head-Mounted Device (HMD) like the Oculus Rift, HTC Vive, or Google Cardboard. What could be the potential issues with my preferences, please? Please outline the development process for producing materials using the Challenge Point Framework (CPF) (graph or diagram). Or can you please share some practical applications of the CPF to simulation-based medical education and training? For example: How can this framework be incorporated into a simulation? What are some of its potential limitations, and how can we address them? What 3D- assets, Motion capture technology, and hardware are there that could be implemented to replicate a tactile experience with real haptic feedback? Using a technology-authoring environment, how can you mock-up or storyboard a prototype for a type of learning experience you may envision learners going through to answer a research question related to AR/VR, please? (i.e., an Example or Sample in any aspect of surgery to give me an idea of such a prototype)  
   
  Combining XR and AI for Integrating the Best Pedagogical Approach  
   
  465  
   
  References 1. Albakr, A., Baghdadi, A., Singh, R., Lama, S., Sutherland, G.R.: Tool-tissue forces in hemangioblastoma surgery. World Neurosurg. 160, e242–e249 (2022) 2. Alzahrani, A., Callaghan, V., Gardner, M.: Towards Adjustable Autonomy in Adaptive Course Sequencing. In: Intelligent Environments (Workshops), pp. 466–477, Jul 2013 3. Baghdadi, A., Lama, S., Singh, R., Hoshyarmanesh, H., Razmi, M., Sutherland, G.R.: A data-driven performance dashboard for surgical dissection. Sci. Rep. 11(1), 1–13 (2021) 4. Biwer, F., oude Egbrink, M.G., Aalten, P., de Bruin, A.B.: Fostering effective learning strategies in higher education–a mixed-methods study. J. Appl. Res. Mem. Cogn. 9(2), 186–203 (2020) 5. Bjork, R.A.: Memory and metamemory considerations in the. Metacogn.: Knowing about Knowing 185(7.2) (1994) 6. Bjork, E.L., Bjork, R.A.: Making things hard on yourself, but in a good way: creating desirable difficulties to enhance learning. Psychol. Real World 2, 59–68 (2011) 7. Cafarelli, L., El Amiri, L., Facca, S., Chakfé, N., Sapa, M.C., Liverneaux, P.: Anterior plating technique for distal radius: comparing performance after learning through naive versus deliberate practice. Int. Orthop. 46(8), 1821–1829 (2022) 8. Clark, R.E.: Reconsidering research on learning from media. Rev. Educ. Res. 53(4), 445–459 (1983) 9. Chen, O., Castro-Alonso, J.C., Paas, F., Sweller, J.: Undesirable difficulty effects in the learning of high-element interactivity materials. Front. Psychol. 1483 (2018) 10. Compton, P., Peters, L., Edwards, G., Lavers, T.G.: Experience with ripple-down rules. In: International Conference on Innovative Techniques and Applications of Artificial Intelligence, pp. 109–121. Springer, London (2006) 11. Chinthammit, W., et al.: Ghostman: augmented reality application for telerehabilitation and remote instruction of a novel motor skill. BioMed Res. Int. (2014) 12. Delbarre, M., Diaz, J.H., Xavier, F., Meyer, N., Sapa, M.C., Liverneaux, P.: Reduction in ionizing radiation exposure during minimally invasive anterior plate osteosynthesis of distal radius fracture: naive versus deliberate practice. Hand Surg. Rehab. 41(2), 194–198 (2022) 13. Gofton, W., Regehr, G.: Factors in optimizing the learning environment for surgical training. Clin. Orthopaed. Relat. Res. 449, 100–107 (2006) 14. Guadagnoli, M.A., Lee, T.D.: Challenge point: a framework for conceptualizing the effects of various practice conditions in motor learning. J. Mot. Behav. 36(2), 212–224 (2004) 15. De Guerrero, M.C., Villamil, O.S.: Activating the ZPD: mutual scaffolding in L2 peer revision. Mod. Lang. J. 84(1), 51–68 (2000) 16. Hartwig, M.K., Dunlosky, J.: Study strategies of college students: are self-testing and scheduling related to achievement? Psychon. Bull. Rev. 19, 126–134 (2012) 17. Hitchcock, E.R., Mcallister Byun, T.: Enhancing generalisation in biofeedback intervention using the challenge point framework: a case study. Clin. Linguist. Phon. 29(1), 59–75 (2015) 18. Hunter, G., Livingstone, D., Neve, P., Alsop, G.: Learn programming++: the design, implementation and deployment of an intelligent environment for the teaching and learning of computer programming. In: 2013 9th International Conference on Intelligent Environments, pp. 129–136. IEEE (2013) 19. Karpicke, J.D., Butler, A.C., Roediger, H.L., III.: Metacognitive strategies in student learning: do students practise retrieval when they study on their own? Memory 17(4), 471–479 (2009) 20. Metcalfe, J.: Desirable difficulties and studying in the region of proximal learning. Successful Remembering and Successful Forgetting: A Festschrift in Honor of Robert A. Bjork, pp. 259– 276 (2011)  
   
  466  
   
  Y. S. Nkulu-Ily  
   
  21. Mills, B.: The role of simulation-based learning environments in preparing undergraduate health students for clinical practice (2016). Retrieved from http://ro.ecu.edu.au/theses/1786. Accessed 11 Oct 2020 22. Mirchi, N., Bissonnette, V., Yilmaz, R., Ledwos, N., Winkler-Schwartz, A., Del Maestro, R.F.: The Virtual Operative Assistant: an explainable artificial intelligence tool for simulation-based training in surgery and medicine. PLoS ONE 15(2), e0229596 (2020) 23. Reiser, B. J. (2002). Why scaffolding should sometimes make tasks more difficult for learners 24. Reiser, B.J.: Scaffolding complex learning: The mechanisms of structuring and problematizing student work. J. Learn. Sci. 13(3), 273–304 (2004) 25. Roediger, H.L., III., Karpicke, J.D.: The power of testing memory: basic research and implications for educational practice. Perspect. Psychol. Sci. 1(3), 181–210 (2006) 26. Shute, V.J.: Focus on formative feedback. Rev. Educ. Res. 78(1), 153–189 (2008) 27. Shute, V.J., Rahimi, S.: Stealth assessment. Rapid Community Report Series. Digital Promise and the International Society of the Learning Sciences (2022). https://repository.isls.org//han dle/1/7671 28. Shute, V., Ke, F., Wang, L.: Assessment and adaptation in games. In: Instructional Techniques to Facilitate Learning and Motivation of Serious Games, pp. 59–78. Springer, Cham (2017) 29. Tang, J.B., Giddins, G.: Why and how to report surgeons’ levels of expertise. J. Hand Surg. (European Volume) 41(4), 365–366 (2016) 30. Verenikina, I.: Understanding scaffolding and the ZPD in educational research (2003) 31. Wang, Y.: Analysis of the combination of AR technology and translation system. In: 2021 International Conference on Social Development and Media Communication (SDMC 2021), pp. 180–184. Atlantis Press (2022)  
   
  Adversarial Learning for Improved Patient Representations Bharath Shankar and Carol Anne Hargreaves(B) National University of Singapore, 6 Science Drive 2, Singapore 117546, Singapore [email protected]  , [email protected]   
   
  Abstract. In recent years, there has been an explosion in the amount of patient Electronic Health Records (EHR) made publicly available. This presents an opportunity to create predictive models that leverage the large amount of data to help guide healthcare worker’s decision-making capacity. However, Patient EHR data is often high-dimensional, sparse, temporal and multimodal. This presents an issue for predictive modeling with Machine Learning models, as many ML model archetypes are not built to handle these types of data. The temporality of EHR data also presents a complicating factor, as it contains multiple time series at different resolutions, which most ML models are not built to handle. This brings us to the topic of patient representation, which is the process of converting this raw EHR data into a dense, mathematical representation. Previous work in this field, however, has not leveraged the full potential of the data, since they opt to only deal with a single modality of data, or do not leverage the temporality of the data. In this paper, we attempt to create a network that creates a multimodal representation of EHR data by modeling it as a multiple sparse time series fusion task. We leverage transformers for sparse time series data, using a custom time-based positional encoding. We then fuse the data into a low-dimensional vector, which serves as our representation. We train the model on 2 separate tasks – Mortality prediction using a classification head, and we attempt to leverage a form of adversarial learning to improve the quality of the representation. We show that the patient representation extracted is meaningful and useful for downstream classification tasks. To our knowledge, this is the first attempt to leverage both adversarial learning and multimodality to create a patient representation. Source code can be found at: https://github.com/BharathSShankar/Patient-Rep-UROPS.  
   
  1 Introduction There has been an increase in the amount of publicly available Electronic Health Record data over the years. This increase has been instrumental in many recent advances in Healthcare Information Systems, where healthcare workers have their decisions supported by large amounts of easily accessible data [1]. A key result of this increase in publicly available data has been a rise in attempts to use Artificial Intelligence to aid healthcare workers in their decision-making process [2]. More specifically, deep learning-based approaches have shown their utility in this area [3]. There has been a great deal of work done in the field of Healthcare and AI [4]. DeepLearning based approaches have yielded great success in the domains of ECG signal © The Author(s), under exclusive license to Springer Nature Switzerland AG 2023 C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 467–476, 2023. https://doi.org/10.1007/978-3-031-32883-1_42  
   
  468  
   
  B. Shankar and C. A. Hargreaves  
   
  classification [5], EEG signal interpretation [6], medical image segmentation [7], among many other sub-domains in healthcare [4]. All of these advances in machine learning and AI were driven by advances in Deep Learning Architectures built to handle modalities of data such as images and text, increased compute capacity due to the advent of GPUs (and more recently, TPUs), as well as the aforementioned increase in publicly available medical data. 1.1 Need for Patient Representation However, EHR data presents a unique challenge for machine-learning models. EHR data often is high-dimensional, temporal, sparse, multimodal, heterogeneous, filled with null values, and often is extremely large scale. This presents issues for machine learning algorithms of all types. Thus, we need some way to condense all the information in the EHR into a dense, mathematical representation of the data. That way, downstream predictive models can use that dense representation of the data, instead of the raw patient data. This problem is known as the problem of patient representation [8]. A good patient representation should ideally be usable for downstream predictive tasks, and the representation should be meaningful. A meaningful representation implies that similar patients should have similar representations. Ideally, we would also want each individual feature to be semantically meaningful – i.e. – it corresponds to a real-world concept. This leads to why patient representation matters to healthcare workers. Trust is an important factor in the adoption of any system in any industry, especially the healthcare industry. Explainability, i.e., being able to explain why a certain decision was made by a Machine Learning model in terms understandable to healthcare workers is key in encouraging the adoption of Machine Learning systems, as well as to help eliminate any biases or errors that may exist in the model. Unfortunately, the explainability of any model is inversely proportional to its complexity. This gets even worse when dealing with deep learning models, which are often considered to be black boxes. A semantically meaningful patient representation offers us a way to both leverage the unparalleled feature extraction capacity of neural nets, as well as being able to offer some level of explainability for any output of the model, thus offering the best of both worlds. 1.2 Past Work Past work in the field of patient representation has leveraged many different forms of neural nets, and varied mathematical objects to embody it. The first studies in this area used artificial neural networks to extract patient representations from data as seen in Che et al. [9]. However, basic Artificial Neural Networks do not handle temporality, sequential data, nor unstructured data very well. This then necessitated a change in approach. We then saw autoencoder-based models, which consist of an encoder-decoder pair come into use for patient representation. Miotto et al. [10] used a stacked autoencoder (Multiple autoencoders stacked on each other) to come up with a general patient representation.  
   
  Adversarial Learning for Improved Patient Representations  
   
  469  
   
  However, these autoencoder-based architectures still suffered from a lack of feature extraction. Concepts of locality or temporality aren’t encoded into the features of an ANN, which necessitates modifications to the architectures. This brings us to the advent of CNN-based architectures. CNNs use convolution operations to create features from neighboring points in the data. Stacking these convolutional layers then create higher level features, and so on and so forth. Thus, CNNs have shown significant improvements over artificial neural networks in the realm of patient representation in particular, due to their ability to consider neighboring events as being associated with each other [11]. Modifications to CNNs, to explicitly accommodate temporality in the data have also been shown to improve the performance of patient representation. Clinical Notes are an essential component of patient data. They record key information that cannot otherwise be recorded. Thus, text analytics is another key front in the search for effective patient representation. Word2Vec approaches for word embeddings was a key innovation in the field of text representation. Word2Vec showed its efficacy in creating low-dimensional embeddings, as shown by Choi et al. in 2016 [12]. Recently, the advent of Transformer-based architectures, such as BERT, we have the possibility of dealing with sequence-based data extremely effectively. Transformers work by splitting up the data into tokens. It then creates a position embedding (usually based on the index of the datapoint in question), adds it elementwise to each of the tokens, and passes it through the attention mechanism. As seen above, the fact that each token is treated in relation to all the other tokens makes transformers a promising avenue for patient representation. Starting with Vaswani et al. [13], transformers have consistently been at the forefront of tasks ranging from generating text embeddings, as seen in BERT [14], Computer Vision (utilizing vision transformers [15]), among many, many other domains. Needless to say, transformers have shown significant progress in the realm of patient representation learning. Transformer-Based architectures have been used to cluster related concepts from clinical test data in the 2020 paper by Li et al. [16]. They have also shown great strides in dealing with the sparse time series data that is a key feature in clinical data, as evidenced in Song et al. [17]. We also have seen transformers being able to learn the underlying graphical nature of Electronic Health Records, using Graph Convolutional Transformers [18]. A key challenge of dealing with Patient data is leveraging the multimodality of the data. Multimodal data fusion is a problem that crops up in multiple disciplines, from image-text matching [19], to video classification [20]. Needless to say, there have been various studies attempting to fuse different modalities of patient data for both patient representation and other downstream tasks. Multimodal fusion techniques have been applied to fields ranging from cancer diagnosis [21], survival prediction [22], and even for diagnosis of mental illnesses [23]. Adversarial Learning has been shown to improve the quality of extracted representations [24]. The idea is that forcing a model to effectively spoof random data, while simultaneously attempting to maximize classification accuracy would provide more consistent representations of each patient. Patient representation has been shown to improve by the application of adversarial learning, as evidenced by De Bois et al. [25], as well as by Zhang et al. [26]. However, to our knowledge, there has not been an attempt to use  
   
  470  
   
  B. Shankar and C. A. Hargreaves  
   
  both adversarial learning and multimodal fusion on patient data, which is the gap that the following paper attempts to mediate.  
   
  2 Methods 2.1 Data Source MIMIC-III is a major clinical dataset for patient EMR [27]. It contains data from over 40,000 patients at the Beth Israel Deaconess Medical Centre in Boston, USA, collected over the course of 10 years, from 2001 to 2012. MIMIC-III has been used in a variety of studies in this field, and the data as a whole is well-documented and understood, making it an invaluable benchmark for the task of patient representation. 2.2 Preprocessing A Patient as a Sparse Time Series Data in the MIMIC dataset comes in the form of events at specified times. Thus, a natural way to represent a patient to feed into the model is as a sparse time series. However, as part of the anonymisation process, every observation for each patient has been shifted by a consistent and arbitrary amount. Given that we know each patient’s date of birth, we can then calculate the age at which each event occurred. Thus, we can use age as a consistent timestamp (Fig. 1).  
   
  Fig. 1. A representation of a patient as a sparse time series.  
   
  2.3 Model Time2Vec When examining the original transformer architecture, we see that we need to provide each input token vector with a positional encoding vector [14]. In the original paper on transformers, the positional encoding was derived from a function of the index. However, in our case, that positional encoding can no longer use the indices, due to the irregularly spaced nature of the time series. Thus, we need a way to convert the timestamp of the  
   
  Adversarial Learning for Improved Patient Representations  
   
  471  
   
  observation to a position embedding. The key insight of Time2Vec [28] is recognizing that the positional embedding is just that: a representation of the position of the token with respect to others. Hence, the timestamp is used to calculate the embedding as seen below: vt (x) = sin(Wx + b) where W and b are learnable parameters, x is the timestamp and vt is the vector representation of the timestamp. STraTS Out of all 7 modalities of data considered, 4 of them were of the form (variable, value, timestamp). We needed a way to consider both the value and variable being measured at each time stamp. Thus, we used a variant of STraTS [29] to encode the time series. STraTS is a method of using transformers to encode time series of differing lengths. STraTS encodes (variable, value, timestamp) triplets as 3 separate vectors by passing a numerical representation of each through a linear unit. We then add each of these 3 vectors element wise, which becomes the initial triplet embedding. We then pass these embeddings into multiple attention layers, followed by feed forward and norm layers. These allow for each of the individual embedding vectors to be considered in the context of the other embedding vectors, thus recovering multiple contextual embedding vectors. Finally, we fuse the embedding vectors using an attention fusion network, to recover a final embedding that represents the sparse time series as a whole. For the attention fusion layer, we consider vectors v1 , v2 ,…,vn as being the vector representation of each time point in the sparse time series. To get the weights α1 , α2 ,…,αn for each of the vectors, we pass them through a soft-maxed feedforward layer. The final fused vector is then vemb = α1 v1 + α2 v2 +…+αn vn (Fig. 2).  
   
  Fig. 2. A Description of a STraTS encoder  
   
  For the microbiology data, we have 2 categorical variables representing the specimen and organism available, and a response interpretation variable. This, along with the timestamp now makes up a quartet embedding. We use a slightly modified version of the Triplet Embedding alongside the transformer encoder layers and attention fusion layers to create embeddings for the microbiology data. Text Data We use a sentence embedding model (using the pre-trained Albert [30] model from  
   
  472  
   
  B. Shankar and C. A. Hargreaves  
   
  huggingface) to create embedding vectors for each clinical note made for each patient. It is then added elementwise to the embedding of the time data, to create a full embedding for each note event. Then, it is passed through an attention fusion layer to create a single embedding representing all notes taken of the patient (Fig. 3).  
   
  Fig. 3. Text Data Encoder  
   
  Adversarial Learning For the adversarial portion of the network, we used a simple MLP as a discriminator. We then randomly roll for an integer, either 1 or 0. This decides if we send in an actual representation of the patient data, or if we send in a random sequence instead. The discriminator is appropriately penalized, and we reverse the gradients applied to the discriminator for our encoder layer. In other words, we penalize our encoder layers when our discriminator performs well, and vice versa. This is accomplished by adding a gradient reversal layer just prior to the discriminator. The gradient reversal layer acts like an identity layer on the forward pass, but multiplies all incoming gradients during backpropagation by −1. We used the pytorch implementation of the same by Ganin et al. [31]. Overall Architecture  
   
  Fig. 4. A Full Model Architecture  
   
  2.4 Training The model was written using the Pytorch-Lightning library, and tested on google colab. We used encoders with 4 attention units, with a hidden dimension of 512. We trained the  
   
  Adversarial Learning for Improved Patient Representations  
   
  473  
   
  model on Nvidia Tesla® V100-32GB [32] GPUs, made available by NUS HPC [33]. The loss function used was Binary Cross Entropy, which is standard for classification tasks. We also tried out adding different weights to our cross-entropy loss to our discriminator. The higher the weight, the more the model prioritizes spreading out data points over classification accuracy. We aim to strike a balance between the two objectives, to optimize both the usage and accuracy of the patient representation. Thus, our loss Lnet can be represented as (Fig. 4) Lnet = Lclass + βLdisc where β is the weight given to the discriminator Ldisc over the classification loss Lclass . We trained each model with the Adam optimiser, with learning rate 10-5 and weight decay of 10-3. We used weight decay to add a constraint on the L2 norm of the weights of the model. In total, 3 models were trained at values of β: 0, 0.2 and 2. We employed a random train-test-validation split of 40,000: 4,000: 2505 patients. We employed the ASHA [34] (Async Successive Halting) scheduler for early stopping and used Ray [35] for hyperparameter tuning.  
   
  3 Results & Discussion 3.1 Classification Task Beta Value  
   
  F1 Score  
   
  Precision  
   
  Recall  
   
  AUC-ROC  
   
  0  
   
  0.642  
   
  0.513  
   
  0.846  
   
  0.8198  
   
  0.2  
   
  0.6  
   
  0.444  
   
  0.923  
   
  0.8186  
   
  2  
   
  0.569  
   
  0.569  
   
  0.569  
   
  0.7766  
   
  We see that as the weight on the adversarial task increases, the prediction accuracy drops. This is to be expected, as the tendency for classifiers is to maximize the distance between various types of data. However, as mentioned earlier, this tendency causes the representation as a whole to suffer. This is because it becomes easier for the representation to place points in arbitrary locations (effectively overfitting for the task). 3.2 Patient Representation We now examine the representations created by the model. The data used to create the above plots were the test set of MIMIC data. Since the resulting representations are 120dimensional, we use t-SNE, a non-linear dimensionality reduction algorithm to reduce the data down to 2 dimensions for the purposes of visualization (parameters: perplexity = 40, PCA initialization). We can see that as we increase the weight of the discriminator loss, the latent space is more efficiently used by the representation (Fig. 5). To assess the meaningfulness of the representation, the data were colored by the hospital admission type. This was not a feature that was fed to the model to create the representation. Since certain categories of admission are extremely different to others (Newborns vs. all others), observing natural clustering based on this criteria would imply that the representation has “understood” some facet of the patient. As seen in the third image above, the newborn patients are clearly separated from the rest of the patients.  
   
  474  
   
  B. Shankar and C. A. Hargreaves  
   
  Fig. 5. Patient representations visualized via t-SNE  
   
  4 Future Work Another avenue for future work is to try to use another dataset, such as the eICU synthetic dataset [36] or MIMIC-IV [37] dataset. Also, running more hyperparameter tuning would also be an avenue to improve the performance of the model. Additionally, we can use fusion via mutual information [38] maximization to further improve the quality of the extracted patient representation. Also, adding a reconstruction task, as shown in the paper by Mai et al. [39], can aid in improving the quality of the extracted representations. Additionally, we can attempt to use attention map visualizations to help in improving the explainability of the model. Finally, testing the performance of the representations on other downstream tasks such as length-of-stay prediction is also required.  
   
  5 Conclusion To sum up, in this project, we trained a model that successfully took into account multiple modalities of patient data to predict mortality. Additionally, we showed that leveraging adversarial learning for the patient representation leads to better quality representations. We also showed that the representations are meaningful, as evidenced by the representations naturally separating different types of patients along the reason why the patient was admitted to the hospital, which was not a feature used in the data to train the model. Thus, we have successfully created a method for multimodal patient representations, aided by adversarial learning.  
   
  References 1. Holroyd-Leduc, J.M., Lorenzetti, D., Straus, S.E., Sykes, L., Quan, H.: The impact of the electronic medical record on structure, process, and outcomes within primary care: a systematic review of the evidence. J. Am. Med. Inform. Assoc. 18(6), 732–737 (2011). https://doi. org/10.1136/amiajnl-2010-000019 2. Jiang, F., et al.: Artificial intelligence in healthcare: past, present and future. Stroke Vasc. Neurol. 2(4), 230–243 (2017). https://doi.org/10.1136/svn-2017-000101 3. Norgeot, B., Glicksberg, B.S., Butte, A.J.: A call for deep-learning healthcare. Nat. Med. 25(1), 14–15 (2019). https://doi.org/10.1038/s41591-018-0320-3  
   
  Adversarial Learning for Improved Patient Representations  
   
  475  
   
  4. Alloghani, M., Baker, T., Al-Jumeily, D., Hussain, A., Mustafina, J., Aljaaf, A.J.: Prospects of machine and deep learning in analysis of vital signs for the improvement of healthcare services. In: Yang, X.-S., He, X.-S. (eds.) Nature-Inspired Computation in Data Mining and Machine Learning, pp. 113–136. Springer, Cham (2020). https://doi.org/10.1007/978-3-03028553-1_6 5. Che, C., Zhang, P., Zhu, M., Qu, Y., Jin, B.: Constrained transformer network for ECG signal processing and arrhythmia classification. BMC Med. Inform. Decis. Mak. 21(1), 184 (2021). https://doi.org/10.1186/s12911-021-01546-2 6. Hosseini, M.-P., Tran, T.X., Pompili, D., Elisevich, K., Soltanian-Zadeh, H.: Deep learning with edge computing for localization of epileptogenicity using multimodal rs-fMRI and EEG big data. In: 2017 IEEE International Conference on Autonomic Computing (ICAC), pp. 83– 92 (2017).https://doi.org/10.1109/ICAC.2017.41 7. Lai, M.: Deep Learning for Medical Image Segmentation (2015). http://arxiv.org/abs/1505. 02000 8. Si, Y., et al.: Deep representation learning of patient data from Electronic Health Records (EHR): a systematic review. J. Biomed. Inform. 115, 103671 (2021). https://doi.org/10.1016/ j.jbi.2020.103671 9. Che, Z., Kale, D., Li, W., Bahadori, M.T., Liu, Y.: Deep computational phenotyping. In: Proceedings of the 21th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, pp. 507–516 (2015). https://doi.org/10.1145/2783258.2783365 10. Miotto, R., Li, L., Kidd, B.A., Dudley, J.T.: Deep patient: an unsupervised representation to predict the future of patients from the electronic health records. Sci. Rep. 6(1), Article 1 (2016). https://doi.org/10.1038/srep26094 11. Cheng, Y., Wang, F., Zhang, P., Hu, J.: Risk prediction with electronic health records: a deep learning approach. In: Proceedings of the 2016 SIAM International Conference on Data Mining (SDM), pp. 432–440. Society for Industrial and Applied Mathematics (2016). https:// doi.org/10.1137/1.9781611974348.49 12. Choi, Y., Chiu, C.Y.-I., Sontag, D.: Learning low-dimensional representations of medical concepts. In: AMIA Summits on Translational Science Proceedings, pp. 41–50 (2016) 13. [1706.03762] Attention Is All You Need (n.d.). https://arxiv.org/abs/1706.03762. Retrieved 5 November 2022 14. Devlin, J., Chang, M.-W., Lee, K., Toutanova, K.: BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding (2019). https://doi.org/10.48550/arXiv. 1810.04805 15. Dosovitskiy, A., et al.: An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale (2021). https://doi.org/10.48550/arXiv.2010.11929 16. Li, Y., et al.: BEHRT: transformer for electronic health records. Sci. Rep. 10(1), Article 1 (2020). https://doi.org/10.1038/s41598-020-62922-y 17. Song, H., Rajan, D., Thiagarajan, J., Spanias, A.: Attend and diagnose: clinical time series analysis using attention models. In: Proceedings of the AAAI Conference on Artificial Intelligence, 32(1), Article 1 (2018). https://doi.org/10.1609/aaai.v32i1.11635 18. Choi, E., et al.: Learning the graphical structure of electronic health records with graph convolutional transformer. Proc. AAAI Conf. Artif. Intell. 34(1), 606–613 (2020). https:// doi.org/10.1609/aaai.v34i01.5400 19. Srivastava, N., Salakhutdinov, R.: Learning Representations for Multimodal Data with Deep Belief Nets 8 (n.d.) 20. Jiang, Y.-G., Wu, Z., Tang, J., Li, Z., Xue, X., Chang, S.-F.: Modeling multimodal clues in a hybrid deep learning framework for video classification. IEEE Trans. Multimedia 20(11), 3137–3147 (2018). https://doi.org/10.1109/TMM.2018.2823900  
   
  476  
   
  B. Shankar and C. A. Hargreaves  
   
  21. Cheerla, A., Gevaert, O.: Deep learning with multimodal representation for pancancer prognosis prediction. Bioinformatics 35(14), i446–i454 (2019). https://doi.org/10.1093/bioinform atics/btz342 22. Vale-Silva, L.A., Rohr, K.: Long-term cancer survival prediction using multimodal deep learning. Sci. Rep. 11(1), Article 1 (2021). https://doi.org/10.1038/s41598-021-92799-4 23. Meng, Y., Speier, W., Ong, M.K., Arnold, C.W.: Bidirectional representation learning from transformers using multimodal electronic health record data to predict depression. IEEE J. Biomed. Health Inform. 25(8), 3121–3129 (2021). https://doi.org/10.1109/JBHI.2021.306 3721 24. Mai, S., Hu, H., Xing, S.: Modality to Modality Translation: An Adversarial Representation Learning and Graph Fusion Network for Multimodal Fusion (2020). https://doi.org/10.48550/ arXiv.1911.07848 25. De Bois, M., El Yacoubi, M.A., Ammi, M.: Adversarial multi-source transfer learning in healthcare: application to glucose prediction for diabetic people. Comput. Methods Programs Biomed. 199, 105874 (2021). https://doi.org/10.1016/j.cmpb.2020.105874 26. Zhang, X., et al.: Learning robust patient representations from multi-modal electronic health records: a supervised deep learning approach. In: Proceedings of the 2021 SIAM International Conference on Data Mining (SDM), pp. 585–593 (2020). https://doi.org/10.1137/1.978161 1976700.66 27. Johnson, A.E.W., et al.: MIMIC-III, a freely accessible critical care database. Sci. Data 3(1), Article 1 (2016). https://doi.org/10.1038/sdata.2016.35 28. Kazemi, S.M., et al.: Time2Vec: Learning a Vector Representation of Time (2019). https:// doi.org/10.48550/arXiv.1907.05321 29. Tipirneni, S., Reddy, C.K.: Self-Supervised Transformer for Sparse and Irregularly Sampled Multivariate Clinical Time-Series (2022). https://doi.org/10.48550/arXiv.2107.14293 30. Lan, Z., Chen, M., Goodman, S., Gimpel, K., Sharma, P., Soricut, R.: ALBERT: A Lite BERT for Self-supervised Learning of Language Representations (2022). https://doi.org/10.48550/ arXiv.1909.11942 31. Ganin, Y., Lempitsky, V.: Unsupervised Domain Adaptation by Backpropagation (2015). http://arxiv.org/abs/1409.7495 32. NVIDIA Tesla V100|NVIDIA (n.d.): https://www.nvidia.com/en-gb/data-center/tesla-v100/. Retrieved 21 November 2022 33. HPC – NUS Information Technology (n.d.): https://nusit.nus.edu.sg/hpc/. Retrieved November 21, 2022 34. Li, L., et al.: A System for Massively Parallel Hyperparameter Tuning (2020). https://doi.org/ 10.48550/arXiv.1810.05934 35. Liaw, R., Liang, E., Nishihara, R., Moritz, P., Gonzalez, J.E., Stoica, I.: Tune: A Research Platform for Distributed Model Selection and Training (2018). http://arxiv.org/abs/1807. 05118 36. Pollard, T.J., Johnson, A.E.W., Raffa, J.D., Celi, L.A., Mark, R.G., Badawi, O.: The eICU Collaborative Research Database, a freely available multi-center database for critical care research. Sci. Data 5(1), Article 1 (2018). https://doi.org/10.1038/sdata.2018.178 37. Alistair, J., Lucas, B., Tom, P., Steven, H., Leo Anthony, C., Roger, M.: MIMIC-IV (2.1). PhysioNet (n.d.). https://doi.org/10.13026/RRGF-XW32 38. Multimodal Data Fusion Based on Mutual Information. IEEE Journals & Magazine. IEEE Xplore (n.d.). https://ieeexplore.ieee.org/document/6095545. Retrieved November 21, 2022 39. Mai, S., Hu, H., Xing, S.: Modality to Modality Translation: An Adversarial Representation Learning and Graph Fusion Network for Multimodal Fusion (2019). http://arxiv.org/abs/1911. 07848  
   
  Augmented Intelligence in Games, Serious Games and Virtual Reality  
   
  User-Defined Hand Gesture Interface to Improve User Experience of Learning American Sign Language Jindi Wang1(B) , Ioannis Ivrissimtzis1 , Zhaoxing Li1 , Yunzhan Zhou1 , and Lei Shi2 1 Department of Computer Science, Durham University, Durham, UK {jindi.wang,ioannis.ivrissimtzis,zhaoxing.li2,yunzhan.zhou}@durham.ac.uk 2 Open Lab, School of Computing, Newcastle University, Newcastle upon Tyne, UK [email protected]   
   
  Abstract. Sign language can make possible eﬀective communication between hearing and deaf-mute people. Despite years of extensive pedagogical research, learning sign language remains a formidable task, with the majority of the current systems relying extensively on online learning resources, presuming that users would regularly access them; yet, this approach can feel monotonous and repetitious. Recently, gamiﬁcation has been proposed as a solution to the problem, however, the research focus is on game design, rather than user experience design. In this work, we present a system for user-deﬁned interaction for learning static American Sign Language (ASL), supporting gesture recognition for user experience design, and enabling users to actively learn through involvement with user-deﬁned gestures, rather than just passively absorbing knowledge. Early ﬁndings from a questionnaire-based survey show that users are more motivated to learn static ASL through user-deﬁned interactions.  
   
  Keywords: Human Computer Interaction Study  
   
  1  
   
  · Sign Language · User  
   
  Introduction  
   
  According to the World Health Organization, around 2.5 billion people will have some degree of hearing loss by 20501 , and at least 700 million of them will require some kind of hearing rehabilitation. The use of sign language, as well as several other alternative sensory approaches, such as voice reading, writing with the hands, or vibration sensing, are all part of the rehabilitation training courses for people with hearing loss. Although sign language is the most popular means of communication for the deaf, most persons who do not have hearing loss have never taken sign language classes, making communication between these two groups diﬃcult. Thus, in an eﬀort to remove communication barriers between 1  
   
  https://www.who.int/zh/news-room/fact-sheets/detail/deafness-and-hearing-loss.  
   
  c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 479–490, 2023. https://doi.org/10.1007/978-3-031-32883-1_43  
   
  480  
   
  J. Wang et al.  
   
  various groups, learning sign language has emerged as a major research area in education. The majority of the most recent approaches to the teaching of sign languages [9,10,16] employ predeﬁned gestures, while approaches based on user-deﬁned interaction technology are more sparse in the literature. For example, Adamo et al. [1] proposed the development of a new immersive 3D learning environment to increase the mathematical skills of deaf children by teaching mathematical concepts and American Sign Language (ASL) math terminology through user interaction with fantasy 3D virtual signers and traditional interaction environments. Schioppo et al. [20] proposed a sign language recognition method using features extracted from data acquired by a Leap Motion controller from an egocentric view. The method was tested on the 26 letters of the ASL alphabet. In a related development, Phan et al. [17] used motion tracking to trial a number of diﬀerent methods for providing user feedback in a sign language learning system. Regarding research on the processes by which users can deﬁne themselves a vocabulary of hand gestures, Piumsomboon et al. [18] conducted research on hand gesture guessability in an Augmented Reality (AR) environment. They invited users to make gestures corresponding to certain tasks, and created userdeﬁned gesture sets to guide the designers in implementing user-centred hand gestures for AR. To the best of our knowledge, there are no studies on learning ASL through user-deﬁned interaction techniques. Hence, the purpose of this paper is to investigate if user-deﬁned interaction techniques can enhance users’ learning of ASL. We believe that this is an important research topic since most such systems use hand gestures created by system designers, which do not always reﬂect user intention. To accomplish our research goals, we developed a simple system with a userdeﬁned gesture interface for learning static ASL. In the system design, we have identiﬁed and taken into account shortcomings of prior systems, including the small data sets used to train the gesture recognizer, the absence of a realistic environment, and most importantly, the user’s diﬃculty in engaging with the system for an extended period of time. With inspiration from Bragg’s ASL Sea Battle [5], a sign language game created to help gather user data, we created and integrated a Whack-a-Mole style game with a user-deﬁned hand gesture interface into the system, aiming at boosting user motivation. Finally, we conducted a user study based on a survey designed according to Schrepp’s [21] recommendations and concentrated on user experience analysis. Summarising, the main research question motivating our work, “Can userdefined interaction techniques enhance user motivation to learn static ASL?”, was looked into within the context of a gamiﬁed environment for learning static ASL. Our main contributions are as follows: 1. We implemented a user-deﬁned hand gesture interface for ASL learning with a Whack-a-Mole type of game. 2. We conducted a user study to examine if user-deﬁned interaction aﬀected users’ experience. The initial results indicate a positive user attitude towards gamiﬁed learning environments and a strong interest of the users in userdeﬁned interactions.  
   
  Sign Language Learning  
   
  481  
   
  The rest of this paper is organised as follows. The prior work on technologyassisted sign language learning is reviewed in Sect. 2. The basic design and the features of the proposed sign language learning environment are presented in Sect. 3. The design of the user study is described in Sect. 4, while the results are presented and analysed in Sect. 5. We discuss the main ﬁndings in Sect. 6 and brieﬂy conclude in Sect. 7.  
   
  2  
   
  Related Work  
   
  The back-end of the proposed system supporting ASL learning with user-deﬁned interaction mainly consists of hand gesture detection and a recognition model. Hence, we review prior research on hand gesture detection and recognition in ASL and user interfaces for creating user-deﬁned hand gestures. 2.1  
   
  Sign Language Detection and Recognition  
   
  Real-time detection of dynamic hand gestures from video streams is a challenging task since: (i) there is no indication when a hand gesture starts and ends in the video; (ii) a performed hand gesture should only be recognized once; and (iii) the entire system should be designed considering memory and computational power constraints. Bheda et al. [3] proposed a method based on deep convolutional neural networks (CNNs) to recognize images of the letters and digits in ASL. Kim et al. [13] proposed a novel sign language recognition method, which employs an object detection network for a region of interest segmentation to preprocess the input data. Battistoni et al. [2] described a method for ASL alphabet recognition based on CNNs, which allows for monitoring the users’ learning progress. Jiang et al. [12] proposed a novel ﬁngerspelling identiﬁcation method for Chinese Sign Language via AlexNet-based transfer learning and evaluated four diﬀerent methods of transfer learning. Camgoz et al. [6] introduced a novel transformerbased architecture that jointly learns Continuous Sign Language Recognition and Translation while being trainable in an end-to-end manner. Zhang et al. [25] proposed MediaPipe Hands, a real-time on-device hand tracking pipeline to compute hand landmark positions from a single RGB camera frame for AR/VR applications. Goswami et al. [11] created a new dataset for ASL recognition and used it to train a CNN-based model for hand gesture recognition and classiﬁcation. Finally, Pallavi et al. [15] presented a deep learning model based on the YOLOv3 architecture, reporting high recognition rates on the ASL alphabet. Having reviewed the existing work on sign language recognition, we concluded that Mediapipe is the most suitable tool for the purposes of this paper, and thus, we used it for sign language recognition, beneﬁting from its highly accurate, real-time detection of hand landmark points. Moreover, as an open-source hand gesture detection framework from Google, it is well-documented and supported.  
   
  482  
   
  2.2  
   
  J. Wang et al.  
   
  User Interfaces for User-deﬁned Hand Gesture  
   
  A lot of work has already been done on user-deﬁned hand gesture user interfaces, but most of them support limited functionalities, such as letting the user select one out of two established hand gestures as the one they want to use. For example, Wu et al. [24] proposed an interface for users to customize hand gestures and apply them to VR shopping applications in 2019, while they [23] proposed a user-deﬁned hand gesture interface that could be used on in-vehicle information systems in 2020. Besides, conventional means of accessing visual communication markers (VCM) rely on input entry methods that are not directly and intimately tied to expressive nonverbal cues. Koh et al. [14] addressed this issue, by facilitating the use of an alternative form of VCM entry: hand gestures. Moreover, to ﬁll this gap Dai et al. [7] presented a training system, called CAPG-MYO, for userdeﬁned hand gesture interaction. Takayama et al. [22] perform two user studies to derive a user-deﬁned gesture set allowing 13 types of table manipulation. To address the issue that pre-deﬁned gestures do not completely reﬂect user intent, we evaluated earlier work on user-deﬁned gestures. As a result of these studies, we were also motivated to consider whether the addition of user-deﬁned gesture interaction will reduce sign language learners’ weariness and boost their motivation for learning sign language. Therefore, the primary goal of our research is to investigate if user-deﬁned gesture interaction aﬀects ASL learning. In order to give users an immersive experience, we developed a VR-based system. To stimulate users’ curiosity and boost their motivation, we also included a simple game with a user-deﬁned hand gesture function. In addition, because there is a lack of user research on the subject, we used a questionnaire to survey users to investigate whether customised gesture interactions can actually inspire more people to learn sign language. Our main objective was to critically assess our system and gather user feedback on how their interaction with our system aﬀected their learning experience.  
   
  3  
   
  System Components  
   
  This section provides an overview of the key components of the proposed system. The system’s recommended workﬂow is shown in Fig. 1. When the user enters their account information through the login interface, the system initialises their location to the Instruction interface. After users familiarize themselves with the user introduction information of the Instruction interface, they study the ASL dictionary for ﬁve minutes and then visit the sign language game interface to play the game and increase their understanding of sign language through it.  
   
  Fig. 1. The workﬂow of ASL learning system.  
   
  Sign Language Learning  
   
  3.1  
   
  483  
   
  Learning Environment  
   
  The learning tools and the game for learning the numbers 0 to 9 in ASL are displayed in Fig. 2, with the user’s viewpoint tilted 45◦ to the left. The entire scene was created in Unity (2020.3.32f1). Regarding the user’s engagement with the system, we used the eye-tracking functionality of the HTC Vive Pro and enable clicking or picking an object after 3 s of the user’s ﬁxed attention. An inbuilt camera that was connected to the PC via openCV (version 3.4.2) [4] was used to acquire the images. Regarding gesture detection and recognition, Mediapipe is used to detect the user’s hand and extract a series of 21 points matching corresponding landmarks on the detected hand. The feature vector from this sequence is then supplied as input to the classiﬁer, which is an MLP with three fully connected layers, implemented in Tensorﬂow 2.6.0 [8] and Python 3.6 [19]. We used an RTX3080 GPU on a standard PC to train the classiﬁer. The study’s objectives were satisﬁed with an overall recognition accuracy rate of over 90%, which is expected to oﬀer a generally positive user experience.  
   
  Fig. 2. The implemented ASL learning environment. From left to right: the Whacka-Mole game; the ASL dictionary for the 0–9 digits; the Instructions interface.  
   
  3.2  
   
  Whack-a-Mole Game and User-Deﬁned Interface  
   
  We adopted the Whack-a-Mole game and implemented a sign language-based version of it, aiming to make learners more interested in the material, increasing their motivation and, eventually, their engagement with the process. In our game, as shown in Fig. 3(a), each location is marked by a unique numeric identiﬁer. If the user signs correctly the current position of the gopher, one point is added; otherwise, no point is awarded. The total duration of the game is 30 s. The user-deﬁned interface is a feature that is hidden from the user while they are playing the game. It will only appear when a mole is killed and trigger a hitherto hidden functionality, calling for the user to specify a wake-up gesture to be utilized later in the game. In the example shown in Fig. 3(b), the user is given the special game skill to “Clear all Moles”. At the end of one iteration of the course, the system will collect user-deﬁned gesture data for 5 s, retrain the recognition model, and the user-deﬁned interface will be hidden again. Now that  
   
  484  
   
  J. Wang et al.  
   
  Fig. 3. (a) The Whack-a-Mole game for ASL learning; (b) the user deﬁned interface.  
   
  the user has picked their special skills, they may start playing the game again by clicking “Start” on the game screen, and they can use their newly acquired special game skill. The workﬂow of the user-deﬁned hand gesture interface is shown in Fig. 4. Notice that the special mole sequence must match the last digit of the remaining play time for the user interface to be activated. In addition, the user must be able to recognise the special mole’s number at a speciﬁc moment. When both requirements are satisﬁed, the user-deﬁned interface will be displayed and the user will be awarded their special game skill.  
   
  Special mole = last digit of remaining time  
   
  Pop up user-defined interface  
   
  + Kill a special mole at a specific time  
   
  User specifies a gesture and awarded with a special game function Click "Start" button Hand gesture data collection  
   
  Play the game  
   
  User-defined interface disappear Model training  
   
  Fig. 4. The workﬂow of the user-deﬁned hand gesture interface.  
   
  4  
   
  Experiments  
   
  To evaluate the system design, we adopted the user survey scheme proposed by Schrepp et al. [21], which comprises six evaluation factors: Attractiveness, Eﬃciency, Perspicuity, Dependability, Stimulation, Novelty. Each factor is further divided into six or seven more specialised issues. Table 1 displays the speciﬁc issues associated with each factor. Based on the users’ scores on a scale of 1.00 to 5.00 on particular issues, we assessed the merits of the system in each factor. We invited 15 users (M = 8, F = 7; aged between 19 and 21) to engage with our system, aiming at gathering user feedback to serve as the study’s data source. The majority of the users had either very limited or no prior understanding of ASL, or any other sign language. They were instructed to explore the system, adhering to the instructions in order to learn ASL in three stages: learning  
   
  Sign Language Learning  
   
  485  
   
  signs from the dictionary interface; improving comprehension at the learning interface; and assessing their learning three times on the game interface. As it can be challenging for some beginners to pick up so many motions quickly, users were merely required to learn the ASL 0–9 numerals. Table 1. System evaluation questionnaire. Attractiveness  
   
  Eﬃciency  
   
  Do users like or dislike the product? annoying/enjoyable good/bad unlikable/pleasing unpleasant/pleasant attractive/unattractive afriendly/unfriendly  
   
  Is it easy to understand how to use the product? Is it easy to get familiar with the product? not understandable/understandable easy to learn/diﬃcult to learn complicated/easy clear/confusing  
   
  Perspicuity  
   
  Dependability  
   
  Is it possible to use the product fast and eﬃcient? Does the user interface looks organized? fast/slow ineﬃcient/eﬃcient impractical/practical organized/cluttered  
   
  Does the user feel in control of the interaction? Is the interaction with the product secure and predictable? unpredictable/predictable obstructive/supportive secure/not secure meets expectations/does not meet expectations  
   
  Stimulation  
   
  Novelty  
   
  Is it interesting and exciting to use the product? Does the user feel motivated to further use the product? valuable/inferior boring/exiting not interesting/interesting motivating/demotivating  
   
  Is the design of the product innovative and creative? Does the product grab user’s attention? creative/dull inventive/conventional usual/leading edge conservative/innovative  
   
  5  
   
  Result Analysis  
   
  The user evaluation is summarized in Fig. 5, the box-plots showing the Minimum, First Quartile, Median, Third Quartile, and Maximum, while the Mean is shown by an ‘x’. The score distribution reﬂects generally positive feedback on the evaluation factors, all of which received mean scores greater than 3.00, while the overall system achieved a satisfactory average score of 3.42 (SD = 0.88) over the six factors. It is also interesting to note that some low scores ( 4 as 1 and 0 for the remainder). Thus, the forum posts are classified into binary categories of instructor interventions, according to the expressed urgency: • Urgent intervention: requires immediate intervention; • No intervention: no response is required.  
   
  656  
   
  L. Alrajhi et al.  
   
  We further applied pre-processing, including data cleaning and removing the integer numbers [20], special characters. Then we removed all previous automated anonymisation tags (e.g., , , … etc.) [19]. Next, we converted the text to lowercase. The stopwords were kept because, as [37] noted, models can improve if they include stopwords. After that we prepared the final input, by adding the name and the domain of the course to the text input. We followed [23] who argued that to understand the information contained in the post, one should connect the course and domain information of the post to the text of the post. Thus, we removed 13 posts with an empty course name; this produced 29,584 posts. Then, we split the data into training, validation and testing as follows: training and testing into (80%, 20%) by using stratified sampling to select a sample that is representative of different classes (urgent intervention and no intervention). After that, we split the training data into training and validation sets (80%, 20%, respectively). 3.2 Exploring the Dataset As an essential step, we explore and analyse the data set, to understand the data. We focus here on number of words and characters in all posts, because in deep learning models we should specify the length of the input sequence to these models. As we mentioned in Sect. 3.1, the input of these models is the text in the post and the name and the domain of the course, therefore we have to consider this information in the following calculations. As shown in Fig. 1, (A) is the distribution of the number of words per posts (mean = 60.36 words, minimum = 2 words and maximum = 498 words). (B) is the distribution of the number of characters per posts (mean = 380.28 characters, minimum = 29 characters and maximum = 2556 characters).  
   
  Fig. 1. Distributions of posts (A) Number of words per posts - (B) Number of characters per posts.  
   
  Then, to understand the behaviour of learners and how many words they write when they need urgent intervention (Label = 1) or not (Label = 0), we visualise the representation of the number of words per label, as we see in Fig. 2. To check if there are a statistical significant differences between the two populations, we use Mann-Whitney test. We found that p < 0.05, meaning they are statistically significantly different in terms of the length of posts (number of words).  
   
  Plug & Play with Deep Neural Networks  
   
  657  
   
  Fig. 2. Box plot for the number of words per posts that were written by learners needing intervention (Label = 1) or not needing intervention (Label = 0).  
   
  Following, we analyse specifically the posts written by learners who need urgent intervention. Depicted in Fig. 3 (A) is the distribution of the number of words per urgent posts (mean = 59.63 words, minimum = 2 words and maximum = 450 words). On the right side (B) is the distribution of the number of characters per urgent posts (mean = 372.12 characters, minimum = 32 characters and maximum = 2556 characters).  
   
  Fig. 3. Distributions of urgent posts (A) Number of words per urgent posts - (B) Number of characters per urgent posts.  
   
  Finally, to find out which words were most frequently used by learners in urgent posts, we calculate the top 30 frequency words in these posts, after removing stopwords; see Fig. 4. 3.3 Prediction Models The input of these models is the post from each learner and the output is the classification: if this post needs intervention or not, according to its urgency (binary prediction). We represent words as numerical forms (word embedding) using word2vec, as in [23], which converts words into vectors that depict semantics; and BERT, as in [13], which generates contextual representations for each words. We implement two different training models, which are as follows: (1) with word-based input. (2) with character-based  
   
  658  
   
  L. Alrajhi et al.  
   
  Fig. 4. The top 30 frequency words in urgent post  
   
  input in addition to the word-based, to configure what we call word-character based input. Figure 5 shows the general architectures for these two cases (word-based input and word-character based input). We select (Word2vec or BERT) as a word embedding, CNN to extract local complex context features, RNN to model units in sequence and learn feature structures, and attention mechanism to give higher weight to keywords. In word-character based models, in addition to the DNN layers for words, we applied additionally CNN, to select the features for characters. After we construct every model (word based or word-character based) based on different word embeddings, we train it by using the Adam optimiser, as in [23]. We use the binary crossentropy as a loss function, because our problems involve binary decisions. We set the batch size to 64 and we employ early stopping, to stop training after 5 epochs, when there is no progress in performance. 3.3.1 The Word-Based Input We construct different basic and combined deep learning models, to selected features, by applying plug & play, i.e., CNN, RNN (LSTM, Bidirectional-LSTM, GRU and Bidirectional-GRU) as they are a modification of RNN. These models are based on word2vec or BERT. In the following, we explain a general word-based architecture; however, during the implementation, we remove some layers and add other layers, such as different types of RNN and attention layers. In word2vec we apply (Word2vec GoogleNews-vectors-negative300) as in [23], as they showed that this renders better results than GloVe on the Stanford dataset. In  
   
  Plug & Play with Deep Neural Networks  
   
  659  
   
  Fig. 5. Deep Learning as a Puzzle: General architectures for two cases (word-based input and word-character based input).  
   
  addition to pre-trained embedding, we train word embeddings during the NN training (fine-tuning). In BERT, we use the BERT tokeniser to tokenise sentences into tokens using ‘bertbase-uncased’. In BERT, an original word is split into tokens. These tokens represent words and the words that are not part of the vocabulary are represented as sub-words and characters. Also, we add special tokens [CLS] and [SEP]; [CLS] – is inserted at the start of the text and [SEP] – is inserted at the end; or if there are more sentences, it is used to separate these sentences [38]. We constrain the maximum length of each post, by following [13], to 512 tokens, since 512 tokens is the maximum model input size for BERT. Thus, we pad sequences of less than 512 with zeroes and trim the rest of the tokens which are more than 512, to ensure that each sequence has the same length. As Fig. 5 shows, the first layer is an input layer, followed by the embedding layer, mapping words onto vectors. The output from these layers is passed onto the 1D convolution layer as input (with 128 filters, kernel size of {3,4,5} and Rectified Linear Unit ‘ReLU’ as activation function) as in [23] to derive interesting features. Then, the produced features are further compressed, by using a pooling layer (max pooling). These features feed into one of different RNN (LSTM, Bidirectional-LSTM, GRU and Bidirectional-GRU) layer with 128 hidden units, which helps to find the relationship between words.  
   
  660  
   
  L. Alrajhi et al.  
   
  The next layer is the attention layer, which learns the weighting for each word. We use attention with context mechanism [39]. That is, through a series of mathematical formulas, a context vector is randomly initialised and multiplied by each word, to generate the importance score. Next, for the following drop-out layer, we use drop-out with a rate of 0.5 as recommended in [23], by randomly dropping out nodes during the training phase, as well as an early stopping mechanism, to alleviate overfitting. Then, the fully connected layer is used to classify the output as: 1- needs urgent intervention or 0 – no intervention - by calculating the probability (P):  1, if > .5 P= (1) 0, if ≤ .5  
   
  3.3.2 The Word-Character Based Input In the second case, we add characters in addition to the words. We selected 1024 as the length of each input post as recommended in [23], and due to the fact that most posts have a number of characters less than 1024. Next, we encode characters and use character embedding as per the Johnb30/py_crepe code on GitHub, which is a reimplemented version of the Crepe character-level convolutional neural net model that was originally shown in [40]. To select the most important features, we use a standard 1D convolutional and pooling layer, respectively. The convolution with filter = 128 and kernel size of {5,7,9} and the activation function is ‘ReLU’, following recommendations in [23], and pooling is global max pooling. The selected features are concatenated with the features from the word-based input, and the rest follows the processing explained in the word-based input section.  
   
  4 Results and Discussion In this section we present the results we obtained after training every model. We are reporting precision (P), recall (R) and F1-score (F1) for each class and the balance accuracy (BA) for the word-based approach in our various deep learning models (first row), and then report the combined (word and character-based results) (second row), as shown in Table 1. In this research we compare models based on the (BA) score, because it is a widely used metric for binary classification of imbalanced datasets [41]. From these results, we find that the BA score for models with BERT as a word embedding outperformed all the models based on word2vec. That means it is better to represent words using BERT. The best value from all the models is 0.875 and the answer to RQ0 is CNN + LSTM + Attention model based on BERT at word-level. In terms RQ1, the (word-based versus word-character based), we observe that if word2vec is used as a word embedding, word-character based often outperforms base ones (word-based) (these improvements are statistically significant using (McNemar’s test: p < 0.05) as shown in Table 1). In contrast, for models with BERT as a word embedding, there is no improvement between different bases (word only and word-character).  
   
  Plug & Play with Deep Neural Networks  
   
  661  
   
  Table 1. The performance results of word2vec and BERT as word embedding for the wordbased and word-character based approach for different models (P,R,F1, BA %) and P value (P.V) comparing word-based versus word-character based for each model. Model  
   
  Word Level No Intervention Embedding (0) P  
   
  CNN  
   
  Word2vec  
   
  R  
   
  F1  
   
  Intervention (1) P  
   
  R  
   
  BA  
   
  P.V  
   
  F1  
   
  Word 0.89 0.96 0.92 0.74 0.51 0.60 0.732 P ≤ 0.05 Word 0.92 0.95 0.94 0.77 0.66 0.71 0.807 + Char  
   
  BERT  
   
  Word 0.93 0.96 0.95 0.82 0.69 0.75 0.826 P > 0.05 Word 0.92 0.97 0.95 0.84 0.66 0.74 0.815 + Char  
   
  CNN + GRU Word2vec  
   
  Word 0.90 0.95 0.92 0.72 0.55 0.62 0.749 P ≤ 0.05 Word 0.93 0.96 0.95 0.82 0.68 0.74 0.823 + Char  
   
  BERT  
   
  Word 0.95 0.94 0.95 0.76 0.79 0.77 0.865 P ≤ 0.05 Word 0.95 0.96 0.95 0.80 0.76 0.78 0.860 + Char  
   
  CNN + Word2vec Bidirectional (GRU) BERT  
   
  Word 0.92 0.93 0.93 0.68 0.67 0.68 0.798 P ≤ 0.05 Word 0.92 0.96 0.94 0.80 0.65 0.71 0.803 + Char Word 0.94 0.96 0.95 0.82 0.74 0.78 0.851 P ≤ 0.05 Word 0.94 0.97 0.95 0.84 0.75 0.79 0.856 + Char  
   
  CNN + GRU Word2vec + Attention  
   
  Word 0.92 0.93 0.93 0.69 0.67 0.68 0.800 P ≤ 0.05 Word 0.93 0.96 0.95 0.81 0.70 0.75 0.829 + Char  
   
  BERT  
   
  Word 0.95 0.96 0.95 0.80 0.76 0.78 0.859 P > 0.05 (continued)  
   
  662  
   
  L. Alrajhi et al. Table 1. (continued)  
   
  Model  
   
  Word Level No Intervention Embedding (0) P  
   
  R  
   
  F1  
   
  Intervention (1) P  
   
  R  
   
  BA  
   
  P.V  
   
  F1  
   
  Word 0.94 0.97 0.95 0.83 0.74 0.79 0.854 + Char CNN + Word2vec Bidirectional (GRU) + Attention BERT  
   
  Word 0.90 0.95 0.93 0.74 0.56 0.64 0.755 P ≤ 0.05 Word 0.93 0.96 0.94 0.80 0.67 0.73 0.816 + Char Word 0.95 0.94 0.95 0.77 0.80 0.78 0.872 P ≤ 0.05 Word 0.95 0.96 0.95 0.81 0.78 0.80 0.868 + Char  
   
  CNN + LSTM  
   
  Word2vec  
   
  Word 0.81 1.00 0.90 0.00 0.00 0.00 0.5  
   
  P ≤ 0.05  
   
  Word 0.92 0.97 0.95 0.82 0.66 0.73 0.814 + Char BERT  
   
  Word 0.95 0.94 0.95 0.77 0.79 0.78 0.869 P ≤ 0.05 Word 0.95 0.95 0.95 0.80 0.78 0.79 0.869 + Char  
   
  CNN + Word2vec Bidirectional (LSTM)  
   
  Word 0.89 0.96 0.93 0.77 0.51 0.61 0.738 P ≤ 0.05  
   
  Word 0.93 0.95 0.94 0.77 0.69 0.73 0.821 + Char BERT  
   
  Word 0.94 0.96 0.95 0.81 0.76 0.78 0.857 P > 0.05 (continued)  
   
  Plug & Play with Deep Neural Networks  
   
  663  
   
  Table 1. (continued) Model  
   
  Word Level No Intervention Embedding (0) P  
   
  R  
   
  F1  
   
  Intervention (1) P  
   
  R  
   
  BA  
   
  P.V  
   
  F1  
   
  Word 0.95 0.96 0.95 0.81 0.77 0.79 0.865 + Char CNN + LSTM + Attention  
   
  Word2vec  
   
  Word 0.92 0.94 0.93 0.71 0.65 0.68 0.795 P ≤ 0.05 Word 0.92 0.97 0.94 0.83 0.62 0.71 0.794 + Char  
   
  BERT  
   
  Word 0.95 0.94 0.95 0.77 0.81 0.79 0.875 P ≤ 0.05 Word 0.95 0.95 0.95 0.80 0.79 0.80 0.874 + Char  
   
  CNN + Word2vec Bidirectional (LSTM) + Attention BERT  
   
  Word 0.91 0.95 0.93 0.73 0.61 0.66 0.777 P ≤ 0.05 Word 0.92 0.97 0.95 0.83 0.66 0.74 0.815 + Char Word 0.95 0.95 0.95 0.79 0.78 0.78 0.863 P > 0.05 Word 0.95 0.95 0.95 0.78 0.79 0.78 0.868 + Char  
   
  Also, the difference between these models is not always statistically significant. Which means BERT is good enough to represent words without any support.  
   
  5 Conclusion Instructor intervention is a highly important issue in the MOOC environment. Many researchers have tried to detect when an intervention is needed in MOOC post forums, by implementing different prediction models, which have rendered different levels of accuracy. This research has explored MOOC posts needing urgent instructor attention and intervention or not, by analysing the textual contents of learners’ posts and the information about courses. To reach this goal, the current study attempts to discover the best way to construct deep learning models, by using different inputs (word-based or word-character based) based on word2vec or BERT as a word embedding. Then we presented a combination of models, by applying the plug & play technique, which can solve a large problem by dividing it into sub-problems. This concretely means adding different inputs, stacking multiple layers, connecting layers, changing the dimensions in other layers, etc. Here, we use it to predict the urgency of posts in the Stanford  
   
  664  
   
  L. Alrajhi et al.  
   
  MOOCPosts dataset. Our conclusion is that using BERT as word-embedding is better to be used as standalone, without any addition of input as character. Our approach for future work will involve utilising other datasets, as well as other environments, and evaluating whether combining other NN models can increase the performance. We also plan to implement character-input only such as CharacterBERT [42] and CharBERT [43].  
   
  References 1. Arguello, J., Shaffer, K.: Predicting speech acts in MOOC forum posts. In: Ninth International AAAI Conference on Web and Social Media (2015) 2. Chaturvedi, S., Goldwasser, D., Daumé III, H.: Predicting instructor’s intervention in MOOC forums. In: Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics, vol. 1: Long Papers (2014) 3. Yang, T.-Y., et al.: Behavior-based grade prediction for MOOCs via time series neural networks. IEEE J. Sel. Topics Signal Process. 11(5), 716–728 (2017) 4. Wise, A.F., Cui, Y., Vytasek, J.: Bringing order to chaos in MOOC discussion forums with content-related thread identification. In: Proceedings of the Sixth International Conference on Learning Analytics & Knowledge. ACM (2016) 5. Yang, D., et al.: Exploring the effect of confusion in discussion forums of massive open online courses. In: Proceedings of the Second (2015) ACM Conference on Learning@ Scale. ACM (2015) 6. Crossley, S., et al.: Combining click-stream data with NLP tools to better understand MOOC completion. In: Proceedings of the Sixth International Conference on Learning Analytics & Knowledge. ACM (2016) 7. Kizilcec, R.F., Halawa, S.: Attrition and achievement gaps in online learning. In: Proceedings of the Second (2015) ACM Conference on Learning@ Scale (2015) 8. Chandrasekaran, M.K., et al.: Using discourse signals for robust instructor intervention prediction. In: Thirty-First AAAI Conference on Artificial Intelligence (2017) 9. Minaee, S., et al.: Deep learning–based text classification: a comprehensive review. ACM Comput. Surv. (CSUR) 54(3), 1–40 (2021) 10. Rani, S., Kumar, P.: Deep learning based sentiment analysis using convolution neural network. Arab. J. Sci. Eng. 44(4), 3305–3314 (2019) 11. Devlin, J., et al.: Bert: pre-training of deep bidirectional transformers for language understanding. arXiv preprint arXiv:1810.04805 (2018) 12. Mazari, A.C., Boudoukhani, N., Djeffal, A.: BERT-based ensemble learning for multi-aspect hate speech detection. Cluster Comput., 1–15 (2023) 13. Khodeir, N.A.: Bi-GRU Urgent classification for MOOC discussion forums based on BERT. IEEE Access 9, 58243–58255 (2021) 14. Yin, W., et al.: Comparative study of cnn and rnn for natural language processing. arXiv preprint arXiv:1702.01923 (2017) 15. Mikolov, T., et al.: Distributed representations of words and phrases and their compositionality. In Advances in Neural Information Processing Systems (2013) 16. Chandrasekaran, M.K., et al.: Learning instructor intervention from mooc forums: early results and issues. arXiv preprint arXiv:1504.07206 (2015) 17. Agrawal, A., et al.: YouEDU: addressing confusion in MOOC discussion forums by recommending instructional video clips. In: The 8th International Conference on Educational Data Mining (2015)  
   
  Plug & Play with Deep Neural Networks  
   
  665  
   
  18. Bakharia, A.: Towards cross-domain mooc forum post classification. In: Proceedings of the Third (2016) ACM Conference on Learning@ Scale. ACM (2016) 19. Wei, X., et al.: A convolution-LSTM-based deep neural network for cross-domain MOOC forum post classification. Information 8(3), 92 (2017) 20. Almatrafi, O., Johri, A., Rangwala, H.: Needle in a haystack: Identifying learner posts that require urgent response in MOOC discussion forums. Comput. Educ. 118, 1–9 (2018) 21. Sun, X., et al.: Identification of urgent posts in MOOC discussion forums using an improved RCNN. In: 2019 IEEE World Conference on Engineering Education (EDUNINE). IEEE (2019) 22. Alrajhi, L., Alharbi, K., Cristea, A.I.: A Multidimensional deep learner model of urgent instructor intervention need in MOOC forum posts. In: Kumar, V., Troussas, C. (eds.) ITS 2020. LNCS, vol. 12149, pp. 226–236. Springer, Cham (2020). https://doi.org/10.1007/9783-030-49663-0_27 23. Guo, S.X., et al.: Attention-based character-word hybrid neural networks with semantic and structural information for identifying of urgent posts in MOOC discussion forums. IEEE Access 7, 120522–120532 (2019) 24. Kim, Y.: Convolutional neural networks for sentence classification. arXiv preprint arXiv: 1408.5882 (2014) 25. Elman, J.L.: Finding structure in time. Cogn. Sci. 14(2), 179–211 (1990) 26. Hochreiter, S., Schmidhuber, J., Elvezia, C.: Long short-term memory. Neural Compu. 9(8), 1735–1780 (1997) 27. Chung, J., et al.: Empirical evaluation of gated recurrent neural networks on sequence modeling. arXiv preprint arXiv:1412.3555 (2014) 28. Schuster, M., Paliwal, K.K.: Bidirectional recurrent neural networks. IEEE Trans. Signal Process. 45(11), 2673–2681 (1997) 29. Zhao, C., Han, J.G., Xu, X.: CNN and RNN based neural networks for action recognition. In: Journal of Physics: Conference Series. IOP Publishing (2018) 30. Ullah, A., et al.: Action recognition in video sequences using deep bi-directional LSTM with CNN features. IEEE Access 6, 1155–1166 (2017) 31. Tsironi, E., et al.: An analysis of convolutional long short-term memory recurrent neural networks for gesture recognition. Neurocomputing 268, 76–86 (2017) 32. Wang, X., Jiang, W., Luo, Z.: Combination of convolutional and recurrent neural network for sentiment analysis of short texts. In Proceedings of COLING 2016, the 26th International Conference on Computational Linguistics: Technical papers (2016) 33. Lai, S., et al.: Recurrent convolutional neural networks for text classification. In: Twenty-Ninth AAAI Conference on Artificial Intelligence (2015) 34. Zhang, Z., Robinson, D., Tepper, J.: Detecting hate speech on twitter using a convolution-gru based deep neural network. In: Gangemi, A., et al. (eds.) The Semantic Web, pp. 745–760. Springer International Publishing, Cham (2018). https://doi.org/10.1007/978-3-319-934174_48 35. Liang, D., Xu, W., Zhao, Y.: Combining word-level and character-level representations for relation classification of informal text. In: Proceedings of the 2nd Workshop on Representation Learning for NLP (2017) 36. Yenigalla, P., Kar, S., Singh, C., Nagar, A., Mathur, G.: Addressing unseen word problem in text classification. In: Silberztein, M., Atigui, F., Kornyshova, E., Métais, E., Meziane, F. (eds.) Natural Language Processing and Information Systems, pp. 339–351. Springer, Cham (2018). https://doi.org/10.1007/978-3-319-91947-8_36 37. Wise, A.F., et al.: Mining for gold: identifying content-related MOOC discussion threads across domains through linguistic modeling. Internet High. Educ. 32, 11–28 (2017) 38. Clark, K., et al.: What does bert look at? an analysis of bert’s attention. arXiv preprint arXiv: 1906.04341 (2019)  
   
  666  
   
  L. Alrajhi et al.  
   
  39. Yang, Z., et al.: Hierarchical attention networks for document classification. In: Proceedings of the 2016 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies (2016) 40. Zhang, X., Zhao, J., LeCun, Y.: Character-level convolutional networks for text classification. In: Advances in Neural Information Processing Systems (2015) 41. Alamri, A., et al.: MOOC next week dropout prediction: weekly assessing time and learning patterns (2021) 42. Boukkouri, H.E., et al.: CharacterBERT: reconciling ELMo and BERT for word-level openvocabulary representations from characters. arXiv preprint arXiv:2010.10392 (2020) 43. Ma, W., et al.: CharBERT: character-aware pre-trained language model. arXiv preprint arXiv: 2011.01513 (2020)  
   
  Personalized Feedback Enhanced by Natural Language Processing in Intelligent Tutoring Systems Christos Troussas(B) , Christos Papakostas , Akrivi Krouska , Phivos Mylonas , and Cleo Sgouropoulou Department of Informatics and Computer Engineering, University of West Attica, Egaleo, Greece {ctrouss,cpapakostas,akrouska,mylonasf,csgouro}@uniwa.gr  
   
  Abstract. This paper proposes a novel approach for enhancing feedback in intelligent tutoring systems (ITSs) for Java programming using natural language processing (NLP). The proposed approach overcomes the limitations of traditional rule-based feedback generation systems and provides more personalized and relevant feedback to learners. The architecture includes three main components: a natural language parser (that takes as input comments and/or questions of the user that can be inserted through a text box in the user interface.), a feedback generator, and a feedback evaluator. The natural language parser is responsible for converting the unstructured text input of the learner into structured data, which can be analyzed for generating feedback. The feedback generator component then processes this data and generates personalized feedback for the learner based on their specific needs. Finally, the feedback evaluator component assesses the quality of the generated feedback and determines its helpfulness to the learner. The evaluation results are promising, indicating that using NLP techniques can improve the overall performance of intelligent tutoring systems and provide a more personalized learning experience for students. Keywords: natural language processing · intelligent tutoring systems · feedback parser · feedback generator · feedback evaluator  
   
  1 Introduction Intelligent tutoring systems (ITS) are computer-based systems that provide personalized and adaptive instruction to learners [1–5], aiming to improve the learning outcomes and the efficiency of the educational process. Feedback to users of ITSs is a critical issue, as they can receive information about their performance and guidance towards achieving their learning objectives [6–9]. To provide high-quality feedback delivery, ITSs must first collect data about learners’ performance, such as their responses to questions or their interaction with the learning environment. This data is then analyzed to identify their strengths and weaknesses; the system is able to determine the most appropriate feedback for their specific needs. Despite the challenges of generating high-quality feedback, ITS © The Author(s), under exclusive license to Springer Nature Switzerland AG 2023 C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 667–677, 2023. https://doi.org/10.1007/978-3-031-32883-1_58  
   
  668  
   
  C. Troussas et al.  
   
  have shown great potential in improving learning outcomes and providing personalized instruction to learners. As technology continues to advance, ITSs are expected to become more sophisticated and effective in providing feedback and guidance to learners. Recent advances in natural language processing (NLP) have greatly improved the feedback generation process in intelligent tutoring systems (ITS) [10–13]. NLP can help to analyze and understand the natural language input provided by learners, such as their code comments in a computer programming course or explanations of their problemsolving approach, and use that information to provide more personalized and relevant feedback. Leveraging state-of-the-art NLP techniques to analyze the learners’ natural language input and generate personalized feedback is a promising way to enhance the feedback generation module in ITS, especially for complex domains such as programming languages. By using NLP techniques, the system can provide feedback that is tailored to learners’ specific needs and level of understanding, leading to more effective learning outcomes. In view of the above, in this paper, we propose three components incorporated in our intelligent tutoring system for Java programming to support the process of feedback delivery to learners: the natural language parser, feedback generator, and feedback evaluator. These components work together to provide a comprehensive and effective learning experience for the learner, as follows: • The natural language parser is responsible for analyzing the learner’s natural language input, such as their code comments or explanations of their problem-solving approach, and extracting relevant information. This information is then passed on to the feedback generator, which uses this information to generate personalized feedback that is tailored to the learner’s specific needs and level of understanding. • The feedback generator takes into account various factors, such as the learner’s past performance, their learning objectives, and their preferred learning style, to generate feedback that is relevant, engaging, and useful. • The feedback evaluator then assesses the effectiveness of the feedback and provides feedback to the feedback generator, allowing it to adjust its approach and improve the quality of feedback provided to the learner. • The synergy between these three components is crucial for the success of the intelligent tutoring system. By leveraging the power of natural language processing, the natural language parser can extract valuable information from the learner’s input, allowing the feedback generator to generate personalized and relevant feedback. The feedback evaluator then assesses the quality of this feedback, allowing the system to continually improve and provide more effective feedback to the learner. The three components of the intelligent tutoring system work together in a synergistic manner to provide a more effective and personalized learning experience for the learner, ultimately improving their understanding and proficiency in Java programming. Our approach has several advantages over traditional feedback generation approaches in ITSs. Firstly, the use of natural language processing techniques allows for more tailored feedback that is better suited to each learner’s specific needs and level of understanding. Finally, by providing more useful and actionable feedback, this approach can  
   
  Personalized Feedback Enhanced by Natural Language Processing  
   
  669  
   
  help to improve the overall effectiveness of the ITS. This can lead to better learning outcomes for the learners and can help them to achieve their educational and professional goals.  
   
  2 Related Work The traditional rule-based approach for providing feedback in ITSs has limitations, as it relies on pre-defined rules and does not take into account the nuances of the students’ response or the context in which it was provided [14–16]. This can lead to generic and unhelpful feedback that does not address the students’ specific needs. In recent years, there has been a growing interest in using NLP techniques to analyze student responses and provide personalized feedback in ITSs. By analyzing the students’ natural language input, more relevant and targeted feedback can be provided. Recent research has shown promising results in using deep learning techniques, such as Convolutional Neural Networks (CNNs) and Recurrent Neural Networks (RNNs), for natural language understanding in ITS for computer programming education [17]. In [18], the authors presented computer-assisted system for creating customized multiplechoice questions with different levels of difficulty and covering various types of skills such as vocabulary, grammar, and reading comprehension. In [19], the authors have introduced a novel technique to automatically offer feedback for basic programming exercises. The presented system determines the smallest possible modifications required to rectify the errors in a student’s incorrect solution, giving them an accurate understanding of the extent to which their solution was incorrect and informing them about their mistakes. Analyzing further the related literature, in [20], the authors investigate the possibility of utilizing Artificial Intelligence (AI) and natural language processing in a teaching assistant role to produce an experience of interaction that is close to that with a human, and to also offer a way for teachers to understand the learning progress of each student.. In [21], the authors introduce an intelligent tutor that utilizes AI to respond to programming inquiries from students. By incorporating a feedback evaluation component, the proposed approach can provide a more comprehensive and accurate assessment of the quality of the feedback generated by the system. This can help to ensure that the feedback provided is not only personalized and relevant but also effective in improving the learner’s understanding of Java programming. This is an important addition to the existing literature and can contribute significantly to the development of more effective and efficient ITS.  
   
  3 Methods and Architecture The proposed system is designed for an intelligent tutoring system for Java programming, but the approach can be adapted for other programming languages or domains, if adequately altered. The system is intended to help learners improve their programming skills by providing them with personalized feedback that addresses their specific weakness. The system includes three mane components, i.e. the Natural Language Parser, the Feedback Generator and the Feedback Evaluator.  
   
  670  
   
  C. Troussas et al.  
   
  3.1 Natural Language Parser The natural language parser component can use various NLP techniques such as tokenization, part-of-speech tagging, and dependency parsing to analyze the learners’ comments. It can identify the main topic of the comment, extract key concepts, and understand the relationships between different words in the comment. This information can then be used to generate personalized feedback for the learner. The natural language parser component can also take into account the learners’ background knowledge, learning history, and other contextual information to provide more relevant and effective feedback. The natural language parser component is crucial in understanding the learner’s input and extracting the relevant information needed for generating personalized feedback. In the case of Java programming, the parser needs to identify the code snippet or concept being referred to by the learner’s input and interpret it in a way that the feedback generator can use to provide accurate and helpful feedback. For example, the learner may ask “What is the purpose of the ‘public static void main (String[] args)’ method in Java?” or “Why is my code not compiling?”. The natural language parser component can then analyze these comments and extract information, such as the concept or code snippet being referred to, and use this information to generate appropriate feedback. The user interface is an important component of the ITS, as it is the primary point of interaction between the learner and the system. The text box provided for the learner to input their comments or questions is prominently displayed and labeled clearly.. The architecture of this component typically involves several sub-components that work together to analyze the text and identify important features. The natural language parser is responsible for analyzing the natural language input provided by the student and extracting relevant information that can be used by the tutoring system to provide feedback. The process typically involves several steps: • Tokenization: A tokenizer is the first step in the process, which breaks the text into individual tokens or words. The input text is broken down into individual words or tokens, which are held for further processing. • Part-of-speech tagging: The part-of-speech (POS) tagger then labels each token with its corresponding part of speech, such as noun, verb, adjective, etc. This helps the system identify the function of each word in the input text. • Named-entity recognition: The named-entity recognizer (NER) is used to identify and classify named entities, such as person names, organization names, and location names. • Dependency parsing: The dependency parser analyzes the relationships between words in the sentence and creates a tree structure that represents the syntactic structure of the sentence. This can help the system understand the meaning of the sentence and extract relevant information. These sub-components work together to enable the natural language parser component to understand the meaning of the text and extract important information from it.  
   
  Personalized Feedback Enhanced by Natural Language Processing  
   
  671  
   
  Once the natural language parser has analyzed the input text and extracted relevant information, the information can be passed on to the feedback generator component for further processing. In view of the above, the series of steps made by the Natural Language Parser is as follows: 1. 2. 3. 4. 5. 6. 7.  
   
  Initialization Tokenize the input text into a list of words Apply part-of-speech tagging to the list of words Apply named-entity recognition to the list of words Apply dependency parsing to the list of words Extract relevant information, such as the main topic and key concepts, of the response Return the extracted information  
   
  3.2 Feedback Generator The Feedback Generator component is responsible for generating feedback based on the output of the natural language parser. It uses this output to provide additional resources or examples to help the student better understand that concept. The process typically involves the following steps: • Analysis of the input information: The feedback generator analyzes the information extracted by the natural language parser to identify the key concepts and ideas inserted by the learner. • Identification of strengths and weaknesses: Based on the analysis of the input information, the feedback generator identifies areas where the student has demonstrated a strong understanding of the material, as well as areas where the student may need further clarification or explanation. For example, if the learner has demonstrated a good understanding of object-oriented programming concepts but struggles with Java syntax, the feedback generator might provide additional resources or examples to help the learner improve their syntax skills. Similarly, if the learner has demonstrated good problem-solving skills but struggles with debugging code, the feedback generator might provide additional examples or resources on debugging techniques. • Generation of feedback: Using the information gathered in the previous steps, the feedback generator generates feedback that is tailored to the learner’s specific needs and level of understanding. The feedback may include suggestions for improvement, examples to illustrate key concepts, or explanations of difficult concepts. The feedback can take various forms, such as textual explanations, examples, or links to additional resources. The feedback generator may also provide positive reinforcement to the learner, highlighting areas where they are doing well and encouraging them to continue to build on their strengths. Once the feedback has been generated, it can be evaluated by the feedback evaluator component. In view of the above, the steps that can be made by the Feedback Generator is as follows: 1. Initialization  
   
  672  
   
  C. Troussas et al.  
   
  2. Receive the extracted information from the natural language parser 3. Use a rule-based system to generate personalized feedback for the student 4. Return the generated feedback 3.3 Feedback Evaluator The feedback evaluator component is crucial for improving the overall effectiveness of the intelligent tutoring system. By collecting feedback from the learner and analyzing the quality of the feedback provided, the system can make adjustments to its approach to better meet the needs of the student. This helps to ensure that the feedback provided is effective and helpful, ultimately leading to improved learning outcomes. For example, in case of an unhelpful feedback, the system can adjust its approach for providing better feedback on that topic in the future. The process involves several steps: • Collection of feedback: This process involves collecting feedback from the student on the feedback provided by the system. This can be done through various methods such as surveys, questionnaires, or direct feedback in the user interface of the intelligent tutoring system. The feedback collected can include the learner’s opinion on the usefulness of the feedback, whether it addressed their needs, and suggestions for improvement. • Evaluation of feedback: The feedback evaluator evaluates the quality of the feedback using a predefined metric. This helps the system identify areas where the feedback could be improved. • Incorporation of feedback: Based on the results of the evaluation, the feedback evaluator makes improvements to the system, such as adding new examples, clarifying explanations, or modifying the feedback generation algorithm. • Iteration: It refers to the process of revising and improving the feedback evaluator’s recommendations. This process typically involves re-analyzing the input information, identifying any additional strengths and weaknesses, and generating new feedback that addresses the student’s individual needs more effectively. By continually evaluating and improving the feedback provided by the system, the feedback evaluator helps to ensure that the system is effective in helping students learn and master the material. In view of the above, the steps that can be made by the Feedback Evaluator is as follows: 1. Initialization 2. Collect feedback from the student on the effectiveness of the feedback provided by the system 3. Evaluate the quality of the feedback using a predefined metric 4. Use the feedback and evaluation results to identify areas for improvement 5. Incorporate the feedback and evaluation results into the system to improve the quality of future feedback 6. Return the updated system  
   
  Personalized Feedback Enhanced by Natural Language Processing  
   
  673  
   
  4 Example of Operation Suppose that the system receives the following response from a student who is asked to explain the difference between an interface and a class in Java: “An interface is like a blueprint for a class, while a class is an actual implementation. Interfaces define a set of methods that must be implemented by a class that implements the interface, while classes can have their own methods and properties.” The natural language parser would make the following steps: 1. Initialization 2. Tokenize the input text into a list of words: [“An”, “interface”, “is”, “like”, “a”, “blueprint”, “for”, “a”, “class”, “,”, “while”, “a”, “class”, “is”, “an”, “actual”, “implementation”, “.”, “Interfaces”, “define”, “a”, “set”, “of”, “methods”, “that”, “must”, “be”, “implemented”, “by”, “a”, “class”, “that”, “implements”, “the”, “interface”, “,”, “while”, “classes”, “can’, “have”, “their”, “own’, “methods”, “and”, “properties”, “.”] 3. Apply part-of-speech tagging to the list of words: [(“An”, ‘DT’ (Determiner)), (“interface”, ‘N’ (Noun)), (“is”, ‘VBZ’ (Verb, 3rd person singular present)), (“like”, IN’ (Preposition)), (“a”, ‘DT’), (“blueprint”, ‘NN’), (“for”, ‘IN’), (“a”, ‘DT’), (“class”, ‘NN’), (“,”, ‘,’), (“while”, ‘IN’), (“a”, ‘DT’), (“class”, ‘NN’), etc. Using the extracted information from the natural language parser, the feedback generator component might generate the following feedback: “Great explanation! You’ve correctly identified that an interface is like a blueprint for a class and that classes are actual implementations. You also correctly noted that interfaces define a set of methods that must be implemented by a class that implements the interface, while classes can have their own methods and properties. Keep up the good work!” Suppose the student responds to the feedback with the following comment: “Thanks for the feedback! I think it would be helpful if you could provide more examples of interfaces and classes in Java”. The feedback evaluator component can process this feedback, following the steps in Subsect. 3.3. Analyzing the above example of operation, it can be inferred that the natural language parser component was able to extract the relevant information from the student’s response, such as the difference between an interface and a class in Java. The feedback generator component then used this information to generate personalized feedback that addressed the student’s needs. Finally, the feedback evaluator component assessed the quality of the feedback and determined whether it was helpful or not to the student.  
   
  5 Evaluation The evaluation process took place for a whole academic semester during the tutoring of the undergraduate course of “Java Programming” in the school of engineering of a public university of the capital city of the country. In particular, three educators, and 110 undergraduate students, participated in the evaluation process. All the measurements  
   
  674  
   
  C. Troussas et al.  
   
  of gender and age were derived from a randomly selected sample and did not have an impact on our research findings. The population was equally divided by the instructors in two groups, each of which had equal number of students. The first group, namely the experimental group, were asked to use the ITS using NLP techniques, while the second group, namely the control group, did not take advantage of the feedback generation module. User satisfaction is an important metric for evaluating the effectiveness of an intelligent tutoring system that incorporates personalized feedback using natural language processing. To this direction, a questionnaire was used to measure users’ perceptions of the system’s effectiveness, ease of use, and overall satisfaction. A t-test analysis was used to compare the mean scores of the two groups of students in order to determine if there is a statistically significant difference in user satisfaction between learners who have used the ITS that incorporates personalized feedback using NLP and those who have not. The t-test analysis involved the following steps: 1. Selection of the participants: the two groups were similar in terms of their demographic characteristics and academic background. 2. Survey administration: we administered a questionnaire to both groups of learners to measure their perceptions of the system’s effectiveness, ease of use, and overall satisfaction. 3. Mean scores computation: we calculated the mean scores for each group on each of the survey questions. 4. Conduction of the t-test: we conducted a two-sample t-test to determine if there is a statistically significant difference in the mean scores between the two groups. The t-test provided a p-value that indicated the probability of observing the difference in mean scores by chance alone. 5. Interpretation of the results: If the p-value is less than the significance level (set at .05), then there is evidence to suggest that the difference in mean scores between the two groups is statistically significant. This would indicate that the ITS is more effective at improving user satisfaction than traditional learning methods. Overall, the t-test analysis provides valuable insights into the effectiveness of an ITS that incorporates personalized feedback using NLP by comparing user satisfaction between learners who have used the system and those who have not. However, it’s important to note that the results of the t-test should be interpreted in conjunction with other metrics such as learning outcomes and engagement metrics to provide a more comprehensive evaluation of the system’s effectiveness. After the completion of the course at the end of the semester, the two groups, experimental and control group, were asked to answer a questionnaire, based on a 7-point Likert scale ranging from (1) strongly disagree to (7) strongly agree (Table 1). The responses to the aforementioned questions provide valuable insights into the user experience of the ITS and help identify areas for improvement. User satisfaction provides valuable feedback on the usability, effectiveness, and overall satisfaction of the system, which can be used to improve the system’s design and functionality. A statistical hypothesis test was used to assess the proposed system more thoroughly. The 2-tailed t-test results are presented in Table 2.  
   
  Personalized Feedback Enhanced by Natural Language Processing  
   
  675  
   
  Table 1. Evaluation questions of user satisfaction. Measurement  
   
  Question  
   
  System’s effectiveness 1. Does the system provide feedback that is relevant and useful to your needs? 2. Does the feedback help you improve your understanding and performance? Ease of use  
   
  3. Is the user interface of the system easy to use? 4. Are the instructions clear and easy to understand?  
   
  Overall satisfaction  
   
  5. How satisfied are you with the system overall? 6. Would you recommend the system to others?  
   
  Table 2. t-Test results. Question 1  
   
  Question 2  
   
  Question 3  
   
  Experimental group  
   
  Control group  
   
  Experimental Group  
   
  Control group  
   
  Experimental Group  
   
  Control group  
   
  Mean  
   
  6.08  
   
  3.49  
   
  6.48  
   
  3.66  
   
  6.35  
   
  3.18  
   
  Variance  
   
  0.78  
   
  0.36  
   
  0.39  
   
  0.45  
   
  0.54  
   
  0.59  
   
  t-Stat  
   
  2.71  
   
  4.19  
   
  3.99  
   
  P two-tail  
   
  0.0014  
   
  0.00055  
   
  0.00037  
   
  t Critical two-tail  
   
  2.03  
   
  1.83  
   
  1.90  
   
  Question 4  
   
  Question 5  
   
  Question 6  
   
  Experimental group  
   
  Control group  
   
  Experimental Group  
   
  Control group  
   
  Experimental Group  
   
  Control group  
   
  Mean  
   
  5.99  
   
  3.58  
   
  6.31  
   
  3.55  
   
  6.05  
   
  3.13  
   
  Variance  
   
  0.81  
   
  0.39  
   
  0.37  
   
  0.49  
   
  0.50  
   
  0.67  
   
  t-Stat  
   
  2.65  
   
  4.22  
   
  3.76  
   
  P two-tail  
   
  0.0019  
   
  0.00054  
   
  0.00041  
   
  t Critical two-tail  
   
  2.01  
   
  1.88  
   
  1.94  
   
  It is recorded a significant difference between the mean values of all the six questions. The results are somehow expected as the ITS incorporates NLP techniques, and students realized improved learning outcomes. Since t-Test values for the six questions are greater than the critical t, the results suggest that our system had a significant positive effect on the students’ satisfaction.  
   
  676  
   
  C. Troussas et al.  
   
  6 Conclusions This paper proposes a natural language processing-based approach to enhance feedback in intelligent tutoring systems for Java programming education. The proposed approach consists of three main components: a natural language parser, a feedback generator, and a feedback evaluator. The natural language parser converts learner comments into structured data that can be analyzed, while the feedback generator uses this data to generate personalized feedback for the learner. The feedback evaluator component then assesses the quality of the generated feedback and determines its helpfulness to the learner. The proposed approach was demonstrated through example of operation and was assessed by real students. Future research can further explore the use of natural language processing techniques in intelligent tutoring systems for programming education. One potential area of exploration is the use of more advanced natural language processing technique to further enhance the feedback generation process. Additionally, the proposed feedback evaluation component could be further refined to better assess the quality of the generated feedback.  
   
  References 1. Yang, C.C.Y., Ogata, H.: Personalized learning analytics intervention approach for enhancing student learning achievement and behavioral engagement in blended learning. Educ. Inf. Technol. (2022). https://doi.org/10.1007/s10639-022-11291-2 2. Krouska, A., Troussas, C., Sgouropoulou, C.: A personalized brain-based quiz game for improving students’ cognitive functions. In: Frasson, C., Bamidis, P., Vlamos, P. (eds.) BFAL 2020. LNCS (LNAI), vol. 12462, pp. 102–106. Springer, Cham (2020). https://doi.org/10. 1007/978-3-030-60735-7_11 3. Krouska, A., Troussas, C., Sgouropoulou, C.: Applying genetic algorithms for recommending adequate competitors in mobile game-based learning environments. In: Kumar, V., Troussas, C. (eds.) ITS 2020. LNCS, vol. 12149, pp. 196–204. Springer, Cham (2020). https://doi.org/ 10.1007/978-3-030-49663-0_23 4. Troussas, C., Chrysafiadi, K., Virvou, M.: Machine learning and fuzzy logic techniques for personalized tutoring of foreign languages. In: Penstein Rosé, C., et al. (eds.) AIED 2018. LNCS (LNAI), vol. 10948, pp. 358–362. Springer, Cham (2018). https://doi.org/10.1007/ 978-3-319-93846-2_67 5. Kanetaki, Z., Stergiou, C., Bekas, G., Troussas, C., Sgouropoulou, C.: Analysis of engineering student data in online higher education during the COVID-19 pandemic. Int. J. Eng. Pedag. (iJEP) 11(6), 27–49 (2021). https://doi.org/10.3991/ijep.v11i6.23259 6. Bellarhmouch, Y., Jeghal, A., Tairi, H., et al.: A proposed architectural learner model for a personalized learning environment. Educ. Inf. Technol. (2022). https://doi.org/10.1007/s10 639-022-11392-y 7. Troussas, C., Krouska, A., Sgouropoulou, C.: Enriching mobile learning software with interactive activities and motivational feedback for advancing users’ high-level cognitive skills. Computers 11(2), 18 (2022). https://doi.org/10.3390/computers11020018 8. Troussas, C., Krouska, A., Sgouropoulou, C.: Improving learner-computer interaction through intelligent learning material delivery using instructional design modeling. Entropy 23(6), 688 (2021). https://doi.org/10.3390/e23060668  
   
  Personalized Feedback Enhanced by Natural Language Processing  
   
  677  
   
  9. Troussas, C., Krouska, A., Sgouropoulou, C.: Impact of social networking for advancing learners’ knowledge in E-learning environments. Educ. Inf. Technol. 26(4), 4285–4305 (2021). https://doi.org/10.1007/s10639-021-10483-6 10. Katz, A., Norris, M., Alsharif, A.M., Klopfer, M.D., Knight, D.B., Grohs, J.R.: Using natural language processing to facilitate student feedback analysis. In: 2021 ASEE Virtual Annual Conference (2021) 11. Kastrati, Z., Dalipi, F., Imran, A.S., Pireva Nuci, K., Wani, M.A.: Sentiment analysis of students’ feedback with NLP and deep learning: a systematic mapping study. Appl. Sci. 11(9), 3986 (2021). https://doi.org/10.3390/app11093986 12. Dalipi, F., Zdravkova, K., Ahlgren, F.: Sentiment analysis of students’ feedback in MOOCs: a systematic literature review. Front. Artif. Intell. 4, 728708 (2021). https://doi.org/10.3389/ frai.2021.728708 13. Sangeetha, D.R., Hegde, P.V., Prerana, N.G., Bh, M.K.: Feedback and recommendation system using natural language processing. SSAHE J. Interdisc. Res. 17(1), 17–27 (2020) 14. Albreiki, B., Habuza, T., Shuqfa, Z., Serhani, M.A., Zaki, N., Harous, S.: Customized rulebased model to identify at-risk students and propose rational remedial actions. Big Data Cogn. Comput. 5(4), 71 (2021). https://doi.org/10.3390/bdcc5040071 15. Chan, H.C., Wei, K.K., Siau, K.L.: A rule-based system for query feedback. In: Proceedings of the Twenty-sixth Hawaii International Conference on System Sciences, Wailea, HI, USA, pp. 53–61 (1993). https://doi.org/10.1109/HICSS.1993.284286 16. Kuo, J.-Y., Lin, H.-C., Wang, P.-F., Nie, Z.-G.: A feedback system supporting students approaching a high-level programming course. Appl. Sci. 12(14), 7064 (2022). https://doi. org/10.3390/app12147064 17. Xiao, C., Zhang, Y., Liu, B., Liu, H.: Deep learning for natural language processing in intelligent tutoring systems: a systematic review. IEEE Trans. Educ. 64(1), 50–61 (2021) 18. Huang, Y., Chen, M.C., Sun, Y.S.: Development and evaluation of a personalized computeraided question generation for english learners to improve proficiency and correct mistakes. ArXiv, abs/1808.09732 (2018). https://doi.org/10.48550/arXiv.1808.09732 19. Singh, R., Gulwani, S., Solar-Lezama, A.: Automated feedback generation for introductory programming assignments. In: Proceedings of the 34th ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI 213), pp. 15–26. ACM, New York (2013). https://doi.org/10.1145/2491956.2462195 20. Mathew, A.N., Rohini, V., Paulose, J.: NLP-based personal learning assistant for school education. Int. J. Electr. Comput. Eng. 11(5), 4522–4530 (2021). https://doi.org/10.11591/ ijece.v11i5.pp4522-4530 21. Roldán-Álvarez, D.: Smart tutor to provide feedback in programming courses. ArXiv, abs/1808.09732, abs/2301.09918 (2023). DOI: https://doi.org/10.48550/arXiv.2301.09918  
   
  SC-Q UES: A Sentence Completion Question Dataset for English as a Second Language Learners Qiongqiong Liu1 , Yaying Huang1(B) , Zitao Liu2 , Shuyan Huang1 , Jiahao Chen1 , Xiangyu Zhao3 , Guimin Lin4 , Yuyu Zhou2 , and Weiqi Luo2  
   
  2  
   
  1 TAL Education Group, Beijing, China {liuqiongqiong1,huangyaying1,huangshuyan,chenjiahao}@tal.com Guangdong Institute of Smart Education, Jinan University, Guangzhou, China {liuzitao,zyy,lwq}@jnu.edu.cn 3 City University of Hong Kong, Hong Kong, China [email protected]  4 Shenzhen Everants Technology, Shenzhen, China [email protected]   
   
  Abstract. Sentence completion (SC) questions present a sentence with one or more blanks that need to be ﬁlled in, three to ﬁve possible words or phrases as options. SC questions are widely used for students learning English as a Second Language (ESL). In this paper, we present a large-scale SC dataset, SC-Ques, which is made up of 289,148 ESL SC questions from real-world standardized English examinations. Furthermore, we build a comprehensive benchmark of automatically solving the SC questions by training the large-scale pre-trained language models on the proposed SC-Ques dataset. We conduct detailed analysis of the baseline models performance, limitations and trade-oﬀs. The data and our code are available for research purposes from: https://github.com/ ai4ed/SC-Ques.  
   
  1  
   
  Introduction  
   
  Standardized examination is one of the crucial elements in worldwide education systems of teaching English as a Second Language (ESL) [3,53]. They have proved a necessary source of evaluation data for investigating and diagnosing the situations that ESL learners grasp the essential language knowledge [10,13,31]. The standardized ESL examinations are usually organized in various formats of well-designed language processing tasks to evaluate speciﬁc capabilities. Previous researchers have spent lots of eﬀorts in designing such language proﬁciency evaluation tasks which can be summarized into three categories: narrow, intermediate, and general [4,48,53]. These tasks are designed to assess diﬀerent ESL language understanding capabilities from word, sentence, paragraph/document levels. For examples, among the narrow tasks, the identiﬁcation of synonyms and antonyms has been widely used in the Test of English c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 678–690, 2023. https://doi.org/10.1007/978-3-031-32883-1_59  
   
  SC-Ques: A Sentence Completion Question Dataset  
   
  679  
   
  as a Foreign Language (TOEFL), Graduate Record Exams (GRE) and many other ESL standardized exams [33,44,45]. General tasks involve more logical and comprehensive abilities such as logic puzzles in the Law School Administration Test (LSAT) [9,23,24], reading comprehension questions from GRE [34,39], etc. The intermediate tasks stand between the word-level narrow tasks and the paragraph-level general tasks and focus on the sentence level language understanding. Among all the intermediate tasks, sentence completion (SC) questions are well-studied as one of the classic representatives [22,42,49]. SC questions present a sentence with one or more blanks that need to be ﬁlled in. Three to ﬁve possible words (or short phrases) are given as options for each blank and only one of the options yields to a reasonable sentence. An example of SC question is shown in Table 1. Table 1. An illustrative example of SC questions. — That T-shirt with Yao Ming’s picture on it belong to John. He likes him a lot. be his. He hates black color. — No, it (A) can; can’t (B) may; needn’t (C) must; mustn’t (D) must; can’t  
   
  An intelligent computational approach to SC in ESL is able to provide instant feedback to students and help students learn and practice ESL questions anytime anywhere. Besides, it provides feasible solutions to evaluate distractors in SC questions and helps teachers revise and improve the overall qualities of SC questions. Furthermore, the questions can also be used to generate more personalized questions that match the students’ knowledge mastery, the mastery of students can be obtained by the knowledge tracing task [5,28–30]. Hence, constructing a SC dataset is essential to building an intelligent SC approach. Although there are a few publicly available SC datasets such as MSR SC dataset1 [42,48,52], their sample sizes are very limited and only contain a few thousand SC questions. Such small datasets are not able to align with the power of the state-of-the-art (SOTA) pre-trained language models (LMs). Furthermore, the number of missing blanks and the length of candidate tokens are ﬁxed in existing open-sourced SC datasets [52]. However, in the real-world English learning scenario, SC questions are usually presented in diverse forms with irregular numbers of blanks and various lengths of to-be-ﬁlled tokens. To tackle the above limitations in existing SC datasets, we introduce SCQues, a large-scale SC question dataset for ESL learners. The proposed SCQues dataset contains 289,148 questions with one or more missing blanks. To the best of our knowledge, SC-Ques is one of the largest SC question dataset for ESL learners. Meanwhile, we ﬁne-tune the existing SOTA pre-trained LMs 1  
   
  https://www.microsoft.com/en-us/research/project/msr-sentence-completion-chall enge/.  
   
  680  
   
  Q. Liu et al.  
   
  on the SC-Ques dataset and present a systematic benchmark of automatically solving the ESL SC questions in students’ real-life scenarios. We conduct comprehensive experimental evaluations to understand the performance impacts of diﬀerent lengths of SC questions contexts and diﬀerent numbers of words in candidate options. We conduct the precision-recall trade-oﬀ analysis and discuss the practical issues when deploying the SC question AI solver in real-world educational contexts.  
   
  2 2.1  
   
  The SC-Ques Dataset Data Collection  
   
  SC questions in SC-Ques are real English assignment questions used for K-12 students and they are developed by teaching content professionals from one of the largest educational technology companies in China. Each SC question in SC-Ques is represented as the single select multiple choice question format that consists of three parts: (1) question stem that denotes the main text content of the target ESL question with one or more blanks; (2) candidate options that are represented as a predetermined set of responses of at least three or more options; and (3) answer that indicates the correct one to be ﬁlled in the blanks. Even though all the SC questions are manually developed by teaching professionals, there exists some data duplication, missing data problems or data corruption issues. Therefore, we conduct a series of steps to ﬁlter out or clean up the duplication and ill-formed SC questions. Speciﬁcally, we remove the duplicate question with the same options. And we ﬁlter out SC questions that if the question stem, candidate options, or answer is missing. Furthermore, we only remain SC questions whose number of candidate options is equal to 3 or 4. 2.2  
   
  SC Question Categorization  
   
  Due to the arbitrary number of blanks and tokens in the ESL SC tasks, questions in SC-Ques are categorized into the following categories according to the blank numbers and tokens numbers and the examples of each category are illustrated in Table 2. – C1: One-blank and one-token. Questions have one to-be-ﬁlled blank and the longest candidate option has one token. – C2: One-blank and many-token. Questions have one to-be-ﬁlled blank and the longest candidate option has multiple tokens. – C3: Many-blank and one-token. Questions have more than one to-beﬁlled blanks and the longest candidate option has one token. – C4: Many-blank and many-token. Questions have more than one to-beﬁlled blanks and the longest candidate option has multiple tokens.  
   
  SC-Ques: A Sentence Completion Question Dataset  
   
  681  
   
  Table 2. Illustrative examples of SC questions from diﬀerent categories. C1  
   
  Jack is five years old now. He can dress  
   
  .  
   
  (A) herself (B) himself (C) yourself Sam and Mike aren’t at school.  
   
  are they?  
   
  (A) How (B) Who (C) Where C2  
   
  — I’m very tall. Where can I sit? —  
   
  the classroom.  
   
  (A) In the front of (B) At the back of (C) In the middle of — I find that I have been unlucky these days. —  
   
  Everything will become better soon.  
   
  (A) Keep silent! (B) Why not cry? (C) Cheer up! (D) How about you? C3  
   
  — Whose are those jeans? — This pair of jeans  
   
  mine and that two pairs  
   
  my brother’s.  
   
  (A) are; are (B) are; is (C) is; are — That T-shirt with Yao Ming’s picture on it  
   
  belong to John.  
   
  He likes him a lot. — No, it  
   
  be his. He hates black color.  
   
  (A) can; can’t (B) may; needn’t (C) must; mustn’t (D) must; can’t C4  
   
  We have  
   
  homework to do every day so we can’t play  
   
  computer games. (A) too many; too many (B) too much; too many (C) too many; too much (D) too much; too much of their bad habits, the boys changed from being dependent on their parents to  
   
  for others.  
   
  (A) Having rid; sacrificing (B) To rid; sacrifice (C) Rid; sacrificing (D) Having been rid; sacrifice  
   
  2.3  
   
  Data Statistics  
   
  After data cleaning and preprocessing, in total, we end up with 289,148 SC questions in SC-Ques. Speciﬁcally, we have 110,645 133,249, 27,886, and 17,368 SC questions in categories C1, C2, C3 and C4 respectively. 84.35% of SC questions have one blank missing. The length distribution of the question stems in SCQues is shown in Fig. 1. As we can see that most of the questions contain 5 to 15 words and sentences of 9 words have the largest portion. There are only 5.88% questions that have more than 20 words. This indicates SC questions usually have very limited contexts and imply subtle linguistic knowledge such as grammar, syntax, and semantics, the performance of automatically solving the ESL SC questions may vary a lot.  
   
  3 3.1  
   
  Benchmark Problem Formulation  
   
  Let q be the SC question stem with one or more blanks. Let o1 , · · · , om be the candidate options associated with q. Solving the SC question is to ﬁnd the option that leads to the highest correct probability after completing the to-beﬁlled sentence with the selected option, i.e., arg maxi=1,··· ,m Pr(oi |q).  
   
  682  
   
  Q. Liu et al.  
   
  Fig. 1. Length distribution of SC questions in SC-Ques.  
   
  3.2  
   
  Benchmark Workﬂow  
   
  In this work, we view the above problem as a predictive task and we aim to train a classiﬁer to ﬁnd the correct answer from the option pool of confusing candidates. Speciﬁcally, we ﬁrst ﬁll candidate options into the corresponding blanks to get complete sentences. Then we treat sentences that contain the correct options as positive examples and the rest as negative examples. After that, we utilize a neural LM model to extract the semantically meaningful information within each sentence in SC questions and make ﬁnal SC question predictions via a multilayer perceptron (MLP). The overall end-to-end benchmark workﬂow is shown in Fig. 2.  
   
  Fig. 2. The overall benchmark workﬂow. The sentence in red color denotes the correct option and is denoted as the positive example in the training process. (Color ﬁgure online)  
   
  The Neural Language Model. Large-scale pre-trained LMs such as BERT [19], RoBERTa [27], XLNet [50], BART [25] and DeBERTa [17], beneﬁt from selfsupervised learning on a large amount of corpus, and has shown its competent generalization to various downstream natural language understanding tasks. In this work, we conduct a systematic benchmark evaluation by measuring the prediction accuracy with existing prevalent large-scale pre-trained LMs listed as follows. Please note that we choose to use their large model versions for experiments. Since we expect each SC question to be solved correctly, we choose to use accuracy as our evaluation metric.  
   
  SC-Ques: A Sentence Completion Question Dataset  
   
  683  
   
  – BERT [19]. A pre-trained natural language understanding model with transformer encoder blocks. We ﬁne-tune BERT on our SC dataset as a sentence classiﬁcation task. We use a special start token ([CLS]) as the ﬁrst token of every text sequence and the ﬁnal hidden state corresponding to this token is used as the aggregated SC sentence representation. – RoBERTa [27]. RoBERTa improves BERT by replacing static masking with dynamic masking, pre-training more epochs with larger batch size, and removing the next sentence prediction task. We follow the same ﬁne-tuning protocol as described in the BERT method. – XLNet [50]. XLNet is an autoregressive based pre-training method with transformer decoder blocks. Similar to BERT, we ﬁne-tune the XLNet and utilize the last hidden state as the SC representation. – BART [25]. BART adapts standard Transformer [46] as its backbone model and utilizes a denoising autoencoder for pretraining sequence-to-sequence models. It is pre-trained to recover diﬀerent types of text corruptions to their original versions, such as sentence permutation and text inﬁlling. – DeBERTaV3 [16]. DeBERTaV3 improves the original DeBERTa [17] model by replacing mask language modeling with replaced token detection. The model is trained as a discriminator to predict whether a token in the corrupted input is either original or replaced by a generator. The MLP Prediction. Once we obtain the ﬁnal hidden state tn from above neural LM module as the aggregated SC sentence representation. We introduce two additional fully-connected layers to perform the binary classiﬁcation task, i.e., x = softmax(W1 tanh(W0 tn + b0 ) + b1 )), where W0 , W1 , b0 and b1 are trainable parameters, W0 ∈ R1024×d , b0 ∈ R1024 , W1 ∈ R2×1024 and b1 ∈ R2 , tn ∈ Rd . The ﬁrst entry of x gives the probability of wrong option while the second entry gives right option probability. The objective is to minimize the cross entropy of the right or wrong option labels. 3.3  
   
  Experimental Setup and Details  
   
  We randomly split the entire dataset into training set and testing set with 241,195 and 47,953 SC questions respectively in an approximate ratio of 5 : 1. For BERT, RoBERTa, XLNet and DeBERTaV3, each model has 24 hidden layers, 1024 hidden size and 16 attention heads. For the BART model, it has 12 hidden layers and 16 attention heads in each of the encoder and decoder, and the hidden size is 1024. We employ the AdamW [21] as the optimizer with an initial learning rate of 1e-5 for all models. We ﬁne-tune our model on 4 T V100 GPU devices. Due to the limited memory of GPU devices, the batch size of BERT is set to 32, and the other models set the batch size as 16. The max length of the sentences is set to 128. 3.4  
   
  Results  
   
  Overall Performance. As we can see from Fig. 3, DeBERTaV3 outperforms other models in terms of prediction errors on the entire testing set. This indi-  
   
  684  
   
  Q. Liu et al.  
   
  cates DeBERTaV3 has better generalization performance among all the selected pre-trained LMs which may be due to the eﬀective token detection task to discriminate whether the corrupted token is original or replaced by a generator in DeBERTaV3. When comparing the prediction performance of all the methods on C1, C2, C3 and C4, we can see that C3 and C4 have better performance than C1 and C2, we think the reason is that C1 and C2 have only one blank, the diﬀerence of the completed sentences of each option are quite similar which makes the models hard to distinguish this subtle diﬀerence. We run the pairwise t-test for each possible pair from these methods and all of them are statistically signiﬁcantly diﬀerent at 0.01 level.  
   
  Fig. 3. Accuracy on diﬀerent categories of SC-Ques.  
   
  Fig. 4. Length distribution of SC questions in SC-Ques.  
   
  Impacts of Diﬀerent Lengths of SC Questions Contexts. We study the impacts of diﬀerent lengths of questions and the results are shown in Fig. 4. From  
   
  SC-Ques: A Sentence Completion Question Dataset  
   
  685  
   
  the model performance curve, when the length of the questions is larger than 10, the models’ performances drop sharply. This indicates that after exceeding a certain length, questions become more diﬃcult with the increase of the context length. The reason may be that the model is diﬃcult to capture the contextual information in such a long distance. What is interesting is that if the length of the question is less than 3, the models also show slightly poor performance, which indicates that it is hard for the model to distinguish diﬀerent options once there is not enough context information. More speciﬁcally, the performance of DeBERTaV3 is less than the performance of BART when the length of the question is less than 7. With the increasing sequence length, DeBERTaV3 outperforms other models. We believe the reason is that DeBERTaV3 is trained as a discriminator to detect whether the token is original, the longer sequences provide relatively eﬀective information to make DeBERTaV3 discriminate the tokens, so they can get higher prediction results of SC compared to other models. Impacts of Diﬀerent Numbers of Words in Candidate Options. We also study the performance impacts in terms of the length of candidate options. We focus on the questions which have only one blank and two blanks. As shown in Table 3, we can see that the trend is similar to the diﬀerent lengths of the questions, DeBERTaV3 achieves the best performance in all lengths of candidate options. If the length of the candidate options is too short or too long, the performance would be a little worse. Table 3. Accuracy on diﬀerent lengths of the longest option in the questions which have one blank and two blanks. Methods  
   
  one blank  
   
  two blanks  
   
  1  
   
  2  
   
  3  
   
  ≥4  
   
  2  
   
  3  
   
  4  
   
  ≥5  
   
  BERT  
   
  0.9294  
   
  0.9433  
   
  0.9307  
   
  0.8984  
   
  0.9496  
   
  0.9388  
   
  0.9489  
   
  0.9161  
   
  RoBERTa  
   
  0.9311  
   
  0.9481  
   
  0.9345  
   
  0.9130  
   
  0.9527  
   
  0.9467  
   
  0.9506  
   
  0.9367  
   
  XLNet  
   
  0.9278  
   
  0.9439  
   
  0.9323  
   
  0.9136  
   
  0.9483  
   
  0.9324  
   
  0.9489  
   
  0.9288  
   
  BART  
   
  0.9411  
   
  0.9505  
   
  0.9393  
   
  0.9184  
   
  0.9503  
   
  0.9388  
   
  0.9465  
   
  0.9272  
   
  DeBERTaV3 0.9468 0.9543 0.9450 0.9349 0.9568 0.9571 0.9571 0.9383  
   
  Precision-Recall Trade-oﬀ Analysis. When deploying the model in practice, a wrong answer may give bad guidance to students. In order to reduce such problems, we may refuse to solve some diﬃcult questions and improve the precision of more solvable questions. The models in our benchmark will output the correct probability for each option, for each question, we use a softmax function with temperature 0.1 for the probabilities of all options, the ﬁnal highest probability can also be viewed as the problem-solvable conﬁdence score. After that, we set a threshold to the correct probability of the model’s selected option and accept the above-the-threshold questions as our solvable questions. The recall score is computed as (the number of solvable questions)/(the number of all test questions), and the precision score is calculated as (the number of both solvable and  
   
  686  
   
  Q. Liu et al.  
   
  correct-answered questions)/(the number of solvable questions). The precision and recall curves of all the pre-trained LMs in diﬀerent thresholds are shown in Fig. 5, We can see that with the threshold growing, the precision is higher and the recall becomes smaller. When the threshold is 0.95, the precision of most of the models are higher than 97.0% and the recall scores keep greater than 80.0%. Especially, regardless of the threshold values, the precision of DeBERTaV3 is always higher than 95.0% and the recall scores never lower than 87.0%.  
   
  Fig. 5. The precision-recall curve.  
   
  4 4.1  
   
  Related Work Sentence Completion Datasets  
   
  SC datasets always include in-completed sentences which require selecting the most appropriate answer from several options. Recently, there are several publicly available SC datasets. MSR is a SC challenge data consisting of 1,040 sentences with four impostor sentences for each original sentence [52]. CODAH involves multiple choice SC questions, each SC question contains four options which are consistent with commonsense [6]. Park and Park collected 1823 clozestyle questions with multiple-choice questions from the Test of Proﬁciency in Korean (TOPIK) [36]. Nozza et al. provided a manually labeled hurtful SC dataset in six languages [35]. Compared with the above works, our proposed SC-Ques is a relatively large-scale SC dataset with more than 290 thousand ESL SC questions. 4.2  
   
  Sentence Completion Solvers  
   
  Various approaches have been proposed to automatically solve the ESL SC questions. Earlier literature prefer complete the sentence by ﬁlling the blank with each  
   
  SC-Ques: A Sentence Completion Question Dataset  
   
  687  
   
  candidate option in turn, and to evaluate its likelihood under an LM [7,8,53]. Motivated by the successful applications in language modeling via deep neural networks [14,32,40], recent studies tackle the SC challenges based on the recurrent neural networks (RNN) [43,49]. For examples, Yang and Deng proposed a global context dependent RNN LM to obtain the global semantics of the target in the SC tasks [49]. Since large-scale pre-trained LMs become remarkably powerful models for language understanding and attain unprecedented levels of performance gains on multiple language tasks [18,19,37,38], there are some approaches utilize pre-trained LMs to solve the SC questions [11,41,51]. Donahue et al. trained the language model by using the concatenation of artiﬁcially-masked texts and the texts which are masked as input [11]. Besides above research works of solving SC questions via language modeling, researchers also make attempts from diﬀerent machine learning perspectives [1,2,12,15,26,48]. Liu et al. developed an gradient search based iterative inference algorithm that can be broadly applied to any neural sequence generative model for the ﬁll-in-the-blank tasks [26]. Researchers also studied automatically solve questions in domains other than ESL, such as history [47], science [20], etc.  
   
  5  
   
  Conclusion  
   
  In this paper, we construct a large-scale SC question dataset, SC-Ques, for ESL Learners. The SC-Ques consists of 289,148 SC questions with four categories of questions that contain almost all SC classiﬁcations in the English examinations of the real world. Furthermore, we present a benchmark on the proposed SCQues for automatically solving the ESL SC questions. The experimental results indicate the eﬀectiveness of our dataset and the proposed benchmark. Acknowledgments. This work was supported in part by National Key R&D Program of China, under Grant No. 2020AAA0104500; in part by Beijing Nova Program (Z201100006820068) from Beijing Municipal Science & Technology Commission and in part by NFSC under Grant No. 61877029 and in part by Key Laboratory of Smart Education of Guangdong Higher Education Institutes, Jinan University (2022LSYS003).  
   
  References 1. Argouarc’h, J.: Dependency, skip-grams, association tensors and machine learning for sentence completion. In: Proceedings of the 14th International Conference on Natural Language Processing (2018) 2. Banerjee, S., Bhaskar, P., Pakray, P., Bandyopadhyay, S., Gelbukh, A.: Multiple choice question (MCQ) answering system for entrance examination. In: CrossLanguage Evaluation Forum (2013) 3. Beinborn, L., Zesch, T., Gurevych, I.: Candidate evaluation strategies for improved diﬃculty prediction of language tests. In: Proceedings of the Tenth Workshop on Innovative Use of NLP for Building Educational Applications (2015) 4. Beinborn, L.M.: Predicting and manipulating the diﬃculty of text-completion exercises for language learning. Ph.D. thesis, Technische Universit¨ at Darmstadt (2016)  
   
  688  
   
  Q. Liu et al.  
   
  5. Chen, J., Liu, Z., Huang, S., Liu, Q., Luo, W.: Improving interpretability of deep sequential knowledge tracing models with question-centric cognitive representations. In: AAAI Conference on Artiﬁcial Intelligence (2023) 6. Chen, M., D’Arcy, M., Liu, A., Fernandez, J., Downey, D.: CODAH: an adversarially-authored question answering dataset for common sense. In: Proceedings of the 3rd Workshop on Evaluating Vector Space Representations for NLP (2019) 7. Chen, S.F.: Performance prediction for exponential language models. In: Proceedings of Human Language Technologies: The 2009 Annual Conference of the North American Chapter of the Association for Computational Linguistics (2009) 8. Chen, S.F.: Shrinking exponential language models. In: Proceedings of Human Language Technologies: The 2009 Annual Conference of the North American Chapter of the Association for Computational Linguistics (2009) 9. Chesani, F., Mello, P., Milano, M.: Solving mathematical puzzles: a challenging competition for AI. AI Mag. 38(3) (2017) 10. Davey, G., De Lian, C., Higgins, L.: The university entrance examination system in china. J. Further High. Educ. 31(4) (2007) 11. Donahue, C., Lee, M., Liang, P.: Enabling language models to ﬁll in the blanks. In: Proceedings of the 58th Annual Meeting of the Association for Computational Linguistics (2020) 12. Fedus, W., Goodfellow, I., Dai, A.M.: MaskGAN: better text generation via ﬁlling in the . In: International Conference on Learning Representations (2018) 13. Franke, W.: The reform and abolition of the traditional Chinese examination system, vol. 10. Harvard University Asia Center (1960) 14. Graves, A., Mohamed, A.R., Hinton, G.: Speech recognition with deep recurrent neural networks. In: 2013 IEEE International Conference on Acoustics, Speech and Signal Processing (2013) 15. Gubbins, J., Vlachos, A.: Dependency language models for sentence completion. In: Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing (2013) 16. He, P., Gao, J., Chen, W.: DeBERTaV3: improving DeBERTa using ELECTRAstyle pre-training with gradient-disentangled embedding sharing. In: The Eleventh International Conference on Learning Representations (2023) 17. He, P., Liu, X., Gao, J., Chen, W.: DeBERTa: decoding-enhanced BERT with disentangled attention. In: International Conference on Learning Representations (2021) 18. Howard, J., Ruder, S.: Universal language model ﬁne-tuning for text classiﬁcation. In: Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers) (2018) 19. Kenton, J.D.M.W.C., Toutanova, L.K.: BERT: pre-training of deep bidirectional transformers for language understanding. In: Proceedings of the Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies (Volume 1: Long and Short Papers) (2019) 20. Khot, T., Sabharwal, A., Clark, P.: Scitail: a textual entailment dataset from science question answering. In: Proceedings of the AAAI Conference on Artiﬁcial Intelligence, vol. 32 (2018) 21. Kingma, D.P., Ba, J.: Adam: a method for stochastic optimization. arXiv preprint arXiv:1412.6980 (2014) 22. Lee, K., Lee, G.G.: Sentence completion task using web-scale data. In: 2014 International Conference on Big Data and Smart Computing (2014)  
   
  SC-Ques: A Sentence Completion Question Dataset  
   
  689  
   
  23. Lev, I.: Logic puzzles: a new test-suite for compositional semantics and reasoning (2006) 24. Lev, I., MacCartney, B., Manning, C.D., Levy, R.: Solving logic puzzles: from robust processing to precise semantics. In: Proceedings of the 2nd Workshop on Text Meaning and Interpretation (2004) 25. Lewis, M., et al.: BART: denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension. In: Proceedings of the 58th Annual Meeting of the Association for Computational Linguistics (2020) 26. Liu, D., Fu, J., Liu, P., Lv, J.: TIGS: an inference algorithm for text inﬁlling with gradient search. In: Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics (2019) 27. Liu, Y., et al.: RoBERTa: a robustly optimized BERT pretraining approach. arXiv preprint arXiv:1907.11692 (2019) 28. Liu, Z., et al.: Enhancing deep knowledge tracing with auxiliary tasks. In: The International Conference of World Wide Web (2023) 29. Liu, Z., Liu, Q., Chen, J., Huang, S., Luo, W.: simpleKT: a simple but toughto-beat baseline for knowledge tracing. In: International Conference on Learning Representations (2023) 30. Liu, Z., Liu, Q., Chen, J., Huang, S., Tang, J., Luo, W.: pyKT: a python library to benchmark deep learning based knowledge tracing models. In: Thirty-sixth Conference on Neural Information Processing Systems Datasets and Benchmarks Track (2022) 31. Madaus, G.F.: The eﬀects of important tests on students: implications for a national examination system. Phi Delta Kappan 73(3) (1991) ˇ 32. Mikolov, T., Kombrink, S., Burget, L., Cernock` y, J., Khudanpur, S.: Extensions of recurrent neural network language model. In: 2011 IEEE International Conference on Acoustics, Speech and Signal Processing (2011) 33. Mohammad, S., Dorr, B., Hirst, G.: Computing word-pair antonymy. In: Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing (2008) 34. Ng, H.T., Teo, L.H., Kwan, J.L.P.: A machine learning approach to answering questions for reading comprehension tests. In: 2000 Joint SIGDAT Conference on Empirical Methods in Natural Language Processing and Very Large Corpora (2000) 35. Nozza, D., Bianchi, F., Hovy, D.: HONEST: measuring hurtful sentence completion in language models. In: The 2021 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies. Association for Computational Linguistics (2021) 36. Park, H., Park, J.: Assessment of word-level neural language models for sentence completion. Appl. Sci. 10(4) (2020) 37. Peters, M.E., et al.: Deep contextualized word representations. In: Proceedings of the 2018 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies (Volume 1: Long Papers) (2018) 38. Radford, A., Wu, J., Child, R., Luan, D., Amodei, D., Sutskever, I.: Language models are unsupervised multitask learners. OpenAI Blog 1(8) (2019) 39. Riloﬀ, E., Thelen, M.: A rule-based question answering system for reading comprehension tests. In: ANLP-NAACL 2000 Workshop: Reading Comprehension Tests as Evaluation for Computer-Based Language Understanding Systems (2000) 40. Schuster, M., Paliwal, K.K.: Bidirectional recurrent neural networks. IEEE Trans. Signal Process. 45(11) (1997)  
   
  690  
   
  Q. Liu et al.  
   
  41. Shen, T., Quach, V., Barzilay, R., Jaakkola, T.: Blank language models. In: Proceedings of the 2020 Conference on Empirical Methods in Natural Language Processing (2020) 42. Tang, E.: Assessing the eﬀectiveness of corpus-based methods in solving SAT sentence completion questions. J. Comput. 11(4) (2016) 43. Tran, K.M., Bisazza, A., Monz, C.: Recurrent memory networks for language modeling. In: Proceedings of the 2016 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies (2016) 44. Turney, P.: A uniform approach to analogies, synonyms, antonyms, and associations. In: Proceedings of the 22nd International Conference on Computational Linguistics, Manchester, UK (2008) 45. Turney, P.D., Littman, M.L.: Corpus-based learning of analogies and semantic relations. Mach. Learn. 60(1–3) (2005) 46. Vaswani, A., et al.: Attention is all you need. In: Advances in Neural Information Processing Systems, vol. 30 (2017) 47. Wang, D., et al.: CMU multiple-choice question answering system at NTCIR-11 QA-Lab. In: Proceedings of the 11th NTCIR Conference on Evaluation of Information Access Technologies (2014) 48. Woods, A.: Exploiting linguistic features for sentence completion. In: Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume 2: Short Papers) (2016) 49. Yang, T., Deng, H.: Intelligent sentence completion based on global context dependent recurrent neural network LM. In: Proceedings of the International Conference on Artiﬁcial Intelligence, Information Processing and Cloud Computing (2019) 50. Yang, Z., Dai, Z., Yang, Y., Carbonell, J., Salakhutdinov, R.R., Le, Q.V.: XLNet: generalized autoregressive pretraining for language understanding. In: Advances in Neural Information Processing Systems, vol. 32 (2019) 51. Zhu, W., Hu, Z., Xing, E.: Text inﬁlling. arXiv preprint arXiv:1901.00158 (2019) 52. Zweig, G., Burges, C.J.: The Microsoft research sentence completion challenge. Technical report. Citeseer (2011) 53. Zweig, G., Platt, J.C., Meek, C., Burges, C.J., Yessenalina, A., Liu, Q.: Computational approaches to sentence completion. In: Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers) (2012)  
   
  Conversational Agents and Language Models that Learn from Human Dialogues to Support Design Thinking Stavros Demetriadis1(B)  
   
  and Yannis Dimitriadis2  
   
  1 Aristotle University of Thessaloniki, Thessaloniki, Greece  
   
  [email protected]  2 Universidad de Valladolid, Valladolid, Spain  
   
  [email protected]   
   
  Abstract. Design is a highly creative and challenging task and research has already explored possible ways for using conversational agents (CAs) to support humans participating in co-design sessions. However, research reports that a) humans in these sessions expect more essential support from CAs, and b) it is important to develop CAs that continually learn from communication -like humans do- and not simply from labeled datasets. Addressing the above needs, this paper explores the specific question of how to extract useful knowledge from human dialogues observed during co-design sessions and make this knowledge available through a CA supporting humans in similar design activities. In our approach we explore the potential of the GPT-3 Large Language Model (LLM) to provide useful output extracted from unstructured data such as free dialogues. We provide evidence that by implementing an appropriate “extraction task” on the LLM it is possible to efficiently (and without human-in-the-loop) extract knowledge that can then be embedded in the cognitive base of a CA. We identify at least four major steps/assumptions in this process that need to be further researched, namely: A1) Knowledge modeling, A2) Extraction task, A3) LLM-based facilitation, and A4) Humans’ benefit. We provide demonstrations of the extraction and facilitation steps using the GPT-3 model and we also identify and comment on various worth exploring open research questions. Keywords: Conversational agent · Large language model (LLM) · Design thinking  
   
  1 Introduction Current advances in the Natural Language Processing (NLP) domain, related to a considerable degree to the rise of Artificial Neural Networks (ANN), have led to the development of Conversational Agents (CAs or ‘chatbots’), a type of software that can offer services to humans through natural language communication [1]. Research has provided encouraging initial evidence that CAs may effectively support humans in domains such as e-business, e-health and e-learning (e.g. [2, 3]) and also in the particularly creative and challenging design domain [4–6]. © The Author(s), under exclusive license to Springer Nature Switzerland AG 2023 C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 691–700, 2023. https://doi.org/10.1007/978-3-031-32883-1_60  
   
  692  
   
  S. Demetriadis and Y. Dimitriadis  
   
  However, users’ expectations regarding CAs supporting humans in design work, prescribe a type of agent capable of delivering almost human-like supportive interventions (e.g. [7]). CA technology needs to advance well beyond its current state-of-the-art (SOTA) to provide for this high level of agent capacity, one important advanced level functionality being agent’s learning ability. Similar to humans who learn to a great extent from conversational interactions (e.g. [8]) and “distill” their experiences in some form of knowledge transferable also in other contexts, this option should certainly be explored also for CA learning. Following this line of thinking we focus on the question of how to extract useful knowledge from human dialogues in co-design sessions and embed it next in the cognitive base of a CA to support humans in sessions of similar perspective. In this paper we explore the hypothesis that current Large Language Models (LLMs) may provide an innovative answer to this question; an answer that may open new perspectives in conceptualizing Human-AI interaction and offer significant research opportunities. We present a relevant conceptual framework and a sequence of four methodological steps labelled as “assumptions” to indicate that their feasibility, efficiency, and exact form of implementation need to be backed up by future research concrete evidence. Currently we demonstrate the feasibility of using GPT-3 in these steps but without any further evaluation of outcomes. We also highlight opportunities for further exploration of key relevant research questions. The rest of the paper is structured as follows: In Sect. 2 we provide a concise review of SOTA advances in the LLMs and CAs domain, reporting also on the use of CAs to support design thinking. In Sect. 3 we present the four methodological steps demonstrating -where applicable- their feasibility with examples realized in the GPT-3 environment [9]. In Sect. 4 we propose an architecture for a CA implementing the aforementioned steps. We conclude by providing a nonexhaustive list of open research questions.  
   
  2 Background 2.1 Large Language Models and Conversational Agents Artificial intelligence (AI) is “the ability of a digital computer or computer-controlled robot to perform tasks commonly associated with intelligent beings” [10]. Using AI artifacts to perform various tasks can be conceptualized as an “augmentation” of human cognitive abilities [11] and this certainly includes large language models and conversational agents in the natural language processing domain. A language model is typically described as a probability distribution over language tokens (words or parts of words) that provides a basis to computer software in performing text predictive modelling tasks [12]. With the rise of ANNs it is possible to develop complex LLMs making use of transformer architecture enhanced also with attention mechanisms [13] (for example, BERT and GPT families of LLMs). After the initial “pre-training”, methods of LLM metalearning (known mainly as “transfer learning”) can be applied to render the model more effective in downstream tasks. Of great importance, because of their effort efficiency, are the K-shot learning methods (ibid.), where “shot” refers to the training examples offered to the model to adjust it for the new task. Versions of this method include “zero-shot” (no training example at all), “one-shot” (one training example), or “few-shot” (more than one examples) [14].  
   
  Conversational Agents and Language Models  
   
  693  
   
  CAs typically identify the user’s intent (and relevant entities) in user’s text input and provide an appropriate reply (for details the reader is directed to relevant publications such as [1, 15]). In general, agents employing AI-based methods are either “retrievalbased” or “generative” [1]. Mixed approaches are also possible combining benefits of the two worlds (e.g. [16]). An agent can further “learn” by improving its accuracy in identifying user’s intent and by expanding its knowledge base, thus being able to provide ever more accurate and useful replies to user prompts. Research has mostly focused on agent’s learning from training sets of labeled data but seldom on learning through conversational interactions with humans (e.g. [17]). 2.2 Conversational Agents and Design Thinking “Design thinking is a human-centered approach to innovation that draws from the designer’s toolkit to integrate the needs of people, the possibilities of technology, and the requirements for business success” [18]. In this paper, we use the term “co-design” session [19] to refer to the type of sessions being design-focused and full of social interactions (either onsite or online). Along with other researchers we also maintain that CAs can productively participate in co-design sessions and enhance the efficiency of humans to work collaboratively and accomplish the design objective (e.g. [7]). A review by Debowski et al. [5] distinguishes five main orientations relevant to CAs’ possible contribution in design thinking sessions (with emphasis on remotely conducted sessions). Overall, the review reports evidence that interacting with a CA may improve a human co-designer’s performance and the authors call for further research in the area. Interestingly, Bittner et al. [7] report that users expect an “almost human agent” that provides “helpful and not frustrating input”, can be used in “combination with human facilitator”, and may also have beneficial “impact on team collaboration”. Research also has nevertheless provided evidence that the effectiveness of digital facilitation can be comparable to that of humans, although it appears to be significantly worse in “subjectively perceived helpfulness” [6]. To further improve CAs performance and acceptance we argue that research should explore the development of a continually learning CA for design thinking. This type of agent would learn in a way similar to humans, by integrating in its knowledge base useful information and knowledge distilled from available dialogue data from previous co-design sessions. We proceed to further explore this perspective in the next sections.  
   
  3 Learning from Co-designers’ Dialogues 3.1 Extracting Information and Knowledge from Human Dialogues The problem of extracting knowledge from human dialogues can be considered as a special case of the general problem of extracting structured information from highly unstructured text [20]. Research so far has explored different solutions to various versions of this problem and methods developed for extracting specific information from dialogues have also been reported (e.g. [21, 22]). Evidence also is available that LLMs can report on the quality of a conversation as there exists a positive correlation between the output of the language models and human-assigned dialogue scores [23].  
   
  694  
   
  S. Demetriadis and Y. Dimitriadis  
   
  Based on the above and other relevant evidence we argue that LLMs can offer a viable solution for the combined problem of “extracting from dialogues” and “embedding to CA facilitators” the knowledge that can be helpful for human designers. To further model the problem we state and analyse the four assumptions that follow. 3.2 A1: “Knowledge Modelling” Assumption Knowledge embedded in dialogues can/should be modelled in a way that facilitates its extraction and further processing. “Knowledge is best shared through conversation” [24] and modeling this knowledge is important in developing highly efficient dialogue systems (e.g., [25]). In human dialogues extracted from co-design sessions we expect to find knowledge expressed with various degrees of context-dependency and also using more than one modalities (typically language and visuals). Therefore, we assume that a useful initial modelling of interlocutors’ utterances can be based on these two key features: their “context-dependency” and “modality”. “Context-dependency” refers to the degree that an utterance explicates a piece of knowledge in a clear and well understood way (for example a clear rule statement) or requires to be connected to other pieces of information (available or not in the dialogue) in order to become meaningful. Please note that this distinction is not necessarily relevant to the commonly discussed “tacit vs. explicit” knowledge distinction (e.g. [26]), since tacit and explicit knowledge can both be expressed with a varied degree of context-dependency in human dialogues. “Modality” refers to discussants using one or more modalities to convey information, such as spoken/written language and pictorial information (images, graphs, etc.) or face expressions, body posture/gestures, etc. We emphasize here the need for efficiently modelling the dialogue content from the context/modality perspective and possibly from other perspectives too. 3.3 A2: “Extraction Task” Assumption Useful knowledge embedded in co-design dialogues can be extracted by implementing some efficient LLM-based extraction task. Humans typically learn by generalizing from their experiences in a form of deeper (abstract) representation that usually can be also expressed in language-based form, for example, a summary or concluding statement. Similarly, we suggest that a LLM can extract useful knowledge from authentic human co-design dialogues in some appropriately structured form. Figure 1 presents: a) a description of one possible extraction GPT-3 LLM task, b) one-shot training of the GPT-3, also modelling the expected reply and (c) after the one-shot training, the LLM can be used to provide similar “Topic and Conclusion” task extractions from other dialogues (as demonstrated in Fig. 2). Please note that the dialogues in Figs. 1 and 2 are synthesized based on the material (cards) published by the "Build a Bot" design workshop [27]. Specifically, the suggestion that discussant B makes regarding the design issue under consideration is based on material included in the design cards of the aforementioned workshop.  
   
  Conversational Agents and Language Models  
   
  695  
   
  Fig. 1. GPT-3 one-shot training for the “Topic and Conclusion” extraction task. All GPT-3 performance examples presented in this work have been administered using the text-davinci-003 model and with Temperature parameter set to 0.7.  
   
  Fig. 2. GPT-3 extraction from a new dialogue part in the “Topic and Conclusion” task.  
   
  3.4 A3: “LLM-Based Facilitation” Assumption Knowledge extracted from dialogues can be conveyed to co-designers by an LLM-based facilitation agent that generates replies to humans’ questions in a co-design session. The knowledge (conclusions) extracted from dialogues can become learning material to further train the LLM for a new downstream task, that we call “LLM-based facilitation”. We identify two procedures relevant to this “facilitation” assumption: A) “LLM training”: how to further train the LLM using the extracted knowledge, and B) “LLM advice generation”: how to have the LLM generate appropriate human-like replies as advice when requested in a co-design session. We demonstrate here one simple solution to the above two procedures starting from the LLM one-shot training (see Fig. 3). In relation to Fig. 3 please note that:  
   
  696  
   
  S. Demetriadis and Y. Dimitriadis  
   
  Fig. 3. One-shot training of the GPT-3 for the “LLM-based facilitation” task.  
   
  1. The “Previous sessions” section (item b in Fig. 3) includes outcomes of the [Topic and Conclusion] extraction task (knowledge extracted from human dialogues) to be used as training material of the LLM. The [Topic and Conclusion] tag is not really necessary but it is used to help the reader’s understanding. “Previous sessions” may include numerous useful outcomes and be integrated to the LLM through API code, so technically its size can be significantly larger than demonstrated here. 2. The “Example” section (item c in Fig. 3) presents a hypothetical dialogue between a Human and an AI-facilitator. The AI-facilitator utterance is modelled to fit a scenario where advice is required on the data storage issue. Note that “fine tuning” the LLM with a considerable amount of extracted data would also be an option but requires much more invested effort and is beyond the scope of this paper. After the above one-shot training, the GPT-3 is able to function as AI-facilitator providing appropriate replies to relevant prompts of human co-designers. In Fig. 4 we present the advice of the AI-facilitator (green highlight) to the issue of “Selecting the name of the bot” introduced by the Human Facilitator in an also hypothetical scenario. The trained LLM provides an advice based on the knowledge extracted in step A2 and integrated as learning material in the “Previous sessions” section of its one-shot training setting.  
   
  Fig. 4. Advice by the GPT-3-based AI-facilitator (Color figure online)  
   
  Conversational Agents and Language Models  
   
  697  
   
  3.5 A4: “Humans’ Benefit” Assumption Human co-designers may benefit in their work when interacting with an agent that is continually learning by integrating knowledge extracted from available dialogues. We have demonstrated so far that by using GPT-3 it is possible to successfully perform the extraction task (step A2) and the facilitation task (step A3). However, it is not self-evident that human co-designers will reap any benefits when interacting with an agent with these functional features. Research has identified several human-agent interaction issues that go beyond the simple agent developmental level and touch the deeper socio-psychological dimensions of the interaction [28]. It is important to moderate and regulate human-agent interaction in order to establish a productive co-operation between humans and the AI-facilitator [7]. Of equal importance are issues such as enhancing an intellectually positive attitude in humans for leveraging the AI-facilitator capacity, empowering humans with control over the AI presence and also, inspiring humans how not to unproductively rely on AI but use it as a tool for deeper productive exploration of design issues (e.g. [29]). Overall, we believe there exists a major research opportunity regarding the multifaceted human-agent interactions in co-design sessions relevant also to the augmentation of human cognitive abilities through the use of AI tools and we call for further research in this area.  
   
  4 A Proposed Architecture for an LLM-Based AI-Facilitator In this section we integrate the steps and procedure described so far into a coherent CA architecture able to operate as an LLM-based AI-facilitator that learns form available human designers’ conversations (Fig. 5). As described, human dialogue data can be appropriately modeled and used as training data of the LLM (A1 in Fig. 5) to perform the “extraction” task (A2) with useful knowledge as A2 output. When co-designers (A4) interact with the CA a “User Message Analysis” component provides necessary information to the “Router” component to decide whether the human’s prompt: a) should be answered by retrieving a predefined response (for example, when a user asks for information strictly relevant to the specific activity, e.g. the activity timetable), or b) it is a request for AI-facilitator’s advice which should be directed to the LLM for a reply (dotted arrows) (A3), where the LLM now uses “useful knowledge” as input data to provide relevant advice. Finally a “Composer” component can produce a synthesis of the responses obtained from the two routes (predefined and LLM-based) to be sent back to users (A4).  
   
  698  
   
  S. Demetriadis and Y. Dimitriadis  
   
  Fig. 5. Proposed CA architecture (A1 to A4 refer to the four steps/assumptions presented)  
   
  5 Discussion and Conclusions In this work we have explored the question of how to extract useful knowledge inherent in human dialogues from co-design sessions and subsequently integrate this knowledge in a CA to act as AI-facilitator and support humans in similar sessions. We presented a framework of four steps/assumptions (A1 to A4) to formulate the overall procedure and demonstrated that -in principle- the use of GPT-3 LLM is an effective solution to perform both the extraction (step A2) and the facilitation task (step A3). Additionally we presented a proposed CA architecture that learns from available conversational data and conveys useful knowledge to humans when required. Obviously, there are many interesting research questions and we would like to highlight the following as seen from the broader perspective of the four suggested procedural steps/assumptions: • A1: What type of text preprocessing and knowledge modelling could provide a basis for improved outcomes in the subsequent extraction and facilitation tasks? • A2: What type of “extraction task” could achieve better outcomes especially when processing big conversational data? • A3: What is the accuracy level (precision, recall, F1, etc.) achieved by a CA developed according to the proposed architecture? • A4: How to manage the complex human-to-agent interactions in co-design sessions so that the presence of an AI-facilitator offers major benefits to humans?  
   
  Acknowledgments. Many thanks to colleagues and doctoral students at Universidad de Valladolid and Aristotle University of Thessaloniki for their apt comments and suggestions regarding the ideas presented in this work. This research is partially funded by the European Regional Development Fund and the National Research Agency of Spanish Ministry of Science, Innovation and Universities, under project grant PID2020-112584RB-C32. Also, partially funded by the Universidad de Valladolid visiting professorship of Prof. S. Demetriadis during 2022.  
   
  Conversational Agents and Language Models  
   
  699  
   
  References 1. Adamopoulou, E., Moussiades, L.: Chatbots: history, technology, and applications. Mach. Learn. Appl.2, 100006 (2020). ISSN 2666-8270. https://doi.org/10.1016/j.mlwa.2020.100006 2. Okonkwo, C.W., Ade-Ibijola, A.: Chatbots applications in education: a systematic review. Comput. Educ. Artif. Intell. 2, 100033 (2021). ISSN 2666–920X. https://doi.org/10.1016/j. caeai.2021.100033 3. Car, L.T., et al.: Conversational agents in health care: scoping review and conceptual analysis. J. Med. Internet Res. 22(8) (2020). https://doi.org/10.2196/17158 4. Cautela C., Mortati M., Dell’Era C., Gastaldi L.: The impact of artificial intelligence on design thinking practice: insights from the ecosystem of start-ups. Strat. Des. Res. J. 12(1), 114–134 (2019). ISSN: 1984–2988. https://doi.org/10.4013/sdrj.2019.121.08 5. Debowski, N., Tavanapour, N., Bittner, E.A.C.: Conversational agents in creative work – a systematic literature review and research agenda for remote design thinking. In: PACIS 2022 Proceedings, vol. 261 (2022). https://aisel.aisnet.org/pacis2022/261 6. Przybilla, L., Baar, L., Wiesche, M., Krcmar, H.: Machines as teammates in creative teams: digital facilitation of the dual pathways to creativity. In Proceedings of the SIGMIS-CPR 2019 Conference, pp. 94–102. ACM, New York (2019). https://doi.org/10.1145/3322385.3322402 7. Bittner, E.A., Mirbabaie, M., Morana, S.: Digital facilitation assistance for collaborative, creative design processes. In: Proceedings of the 54th Hawaii International Conference on System Sciences (HICSS), pp. 370–379 (2021). http://hdl.handle.net/10125/70655 8. Tenenbaum, H.R., Winstone, N.E., Leman, P.J., Avery, R.E.: How effective is peer interaction in facilitating learning? a meta-analysis. J. Educ. Psychol. 112(7), 1303–1319 (2020). https:// doi.org/10.1037/edu0000436 9. OpenAI GPT-3 Playground. https://gpt3demo.com/apps/openai-gpt-3-playground 10. Copeland, B.: Artificial intelligence. Encyclopedia Britannica. https://www.britannica.com/ technology/artificial-intelligence 11. Siemens, G., et al.: Human and artificial cognition. Comput. Educ. Artif. Intell. 3, 100107 (2022). https://doi.org/10.1016/j.caeai.2022.100107 12. Devlin, J., Chang, M.-W., Lee, K., Toutanova, K.: BERT: Pre-training of deep bidirectional transformers for language understanding. In: Proceedings of the NAACL-HLT 2019 Conference, Minneapolis, pp. 4171–4186 (2019). https://doi.org/10.48550/arXiv.1810.04805 13. Vaswani, A., et al.: Attention is all you need. In: Proceedings of NIPS 2017 Conference Red Hook, USA, pp. 6000–6010 (2017). https://doi.org/10.48550/arXiv.1706.03762 14. Brown, T.B., Mann, B., Nick, R., et al.: Language models are few-shot learners. In: arXiv: 2005.14165v4 [cs.CL] (2020). https://doi.org/10.48550/arXiv.2005.14165 15. McTear, M.: Conversational AI: Dialogue Systems, Conversational Agents, and Chatbots. University of Toronto, Graeme Hirst (2020) 16. Song, Y., Li, C.-T., Nie, J.-Y., Zhang, M., Zhao, D., Yan, R.: An ensemble of retrieval-based and generation-based human-computer conversation systems. In: Proceedings of IJCAI-2018, Stockholm, Sweden, pp. 4382–4388. https://doi.org/10.24963/ijcai.2018/609 17. Hancock, B, Bordes, A., Mazare, P.-E., Weston, J.: Learning from dialogue after deployment: feed yourself, chatbot! In: Proceedings of the 57th Annual Meeting of ACL, pp. 3667–3684. ACL, Florence (2019). https://arxiv.org/abs/1901.05415v1 18. Brown, T.: Design Thinking Defined. IDEO Design Thinking Website. https://designthinking. ideo.com/ 19. Blakemore, L.: What does co-design really mean? UTS (University of Technology, Sydney) Website. https://lx.uts.edu.au/blog/2022/01/10/what-does-co-design-really-mean/ 20. Adnan, K., Akbar, R.: An analytical study of information extraction from unstructured and multidimensional big data. J. Big Data 6(1), 1–38 (2019). https://doi.org/10.1186/s40537019-0254-8  
   
  700  
   
  S. Demetriadis and Y. Dimitriadis  
   
  21. Kannan, A., Chen, K., Jaunzeikare, D., Rajkomar, A.R.: Semi-supervised learning for information extraction from dialogue. In: Proceedings of Interspeech Conference, Hyderabad (2018). https://www.isca-speech.org/archive_v0/Interspeech_2018/pdfs/1318.pdf 22. Wu, C.-S., Madotto, A., Lin, Z., Xu, P., Fung, P.: Getting to know you: user attribute extraction from dialogues. In: Proceedings of the 12th LREC Conference, Marseille, pp. 581–589 (2020), arXiv:1908.04621v1 [cs.CL]. https://doi.org/10.48550/arXiv.1908.04621 23. Nedelchev, R.; Lehmann, J., Usbeck, R.: Language model transformers as evaluators for opendomain dialogues. In: Proceedings of the 28th International Conference on Computational Linguistics, Barcelona, Spain, pp. 6797–6808 (Online) (2020). https://aclanthology.org/2020. coling-main.599.pdf 24. Gurteen, D.: Conversational Leadership. Online chapter: “Sharing Knowledge through conversation. https://conversational-leadership.net/sharing-knowledge-through-face-to-faceconversation/ 25. Varonina, L., Kopp, S.: Knowledge modelling for establishment of common ground in dialogue systems. Italian J. Comput. Linguist. 7–1(2), 9–26 (2021). https://doi.org/10.4000/ijc ol.797 26. Virkus, S.: Key Concepts in Information and Knowledge Management. Tallinn University (2014). https://www.tlu.ee/~sirvir/Information%20and%20Knowledge%20Managem ent/Key_Concepts_of_IKM/index.html 27. Mogos, A., McBain, L., Stariha, M., Carter, C.: “Build a Bot” design workshop. Stanford d. School. https://dschool.stanford.edu/resources/build-your-own-bot 28. Chaves, A.P., Gerosa, M.A.: How should my chatbot interact? a survey on social characteristics in human-chatbot interaction design. Int. J. Hum.-Comput. Interact. 37(8), 729–758 (2021). https://doi.org/10.1080/10447318.2020.1841438 29. Shneiderman, B.: Human-Centered Artificial Intelligence: Trusted, Reliable & Safe. arXiv: 2002.04087v1 [cs.HC] (2020). https://doi.org/10.48550/arXiv.2002.04087  
   
  Author Index  
   
  A Abuazizeh, Moh’d 171 Alrajhi, Laila 651 Antoine, Maxime 381 Arroyo, Ivon 298 Assaf, Alyssa Hajj 66 B Badier, Anaëlle 54 Banjade, Rabin 124 Bekhter, Danylo 565 Ben Abdessalem, Hamdi 66, 209, 381, 442, 491, 530 Ben Soussia, Amal 100 Benassi, Mariagrazia 16 Bey, Anis 290 Blanchard, Emmanuel G. 147 Bloemen, Steven 257 Boyer, Anne 100 Bredeweg, Bert 257 Brockmann, Annalise 137 Brzoza, Piotr 42 C Castro, Francisco 298 Champagnat, Ronan 290 Chang, Maiga 333, 342, 630 Chen, Jiahao 678 Córdova, Paulo Roberto 281 Courtemanche, Marc-Antoine 29, 183 Cristea, Alexandra I. 651 D Daniela-Maria, Cristea 518 de Azevedo Restelli Tedesco, Patricia Cabral 75 de Barros Costa, Evandro 75 de Blas, Clara Simon 391 De Silva, Supun 88 de Souza Filho, Iderli Pereira 281 Demetriadis, Stavros 591, 691  
   
  Di Eugenio, Barbara 112 Dimitriadis, Yannis 691 Doru-Anastasiu, Popescu 518 Duong-Trung, Nghia 16 E Edwards, Lucas 137 F Feng, Guang 507 Frasson, Claude 66, 209, 381, 442, 491, 530 Freedman, Reva 137 G Gamillscheg, Florian 415 Gašpar, Angelina 220 Ghaderi, Maryam 209, 381 Gharbaoui, Hiba 364 Grubiši´c, Ani 220 Grüttmüller, Martin 16 Guedes, Gilleanes Thorwald Araujo Gumerov, Marat 195 Gütl, Christian 415 H Hanse, Joris 257 Hargreaves, Carol Anne 467 Hayashi, Yugo 404 Hensen, Benedikt 565 Holt, Joanna 257 Hood, Colton 415 Huang, Shuyan 678 Huang, Xiaoshan 430 Huang, Yaying 678 I Iriarte, Maria F. 630 Ismail, Ibrahim 576 Ivrissimtzis, Ioannis 479  
   
  © The Editor(s) (if applicable) and The Author(s), under exclusive license to Springer Nature Switzerland AG 2023 C. Frasson et al. (Eds.): ITS 2023, LNCS 13891, pp. 701–703, 2023. https://doi.org/10.1007/978-3-031-32883-1  
   
  281  
   
  702  
   
  J Jang, Yeonju 3 Jung, Heeseok 3  
   
  K Kaiss, Wijdane 159 Kano, Masaji 404 Kawulok, Mateusz 42 Khalaj, Amin Bonyad 209 Kiron, Nafisul 307 Kirste, Thomas 171 Kragten, Marco 257 Krahn, Ted 333 Kravcik, Milos 16 Krouska, Akrivi 667 Kuo, Rita 333, 630  
   
  L La Barbera, Michele 315 LaBarbera, Dean 137 Lajoie, Susanne P. 430 Lefevre, Marie 54 Lefort, Mathieu 54 Lemire, Daniel 324 Li, Shan 430 Li, Zhaoxing 479, 553 Lin, Fuhua 88 Lin, Guimin 678 Liu, Qiongqiong 678 Liu, Xin 507 Liu, Zitao 678 Luo, Weiqi 678  
   
  M Ma´ckowski, Michał 42 Mansouri, Khalifa 159, 364 Matias, Ana 604 Meitus, Vladymyr 391 Miladi, Fatma 324 Mohamed, Azza 576 Monaikul, Natawut 112 Morimoto, Naoyuki 638 Morita, Junya 404 Moussiades, Lefteris 270 Mylonas, Phivos 667  
   
  Author Index  
   
  N Naples, Virginia 137 Nastase, Mariana Madalina 352 Nicolae, Bold 518 Nielsen, Rodney 619 Nikou, Stavros A. 342 Nkambou, Roger 29, 183, 541 Nkulu-Ily, Yves S. 452 O Ohmoto, Yoshimasa 404 Oli, Priti 124 Omar, Mehnuma Tabassum 307 Orsoni, Matteo 16 P Pan, Tingfeng 507 Papakostas, Christos 667 Pietracupa, Massimo 530 Pietroszek, Krzysztof 415 Pögelt, Alexander 16 Poirier, Franck 159, 364 Popescu, Elvira 352 Psyché, Valéry 183, 324 R Ranniger, Claudia 415 Rasul, Injila 298 Rebol, Manuel 415 Rocha, Hemilis Joyse Barbosa 75 Rocha, Julios Suruagi 75 Roussanaly, Azim 100 Rus, Vasile 124 Rutenberg, Adam 415 S Sciarrone, Filippo 315 Sgouropoulou, Cleo 667 Shankar, Bharath 467 Shi, Lei 479, 553 Shiga, Kentaro 638 Shimojo, Shigen 404 Sikka, Neal 415 Sosnowski, Tomasz 171 Spinczyk, Dominik 42 Steinmaurer, Alexander 415 Sullivan, Ian 137 Sychev, Oleg 195, 233  
   
  Author Index  
   
  T Tato, Ange Adrienne Nyamen 183 Tato, Ange 29, 541 Tato, Gabrielle 541 Tchio, Guy Carlos Tamkodjou 183 Temperini, Marco 315 Troussas, Christos 667 Tzimas, Dimitrios 591  
   
  U Ubani, Solomon 619 Uglev, Viktor 233, 371  
   
  V Vaendel, Dennis 257 Vasi´c, Daniel 220 Vassileva, Julita 307 Vicari, Rosa Maria 281  
   
  703  
   
  W Wang, Jindi 479, 553 Wu, Wenyan 507 Y Yessad, Amel 247 Yoo, Jaesang 3 Yoon, Yohaan 3 Yordanova, Kristina  
   
  171  
   
  Z Zarour, Mahdi 491 Zhao, Xiangyu 678 Zhou, Yunzhan 479, 553 Zhou, Yuyu 678 Zipitria, Iraide 604 Žitko, Branko 220 Zografos, George 270 Zohiar, Mai 576 Zou, Di 630  

 Report "Augmented Intelligence and Intelligent Tutoring Systems. 19th International Conference, ITS 2023 Corfu, Greece, June 2–5, 2023 Proceedings 9783031328824, 9783031328831"  
 ×    

 --- Select Reason ---  Pornographic  Defamatory  Illegal/Unlawful  Spam  Other Terms Of Service Violation  File a copyright complaint     

 Close  Submit    

    Contact information  
 Michael Browner   
   [email protected]    
   
   Address:   
 1918 St.Regis, Dorval, Quebec, H9P 1H6, Canada.   
   
 Support & Legal  
  O nas 
  Skontaktuj się z nami 
  Prawo autorskie 
  Polityka prywatności 
  Warunki 
  FAQs 
  Cookie Policy 
    
 Subscribe to our newsletter  
  Be the first to receive exclusive offers and the latest news on our products and services directly in your inbox.  
   Subscribe     

 Copyright © 2024 DOKUMEN.PUB. All rights reserved.        

 Unsere Partner sammeln Daten und verwenden Cookies zur Personalisierung und Messung von Anzeigen. Erfahren Sie, wie wir und unser Anzeigenpartner Google Daten sammeln und verwenden  .   Cookies zulassen