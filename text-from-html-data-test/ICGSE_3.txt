Conference Paper  PDF Available  Using Scrum in Global Software Development: A Systematic Literature Review  
 July 2009 
    
 DOI: 10.1109/ICGSE.2009.25    
 Source 
  DBLP 
    
 Conference: 4th IEEE International Conference on Global Software Engineering, ICGSE 2009, Limerick, Ireland, 13-16 July, 2009 

 Authors:   
      
 Emam Meraj Hossain    
 Bangladesh University of Engineering and Technology 

 Muhammad Ali Babar    
 University of Adelaide 

 Hye-young Paik    
 UNSW Sydney 

   Download full-text PDF     Read full-text     

   Download full-text PDF     
   Read full-text     
   Download citation     
   Copy link  Link copied      
         
      Read full-text   
      Download citation   
     Copy link  Link copied    

 Citations (359)   
   
  References (23)   

 Abstract  
   
 There is a growing interest in applying agile practices in global software development (GSD) projects. The literature on using Scrum, one of the most popular agile approaches, in distributed development projects has steadily been growing. However, there has not been any effort to systematically select, review, and synthesize the literature on this topic. We have conducted a systematic literature review of the primary studies that report using Scrum practices in GSD projects. Our search strategy identified 366 papers, of which 20 were identified as primary papers relevant to our research. We extracted data from these papers to identify various challenges of using Scrum in GSD. Current strategies to deal with the identified challenges have also been extracted. This paper presents the reviewpsilas findings that are expected to help researchers and practitioners to understand the challenges involved in using Scrum for GSD projects and the strategies available to deal with them.   

    Discover the world's research   
 25+ million members 
  160+ million publication pages 
  2.3+ billion citations 
  Join for free     

     Public Full-text 1    

 Content uploaded by Hye-young Paik    
   
 Author content    
   
 All content in this area was uploaded by Hye-young Paik   

 Content may be subject to copyright.   

 Using Scrum in Global Software Development: A Systematic Lite  rature Review   
 Emam Hossain   
 CSE, The University of New South   
 Wales and National ICT Australia   
 Sydney, Australia   
 Emam.Hossain@nicta.com.au   
 Muhammad Ali Babar   
 Lero,   
 University of Limerick   
   
 Limerick, Ireland   
 Muhammad.AliBabar@lero.ie   
 Hye-young Paik    
 CSE,The University of New South    
 Wales, UNSW   
 Sydney, Australia   
 hpaik@cse.unsw.edu.au   

 Abstract —    
   
 There is a growing interest in a  pplying agile practices   
 in  Global Software  Development  (GSD) projects.  The  literature   
 on  usin  g  Scrum, one  of the  most popular  agile approaches, i  n   
 distributed  development  projects  has  steadily  been  growing.   
 However,  there  has   not been any effort to systematically  select,   
 review, and  synthesize  the literature  on this top  ic. We  have   
 conducted a  systematic literature review   of the  prima  ry s  tudies   
 that  report using  Scrum  practices in  GSD  projects. Our  search   
 strategy identified 366 papers, of which 20  were identified as   
 primary papers  relevant to  our  research. We  extracted  data from   
 these papers to  identify various challenges of  using Scrum in   
 GSD. Current strategies  to deal with the identified challenges   
 have  also  been ext  racted.  This  paper  presents  the  review’s   
 findings  that are expected  to   help  researchers and practiti  oners   
 to  understand the challenges  in  volved  in  using Scrum f  or  GSD   
 projects and the strategies available to deal with them.   
   
 Keywords- Global  software d  evelopment, agile  approaches,   
 Scrum, systematic literature reviews   
 I.  I   
 NTRODUCTION   
   
 The  trend  in  the  recent  software  development  industr  y is   
 to  move  to  wards  Global  Software  Development  (GSD).   
 This is driven by a  number of factors such as improved   
 network  infrastructure,  move  towards  component-based   
 architecture  and  increased  time-to-market  pressure[1].   
 Despite its popularit  y, the question of  “which agile practices   
 are  effective  for  GSD  under whi  ch  circumstances?”  has  not   
 been closely researched yet [2].   
 Agile  Software  Development  (ASD)  paradigm  has   
 gained  significant attention  due to  its flexible  approach to   
 managing  the  requirement  volatilit  y  and  emphasis  on   
 extensive collaboration  between customers and  developers   
 [3]. Recently, we have ob  served that an increased nu  mber of   
 GSD project managers  are seriously consideri  ng introducing   
 agile  practices  [4].  G  iven  the  increased  inter  est  in  applying   
 agile practices  in GSD  projects, it  appears   worthwhile  for   
 the  practitione  rs  and re  searchers  to investigate  the  relevant   
 experiences reported  in th  e literature to  learn  how agile   
 practices  can be effecti  vely  used  in  GSD  projects.  Due to   
 the  fact  t  hat  agile  practices  are  b  ased  on  the philosophy of   
 close,  frequent  and  collocated  collaborations,  the   
 geographical distance in  GSD alone can  present a challen  ge.   
 Through a  number of  reports by  GSD practitioners in  the   
 literature,  we  h  ave  found  that,  despite  the  ob  vious   
 difficulties, there are some instances of success of using   
 agile practices with distr  ibuted teams [S1-S5]. But  other   
 researchers  [5]  still  argue  that  the  fundamental  question  on   
 whether agile practices  can be used in a dist  ributed setting is   
 still open to debate.   
 As the  interest in  using  agile approaches  in  GSD projects   
 is  growing;  so  is  the  research  literature  on  various   
 mechanisms, challenges and strategies of deploying agile   
 practices for GSD projects  . However, there has not bee  n any   
 significant  effort  to  systematicall  y  identify,  synthesi  ze,  and   
 report the lit  erature on using agi  le in GSD  projects. To   
 address  this research  gap, this  systematic literature  review   
 seeks  to  identify,  synthesize,  and  present  the  findings   
 reported about usin  g Scrum practices i  n GSD to  date. In this   
 review, we  o  nly investigate  agi  le practices  t  hat pertain  to   
 software project man  agement. We chose  “Scrum” as it has  a   
 focus on  day to day  project  managemen  t and  is the mo  st   
 widely adopted agile project  management method. Recently,   
 an increasing number of GSD project managers are also   
 seriously considering the use of Scrum practices in their   
 development environment [6].   
 The next section  gives an  overview of  Scrum method  and   
 discusses the motivation of this research. Section 3  describes   
 the research methods used. The results of this study are   
 presented in  Section  IV.  Section V  discusses  the  findings to   
 draw some conclusions. The limitations of the study are   
 mentioned in Section VI. Section VII closes t  he paper with a   
 brief discussion of the  researchable issues on t  his topic.   
 II.  B    
 ACKGROUND AND   
 M   
 OTIVATION   
   
 In this sect  ion, we fi  rst introduce t  he Scrum m  ethod,   
 place the  Scrum i  n the  context  of GSD  and mo  re concretel  y   
 justify the need for this review.   
 A.  Scrum    
 Scrum  is  an  iterative  and  incrementa  l  project   
 management  approach  that provides  a simple  “inspect and   
 adapt”  framework.  In  Scrum,  software  is  delivered  in   
 increments called “Spri  nts” (usually 2-4 weeks i  terations)   
 [6]. Each s  print starts with  planning and  ends with  a review.   
 A sprint planning  by a  Scrum team is  a time-boxed meeting,   
 which could  last up  to  4  hours. It  is dedicated  to  developing   
 2009 Fourth IEEE International Conference on Global Software Engineering   
 978-0-7695-3710-8/09 $25.00 © 2009 IEEE   
 DOI 10.1109/ICGSE.2009.25   
 175   
 2009 Fourth IEEE International Conference on Global Software Engineering   
 978-0-7695-3710-8/09 $25.00 © 2009 IEEE   
 DOI 10.1109/ICGSE.2009.25   
 175   
 Authorized licensed use limited to: Universidad Federal de Pernambuco. Downloaded on July 19,2010 at 19:55:36 UTC from IEEE Xplore. Restrictions apply.   

 detailed  plans for the sprint.  The  Stakeholders  of a p  roject   
 attend sprint review  meetings to  review the  state of  the   
 business,  the  market  and  technology.  These  meetings  could   
 also last up to 4 hours. A retrospective  meeting may be   
 scheduled to assess the teamwork in the completed sprin  ts. A   
 daily  Scrum  meeting  b  y  a  Scrum  team  is  a  15-minute  long   
 and each team  member addresses three  questions: what did I   
 do yesterday, what will I do today and what impediments are   
 in my way? Sc  rum produces three artefacts, namely: product   
 backlogs, spri  nt backlogs  and burn-down char  ts. Backl  ogs   
 contain  customer requi  rements  and daily  burn  down  charts   
 show the cumulative work r  emaining.   
 B.  Scrum in Global Software Development     
 Agile approaches are usual  ly considered effective fo  r the   
 projects with  high  uncertainty [3].  Paasivaara  et al  [S1]   
 reported that  distributed software  development projects  with   
 volatile  requirements  and  uncertain  implementation   
 technologies  can  use various agi  le  practic  es  for effect  ively   
 organizing  and  managing  projects.  Scrum  has  been  already   
 found  an  effective  approach  to   managing  projects  with   
 many  smal  l,  collo  cated  developm  ent  teams [3].  Sutherland   
 and Schwaber  [6] argue that  Scrum can also be  used for   
 large  and  distributed  teams.  Indeed,  from  the  papers   
 reviewed in this  review, we have  fo  und some distributed   
 projects in which Scrum has been  successfully used.   
 C.  Objective of this Review    
 Scrum teams are  s  elf organized, are  facilitated by  rich   
 communication  and  a collabora  tive environment  and  are   
 usually  considered effective  for co-located  project  s  with  a   
 small  team  size  [3].  Thus,  it  is  apparent  ly d  ifficult  to  apply   
 Scrum practices in  GSD projects because  of the  physical   
 separation of  the development  team memb  ers [4]. Ther  e can   
 be other GSD project  contextual factors (e.g., number of    
 distributed  sites,  collaboration  modes,  i.e.,  int  er   
 organizational  or  intra  organizational,  number  of  team  s,   
 project personnel  or team  size, socio-cultural  distance and   
 so on)  that may   al  so impact  on Scrum  team collaboration   
 processes. A recent surve  y about agile practice  adoption rate   
 [7], reported  that agile  practices can  be successfull  y used by   
 significantly  distributed  te  am  members.  Another  survey   
 concludes that among the various agile practices, project   
 management  practices  such  as  Scrum  p  ractices  have  a   
 higher  adoption  rate [8]  . Thus,  we  can  argue  that  Scrum,  as   
 an agil  e method,  is  becoming  increasingly  popular  and m  ay   
 also  be  us  ed  fo  r  globall  y  distribut  ed  teams.   But the  actual   
 process  of  using  Scrum’s collaborative practi  ces  instead  of   
 project stakeholder’s  distribution is  not clearly  un  derstood   
 [4].  For  this  reason  we  have  decided  to  explore,  investigate   
 and  explain  various  challenging  factors  that  restrict  the  use   
 of  Scrum  pr  actices  due  to  t  he  global  project  .  Current   
 strategies to reduce these challenging factors are also be   
 explored.   
 III.  R   
 ESEARCH   
 M   
 ETHOD   
   
 This  research  has  been  carried  out  by  following   
 Kitchenham  and  Ch  arters  [9]   guidelin  es  for  conducting   
 Systematic  Literatur  e  Review  (SLR)  or  Systemati  c  Review   
 (SR),  which  involves  several  act  ivities  such  as  the   
 development  of  review  protocol,  the  identification  and   
 selection  of  primar  y  studies,  the  data  extracti  on  and   
 synthesis,  and  reporting  the r  esults.  We  followed  all  these   
 steps for  the reported study  as described in  the following   
 sections of this paper.   
 The  broad  objective  of  this  stud  y  is  to  answer  the   
 following research question.   
 RQ.   What  is   currently  kn  own  about  the  us  e  of  t  he  Scrum   
 practices in GSD projects?   
 More  speci  fically,  this study  focuses  on  th  e  following two   
 questions:   
 RQ1. What challenging  or risk factors  restrict the use  o  f   
 Scrum practices in globally distribut  ed projects?   
 RQ2. What  strategies or  practices  are being  commonly used   
 to  deal  with  t  hese  challenging  fact  ors  to  support  t  he  use  of   
 Scrum practices in globally distribut  ed projects?   
 A.  Data Sources and Search Strategi  es    
 We  only  searched  for  papers  that  are  written  in  English   
 and available online.  The search strateg  y included electronic   
 databases and  manual  searches of  conference pr  oceedings.   
 The following electronic databases were  used.   
 • IEEEXplore ( www.ieeexplore.ieee.or  g/Xplore/  )      
 • ACM Digital library ( www.portal.acm  .org/dl.cfm  )     
 • Google Scholar ( http://scholar.google.co  m.au/  )     
 • Compendex EI ( www.engineerin  gvillage2.org/  )     
 • Wiley InterSciene ( www.intersci  ence.wiley.com/  )     
 • Elsevier Science Direct ( www.sceince  direct.com/  )     
 • AIS eLibrary ( www.aisel.aisnet.org/   )     
 • SpringerLink ( www.springerlink.com/   )     
 We also  searched the  following conference proceedings   
 for papers  on th  e use of  the  Scrum p  ractice(s) in  GSD   
 context.   
 • Agile  Pro  cesses  in Software  Engineering an  d  Extreme     
 Programming(XP/Agile Universe)   
 • Agile Conference     
 The types of papers ranged from industr  y experience   
 reports, theoretical,  empirical and  experimental academic   
 papers.   Figure  1 sho  ws th  e review  proc  ess and  the  number   
 of  pap  ers  identi  fied  at each  stage.  In  st  age  1, we  searched   
 the  databases  using  the  search  terms  l  isted  in  Table  I.   
 Category  1  has  m  ore  keywords  and  shows  many  variations   
 of the sam  e term “Global  Software Development”.  All these   
 search  items were combined   by  usi  ng  the Bo  olean  “AND”   
 operator,  w  hich  entail  s  that an art  icle  that focuses  on  both   
 Agile  and  Global  Software  Development,  will  be  r  etrieved.   
 That is, we searched  every possible combination o  f one item   
 from  Cat  egory  Type 1  AND  Category Ty  pe  2.   The search   
 excluded articles that address edit  orials, prefaces, article,   
 reviews,  di  scussion  co  mments,  news,  summaries  of   
 176  176    
 Authorized licensed use limited to: Universidad Federal de Pernambuco. Downloaded on July 19,2010 at 19:55:36 UTC from IEEE Xplore. Restrictions apply.   

 tutorials, workshops,  panels and post  er sessions. This  search   
 strategy  res  ulted  in a total   of 583  “hits’ that  included 366   
 unduplicated papers.   
 TABLE I.  S   
 EARCH   
 T   
 ERMS   
 U   
 SED IN THIS   
 R   
 EVIEW   

 B.  Managing Studies and Inclusion  Decisions    
 Our  stud  y  followed the  citation  management procedure   
 reported  by Dyba  and  Dingsoyr  [10].  We  used  EndNote  for   
 storing  relevant  citations  from  stage  1  (n=366).  Th  e   
 citations were  then imported  into a  spreadsheet where  we   
 recorded  the  sou  rces  of  each  citation  and  subsequent   
 inclusion  /  exclusion  decision.  We  maintained  separ  ate   
 Endnote  lib  rary  and  spreadsheet  for  each  stage.  In  th  e   
 second  stage, t  wo of  the  authors  sat  toget  her and  went   
 through  the titles  of all  the 366  studies that  resulted from   
 stage  1,  to  determine  th  eir  relevance  to  t  he  s  ystematic   
 review.  At   this  stage,  arti  cles  with  titles  th  at  indicated   
 clearly  that   the  articles  w  ere  outside the scop  e  of the SLR   
 boundary were e  xcluded and  identified 123  relevant studies  .   
 However,  a  paper’s  title  may  not  alwa  ys  represent  the   
 content  of th  e paper.  During  the  next  stage, we  divid  ed 123   
 abstracts among thr  ee researchers in su  ch a way so that  each   
 abstract was reviewed  by two re  searchers independently.   
 We found  109  abstract  agreements  among 12  3 assessme  nts.   
 All  the disagreements  were resolved by   three researcher’s   
 discussions. At the  end  of  stage 3, we were  left with 77   
 papers for stage 4 of the selection  process.   
 C.  Final Selection    
 We  used  the following  screening criteria  to ensure  the   
 papers address our research topic  .   
 1.  Does  a paper  address  the  use of  any  Scrum pract  ices in    
 distributed projects?   
 2.  Does  a paper discuss any real life experience of using    
 Scrum practices in distributed projects  ?   
 As there  is a l  ack of existing  empirical r  esearch, we  also   
 consider “lesson learned” report based on expert opinion   
 that ad  dress the  use  of  Scrum  practice in  GSD  projects.  For   
 additional quality assessment, we included following two   
 criteria related to the quality of each  paper’s description.   
 3.  Does the objective of the paper is  clearly mentioned?    
 4.  Does  the  pa  per  discuss  GSD  project  contextual   factors    
 adequately?   
 The adequacy  of project  cont  extual factors  discussion   
 was measured  based on  the GSE  background info  rmation as   
 shown in Appendix B. These  4 points provided a meas  ure of   
 the  ext  ent  to which  we  are  confi  dent  that   a selected  paper   
 could  ma  ke  a  valuable  contribution  to  understand  the   
 current use of Scrum  practices in distribute  d setting. Each of   
 the  4  criteria  was  graded  on  a  dichotomous  (“yes”  or  “no”)   
 scale.   

 Figure 1. The selection process of prim  ary papers.   
   
 We  selected  21  p  apers  out  of  t  he  77  articles  b  y ca  rrying   
 out the quality assessment based  on these four screening   
 criteria. We  accepted a p  aper that has  satisfied 4 criteri  a and   
 graded a  s a  ll “  yes”. For  exampl  e, we  excluded  a  number  of   
 papers  that  discussed  some  other  agile  m  ethods  and   
 practices  (e.g.  XP,  p  air  programming).  Among  t  he  21   
 papers,  we  found  that  one  journal  paper  [S1]  was  an   
 extended  versio  n  of  p  reviously  published conference pa  per   
 [S1a].  We  also  found  th  at  two  papers  [S3]  and  [S3a]   
 published in  two different conferences were  based on the   
 same  empirical  st  udy.  In  both  cases,  we  included  the   
 comprehensive recently published papers  as mentioned in   
 appendix A.  In  addition,  one researcher went  thro  ugh the   
 reference list o  f every selected pap  er of this final  stage. This   
 helped  us  to  i  dentify  an  y  r  elevant  paper  that  was  not   
 extracted  by  our  search  strategy.  In  this  proces  s,  we   
 identified on  e journal  paper  [S8]  that  was  not  retrieved   
 through  our  search  of  electronic  databases  but  was  cited  by   
 some of  the s  elected papers  [S1,  S4]. Th  e abstract  was   
 reviewed  by  two  resear  chers  independently  and  agreed  t  hat   
 the  paper  [S8]  appeared t  o b  e  within  the  scope  of  the   
 research.  Finall  y we  selected  20  papers  (e  xcluding  two   
 177  177    
 Authorized licensed use limited to: Universidad Federal de Pernambuco. Downloaded on July 19,2010 at 19:55:36 UTC from IEEE Xplore. Restrictions apply.   

 repeated pap  ers S1a  and  S3a  and  including  one  journal   
 paper  S8  from  initially  selected  21  papers)  for  data   
 extraction  and  synthesis  phases.  We  have  enlisted  the   
 selected primary studies in Appendi  x A.   
 D.  Data Extraction and Synthesis    
 From the final selected studies  , we extracted data using a   
 pre-defined  d  ata  extraction   form  as  shown in  Appendix  B.   
 The detail description  of the  data extraction form  can be   
 obtained in t  he technical r  eport [11].  During data extracti  on,   
 we found it quite di  fficult to extract relevant and meani  ngful   
 information  that  can  answer  the research questio  ns.  This  is   
 because the  primary studies  included in this  SLR are mai  nly   
 based on ind  ustry based experience  reports and  most of   
 them  are  not  d  escribed  in  a  comm  only  used  research  p  aper   
 structure. As usually a  standard research report discusses   
 research problem,  related research  work, research  meth  od,   
 data  analysis techniqu  e and  conclusion  adequately [  12]. For   
 this  r  eason,  two   researchers  performed  data  extraction   
 independently. Extracted d  ata from each research  er were   
 compared and  dis  agreements were  discuss  ed and  resolved   
 by consens  us in m  eetings. For  further d  isagreement, we   
 consulted  with  a  third  independent  researcher  who  has   
 extensive experience in SLR. We used  a qualitative data   
 analysis  t  ool  (NVi  vo)  to store  textual d  ata  that are  able  to   
 address our research questions.   
 We synthesized the  data by i  dentifying themes em  anating   
 from  the  findings  reported  in  each  of  the  paper  reviewed  in   
 this  study.  In  t  he  following  section,  we  present  frequencies   
 of t  he  number  of ti  mes  each the  me i  s id  entified  in d  ifferent   
 studies. The respective frequencies reflect the number of   
 times a  particular  challenge  has been  mentioned  in differ  ent   
 papers.   
 IV.  R   
 ESULTS   
   
 A.  Overview of Studies    
 Table II  shows that  the num  ber of pap  ers on t  he issue  of   
 using  Scrum  practices  in   GSD context  are increasing  over   
 the last few  years. It can be  argued that the publi  cation trend   
 may  be  an  indicator  of  practitioners  and  researchers’   
 growing  interest  in  using  and  rep  orting  Scrum  practices  for   
 GSD projects.   
 TABLE II.  S   
 ELECTED   
 P   
 APERS BY   
 Y   
 EAR   
 I   
 NTERVAL   
   
 Year  2003  2004  2005  2006  2007  2008  2009   
 papers  1  1  1  3  4  9  1   
 %  5%  5%  5%  15%  20%  45%  5%   
   
 Table III  shows that  only 4  studies (20%)  included in  this    
 SLR are empi  rical studies and a  ll of them  are industrial c  ase   
 studies.  Rest  of  the  16  studi  es  (80%)  are  classified  as   
 “lesson learned  ” or  industrial experi  ence reports.  Hence,  we   
 conclude  that  there  is  a  little  empirical  evidence  based   
 reported on the use of Scrum practi  ces in GSD context.   
 TABLE III.  T   
 YPES OF   
 S   
 TUDIES   
 R   
 EVIEWED   
   
 Study Focus  Number   
 of Papers   
 percentage  Reference   
 Empirical Study  4  20%  [S1-4]   
 Industrial   
 Experience   
 Reports   
 16  80%  [S5-20]   
   
 Table  IV  presents  pro  ject  frequencies  that  are   
 categorized  a  ccording  to few di  stributed  project contextual   
 factors.  We  have found  that  m  ost  of the  studies  report  the   
 use  of  Scrum  practices  in  GSD  pr  ojects  from  intra-   
 organizational,  multi-national  c  ompanies.  Our  findings  also   
 reveal that a  limited number of  distributed sites  are involved   
 while  Scrum  pr  actices  are  used  in  distributed  sites.   
 However,  so  me  researchers  claim  that a   distributed project   
 with  multiple  teams   can  also  use  Scrum  in   their   
 development [6].  Scrum  can  also be  used in a  distributed   
 project with  large  number of  project  personnel or  team si  ze.   
 In  this case  a  number of Scrum   teams are in  volved  within   
 the project.  Some of  the distributed projects can  also use   
 Scrum b  y minimizin  g the  challenge  of  no  overlap  time   
 between  distributed  sites. We h  ave  also found  that a  wide   
 range  of  project  domains  ranging  from  s  imple  web   
 application to mission  critical projects have bee  n undertaken   
 using Scrum in distributed development  environment.   
 TABLE IV.  P   
 ROJECT   
 C   
 ATOGORIZATION   
 A   
 CCORDING TO   
 F   
 EW   
 P   
 ROJECT   
 C   
 ONTEXT   
 F   
 ACTORS   

 178  178    
 Authorized licensed use limited to: Universidad Federal de Pernambuco. Downloaded on July 19,2010 at 19:55:36 UTC from IEEE Xplore. Restrictions apply.   

 B.  Findings about Research Ques  tions    
 This  s  ection  discusses how  the da  ta ex  tracted  from the   
 reviewed  studied  address  our  research  questions.  By   
 investigating the two research questions, we aim to provide a   
 synthesized  o  verview  of  the  literature   on  using  Scrum   
 practices in different  distributed projects.    
 1)  RQ1-Challenges  of  Using  Scrum  Due   to  Project    
 Distribution   
 We have identified sixt  een papers that can  help us to   
 answer  the  research  quest  ion  1  (RQ1),  “What  are  the   
 challenges  of  using  Scrum  practices   in  di  stributed   
 development?”   
 Our analysis  of the  extracted  data has  revealed that  the   
 temporal,  geographical  and   socio-cultur  al  distance of G  SD   
 projects  impact  on  using  vari  ous  Scrum  practices  in   
 distributed  settings.  W  e have  fou  nd tha  t comm  unication   
 related issues  are the major  challenges wh  en using Scrum  in   
 distributed settings.  Cultural  differences among  distributed   
 team  members   may  al  so  impact   on  team  collaboratio  n  and   
 communication  pr  ocesses.  Managin  g  a  large team can also   
 be cons  idered as  one  of  the  key  chall  enges.  A lack  o  f   
 dedicated  meetin  g  room  for  each  site  and  Scrum  t  eam   
 distribution at  multiple  sites  al  so  appear  t  o  be  ch  allenging   
 factors  that  restrict  the  team  communication  and   
 collaboration processes.  Table V  summarizes our  findings   
 about the  key challenges of  using the Scrum practices  in   
 GSD  projects.  Usually  sprint  planning  or  retrospective   
 sessions  can  l  ast  up  to  four  hours  or   sometimes  even  more   
 [6]. Thus,  it is  very dif  ficult to  conduct s  uch a  long meeting   
 if the distributed  teams  experience signi  ficant time zone   
 differences.  For  this  reason,  lack  of  synchronous   
 communication  is  considered  as  one  of  the  most  vital   
 challenges for using Scrum in GSD con  text.   
 TABLE V.  C   
 HALLENGING   
 F   
 ACTORS   
 D   
 UE TO   
 P   
 ROJECT   
 G   
 LOBAL   
 D   
 ISTRIBUTION   

 Challenging factors  Paper referenc  es  Frequency   

 (#  of   
 studies)   
 Synchronous   
 communication   
 [S1-2,S6-7,S9-   
 10,S16-17,S19]   
 9   
 Collaboration   
 difficulties   
 [S1-3,S15-16,S19]  6    
 Communication   
 Bandwidth   
 [S5-7,S15-16,S19-   
 20]   
 6   
 Tool support  [S4,  S10-11,S15-   
 18]   
 6   
 Large Team  [S2,S5,S7,S10,S16]  5   
 Office Space  [S15-17]  2   
 Multiple sites  [S9]  1   
   
 A  distributed  project  usually  invo  lves  people  with   
 cultural  and  linguistic  diversity,  which   may  d  iscourage   
 offshore  t  eam  members  from  voicing  their  opinions  or   
 views  fully  an  d  completel  y [  S1].  This  s  ituation  usually   
 results  in  miscommuni  cation,  mis  understandings  or   
 confusion  am  ong  team members.  This  SLR  has  f  ound  that   
 some Scrum t  eams could n  ot conduct effective  retrospective   
 meetings  due to t  he  socio-cultural distance i  nvolved  in the   
 distributed project  [S1, S7].  Communication   networks ca  n   
 also  be slow an  d  unreliable with poo  r  transmission quality   
 hampering  communication  standards  when  using  vario  us   
 communication  tools  (e.g.  video  conferencing)  [S15-16,   
 S19].  Providing better communication   bandwidth  and  right   
 tool  in  a  distributed  project  that  use  distributed  Scrum   
 meeting practices is vital [S17].   
 Lack of  effective  collaborative  tools,  global  task boards  ,   
 suitable  bug  and  issue  trackers  ,  globally  accessible  backlog   
 tool are also reported to be chall  enging factors [S10-11,   
 S15]. Ma  naging  a  project w  ith  a team  of large  number of   
 members  distributed  at  multi  ple  sites  is   considered  a   
 challenging  undertaking  [S2,  S5,  S7].  The  need   of  a   
 dedicated meeting  room with  necessary infrastructure and   
 tool support is  also considered necessary  in a number of   
 reviewed studies  [S15-17]. Using  Scru  m i  n a   t  eam t  hat i  s   
 distributed  in more than two sit  es  with  di  fferent  time zone   
 differences is also observed quite diffi  cult [S9].   
 2)  RQ2-  Us  ed  S  trategiesto  deal  with  these ch  allenging    
 factors   
 Our  SLR  has  found  that  Scrum  teams  use  various   
 practices  or stra  tegies to  reduce  these  challenging  factors  to   
 support the  use of Scrum  practices in  globally distributed   
 projects. This review  has identified and categorized  these   
 practices as follows.   
 Synchronous  communicati  on:  Our  SLR fo  und  that  Scrum    
 teams  used  some  st  rategies  to  provide  s  ynchronous   
 communication  when  distributed  team  has  no  overlap  time.   
 From  the  reviewed  papers,  we  found  ten  projects  had   
 distributed sites  without  any overlapping  working  hours.   
 Thus  we  can  argue  t  hat  Scrum  can  be  used  within  a   
 distributed project  th  at  has even  no overlap time  between   
 distributed  sites.  To  address  th  e  lack  of  synchronous   
 communication following practices  were widely used.   
 Synchronized work  hours:  Th  is  pra  ctice  is widely  used by    
 Scrum  teams  to  ensure  synchronous  co  mmunication  among   
 distributed  sites  can   be  arranged.  This  is  done  by  adju  sting   
 working hours, working from home, working long hours   
 and so  on [S1-2, S6,  S9, S13-14, S  16-17, S19-20].  Some   
 Scrum  teams  used  strategie  s  to  avoid  the  need  o  f i  ncreased   
 overlap  tim  e.  For  exam  ple,  a  Scrum  team used strict   time-   
 boxed  me  eting  (e.g.   two hours  planning  meeting)  to  avoid   
 late night  meeting  at some  sites [S6].  To make  the  meetings   
 short and effective, team member  s post their three daily   
 Scrum questions or develo  p backlog (feature list) before   
 attending the distributed meetings [  S8, S10, S12, S15].   
 Local  Scrum  team:  Du  e  to  the  lack  of  overl  ap  time,  Scrum    
 teams  are formed l  ocally  and each s  ite  conducts   their ow  n   
 scrum  [S6-9,  S10-11,  S18].  The  meeting  pract  ice  Scrum  of   
 Scrums  is   attended by a key  touch po  int  member for  each   
 team  to ensure  inter-team communication.  To  form   such a   
 179  179    
 Authorized licensed use limited to: Universidad Federal de Pernambuco. Downloaded on July 19,2010 at 19:55:36 UTC from IEEE Xplore. Restrictions apply.   

 Scrum t  eam, the  lo  cal team  shoul  d be  autonom  ous and   
 should also allocate independent architectural sub  systems   
 with well defi  ned interfaces to  each team to  reduce inter sit  e   
 communication  [S6-  9,  S13].    To  establish  multiple   
 communication  lines,  Scrum  team  allow  s  additional   
 distributed  meetings  along  with  Scrum  master  meeting   
 attended  by  technic  al  lead  or  d  esign  architect  of  each  local   
 Scrum team [S9].   
 Modified  practices:  In s  ome  cases,  Scrum team  modifi  es or    
 extends  Scrum  practices  to  a  ddress  the  communication   
 challenges. For example,  Berczuk reports that  having a local   
 “mini-scrum”  in  the  morning  after  a  distributed  scrum   
 meeting  can be very  effective  to reinforce t  he  value  of   the   
 Scrum within a local team [S17]. Scrum teams also use   
 strict communication policy (e.g. E-mail repl  y within 12   
 hours) to avoid delay due to t  he temporal distance of a   
 distributed team  [S9]. Instead  of whole  team presence  in the   
 late night  (or earl  y morning) Scru  m meetings,  only key   
 members of  the team  attend the  m  eetings w  ith  distributed   
 teams  [S5,  S7,  S13].  Moreover,  the  distributed  daily  Scrum   
 meetings are usually cut down to twice-a-week meetings   
 [S16].  We  also  found  other  m  odified  practices  su  ch  as   
 asynchronous  retrospective  meetings  (e.g.,  posting   
 comments and results on Wikis, emailing t  he minutes of   
 local Scrum meeting  to the onshore  team), conducting sprint   
 demo  by  ons  hore  team  only (l  ater  onsho  re  team  bri  efs   
 offshore team) [S1-3, S9, S13, S16].    
 Team  Collaboration:  Our SLR  revealed  that s  ocio-cultural    
 distance  in  G  SD  p  rojects  s  ubstantially  i  mpacts  team   
 collaboration processes and may cause ineffective Scrum   
 meeting  practi  ces  (e.g.  daily  Scrum mee  ting).  GSD project   
 managers use a number of practices th  at facilitate better   
 team collaboration while using Scrum p  ractices.   
 Team Gathering:  To increase a  project’s domain  knowledge    
 and  reduce  the  cult  ural  distance,  a  Scrum  te  am  gathers  and   
 performs few initial sprints at one  site before distributed   
 development  starts  [S13,  S15-19].  The  members  of  a   
 distributed  Scr  um  team  are  also  gath  ered  quarterly  or   
 annually  for  few  days  [S1,  S6  ,  S10,  S18].  During  this   
 gathering,  a  Scrum  team  can  perfo  rm  scrum  planning,   
 review  meeting,  retrospectives,  sprint  and   various   
 socializing  activities,  w  hich  can  help  to  reduce  cultu  ral   
 distance [S18].    
 Visit: To  reduce the  cultural distance  and  i  ncrease project    
 vision,  a  Scrum  team  adopts  the  practice  of  exchange  visits   
 for example Product  o  wners regularly  visit offshore team   
 throughout  the  development.  [S15-16,  S19].  Cultural   
 exchange is  also  performed by  maintaining  planned rotati  on   
 among o  ffshore and  onshore  teams  and  cross-location  visits   
 [S14-15]. Practices like p  roduct owners organizing  quarterly   
 product roadmap meetings  were also proven effective for    
 helping  team’s  members  to  fu  lly und  erstand  a  project’s   
 vision [S16].    
 Unofficial  distributed  meet  ings:   For  increased  team    
 collaboration,  along  with  formal   meetings,  distributed   
 Scrum  team  members  may  also  us  e  frequent  inform  al   
 meetings f  or clarifying  various i  ssues [S1].  These  unofficial   
 meetings  may  involve  leadership  meetings,  testing,  and   
 architectural  meetings,  distributed  tea  m l  ead  meetings,  peer   
 meetings,  and  socializing  meetings  (for  exampl  e, virtual   
 party or g  ames) or  even “coffee  talks” for  the collocated   
 team members [S14].    
 Training: Our  SLR  also  found  that  Scrum  t  eams  use  s  ome     
 practices  that can  be  categorized as  “training”.   P  ractices   
 for  e  xample  “initial Scrum  training,” “  technical  Scrum  ”  to   
 clarify new  t  echnology is  sues, rei  nforce t  he  value of  Scrum   
 and improve team collaboration w  hile using Scrum practices   
 in GSD projects [S9, S16].   
 Key do  cumentation:  Maintaining  valuable  documentati  on    
 may  also  improve  GSD  t  eam  collaboration  process  es  while   
 using Scrum practices [  S7, S9, S16, S19]. For  example,   
 supplementing  user  stories  with  Use  Case  diagrams  in   
 globally  accessi  ble  backlogs  helps  redu  ce   
 misunderstandings  and  improves  t  eam  collaboration   
 processes [S16]. Scrum  t  eams use  a number  of tools,  for   
 example,  issu  e  tracker  (e.g.  Jira  ),  enterprise  wikis  (e.g.   
 Confluence),  and  project  management   t  ool  (e.g.  Scrum   
 works)  to  maintain  better  documentation  and  project   
 transparency [S9, S16].   
 Mandatory  participation:  To  reduce  “offshore  si  lence”    
 challenge,  Scrum  team  can  assign  each  site a thirty-minute   
 mandatory  demo presentation  during  retrospective  sessio  ns   
 [S18]. The participation in these sessions helps make an   
 empowered  distributed  team  [  S16].  To  reduce  cultural   
 impediments, offshor  e teams are  also encoura  ged to pro  vide   
 useful information during daily Scrum m  eetings [S1].   
 Gradual  team  distribution:  Scrum  t  eams  may mo  ve  from  a    
 collocated  project  to  a  distributed  project  gradually  through   
 several  st  ages  (i.e.,  evaluation,  inception,  transiti  on  and   
 steady  s  tate) [S13].  The gradual  transition helps  deal with   
 the challenges  caused by cul  tural distances  and also helps  to   
 increase project dom  ain knowledge. Our  SLR reveals that in   
 one specific Scrum project, during initial three stages of   
 gradual  team   distribution  (i.e.  evalu  ation,  incepti  on  and   
 transition  phase)  only a  representative  of an  offshore  t  eam   
 participated  with  onshore  team  in  Scrum  meeting  pr  actices.   
 However, in s  teady state st  age, all the  Scrum team  members   
 located in onshore  and offshore teams  p  articipated in the   
 distributed Scrum  meetings [S13].  In another project,  one   
 onshore  Scrum  maste  r  facilitated   offshore   Scrum meetings   
 for  f  ew  initial sprints  and  came  ba  ck  to onshore  when  the   
 offshore team became familiar with  Scrum practices [S15].   
 Communication  bandwidth:  To  provide  a  rich    
 communication  e  nvironment  and   also  to  avoi  d  slow,   
 unreliable,  and  poor  transmission,  Scrum  te  ams  use  the   
 practice  “multiple  c  ommunication  modes”  .  T  he  practice   
 ensures  that  a  Scrum  team  with  distribut  ed  project   
 stakeholders  is  sup  ported  with  various  options  of   
 communication  tools  s  uch  as  phone,  web  camera,   
 teleconference,  video  con  ference,  web  conference,  n  et   
 meeting, email,  shared mailing  list, Instant  Message (IM),   
 Short  Message  Service  (SMS),  and  Internet  Re  lay  chat   
 180  180    
 Authorized licensed use limited to: Universidad Federal de Pernambuco. Downloaded on July 19,2010 at 19:55:36 UTC from IEEE Xplore. Restrictions apply.   

 (IRC) [S1  ]. Hence,  Scrum  team can  choose  appropriate t  ool   
 from a  wide range  of  communication  tools suitable  to the   
 communication bandwidth.  For example,  if a  Scr  um  team   
 found videoconferencing is not supported  b  y the existing   
 communication  bandwidth,  they  may  choose  a   
 teleconference in their distributed meeting s  essions.   
 Tool Support  : GSD proj  ects that consid  er using Scrum    
 need  a  wid  e  range  of  tool  support.  T  ools  may  include   
 communication,  collaborative,  p  roject managemen  t, issue   
 tracking,  bu  g  tracking,  globally  accessible  backlog,  and   
 burn d  own chart  etc.  We  found  the  practi  ce “proactive    
 resource  management”  helps  ensure  that  a  Scrum  team  has    
 the  necessar  y  tools  and  skills  to  support  t  heir  Scrum   
 practices  in  distributed  settings.  Our  SLR  revealed  th  at   
 along with  communication tools, Scrum  te  ams also  use a   
 number of  collaborative tools in  cluding Wikis,  Blogs, social   
 book  markin  g,  expertise  finders,  whiteboards,  electronic   
 work  sp  ace,  desktop and  application  sharing,  ph  oto  charts,   
 knowledge  bases,  experience  databases,  lesson  learned   
 repositories,  while  using  Scrum  practices  [S1-20].  An   
 enterprise  wiki  (e.g. Con  fluence)  has been  found  to  be  very   
 effective while using Scrum practices  [S20]. Distributed   
 team  members can communicate  and  publish  t  he  results  of   
 various  Scrum  meetings  minutes  in  wiki  [S20].  To  increase   
 project tr  ansparency and  visibility an  d to  support  the Scru  m   
 practice  “B  acklog”,  our  SLR  h  as  als  o  revealed  that   
 distributed Scrum teams use  a number of tools including   
 globally accessi  ble project  management too  ls (e.g.  “Rally”),   
 issue trac  ker, bug  tracker (e.g.  “Jira”),  backlog managemen  t   
 tools (e.g. “Scrum works”), and  tools for supporting the   
 Scrum  artifacts  “Burn d  own  chart  s”  [  S1-  4,   S7, S10,  S17,   
 S19-20].   
 Team  management: w  e  have  also fo  und  that  a  commonly    
 used strategy for managing a l  arge distributed team that   
 considered using S  crum is  to  split  into small manageable   
 sub-teams  [S1-2,  S5].  Thus,  a  large  GSD  project  may   
 contain  a  number  of  Scrum  teams  (or  sub  teams)  and  some   
 of  the  Scrum  teams  may  als  o  be  geographic  ally  distributed   
 [S1].  S  crum  teams use  a  number   of strategies  to  form  sub   
 teams.  An  autonomous  s  ub  team  can  be  b  uilt  and  allocated   
 based  on  features,  functions  and  so  on  that  ensure  each  sub   
 team is  alloc  ated independ  ent archite  ctural subs  ystems  with   
 well defined i  nterfaces [S6-8, S  9, S13].  For example, highl  y   
 volatile  features  need  frequent  i  nteraction  with  business   
 users  and  such features  can  be  d  eveloped  wi  th  a sub-team   
 close t  o the  customer  [S3,  S13].  In  some  cases,  a  sub-team   
 has  its  own  product  o  wner  and  Scrum  master  and   conducts   
 their own Scrum [S1, S3, S5].   
 We  al  so  obser  ved  that   GSD  projects  used  following   
 Scrum  team  m  odels  suitab  le  to  their  development   
 environments while considering Scrum [  6].   
 Isolated Scrum  team: G  SD project t  eams are  geographically    
 isolated;  i  n  most  cases  offsh  ore  teams  are  not  cross-   
 functional  and may   not use Scrum p  rocesses.  There is less   
 empirical  evid  ence  of  using  this  type  of  team  model   while   
 using Scrum.   
 Distributed Scrum  of  Scrums team:  In thi  s team mod  el,    
 Scrum  teams  (or  s  ub-teams)  are  formed  based  on  local  site   
 and each team perform their  si  te based own independent   
 Scrum.  The  meeting p  ractice,  Scrum  o  f  Scrums  th  at i  s   
 attended  b  y  the  key  t  ouch  points (e.g. Scrum master) from   
 each  site  based  sub-team  ensures  effective  inter-t  eam   
 communication  [S1].  I  f t  he  number  of  sub-teams  incr  eases,   
 in  some  cases,  a  nest  ed  Scrum  of Scrums meetin  g  practice   
 (e.g. Scrum of  Scrum of Scrums)  ensures effective su  b-team   
 coordination [6].   
 Fully Integrated Scrum  t  eam: In  t  his team model,  Scrum    
 teams are  cr  oss-functional with  team members  distributed   
 across geo  graphical l  ocations.  This  type o  f Scrum  team   
 should  consider  the ris  ks due  to  geographical,  temporal  and   
 socio-cultural distances. In this m  odel, all team members   
 should  attend  and  participate  in  every  Scrum  meeti  ng   
 practice.  We  foun  d  in some ca  ses,  a  GSD project  that  has   
 several fully integrated Scrum teams  f  ollows the practice   
 “centrally  located  manage  ment  t  eam”  in  which    
 management persons  of  each  Scru  m  team are lo  cated  i  n  a   
 central  site  (e.g.  onshore)  [S1-2].  In  this   case  frequent   
 meetings  amon  g  a  centrally  located product own  er  team, a    
 team  of  Scrum masters,  and architects  from  the  sub  -teams   
 ensures  effective  multiple  sub-team  communication  and   
 collaboration [S2].   
 Office space:  Our SLR has r  evealed that to s  upport a better    
 communication  and  collaborative  w  ork  a  nd  meeting   
 environment, Scrum teams use fol  lowing practices:   
 Single roo  m: This  practice  ensures  each  Scrum  team  is    
 allocated to a  sin  gle room  so that  they can communicate   
 with each  other [S1  , S9, S1  1]. In t  his case i  f a pe  rson   
 switches teams, he  or she is also  relocated to the new  team’s   
 room  [S1].  If   the  Scrum  tea  m  is  divided  i  nto  multiple  su  b-   
 teams,  t  hen  all co-located  sub-teams are able to  work  in  a   
 single room should be ensured [S1].   
 Dedicated meeting room: This  pr  actice also ensures  each    
 site has  a separat  e meeting r  oom with  all necessar  y network   
 connectivity and  tools  while  attending a  distribut  ed meeting   
 [S1, S3]. To make Sc  rum meetings visible  to everyone, each   
 site can  use a vi  deo projector  [S15]. In  some cases,  a virtual   
 conference room  can also  be used  as a  dedicated meeting   
 room for Scrum meetings sessions [  S5].   
 Multi  sites:  It  has been reported  that  Scrum  teams  usually    
 use  the  following  s  trategies  while  using  Scrum  practices  in   
 GSD projects with multi sites develop  ment.   
 Local  Scrum  team:  GSD  project  managers  build    
 autonomous site-b  ased local  Scrum teams  and allocate  tasks   
 with  independent  architectural  subsystems  and  well  defined   
 interfaces  to each local team [S6-8, S9, S13]. The practice   
 Scrum of  Scrums  attended by  a ke  y touch  point (  e.g. Scrum   
 master) of each site provides int  er-team coordination [S14].   
 Restricted  team  distribution:  In  this  practice  ,  a  fully    
 integrated  Scrum tea  m is  restricted  within  a  limited  number   
 of  sites  distributions.  For  example,  one  of  t  he  studies   
 reported on  a project  that was  distributed over  multiple sit  es   
 181  181    
 Authorized licensed use limited to: Universidad Federal de Pernambuco. Downloaded on July 19,2010 at 19:55:36 UTC from IEEE Xplore. Restrictions apply.   

 but each Scrum  team was distr  ibuted between t  wo sites only   
 [S9].   
 V.  D   
 ISCUSSION   
   
 In  th  is  section,   we  review  vario  us  findin  gs  of  our   
 Systematic Literature  Review (SLR) an  d draw following   
 conclusions   
   
 Conclusion 1. There is a  growing interest and literature    
 demands more  empirical  study to  understand t  he use of   
 Scrum practices in globally distribut  ed projects.   
   
 It  is  stil  l  an  op  en  debate  whe  ther  or  n  ot  the  Scru  m   
 practices can successful  ly be used in di  stributed settings   
 [[5]. However, the in  creasing number of publi  cations on this   
 topic,  as  shown  in  table   1,  appears   to  be  an  indication  t  hat   
 there is  an increasing  interest in  u  sing  Scrum practices  in   
 GSD  project  s.  We  have  fo  und  that  most  of  the  papers  and   
 all the empirical studies have been  published after 2007.   
 Among  the  reviewed  twenty  studies,  all  of  the  four   
 empirical  studies and few  experi  ence  reports  have reported   
 some  degree  of  suc  cess  i  n  usin  g  Scrum practices  in GSD.   
 Despite these  successes, the m  echanics of  combining Scrum   
 practices  an  d  GSD  are  n  ot  well  understood  [4].  T  hese   
 findings hi  ghlight a  vital  research  gap t  hat needs  immediate   
 attention  of GSD   and  agile  communities. Hence, there is a   
 clear need of  building empirically found  ed knowledge about   
 using agile practices in  general and Scrum p  ractices in   
 particular in the context of GSD.   
 Conclusion  2. The  use  of  Scrum  practices  may be  limited    
 by various GSD project’s contextual  factors.   
   
 Our  revi  ew  has  r  evealed  that  there  can  be  several   
 contextual factors  of a  project  that may   i  mpact  the u  se  of   
 Scrum  pr  actices  in GSD.  Some  of  the   factors identified  in   
 the reviewed studies are s  hown in Table 2. Our findi  ngs also   
 reveal  that  most  of  the  distributed  proje  cts  were  within the    
 same  company and  the  team  distribution  was  limited b  y the   
 number of  distributed sites.  We also  found that  there is  a   
 limited  evidence  of  using  Scrum  for  s  afety  critical   
 applications. Thou  gh our  findings reveal  that  the Sc  rum   
 practices  can  be  used  in  a  distributed  project  that  has   
 multiple  numbers o  f  teams,  very  l  arge  project pe  rsonnel  or   
 even no  o  verlap time  between di  stributed  sites,  but  the   
 actual p  rocess of  using  Scrum i  s not  clearly  understood  yet.   
 We  did  not  consider  the impact of  o  ther  project  conte  xtual   
 factors (for example:  budget, complexity, criticality,  team   
 experience,  ti  me  constraints, contract n  ature  and so on) on   
 using  Scrum  in  GSD  pr  ojects.  Thus,  we  conclude  that  the   
 use of Scrum p  ractices may be limited  by various contextu  al   
 factors of a GSD project.   
   
 Conclusion  3. Globall  y distributed Sc  rum teams usually    
 face  a number  of challenges  as project  distribution  impact   
 on  com  munication,  coordination  and  collaboration   
 processes.   
 Our  review  findings  reveal  th  at  the  tempor  al,   
 geographical  and  socio-cultural  dist  ances  due  to  the  project   
 stakeholder’s distributi  on cause a  number of  challenging   
 factors  that  impact  GSD  communication, coordination  and   
 collaboration  processes.  Th  e  communication  related   
 challenges are  identified as  vital. Any  cultural differences   
 involved  in a dist  ributed  t  eam  can   su  bstantially  i  mpact  on   
 the team’s collaboration process. Managing a large team   
 distributed at multiple sit  es is quite challenging as w  ell.   
 Lack of tools and insufficient infrastructure support may   
 also make use of Scrum practices in  GSD difficult.   
   
 Conclusion  4. Scrum practices nee  d to be extended or    
 modified in  order  to  support globally  distributed software   
 development teams.   
   
 Our findings re  veal that to su  pport the use  of Scrum   
 practices  in var  ious  distributed  p  rojects,  Scrum  t  eams  need   
 to  add  a  num  ber  of  strategies  suitabl  e  to  their  developm  ent   
 environments.  A  distributed  Scrum  team  can  choose   
 different  Scrum  team  models  to  reduce  its  project   
 distribution challenges.  A distributed te  am usually needs   
 some overlap tim  e between them t  o carry out  various Scrum   
 meeting p  ractices. To  support  a distribut  ed team  that  has no   
 overlap  ti  me,  Scrum  teams  may  use  some  supportin  g   
 distributed  practices  incl  uding s  ynchronized  work  hours,   
 local  Scrum,  a  dditional  local  team  meetings,  strict   
 communication  policy, ke  y perso  ns attending  all  distributed   
 meetings,  reducing  number  of  Scrum  meetings,   
 asynchronous  retrospective  and  so  on. T  o increase  the  team   
 collaboration  processes,  Scrum team  can  also  use  some   
 practices  includin  g  team  gath  ering,  exchange  visits,   
 informal  meetings  of  distributed  t  eam  members,  mandatory   
 presentations,  maintaining  key documentation,  and gradual   
 team distribution which  also help to  reduc  e team  cultur  al   
 differences.  A  Scrum team  can  also use different   practices   
 such as multiple  m  odes of c  ommunication to address  the   
 challenges  caused  by th  e lack  of  communic  ation bandwi  dth   
 and  to  ols.  A  distributed  Scrum  team  also  needs   to  be   
 supported by  various t  ools for p  roject management  , backlog   
 management, tracking issues, and  so on.   
 VI.  L   
 IMITATION   
   
 Like  any  empirical  study,  this  study  also  has  cert  ain   
 limitations that  sh  ould be  kept in mind  while considering   
 the reported  findings. With  the increasing  number of  studies   
 in  this  area,  this  review  may  have  missed  so  me  papers  that   
 address  the use  of  Scrum practices  in GSD.  However, we   
 are co  nfident th  at it  wo  uld not  have  b  een a  s  ystematic   
 omission.   
 The papers included in this review have undergone a   
 thorough selectio  n process  and in  volved two r  esearchers   
 cross checkin  g the  completeness  of searchers  and vali  dating   
 the suitability of each paper for inclusion.  However, the   
 182  182    
 Authorized licensed use limited to: Universidad Federal de Pernambuco. Downloaded on July 19,2010 at 19:55:36 UTC from IEEE Xplore. Restrictions apply.   

 findings  of  this  review  ma  y have  bee  n a  ffected  by  the   
 systematic  bias  i  n  describing  t  he  use  o  f  Scrum  practices in   
 various p  rimary studi  es as  some  of  the  selecte  d studies   
 describe the use  of various  Scrum practices alon  g with other   
 agile practices (e.g. XP practices).     
 During the data extraction process  , we found that several   
 papers  lacked  suffi  cient  details  about  t  he  reported  projects’   
 contextual factors and  the  challenges  faced and  strategies   
 used while  using  Scrum  practices  in  GDS p  rojects. We   
 synthesized our d  ata by identifying  and c  ategorizing the   
 themes fr  om the  papers  included  in th  is review.  Since  some   
 of  the selec  ted  papers do not provide d  etailed  information,   
 there is  a  possibility that  the extraction  process   may  have    
 resulted in some inaccuracies.   
 VII.  C   
 ONCLUSIONS AND   
 F   
 UTURE   
 R   
 ESEARCH   
   
 We  have  conduct  ed  a  systematic  review  of  the  li  terature   
 on  the  use  of  Scrum  p  ractices i  n  GSD  projects.  The  aim  o  f   
 this  review  was  to  i  dentify  various  challenging  factors  that   
 restrict  the  use  of  Scrum  practic  es  in  p  rojects  that  are   
 globally distributed. Exploring potential strategies  t  o deal   
 with those challenging  fact  ors were  also another  research   
 focus.  We h  ave pres  ented o  ur fi  ndings in  two  stages:  initial   
 quantitative data presentatio  n about the number of  published   
 papers  in  each  year  starting  from  2003,  the  types  of  studies   
 reported in the reviewed  papers and the contextual f  actors of   
 the reported  projects.  In the  second stage,  we  have analyzed   
 and  interpreted  the  data  extracted  from t  he  primary  st  udies   
 included  in   this  review  in order to find the   answers to our   
 research questions. Our analysis and  interpretation of the   
 data  have enabled  us  t  o  draw some  general  con  clusions  in   
 Section  5 about  the  current  state  of  practice  of usin  g Scrum   
 practices in GSD projects.   
 The results of  this review  provide information t  hat can be   
 useful  for  GSD  practitioners  ’  understanding  the  various   
 challenging  factors  that  may  impact  on  GSD   
 communication,  collaboration  and  co  ordination  processes   
 and restrict  the use  of Scru  m practices.  Moreover,  the  GSD   
 project  managers  can  also  ben  efit  from  t  he  synthesized   
 knowledge  ab  out  th  e  strategies that  are  being  use  d  to deal   
 with the  identifie  d challenges.  However,  the  strength  of   
 evidence  found  in  the  l  iterature  about  the  identified   
 strategies is  very l  ow. That  is wh  y it  is difficult  to o  ffer any   
 specific  advice  to  pra  ctitioners  solely  based  on  this  review.   
 This  revi  ew  has also ident  ified  several interesting  research   
 challenges  that need to be address  ed  in  t  he  future research   
 efforts by GSD  and agile  researchers. A  clear finding  of this   
 review  is  th  at  there  is  an  immediate  need  of  increasi  ng  the   
 quantity  and  qual  ity  of  empiri  cal  studies  to  describe,   
 evaluate,  explore  and  explain  the  use  of  various  Scrum   
 practices in GSD projects.   
 To enhance the  findings of t  his review, we i  ntend to   
 conduct  a  comprehensive  survey  of  practitioners  to  identify   
 the  key  chal  lenges  invol  ved  in  and  the  strat  egies  to  redu  ce   
 these challenges  to support  the use of  Scrum  practices  in   
 GSD  projects.  In  addition  to  this  survey,  we  will  also   
 conduct multiple in depth industry based  case studies to   
 provide  an  empiricall  y sup  ported  body  of  knowledge  ab  out   
 the  use  of  Scrum  in  GSD  projects  considering  various   
 contextual factors.   
   
 Appendix A. Papers included in t  he review   
   
 [S1]  M.  P  aasivaara,  S.  Durasiewi  cz,  C.  Lassenius,   
 “Distributed Agile  Development:  U  sing  Scrum in  a Large   
 Project,”  Software  Process  Improvement  and  Practice  ,  Vol.   
 13, Issue 6, pp. 527-544, 2008.   
 [S1a]  (Excluded)  M.  Paasivaara,  S.  Durasiewicz,  C.   
 Lassenius, “Distributed Agile Development: U  sing Scrum   
 in a  Large  Project,”  in Proce  edings of  ICGSE  2008,  pp. 87-   
 95, 2008.   
 [S2] J. Sutherland,  A. Viktorov, J.  Blount, N. Puntiko  v,   
 “Distributed  Scrum:  Agile  Project  management  with   
 Outsourced  Developm  ent T  eams”  in  P  roceedings  of  the   
 Conference on HICSS’40, pp. 274,  2007.   
 [S3]   J.  Sutherland,  G.  Schoonheim,  M.  Rijk,  “Fully   
 distributed  Scrum:  Replacing  Local  Productivity  an  d   
 Quality  wi  th  Offshore  Teams,”  in  proceedings  of  the   
 Conference on HICSS’42, pp. 1-8, 2  009.   
 [S3a]  (Exclud  ed)  J.  Sutherland,  G.  Schoonheim,  E.   
 Rustenburg,  M.  Rijk,  “  Fully  distribut  ed  Scrum: The  secret   
 sauce  for  H  yperproductive  Outsourced  Devel  opment   
 Teams” in  Proceedings   of the  Conference on  Agile 2008,   
 pp. 339-344, 2008.   
 [S4]  J.  Cho,  “Distributed  Scrum  for  Large-Scale  and   
 Mission-Critical Projects,” in Proce  edings of the Conference   
 on AMCIS 2007, paper 235, 200  7.   
 [S5]  W.  Williams,  M.  Stout,  “Colossal,  Scattered,  and   
 Chaotic  (Planning  with  a  Large  Distributed  Team),”  in   
 Proceedings o  f th  e Conference  on  Agile  2008,  pp. 35  6-361,   
 2008.   
 [S6] B. Drummond, J.  F. Unson, “Yahoo! Distributed  Agile:   
 Notes  from  the  W  orld  Over,”  in   Proceedings  of  the   
 Conference on Agile 2008, pp. 31  5-321, 2008.   
 [S7]  M.  Cristal,  D.  Wildt,  R.  Prikladnicki,  “Usage  of   
 SCRUM  Practices  within  a  Glob  al  Company,”  in   
 Proceedings of ICGSE 2008, pp. 22  -226, 2008.   
 [S8] H. Holmstrom, B. Fitzgerald  , P. J. Agerfalk, E. O.   
 Conchuir,  “Agile   Practices  Reduce  Distance  i  n  Global   
 Software  Develop  ment”  Information Systems Manag  ement  ,   
 Summer, pp. 7-26, 2006.   
 [S9] M.  Vax, S. Michaud,  “Dist  ributed Agile:  Grow  ing a   
 Practice Together”  in Proc  eedings of th  e Conference on   
 Agile 2008.pp.310, 2008.   
 [S10]  H.  Smits,  “Implementing  Scrum  in  a  Distrib  uted   
 Software Develop  ment Organization,  ” in  proceedings of  the   
 Conference on AGILE 2007, pp.3  71-375, 2007.   
 [S11]  B. Jensen  , A.  Zilmer,  “Cross-  continent  Development   
 using Scrum  and XP” in  Proceedings of  t  he Conference on   
 XP 2003, pp.146-153, 2003.   
 183  183    
 Authorized licensed use limited to: Universidad Federal de Pernambuco. Downloaded on July 19,2010 at 19:55:36 UTC from IEEE Xplore. Restrictions apply.   

 [S12]  C. Kuss  maul, R.  Jack,  B.  Sponsler,  “Outsourcing  and   
 Off  shoring  with  Agility:  A  Case  Stud  y”  in  Proceedings  of   
 the Conference on XP/Agile Universe  , pp. 147-154, 2004.   
 [S13] K.  Sureshchandra, J.  Shrinivasavad  hani,   “Adopting   
 Agile  in  Distributed  Development”  in  Proceedings  of   
 ICGSE’08,pp. 217-221, 2008.   
 [S14] A.  Danait,  “Agile o  ffshore techniques-  A  case Stud  y”   
 in proceedings of the Conference on Agile Development   
 Conference, pp.214-217, 2005.   
 [S15]  M.  Summers,  “Insights  into  an  Agile  Adventure  with   
 Offshore Partners,” in Proceedings of the Conference on   
 Agile 2008, pp. 333-338, 2008.   
 [S16] E.  Therrien,  “Overcoming  the  Challenges of  Building   
 a Distributed Agile Organization,  ” in Proceedings of the   
 Conference on Agile 2008, pp. 36  8-372, 2008.   
 [S17]  S.  Berczuk,  “Back  to  Basics:  The  Role  of  agile   
 Principles in  Success with  a Distributed  Scrum Team,”  in   
 Proceedings of AGILE 2007, pp.  382-388, 2007.   
 [S18]  P.  Karsten,  F.  Cannizzo,  “The  Creation  of  a   
 distributed  Agile  Team,”  in  proceedings  of  XP   2007,   
 pp.235-239, 2007.   
 [S19] M.  Cottmeyer, “The  Good  and Bad  of A  gile Offshore   
 Development,” in  proceedings of  the Conferen  ce on AGILE   
 2008, pp.362-367, 2008.   
 [S20] M.  Paasivaara,  C.  Lassenius,  “Could Global  Software   
 Development  Ben  efit  from A  gile  Method?”  in  pro  ceedings   
 of  ICGSE 2006, pp. 109-113 ,  200  6.   
   
 Appendix B. Data Extraction fo  rm   
   
 Paper description:   
   
 1.  Paper identifier: Unique id for th  e paper    
 2.  Date of data extraction:    
 3.  Bibliographic reference: Author,  year, title, source    
 4.  Type  of  article:  Journal  article/conference  paper/    
 workshop paper/unclear   
 5.  Paper aims: what were the aims of thi  s paper?    
 6.  Paper  E  vidence:  empirical  study/experien  ce    
 report/unclear   
   
 GSD Background:   
   
 1.  Collaboration  mode:  inter  organizational/intra    
 organizational/unclear   
 2.  Number of Sites: ……./unclear    
 3.  Number of Teams:……/unclear    
 4.  Project personnel:……/unclear    
 5.  Time zone differences:……/uncl  ear    
 6.  Application Domain: ……./uncle  ar    
   
 Study Findings:   
   
 1.  Scrum  team  scenario  (  model):  Isolated  Scrum    
 team/Scrum  of Scrum  meeting  used  for site  based  team   
 coordination/Fully i  ntegrated (  e.g.  Scrum  team contain   
 onshore and offshore personnel)/unc  lear   
 2.  Challenges:   challenging  factors  that   impact  GSD    
 communication,  coordination  and   collaboration   
 processes and restrict the use of Scrum  practices.   
 3.  Strategies: U  sed various  strat  egies to  reduce  project    
 stakeholder’s  distribution  challen  ges  to  support  the  use   
 of Scrum practices.   
 4.  Subjective  evaluation:  a  small sum  mary of  the  findings    
 from the paper.   
   
 A   
 CKNOWLEDGMENT   
   
 M.  Ali  Babar’s  research  is  partially  support  ed  by   
 Science  foundation  Ireland  under  grant  number   
 03/CE2/I303-1.   
   
 R   
 EFERENCES   

 [1]  E.  Carmel,  Global  software  teams:  collabo  rating  acro  ss    
 borders and time zones : Prentice-Hall, 1999.    
 [2]  J. D.  Herbsleb “Global  Software Engineering:  The Future  of   
 Socio-  technical  C  oordination”  in  proceeding  of  Future  of   
 Software Engineering, FOSE, pp.188-298, 2007.   
 [3]   P.  Abrahamsson,  O.  Salo,  J.  Ronkainen,  and  J.  Warsta,  Agile    
 software  development  methods  -  Review  and  analysis ,  VTT    
 Electronics ed.: VTT Publications, 2002.   
 [4] P. J. Ågerfalk and B. Fitzgerald, "Flexible and distributed   
 software processes:  Old p  etunias in  new bo  wls?" Communications    
 of the ACM, vol. 49, Oct 2006, pp. 26-34.    
 [5]  F.  Abbattista,  F.  Cal  efato,  D.  G  endarmi,  F.  Lanubile,   
 “Incorporating  Social  Software  int  o  Distributed  Agile   
 Development  Environments”  in  proceedings  of  the  2  3   
 rd   
  ASE   
 workshop, pp.46-51,2008.   
 [6]  J.  Sutherland,  K.  Schwaber,  “The  Scrum  Pap  ers:  Nuts,  Bolts,   
 and  Origin  of  an  Agile  Process,”   
 http://scrumtraininginstitute.com/home/stream_download/scrumpa   
 pers , Last accessed 11 Apr 2009.    
 [7]  Ambler,  S.:  Agile  Adopt  ion  Rate  Survey:  February  2008   
 http://www.ambysoft.com/surveys/agileFebruary2008.html  L  ast    
 accessed 11 Apr 2009.   
 [8]  Ambler,  S.:   Agile  Practice  and  Principles  Survey:  July   
 2008, http://www.ambysoft.com/surveys/practicesPrinciples2008.ht    
 ml Last accessed 11 Apr 2009.    
 [9]  B.  Kitchenham,  S.  Charters,  “Guidelines  for  Performin  g   
 Systematic Literature Reviews in Software Engineering” EBSE   
 Technical Report, EBSE-2007-01, 2007.   
 [10]  T.  Dyba  and  T.  Dingsoyr,  "E  mpirical  Studies  of  Agile   
 Software Development:  A Systematic  Review," Information and    
 Software Technology, Vol. 50, Issue 9-10, 2008, pp-833-859.    
 [11]E., Hossain, M., A  ., Babar, H.,  Paik, “Using Agil  e Practices in   
 Global Software Development:  A Systematic Revi  ew,” UNSW   
 CSE Technical Report, TR 904, (2009).   
 [12] R. K.,  Yin, “Case Study  Research,” Thousand Oaks,  Ca. Sage   
 publications, (2003).   

 184  184    
 Authorized licensed use limited to: Universidad Federal de Pernambuco. Downloaded on July 19,2010 at 19:55:36 UTC from IEEE Xplore. Restrictions apply.   

 Citations (359)  

  References (23)  

 ... Furthermore, we have also taken into account the number of citations received by each SLR. Three of the SLRs, namely [48]  [49][50], have received a significantly higher number of citations compared to the others. Thus, these three studies comprise our final sample of SLRs. ...   

 ... Additionally, in this study the number of studies citing the SLRs was higher, and the focus was not so much on the exhaustiveness of the analysis but on validating the scheme. Table 6 provides the figures for the sample cases: 203, 74 and 36 are the citing works for [48]  [49][50], respectively. Next, the referring studies were scrutinized for the referring paragraphs. ...   

 ... It can be argued that the publication trend may be an indicator of practitioners and researchers' growing interest in using and reporting Scrum practices for GSD projects''. [48]  ''Agile practices in distributed software development and there has also been a steady growth in literature presenting the use of Scrum in distributed software developments [1...]'' [54] SYN-V. Identification of most relevant venues, for example conferences, journals, etc. ...   

 Adding relevance to rigor: Assessing the contributions of SLRs in Software Engineering through Citation Context Analysis    
   
 Article    
 Full-text available    
 Aug 2024 

 Oscar Díaz 
  Marcela Genero 
  Jeremías Pérez Contell 
  Mario Piattini 

 View     

 ... It has too much time complexity i.e. it requires too much computations. So, by processing it on GPU, we gain additional benefit from parallelism [16]  . ...   

 TOOLS AND TECHNIQUES FOR PARALLEL IMAGE PROCESSING    
   
 Article    
 Sep 2024 

 Mateeh Ullah 
  Sameer Naveed 
  Abdullah Asim 
    
 The main aim is to improvement in the quality of image, perform other operation, extraction of information and to classify the image while doing image processing. It is effectively used in computer, medical and other related fields. The main problem is that it is generally a time-consuming process; Parallel computing (parallelism) provides an efficient and convenient way to address this issue. There are many challenges in Image processing like Filtering, Restoration and classification etc. In addition, it is also a time-consuming process. The solution of these challenges is to use a parallel computing technique known as parallel image processing. The main focus of this paper is to review and to provide the comparative study of the existing contributions of tools and techniques of parallel image processing and analysis between different technique which are MATLAB, CUDA, BIONIC, Hadoop and GPU (graphic Processing Unit) along with limitation and advantage of these tools and techniques. In this review, we also tried to discuss the architecture of these parallel image processing techniques.    

 View     
 Show abstract      

 Kierunki rozwoju zwinnego zarządzania projektami -metaanaliza    
   
 Chapter    
 Full-text available    
 Sep 2024 

 Krzysztof Woźniak 
  Sławomir Wawak 
    
 STRESzCzENIE Celem rozdziału było ustalenie stanu badań w obszarze zwinnego zarządzania projektami, wskazanie głównych kierunków badań oraz identyfikacja luk badawczych Badanie zostało przeprowadzone przy użyciu metodyki systematycznego przeglądu literatury drugiego stopnia Metaanaliza wskazała kilka głównych obszarów badań w zwinnym zarządzaniu projektami, ta kich jak znaczenie Manifestu Agile, zgodność z modelami dojrzałości, problemy szczegółowe, zarządzanie wiedzą, wyzwania pracy zdalnej, łączenie podejść zwinnych, skalowanie i integracja projektów zwinnych zidentyfikowano również luki badawcze związane z potrzebą szerszych ba dań nad skalowaniem, powiązaniami między strategią a projektem, skutecznym rozwiązywaniem konfliktów, transferem wiedzy oraz zarządzaniem jakością SłoWA KLUCzoWE zwinne zarządzanie projektami, systematyczny przegląd literatury, metaanaliza, zarządzanie pro jektami, agile * Publikacja prezentuje wyniki badań naukowych przeprowadzonych w ra mach projektu nr 048/zzP/2023/PoT finansowanego ze środków subwen cji przyznanej Uniwersytetowi Ekonomicznego w Krakowie Publikacja w monografii: "Złożoność problemów w zarządzaniu organizacjami", pod red. Pawła Cabały, Małgorzaty Marchewki i Tomasza Małkusa, TNOiK Dom Organizatora, Toruń 2024 ISBN 978-83-67153-70-6 e-ISBN 978-83-67153-74-4    

 View     
 Show abstract      

 Knowledge representation to support EMDAP implementation in advanced reactor licensing applications    
   
 Article    
 Nov 2024 
  NUCL ENG DES 

 Paridhi Athe 
  Nam Truc Dinh 
  Abhinav Gupta 

 View     

 The influence of remote work on scrum-based information technology projects management: insights for success    
   
 Article    
 Oct 2024 

 Ashraf Bany Mohammed 
  Hazar Hmoud 
  Luai Sultan 
  Husam Yaseen 
    
 Purpose- This research examines how recent changes in working practices as a result of COVID-19 – most often making knowledge-based work for technologists remote to the main office – are influencing the success of software projects managed by the Scrum process model. It explores the relationship between remote working and aspects that past empirical research has identified as important to project success within Scrum. Design/methodology/approach- The research used SPSS for descriptive analysis and structural equation modeling (SEM) to test the hypotheses relationships using SmartPLS 4, using a quantitative research design, a questionnaire was used and distributed electronically to the intended sample, which includes IT project managers, developers and designers in Jordan who work in projects that use Scrum methodology for their IT projects. Findings- The study found that working from home on Scrum projects had a significant influence on project success and highlighted the need to meet the three basic psychological requirements of autonomy, competence and relatedness. Furthermore, this research revealed that both the ability to work from home and the use of Scrum contribute to project success, with Scrum acting as a mediator. Originality/value- This study provides an understanding of the impact of adapting to remote working on project success using the Scrum framework. By filling this gap in the literature, the study generates insights that can also be extrapolated to situations in which people do not need to work remotely after a pandemic but might still anticipate and plan for new types of disruptions in the workplace.    

 View     
 Show abstract      

 Systematic Review of Literature on Agile Approach    
   
 Article    
 Oct 2024 

 Mansurali Anifa 
  Ramakrishnan swamynathan 
  Sajal Kabiraj 
  Shanmugan Joghee 
    
 The agile approach is a timeboxing approach wherein the entire project is broken down into smaller tasks of user stories that iterate continuously to improve from feedback obtained frequently. Agile methodology in the right blend of its values and principles can be used in a dynamic environment to manage cross-functional teams for faster and effective decision-making. Flexibility is of prime importance in the agile approach which helps organizations to thrive in rapidly emerging market conditions. The timeliness and cost-effectiveness provided by the agile methodology give a competitive edge to the organizations employing it. Fast-evolving consumer trends and market needs were contrasted by lengthier project timelines of other traditional methodologies. This created the need for methods that provide faster outputs at their fullest potential for the organizations to retain their customers and position in the market which motivated this research. Yet, a huge research gap exists in the area concerning the development of agile methods. This article aimed to provide a deeper understanding of how agile can be used to solve the complexities of the current day market conditions along with its widespread applications in various industries through a systematic literature review of past research work. Further, this review also aims at explaining the impediments of adopting agile methodology in any sort of organization under any given circumstances. During the study, it was found that there were several definitions and frameworks of agile that have been proposed in different forms. This review has tried to provide a consolidated concept of the agile approach presented to date.    

 View     
 Show abstract      

 КОМПАРАТИВНИЙ АНАЛІЗ ТЕОРІЙ І ПІДХОДІВ ДО УПРАВЛІННЯ ПРОЕКТАМИ    
   
 Article    
 May 2024 

 А.О. Пілюков 
    
 Створення теорій є фундаментальним завданням у багатьох галузях досліджень, що підкреслює його ключову роль у наукових пошуках. У цьому дослідженні проведено аналіз існуючих теорій у різних дисциплінах з подвійною метою: (1) об'єднати ці знання у структуровану систему, і (2) сприяти розвитку та оцінці теорії у сфері досліджень з управління проектами. У статті наводяться основні теорії, які були виокремленні автором та вважаються найбільш сучасними та актуальними на сьогодні. Надається аналіз наступних теорій з управління проєктами: прескриптивна теорія, описова теорія, прогностична теорія, теорія практики, гібридна теорія, пояснювальна теорія, теорія процесів, теорія дії/дизайн, теорія планування, теорія виконання, теорія контролю. У статті наводиться компаративний аналіз визначених теорій та надаються певні недоліки цих підходів. У висновках наводяться обмеження цього дослідження та надаються напрямки подальшого розвитку та аналізу для подальших досліджень та доробків.    

 View     
 Show abstract      

 Implementation of Agile in healthcare: methodology for a multisite home hospital accelerator    
   
 Article    
 Full-text available    
 May 2024 

 Meghna P Desai 
  Miriam Tardif-Douglin 
  Indigo Miller 
  David Levine 
    
 Background The diffusion of innovation in healthcare is sluggish. Evidence-based care models and interventions take years to reach patients. We believe the healthcare community could deliver innovation to the bedside faster if it followed other sectors by employing an organisational framework for efficiently accomplishing work. Home hospital is an example of sluggish diffusion. This model provides hospital-level care in a patient’s home instead of in a traditional hospital with equal or better outcomes. Home hospital uptake has steadily grown during the COVID-19 pandemic, yet barriers to launch remain for healthcare organisations, including access to expertise and implementation tools. The Home Hospital Early Adopters Accelerator was created to bring together a network of healthcare organisations to develop tools necessary for programme implementation. Methods The accelerator used the Agile framework known as Scrum to rapidly coordinate work across many different specialised skill sets and blend individuals who had no experience with one another into efficient teams. Its goal was to take 40 weeks to develop 20 ‘knowledge products’,or tools critical to the development of a home hospital programme such as workflows, inclusion criteria and protocols. We conducted a mixed-methods evaluation of the accelerator’s implementation, measuring teams’ productivity and experience. Results 18 healthcare organisations participated in the accelerator to produce the expected 20 knowledge products in only 32 working weeks, a 20% reduction in time. Nearly all (97.4%) participants agreed or strongly agreed the Scrum teams worked well together, and 96.8% felt the teams produced a high-quality product. Participants consistently remarked that the Scrum team developed products much faster than their respective organisational teams. The accelerator was not a panacea: it was challenging for some participants to become familiar with the Scrum framework and some participants struggled with balancing participation in the Accelerator with their job duties. Conclusions Implementation of an Agile-based accelerator that joined disparate healthcare organisations into teams equipped to create knowledge products for home hospitals proved both efficient and effective. We demonstrate that implementing an organisational framework to accomplish work is a valuable approach that may be transformative for the sector.    

 View     
 Show abstract      

 Scrum Applications Outside Information Technology Industry: A Systematic Literature Review and Future Agenda    
   
 Chapter    
 Mar 2024 

 Fernando Gonzalez-Aleu 
  Valeria Carrizales-Ramirez 
  Mauricio Ramirez-Guajardo 
  Julio Cesar Iriarte-de Luna 
    
 Purpose - Scrum is a framework born in the software development industry and has recently been used in other organizations and departments. This research assesses how the scrum framework has been applied for continuous improvement and innovation in fields other than the Information Technology (IT) industry or department. Study Design/Methodology/Approach - A Systematic Review of the Literature methodology was developed using two databases (ProQuest and Scopus). From an initial set of 2,900 publications, 395 articles passed the exclusion criteria and were included in this research. Information such as scrum area or field application, authors’ name, authors’ affiliation, publication year, and journal name were collected and used to conduct several bibliometric analyses. Findings - Results indicated that scrum can be used for continuous improvement and innovation in fields other than the IT industry or department. Scrum is mainly applied to change a process completely to address a problem or to update a process to improve indicators in different industrial sectors, such as medical, automotive, educational, and construction. Originality - Scrum is a recent framework that offers considerable potential for future research, and this paper highlights the fields in which it can be specialized. This investigation proves that scrum is highly flexible and guarantees success and improvement in most cases.    

 View     
 Show abstract      

 Memorias del V Congreso internacional de investigación aplicada “Ecosistemas digitales” VIII Simposio internacional de ciencia innovación y tecnología (2023)    
   
 Article    
 Full-text available    
 Dec 2023 

 Servicio Nacional de Aprendizaje SENA 
  Andrés Giovanni Cañas-Rodríguez 
  Julian Andres Diaz-Gil 
  Juan David Baena-Carreño 
    
 El Servicio Nacional de Aprendizaje, como entidad pública de formación integral, se esfuerza por desarrollar habilidades en sus aprendices para proponer y ejecutar soluciones dirigidas a mejorar la productividad y competitividad, tanto a nivel empresarial como nacional. Con el objetivo de contribuir activamente a este propósito y generar conocimiento que alimente de manera efectiva los programas curriculares, los proyectos en Tecnoparques y el sector productivo, el Grupo de Investigación Suomaya presenta el V Congreso Internacional de Investigación Aplicada ‘Ecosistemas Digitales’ y el VIII Simposio Internacional de Ciencia, Innovación y Tecnología.    

 View     
 Show abstract      

 Show more     

 Guidelines for performing Systematic Literature Reviews in Software Engineering    
   
 Article    
 Full-text available    
 Jan 2007 

 Barbara Kitchenham 
  Stuart M. Charters 
    
 The objective of this report is to propose comprehensive guidelines for systematic literature reviews appropriate for software engineering researchers, including PhD students. A systematic literature review is a means of evaluating and interpreting all available research relevant to a particular research question, topic area, or phenomenon of interest. Systematic reviews aim to present a fair evaluation of a research topic by using a trustworthy, rigorous, and auditable methodology. The guidelines presented in this report were derived from three existing guidelines used by medical researchers, two books produced by researchers with social science backgrounds and discussions with researchers from other disciplines who are involved in evidence-based practice. The guidelines have been adapted to reflect the specific problems of software engineering research. The guidelines cover three phases of a systematic literature review: planning the review, conducting the review and reporting the review. They provide a relatively high level description. They do not consider the impact of the research questions on the review procedures, nor do they specify in detail the mechanisms needed to perform meta-analysis.    

 View     
 Show abstract      

 Agile Software Development Methods: Review and Analysis    
   
 Article    
 Full-text available    
 Jan 2002 

 Pekka Abrahamsson 
  Outi Salo 
  Jussi Ronkainen 
  Juhani Warsta 
    
 Agile - denoting "the quality of being agile; readiness for motion; nimbleness, activity, dexterity in motion" - software development methods are attempting to offer an answer to the eager business community asking for lighter weight along with faster and nimbler software development processes. This is especially the case with the rapidly growing and volatile Internet software industry as well as for the emerging mobile application environment. The new agile methods have evoked a substantial amount of literature and debates. However, academic research on the subject is still scarce, as most of existing publications are written by practitioners or consultants. The aim of this publication is to begin filling this gap by systematically reviewing the existing literature on agile software development methodologies. This publication has three purposes. First, it proposes a definition and a classification of agile software development approaches. Second, it analyses ten software development methods that can be characterized as being "agile" against the defined criteria. Third, it compares these methods and highlights their similarities and differences. Based on this analysis, future research needs are identified and discussed.    

 View     
 Show abstract      

 Kitchenham, B.: Guidelines for performing Systematic Literature Reviews in software engineering. EBSE Technical Report EBSE-2007-01    
   
 Book    
 Full-text available    
 Jan 2007 

 Barbara Kitchenham 

 View     

 The Scrum Papers: Nuts, Bolts, and Origins of an Agile Process    
   
 Article    
 Full-text available    

 Jeff Sutherland 
    
 This book is dedicated to the Godfathers of Scrum, Takeuchi and Nonaka [1], who gave Scrum its name and helped created a global transformation of software development. In 2021 Scrum is used in over 77% of Agile transformations worldwide. Many others have contributed to the creation of Scrum: • Jim Coplien and the ATT Bell Labs Pasteur Project for the paper on the most productive software development team ever documented – the Borland Quattro Pro Project [2]. The first Scrum team implemented the Scrum daily meeting after reading this paper. • Nobel Laureates Muhammad Yunus and the Grameen Bank for originating microenterprise development and the Accion International President’s Advisory Board, responsible for much of microenterprise development in the western hemisphere. As a member of the Accion advisory board, Jeff Sutherland noticed the strategy for bootstrapping the poor out of poverty is a model for freeing hundreds of thousands of software developers from developer abuse caused by poor management practices. • Alan Kay and his team at Xerox Parc [3] for inventing Smalltalk, the mouse, the graphical user interface, the personal computer, the Ethernet, and the laser printer. Listening to his insights on innovation inspired the first Scrum team to go from “good” to “great” [4]. • Professor Rodney Brooks for launching the startup iRobot in space leased from Jeff Sutherland. He taught us the subsumption architecture [5], how to create simple rules to produce highly intelligent performance from complex adaptive systems. • Christopher Langton of Los Alamos Labs and the Sante Fe Institute for coining the term “artificial life” and showing that increasing degrees of freedom up to the edge of chaotic behavior accelerated their evolution [6]. Scrum feels “chaotic” by intent, so as to accelerate software evolution. • The French object-database developers working near the MIT campus at Graphael (later Object Databases, then Matisse Software) for demonstrating first in Lisp and then in C++ the Agile patterns of pair programming, radical refactoring, continuous integration, common ownership of code, world class user interface design, and other tips and tricks which Kent Bent used to create eXtreme Programming a decade later. These were all incorporated into the first Scrum. • The Creative Initiative Foundation for their work with Silicon Valley volunteers to help make the world a better place, the underlying motivation driving the founders of Scrum. This connected the Co-Creators of Scrum with the early systems thinking of MIT Professor Peter Senge who later wrote “The Fifth Discipline.” • Capers Jones and his productivity experts at Software Productivity Research who analyzed and reanalyzed the output of early Scrum teams, as well as many of the software products built with Scrum during 1994-2000 [7]. These analyses allowed us to provide a money back guarantee that users would double productivity during the first month using tools created by the first Scrum. • The first Scrum team – John Scumniotales (Scrum Master), Don Roedner (Product Owner), Jeff McKenna (Senior Consultant), Joe Kinsella (object-relational mapping), Laurel Ginder (QA), and three Danish developers - Grzegorz Ciepiel, Bent Illum, and John Lindgreen. They endured repeated failure, depressing analysis of these failures in front of their technical peers from other companies, and transcendence of their missteps. They were the first Scrum team to achieve the hyperproductive state for which Scrum was designed and their product, Object Studio, is in 2021 still considered one of the top five development tools every created by industry leaders. Little did they know that Scrum would be their greatest contribution, although Object Studio still lives on as a successful product almost 30 years later. • PatientKeeper, Inc., the first company to fully implement an “All at Once” or Type C Scrum involving the entire company in Scrum practice. This innovation in process design has been documented by Mary and Tom Poppendieck in their book on Lean Software Development [8]. “I find that the vast majority of organizations are still trying to do too much stuff, and thus find themselves thrashing. The only organization I know of which has really solved this is Patient Keeper [9].” PatientKeeper was the first company to achieve a hyperproductive revenue state driven by Scrum in 2007. Revenue quadrupled from 13M to 50M in one year. • Jim Johnson, CEO of the Standish Group, continuously shared data on over 500,000 project sets, each with 8-25 projects over the years since Scrum began. These data continually showed that while Agile projects (77% Scrum) were more successful than traditional projects, 58% of Agile projects fail to deliver. The data in the 2018 Chaos Report – Decision Latency Theory: It’s All About the Interval [10] showed clearly that Scrum success was primarily driven by shortening decision time. • Last, but not least, many Scrum practitioners experience the quality without a name (QWAN) - a phrase used by Christopher Alexander in his book “The Timeless Way of Building” [11]. Alexander describes a certain quality that we seek, but which cannot be named. This may be the most important feature of Scrum and can only be spoken of as a set of core values - openness, focus, commitment, courage, and respect. It could be viewed as the “speed of trust” or one of the sources of “ba” often seen on Scrum teams. Ba is the Japanese term for the creative flow of innovation described by Takeuchi and Nonaka [12].    

 View     
 Show abstract      

 Incorporating social software into distributed agile development environments    
   
 Conference Paper    
 Full-text available    
 Oct 2008 

 Fabio Abbattista 
  Fabio Calefato 
  Domenico Gendarmi 
  Filippo Lanubile 
    
 The use of social software applications, such as wikis and blogs, has emerged as a practical and economical option to consider as global teams may use them to organize, track, publish their work, and then, share knowledge. We intend to push further the application of social software principles and technologies into collaborative development environments for agile and distributed projects. As a first step, in this paper we first present a survey of social software, as well as tools and environments for collaborative development. Then, we present some opportunities and challenges of incorporating social software aspects in agile distributed development.    

 View     
 Show abstract      

 Empirical studies of agile software development: A systematic review    
   
 Article    
 Full-text available    
 Aug 2008 
  INFORM SOFTWARE TECH 

 Tore Dybå 
  Torgeir Dingsøyr 
    
 Agile software development represents a major departure from traditional, plan-based approaches to software engineering. A systematic review of empirical studies of agile software development up to and including 2005 was conducted. The search strategy identified 1996 studies, of which 36 were identified as empirical studies. The studies were grouped into four themes: introduction and adoption, human and social factors, perceptions on agile methods, and comparative studies. The review investigates what is currently known about the benefits and limitations of, and the strength of evidence for, agile methods. Implications for research and practice are presented. The main implication for research is a need for more and better empirical studies of agile software development within a common research agenda. For the industrial readership, the review provides a map of findings, according to topic, that can be compared for relevance to their own settings and situations.    

 View     
 Show abstract      

 Adopting Agile in Distributed Development    
   
 Conference Paper    
 Aug 2008 

 Kalpana Sureshchandra 
  J. Jagadish Shrinivasavadhani 
    
 Key challenges of finding right skilled resources and the cost arbitrage factors have made distributed software development indispensable for quite some time now. The success stories of many offshore service providers particularly from India underlines the fact that this is working well in a "hands-free" mode, especially for projects following traditional development life cycles. The recent trend is an increase in the number of organizations adopting agile methodologies to tackle the challenges of requirements volatility and shorter time to market. However, the concept of a collocated team which is central to agile does not easily translate to distributed development. This paper captures our experience at Wipro in handling Distributed Agile projects. We discuss a validated model to make a smooth transition from a collocated to a distributed scenario in agile projects. We also share the lessons learnt and best practices that we have gained in implementing this model.    

 View     
 Show abstract      

 Global Software Teams: Collaborating Across Borders and Time Zones    
   
 Article    
 Jan 1999 

 Erran Carmel 
    
 An abstract is not available.    

 View     
 Show abstract      

 Case Study Research    
   
 Book    
 Jan 2003 

 Robert K. Yin 

 View     

 Outsourcing and Offshoring with Agility: A Case Study (Experience Paper).    
   
 Conference Paper    
 Jan 2004 

 Clif Kussmaul 
  Roger Jack 
  Barry Sponsler 

 View     

 Show more     

 Recommended publications  
   
 Discover more    

 Conference Paper    
 Full-text available    
   
 Agile global software development communication challenges: A systematic review   
 July 2015    
 Yehia Ibrahim Alzoubi 
  Asif Qumer Gill 
  Organizations have shown a significant interest in adopting human and communication-oriented agile practices for Global Software Development (GSD). Agile practices originated in the context of small and medium co-located project teams present a number of communication challenges when they are applied to the distributed GSD. There is a need to understand the underlying communication challenges of ... [Show full abstract]  agile GSD environment. This paper adopts a Systematic Literature Review (SLR) approach and reports communication challenges in the agile GSD context. A customized literature search and selection criteria was first developed and then applied to initially identify a set of 449 papers. Finally, 22 of 449 papers, relevant to this research, were selected for this study. These final 22 papers were reviewed and 7 major categories of communication challenges were identified in the context of agile GSD. The review results of this paper are expected to help researchers and practitioners to understand communication challenges of agile GSD and develop tools, techniques and strategies to deal with these challenges. This paper is limited to the number of reviewed studies from selected databases.    
 View full-text    

 Conference Paper    
 Full-text available    
   
 Risk Identification and Mitigation Processes for Using Scrum in Global Software Development: A Conce...   
 December 2009    
 Emam Meraj Hossain 
  Muhammad Ali Babar 
  Hye-young Paik 
  June M. Verner 
  There is growing interest in applying agile practices in Global Software Development (GSD) projects. But project stakeholder distribution in GSD creates a number of challenges that make it difficult to use some agile practices. Moreover, little is known about what the key challenges or risks are, and how GSD project mangers deal with these risks while using agile practices. We conduct a ... [Show full abstract]  Systematic Literature Review (SLR) following existing guidelines to identify primary papers that discuss the use of Scrum practices in GSD projects. We identify key challenges, due to global project distribution, that restrict the use of Scrum and explore the strategies used by project managers to deal with these challenges. Our findings are consolidated into a conceptual framework and we discuss various elements of this framework. This research is relevant to project managers who are seeking ways to use Scrum in their globally distributed projects.    
 View full-text    

 Conference Paper    
 Full-text available    
   
 Scrum Practices in Global Software Development: A Research Framework   
 June 2011  · Lecture Notes in Computer Science    
 Emam Meraj Hossain 
  Paul L. Bannerman 
  R. Jeffery 
  Project stakeholder distribution in Global Software Development (GSD) is characterized by temporal, geographical and socio-cultural distance, which creates challenges for communication, coordination and control. Practitioners constantly seek strategies, practices and tools to counter the challenges of GSD. There is increasing interest in using Scrum in GSD even though it originally assumed ... [Show full abstract]  collocation. However, empirically, little is known about how Scrum practices respond to the challenges of GSD. This paper develops a research framework from the literature as a basis for future research and practice. The framework maps current knowledge and views on how Scrum practices can be used to mitigate commonly recognized challenges in GSD. This research is useful as a reference guide for practitioners who are seeking to understand how Scrum practices can be used effectively in GSD, and for researchers as a research framework to validate and extend current knowledge.    
 View full-text    

 Conference Paper    
   
 Towards a Framework for Using Agile Approaches in Global Software Development   
 June 2009  · Lecture Notes in Business Information Processing    
 Emam Meraj Hossain 
  Muhammad Ali Babar 
  June M. Verner 
  As agile methods and Global Software Development (GSD) are become increasingly popular, GSD project managers have been exploring the viability of using agile approaches in their development environments. Despite the expected benefits of using an agile approach with a GSD project, the overall combining mechanisms of the two approaches are not clearly understood. To address this challenge, we ... [Show full abstract]  propose a conceptual framework, based on the research literature. This framework is expected to aid a project manager in deciding what agile strategies are effective for a particular GSD project, taking into account project context. We use an industry-based case study to explore the components of our conceptual framework. Our case study is planned and conducted according to specific published case study guidelines. We identify the agile practices and agile supporting practices used by a GSD project manager in our case study and conclude with future research directions.    
 Read more    

 Article    
   
 The Use of SCRUM in Global Software Development: An Exploratory Study   
 January 1970    
 Sandhyarani Dodda Rehanjavedansari 
  Read more    

 Discover the world's research   
 Join ResearchGate to find the people and research you need to help your work.   

 Join for free     

 ResearchGate iOS App    
   
 Get it from the App Store now.   

 Install     

 Keep up with your stats and more   

 Access scientific knowledge from anywhere   

 or   
   
 Discover by subject area     

 Recruit researchers 
  Join for free 
  Login      Email   Tip:  Most researchers use their institutional email address as their ResearchGate login         Password  Forgot password?      Keep me logged in   Log in    or    Continue with Google                 
 Welcome back! Please log in.        Email · Hint  Tip:  Most researchers use their institutional email address as their ResearchGate login          Password   Forgot password?       Keep me logged in    Log in    or    Continue with Google       No account? Sign up 

 Company   
 About us    
 News    
 Careers    

 Support   
 Help Center    

 Business solutions   
 Advertising    
 Recruiting    

 © 2008-2024 ResearchGate GmbH. All rights reserved.   
   
 Terms 
  Privacy 
  Copyright 
  Imprint 
  Consent preferences