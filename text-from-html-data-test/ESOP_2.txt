ETAPS 2023 | Call for Papers 
  Conferences 
  Programme 
  Proceedings 
  Satellite Events 
  Invited Speakers 
  Social Events 
  Registration 
  Attending 
  Organizers 
  About | About ETAPS 
  ETAPS Association 
  Steering Committee 
  Sustainability 
  ESOP 
  FASE 
  FoSSaCS 
  TACAS 
  Proceedings 
  ETAPS-F 
  FoPSS Schools 
  Policies 
  Disclaimer 
  Awards | Best Paper 
  Test of Time 
  Doctoral Dissertation 
  Test-of-Time Tool 
  Lifetime 
  Past Editions 
  ETAPS Blog 
  Future Editions | ETAPS 2026 
  Log in | Join us 
   
 Log in | Join us      

 About  ETAPS Conferences  
 ETAPS is a confederation of several conferences, each with its own Programme Committee and Steering Committee. ETAPS is the most important and visible annual European event related to software sciences. Altogether, more than 500 researchers participate in this event every year. The confederated conferences cover various aspects of software systems, ranging from theoretical foundations to programming language developments, compiler advancements, analysis tools, formal approaches to software engineering, and security. In 2023, ETAPS consists of four conferences: ESOP, FASE, FoSSaCS, and TACAS. Further, the SPIN Symposion is co-located with ETAPS. Details are available below.  

 ESOP – 32nd European Symposium on Programming   
 more  less     
   
 General information  
 ESOP is an annual conference devoted to fundamental issues in the specification, design, analysis, and implementation of programming languages and systems. ESOP seeks contributions on all aspects of programming language research including but not limited to, the following areas:  
 programming paradigms and styles: functional programming; object-oriented programming; probabilistic programming; logic programming; constraint programming; extensible programming languages; programming languages for systems code; novel programming paradigms; 
  methods and tools to specify and reason about programs and languages: programming techniques; meta-programming; domain-specific languages; proof assistants; type systems; dependent types; program logics, static and dynamic program analysis; language-based security; model checking; testing; 
  programming language foundations: formal semantics; type theory; logical foundations; category theory; automata; effects; monads and comonads; recursion and corecursion; continuations and effect handlers; program verification; memory models; abstract interpretation; 
  methods and tools for implementation: compilers; program transformations; rewriting systems; partial evaluation; virtual machines; refactoring; intermediate languages; run-time environments; garbage collection and memory management; tracing; profiling; build systems; program synthesis; 
  concurrency and distribution: process algebras; concurrency theory; session types; parallel programming; service-oriented computing; distributed and mobile computing; actor-based languages; verification and testing of concurrent and distributed systems; 
  applications and emerging topics: programming languages and PL methods in education, security, privacy, database systems, computational biology, signal processing, graphics, human-computer interaction, computer-aided design artificial intelligence and machine learning; case studies in program analysis and verification. 
  Contributions bridging the gap between theory and practice are particularly welcome.  
 Important dates, paper submission and review  
 See the ETAPS 2023 joint call for papers  .  
 Submit your paper via the ESOP 2023 author interface  of EasyChair.  
 The review process of ESOP 2023 is double-blind  , with a rebuttal phase  . In your submission, omit your names and institutions; refer to your prior work in the third person, just as you refer to prior work by others; do not include acknowledgements that might identify you.  
 ESOP 2023 has just one paper category: regular research papers  of maximal 25 pages  using llncs.cls ( excluding bibliography  ).  
 Additional material intended for reviewers but not for publication in the final version - for example, details of proofs - may be placed in a clearly marked appendix that is not included in the page limit. Reviewers are at liberty to ignore appendices and papers must be understandable without them.  
 For the important dates, please check the important dates  .  
 Artifact submission and evaluation  
 ESOP 2023 and FoSSaCS 2023 will have a joint post-paper-acceptance voluntary artifact evaluation. Authors will be welcome to submit artifacts for evaluation after paper notification. The outcome will not alter the paper acceptance decision.  
 The details of the Artifact Evaluation are available here  .  
 Programme chair  
 Thomas Wies | (New York University) 
  Programme committee  
 Parosh Abdulla | (Uppsala University) 
  Elvira Albert | (University of Madrid) 
  Timos Antonopoulos | (Yale University) 
  Suguman Bansal | (Rice University) 
  Josh Berdine | (Facebook) 
  Annette Bieniusa | (Technical University of Kaiserslautern) 
  Sandrine Blazy | (University of Rennes 1) 
  Johannes Borgström | (Uppsala University) 
  Georgiana Caltais | (University of Twente) 
  Ankush Das | (AWS) 
  Cezara Drăgoi | (INRIA, ENS) 
  Michael Emmi | (AWS) 
  Simon Gay | (University of Glasgow) 
  Silvia Ghilezan | (University of Novi Sad) 
  Jan Hoffman | (CMU) 
  Shachar Itzhaky | (Technion) 
  Benjamin Kaminski | (Saarland University) 
  Robbert Krebbers | (Radboud University Nijmegen) 
  Viktor Kuncak | (EPFL) 
  Roland Meyer | (TU Braunschweig) 
  David Monniaux | (VERIMAG) 
  Jorge Pérez | (University of Groningen) 
  Andrei Popescu | (The University of Sheffield) 
  Jonathan Protzenko | (Microsoft Research) 
  Graeme Smith | (University of Queensland) 
  Ana Sokolova | (University of Salzburg) 
  Alexander Summers | (UBC) 
  Tachio Terauchi | (Waseda University) 
  Caterina Urban | (INRIA) 
  Niki Vazou | (IMDEA Software Institute) 

 FASE – 26th International Conference on Fundamental Approaches to Software Engineering   
 more  less     
   
 General information  
 FASE is concerned with the foundations on which software engineering is built. Submissions should make novel contributions to making software engineering a more mature and soundly-based discipline. Contributions should be supported by appropriate arguments and validation. Contributions that combine the development of conceptual and methodological advances with their formal foundations and tool support are particularly encouraged. We welcome contributions to all such fundamental approaches, including:  
 software engineering as an engineering discipline, including its interaction with and impact on society and economics; 
  requirements engineering: capture, consistency, and change management of software requirements; 
  software architectures: description and analysis of the architecture, e.g., SOA, microservice architectures, model-driven architectures, or software product lines; 
  specification, design, and implementation of particular classes of systems: (self-)adaptive, autonomous, collaborative, intelligent, embedded, distributed, mobile, pervasive, cyber-physical, data-centric, or service-oriented applications; 
  applications of AI to software engineering, including search-based and learning-based approaches; 
  software engineering foundations for AI-based systems; 
  software quality: (static or run-time) validation and verification of functional and non-functional software properties (including security and data privacy) using techniques such as theorem proving, model checking, testing, analysis, simulation, refinement methods, metrics or visualization techniques; 
  model-driven engineering: model transformation, meta-modelling, design and semantics of domain-specific languages, consistency and synchronization of models, generative architectures; 
  software processes: support for iterative, agile, and open source development; 
  software evolution: refactoring, reverse and re-engineering, configuration management and architectural change. 
  Keynote speaker  
 We are pleased to announce Sven Apel (Saarland University, Germany) as keynote speaker.  
 Important dates, paper submission and review  
 The ETAPS 2023 joint call for papers is available here  .  
 The review process of FASE 2023 is double-blind, without a rebuttal phase  . In your submission, omit your names and institutions; refer to your prior work in the third person, just as you refer to prior work by others; do not include acknowledgements that might identify you.  
 Paper categories  
 FASE 2023 solicits four types of submissions: research papers, empirical evaluation papers, new ideas and emerging results (NIER) papers and tool demonstration papers. Submissions must follow the formatting guidelines of Springer’s LNCS (use the llncs.cls class) and be submitted electronically in pdf through the Easychair author interface  .  
 Research papers  clearly identify and justify a principled advance to the fundamentals of software engineering. Research papers should clearly articulate their contribution, and provide sufficient evidence for the soundness and applicability of the proposed approach. Research papers are expected to be 15-18 pp (excluding bibliography). Additional material intended for reviewers but not for publication in the final version may be included in a clearly marked appendix.  
 Empirical evaluation papers  evaluate existing software challenges or critically validate current proposed solutions with scientific means, i.e., by empirical studies, controlled experiments, rigorous case studies, simulations, etc. Scientific reflection on problems and practices in the software industry also falls into this category. Empirical evaluation papers can be 15-18 pp (excluding bibliography). Additional material intended for reviewers but not for publication in the final version may be included in a clearly marked appendix.  
 New Ideas and Emerging Results (NIER) papers  seek to disrupt the status quo with forward-looking, thought-provoking, innovative research on the foundations of software engineering, as well as lessons learned from the past. Our aim is to accelerate the exposure of the ETAPS community to early yet potentially ground-breaking research results, and to techniques and perspectives that challenge the status quo. To broadly capture this goal, the NIER track at FASE 2023 will publish the following types of papers:  
 Innovative or groundbreaking new ideas | at early stages of research, supported by promising initial results and intuitions; 
  Visions of new directions | : synergies with other fields or foundational approaches to problems that currently lack foundations in software engineering; 
  Lessons from the past | : thoughtful observations on past or current research directions that may be somehow misguided or that let us see current research directions from a new perspective. 
  NIER papers are expected to be 6-8 pp (excluding bibliography). NIER papers will be assessed primarily on their level of originality, relevance, and potential for impact on the field in terms of promoting innovative thinking. Hence, inadequacies in the state-of-the-art and the pertinence, correctness, and impact of the idea/vision/lesson must be described clearly. A full evaluation is not required for FASE NIER papers, but preliminary evaluation results may help the reviewers understand the scope of the work better.  
 Tool demonstration papers  present a new tool, a new tool component, or novel extensions to an existing tool. They should provide a short description of the theoretical foundations and emphasize the design and implementation concerns, including software architecture. The paper should give a clear account of the tool’s functionality and discuss the tool’s practical capabilities with reference to the type and size of problems it can handle. Authors are strongly encouraged to make their tools publicly available, preferably on the web. Experimental evaluation is not required, however, a motivation as to why the tool is interesting and significant should be provided. Tool demonstration papers can have a maximum of 6 pp (excluding bibliography). They should have an appendix  of up to 6 additional pages with details on the actual demonstration.  
 Artifact submission and evaluation  
 After notification, authors of accepted papers may optionally submit an artifact for evaluation  by the artifact evaluation committee (AEC).  
 During artifact evaluation the AEC assesses the quality of submitted artifacts while being constructive and helping authors to improve their submitted artifacts. The AEC evaluates artifacts independently of the paper according to the following criteria:  
 consistent with the paper 
  as complete as possible 
  well-documented 
  easy to (re)use 
  publicly and persistently available. 
  The result of the artifact evaluation will not alter the already made paper acceptance decision. However, papers whose artifacts are successfully evaluated will be awarded one or two artifact badges. In particular, FASE awards the Artifacts Available and Artifacts Evaluated badges from the EAPLS badging scheme  .  
 Please check the detailed artifact submission and evaluation guidelines  .  
 Special issue  
 Selected regular papers as well as software artefacts will be invited by June 2023 to submit to a special issue of FASE 23 in Science of Computer Programming  .  
 Competition on Software Testing (Test-Comp)  
 FASE 2023 hosts the 5th edition of the Competition on Software Testing (Test-Comp 2023)  .  
 Programme chairs  
 Leen Lambers | (BTU Cottbus-Senftenberg) 
  Sebastián Uchitel | (University of Buenos Aires) 
  Programme committee  
 Erika Abraham | (RWTH Aachen) 
  Rui Abreu | (University of Porto) 
  Domenico Bianculli | (University of Luxembourg) 
  Einar Broch Johnsen | (University of Oslo) 
  Ana Cavalcanti | (University of York) 
  Sigrid Eldh | (Mälardalen University) 
  Carlo Furia | (USI Università della Svizzera italiana) 
  Alessandra Gorla | (IMDEA) 
  Stijn de Gouw | (Open Universiteit) 
  Axel Legay | (Ecole Polytechnique de Louvain ) 
  Antinisca di Marco | (University of l’Aquila) 
  Lina Marsso | (University of Toronto) 
  Marjan Mernik | (University of Maribor) 
  Fabrizio Pastore | (University of Luxembourg) 
  Leila Ribeiro | (Universidade Federal do Rio Grande do Sul) 
  Gwen Salaun | (Université Grenoble Alpes) 
  Paola Spoletini | (Kennesaw State Univervisty) 
  Daniel Strüber | (Chalmers University of Technology, University of Gothenburg) 
  Silvia Lizeth Tapia Tarifa | (University of Oslo) 
  Rachel Tzoref | (IBM Research) 
  Dániel Varró | (McGill University) 
  Anna Maria Vollmer | (Fraunhofer ) 
  Manuel Wimmer | (JKU Linz) 
  Artifact evaluation committee chairs  
 Marie-Christine Jakobs | (Technische Universität Darmstadt) 
  Carlos Diego Nascimento Damasceno | (Radboud University) 
  Competition chair  
 Dirk Beyer | (Ludwig-Maximilians-Universität München, Germany) 
  Steering committee chair  
 Andrzej Wasowski | (IT University of Copenhagen) 
  Steering committee  
 Einar Broch Johnsen | (University of Oslo) 
  Reiner Hähnle | (Technische Universität Darmstadt) 
  Reiko Heckel | (University of Leicester) 
  Leen Lambers | (BTU Cottbus-Senftenberg) 
  Tiziana Margaria | (University of Limerick) 
  Perdita Stevens | (University of Edinburgh) 
  Gabriele Taentzer | (Philipps-Universität Marburg) 
  Sebastián Uchitel | (University of Buenos Aires) 
  Heike Wehrheim | (Carl von Ossietzky Universität Oldenburg) 
  Manuel Wimmer | (JKU Linz) 

 FoSSaCS – 26th International Conference on Foundations of Software Science and Computation Structures   
 more  less     
   
 General information  
 FoSSaCS seeks original papers on foundational research with a clear significance for software science. The conference invites submissions on theories and methods to support the analysis, integration, synthesis, transformation, and verification of programs and software systems. The specific topics covered by the conference include, but are not limited to, the following:  
 categorical models and logics; 
  language theory, automata, and games; 
  modal, spatial, and temporal logics; 
  type theory and proof theory; 
  concurrency theory and process calculi; 
  rewriting theory; 
  semantics of programming languages; 
  program analysis, correctness, transformation, and verification; 
  logics of programming; 
  software specification and refinement; 
  models of concurrent, reactive, stochastic, distributed, hybrid, and mobile systems; 
  emerging models of computation; 
  logical aspects of computational complexity; 
  models of software security; 
  logical foundations of data bases 
  Important dates, paper submission and review  
 For the important dates, please check the joint call for papers  .  
 Artifact submission and evaluation  
 ESOP 2023 and FoSSaCS 2023 will have a joint post-paper-acceptance voluntary artifact evaluation. Authors will be welcome to submit artifacts for evaluation after paper notification. The outcome will not alter the paper acceptance decision.  
 The details of the Artifact Evaluation are available here  .  
 Programme chairs  
 Pawel Sobocinski (Tallinn University of Technology) 
  Orna Kupferman (Hebrew University of Jerusalem) 
  Programme committee  
 Ugo Dal Lago (Università di Bologna and INRIA Sophia Antipolis) 
  Alwen Tiu (The Australian National University) 
  Marco Carbone (IT University of Copenhagen) 
  Shahar Maoz (Tel Aviv University) 
  Marco Gaboardi (Boston University) 
  Patrick Baillot (CNRS and Lille) 
  Frank Valencia (LIX, Ecole Polytechnique) 
  Kuldeep S. Meel (National University of Singapore) 
  Emmanuel Filiot (Université Libre de Bruxelles) 
  Joel Ouaknine (Max Planck Institute for Software Systems (MPI-SWS)) 
  Filip Murlak (University of Warsaw) 
  Alexandra Silva (University College London) 
  Lars Birkedal (Aarhus University) 
  Stefan Milius (FAU Erlangen) 
  Koko Muroya (RIMS, Kyoto University) 
  Barbara König (University of Duisburg-Essen) 
  Thomas Colcombet (Cnrs) 
  Bartek Klin (University of Warsaw) 
  Bart Jacobs (Radboud University) 
  Assia Mahboubi (INRIA) 
  Sam Staton (University of Oxford) 
  Parosh Aziz Abdulla (Uppsala University) 
  Daniele Varacca 
  Giovanni Bacci (Dept. of Computer Science, Aalborg University, Denmark) 
  Véronique Bruyère (University of Mons) 
  Nathalie Bertrand (INRIA) 

 TACAS – 29th International Conference on Tools and Algorithms for the Construction and Analysis of Systems   
 more  less     
   
 General information  
 TACAS is a forum for researchers, developers and users interested in rigorously based tools and algorithms for the construction and analysis of systems. The conference aims to bridge the gaps between different communities with this common interest and to support them in their quest to improve the utility, reliability, flexibility and efficiency of tools and algorithms for building systems.  
 Theoretical papers with clear relevance for tool construction and analysis as well as tool descriptions and case studies with a conceptual message are all encouraged. The topics covered by the conference include, but are not limited to:  
 specification and verification techniques; 
  software and hardware verification; 
  analytical techniques for real-time, hybrid, or stochastic systems; 
  analytical techniques for safety, security, or dependability; 
  SAT and SMT solving; 
  theorem proving; 
  model checking; 
  static and dynamic program analysis; 
  testing; 
  abstraction techniques for modeling and verification; 
  compositional and refinement-based methodologies; 
  system construction and transformation techniques; 
  machine-learning techniques for synthesis and verification; 
  tool environments and tool architectures; 
  applications and case studies. 
  Important dates, paper submission and review  
 The details about paper submission and important dates can be found in the ETAPS joint Call for Papers  .  
 For the important dates, please check the important dates  .  
 Competition on software verification  
 TACAS 2023 will host the next, 12th instance of the Competition on Software Verification, SV-COMP 2023  .  
 Programme chairs  
 Natasha Sharygina (University of Lugano, Switzerland) 
  Sriram Sankaranarayanan (University of Colorado, Boulder, CO) 
  Programme committee  
 Christel Baier (TU Dresden) 
  Haniel Barbosa (Universidade Federal de Minas Gerais) 
  Ezio Bartocci (TU Wien) 
  Dirk Beyer (LMU Munich, Germany) 
  Armin Biere (Freiburg) 
  Nikolaj Bjørner (Microsoft) 
  Roderick Bloem (Graz University of Technology) 
  Ahmed Bouajjani (IRIF, University Paris Diderot) 
  Hana Chockler (King’s College London) 
  Alessandro Cimatti (Fondazione Bruno Kessler) 
  Rance Cleaveland (University of Maryland) 
  Javier Esparza (Technical University of Munich) 
  Chuchu Fan (MIT) 
  Bernd Finkbeiner (CISPA Helmholtz Center for Information Security) 
  Martin Fränzle (Carl von Ossietzky Universität Oldenburg) 
  Khalil Ghorbal (INRIA) 
  Laure Gonnord (Grenoble-INP / LCIS) 
  Orna Grumberg (Technion - Israel Institute of Technology) 
  Kim Guldstrand Larsen (Computer Science, Aalborg University) 
  Arie Gurfinkel (University of Waterloo) 
  Ranjit Jhala (University of California San Diego) 
  Bettina Könighofer (technical university of graz) 
  Laura Kovacs (Vienna University of Technology) 
  Alexander Kulikov (St. Petersburg Department of Steklov Institute of Mathematics) 
  Wenchao Li (Boston University) 
  Peter Müller (ETH Zurich) 
  Kedar Namjoshi (Nokia Bell Labs) 
  Aina Niemetz (Stanford University) 
  Corina Pasareanu (CMU, NASA, KBR) 
  Nir Piterman (University of Gothenburg) 
  Philipp Ruemmer (University of Regensburg) 
  Krishna Shankara Narayanan (IIT Bombay) 
  Cesar Sanchez (IMDEA Software Institute) 
  Sharon Shoham (Tel Aviv University) 
  Fabio Somenzi (University of Colorado, Boulder, CO) 
  Cesare Tinelli (The University of Iowa) 
  Stavros Tripakis (Northeastern University) 
  Frits Vaandrager (Radboud University) 
  Yakir Vizel (The Technion) 
  Tomas Vojnar (Brno University of Technology) 
  Naijun Zhan (Institute of Software, Chinese Academy of Sciences) 
  Lijun Zhang (Institute of Software, Chinese Academy of Sciences) 
  Florian Zuleger (Vienna University of Technology) 
  Tools and Artifact Evaluation Committee Chairs  
 Grigory Fedyukovich (Florida State University) 
  Sergio Mover (Ecole Polytechnique) 
  Competition chair  
 Dirk Beyer | (Ludwig-Maximilians-Universität München, Germany) 

 SPIN – 29th International Symposium on Model Checking of Software   
 more  less     
   
 Co-located with ETAPS 2023 is the 29th International SPIN Symposium on Model Checking of Software  (SPIN 2023).  
 SPIN 2023 will be held on 26 and 27 April 2023. SPIN 2023 is the latest in a successful series of workshops and symposia for practitioners and researchers interested in automated tool-based techniques to analyze and model software for the purpose of verification and validation. We invite submissions presenting theoretical results, novel algorithms, tool development, and empirical evaluation.  
 The deadline for submission of scientific papers is 16 January 2023.  
 The conference website is located here  .  

   ETAPS International Joint Conferences On Theory & Practice Of Software  
   
 ETAPS Association     
   
 Internal     
   
 Responsible for these web pages:  
   
  Jan Kofroň  
  Faculty of Mathematics and Physics  
  Charles University, Czech Republic  
  E-mail: firstname.lastname [at] d3s.mff.cuni.cz  
  Phone: +420 951 554 285  

 ETAPS Policies  |  Disclaimer    
 © 2022–2024 ETAPS Association. All rights reserved.