ICFP 2023   Mon 4 - Sat 9 September 2023 Seattle, Washington, United States    
 Toggle navigation        
  Program | ICFP Program 
  Your Program 
   Mon 4 Sep 
  Tue 5 Sep 
  Wed 6 Sep 
  Thu 7 Sep 
  Fri 8 Sep 
  Sat 9 Sep 
  Tracks | ICFP 2023 
  Artifact Evaluation 
  ICFP Keynotes 
  miniKanren 
  Co-hosted Symposia 
  Haskell 
  Organization | ICFP 2023 Committees 
  Organizing Committee 
  Steering Committee 
  miniKanren | Program Committee 
  Co-hosted Symposia 
  Haskell | Program Committee 
  Search 
  Series | Series 
  ICFP 2024 
  ICFP 2023 
  ICFP 2022 
  Sign up 
  ICFP 2023  ( series  ) /  Haskell 2023 ( series  ) /  Haskell 2023  
 About 
  Call for Papers 
 The Haskell Symposium presents original research on Haskell, discusses practical experience and future development of the language, and promotes other forms of declarative programming.  
 Topics of interest include:  
 Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo; 
  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation; 
  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces; 
  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell; 
  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools; 
  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth; 
  Functional Pearls, being elegant and instructive programming examples; 
  Experience Reports, to document general practice and experience in education, industry, or other contexts; 
  Tutorials, to document how to use a particular language feature, programming technique, tool or library within the Haskell ecosystem 
  System Demonstrations, based on running software rather than novel research results. 
  Keynotes  
   Haskell for choice-based learning  
 Ningning Xie   
   The GMT offsets shown reflect the offsets at the moment of the conference  .     
 Time Band   
 ×    You're viewing the program in a time zone which is different from your device's time zone change time zone     
 Fri 8 Sep   
 Displayed time zone: Pacific Time (US & Canada)  change      
 5m    
 Day opening | Welcome   Haskell   
 Niki Vazou  IMDEA Software Institute 
 Keynote | The Evolution of Effects   Haskell   
 Nicolas Wu  Imperial College London    
  DOI 
 30m    
 Talk | Effect Handlers for Programmable Inference   Haskell   
 Minh Nguyen  University of Bristol  , Roly Perera  Alan Turing Institute  , Meng Wang  University of Bristol  , Steven Ramsay  University of Bristol    
  DOI 
 30m    
 Talk | The Essence of Reactivity   Haskell   
 Ivan Perez  NASA Ames Research Center  , Frank Dedden  System F Computing    
  DOI 
 30m    
 Talk | This Is Driving Me Loopy: Efficient Loops in Arrowized Functional Reactive Programs   Haskell   
 Finnbar Keating  University of Warwick  , Michael Gale  GitHub    
  DOI 
 30m    
 Talk | An Exceptional Actor System (Functional Pearl)   Haskell   
 Patrick Redmond  University of California at Santa Cruz  , Lindsey Kuper  University of California, Santa Cruz    
  DOI   Pre-print 
 30m    
 Talk | HasTEE: Programming Trusted Execution Environments with Haskell   Haskell   
 Abhiroop Sarkar  Chalmers University of Technology  , Robert Krook  Chalmers University of Technology, Sweden  , Alejandro Russo  Chalmers University of Technology, Sweden  , Koen Claessen  Chalmers University of Technology    
  DOI   Pre-print 
 30m    
 Talk | Haskell Library for Safer Virtual Machine Introspection (Experience Report)   Haskell   
 Takato Otsuka  The University of Electro-Communications  , Hideya Iwasaki  Meiji University    
  DOI 
 30m    
 Demonstration | A Haskell Auto-Parallelizer for Distributed Computing   Haskell   
 Yuxi Long  Duke University  , Shiyou Wu  Duke University  , Yingjie Xu  Duke University 
 30m    
 Demonstration | Verifying Haskell's Rewrite Rules based on Polymorphic Rewriting Theory   Haskell   
 Makoto Hamana  Gunma University, Japan 
 30m    
 Meeting | Lightning Talks I   Haskell 
 Sat 9 Sep   
 Displayed time zone: Pacific Time (US & Canada)  change      
 Keynote | Haskell for choice-based learning   Haskell   
 Ningning Xie  University of Toronto    
  DOI 
 30m    
 Talk | falsify: Internal Shrinking Reimagined for Haskell   Haskell   
 Edsko de Vries  Well-Typed LLP    
  DOI 
 30m    
 Talk | Don’t Go Down the Rabbit Hole: Reprioritizing Enumeration for Property-Based Testing   Haskell   
 Segev Elazar Mittelman  University of Maryland, College Park  , Aviel Resnick  University of Pennsylvania  , Ivan Perez  NASA Ames Research Center  , Alwyn Goodloe  NASA Langley Research Center  , Leonidas Lampropoulos  University of Maryland, College Park    
  DOI 
 30m    
 Meeting | Lightning Talks II   Haskell 
 Meeting | Haskell Summer of Code Presentations   Haskell   
 Aaron Allen 
 5m    
 Day closing | PC Chair Report   Haskell   
 Niki Vazou  IMDEA Software Institute 
 Title 
 An Exceptional Actor System (Functional Pearl)  Haskell   
 Patrick Redmond  , Lindsey Kuper    
  DOI   Pre-print 
 Don’t Go Down the Rabbit Hole: Reprioritizing Enumeration for Property-Based Testing  Haskell   
 Segev Elazar Mittelman  , Aviel Resnick  , Ivan Perez  , Alwyn Goodloe  , Leonidas Lampropoulos    
  DOI 
 Effect Handlers for Programmable Inference  Haskell   
 Minh Nguyen  , Roly Perera  , Meng Wang  , Steven Ramsay    
  DOI 
 falsify: Internal Shrinking Reimagined for Haskell  Haskell   
 Edsko de Vries    
  DOI 
 Haskell Library for Safer Virtual Machine Introspection (Experience Report)  Haskell   
 Takato Otsuka  , Hideya Iwasaki    
  DOI 
 HasTEE: Programming Trusted Execution Environments with Haskell  Haskell   
 Abhiroop Sarkar  , Robert Krook  , Alejandro Russo  , Koen Claessen    
  DOI   Pre-print 
 The Essence of Reactivity  Haskell   
 Ivan Perez  , Frank Dedden    
  DOI 
 This Is Driving Me Loopy: Efficient Loops in Arrowized Functional Reactive Programs  Haskell   
 Finnbar Keating  , Michael Gale    
  DOI 
 Call for Papers  
 The ACM SIGPLAN Haskell Symposium 2023 will be co-located with the 2023 International Conference on Functional Programming (ICFP).  
 The Haskell Symposium presents original research on Haskell, discusses practical experience and future development of the language, and promotes other forms of declarative programming.  
 Topics of interest include:  
 Language design, with a focus on possible extensions and modifications of Haskell as well as critical discussions of the status quo; 
  Theory, such as formal semantics of the present language or future extensions, type systems, effects, metatheory, and foundations for program analysis and transformation; 
  Implementations, including program analysis and transformation, static and dynamic compilation for sequential, parallel, and distributed architectures, memory management, as well as foreign function and component interfaces; 
  Libraries, that demonstrate new ideas or techniques for functional programming in Haskell; 
  Tools, such as profilers, tracers, debuggers, preprocessors, and testing tools; 
  Applications, to scientific and symbolic computing, databases, multimedia, telecommunication, the web, and so forth; 
  Functional Pearls, being elegant and instructive programming examples; 
  Experience Reports, to document general practice and experience in education, industry, or other contexts; 
  Tutorials, to document how to use a particular language feature, programming technique, tool or library within the Haskell ecosystem; 
  System Demonstrations, based on running software rather than novel research results. 
  Regular papers should explain their research contributions in both general and technical terms, identifying what has been accomplished, explaining why it is significant, and relating it to previous work, and to other languages where appropriate.  
 Experience reports and functional pearls need not necessarily report original academic research results. For example, they may instead report reusable programming idioms, elegant ways to approach a problem, or practical experience that will be useful to other users, implementers, or researchers. The key criterion for such a paper is that it makes a contribution from which other Haskellers can benefit. It is not enough simply to describe a standard solution to a standard programming problem, or report on experience where you used Haskell in the standard way and achieved the result you were expecting.  
 Like an experience report and a functional pearl, tutorials should make a contribution from which other Haskellers can benefit. What distinguishes a tutorial is that its focus is on explaining an aspect of the Haskell language and/or ecosystem in a way that is generally useful to a Haskell audience. Tutorials for many such topics can be found online; the distinction here is that by writing it up for formal review it will be vetted by experts and formally published.  
 System demonstrations should summarize the system capabilities that would be demonstrated. The proposals will be judged on whether the ensuing session is likely to be important and interesting to the Haskell community at large, whether on grounds academic or industrial, theoretical or practical, technical, social or artistic. Please contact the program chair with any questions about the relevance of a proposal.  
 If your contribution is not a research paper, please mark the title of your experience report, functional pearl, tutorial or system demonstration as such, by supplying a subtitle (Experience Report, Functional Pearl, Tutorial Paper, System Demonstration).  
 Submission Details   
 Formatting   
 Submitted papers should be in portable document format (PDF), formatted using the ACM SIGPLAN style guidelines. Authors should use the acmart  format, with the sigplan  sub-format for ACM proceedings. For details, see:  
 It is recommended to use the review  option when submitting a paper; this option enables line numbers for easy reference in reviews.  
 Functional pearls, experience reports, tutorials and demo proposals should be labelled clearly as such.  
 Lightweight Double-blind Reviewing   
 Haskell Symposium 2023 will use a lightweight double-blind reviewing process. To facilitate this, submitted papers must adhere to two rules:  
 Author names and institutions must be omitted, and 
  References to authors’ own related work should be in the third person (e.g., not “We build on our previous work” but rather "We build on the work of "). 
  The purpose of this process is to help the reviewers come to an initial judgment about the paper without bias, not to make it impossible for them to discover the authors if they were to try. Nothing should be done in the name of anonymity that weakens the submission or makes the job of reviewing the paper more difficult (e.g., important background references should not be omitted or anonymized). In addition, authors should feel free to disseminate their ideas or draft versions of their paper as they normally would. For instance, authors may post drafts of their papers on the web or give talks on their research ideas.  
 A reviewer will learn the identity of the author(s) of a paper after a review is submitted.  
 Page Limits   
 The length of submissions should not exceed the following limits:  
 Regular paper: 12 pages 
  Functional pearl: 12 pages 
  Tutorial: 12 pages 
  Experience report: 6 pages 
  Demo proposal: 2 pages 
  There is no requirement that all pages are used. For example, a functional pearl may be much shorter than 12 pages. In all cases, the list of references is not counted against these page limits.  
 Deadlines   
 Paper submission: 1 June 2023 (Thu) 
  Notification: 4 July 2023 (Tue) 
  Camera-ready Deadline: 18 July (Tue) 
  Deadlines are anywhere on Earth.  
 Submission   
 The paper submission deadline and length limitations are firm. There will be no extensions, and papers violating the length limitations will be summarily rejected.  
 Papers should be submitted through HotCRP at:  
 Improved versions of a paper may be submitted at any point before the submission deadline using the same web interface.  
 Supplementary material: Authors have the option to attach supplementary material to a submission, on the understanding that reviewers may choose not to look at it. This supplementary material should not be submitted as part of the main document; instead, it should be uploaded as a separate PDF document or tarball. Supplementary material should be uploaded at submission time, not by providing a URL in the paper that points to an external repository. Authors can distinguish between anonymized and non-anonymized supplementary material. Anonymized supplementary material will be visible to reviewers immediately; non-anonymized supplementary material will be revealed to reviewers only after they have submitted their review of the paper and learned the identity of the author(s).  
 Resubmitted Papers: authors who submit a revised version of a paper that has previously been rejected by another conference have the option to attach an annotated copy of the reviews of their previous submission(s), explaining how they have addressed these previous reviews in the present submission. If a reviewer identifies him/herself as a reviewer of this previous submission and wishes to see how his/her comments have been addressed, the conference chair will communicate to this reviewer the annotated copy of his/her previous review. Otherwise, no reviewer will read the annotated copies of the previous reviews.  
 Proceedings   
 Accepted papers will be included in the ACM Digital Library. Their authors will be required to choose one of the following options:  
 Author retains copyright of the work and grants ACM a non-exclusive permission-to-publish license (and, optionally, licenses the work with a Creative Commons license); 
  Author retains copyright of the work and grants ACM an exclusive permission-to-publish license; 
  Author transfers copyright of the work to ACM. 
 Accepted proposals for system demonstrations will be posted on the symposium website but not formally published in the proceedings.  
 Publication date: The official publication date of accepted papers is the date the proceedings are made available in the ACM Digital Library. This date may be up to two weeks prior to the first day of the conference. The official publication date affects the deadline for any patent filings related to published work.  
 AUTHORS TAKE NOTE:  The official publication date is the date the proceedings are made available in the ACM Digital Library. This date may be up to two weeks prior to the first day of your conference. The official publication date affects the deadline for any patent filings related to published work.  
 Artifacts   
 Authors of accepted papers are encouraged to make auxiliary material (artifacts like source code, test data, etc.) available with their paper. They can opt to have these artifacts published alongside their paper in the ACM Digital Library (copyright of artifacts remains with the authors).  
 If you have questions, please contact the chairs at: niki.vazou@imdea.org  and t.l.mcdonell@uu.nl  .  
 Questions? Use the Haskell contact form  .    
 Important Dates   AoE (UTC-12h)     
 Fri 8 - Sat 9 Sep 2023  
  Symposium 
 Tue 18 Jul 2023  
  Camera-ready Deadline 
  Acceptance notification 
  Paper submission deadline 
 Submission Link   
 United Kingdom 
  David Thrane Christiansen    
 The Haskell Foundation   
 Denmark 
  Edsko de Vries    
  ICFP 2023   
  contact form    
  Volunteers    
 Workshops  
 DeclMed 2023   
  Erlang 2023   
  FARM 2023   
  FHPNC 2023   
  FUNARCH 2023   
  HIW 2023   
  HOPE 2023   
  Higher-order, Typed, Inferred, Strict: ML Family Workshop 2023   
  OCaml 2023   
  PLMW @ ICFP 2023   
  Scheme 2023   
  TyDe 2023   
  miniKanren 2023   
  Co-hosted Symposia  
 Haskell 2023    
 Attending  
