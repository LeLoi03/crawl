 Matteo Oldani, William Blair, Lukas Stadler, Zbynek Slajchrt, Matthias Neugschwandtner Binsweep: Reliably Restricting Untrusted Instruction Streams with Static Binary Analysis and Control-Flow Integrity   In Proceedings of the ACM Cloud Computing Security Workshop (CCSW’24) 
  Florian Huemer, David Leopoldseder, Aleksandar Prokopec, Raphael Mosaner, Hanspeter Moessenboeck Taking a Closer Look: An Outlier-Driven Approach to Compilation-Time Optimization   In Proceedings of the ECOOP 2024 Doctoral Symposium 
  Andrej Pecimuth, David Leopoldseder, Petr Tuma Accurate Compilation Replay via Remote JIT Compilation   Poster presented at the 21st International Conference on Managed Programming Languages and Runtimes (MPLR 2024) 
  Christoph Blumschein, Fabio Niephaus, Codrut Stancu, Christian Wimmer, Jens Lincke, Robert Hirschfeld Finding Cuts in Static Analysis Graphs to Debloat Software   In Proceedings of the ACM SIGSOFT International Symposium on Software Testing and Analysis 
  Ivan Ristovic, Milan Cugurovic, Strahinja Stanojevic, Marko Spasic, Vesna Marinkovic, Milena Vujosevic Janicic Efficient control-flow graph traversal   In Proceedings of YU INFO 2024s 
  Christian Wimmer, Codrut Stancu, David Kozak, Thomas Wuerthinger Scaling Type-Based Points-to Analysis with Saturation   In Proceedings of PLDI 2024 
  Milan Cugurovic, Milena Vujosevic Janicic, Vojin Jovanovic, Thomas Wuerthinger GraalSP: Polyglot, Efficient, and Robust Machine Learning-Based Static Profiler   Journal of Systems and Software 
  2023  
 Maja Vukasovic, Aleksandar Prokopec Exploiting Partially Context-sensitive Profiles to Improve Performance of Hot Code   In Proceedings of the ACM Transactions on Programming Languages and Systems 
  Matt D’Souza, James You, Ondrej Lhoták, Aleksandar Prokopec TASTyTruffle: Just-in-Time Specialization of Parametric Polymorphism   In Proceedings of the ACM on Programming Languages 
  Matteo Basso, Aleksandar Prokopec, Andrea Rosà, Walter Binder Optimization-Aware Compiler-Level Event Profiling   In Proceedings of the ACM Transactions on Programming Languages and Systems 
  Andrej Pecimuth Remote Just-in-Time Compilation for Dynamic Languages   In Proceedings of the SPLASH 2023 Doctoral Symposium 
  Andrej Pecimuth, David Leopoldseder, Petr Tuma Diagnosing Compiler Performance by Comparing Optimization Decisions   In Proceedings of the 20st International Conference on Managed Programming Languages and Runtimes (MPLR 2023) 
  Julian Garn, Florian Angerer, Hanspeter Moessenboeck Generating Java Interfaces for Accessing Foreign Objects   In Proceedings of the 20st International Conference on Managed Programming Languages and Runtimes (MPLR 2023) 
  David Kozak, Vojin Jovanovic, Codrut Stancu, Tomas Vojnar, Christian Wimmer Comparing Rapid Type Analysis with Points-To Analysis in GraalVM Native Image   In Proceedings of the 20st International Conference on Managed Programming Languages and Runtimes (MPLR 2023) 
  2022  
 Jacob Kreindl, Daniele Bonetta, Lukas Stadler, David Leopoldseder, Hanspeter Moessenboeck TruffleTaint: Polyglot Dynamic Taint Analysis on GraalVM   In Proceedings of the 19th International Conference on Managed Programming Languages and Runtimes (MPLR’22) 
  Raphael Mosaner, David Leopoldseder, Wolfgang Kisling, Lukas Stadler, Hanspeter Moessenboeck ML-SOCO: Machine Learning-Based Self-Optimizing Compiler Optimizations   In Proceedings of the 19th International Conference on Managed Programming Languages & Runtimes (MPLR’22) 
  Lukas Makor, Sebastian Kloibhofer, David Leopoldseder, Daniele Bonetta, Lukas Stadler, Hanspeter Moessenboeck Automatic Array Transformation to Columnar Storage at Run Time   In Proceedings of the 19th International Conference on Managed Programming Languages & Runtimes (MPLR’22) 
  Felix Berlakovich, Gergo Barany, Matthias Neugschwandtner Constant Blinding on GraalVM   In Proceedings of the 15th EUROPEAN WORKSHOP ON SYSTEMS SECURITY 
  Stefan Reschke, Toni Mattis, Fabio Niephaus, Robert Hirschfeld Toward Just-in-time and Language-agnostic Mutation Testing   In Proceedings of the MoreVMs’22 workshop at ‹Programming› 2022 
  Christian Humer, Tim Felgentreff, Robert Hirschfeld, Fabio Niephaus, Daniel Stolpe Language-independent Development Environment Support For Dynamic Runtimes   In Proceedings of the 15th ACM SIGPLAN International Symposium on Dynamic Languages 
  Jacob Kreindl, Hanspeter Moessenboeck, Daniele Bonetta Towards Efficient, Multi-Language Dynamic Taint Analysis   In Proceedings of the 16th ACM SIGPLAN International Conference on Managed Programming Languages and Runtimes 
  Raphael Mosaner, Hanspeter Moessenboeck, Manuel Rigger, Roland Schatz, David Leopoldseder Supporting On-Stack Replacement in Unstructured Languages by Loop Reconstruction and Extraction   In Proceedings of the 16th ACM SIGPLAN International Conference on Managed Programming Languages and Runtimes 
  Robert Hirschfeld, Christian Humer, Fabio Niephaus, Daniel Stolpe, Tim Felgentreff Language-independent Development Environment Support For Dynamic Runtimes   In Proceedings of the 15th ACM SIGPLAN International Symposium on Dynamic Languages 
 Kevin Menard, Chris Seaton, Benoit Daloze Specializing Ropes for Ruby   In Proceedings of the 15th International Conference on Managed Languages & Runtimes (ManLang’18) 
  David Leopoldseder, Roland Schatz, Lukas Stadler, Manuel Rigger, Thomas Wuerthinger, Hanspeter Moessenboeck Fast-Path Loop Unrolling of Non-Counted Loops to Enable Subsequent Compiler Optimizations   In Proceedings of the 15th International Conference on Managed Languages & Runtimes, Article No. 2 (ManLang’18) 
  Juan Fumero, Michel Steuwer, Lukas Stadler, Christophe Dubach. OpenCL JIT Compilation for Dynamic Programming Languages   MoreVMs Workshop on Modern Language Runtimes, Ecosystems, and VMs (MoreVMs’17)  Video recording 
 Benoit Daloze, Stefan Marr, Daniele Bonetta, Hanspeter Moessenboeck Efficient and Thread-Safe Objects for Dynamically-Typed Languages   In Proceedings of the Conference on Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA)  . 
  Manuel Rigger, Matthias Grimmer, Christian Wimmer, Thomas Würthinger, Hanspeter Moessenboeck Bringing Low-Level Languages to the JVM: Efficient Execution of LLVM IR on Truffle   In Proceedings of the Workshop on Virtual Machines and Intermediate Languages (VMIL)  . 
  Manuel Rigger, Matthias Grimmer, Hanspeter Moessenboeck Sulong – Execution of LLVM-Based Languages on the JVM   In Proceedings of International Workshop on Implementation, Compilation, Optimization of Object-Oriented Languages, Programs and Systems (ICOOOLPS)  . 
 Benoit Daloze, Chris Seaton, Daniele Bonetta, Hanspeter Moessenboeck Techniques and Applications for Guest-Language Safepoints   In Proceedings of the International Workshop on Implementation, Compilation, Optimization of Object-Oriented Languages, Programs and Systems (ICOOOLPS)  . 
  Matthias Grimmer, Chris Seaton, Roland Schatz, Würthinger, Hanspeter Moessenboeck High-Performance Cross-Language Interoperability in a Multi-Language Runtime   In Proceedings of the 11th Dynamic Language Symposium (DLS)  . 
  Matthias Grimmer, Chris Seaton, Thomas Würthinger, Hanspeter Moessenboeck Dynamically Composing Languages in a Modular Way: Supporting C Extensions for Dynamic Languages.   In Proceedings of the 14th International Conference on Modularity  . 
  Gülfem Savrun-Yeniçeri, Michael Van De Vanter, Per Larsen, Stefan Brunthaler, and Michael Franz An Efficient and Generic Event-based Profiler Framework for Dynamic Languages   In Proceedings of the International Conference on Principles and Practices of Programming on The Java Platform: virtual machines, languages, and tools (PPPJ)  . 
  Michael Van De Vanter Building Debuggers and Other Tools: We Can “Have it All” (Position Paper)   In Proceedings of the 10th Implementation, Compilation, Optimization of Object-Oriented Languages, Programs and Systems Workshop (ICOOOLPS)  . 
  Matthias Grimmer, Manuel Rigger, Roland Schatz, Lukas Stadler, Hanspeter Moessenboeck Truffle C: Dynamic Execution of C on the Java Virtual Machine   In Proceedings of the International Conference on Principles and Practice of Programming in Java (PPPJ)  . 
  Christian Humer, Christian Wimmer, Christian Wirth, Andreas Wöß, Thomas Würthinger A Domain-Specific Language for Building Self-Optimizing AST Interpreters   In Proceedings of the International Conference on Generative Programming: Concepts and Experiences (GPCE)  . 
  Andreas Wöß, Christian Wirth, Daniele Bonetta, Chris Seaton, Christian Humer, Hanspeter Moessenboeck An Object Storage Model for the Truffle Language Implementation Framework   In Proceedings of International Conference on Principles and Practice of Programming in Java (PPPJ)  . 
  Matthias Grimmer, Thomas Würthinger, Andreas Wöß, Hanspeter Moessenboeck An Efficient Approach to Access Native Binary Data from JavaScript   In Proceedings of the 9th Workshop on Implementation, Compilation, Optimization of Object-Oriented Languages, Programs and Systems (ICOOOLPS)  . 
  Chris Seaton, Michael Van De Vanter, and Michael Haupt Debugging at full speed   In Proceedings of the 8th Workshop on Dynamic Languages and Applications (DYLA)  . 
 Thomas Würthinger, Christian Wimmer, Andreas Wöß, Lukas Stadler, Gilles Duboscq, Christian Humer, Gregor Richards, Doug Simon, Mario Wolczko One VM to Rule Them All   In Proceedings of Onward!  . Describes the vision of the Truffle approach, and the full system stack including the interpreter and dynamic compiler. 
  Matthias Grimmer, Manuel Rigger, Lukas Stadler, Roland Schatz, Hanspeter Moessenboeck An efficient native function interface for Java   In Proceedings of the International Conference on Principles and Practices of Programming on the Java Platform: Virtual Machines, Languages, and Tools. (PPPJ)  . 
 Thomas Würthinger, Andreas Wöß, Lukas Stadler, Gilles Duboscq, Doug Simon, Christian Wimmer | Self-Optimizing AST Interpreters | In | Proceedings of the Dynamic Languages Symposium (DLS) | . Describes the design of self-optimizing and self-specializing interpreter, and the application to JavaScript. 
  GraalVM Compiler Papers  
 2023  
 David Leopoldseder, Daniele Bonetta, Lukas Stadler, Hanspeter Moessenboeck, Sebastian Kloibhofer, Lukas Makor | Control Flow Duplication for Columnar Arrays in a Dynamic Compiler | In _Proceedings of the | 2023 Journal and Conference_ 
  2022  
 Felix Berlakovich, Matthias Neugschwandtner, Gergö Barany Look Ma, no constants: practical constant blinding in GraalVM   In Proceedings of the 15th European Workshop on Systems Security (EuroSec ‘22) 
  Gergo Barany, David Leopoldseder, Hanspeter Moessenboeck, Raphael Mosaner Improving Vectorization Heuristics in a Dynamic Compiler with Learned Models   In Proceedings of the Virtual Machines and Language Implementations Workshop Co-located with SPLASH 2022 
  Stefan Marr, Humphrey Burchell, Fabio Niephaus Execution vs. Parse-Based Language Servers: Tradeoffs and Opportunities for Language-Agnostic Tooling for Dynamic Languages   In Proceedings of the 18th Dynamic Languages Symposium (DLS) at SPLASH 2022 
  David Leopoldseder, Daniele Bonetta, Lukas Stadler, Hanspeter Moessenboeck, Lukas Makor, Sebastian Kloibhofer Automatic Array Transformation to Columnar Storage at Run Time   In Proceedings of the 19th International Conference on Managed Programming Languages and Runtimes (MPLR’22) 
  David Leopoldseder, Lukas Stadler, Hanspeter Moessenboeck, Raphael Mosaner, Wolfgang Kisling Machine-Learning-Based Self-Optimizing Compiler Heuristics   In Proceedings of the 19th International Conference on Managed Programming Languages and Runtimes (MPLR’22) 
  Stefan Reschke, Toni Mattis, Fabio Niephaus, Robert Hirschfeld Toward Just-in-time and Language-agnostic Mutation Testing   In Proceedings of the MoreVMs’22 workshop at ‹Programming› 2022 
 James Clarkson, Juan Fumero, Michalis Papadimitriou, Foivos S. Zakkak, Maria Xekalaki, Christos Kotselidis, Mikel Luján Exploiting High-Performance Heterogeneous Hardware for Java Programs using Graal   In Proceedings of the 15th International Conference on Managed Languages & Runtimes (ManLang’18) 
  Juan Fumero, Christos Kotselidis. Using Compiler Snippets to Exploit Parallelism on Heterogeneous Hardware: A Java Reduction Case Study   In Proceedings of the 10th ACM SIGPLAN International Workshop on Virtual Machines and Intermediate Languages (VMIL’18) 
 Josef Eisl, Matthias Grimmer, Doug Simon, Thomas Würthinger, Hanspeter Moessenboeck Trace-based Register Allocation in a JIT Compiler   In Proceedings of the 13th International Conference on Principles and Practices of Programming on the Java Platform: Virtual Machines, Languages, and Tools (PPPJ ‘16) 
  Gülfem Savrun-Yeniçeri, Michael L. Van de Vanter, Per Larsen, Stefan Brunthaler, Michael Franz An Efficient and Generic Event-based Profiler Framework for Dynamic Languages   In Proceedings of the Principles and Practices of Programming on The Java Platform (PPPJ ‘15) 
  Michael L. Van De Vanter Building debuggers and other tools: we can “have it all”   In Proceedings of the 10th Workshop on Implementation, Compilation, Optimization of Object-Oriented Languages, Programs and Systems (ICOOOLPS ‘15) 
  Benoit Daloze, Chris Seaton, Daniele Bonetta, Hanspeter Moessenboeck Techniques and applications for guest-language safepoints   In Proceedings of the 10th Workshop on Implementation, Compilation, Optimization of Object-Oriented Languages, Programs and Systems (ICOOOLPS ‘15) 
  Thomas Würthinger Graal and truffle: modularity and separation of concerns as cornerstones for building a multipurpose runtime   In Proceedings of the companion publication of the 13th international conference on Modularity (MODULARITY ‘14) 
  Lukas Stadler, Thomas Würthinger, Hanspeter Moessenboeck Partial Escape Analysis and Scalar Replacement for Java   In Proceedings of Annual IEEE/ACM International Symposium on Code Generation and Optimization (CGO ‘14) 
  Christian Häubl, Christian Wimmer, Hanspeter Moessenboeck Trace transitioning and exception handling in a trace-based JIT compiler for java   ACM Transactions on Architecture and Code Optimization (TACO) 
  Thomas Würthinger, Andreas Wöß, Lukas Stadler, Gilles Duboscq, Doug Simon, Christian Wimmer Self-optimizing AST interpreters   In Proceedings of the 8th symposium on Dynamic languages (DLS ‘12) 
  Christian Wimmer, Thomas Würthinger Truffle: a self-optimizing runtime system   In Proceedings of the 3rd annual conference on Systems, programming, and applications: software for humanity (SPLASH ‘12) 
  Christian Häubl, Christian Wimmer, Hanspeter Moessenboeck Evaluation of trace inlining heuristics for Java   In Proceedings of the 27th Annual ACM Symposium on Applied Computing (SAC ‘12) 
