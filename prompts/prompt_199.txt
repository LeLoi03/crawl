input:
1. LATA_3 conference:
Sign In    
 Paper      
 Cancel   
  Library 
  Audio Papers 
  Paper Translation 
 Pricing  Explore    Content Type  
  Top Papers      
 Library    Full Paper Audio     
 Prime    Prime     
  Ask R GPT    Mobile App     
  Copy DOI     
 Journal: Information and Computation | Publication Date: Nov 16, 2023 
   Affiliation: Rovira i Virgili University  , University of Giessen     
 Similar Papers  
 Paper Title   
 Journal   
 Date   
 Author   
 Preface to the special issue dedicated to combinatorics, automata and number theory  Valérie Berthé   
 More From: Information and Computation  
 Paper Title   
 Journal   
 Date   
 Author   
 Non-linear communication via graded modal session types  Danielle Marshall ... Dominic Orchard   
 Information and Computation | VOL. -   
 Danielle Marshall, et. al.  Danielle Marshall ... Dominic Orchard    
 01 Nov 2024   
  Save     
 Thomas Seiller, et. al.  Thomas Seiller ... Ulysse Léchine    
 21 Oct 2024   
  Save     
 James C.A Main, et. al.  James C.A Main ... Mickael Randour    
 10 Oct 2024   
  Save     
 Beatrice Amico, et. al.  Beatrice Amico ... Pietro Sala    
 03 Oct 2024   
  Save     
 Privacy Policy   Cookies Policy   Terms of Use   Careers    
 Translate this paper in your preferred language 
  Listen to the abstract of this paper 
  Save 
  Share
2. LATIN_0 conference:
___  
  ___    
 LATIN Symposium Website    
 (Latin American Theoretical INformatics Symposium)    
  Home    
 Author index    
 Steering Committee    
 Bylaws    
 Alejandro López-Ortiz Award    
  LATIN 2024  will be in Puerto Varas/Chile.  
 Check out the conference webpage  as well as the call for papers  !
3. LATIN_2 conference:
___  
  ___    
 LATIN Proceedings    
   LATIN 2022  
 Book category  : Proceedings   
  Publication language:  English | Armando Castañeda; Francisco Rodríguez-Henríquez (Eds.)    
    LATIN 2022: Theoretical Informatics   
 15th Latin American Symposium, Guanajuato, Mexico, November 7–11, 2022, Proceedings   
 [ Top  ] [ Home  ] [ LATIN 2022  ]
4. LCN_1 conference:
Home 
  Author 
  Attendee 
  Program 
  Patrons 
  Committees 
  LCN Annals 
 October 8-10, 2024, Caen, Normandy, France   
 Welcome to Caen  
 IEEE LCN News            
 Important Dates   
 Paper Registration:  April 19  May 3, 2024 NEW   
 Paper Submission:  April 19  May 3, 2024 NEW   
 Paper Acceptance Notification:  June 28, 2024  
 Final Paper Due:  July 25, 2024  
 Announcements   
 October 2, 2024:  The LCN Web site is being changed frequently with updated information. If there were pages that you were looking at that said "TBD" for rooms and/or times, please re-check the site as the time gets closer.   
 September 6, 2024:  The IEEE LCN 2023 YouTube channel  playlist is now available!!   
 August 24, 2024:  The Technical Program  has been posted. Recognizing the evolving landscape of academic conferences and the need for flexibility, LCN 2024 will feature a dedicated session for live remote presentations (Teaser Session).   
 August 23, 2024:  Presenter and Session Chair Instructions  have been posted.   
 July 17, 2024:  Students who are authors of accepted papers are eligible to apply for student participation grants  ; application information has been posted.   
 July 9, 2024:  Information about the N 2  Women Fellowship  has been posted.   
 July 8, 2024:  Student mentorship  information has been posted.   
 July 1, 2024:  Final Author Instructions  for camera-ready submissions have been posted.   
 July 1, 2024:  The list of accepted papers  has been posted.   
 June 27, 2024:  The Conference Registration  page has been posted.   
 April 24, 2024:  Information about all keynote presenters  has been posted.   
 April 19, 2024:  The paper registration and submission deadlines for regular, short, and doctoral papers has been extended to May 3. NOTE  that Special Tracks might have their own paper registration and submission deadlines.   
 March 28, 2024:  Information about keynote presenters  and additional special tracks  at LCN 2024 have been posted.   
 March 20, 2024:  Information about special tracks  at LCN 2024 have been posted.   
 January 17, 2024:  The LCN 2023 Photo Gallery  and Invitation to the IEEE LCN 2024 Conference  video have been posted.   
 January 5, 2024:  An updated Call for Papers  has been posted! Please note the new Remote Presentation Option.
5. LCN_2 conference:
Home 
  Author 
  Attendee 
  Program 
  Patrons 
  Committees 
  LCN Annals
6. LCN_3 conference:
Home 
  Author 
  Attendee 
  Program 
  Patrons 
  Committees 
  LCN Annals 
 Author  
 Call for Papers 
  Special Tracks 
  Information for Authors 
  Author Instructions (Final Camera Ready Submissions) 
  Presenter and Session Chair Instructions 
  Call for Demos 
  Student Participation Grants 
 Home  > Author  > Call For Papers   
 Call For Papers  
  Caen, Normandy, France  
  8-10 October 2024  
  Wireless ad hoc & sensor networks 
 Authors are invited to submit papers describing original, previously unpublished work, not currently under review by another conference, workshop, or journal. There are a number of tracks that are designed to improve interactions of experts over different stages in research development.  
 Full Regular papers | (maximum 8 pages plus references, 10 pt font in IEEE format) should present novel perspectives within the general scope of the conference. 
  Short papers | (maximum 6 pages plus references, 10 pt font in IEEE format) are an opportunity to present preliminary or interim results on hot topics in a poster session. 
  Doctoral track papers | (maximum 6 pages plus references, 10 pt font in IEEE format) provide a supportive setting for Ph.D. students (who must be the first author) to discuss their problem statement, methods, results, obtain feedback from established researchers and establish contacts for entering the job market. The doctoral track involves a mentoring program. 
  We are also holding dedicated special tracks (e.g., invited workshops, papers) focusing on nascent and promising areas in networking research, which shall involve experts in those areas seeking to foster collaborative development.  
 Full, short, special track, and doctoral papers are published in the IEEE LCN proceedings and IEEE Xplore. All published papers must include title, complete contact information for all authors, abstract, and keywords on the cover page. IEEE reserves the right to remove papers from IEEE Xplore that are not presented at the conference.  
 Paper Submission:  Papers must be registered on EDAS and submitted in PDF format. Detailed submission instructions are available at the conference website  . Direct your questions to Program Chairs: Florian Tschorsch and Kanchana Thilakarathna ( program@ieeelcn.org  ).  
 A limited number of students grants and N 2  Women Young Researcher Fellowship awards are considered by the conference each year.  
 Important Dates:   
  Paper registration: | April 19 | May 3, 2024 | NEW 
  Paper submission: | April 19 | May 3, 2024 | NEW 
  Notifications: June 28, 2024 
  Camera ready: July 25, 2024 
  Remote Presentation Option:  LCN considers in-person meetings indispensable for collaborations, personal exchanges, discussions, and networking opportunities. Recognizing the evolving landscape of academic conferences and the need for flexibility, LCN 2024 introduces a Remote Presentation Option.  
 Remote presentation is restricted to full, short, and doctoral papers. Further implementation details will be communicated as part of the author and presenter instructions.  
 The overarching goal of LCN 2024 is to enhance the accessibility and inclusivity of LCN, catering to a diverse global audience while preserving the value of physical participation.  
 Organizing Committee | Steering Committee
7. LCTES_0 conference:
PLDI 2023   Sat 17 - Wed 21 June 2023 Orlando, Florida, United States    
 Toggle navigation        
  Program | PLDI Program 
  Your Program 
   Sat 17 Jun 
  Sun 18 Jun 
  Mon 19 Jun 
  Tue 20 Jun 
  Wed 21 Jun 
  Tracks | PLDI 2023 
  FCRC 
  PLDI Research Papers 
   Co-hosted Conferences 
  ISMM 
  LCTES 
  Workshops 
  ARRAY 
  PLMW@PLDI 
  SOAP 
  Organization | PLDI 2023 Committees 
  Organizing Committee 
  Track Committees 
  ISMM | Organizing Committee 
  Program Committee 
  LCTES | Organizing Committee 
  Program Committee 
  Steering Committee 
  PLDI 2024 
  PLDI 2023 
  PLDI 2022 
  Sign up 
  PLDI 2023  ( series  ) /  LCTES 2023 ( series  ) /  Languages, Compilers, Tools and Theory of Embedded Systems LCTES 2023   
 About 
  Call for Artifacts 
  Call for Papers 
  Submission 
  LCTES 2023   
  Welcome to the 24th ACM SIGPLAN/SIGBED International Conference on L  anguages, C  ompilers, and T  ools for E  mbedded S  ystems ( LCTES  2023)!  
 LCTES provides a link between the programming languages and embedded systems engineering communities. Researchers and developers in these areas are addressing many similar problems but with different backgrounds and approaches. LCTES is intended to expose researchers and developers from either area to relevant work and interesting problems in the other area and provide a forum where they can interact.  
 LCTES’23 is co-located with PLDI  and FCRC 2023  , sharing the venue and activities with ten top computer science conferences.  
 Proceedings   
 The proceedings for LCTES 2023 are now available in the ACM Digital Library  .  
 Attendance policy   
 Accepted papers must be presented at LCTES 2023 to appear in the proceedings. Since FCRC is an in-person conference, presentations must be in person and the presenter must register for LCTES. Under special circumstances, pre-recorded presentations are allowed but require three virtual PLDI registrations to help us cover the cost of the proceedings. If you are unable to present your paper in person, contact the general chair  as soon as possible.  
 Registration is open   
 Registrations are now open  . Access to LCTES is possible with a 2-day or single-day (Sunday) pass as part of PLDI. Make sure to tick the “LCTES” box when signing up!  
 Accommodation   
 Visit the FCRC 2023 hotel information  page to book your rooms at a discounted rate.  
 Conference attendance grants for student authors   
   The GMT offsets shown reflect the offsets at the moment of the conference  .     
 Time Band   
 ×    You're viewing the program in a time zone which is different from your device's time zone change time zone     
 Sun 18 Jun   
 Displayed time zone: Eastern Time (US & Canada)  change      
 Keynote | Decreasing the Miss Rate and Eliminating the Performance Penalty of a Data Filter Cache   LCTES   
 David B. Whalley  Florida State University    
  DOI 
 20m    
 Talk | Facilitating the Bootstrapping of a New ISA   LCTES   
 Abigail Mortensen  Florida State University  , Scott Pomerville  Michigan Technological University  , David B. Whalley  Florida State University  , Soner Onder  Michigan Technological University  , Gang-Ryung Uh  Florida State University    
  DOI 
 20m    
 Talk | Synchronization-aware NAS for an Efficient Collaborative Inference on Mobile Platforms   LCTES   
 Beom Woo Kang  Hanyang University  , Junho Wohn  Hanyang University  , Seongju Lee  Hanyang University  , Sunghyun Park  University of Michigan  , Yung-Kyun Noh  Hanyang University  , Yongjun Park  Yonsei University    
  DOI 
 20m    
 Talk | MinUn: Accurate ML Inference on Microcontrollers Virtual      LCTES   
 Shikhar Jaiswal  Microsoft Research  , Rahul Kranti Kiran Goli  Microsoft Research  , Aayan Kumar  Microsoft Research  , Vivek Seshadri  Microsoft Research  , Rahul Sharma  Microsoft Research    
  DOI   Pre-print   Media Attached 
 20m    
 Talk | reUpNix: Reconfigurable and Updateable Embedded Systems   LCTES   
 Niklas Golenstede  Hamburg University of Technology  , Ulf Kulau  Hamburg University of Technology  , Christian Dietrich  Hamburg University of Technology    
  DOI 
 20m    
 Talk | Optimizing Function Layout for Mobile Applications   LCTES   
 Ellis Hoag  Meta  , Kyungwoo Lee  Meta  , Julián Mestre  University of Sydney  , Sergey Pupyrev  Meta Platforms Inc., Facebook    
  DOI 
 20m    
 Talk | Thread-Level Attack-Surface Reduction   LCTES   
 Florian Rommel  Leibniz Universität Hannover  , Christian Dietrich  Hamburg University of Technology  , Andreas Ziegler  Friedrich-Alexander University Erlangen-Nürnberg (FAU)  , Illia Ostapyshyn  Leibniz Universität Hannover  , Daniel Lohmann  Leibniz Universität Hannover    
  DOI 
 20m    
 Talk | Sequential Scheduling of Dataflow Graphs for Memory Peak Minimization   LCTES   
 Pascal Fradet  Inria Grenoble, France  , Alain Girault  INRIA  , Alexandre Honorat  Inria    
  DOI 
 20m    
 Talk | PinIt: Influencing OS Scheduling via Compiler-Induced Affinities in Embedded Media Servers Virtual      LCTES   
 Girish Mururu  Georgia Institute of Technology  , vincentni   , Ada Gavrilovska   , Santosh Pande  Georgia Institute of Technology    
  DOI 
 10m    
 Talk | (WIP) Towards Secure MicroPython on Morello   LCTES   
 Jeremy Singer  University of Glasgow    
  DOI   Pre-print 
 10m    
 Talk | (WIP) Towards Automated Identification of Layering Violations in Embedded Applications   LCTES   
 Mingjie Shen  Purdue University  , James C. Davis  Purdue University  , Aravind Machiry  Purdue University    
  DOI   Pre-print 
 10m    
 Talk | (WIP) Tiling for DMA-Based Hardware Accelerators Virtual      LCTES   
 Alexandre Singer  Huawei Canada Research Centre  , Kai-Ting Amy Wang  Huawei Canada Research Centre    
  DOI 
 20m    
 Talk | Rep-RAID: An Integrated Approach to Optimizing Data Replication and Garbage Collection in RAID-enabled SSDs   LCTES   
 Jun Li  Southwest University  , Balazs Gerofi  Intel Corporation  , Francois Trahay  Telecom SudParis  , Zhigang Cai  Southwest University  , Jianwei Liao  Southwest University    
  DOI 
 20m    
 Talk | ISVABI: In-Storage Video Analytics Engine with Block Interface   LCTES   
 Yi Zheng  The Pennsylvania State University  , Joshua Fixelle  University of Virginia  , Pingyi Huo  The Pennsylvania State University  , Mircea R. Stan  University of Virginia  , Mike Mesnier  Intel Labs  , Vijaykrishnan Narayanan  The Pennsylvania State University    
  DOI 
 20m    
 Talk | LUNAR: A Native Table Engine for Embedded Devices Virtual      LCTES   
 Xiaopeng Fan  East China Normal University  , Song Yan  East China Normal University  , Yuchen Huang  East China Normal University  , Chuliang Weng  East China Normal University    
  DOI 
 Title 
 Decreasing the Miss Rate and Eliminating the Performance Penalty of a Data Filter Cache  LCTES   
 David B. Whalley    
  DOI 
 Facilitating the Bootstrapping of a New ISA  LCTES   
 Abigail Mortensen  , Scott Pomerville  , David B. Whalley  , Soner Onder  , Gang-Ryung Uh    
  DOI 
 ISVABI: In-Storage Video Analytics Engine with Block Interface  LCTES   
 Yi Zheng  , Joshua Fixelle  , Pingyi Huo  , Mircea R. Stan  , Mike Mesnier  , Vijaykrishnan Narayanan    
  DOI 
 LUNAR: A Native Table Engine for Embedded Devices Virtual     LCTES   
 Xiaopeng Fan  , Song Yan  , Yuchen Huang  , Chuliang Weng    
  DOI 
 MinUn: Accurate ML Inference on Microcontrollers Virtual     LCTES   
 Shikhar Jaiswal  , Rahul Kranti Kiran Goli  , Aayan Kumar  , Vivek Seshadri  , Rahul Sharma    
  DOI   Pre-print   Media Attached 
 Optimizing Function Layout for Mobile Applications  LCTES   
 Ellis Hoag  , Kyungwoo Lee  , Julián Mestre  , Sergey Pupyrev    
  DOI 
 PinIt: Influencing OS Scheduling via Compiler-Induced Affinities in Embedded Media Servers Virtual     LCTES   
 Girish Mururu  , vincentni  , Ada Gavrilovska  , Santosh Pande    
  DOI 
 Rep-RAID: An Integrated Approach to Optimizing Data Replication and Garbage Collection in RAID-enabled SSDs  LCTES   
 Jun Li  , Balazs Gerofi  , Francois Trahay  , Zhigang Cai  , Jianwei Liao    
  DOI 
 reUpNix: Reconfigurable and Updateable Embedded Systems  LCTES   
 Niklas Golenstede  , Ulf Kulau  , Christian Dietrich    
  DOI 
 Sequential Scheduling of Dataflow Graphs for Memory Peak Minimization  LCTES   
 Pascal Fradet  , Alain Girault  , Alexandre Honorat    
  DOI 
 Synchronization-aware NAS for an Efficient Collaborative Inference on Mobile Platforms  LCTES   
 Beom Woo Kang  , Junho Wohn  , Seongju Lee  , Sunghyun Park  , Yung-Kyun Noh  , Yongjun Park    
  DOI 
 Thread-Level Attack-Surface Reduction  LCTES   
 Florian Rommel  , Christian Dietrich  , Andreas Ziegler  , Illia Ostapyshyn  , Daniel Lohmann    
  DOI 
 (WIP) Tiling for DMA-Based Hardware Accelerators Virtual     LCTES   
 Alexandre Singer  , Kai-Ting Amy Wang    
  DOI 
 (WIP) Towards Automated Identification of Layering Violations in Embedded Applications  LCTES   
 Mingjie Shen  , James C. Davis  , Aravind Machiry    
  DOI   Pre-print 
 (WIP) Towards Secure MicroPython on Morello  LCTES   
 Jeremy Singer    
  DOI   Pre-print 
 Important Dates   
 Paper submission deadline: March 24, 2023 (extended firm deadline) 
  Paper notification: April 24, 2023 
  AE submission deadline: May 1, 2023 
  AE notification: May 12, 2023 
  Camera-ready deadline: May 15, 2023 
  Conference: June 18, 2023 
 Paper Categories   
 Full paper: 10 pages presenting original work. 
  Work-in-progress paper: 4 pages papers presenting original ideas that are likely to trigger interesting discussions. 
  Accepted papers in both categories will appear in the proceedings published by ACM. In addition, this year’s LCTES introduces two journal modes.  
 All accepted full papers will be invited to be published in a special issue of the ACM Transactions on Embedded Computing Systems (TECS). A TECS publication will require substantial additional material over the conference publication and will undergo a separate review process. 
  Rejected full papers may have the option to submit their work to the IEEE Embedded Systems Letters (ESL; 4 pages). IEEE ESL submissions will undergo a separate review process. 
 Original contributions are solicited on the topics of interest including, but not limited to:   
 ACM Publications Policies   
 By submitting your article to an ACM Publication, you are hereby acknowledging that you and your co-authors are subject to all ACM Publications Policies  , including ACM’s new Publications Policy on Research Involving Human Participants and Subjects  . Alleged violations of this policy or any ACM Publications Policy will be investigated by ACM and may result in a full retraction of your paper, in addition to other potential penalties, as per ACM Publications Policy.  
  Please ensure that you and your co-authors obtain an ORCID ID  , so you can complete the publishing process for your accepted paper. ACM has been involved in ORCID from the start, and we have recently made a commitment to collect ORCID IDs from all of our published authors  . The collection process has started and will roll out as a requirement throughout 2022. We are committed to improve author discoverability, ensure proper attribution and contribute to ongoing community efforts around name normalization; your ORCID ID will help in these efforts.  
 Authors take note   
 The official publication date is the date the proceedings are made available in the ACM Digital Library. This date may be up to two weeks prior to the first day of your conference. The official publication date affects the deadline for any patent filings related to published work.  
 Submission  
 To enable double-blind reviewing, submissions must adhere to two rules:  
 author names and their affiliations must be omitted; and, 
  references to related work by the authors should be in the third person (e.g., not “We build on our previous work …” but rather “We build on the work of …”). 
  However, nothing should be done in the name of anonymity that weakens the submission or makes the job of reviewing the paper more difficult (e.g., important background references should not be omitted or anonymized). Papers must describe unpublished work that is not currently submitted for publication elsewhere as discussed here  . Authors of accepted papers will be required to sign an ACM copyright release.  
 ACM Publications Policies   
 By submitting your article to an ACM Publication, you are hereby acknowledging that you and your co-authors are subject to all ACM Publications Policies  , including ACM’s new Publications Policy on Research Involving Human Participants and Subjects  . Alleged violations of this policy or any ACM Publications Policy will be investigated by ACM and may result in a full retraction of your paper, in addition to other potential penalties, as per ACM Publications Policy. Please ensure that you and your co-authors obtain an ORCID ID  , so you can complete the publishing process for your accepted paper. ACM has been involved in ORCID from the start, and we have recently made a commitment to collect ORCID IDs from all of our published authors  . The collection process has started and will roll out as a requirement throughout 2022. We are committed to improve author discoverability, ensure proper attribution and contribute to ongoing community efforts around name normalization; your ORCID ID will help in these efforts.  
 AUTHORS TAKE NOTE   
 The official publication date is the date the proceedings are made available in the ACM Digital Library. This date may be up to two weeks prior to the first day of your conference. The official publication date affects the deadline for any patent filings related to published work.  
 Submission site   
 Call for Artifacts  
 Submission Site   
  Artifact Decision Notification  : May 12, 2023  
 General Info   
 The authors of all accepted LCTES papers (including WIP papers) are invited to submit supporting materials to the Artifact Evaluation process. Artifact Evaluation is run by a separate Artifact Evaluation Committee (AEC) whose task is to assess how well the artifacts support the work described in the papers. This submission is voluntary but strongly encouraged and will not influence the final decision regarding the papers.  
 At LCTES, we follow ACM’s artifact review and badging policy, version 1.1  . ACM describes a research artifact as follows:  
 By “artifact” we mean a digital object created by the authors to be used as part of the study or generated by the experiment itself. For example, artifacts can be software systems, scripts used to run experiments, input datasets, raw data collected in the experiment, or scripts used to analyze results.  
 Submission of an artifact does not imply automatic permission to make its content public. AEC members will be instructed that they may not publicize any part of the submitted artifacts during or after completing the evaluation, and they will not retain any part of any artifact after evaluation. Thus, you can include models, data files, proprietary binaries, and similar items in your artifact.  
 We expect each artifact to receive three reviews. Papers that pass the Artifact Evaluation process will receive up to three ACM artifact evaluation badge(s) directly printed on the paper and available as meta information in the ACM Digital Library.  
 Artifact evaluation is single-blind. Please take precautions (e.g., turning off analytics and logging) to help prevent accidentally learning the reviewers’ identities.  
 Badging   
 The papers with accepted artifacts will be assigned official ACM artifact evaluation badges based on the criteria defined by ACM  . The AEC awards up to three types of badges that reflect the evaluation (red), availability (green), and validation (blue) of the artifact and the results of the paper. Refer to the ACM website  for detailed badge information. Note that artifacts will be evaluated with respect to the claims and presentation in the submitted version of the paper, not the camera-ready version   .  
 The awarded badges will appear on the first page of the camera-ready version of the paper. Artifact authors will be allowed to revise their camera-ready paper after being notified of their artifact’s publication to include a link to the artifact’s DOI.  
 Note that we only award the “Reproducibility” (dark blue) badge but not the “Replication” (light blue) one.  
 Guidelines   
 Carefully think which badge(s) you seek to receive | . | If your only goal is to publish your code, seek the “Availability” (green) badge. The reviewers will not exercise the artifact for its functionality or validate the paper’s claims. 
  If you wish you have your results reproduced without making your artifact documented, consistent, complete, and exercisable, seek the “Reproducibility” (blue) badge rather than the “Functionality/Reusability” (red) badge. 
  If you do not want to make the artifact available publicly, do not seek the “Availability” (green) badge. 
  Giving AE reviewers remote access to your machines with preinstalled (proprietary) software is possible. 
  Preparing the Artifact   
 You should make your artifact available as a single archive file and use the naming convention <paper #>.<suffix>  , where the appropriate suffix is used for the given archive format. Use a commonly-available compressed archive format such as .tgz, .tbz2, or .zip and open document formats. The link to download your artifact must protect the anonymity of the reviewers (e.g., a Google Drive URL).  
 The compressed archive should consist of three pieces:  
 The submission version of your accepted paper. 
  A | README | file (PDF or plaintext format) that explains your artifact (details below). 
  A folder containing the artifact. 
  The README.txt  should consist of two parts:  
 a | Getting Started Guide | and 
  Step-by-Step Instructions | that detail how your artifact can be evaluated. Include appropriate references to the relevant sections of your paper. 
  The Getting Started Guide  should contain instructions on how to set up (including, for example, a pointer to the VM player software, its version, and passwords if needed) and test your artifact. Anyone following this guide should be able to handle the rest of your artifact easily.  
 The Step by Step Instructions  explain how to reproduce experiments or other activities supporting your paper’s conclusions. Write this for readers who are deeply interested in your work and are studying to improve or compare against it. If your artifact runs for more than a few minutes, point this out and explain how to run it on smaller inputs.  
 Where appropriate, include descriptions of and links to files (included in the archive) that represent the expected outputs   such as log files generated by your tool for a given set of inputs. If there are warnings that can be ignored, explain what they are.  
 Further, include the following:  
 A list of claims from the paper supported by the artifact. Explain how and why the artifact supports those claims. 
  A list of claims from the paper | not | supported by the artifact. Explain why the artifact does not support those claims. Examples: performance claims cannot be reproduced in a VM, authors cannot redistribute specific benchmarks, etc. 
  When preparing your artifact, please keep in mind:  
 How accessible you are making your artifact to other researchers. 
  The AEC members will have a limited time to assess your artifact. 
  Artifact Evaluation Committee   
 Other than the chair, the AEC members are senior graduate students, postdocs, or recent Ph.D. graduates, identified with the help of the LCTES PC and recent artifact evaluation committees. Please check SIGPLAN’s Empirical Evaluation Guidelines  for some methodologies to consider during evaluation.  
 Throughout the review period, reviews will be submitted to HotCRP and continuously visible to authors. AEC reviewers will be able to continuously interact (anonymously) with authors for clarifications, system-specific patches, and other logistics to help ensure that the artifact can be evaluated. Continuous interaction prevents rejecting artifacts for “wrong library version” types of problems.  
 Our goal is that all submitted artifacts successfully pass the artifact evaluation.   
 Speaker's Guide  
 LCTES’23 Speaker’s Guide   
 This document is for those presenting a paper at LCTES’23. If you’re presenting at ISMM, PLDI, or a PLDI tutorial or workshop, please see the Speaker’s Guide on the page for the corresponding conference/track.  
 Congratulations on having your paper accepted at LCTES’23! This document will help ensure your presentation runs smoothly and has the best possible audience impact. Please read it in its entirety.  
 Checklist   
 Before LCTES:  
 Prepare and | practice | . 
  Ensure your talk runs for | no more than 15 minutes | . 
  Preparing Your Talk   
 Your work will have a greater impact if you’re well prepared.  
 It is very important that you run to schedule. The LCTES’23 schedule is extremely tight, with hard stops imposed by FCRC scheduling. Session chairs have been asked to stick rigidly to the schedule.  
 Guidelines   
 Your talk should run for no more than 16 minutes | , uninterrupted. This gives you about three minutes for questions and one minute for speaker change-over. 
 There are many excellent sources of advice on giving good talks, including from Simon Peyton Jones  , Michael Hicks  , Michael Ernst  , and Derek Dreyer  . Make good use of these!  
 Mandatory Video Check   
 All speakers are required to be in the room and check in with their session chair and the video team no later than 5 minutes before their session starts. Please note that due to our very tight schedule, speakers who fail to upload their talk in advance and/or fail to attend the video check 5 minutes before their session may have their talk cut short if technical issues arise  .  
 Q&A   
 If you stick to the above schedule you will have about 3 minutes for questions. The in-room audience will be able to ask questions via a queue at a single microphone on a mic stand in the center of the room. In-room attendees and remote attendees will also be able to ask questions via Discord. Your session chair will monitor questions on Discord and might ask questions as they see them appearing there.  
 Your talk will be streamed to Discord and YouTube with live captioning. Your remote audience will be able to write questions in the Discord channel created for your session (they won’t be able to ask questions via audio or video). They should see your slides, a video feed of you speaking, and live captions. As mentioned above, your session chair may relay questions from Discord.  
 Remote Presenters   
 LCTES’23 authors are expected to be present at the conference. If it is impossible for any of the authors to attend LCTES in person, please let the chairs know immediately.  
 Discord   
 We will use Discord as the virtual platform for this conference. You should familiarize yourself with Discord as an audience member well before your talk. We will use it for: a) the remote audience, b) delivery of remote talks, and c) communicating logistics.  
 Accessing Papers   
 PLDI papers are all open-access and available from the ACM Digital Library. Just follow the small “DOI” link in the PLDI schedule below the paper.  
 In-Person Attendees   
 The venue for PLDI’23 is Orlando World Center Marriott  .  
 Lunch and breakfast will be in Cypress 3, with the exception of Monday’s PLDI Awards Lunch, which will be held in Cypress 1.  
 Wi-Fi   
 FCRC provides wifi for the whole event. You should receive information on how to access it at the registration desk.  
 Discord   
 In-person attendees are warmly encouraged to use Discord (details below). You can use it to coordinate with colleagues, get updates on activities, and engage with authors via Q&A. You are very welcome to ask questions via each session’s text channel on Discord, before, during, and after the talk. If the session chair has time, they will ask the question on your behalf. Authors have been asked to check their channel for questions, so you can engage with the authors that way if not in person.  
 Virtual Attendees   
 Watching Talks (YouTube)   
 LCTES will be streamed to YouTube, and accessible to everyone (Tutorials are not streamed by our video team, but organizers may have made their own arrangements).  
 Each session will be streamed separately. The link to LCTES live stream will be visible at the top of the LCTES Discord channel and in the schedule.  
 We have paid for live subtitling of the main PLDI tracks.  
 Engaging in Q&A (Discord)   
 We encourage remote attendees to engage with talks via Discord (details below in the “Using Discord”  section).  
 Using Discord   
 As an affiliated conference, LCTES will use PLDI’s Discord server for virtual engagement. Discord is a social media platform that supports text, voice, and video chats. This section of the guide gives a brief overview of how we’ll use it and pointers to more general tips on how to use Discord.  
 Key information:  
 Our conference is completely | open and free for virtual attendees | , so our Discord server is open to everyone. 
 You first need to open user settings. At the lower left corner, you should see a small icon with your avatar and your Discord username, with a gear symbol to the right of it. If you click on the gear icon, it will open user settings.  
 On the left-hand side, you’ll see menu options. Select “Profiles”.  
 First, update your nickname. Under “Profiles”, select the “Server Profiles” tab, and ensure that the server is “PLDI 2023” under “Choose a server” like this  , and then edit your “Server Nickname” to be your preferred name, including your pronouns if you wish.  
 Next, update your avatar if you wish. Under “Profiles”, select “User Profile” and under “Avatar” select “Change Avatar”.  
 Click on the “X” at the top right to exit the user settings dialogue.  
 PLDI’s Discord Setup   
 The most important thing to know is that we’ll have a text channel for each session, and that’s the place to go to engage with the speakers at that session. You’ll find them listed under “PLDI MAIN TRACK”, “ISMM & LCTES”, and “WORKSHOPS AND TUTORIALS” respectively, as shown here  . You’ll see one channel per session for PLDI, ISMM, and LCTES and one per event for the workshops and tutorials.  
 We also have a number of other channels, including ones for general questions (#general) and for social events.  
  “How to Use Discord: A Beginner’s Guide” | by Marshall Gunnell of PCWorld. 
 Questions? Use the LCTES contact form  .    
 Important Dates   AoE (UTC-12h)     
 Mon 15 May 2023  
  Camera-ready deadline 
 Fri 12 May 2023  
  Artifact decision 
 Mon 1 May 2023  
  Artifact submission deadline 
 Mon 24 Apr 2023  
  Paper notification 
 Fri 24 Mar 2023  
  Paper submission deadline 
 Submission Link   
  PLDI 2023   
   Support page    
  SIGPLAN    
 Co-hosted Conferences  
 ISMM 2023   
  LCTES 2023   
  Workshops  
 ARRAY 2023   
  ASA 2023   
  CSC 2023   
  CTSTA 2023   
  DRAGSTERS 2023   
  EGRAPHS 2023   
  Infer 2023   
  PLARCH 2023   
  PLMW@PLDI 2023   
  SOAP 2023    
 Attending
8. LCTES_1 conference:
LCTES 2023: Proceedings of the 24th ACM SIGPLAN/SIGBED International Conference on Languages, Compilers, and Tools for Embedded Systems  
  Full Citation in the ACM Digital Library    
 SESSION: Keynote  
  Soner Onder 
  Gang-Ryung Uh 
  Implementation of a new instruction set architecture (ISA) is a non-trivial task that involves significant modifications to the system software, such as the compiler, the assembler, and the linker. This task also includes modifying and verifying functional and cycle accurate simulators to facilitate performance evaluation of programs under the new ISA. Isolating errors in these software components becomes extremely challenging and demands automated and semi-automated mechanisms since neither the compilation infrastructure nor the simulation infrastructure can be trusted as both parties have been heavily modified. Bootstrapping a new ISA is very common in embedded systems since there is a greater variety of embedded ISAs due to often not having a need to support backward compatibility of executables. In this paper, we present the tools and the verification mechanisms we have implemented to support the development of a number of related, but distinct ISAs. Our work in developing the system software and simulators for these ISAs demonstrate that a step-by-step semi-automated approach which relies on simple invariants can facilitate effective bootstrapping of the complete system software and the simulator infrastructure.  
 Synchronization-Aware NAS for an Efficient Collaborative Inference on Mobile Platforms   
  Sergey Pupyrev 
  Function layout, also known as function reordering or function placement, is one of the most effective profile-guided compiler optimizations. By reordering functions in a binary, compilers can improve the performance of large-scale applications or reduce the compressed size of mobile applications. Although the technique has been extensively studied in the context of large-scale binaries, no study has thoroughly investigated function layout algorithms on mobile applications.  
 In this paper we develop the first principled solution for optimizing function layouts in the mobile space. To this end, we identify two key optimization goals: reducing the compressed code size and improving the cold start-up time of a mobile application. Then we propose a formal model for the layout problem, whose objective closely matches our goals. Our novel algorithm for optimizing the layout is inspired by the classic balanced graph partitioning problem. We have carefully engineered and implemented the algorithm in an open-source compiler, LLVM. An extensive evaluation of the new method on large commercial mobile applications demonstrates significant improvements in start-up time and compressed size compared to the state-of-the-art approach.  
 Thread-Level Attack-Surface Reduction   
  Alain Girault 
  Alexandre Honorat 
  Many computing systems are constrained by their fixed amount of shared memory. Modeling applications with task or Synchronous DataFlow (SDF) graphs makes it possible to analyze and optimize their memory peak. The problem studied by this paper is the memory peak minimization of such graphs when scheduled sequentially. Regarding task graphs, former work has focused on the Series-Parallel Directed Acyclic Graph (SP-DAG) subclass and proposed techniques to find the optimal sequential algorithm w.r.t. memory peak. In this paper, we propose task graph transformations and an optimized branch and bound algorithm to solve the problem on a larger class of task graphs. The approach also applies to SDF graphs after converting them to task graphs. However, since that conversion may produce very large graphs, we also propose a new suboptimal method, similar to Partial Expansion Graphs, to reduce the problem size. We evaluate our approach on classic benchmarks, on which we always outperform the state-of-the-art.  
 PinIt: Influencing OS Scheduling via Compiler-Induced Affinities   
  Ada Gavrilovska 
  Santosh Pande 
  In multi-core machines, applications execute in a complex-co-execution environment in which the number of concurrently executing applications typically exceed the number of available cores. In order to fairly and efficiently utilize cores, modern operating systems (OS) such as Linux migrate threads between cores during execution. Although such thread migrations alleviate the problem of stalling and load balancing yielding better core utilization, they also tend to destroy data locality, resulting in fewer cache hits, TLB hits, and thus performance loss for the group of applications collectively. This problem is especially severe in embedded servers which execute media and vision applications that exhibit high data locality. One one hand, mitigating this problem across a group of applications based on OS only solution is infeasible since OS treats applications as blackboxes and has no knowledge of its locality and other behavior. On the other hand, to-date, compiler optimization have focused on analysis, transformations and performance enhancement of applications in isolation ignoring the problem of optimizing performance for applications as a group. This is because of the infeasibility of global-compiler analysis across applications as well as due to the dynamic nature of inter-application interactions which is statically unknown.  
 Towards Secure MicroPython on Morello (WIP)   
 Jeremy Singer 
  The Arm Morello platform is a prototype system that supports hardware capabilities for improving runtime security. Although Morello is a server class compute component, there is ongoing work aimed at bringing architectural capabilities to embedded scale devices. For this reason, we are porting the MicroPython framework to Morello. Our intention is to understand the impact of hardware capabilities on lightweight runtime execution environments, like MicroPython, that target embedded devices. In this work-in-progress report, we describe the minimal modifications required to compile the C source code of MicroPython for Morello. We show that this approach gives a working, but not necessarily more secure, version of MicroPython. Our paper proceeds to outline how capabilities could be used to improve runtime system security for MicroPython runtime and hosted applications.  
 Tiling for DMA-Based Hardware Accelerators (WIP)
9. LCTES_3 conference:
LCTES 2023   
 This site requires JavaScript.  Your browser does not support JavaScript.  
 Sign in    
  Submissions  
 The deadline  for registering submissions has passed.  
 HotCRP
10. LDK_0 conference:
Skip to content    LDK 2023   
 12-15 September in Vienna, Austria  
 Menu  About | Ethics and Integrity 
  Program Committee 
 LDK 2023 – 4th Conference on Language, Data and Knowledge  
 ABOUT  
  Find out more about LDK 2023  
 Call for Papers  
  Submit a paper or abstract  
 Programme  
  Program Committee 
 LDK 2023   Proudly powered by WordPress

output:1. LATA_3 information:
2. LATIN_0 information:
3. LATIN_2 information:
4. LCN_1 information:
5. LCN_2 information:
6. LCN_3 information:
7. LCTES_0 information:
8. LCTES_1 information:
9. LCTES_3 information:
10. LDK_0 information:
