input:
1. AAMAS_0 conference:
Toggle Navigation      AAMAS 2023   
 Home 
  News 
  Calls | Submission Instructions 
  Call for Papers 
  Call for Workshops 
  Competitions 
  Code of Conduct 
  Awards | Influential Paper Award 
  ACM SIGAI Autonomous Agents Research Award 
  Victor Lesser Dissertation Award 
  Best Paper and Demo Awards 
  Registration | Registration Instructions 
  Organisation | Organising Committee 
  Proceedings 
 The 22nd International Conference on Autonomous Agents and Multiagent Systems  London, 29 May-2 June 2023       
 Welcome to AAMAS 2023  Welcome to AAMAS 2023  
 Download the AAMAS 2023 Booklet   
 See the agenda on the Whova web app  or download the Whova mobile app   
 Proceedings now avaiable  
 30 May 2023   
 The AAMAS 2023 Proceedings  are now available.  
  Whova now live  
 16 May 2023   
 Use the conference app Whova for the up to date agenda, announcements, asking questions to the organisers, getting to know the community and more.  
  Accommodation Update  
 12 May 2023   
 Two new hotels have been added to the Hotels  page for those still looking for accommodation, with a special discount for AAMAS attendees.  
  click here for more news stories   
  The 22nd International Conference on Autonomous Agents and Multiagent Systems (AAMAS) will be in person and take place 29 May – 2 June 2023 in the London ExCeL conference centre, London, United Kingdom  .  
 AAMAS is the largest and most influential conference in the area of agents and multiagent systems, bringing together researchers and practitioners in all areas of agent technology and providing and internationally renowned high-profile forum for publishing and finding out about the latest developments in the field. AAMAS is the flagship conference of the non-profit International Foundation for Autonomous Agents and Multiagent Systems  (IFAAMAS).  
 Download the AAMAS 2023 poster   
 Contact the local chairs at aamas2023@soton.ac.uk   
 Important Dates  
 Abstract submission: | 21 October 2022 
  Paper submission: | 28 October 2022 
  Rebuttal period: | 5-9 December 2022 
  Author notification: | 4 January 2023 
  Registration opens: | early February 2023 
  Camera-ready paper submission: | 1 March 2023 
  Conference: | 29 May - 2 June 2023 
 Tweets by aamas2023   
 © 2024 AAMAS 2023 | Powered by Outstandingthemes
2. AAMAS_2 conference:
Conference: International Joint Conference on Autonomous Agents and Multiagent Systems  
 Number of publications: 27  2024  
 Stanisław Kaźmierowski, Marcin Dziubiński  , Efficient Method for Finding Optimal Strategies in Chopstick Auctions with Uniform Objects Values   , 23rd International Conference on Autonomous Agents and Multiagent Systems  , Auckland, New Zealand, 6 May 2024 - 10 May 2024. | See in PBN 
  Mathieu Mari Michał Pawłowski Runtian Ren, Piotr Sankowski  , Multi-level Aggregation with Delays and Stochastic Arrivals   , 23rd International Conference on Autonomous Agents and Multiagent Systems  , Auckland, New Zealand, 6 May 2024 - 10 May 2024. | See in PBN 
  Piotr Faliszewski, Łukasz Janeczko Andrzej Kaczmarczyk Grzegorz Lisowski, Piotr Skowron  , Stanisław Szufa, Strategic Cost Selection in Participatory Budgeting   , 23rd International Conference on Autonomous Agents and Multiagent Systems  , Auckland, New Zealand, 6 May 2024 - 10 May 2024. | See in PBN 
  2023  
 Michał Godziszewski, Tomasz Michalak  , Yevgeniy Vorobeychik, Adversarial Link Prediction in Spatial Networks   , The 22nd International Conference on Autonomous Agents and Multiagent Systems  , London, the United Kingdom of Great Britain and Northern Ireland, 29 May 2023 - 2 June 2023. | See in PBN 
  Wiktoria Kośny, Oskar Skibski  , Axiomatic Analysis of Medial Centrality Measures   , The 22nd International Conference on Autonomous Agents and Multiagent Systems  , London, the United Kingdom of Great Britain and Northern Ireland, 29 May 2023 - 2 June 2023. | See in PBN 
  Mathieu Mari  , Michał Pawłowski Runtian Ren, Piotr Sankowski  , Online Matching with Delays and Stochastic Arrival Times   , The 22nd International Conference on Autonomous Agents and Multiagent Systems  , London, the United Kingdom of Great Britain and Northern Ireland, 29 May 2023 - 2 June 2023. | See in PBN 
  Andrzej Nagórko  , Paweł Ciosmak, Tomasz Michalak  , Two-phase Security Games   , The 22nd International Conference on Autonomous Agents and Multiagent Systems  , London, the United Kingdom of Great Britain and Northern Ireland, 29 May 2023 - 2 June 2023. | See in PBN 
  2022  
 Lennart Brocki Wistan Marchadour Jonas Maison Bogdan Badic Panagiotis Papadimitroulas Mathieu Hatt Franck Vermet, Neo Christopher Chung  , Evaluation of Importance Estimators in Deep Learning Classifiers for Computed Tomography   , 21st International Conference on Autonomous Agents and Multiagent Systems  , Auckland, New Zealand, 11 May 2022 - 13 May 2022. | See in PBN 
  Dongge Han Chris Xiaoxuan, Tomasz Michalak  , MIchael Wooldridge, Multiagent Model-based Credit Assignment for Continuous Control   , 21st International Conference on Autonomous Agents and Multiagent Systems  , Auckland, New Zealand, 11 May 2022 - 13 May 2022. | See in PBN 
  Michał Zawalski  , Błażej Osiński, Henryk Michalewski  , Piotr Miłoś  , Off-Policy Correction For Multi-Agent Reinforcement Learning   , 21st International Conference on Autonomous Agents and Multiagent Systems  , Auckland, New Zealand, 11 May 2022 - 13 May 2022. | See in PBN
3. AAMAS_3 conference:
Awards 
  Previous AAMAS Conferences 
  AAMAS Proceedings 
  Related Conferences and Schools 
  IFAAMAS Committees 
  In Memoriam | The International Foundation for Autonomous Agents and Multiagent Systems (IFAAMAS) is a non-profit organization whose purpose is to promote science and technology in the areas of artificial intelligence, autonomous agents and multiagent systems.   
   IFAAMAS   sponsors the annual International Conference on Autonomous Agents and Multiagent Systems (AAMAS).
4. ABZ_0 conference:
Modeling Distributed Algorithms by Abstract State Machines Compared to Petri Nets    
 Conference Paper    
 A Universal Control Construct for Abstract State Machines    
 Conference Paper    
 Conference Paper    
 This paper presents an encoding of a non-temporal fragment of the \({\textsc {TLA}} ^{{+}}\) language, which includes untyped set theory, functions, arithmetic expressions, and Hilbert’s \(\varepsilon \) operator, into many-sorted first-order logic, the input language of state-of-the-art smt solvers. This translation, based on encoding techniques such as boolification, injection of unsorted expressions into sorted languages, term rewriting, and abstraction, is the core component of a back-end prover based on smt solvers for the \({\textsc {TLA}} ^{{+}}\) Proof System.   
 Proving Determinacy of the PharOS Real-Time Operating System    
 Full-text available    
 Conference Paper    
 A Rigorous Correctness Proof for Pastry    
 Conference Paper    
 Peer-to-peer protocols for maintaining distributed hash tables, such as Pastry or Chord, have become popular for a class of Internet applications. While such protocols promise certain properties concerning correctness and performance, verification attempts using formal methods invariably discover border cases that violate some of those guarantees. Tianxiang Lu reported correctness problems in published versions of Pastry and also developed a model, which he called LuPastry, for which he provided a partial proof of correct delivery assuming no node departures, mechanized in the TLA\(^+\) Proof System. Lu’s proof is based on certain assumptions that were left unproven. We found counter-examples to several of these assumptions. In this paper, we present a revised model and rigorous proof of correct delivery, which we call LuPastry\(^+\). Aside from being the first complete proof, LuPastry\(^+\) also improves upon Lu’s work by reformulating parts of the specification in such a way that the reasoning complexity is confined to a small part of the proof.   
 Enabling Analysis for Event-B    
 Full-text available    
 Conference Paper    
 In this paper we present a static analysis to determine how events influence each other in Event-B models. The analysis, called an enabling analysis, uses syntactic and constraint-based techniques to compute the effect of executing one event on the guards of another event. We describe the foundations of the approach along with the realisation in ProB. The output of the analysis can help a user to understand the control flow of a formal model. Additionally, we discuss how the information of the enabling analysis can be used to obtain a new optimised model checking algorithm. We evaluate both the performance of the enabling analysis and the new model checking technique on a variety of models. The technique is also applicable to B, TLA + , and Z models.   
 A Compact Encoding of Sequential ASMs in Event-B    
 Conference Paper    
 We present a translation of sequential ASMs to Event-B specifications. The translation also addresses the partial update problem, and allows a variable to be updated (consistently) in parallel. On the theoretical side, the translation highlights the intricacies of ASM rule execution in terms of Event-B semantics. On the practical side, we show on a series of examples that the Event-B encoding remains compact and is amenable to proof within Rodin as well as animation and model checking using ProB.   
 Proof Assisted Symbolic Model Checking for B and Event-B    
 Conference Paper    
 We have implemented various symbolic model checking algorithms, like BMC, k-Induction and IC3 for B and Event-B. The high-level nature of B and Event-B accounts for complicated constraints arising in these symbolic analysis techniques. In this paper we suggest using static information stemming from proof obligations to simplify occurring constraints. We show how to include proof information in the aforementioned algorithms. Using different benchmarks we compare explicit state to symbolic model checking as well as techniques with and without proof assistance. In particular for models with large branching factor, e.g., due to complicated data values being manipulated, the symbolic techniques fare much better than explicit state model checking. The inclusion of proof information results in further clear performance improvements.   
 On Component-Based Reuse for Event-B    
 Conference Paper    
 Efficient reuse is a goal of many software engineering strategies and is useful in the safety-critical domain where formal development is required. Event-B can be used to develop safety-critical systems, but could be improved by a component-based reuse strategy. In this paper, we outline a component-based reuse methodology for Event-B. It provides a means for bottom-up scalability, and can also be used with the existing top-down approach. We describe the process of creating library components , their composition, and specification of new properties (involving the composed elements). We introduce Event-B component interfaces and propose to use a diagrammatic representation of component instances (based on iUML-B) which can be used to describe the relationships between the composed elements. We also discuss the specification of communication flow across component boundaries and describe the additional proof obligations that are required.   
 Using B and ProB for Data Validation Projects    
 Conference Paper    
 Constraint satisfaction and data validation problems can be expressed very elegantly in state-based formal methods such as B. However, is B suited for developing larger applications and are there existing tools that scale for these projects? In this paper, we present our experiences on two real-world data validation projects from different domains which are based on the B language and use ProB as the central validation tool. The first project is the validation of university timetables, and the second project is the validation of railway topologies. Based on these two projects, we present a general structure of a data validation project in B and outline common challenges along with various solutions. We also discuss possible evolutions of the B language to make it (even) more suitable for such projects.   
 1  Recommendation 
 Generating Event-B Specifications from Algorithm Descriptions    
 Conference Paper    
 We present a high-level algorithm description language which is translated to Event-B specifications for simulation, model checking and proof. Rather than trying to recover the program structure from a lower-level Event-B specification, we start with a high-level description of the algorithm. Our goals are more tractable code generation and more convenient modelling, while keeping the power of the Event-B method in terms of proof and refinement. We present various examples of algorithm descriptions and show that our translation ensures that they can be completely proven within Rodin while achieving a high-level of automatic proof.   
 Formal Proofs of Termination Detection for Local Computations by Refinement-Based Compositions    
 Conference Paper    
 In this paper, we propose a formal framework enhancing the termination detection property of distributed algorithms and reusing their specifications as well as their proofs. By relying on refinement and composition, we show that an algorithm specified with local termination detection, can be reused in order to compute the same algorithm with global termination detection. The main idea relies upon the development of distributed algorithms following a top/down approach and the integration of additional computation steps developed in a pre-defined module. This module is specified in a generic and scalable way in order to be composed with particular developments. Once the composition link is proven, the global termination emerges automatically.   
 How to Select the Suitable Formal Method for an Industrial Application: A Survey    
 Conference Paper    
 The share of formal methods is still marginal in contemporary systems and software engineering. One of the reasons is the absence of systematic guidelines and evaluation criteria that help software practitioners choose the right formal method for the problem at hand. In this paper, we present a comprehensive set of criteria, based on a systematic literature review and decade-long personal experience in industrial projects, for evaluating and comparing different formal methods. We argue that besides technical grounds (e.g., modeling capabilities and supported development phases), formal methods should also be evaluated from social and industrial perspectives. At the end of the paper, we present an evaluation of “ABZ” methods based on the stipulated criteria.   
 Unified Syntax for Abstract State Machines    
 Conference Paper    
 The paper presents our efforts in defining UASM, a unified syntax for Abstract State Machines (ASMs), based on the syntaxes of two of the main ASM frameworks, CoreASM and ASMETA, which have been adapted to accept UASM as input syntax of all their validation and verification tools.   
 A Relational Encoding for a Clash-Free Subset of ASMs    
 Conference Paper    
 This paper defines a static check for clash-freedom of ASM rules, including sequential and parallel composition, nondeterministic choice, and recursion. The check computes a formula that, if provable, makes a relational encoding of ASM rules possible, which is an important prerequisite for efficient deduction. The check is general enough to cover all sequential rules as well as many typical uses of parallel composition.   
 Towards an ASM Thesis for Reflective Sequential Algorithms    
 Full-text available    
 Conference Paper    
 A Model-Based Transformation Approach to Reuse and Retarget CASM Specifications    
 Conference Paper    
 The Abstract State Machine (ASM) theory is a way to specify algorithms, applications and systems in a formal model. Recent ASM languages and tools address either the translation of ASM specifications to a specific target programming language or aim at the execution in a specific environment. In this work-in-progress paper we outline a model-based transformation approach supporting (1) the specification of applications or systems using the Corinthian Abstract State Machine (CASM) modeling language and (2) retargeting those applications to different programming language and hardware target domains. An intermediate model is introduced, which not only captures software-based implementations, but also the generation of hardware-related code in the same model. This approach offers a new formal modeling perspective onto modular, reusable and retargetable software and hardware designs for the development of embedded systems. We provide a short overview of our CASM compiler design as well as the retargetable model-based approach to generate code for different target domains.   
 Modeling a Discrete Wet-Dry Algorithm for Hurricane Storm Surge in Alloy    
 Conference Paper    
 ‘The Tinker’ for Rodin    
 Conference Paper    
 PSGraph [3] is a graphical proof strategy language, which uses the formalisation of labelled hierarchical graphs to provide support for the development and maintenance of large and complex proof tactics. PSGraph has been implemented as the Tinker system, which previously supported the Isabelle and ProofPower theorem provers [4]. In this paper we present a Rodin version of Tinker, which allows Rodin users to encode, analyse and debug their proof strategies in Tinker.   
 A Graphical Tool for Event Refinement Structures in Event-B    
 Full-text available    
 Conference Paper    
 The Event Refinement Structures (ERS) approach provides a graphical extension of the Event-B formal method to represent event decomposition and control-flow explicitly. In this paper we present an improved version of the ERS plug-in, which provides a graphical environment for the ERS approach within the Event-B tool, Rodin. The improved ERS plug-in is based on the available frameworks that are developed to support Event-B with an EMF framework, language extensions and generic diagram extensions.   
 Rodin Platform Why3 Plug-In    
 Conference Paper    
 Semi-Automated Design Space Exploration for Formal Modelling    
 Conference Paper    
 Refinement based formal methods allow the modelling of systems through incremental steps via abstraction. Discovering the right levels of abstraction, formulating correct and meaningful invariants, and analysing faulty models are some of the challenges faced when using this technique. Here, we propose Design Space Exploration, an approach that aims to assist a designer by automatically providing high-level modelling guidance in real-time. More specifically, through the combination of common patterns of modelling with techniques from automated theory formation and automated reasoning, different design alternatives are explored and suitable models that deal with faults are proposed.   
 Handling Continuous Functions in Hybrid Systems Reconfigurations: A Formal Event-B Development    
 Conference Paper    
 This paper presents a substitution mechanism for systems having a continuous behavior. It shall preserve the safety property stating that the output of both systems remain in a safety envelope. The whole approach is formalized using Event-B, and relies on the Rodin tools and a theory of Reals provided by the Rodin Theory Plug-in to check the internal consistency with respect to safety properties, invariants and events.   
 UC-B: Use Case Modelling with Event-B    
 Conference Paper    
 Use cases are a popular but informal technique used to define and analyse system behaviour. We introduce UC-B a plug-in for the Rodin platform (Event-B tool) that supports the authoring and management of use case specifications with both informal and formal components. The formal component is based on Event-B’s mathematical language. Once the behaviour of the use case is specified, UC-B automatically generates a corresponding Event-B model. The resulting model is then amenable to the Rodin verification tools that enable system level properties to be verified. By underpinning informal use case modelling with Event-B we are able to provide greater precision and formal assurance during the early stages of design.   
 Interactive Model Repair by Synthesis    
 Conference Paper    
 SysML2B: Automatic Tool for B Project Graphical Architecture Design Using SysML    
 Conference Paper    
 Conference Paper    
 A Super Industrial Application of PSGraph    
 Conference Paper    
 The ClawZ toolset has been successful in verifying that Ada code is correctly generated from Simulink models in an industrial setting, using the Z notation. D-RisQ is now extending this technique to new domains of the C programming language, which requires changes to their highly complex proof technique. In this paper, we present initial results in the technology transfer of the graphical PSGraph language to support this extension, and show feasibility of PSGraph for industrial use with strong maintainability requirements.   
 The Hemodialysis Machine Case Study    
 Full-text available    
 Conference Paper    
 How to Assure Correctness and Safety of Medical Software: The Hemodialysis Machine Case Study    
 Conference Paper    
 Medical devices are nowadays more and more software dependent, and software malfunctioning can lead to injuries or death for patients. Several standards have been proposed for the development and the validation of medical devices, but they establish general guidelines on the use of common software engineering activities without any indication regarding methods and techniques to assure safety and reliability. This paper takes advantage of the Hemodialysis machine case study to present a formal development process supporting most of the engineering activities required by the standards, and provides rigorous approaches for system validation and verification. The process is based on the Abstract State Machine formal method and its model refinement principle.   
 Validating the Requirements and Design of a Hemodialysis Machine Using iUML-B, BMotion Studio, and Co-Simulation    
 Conference Paper    
 We present a formal specification of a hemodialysis machine (HD machine) using Event-B. We model the HD machine using iUML-B state-machines and class diagrams and build a corresponding BMotion Studio visualisation. We focus on validation using (i) diagrams to aid the modelling of the sequential properties of the requirements, and (ii) ProB-based animation and visualisation tools to explore the system’s behaviour. Some of the safety properties involve dynamic behaviour which is difficult to verify in Event-B. For these properties we use co-simulation tools to validate against a continuous model of the physical behaviour.   
 Hemodialysis Machine in Hybrid Event-B    
 Conference Paper    
 The hemodialysis machine case study is examined in Hybrid Event-B (an extension of Event-B that includes provision for continuously varying behaviour as well as the usual discrete changes of state). A broadly component based strategy is adopted, using the multi-machine and coordination facilities of Hybrid Event-B. Since, like most medical procedures, hemodialysis is under overall human control, it is largely a sequential process, with some branching to deal with exceptional circumstances. This makes for a relatively uncomplicated modelling framework, provided a model of the operator is included in order to capture the handling of exceptions.   
 Modelling a Hemodialysis Machine Using Algebraic State-Transition Diagrams and B-like Methods    
 Full-text available    
 Conference Paper    
 This paper presents the specification of the hemodialysis case study, proposed by ABZ’16 conference. The specification was carried out by a coupling of Algebraic State-Transition Diagrams (astd) and B-like methods. astd are a graphical notation, based on automata and process algebra operators. They provide an easy-to-read specification of the dynamic behaviour of the system. The data model is specified using the Event-B language. The system is incrementally designed using extended refinement of both methods.   
 Modelling the Haemodialysis Machine with Circus    
 Full-text available    
 Conference Paper    
 Wolfgang Schreiner 
 The RISC Algorithm Language (RISCAL) is a language for the formal modeling of theories and algorithms. A RISCAL specification describes an infinite class of models each of which has finite size; this allows to fully automatically check in such a model the validity of all theorems and the correctness of all algorithms. RISCAL thus enables us to quickly verify/falsify the specific truth of propositions in sample instances of a model class before attempting to prove their general truth in the whole class: the first can be achieved in a fully automatic way while the second typically requires our assistance. RISCAL has been mainly developed for educational purposes. To this end this paper reports on some new enhancements of the tool: the automatic generation of checkable verification conditions from algorithms, the visualization of the execution of procedures and the evaluation of formulas illustrating the computation of their results, and the generation of Web-based student exercises and assignments from RISCAL specifications. Furthermore, we report on our first experience with RISCAL in the teaching of courses on logic and formal methods and on further plans to use this tool to enhance formal education.    
 View     
  Atif Mashkoor 
 The use of formal methods is often recommended to guarantee the provision of necessary services and to assess the correctness of critical properties, such as functional safety, cybersecurity, and reliability, in medical and health care devices. In the past, several formal and rigorous methods have been proposed and consequently applied for trustworthy development of medical software and systems. In this paper, we perform a systematic literature review on the available state of the art in this domain. We collect the relevant literature on the use of formal methods for modeling, design, development, verification, and validation of software-intensive medical systems. We apply standard systematic literature review techniques and run several queries in well-known repositories to obtain information that can be useful for people who are either already working in this field or planning to start. Our study covers both quantitative and qualitative aspects of the subject.    
 View     
 Enrico Tronci 
  We present a case study on automatic synthesis of control software from formal specifications for an industrial automation control system. Our aim is to compare the effectiveness (i.e. design effort and controller quality) of automatic controller synthesis from closed loop formal specifications with that of manual controller design followed by automatic verification. The system to be controlled ... [Show full abstract]  (plant) models a metal processing facility near Karlsruhe. We succeeded in automatically generating C code implementing a (correct by construction) embedded controller for such a plant from closed loop formal specifications. Our experimental results show that for industrial automation control systems automatic synthesis is a viable and profitable (especially as far as design effort is concerned) alternative to manual design followed by automatic verification. Key Words Formal Methods, Model Checking, Control Systems, Finite State Systems, Reactive Systems, Hybrid Systems, Discrete Event Systems...    
 View full-text    
 Read more    
 Conference Paper    
 The Symbolic Approach to Hybrid Systems   
 Read more    
 Conference Paper    
 Full-text available    
  [...] 
  Boris Wirtz 
  We address the problem of model checking hybrid systems which exhibit nontrivial discrete behavior and thus cannot be treated by considering the discrete states one by one, as most currently available verification tools do. Our procedure relies on a deep integration of several techniques and tools. An extension of AND-Inverter-Graphs (AIGs) with first-order constraints serves as a compact ... [Show full abstract]  representation format for sets of configurations which are composed of continuous regions and discrete states. Boolean reasoning on the AIGs is complemented by first-order reasoning in various forms and on various levels. These include implication checks for simple constraints, test vector generation for fast inequality checks of boolean combinations of constraints, and an exact subsumption check for representations of two configurations. These techniques are integrated within a model checker for universal CTL. Technically, it deals with discrete-time hybrid systems with linear differentials. The paper presents the approach, its prototype implementation, and first experimental data.    
 View full-text    
 Ansgar Fehnker 
  Bruce H. Krogh 
  Though model checking itself is a fully automated process, verifying correctness of a hybrid system design using model checking is not. This paper describes the necessary steps, and choices to be made, to go from an informal description of the problem to the final verification result for a formal model and requirement. It uses an automotive control system for illustration.   
 View full-text    
 Conference Paper    
 Full-text available    
 Ansgar Fehnker 
  Bruce H. Krogh 
  Though model checking itself is a fully automated process, verifyingcorrectness of a hybrid system design using model checking is not. This paperdescribes the necessary steps, and choices to be made, to go from an informaldescription of the problem to the final verification result for a formal model andrequirement. It uses an automotive control system for illustration.   
 View full-text    
  [...] 
  João Edgar Filho 
  A verification methodology is described and evaluated to formally determine uncertain linear systems stability in digital controllers with considerations to the implementation aspects. In particular, this methodology is combined with the digital-system verifier (DSVerifier), which is a verification tool that employs Bounded Model Checking based on Satisfiability Modulo Theories to check the ... [Show full abstract]  stability of digital control systems with uncertainty. DSVerifier determines the control system stability, considering all the plant interval variation set, together with the Finite Word-length (FWL) effects in the digital controller implementation; DSVerifier checks the robust non-fragile stability of a given closed-loop system. The proposed methodology and respective tool are evaluated considering non-fragile control examples from literature. Experimental results show that the approach used in this study is able to foresee fragility problems in robust controllers, which could be overlooked by other existing approaches due to underestimating of FWL effects.    
 Read more    
 Conference Paper    
 Statistical Model Checking for Safety Critical Hybrid Systems: An Empirical Evaluation   
  Moonzoo Kim 
  Tai-Hyo Kim 
  As more computing systems are utilized in various areas of our society, the reliability of computing systems becomes a significant issue. However, as the complexity of computing systems increases, conventional verification and validation techniques such as testing and model checking have limitations to assess reliability of complex safety critical systems. Such systems often control highly ... [Show full abstract]  complex continuous dynamics to interact with physical environments. To assure the reliability of safety critical hybrid systems, statistical model checking (SMC) techniques have been proposed. SMC techniques approximately compute probabilities for a target system to satisfy given requirements based on randomly sampled execution traces. In this paper, we empirically evaluated four state-ofthe- art SMC techniques on a fault-tolerant fuel control system in the automobile domain. Through the experiments, we could demonstrate that SMC is practically useful to assure the reliability of a safety critical hybrid system and we compared pros and cons of the four different SMC techniques.    
 Read more    
  John W. Baugh 
  Rance Cleaveland 
  In this paper we describe complementary approaches that can be used to ensure the reliability of real-time systems, such as those used in active structural control systems. These approaches include both model-checking and simulation, and are based on a temporal process algebra. We combine these formal methods with a high-level, graphical modeling technique, Modechart, to specify an active ... [Show full abstract]  structural control system consisting of several processors. Timing requirements on the system are specified and verified with a combination of process algebraic models and modal logic, and various simulation concepts are described for debugging models and for gaining insight into system behavior.    
 Read more    
 Jang-Soo Lee 
  Although modern control theories have been successfully applied in solving a variety of problems, they are often mathematically and physically too specific to describe and analyze qualitative properties of hybrid real-time systems. In this paper, we propose to use qualitative formal methods, Compositional Modeling Language (CML) and Causal Functional Representation Language (CFRL) in particular, ... [Show full abstract]  to specify continuous plant dynamics and the required system behavior and to simulate system behavior using a qualitative simulator known as the Device Modeling Environment (DME). Using Electrical Power System (EPS) as an example, we demonstrate effectiveness of our approach by illustrating how a simple SCR-style specification can be transformed and analyzed.    
 Read more    
 View full-text    
 Last Updated: 22 Oct 2024    
 Looking for the full-text?
5. ABZ_1 conference:
Search for:    Search 
 Welcome to ABZ 2023!  
   The ABZ conference is dedicated to the cross-fertilization of state-based and machine-based formal methods, like Abstract State Machines (ASM), Alloy, B, TLA, VDM and Z, that share a common conceptual foundation and are widely used in both academia and industry for the design and analysis of hardware and software systems. The conference aims for a vital exchange of knowledge and experience among the research communities around different formal methods.  
 Past editions  
  ABZ 2023 is sponsored by LORIA, Université de Lorraine, Métropole du Grand Nancy, GDR CNRS GPL , Systerel.  
 One Comment   
 Key Dates | Workshops/Tutorials   
  Workshop proposal submission: November 01, 2022  
  Workshop notification: November 15, 2022  
 Tutorial proposal submission: February 16, 2023  
  ______________  
  Case Study Track (new dates for extension)  
  Abstract submission (optional):  January 06, 2023  
  Paper submission:  January 23, 2023  
  Notification:  March 06, 2023  
  Final version:  March 27, 2023  
  ______________  
 Main Track   
 Abstract submission (optional) : January 16, 2023  
  Paper submission: January 30, 2023   
  (including research/short/industry papers/journal-first)   
  Notification: March 6, 2023  
  Final version: March 27, 2023  
 _____________  
  Doctoral Symposium   
 Paper submission: January 30, 2023   
  Notification: March 6, 2023  
  Final version: March 27, 2023  
 ____________  
  Conference   
 Wopfkshops and Tutorials : May 30, 2023  
  ABZ 2023 conference: May 31-June 02, 2023 
 Supported by
6. ABZ_2 conference:
Conference  International Conference on Abstract State Machines, Alloy, B, TLA, VDM, and Z  
  About:  한국식품조리과학회 학술발표논문집 is an academic conference. The conference publishes majorly in the area(s): Computer science & Engineering..   
 ...read more  read less    
 [...]  
 01 Jan 2023    -  Lecture Notes in Computer Science    
  TL;DR:  In this paper , the authors present a safety critical interactive system called AMAN (Arrival Manager), which is a partly-autonomous scheduler of landing sequences of aircraft in airports.   
 ...read more  read less    
  Abstract:  This document presents the case study for the ABZ 2023 conference. The case study introduces a safety critical interactive system called AMAN (Arrival MANager), which is a partly-autonomous scheduler of landing sequences of aircraft in airports. This interactive systems interleaves Air Traffic Controllers activities with automation in AMAN. While some AMAN systems are currently deployed in airports, we consider here only a subset of functions which represent a challenge in modelling and verification.   
 ...read more  read less    
 Go to Paper       
 2  citations  
   Peter Riviere   , Neeraj Kumar Singh   , Yamine Aït-Ameur   , Guillaume Dupont     
 01 Jan 2023    -  Lecture Notes in Computer Science    
  TL;DR:  In this article , the EB4EB framework is extended to support new system analysis mechanisms associated to properties that are not natively present in Event-B. This methodology is used to define three analyses: deadlock-freeness, invariant weakness analysis and reachability.   
 ...read more  read less    
  Abstract:  Event-B is a state-based correct-by-construction system design formal method relying on proof and refinement where system models are expressed using set theory and First Order Logic (FOL). Through the generation and discharging of proof obligations (POs), Event-B natively supports the establishment of properties such as safety invariant, convergence and refinement. Other properties, relevant to system verification, may be studied as well, but need to be explicitly formalised by the designer, or expressed in another formal method. This process compromises reusability and is error-prone, especially on larger systems. Recently, the reflexive EB4EB framework has been proposed for formalising Event-B concepts as first-class objects. It allows manipulating these concepts using FOL and set theory in Event-B. In this paper, we propose a rigorous methodology for extending the EB4EB framework, to support new system analysis mechanisms associated to properties that are not natively present in core Event-B. Thanks to the reflexive nature of this framework, new generic and reusable system properties and their associated POs are expressed once and for all, and for any refinement level. For specific systems, designers instantiate these properties and the associated POs are automatically generated and submitted to Event-B’s provers. This methodology is used to define three analyses: deadlock-freeness, invariant weakness analysis and reachability, all of which are demonstrated on a case study.   
 ...read more  read less    
     PDF   Go to Paper       
 1  citations  
   Diego de Azevedo Oliveira   , Marc Frappier     
 01 Jan 2023    -  Lecture Notes in Computer Science    
  TL;DR:  In this article , a case study track was proposed to model an Adaptive Exterior Light System and a Speed Control System, where the former controls different exterior lights of a vehicle while the latter controls the speed of the vehicle.   
 ...read more  read less    
 Go to Paper       
 1  citations  
   Amel Mammar   , Michael Leuschel     
 01 Jan 2023    -  Lecture Notes in Computer Science    
  TL;DR:  In this paper , the authors present an Event-B model of the AMAN system, the case study provided by the ABZ'23 conference, which includes two parts: an autonomous part which predicts the arrival time of an aircraft from external sources (flight plan information, radar and weather information, etc.).   
 ...read more  read less    
  Abstract:  The present paper describes an Event-B model of the Arrival MANager system (called AMAN), the case study provided by the ABZ’23 conference. The goal of this safety critical interactive system is to schedule the arrival times of aircraft at airports. This system includes two parts: an autonomous part which predicts the arrival time of an aircraft from external sources (flight plan information, radar and weather information, etc.) and an interface part that permits to the Air Traffic Controller (ATCo) to submit requests to AMAN like changes regarding the arrival times of aircraft. To formally model and verify this critical system, we use a correct-by-construction approach with the Event-B formal method and its refinement process. We mainly consider functional features of the case study; all proof obligations have been discharged using the provers of the Rodin platform under which we carried out our development. To help users understand how AMAN works and its main functionalities, a visualisation of the Event-B models was achieved using the VisB component of ProB. Our models have been validated using ProB by applying scenarios related to different functional aspects of the system.   
 ...read more  read less    
 Go to Paper       
 1  citations  
   Sebastian Stock   , Fabian Vu   , David Geleßus   , Michael Leuschel   , Atif Mashkoor   , Alexander Egyed   - Show less  +2 more     
 01 Jan 2023    -  Lecture Notes in Computer Science    
  TL;DR:  In this article , the authors propose a triptych framework to simplify a complex model by abstracting away the noise, i.e., removing the information unrelated to properties under analysis.   
 ...read more  read less    
  Abstract:  While refinement can help structure the modeling and proving process, it also forces the modeler to introduce features in a particular order. This means that features deeper in the refinement chain cannot be validated in isolation, making some reasoning unnecessarily intricate. In this paper, we present the AVoiR (Abstraction-Validation Obligation-Refinement) framework to ease validation of such complex refinement chains. The triptych AVoiR framework operates as follows: 1) We first simplify a complex model by abstracting away the noise, i.e., removing the information unrelated to properties under analysis. 2) Using the Validation Obligations (VOs) technique, we formalize the validation tasks of the desired property. 3) Finally, we trickle down the validation results by establishing the noiseless model as a parent of the initially investigated model through the standard refinement relationship. Furthermore, by using the technique of VO refinement, we establish the VOs of the abstract model on the initial model. We use a case study from the aviation domain to show the proposed framework’s effectiveness.   
 ...read more  read less    
 Go to Paper       
 1  citations  
 Year | Papers 
 2023 | 30 
 Tools    Chat with PDF  Literature Review  AI Writer  Find Topics  Paraphraser  Citation Generator  Extract Data  AI Detector  Citation Booster
7. ABZ_3 conference:
Installing LaTex in Ubuntu     
 What is Impact Factor? How it is calculated?     
 Tips for writing a good research paper     
 What is H-index?     
 How to install LaTex in Windows     
 "Research is creating new knowledge." -Neil Armstrong  
  ABZ Ranking and Rating Metrics   
 Conference Rank/Ranking: | C 
  Star rating based on conference ranking: 
  Conference short name: | ABZ 
 According to this ranking, the following are the categories to which the conference are assigned:  
 A* - Assigned to the flagship conference, the one that is the leading in that area of discipline. 
  A - Assigned to the flagship conference, the one that is the leading in that area of discipline. 
  B - Assigned to the good conference, the one that is well regarded in that area of discipline. 
  C - Assigned to the other conference that satisfies minimum standards. 
  Australasian - This ranking is assigned to the conferences for which the audience is mainly New Zealanders and Australians. 
  Unranked - Assigned to the conference for which no ranking decision has been taken. 
  National - Assigned to the conference that runs mainly in a single country, having chairs from the same country, and that is generally not well known. 
  Regional - It is similar to the National one, but might cover regions crossing national boundaries.
8. ACCMCC_0 conference:
Participants 
  Registration 
  Abstract submission 
  Accommodation 
  Search 
 11th - 15th December 2023, at The University of Western Australia   
  Gabriel Verret | (University of Auckland) | Local actions and eigenspaces of vertex-transitive graphs 
  Key dates  
 Early bird registration deadline: 6 November 2023 
  Deadline for submission of abstracts: 27 November 2023 
  Organising committee  
 A/Prof. John Bamberg, Prof. Michael Giudici, Prof. Gordon Royle, Prof. Cheryl Praeger, A/Prof. Alice Devillers, Dr Luke Morgan.
9. ACCMCC_1 conference:
2nd - 6th December 2024, at The University of Queensland  
 Latest Announcements  
 Registration and abstract submission have now closed. 
  Details of the programme, including the conference schedule and abstracts of invited and contributed talks, can be found | here | . 
  There will be a | welcome reception | 4-6pm on Sunday 1 December. 
  About  
  David Wood | (Monash University) | The global structure of planar graphs 
  Key Dates  
 Early bird registration deadline: 1 November 2024 
  Deadline for submission of abstracts: 15 November 2024 
  Organising Committee  
 Dr. Sara Davies, A/Prof. Barbara Maenhaut and Prof. Darryn Bryant 
  Sponsors and support  
 We are grateful for the support from The Institute of Combinatorics and its Applications  and the School of Mathematics and Physics  at UQ. The conference series is overseen by the Combinatorial Mathematics Society of Australasia  .
10. ACCMCC_2 conference:
Registration  
 The early bird deadline is 1 November 2024. Registration has now closed.  
 The registration fees (in Australian dollars) are:  
 extra tickets to the conference dinner (please include dietary requirements for yourself and all guests) 
  tickets to the excursion 
  Note that if you wish to purchase extra tickets to the conference dinner or additional excursion tickets, you also have the option of doing so in a separate transaction, by selecting the option called Extra excursion or dinner tickets only  within the registration/ payment page.  
  How to register   
 You can register for the conference at this link to the registration/payment page  .  (Please note: local UQ staff and students should instead contact SMP Finance to register for the conference).  
 Please make sure you choose the correct registration type by clicking on the correct button (Standard, CMSA life member, Unwaged).  
 Abstract submission is done separately. If you would like to give a contributed talk, go to the Abstracts  tab, click on the form, and follow the prompts. Abstracts should be submitted by 15 November 2024.  
  Overseas participants

output:1. AAMAS_0 information:
2. AAMAS_2 information:
3. AAMAS_3 information:
4. ABZ_0 information:
5. ABZ_1 information:
6. ABZ_2 information:
7. ABZ_3 information:
8. ACCMCC_0 information:
9. ACCMCC_1 information:
10. ACCMCC_2 information:
