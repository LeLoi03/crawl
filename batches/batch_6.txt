1. ECOOP_0 conference:
ECOOP 2023   Mon 17 - Fri 21 July 2023 Seattle (University of Washington campus), Washington, United States    
 co-located with ECOOP and ISSTA 2023    

 Toggle navigation        
 Attending | Venue: Seattle 
  ECOOP and ISSTA 2023 
  Conduct 
  Covid-19 
  Accommodation 
  Registration 
  Visas 
  Program | ECOOP Program 
  Your Program 
  Schedule Overview 
   Mon 17 Jul 
  Tue 18 Jul 
  Wed 19 Jul 
  Thu 20 Jul 
  Fri 21 Jul 
  Tracks | ECOOP 2023 
  Awards 
  Keynotes 
  Research Papers 
  Artifacts 
  ECOOP and ISSTA 2023 
  Doctoral Symposium 
  Keynotes 
  Sponsorships 
  Student Research Competition 
  Student Volunteers 
  Workshops 
   Workshops 
  COP 
  DEBT 
  FTfJP 
  FUZZING 
  ICOOOLPS 
  VORTEX 
  Organization | ECOOP 2023 Committees 
  Organizing Committee 
  Track Committees 
  Research Papers | Program Committee 
  Extended Review Committee and External Reviewers 
  Artifacts 
  ECOOP and ISSTA 
  Doctoral Symposium 
  Sponsorships 
  Student Research Competition 
  Student Volunteers 
  Workshops 
  Contributors 
  People Index 
   Workshops 
  COP | Organizing Committee 
  Program Committee 
  DEBT | Organizing Committee 
  Program Committee 
  FTfJP | Organizing Committee 
  Program Committee 
  FUZZING | Organizing Committee 
  Program Committee 
  ICOOOLPS | Organizing Committee 
  Program Committee 
  VORTEX | Organizing Committee 
  Program Committee 
  Search 
  Series | Series 
   ECOOP 2025 
  ECOOP 2024 
  ECOOP 2023 
  ECOOP 2022 
  ECOOP 2021 
  ECOOP 2020 
  ECOOP 2019 
  ECOOP 2018 
  ECOOP 2017 
  ECOOP 2016 
  ECOOP 2015 
   2014: Uppsala 
  2013: Montpellier 
  2012: Beijing 
  2011: Lancaster 
  2010: Maribor 
  2009: Genova 
  2008: Cyprus 
  2007: Berlin 
  2006: Nice 
  2005: Glasgow 
  Sign in 
  Sign up 

   Photo by Howard Ignatius     
 Seattle Downtown with Space Needle  

   Photo by T.Tseng     
 The Seattle Great Wheel  

   Photo by GoToVan     
 Amazon Spheres  

   Photo by Ming-yen Hsu     
 Seattle Public Library  

   Photo by Jon     
 Seattle Center Monorail  

   Photo by Stephen Kelly     
 Museum of Pop Culture (MoPOP)  

   Photo by Frank Fujimoto     
 Pacific Science Center  

   Photo by Michael Righi     
 Pike Place Market  

   Photo by Eric Moreno     
 Seattle Skyline  

 Home 
  Welcome to Seattle and logistics 
  Online sessions and Zoom links 
  ECOOP 2023  
   
 ECOOP is Europe’s longest-standing annual Programming Languages conference, bringing together researchers, practitioners, and students to share their ideas and experiences in all topics related to programming languages, software development, systems and applications. ECOOP welcomes high quality research papers relating to these fields in a broad sense.  
 ECOOP is committed to affordable open access publishing. Recent year’s publications have been published by Dagstuhl’s LIPIcs series  under a Creative Commons CC-BY license where the authors retain their copyright. ECOOP articles have been published without open access publishing fee and can be accessed via a DOI. LIPIcs is indexed in DBLP, Google Scholar, Scopus and others.  

 Keynotes  
   AITO Test of Time Award: Why Programming Languages Matter: Reflections on 45 Years of Language Design  
 Andrew P. Black   

    Dahl-Nygaard Senior Prize: Safe Journeys into the Unknown – Object Capabilities  
 Sophia Drossopoulou   

    Dahl-Nygaard Junior Prize: My Part of the Scala Story, and Beyond!  
 Heather Miller   

 Travel Support  
   
 You may request for travel support by filling out the form https://forms.gle/YXzxqqnhzpPscHMU6  and  emailing alex.jafari@aito-services.org  . After approval, you may submit flight, transportation, registration accommodation and meal expenses to be reimbursed.  
 If you qualify for a diversity* grant, you may also indicate that in the form.  
 * Diversity grants are for women, minorities, persons with disabilities and under-represented groups in STEM (Black or African Americans, Hispanic or Latino population).   

 Highlights  
   
 This ECOOP edition continues the last edition’s innovations, embracing the entire landscape of programming technologies with a revised reviewing and publishing model:  
 Broader Scope.  ECOOP welcomes contributions in all aspect of practice and theory of programming languages, systems and environments, ranging the whole spectrum from novel ideas to evaluation of existing solutions. Authors can pick one of four broad categories: research papers  , reproduction studies  , experience papers  , and brave new ideas  or pearls  . Negative results and short papers are welcome. 
  Continuous Submissions.  ECOOP is moving towards frequent submission deadlines. ECOOP 2023 has two rounds of submissions, one in December and the second in March. Each round is double-blind  and delivers its results within two months  . 
  Collaborative Reviewing.  ECOOP encourages constructive reviewing where papers that are not accepted outright are given clear and actionable suggestions for improvements so that they can be resubmitted in subsequent rounds; thus, following the reviewing model of many journals but with timely reviews. Unlike conference reviewing, the same reviewers will remain attached to a submission throughout the process even if it takes multiple rounds. 
  Frictionless Submission.  ECOOP enforces neither strict page limits nor strict formatting requirements for submitted papers. Instead, we encourage authors to write what the clearest possible submission while keeping in mind that reviewers can only spend the same finite  amount of time on each paper. 
  Artifacts Now.  Artifacts supporting the scientific claims of papers can now submitted together with their paper and thus all authors will benefit from the feedback of the artifact evaluation committee. 
  Open Access.  ECOOP remains committed to open access, all papers appearing the proceedings of the conference, all talks, and all artifacts will be archived and made available free of charge and without author processing fees. 
  Journal First.  ECOOP papers can be submitted to special issues of three journals, TOPLAS, Science of Computer Programming and the Journal of Object Technology. The requirements of these journals apply for submissions. For SCP and JOT, the ECOOP program committee will act as reviewers with the same deadline. TOPLAS follow its own process. JOT is open access. 
  Journal After.  Selected papers will be invited to publish extended versions in special issues of our associated journals. An extended abstract of the paper will appear in the ECOOP proceedings. Journal after submission at SCP and JOT are reviewed by the ECOOP PC, while TOPLAS uses its own process. 

 ISSTA/ECOOP'23: Welcome to Seattle and logistics  
   
 Dear ISSTA/ECOOP 2023 participants,  
 We look forward to welcoming you to the joint conference next week.  
 Below are a number of logistical notes as well as guidelines for presenters. (For convenience, this and other communications will appear on the conference website as well.)  
 On behalf of the ISSTA/ECOOP 2023 organizing committee, welcome to Seattle!  
 René Just  
 Light Rail   
 The Seattle Light Rail system is a great option to get around the Seattle area and to the University of Washington. There is a station conveniently located at the SeaTac airport (from baggage claim, head up to 4th floor and use the skybridge to cross to the parking garage, and follow signs to Link Light Rail), and the line goes directly to downtown Seattle and the University of Washington. Light Rail and bus tickets can be easily purchased via the Transit GO Ticket app  or at ticket kiosks located in the station. Light Rail tickets are $7 for all day use, or $2.25 to $3.50 per one-way trip.  
 Bus   
 Seattle has extensive bus route systems. You can use Seattle Metro’s convenient Trip Planning site  to plan your route. Tickets can be purchased via the Transit GO Ticket app  or with $2.75 exact change when boarding the bus.  
 Parking on Campus   
 Paid parking is available on the University of Washington campus. If you are driving to campus, it is recommended to factor in 20-30 minutes for finding parking and walking to your destinations, as the Allen and Gates buildings are 0.4 miles (0.6 km) from all parking garages. Information about parking fees can be found on ]UW’s Transportation]( https://transportation.uw.edu/park/visitor  ) website. Parking permits can be purchased at UW Gatehouses or by phone via the PayByPhone App  .  
 Addresses   
 Paul G. Allen Center for Computer Science and Engineering (Allen Center) 185 E Stevens Way NE Seattle, WA 98195  
 Bill & Melinda Gates Center for Computer Science and Engineering (Gates Center) 3800 E Stevens Way NE Seattle, WA 98195  
 (The two buildings are adjacent, though the street numbers may suggest otherwise.)  
 Registration   
 Please pick up your conference badge and registration package at the registration desk in the Allen Center. Just enter the building through the sliding doors, and the reception desk will be in front of you. The registration desk will be staffed between 8am and 5pm, Monday through Thursday, and between 8am and noon on Friday.  
 Technical Program   
 You can find a program overview and details for the entire week on the ISSTA/ECOOP website  . (The programs on the ISSTA and ECOOP website instances are in sync with the overall program, but provide a view that is tailored to each conference.)  
 Guidelines for presenters   
 In-person presentations:  Presentation slots are 15 minutes (unless differently indicated by your track chair). Please follow the instructions provided to you by your track chair to allow for enough time for Q&A. Please go to your allocated room 15 minutes before the session start time to meet with the Session Chair (see technical program), review the pronunciation of your name, and familiarize yourself with the room and A/V set up, if needed (see Rehearsal and equipment check). You are expected to use your own laptop for presentations, which needs to be connected via HDMI. Some dongles (USB-C) may be available but bring your own adapter if needed. For ISSTA and ECOOP presentations, the A/V system is set up such that it will capture the screen, presenter, and audio, which will be streamed for remote participants via Zoom. Note that you do not need to join a Zoom meeting, simply plug in your device and use the wireless microphone provided. 
  ISSTA-Online presentations:  Presentation slots are 10 minutes. Prepare for 7.5 minutes of presentation and 2.5 minutes of Q&A. You will be required to present via Zoom. Please join the zoom meeting for your online session 15 minutes before the session start time. The zoom meeting details will be shared separately before the main conference. To avoid complications, please install the latest Zoom application on your computer and do not present via a web browser. Make sure your Zoom setup is working properly by running the Zoom audio/video test before joining the call. If your presentation contains any audio, you must enable the sharing of audio when sharing your screen. When you have finished your presentation, please stop sharing your screen and mute your microphone. 
  Posters:  Please set up your poster on Tuesday between 3pm and 3:30pm in the Allen Atrium (in time for the first poster session that starts at 3:30pm). All posters can remain in the Allen Atrium until Thursday evening. Easels, poster boards (32x40 inches), and clips will be provided. 
  Rehearsal and equipment check:  We have reserved room G04 for presentation rehearsal and equipment testing. The A/V setup is identical in all conference rooms. If your set up works in G04, it should work everywhere. 
  Need Help?   
 Signs and student volunteers (in purple shirts) will guide you and help you find your way around campus. If you need additional help or support, please let a staff member at the registration desk know or email April and René.  

 Online sessions and Zoom links  
   
 Dear ISSTA/ECOOP 2023 participants,  
 Below are four meeting links for joining the conference remotely, grouped by conference room. These links are valid for the entire week, and each meeting will start at 10:15am (PDT) on any given day. Please see the online program  for details regarding sessions, rooms, and presentation order.  
 For online presenters   
 Please make sure to virtually join your meeting room 15 minutes prior to the start of your session to connect with your session chair and a student volunteer in the (physical) conference room.  
 For in-person participants   
 All remote presentations are streamed in the physical conference rooms (in the order as listed in the program). In-person participants will be able to ask questions using a wireless microphone and do not need to connect to Zoom.  
 Habib Classroom (Gates G01)   
 https://washington.zoom.us/j/96378948308 
  https://washington.zoom.us/j/93508947113 
  ISSTA Online 2 (Static Analysis) 
  ISSTA Online 5 (Domain-specific Testing) 
  Bezos Seminar Room (Gates G04)   
 https://washington.zoom.us/j/97880373378 
  https://washington.zoom.us/j/98758960237 
  ISSTA Online 3 (Empirical Studies) 
  ISSTA Online 6 (Smart Contracts and Automotive) 
  Smith Classroom (Gates G10)   
 https://washington.zoom.us/j/95570994317 
  ISSTA Online 1 (SE and Deep Learning) 
  ISSTA Online 4 (Testing and Analysis of Deep Learning Systems) 
  Amazon Auditorium (Gates G20)   
 https://washington.zoom.us/j/99192851975 
  ISSTA-online keynote 
  ISSTA’24 preview 
  ISSTA closing 
  On behalf of the ISSTA/ECOOP 2023 organizing committee,  
 René Just  

  ECOOP 2023 Tracks   
   
 Awards  | Keynotes  | Research Papers  | Artifact Evaluation  | Doctoral Symposium  | Keynotes  | Sponsorships  | Student Research Competition  | Student Volunteers  | Workshops   
  Show all tracks    

   Posts   
   
 Tweets by ECOOPconf    
 Supporters   

 Sponsor 
 Sponsor 
 Sponsor 
 Sponsor 

 x  Sat 30 Nov 06:50    

  ECOOP 2023   
  contact form    
  using conf.researchr.org  ( v1.67.1  )  
   Support page    
     
 Tracks  
 Awards   
  Keynotes   
  Research Papers   
  Artifacts   
   
  ECOOP and ISSTA 2023  
 Doctoral Symposium   
  Keynotes   
  Sponsorships   
  Student Research Competition   
  Student Volunteers   
  Workshops    
 Workshops  
 COP 2023   
  DEBT 2023   
  FTfJP 2023   
  FUZZING 2023   
  ICOOOLPS 2023   
  VORTEX 2023    

 Attending  
 Venue: Seattle   
  ECOOP/ISSTA Code of Conduct   
  ECOOP/ISSTA Covid-19 Disclosure & Liability Waiver   
  Accommodation   
  ECOOP / ISSTA 2023 Registration Is Open   
  Visas

2. PDP_2 conference:


3. ECOOP_1 conference:
DROPS 
  Series | LIPIcs – Leibniz International Proceedings in Informatics 
  OASIcs – Open Access Series in Informatics 
  Dagstuhl Follow-Ups 
  Schloss Dagstuhl Jahresbericht 
   Discontinued Series 
  Journals | DARTS – Dagstuhl Artifacts Series 
  Dagstuhl Reports 
  Dagstuhl Manifestos 
  LITES – Leibniz Transactions on Embedded Systems 
  TGDK – Transactions on Graph Data and Knowledge 
  Conferences | AFT 
  AIB 
  AofA 
  APPROX 
  ATMOS 
  CALCO 
  CCC 
  CONCUR 
  COSIT 
  CP 
  CPM 
  CSL 
  DISC 
  DITAM 
  DNA 
  ECOOP 
  ECRTS 
  ESA 
  FAB 
  FMBC 
   FORC 
  FSCD 
  FSTTCS 
  FUN 
  GD 
  GIScience 
  ICALP 
  ICDT 
  ICPEC 
  IPEC 
  iPMVM 
  ISAAC 
  ITC 
  ITCS 
  ITP 
  LDK 
  MFCS 
  Microservices 
  NG-RES 
  OPODIS 
   PARMA 
  RANDOM 
  SAND 
  SAT 
  SEA 
  SLATE 
  SNAPL 
  SoCG 
  STACS 
  SWAT 
  TIME 
  Tokenomics 
  TQC 
  TYPES 
  WABI 
  WCET 
  Artifacts | Supplementary Materials (Software, Datasets, ...) 
  dblp Artifacts 
   DARTS (Evaluated Artifacts) 
        
  Metadata Export | Metadata Export 
  OAI Interface 

  Volume    Export XML 
  Export ACM-XML 
  Export DOAJ-XML 
  Export Schema.org 
  Export HTML 

  LIPIcs, Volume 263  
 37th European Conference on Object-Oriented Programming (ECOOP 2023)  
   
  Part of: | Series: | Leibniz International Proceedings in Informatics (LIPIcs) | Part of: | Conference: | European Conference on Object-Oriented Programming (ECOOP) 

 Event  
 ECOOP 2023, July 17-21, 2023, Seattle, Washington, United States   
 Editors  
  Karim Ali            
 University of Alberta, Canada 
    
  Guido Salvaneschi            
 University of St. Gallen, Switzerland 

 Publication Details  
 published at: 2023-07-11 
  Publisher: Schloss Dagstuhl – Leibniz-Zentrum für Informatik 
  ISBN: 978-3-95977-281-5 
  DBLP: | db/conf/ecoop/ecoop2023 

  Access Numbers  
 Detailed Access Statistics available here 
  Total Document Accesses (updated on a weekly basis): | 0   PDF Downloads   0   Metadata Views 

 Documents   
 No documents found matching your filter selection.   
  Document   
 Complete Volume   
 DOI: 10.4230/LIPIcs.ECOOP.2023    

 LIPIcs, Volume 263, ECOOP 2023, Complete Volume   
 Authors:  Karim Ali and Guido Salvaneschi  
  Abstract    
 LIPIcs, Volume 263, ECOOP 2023, Complete Volume   

  Cite as    
 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 1-1288, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @Proceedings{ali_et_al:LIPIcs.ECOOP.2023 title = {{LIPIcs, Volume 263, ECOOP 2023, Complete Volume}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {1--1288}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023}, URN = {urn:nbn:de:0030-drops-181924}, doi = {10.4230/LIPIcs.ECOOP.2023}, annote = {Keywords: LIPIcs, Volume 263, ECOOP 2023, Complete Volume} }  @Proceedings{ali_et_al:LIPIcs.ECOOP.2023 title = {{LIPIcs, Volume 263, ECOOP 2023, Complete Volume}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {1--1288}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023}, URN = {urn:nbn:de:0030-drops-181924}, doi = {10.4230/LIPIcs.ECOOP.2023}, annote = {Keywords: LIPIcs, Volume 263, ECOOP 2023, Complete Volume} }    

  Document   
 Front Matter   
 DOI: 10.4230/LIPIcs.ECOOP.2023.0    

 Front Matter, Table of Contents, Preface, Conference Organization   
 Authors:  Karim Ali and Guido Salvaneschi  
  Abstract    
 Front Matter, Table of Contents, Preface, Conference Organization   

  Cite as    
 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 0:i-0:xx, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{ali_et_al:LIPIcs.ECOOP.2023.0 author = {Ali, Karim and Salvaneschi, Guido}, title = {{Front Matter, Table of Contents, Preface, Conference Organization}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {0:i--0:xx}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.0}, URN = {urn:nbn:de:0030-drops-181932}, doi = {10.4230/LIPIcs.ECOOP.2023.0}, annote = {Keywords: Front Matter, Table of Contents, Preface, Conference Organization} }  @InProceedings{ali_et_al:LIPIcs.ECOOP.2023.0 author = {Ali, Karim and Salvaneschi, Guido}, title = {{Front Matter, Table of Contents, Preface, Conference Organization}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {0:i--0:xx}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.0}, URN = {urn:nbn:de:0030-drops-181932}, doi = {10.4230/LIPIcs.ECOOP.2023.0}, annote = {Keywords: Front Matter, Table of Contents, Preface, Conference Organization} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.1    

 Designing Asynchronous Multiparty Protocols with Crash-Stop Failures   
 Authors:  Adam D. Barwell, Ping Hou, Nobuko Yoshida, and Fangyi Zhou  
  Abstract    
 Session types provide a typing discipline for message-passing systems. However, most session type approaches assume an ideal world: one in which everything is reliable and without failures. Yet this is in stark contrast with distributed systems in the real world. To address this limitation, we introduce Teatrino, a code generation toolchain that utilises asynchronous multiparty session types (MPST) with crash-stop semantics to support failure handling protocols. We augment asynchronous MPST and processes with crash handling branches. Our approach requires no user-level syntax extensions for global types and features a formalisation of global semantics, which captures complex behaviours induced by crashed/crash handling processes. The sound and complete correspondence between global and local type semantics guarantees deadlock-freedom, protocol conformance, and liveness of typed processes in the presence of crashes. Our theory is implemented in the toolchain Teatrino, which provides correctness by construction. Teatrino extends the Scribble multiparty protocol language to generate protocol-conforming Scala code, using the Effpi concurrent programming library. We extend both Scribble and Effpi to support crash-stop behaviour. We demonstrate the feasibility of our methodology and evaluate Teatrino with examples extended from both session type and distributed systems literature.   

  Cite as    
 Adam D. Barwell, Ping Hou, Nobuko Yoshida, and Fangyi Zhou. Designing Asynchronous Multiparty Protocols with Crash-Stop Failures. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 1:1-1:30, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{barwell_et_al:LIPIcs.ECOOP.2023.1 author = {Barwell, Adam D. and Hou, Ping and Yoshida, Nobuko and Zhou, Fangyi}, title = {{Designing Asynchronous Multiparty Protocols with Crash-Stop Failures}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {1:1--1:30}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.1}, URN = {urn:nbn:de:0030-drops-181944}, doi = {10.4230/LIPIcs.ECOOP.2023.1}, annote = {Keywords: Session Types, Concurrency, Failure Handling, Code Generation, Scala} }  @InProceedings{barwell_et_al:LIPIcs.ECOOP.2023.1 author = {Barwell, Adam D. and Hou, Ping and Yoshida, Nobuko and Zhou, Fangyi}, title = {{Designing Asynchronous Multiparty Protocols with Crash-Stop Failures}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {1:1--1:30}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.1}, URN = {urn:nbn:de:0030-drops-181944}, doi = {10.4230/LIPIcs.ECOOP.2023.1}, annote = {Keywords: Session Types, Concurrency, Failure Handling, Code Generation, Scala} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.2    

 Nested Pure Operation-Based CRDTs   
 Authors:  Jim Bauwens and Elisa Gonzalez Boix  
  Abstract    
 Modern distributed applications increasingly replicate data to guarantee high availability and optimal user experience. Conflict-free Replicated Data Types (CRDTs) are a family of data types specially designed for highly available systems that guarantee some form of eventual consistency. Designing CRDTs is very difficult because it requires devising designs that guarantee convergence in the presence of conflicting operations. Even though design patterns and structured frameworks have emerged to aid developers with this problem, they mostly focus on statically structured data; nesting and dynamically changing the structure of a CRDT remains to be an open issue. This paper explores support for nested CRDTs in a structured and systematic way. To this end, we define an approach for building nested CRDTs based on the work of pure operation-based CRDTs, resulting in nested pure operation-based CRDTs. We add constructs to control the nesting of CRDTs into a pure operation-based CRDT framework and show how several well-known CRDT designs can be defined in our framework. We provide an implementation of nested pure operation-based CRDTs as an extension to the Flec, an existing TypeScript-based framework for pure operation-based CRDTs. We validate our approach, 1) by implementing a portfolio of nested data structures, 2) by implementing and verifying our approach in the VeriFx language, and 3) by implementing a real-world application scenario and comparing its network usage against an implementation in the closest related work, Automerge. We show that the framework is general enough to nest well-known CRDT designs like maps and lists, and its performance in terms of network traffic is comparable to the state of the art.   

  Cite as    
 Jim Bauwens and Elisa Gonzalez Boix. Nested Pure Operation-Based CRDTs. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 2:1-2:26, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{bauwens_et_al:LIPIcs.ECOOP.2023.2 author = {Bauwens, Jim and Gonzalez Boix, Elisa}, title = {{Nested Pure Operation-Based CRDTs}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {2:1--2:26}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.2}, URN = {urn:nbn:de:0030-drops-181950}, doi = {10.4230/LIPIcs.ECOOP.2023.2}, annote = {Keywords: CRDTs, replication, pure operation-based CRDTs, composition, nesting} }  @InProceedings{bauwens_et_al:LIPIcs.ECOOP.2023.2 author = {Bauwens, Jim and Gonzalez Boix, Elisa}, title = {{Nested Pure Operation-Based CRDTs}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {2:1--2:26}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.2}, URN = {urn:nbn:de:0030-drops-181950}, doi = {10.4230/LIPIcs.ECOOP.2023.2}, annote = {Keywords: CRDTs, replication, pure operation-based CRDTs, composition, nesting} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.3    

 Multi-Graded Featherweight Java   
 Authors:  Riccardo Bianchini, Francesco Dagnino, Paola Giannini, and Elena Zucca  
  Abstract    
 Resource-aware type systems statically approximate not only the expected result type of a program, but also the way external resources are used, e.g., how many times the value of a variable is needed. We extend the type system of Featherweight Java to be resource-aware, parametrically on an arbitrary grade algebra modeling a specific usage of resources. We prove that this type system is sound with respect to a resource-aware version of reduction, that is, a well-typed program has a reduction sequence which does not get stuck due to resource consumption. Moreover, we show that the available grades can be heterogeneous, that is, obtained by combining grades of different kinds, via a minimal collection of homomorphisms from one kind to another. Finally, we show how grade algebras and homomorphisms can be specified as Java classes, so that grade annotations in types can be written in the language itself.   

  Cite as    
 Riccardo Bianchini, Francesco Dagnino, Paola Giannini, and Elena Zucca. Multi-Graded Featherweight Java. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 3:1-3:27, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{bianchini_et_al:LIPIcs.ECOOP.2023.3 author = {Bianchini, Riccardo and Dagnino, Francesco and Giannini, Paola and Zucca, Elena}, title = {{Multi-Graded Featherweight Java}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {3:1--3:27}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.3}, URN = {urn:nbn:de:0030-drops-181960}, doi = {10.4230/LIPIcs.ECOOP.2023.3}, annote = {Keywords: Graded modal types, Java} }  @InProceedings{bianchini_et_al:LIPIcs.ECOOP.2023.3 author = {Bianchini, Riccardo and Dagnino, Francesco and Giannini, Paola and Zucca, Elena}, title = {{Multi-Graded Featherweight Java}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {3:1--3:27}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.3}, URN = {urn:nbn:de:0030-drops-181960}, doi = {10.4230/LIPIcs.ECOOP.2023.3}, annote = {Keywords: Graded modal types, Java} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.4    

 Hoogle⋆: Constants and λ-abstractions in Petri-net-based Synthesis using Symbolic Execution   
 Authors:  Henrique Botelho Guerra, João F. Ferreira, and João Costa Seco  
  Abstract    
 Type-directed component-based program synthesis is the task of automatically building a function with applications of available components and whose type matches a given goal type. Existing approaches to component-based synthesis, based on classical proof search, cannot deal with large sets of components. Recently, Hoogle+, a component-based synthesizer for Haskell, overcomes this issue by reducing the search problem to a Petri-net reachability problem. However, Hoogle+ cannot synthesize constants nor λ-abstractions, which limits the problems that it can solve. We present Hoogle⋆, an extension to Hoogle+ that brings constants and λ-abstractions to the search space, in two independent steps. First, we introduce the notion of wildcard component, a component that matches all types. This enables the algorithm to produce incomplete functions, i.e., functions containing occurrences of the wildcard component. Second, we complete those functions, by replacing each occurrence with constants or custom-defined λ-abstractions. We have chosen to find constants by means of an inference algorithm: we present a new unification algorithm based on symbolic execution that uses the input-output examples supplied by the user to compute substitutions for the occurrences of the wildcard. When compared to Hoogle+, Hoogle⋆ can solve more kinds of problems, especially problems that require the generation of constants and λ-abstractions, without performance degradation.   

  Cite as    
 Henrique Botelho Guerra, João F. Ferreira, and João Costa Seco. Hoogle⋆: Constants and λ-abstractions in Petri-net-based Synthesis using Symbolic Execution. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 4:1-4:28, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{botelhoguerra_et_al:LIPIcs.ECOOP.2023.4 author = {Botelho Guerra, Henrique and Ferreira, Jo\~{a}o F. and Costa Seco, Jo\~{a}o}, title = {{Hoogle⋆: Constants and \lambda-abstractions in Petri-net-based Synthesis using Symbolic Execution}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {4:1--4:28}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.4}, URN = {urn:nbn:de:0030-drops-181974}, doi = {10.4230/LIPIcs.ECOOP.2023.4}, annote = {Keywords: Type-directed, component-based, program synthesis, symbolic execution, unification, Haskell} }  @InProceedings{botelhoguerra_et_al:LIPIcs.ECOOP.2023.4 author = {Botelho Guerra, Henrique and Ferreira, Jo\~{a}o F. and Costa Seco, Jo\~{a}o}, title = {{Hoogle⋆: Constants and \lambda-abstractions in Petri-net-based Synthesis using Symbolic Execution}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {4:1--4:28}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.4}, URN = {urn:nbn:de:0030-drops-181974}, doi = {10.4230/LIPIcs.ECOOP.2023.4}, annote = {Keywords: Type-directed, component-based, program synthesis, symbolic execution, unification, Haskell} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.5    

 Modular Abstract Definitional Interpreters for WebAssembly   
 Authors:  Katharina Brandl, Sebastian Erdweg, Sven Keidel, and Nils Hansen  
  Abstract    
 Even though static analyses can improve performance and secure programs against vulnerabilities, no static whole-program analyses exist for WebAssembly (Wasm) to date. Part of the reason is that Wasm has many complex language concerns, and it is not obvious how to adopt existing analysis frameworks for these features. This paper explores how abstract definitional interpretation can be used to develop sophisticated analyses for Wasm and other complex languages efficiently. In particular, we show that the semantics of Wasm can be decomposed into 19 language-independent components that abstract different aspects of Wasm. We have written a highly configurable definitional interpreter for full Wasm 1.0 in 1628 LOC against these components. Analysis developers can instantiate this interpreter with different value and effect abstractions to obtain abstract definitional interpreters that compute inter-procedural control and data-flow information. This way, we develop the first whole-program dead code, constant propagation, and taint analyses for Wasm, each in less than 210 LOC. We evaluate our analyses on 1458 Wasm binaries collected by others in the wild. Our implementation is based on a novel framework for definitional abstract interpretation in Scala that eliminates scalability issues of prior work.   

  Cite as    
 Katharina Brandl, Sebastian Erdweg, Sven Keidel, and Nils Hansen. Modular Abstract Definitional Interpreters for WebAssembly. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 5:1-5:28, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{brandl_et_al:LIPIcs.ECOOP.2023.5 author = {Brandl, Katharina and Erdweg, Sebastian and Keidel, Sven and Hansen, Nils}, title = {{Modular Abstract Definitional Interpreters for WebAssembly}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {5:1--5:28}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.5}, URN = {urn:nbn:de:0030-drops-181982}, doi = {10.4230/LIPIcs.ECOOP.2023.5}, annote = {Keywords: Static Analysis, WebAssembly} }  @InProceedings{brandl_et_al:LIPIcs.ECOOP.2023.5 author = {Brandl, Katharina and Erdweg, Sebastian and Keidel, Sven and Hansen, Nils}, title = {{Modular Abstract Definitional Interpreters for WebAssembly}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {5:1--5:28}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.5}, URN = {urn:nbn:de:0030-drops-181982}, doi = {10.4230/LIPIcs.ECOOP.2023.5}, annote = {Keywords: Static Analysis, WebAssembly} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.6    

 Dynamically Updatable Multiparty Session Protocols: Generating Concurrent Go Code from Unbounded Protocols   
 Authors:  David Castro-Perez and Nobuko Yoshida  
  Abstract    
 Multiparty Session Types (MPST) are a typing disciplines that guarantee the absence of deadlocks and communication errors in concurrent and distributed systems. However, existing MPST frameworks do not support protocols with dynamic unbounded participants, and cannot express many common programming patterns that require the introduction of new participants into a protocol. This poses a barrier for the adoption of MPST in languages that favour the creation of new participants (processes, lightweight threads, etc) that communicate via message passing, such as Go or Erlang. This paper proposes Dynamically Updatable Multiparty Session Protocols, a new MPST theory (DMst) that supports protocols with an unbounded number of fresh participants, whose communication topologies are dynamically updatable. We prove that DMst guarantees deadlock-freedom and liveness. We implement a toolchain, GoScr (Go-Scribble), which generates Go implementations from DMst, ensuring by construction, that the different participants will only perform I/O actions that comply with a given protocol specification. We evaluate our toolchain by (1) implementing representative parallel and concurrent algorithms from existing benchmarks, textbooks and literature; (2) showing that GoScr does not introduce significant overheads compared to a naive implementation, for computationally expensive benchmarks; and (3) building three realistic protocols (dynamic task delegation, recursive Domain Name System, and a parallel Min-Max strategy) in GoScr that could not be represented with previous theories of session types.   

  Cite as    
 David Castro-Perez and Nobuko Yoshida. Dynamically Updatable Multiparty Session Protocols: Generating Concurrent Go Code from Unbounded Protocols. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 6:1-6:30, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{castroperez_et_al:LIPIcs.ECOOP.2023.6 author = {Castro-Perez, David and Yoshida, Nobuko}, title = {{Dynamically Updatable Multiparty Session Protocols: Generating Concurrent Go Code from Unbounded Protocols}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {6:1--6:30}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.6}, URN = {urn:nbn:de:0030-drops-181995}, doi = {10.4230/LIPIcs.ECOOP.2023.6}, annote = {Keywords: Multiparty Session Types, Correctness-by-construction, Concurrency, Golang} }  @InProceedings{castroperez_et_al:LIPIcs.ECOOP.2023.6 author = {Castro-Perez, David and Yoshida, Nobuko}, title = {{Dynamically Updatable Multiparty Session Protocols: Generating Concurrent Go Code from Unbounded Protocols}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {6:1--6:30}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.6}, URN = {urn:nbn:de:0030-drops-181995}, doi = {10.4230/LIPIcs.ECOOP.2023.6}, annote = {Keywords: Multiparty Session Types, Correctness-by-construction, Concurrency, Golang} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.7    

 Modular Compilation for Higher-Order Functional Choreographies   
 Authors:  Luís Cruz-Filipe, Eva Graversen, Lovro Lugović, Fabrizio Montesi, and Marco Peressotti  
  Abstract    
 Choreographic programming is a paradigm for concurrent and distributed software, whereby descriptions of the intended communications (choreographies) are automatically compiled into distributed code with strong safety and liveness properties (e.g., deadlock-freedom). Recent efforts tried to combine the theories of choreographic programming and higher-order functional programming, in order to integrate the benefits of the former with the modularity of the latter. However, they do not offer a satisfactory theory of compilation compared to the literature, because of important syntactic and semantic shortcomings: compilation is not modular (editing a part might require recompiling everything) and the generated code can perform unexpected global synchronisations. In this paper, we find that these shortcomings are not mere coincidences. Rather, they stem from genuine new challenges posed by the integration of choreographies and functions: knowing which participants are involved in a choreography becomes nontrivial, and divergence in applications requires rethinking how to prove the semantic correctness of compilation. We present a novel theory of compilation for functional choreographies that overcomes these challenges, based on types and a careful design of the semantics of choreographies and distributed code. The result: a modular notion of compilation, which produces code that is deadlock-free and correct (it operationally corresponds to its source choreography).   

  Cite as    
 Luís Cruz-Filipe, Eva Graversen, Lovro Lugović, Fabrizio Montesi, and Marco Peressotti. Modular Compilation for Higher-Order Functional Choreographies. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 7:1-7:37, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{cruzfilipe_et_al:LIPIcs.ECOOP.2023.7 author = {Cruz-Filipe, Lu{\'\i}s and Graversen, Eva and Lugovi\'{c}, Lovro and Montesi, Fabrizio and Peressotti, Marco}, title = {{Modular Compilation for Higher-Order Functional Choreographies}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {7:1--7:37}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.7}, URN = {urn:nbn:de:0030-drops-182005}, doi = {10.4230/LIPIcs.ECOOP.2023.7}, annote = {Keywords: Choreographies, Concurrency, \lambda-calculus, Type Systems} }  @InProceedings{cruzfilipe_et_al:LIPIcs.ECOOP.2023.7 author = {Cruz-Filipe, Lu{\'\i}s and Graversen, Eva and Lugovi\'{c}, Lovro and Montesi, Fabrizio and Peressotti, Marco}, title = {{Modular Compilation for Higher-Order Functional Choreographies}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {7:1--7:37}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.7}, URN = {urn:nbn:de:0030-drops-182005}, doi = {10.4230/LIPIcs.ECOOP.2023.7}, annote = {Keywords: Choreographies, Concurrency, \lambda-calculus, Type Systems} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.8    

 Wiring Circuits Is Easy as {0,1,ω}, or Is It...   
 Authors:  Jan de Muijnck-Hughes and Wim Vanderbauwhede  
  Abstract    
 Quantitative Type-Systems support fine-grained reasoning about term usage in our programming languages. Hardware Design Languages are another style of language in which quantitative typing would be beneficial. When wiring components together we must ensure that there are no unused ports, dangling wires, or accidental fan-ins and fan-outs. Although many wire usage checks are detectable using static analysis tools, such as Verilator, quantitative typing supports making these extrinsic checks an intrinsic aspect of the type-system. With quantitative typing of bound terms, we can provide design-time checks that all wires and ports have been used, and ensure that all wiring decisions are explicitly made, and are neither implicit nor accidental. We showcase the use of quantitative types in hardware design languages by detailing how we can retrofit quantitative types onto SystemVerilog netlists, and the impact that such a quantitative type-system has when creating designs. Netlists are gate-level descriptions of hardware that are produced as the result of synthesis, and it is from these netlists that hardware is generated (fabless or fabbed). First, we present a simple structural type-system for a featherweight version of SystemVerilog netlists that demonstrates how we can type netlists using standard structural techniques, and what it means for netlists to be type-safe but still lead to ill-wired designs. We then detail how to retrofit the language with quantitative types, make the type-system sub-structural, and detail how our new type-safety result ensures that wires and ports are used once. Our ideas have been proven both practically and formally by realising our work in Idris2, through which we can construct a verified language implementation that can type-check existing designs. From this work we can look to promote quantitative typing back up the synthesis chain to a more comprehensive hardware description language; and to help develop new and better hardware description languages with quantitative typing.   

  Cite as    
 Jan de Muijnck-Hughes and Wim Vanderbauwhede. Wiring Circuits Is Easy as {0,1,ω}, or Is It.... In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 8:1-8:28, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{demuijnckhughes_et_al:LIPIcs.ECOOP.2023.8 author = {de Muijnck-Hughes, Jan and Vanderbauwhede, Wim}, title = {{Wiring Circuits Is Easy as \{0,1,\omega\}, or Is It...}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {8:1--8:28}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.8}, URN = {urn:nbn:de:0030-drops-182010}, doi = {10.4230/LIPIcs.ECOOP.2023.8}, annote = {Keywords: Hardware Design, Linear Types, Dependent Types, DSLs, Idris, SystemVerilog, Netlists} }  @InProceedings{demuijnckhughes_et_al:LIPIcs.ECOOP.2023.8 author = {de Muijnck-Hughes, Jan and Vanderbauwhede, Wim}, title = {{Wiring Circuits Is Easy as \{0,1,\omega\}, or Is It...}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {8:1--8:28}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.8}, URN = {urn:nbn:de:0030-drops-182010}, doi = {10.4230/LIPIcs.ECOOP.2023.8}, annote = {Keywords: Hardware Design, Linear Types, Dependent Types, DSLs, Idris, SystemVerilog, Netlists} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.9    

 VeriFx: Correct Replicated Data Types for the Masses   
 Authors:  Kevin De Porre, Carla Ferreira, and Elisa Gonzalez Boix  
  Abstract    
 Distributed systems adopt weak consistency to ensure high availability and low latency, but state convergence is hard to guarantee due to conflicts. Experts carefully design replicated data types (RDTs) that resemble sequential data types and embed conflict resolution mechanisms that ensure convergence. Designing RDTs is challenging as their correctness depends on subtleties such as the ordering of concurrent operations. Currently, researchers manually verify RDTs, either by paper proofs or using proof assistants. Unfortunately, paper proofs are subject to reasoning flaws and mechanized proofs verify a formalization instead of a real-world implementation. Furthermore, writing mechanized proofs is reserved for verification experts and is extremely time-consuming. To simplify the design, implementation, and verification of RDTs, we propose VeriFx, a specialized programming language for RDTs with automated proof capabilities. VeriFx lets programmers implement RDTs atop functional collections and express correctness properties that are verified automatically. Verified RDTs can be transpiled to mainstream languages (currently Scala and JavaScript). VeriFx provides libraries for implementing and verifying Conflict-free Replicated Data Types (CRDTs) and Operational Transformation (OT) functions. These libraries implement the general execution model of those approaches and define their correctness properties. We use the libraries to implement and verify an extensive portfolio of 51 CRDTs, 16 of which are used in industrial databases, and reproduce a study on the correctness of OT functions.   

  Cite as    
 Kevin De Porre, Carla Ferreira, and Elisa Gonzalez Boix. VeriFx: Correct Replicated Data Types for the Masses. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 9:1-9:45, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{deporre_et_al:LIPIcs.ECOOP.2023.9 author = {De Porre, Kevin and Ferreira, Carla and Gonzalez Boix, Elisa}, title = {{VeriFx: Correct Replicated Data Types for the Masses}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {9:1--9:45}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.9}, URN = {urn:nbn:de:0030-drops-182028}, doi = {10.4230/LIPIcs.ECOOP.2023.9}, annote = {Keywords: distributed systems, eventual consistency, replicated data types, verification} }  @InProceedings{deporre_et_al:LIPIcs.ECOOP.2023.9 author = {De Porre, Kevin and Ferreira, Carla and Gonzalez Boix, Elisa}, title = {{VeriFx: Correct Replicated Data Types for the Masses}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {9:1--9:45}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.9}, URN = {urn:nbn:de:0030-drops-182028}, doi = {10.4230/LIPIcs.ECOOP.2023.9}, annote = {Keywords: distributed systems, eventual consistency, replicated data types, verification} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.10    

 On Leveraging Tests to Infer Nullable Annotations   
 Authors:  Jens Dietrich, David J. Pearce, and Mahin Chandramohan  
  Abstract    
 Issues related to the dereferencing of null pointers are a pervasive and widely studied problem, and numerous static analyses have been proposed for this purpose. These are typically based on dataflow analysis, and take advantage of annotations indicating whether a type is nullable or not. The presence of such annotations can significantly improve the accuracy of null checkers. However, most code found in the wild is not annotated, and tools must fall back on default assumptions, leading to both false positives and false negatives. Manually annotating code is a laborious task and requires deep knowledge of how a program interacts with clients and components. We propose to infer nullable annotations from an analysis of existing test cases. For this purpose, we execute instrumented tests and capture nullable API interactions. Those recorded interactions are then refined (santitised and propagated) in order to improve their precision and recall. We evaluate our approach on seven projects from the spring ecosystems and two google projects which have been extensively manually annotated with thousands of @Nullable annotations. We find that our approach has a high precision, and can find around half of the existing @Nullable annotations. This suggests that the method proposed is useful to mechanise a significant part of the very labour-intensive annotation task.   

  Cite as    
 Jens Dietrich, David J. Pearce, and Mahin Chandramohan. On Leveraging Tests to Infer Nullable Annotations. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 10:1-10:25, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{dietrich_et_al:LIPIcs.ECOOP.2023.10 author = {Dietrich, Jens and Pearce, David J. and Chandramohan, Mahin}, title = {{On Leveraging Tests to Infer Nullable Annotations}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {10:1--10:25}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.10}, URN = {urn:nbn:de:0030-drops-182037}, doi = {10.4230/LIPIcs.ECOOP.2023.10}, annote = {Keywords: null analysis, null safety, testing, program analysis} }  @InProceedings{dietrich_et_al:LIPIcs.ECOOP.2023.10 author = {Dietrich, Jens and Pearce, David J. and Chandramohan, Mahin}, title = {{On Leveraging Tests to Infer Nullable Annotations}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {10:1--10:25}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.10}, URN = {urn:nbn:de:0030-drops-182037}, doi = {10.4230/LIPIcs.ECOOP.2023.10}, annote = {Keywords: null analysis, null safety, testing, program analysis} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.11    

 super-Charging Object-Oriented Programming Through Precise Typing of Open Recursion   
 Authors:  Andong Fan and Lionel Parreaux  
  Abstract    
 We present a new variation of object-oriented programming built around three simple and orthogonal constructs: classes for storing object state, interfaces for expressing object types, and mixins for reusing and overriding implementations. We show that the latter can be made uniquely expressive by leveraging a novel feature that we call precisely-typed open recursion. This features uses "this" and "super" annotations to express the requirements of any given partial method implementation on the types of respectively the current object and the inherited definitions. Crucially, the fact that mixins do not introduce types nor subtyping relationships means they can be composed even when the overriding and overridden methods have incomparable types. Together with advanced type inference and structural typing support provided by the MLscript programming language, we show that this enables an elegant and powerful solution to the Expression Problem.   

  Cite as    
 Andong Fan and Lionel Parreaux. super-Charging Object-Oriented Programming Through Precise Typing of Open Recursion. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 11:1-11:28, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{fan_et_al:LIPIcs.ECOOP.2023.11 author = {Fan, Andong and Parreaux, Lionel}, title = {{super-Charging Object-Oriented Programming Through Precise Typing of Open Recursion}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {11:1--11:28}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.11}, URN = {urn:nbn:de:0030-drops-182047}, doi = {10.4230/LIPIcs.ECOOP.2023.11}, annote = {Keywords: Object-Oriented Programming, the Expression Problem, Open Recursion} }  @InProceedings{fan_et_al:LIPIcs.ECOOP.2023.11 author = {Fan, Andong and Parreaux, Lionel}, title = {{super-Charging Object-Oriented Programming Through Precise Typing of Open Recursion}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {11:1--11:28}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.11}, URN = {urn:nbn:de:0030-drops-182047}, doi = {10.4230/LIPIcs.ECOOP.2023.11}, annote = {Keywords: Object-Oriented Programming, the Expression Problem, Open Recursion} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.12    

 LoRe: A Programming Model for Verifiably Safe Local-First Software (Extended Abstract)   
 Authors:  Julian Haas, Ragnar Mogk, Elena Yanakieva, Annette Bieniusa, and Mira Mezini  
  Abstract    
 Local-first software manages and processes private data locally while still enabling collaboration between multiple parties connected via partially unreliable networks. Such software typically involves interactions with users and the execution environment (the outside world). The unpredictability of such interactions paired with their decentralized nature make reasoning about the correctness of local-first software a challenging endeavor. Yet, existing solutions to develop local-first software do not provide support for automated safety guarantees and instead expect developers to reason about concurrent interactions in an environment with unreliable network conditions. We propose LoRe, a programming model and compiler that automatically verifies developer-supplied safety properties for local-first applications. LoRe combines the declarative data flow of reactive programming with static analysis and verification techniques to precisely determine concurrent interactions that violate safety invariants and to selectively employ strong consistency through coordination where required. We propose a formalized proof principle and demonstrate how to automate the process in a prototype implementation that outputs verified executable code. Our evaluation shows that LoRe simplifies the development of safe local-first software when compared to state-of-the-art approaches and that verification times are acceptable.   

  Cite as    
 Julian Haas, Ragnar Mogk, Elena Yanakieva, Annette Bieniusa, and Mira Mezini. LoRe: A Programming Model for Verifiably Safe Local-First Software (Extended Abstract). In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 12:1-12:15, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{haas_et_al:LIPIcs.ECOOP.2023.12 author = {Haas, Julian and Mogk, Ragnar and Yanakieva, Elena and Bieniusa, Annette and Mezini, Mira}, title = {{LoRe: A Programming Model for Verifiably Safe Local-First Software (Extended Abstract)}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {12:1--12:15}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.12}, URN = {urn:nbn:de:0030-drops-182056}, doi = {10.4230/LIPIcs.ECOOP.2023.12}, annote = {Keywords: Local-First Software, Reactive Programming, Invariants, Consistency, Automated Verification} }  @InProceedings{haas_et_al:LIPIcs.ECOOP.2023.12 author = {Haas, Julian and Mogk, Ragnar and Yanakieva, Elena and Bieniusa, Annette and Mezini, Mira}, title = {{LoRe: A Programming Model for Verifiably Safe Local-First Software (Extended Abstract)}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {12:1--12:15}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.12}, URN = {urn:nbn:de:0030-drops-182056}, doi = {10.4230/LIPIcs.ECOOP.2023.12}, annote = {Keywords: Local-First Software, Reactive Programming, Invariants, Consistency, Automated Verification} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.13    

 Dynamic Determinacy Race Detection for Task-Parallel Programs with Promises   
 Authors:  Feiyang Jin, Lechen Yu, Tiago Cogumbreiro, Jun Shirako, and Vivek Sarkar  
  Abstract    
 Much of the past work on dynamic data-race and determinacy-race detection algorithms for task parallelism has focused on structured parallelism with fork-join constructs and, more recently, with future constructs. This paper addresses the problem of dynamic detection of data-races and determinacy-races in task-parallel programs with promises, which are more general than fork-join constructs and futures. The motivation for our work is twofold. First, promises have now become a mainstream synchronization construct, with their inclusion in multiple languages, including C++, JavaScript, and Java. Second, past work on dynamic data-race and determinacy-race detection for task-parallel programs does not apply to programs with promises, thereby identifying a vital need for this work. This paper makes multiple contributions. First, we introduce a featherweight programming language that captures the semantics of task-parallel programs with promises and provides a basis for formally defining determinacy using our semantics. This definition subsumes functional determinacy (same output for same input) and structural determinacy (same computation graph for same input). The main theoretical result shows that the absence of data races is sufficient to guarantee determinacy with both properties. We are unaware of any prior work that established this result for task-parallel programs with promises. Next, we introduce a new Dynamic Race Detector for Promises that we call DRDP. DRDP is the first known race detection algorithm that executes a task-parallel program sequentially without requiring the serial-projection property; this is a critical requirement since programs with promises do not satisfy the serial-projection property in general. Finally, the paper includes experimental results obtained from an implementation of DRDP. The results show that, with some important optimizations introduced in our work, the space and time overheads of DRDP are comparable to those of more restrictive race detection algorithms from past work. To the best of our knowledge, DRDP is the first determinacy race detector for task-parallel programs with promises.   

  Cite as    
 Feiyang Jin, Lechen Yu, Tiago Cogumbreiro, Jun Shirako, and Vivek Sarkar. Dynamic Determinacy Race Detection for Task-Parallel Programs with Promises. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 13:1-13:30, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{jin_et_al:LIPIcs.ECOOP.2023.13 author = {Jin, Feiyang and Yu, Lechen and Cogumbreiro, Tiago and Shirako, Jun and Sarkar, Vivek}, title = {{Dynamic Determinacy Race Detection for Task-Parallel Programs with Promises}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {13:1--13:30}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.13}, URN = {urn:nbn:de:0030-drops-182060}, doi = {10.4230/LIPIcs.ECOOP.2023.13}, annote = {Keywords: Race detection, Promise, Determinism, Determinacy-race, Serial projection} }  @InProceedings{jin_et_al:LIPIcs.ECOOP.2023.13 author = {Jin, Feiyang and Yu, Lechen and Cogumbreiro, Tiago and Shirako, Jun and Sarkar, Vivek}, title = {{Dynamic Determinacy Race Detection for Task-Parallel Programs with Promises}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {13:1--13:30}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.13}, URN = {urn:nbn:de:0030-drops-182060}, doi = {10.4230/LIPIcs.ECOOP.2023.13}, annote = {Keywords: Race detection, Promise, Determinism, Determinacy-race, Serial projection} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.14    

 Algebraic Replicated Data Types: Programming Secure Local-First Software   
 Authors:  Christian Kuessner, Ragnar Mogk, Anna-Katharina Wickert, and Mira Mezini  
  Abstract    
 This paper is about programming support for local-first applications that manage private data locally, but still synchronize data between multiple devices. Typical use cases are synchronizing settings and data, and collaboration between multiple users. Such applications must preserve the privacy and integrity of the user’s data without impeding or interrupting the user’s normal workflow - even when the device is offline or has a flaky network connection. From the programming perspective, availability along with privacy and security concerns pose significant challenges, for which developers have to learn and use specialized solutions such as conflict-free replicated data types (CRDTs) or APIs for centralized data stores. This work relieves developers from this complexity by enabling the direct and automatic use of algebraic data types - which developers already use to express the business logic of the application - for synchronization and collaboration. Moreover, we use this approach to provide end-to-end encryption and authentication between multiple replicas (using a shared secret), that is suitable for a coordination-free setting. Overall, our approach combines all the following advantages: it (1) allows developers to design custom data types, (2) provides data privacy and integrity when using untrusted intermediaries, (3) is coordination free, (4) guarantees eventual consistency by construction (i.e., independent of developer errors), (5) does not cause indefinite growth of metadata, (6) has sufficiently efficient implementations for the local-first setting.   

  Cite as    
 Christian Kuessner, Ragnar Mogk, Anna-Katharina Wickert, and Mira Mezini. Algebraic Replicated Data Types: Programming Secure Local-First Software. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 14:1-14:33, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{kuessner_et_al:LIPIcs.ECOOP.2023.14 author = {Kuessner, Christian and Mogk, Ragnar and Wickert, Anna-Katharina and Mezini, Mira}, title = {{Algebraic Replicated Data Types: Programming Secure Local-First Software}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {14:1--14:33}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.14}, URN = {urn:nbn:de:0030-drops-182076}, doi = {10.4230/LIPIcs.ECOOP.2023.14}, annote = {Keywords: local-first, data privacy, coordination freedom, CRDTs, AEAD} }  @InProceedings{kuessner_et_al:LIPIcs.ECOOP.2023.14 author = {Kuessner, Christian and Mogk, Ragnar and Wickert, Anna-Katharina and Mezini, Mira}, title = {{Algebraic Replicated Data Types: Programming Secure Local-First Software}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {14:1--14:33}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.14}, URN = {urn:nbn:de:0030-drops-182076}, doi = {10.4230/LIPIcs.ECOOP.2023.14}, annote = {Keywords: local-first, data privacy, coordination freedom, CRDTs, AEAD} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.15    

 Behavioural Types for Local-First Software   
 Authors:  Roland Kuhn, Hernán Melgratti, and Emilio Tuosto  
  Abstract    
 Peer-to-peer systems are the most resilient form of distributed computing, but the design of robust protocols for their coordination is difficult. This makes it hard to specify and reason about global behaviour of such systems. This paper presents swarm protocols to specify such systems from a global viewpoint. Swarm protocols are projected to machines, that is local specifications of peers. We take inspiration from behavioural types with a key difference: peers communicate through an event notification mechanism rather than through point-to-point message passing. Our goal is to adhere to the principles of local-first software where network devices collaborate on a common task while retaining full autonomy: every participating device can locally make progress at all times, not encumbered by unavailability of other devices or network connections. This coordination-free approach leads to inconsistencies that may emerge during computations. Our main result shows that under suitable well-formedness conditions for swarm protocols consistency is eventually recovered and the locally observable behaviour of conforming machines will eventually match the global specification. Our model elaborates on the Actyx industrial platform and provides the basis for tool support: we sketch an implemented prototype which proves this work a viable step towards reasoning about local-first and peer-to-peer software systems.   

  Cite as    
 Roland Kuhn, Hernán Melgratti, and Emilio Tuosto. Behavioural Types for Local-First Software. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 15:1-15:28, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{kuhn_et_al:LIPIcs.ECOOP.2023.15 author = {Kuhn, Roland and Melgratti, Hern\'{a}n and Tuosto, Emilio}, title = {{Behavioural Types for Local-First Software}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {15:1--15:28}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.15}, URN = {urn:nbn:de:0030-drops-182086}, doi = {10.4230/LIPIcs.ECOOP.2023.15}, annote = {Keywords: Distributed coordination, local-first software, behavioural types, publish-subscribe, asynchronous communication} }  @InProceedings{kuhn_et_al:LIPIcs.ECOOP.2023.15 author = {Kuhn, Roland and Melgratti, Hern\'{a}n and Tuosto, Emilio}, title = {{Behavioural Types for Local-First Software}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {15:1--15:28}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.15}, URN = {urn:nbn:de:0030-drops-182086}, doi = {10.4230/LIPIcs.ECOOP.2023.15}, annote = {Keywords: Distributed coordination, local-first software, behavioural types, publish-subscribe, asynchronous communication} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.16    

 Constraint Based Compiler Optimization for Energy Harvesting Applications   
 Authors:  Yannan Li and Chao Wang  
  Abstract    
 We propose a method for optimizing the energy efficiency of software code running on small computing devices in the Internet of Things (IoT) that are powered exclusively by electricity harvested from ambient energy in the environment. Due to the weak and unstable nature of the energy source, it is challenging for developers to manually optimize the software code to deal with mismatch between the intermittent power supply and the computation demand. Our method overcomes the challenge by using a combination of three techniques. First, we use static program analysis to automatically identify opportunities for precomputation, i.e., computation that may be performed ahead of time as opposed to just in time. Second, we optimize the precomputation policy, i.e., a way to split and reorder steps of a computation task in the original software to match the intermittent power supply while satisfying a variety of system requirements; this is accomplished by formulating energy optimization as a constraint satisfiability problem and then solving the problem using an off-the-shelf SMT solver. Third, we use a state-of-the-art compiler platform (LLVM) to automate the program transformation to ensure that the optimized software code is correct by construction. We have evaluated our method on a large number of benchmark programs, which are C programs implementing secure communication protocols that are popular for energy-harvesting IoT devices. Our experimental results show that the method is efficient in optimizing all benchmark programs. Furthermore, the optimized programs significantly outperform the original programs in terms of energy efficiency and latency, and the overall improvement ranges from 2.3X to 36.7X.   

  Cite as    
 Yannan Li and Chao Wang. Constraint Based Compiler Optimization for Energy Harvesting Applications. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 16:1-16:29, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{li_et_al:LIPIcs.ECOOP.2023.16 author = {Li, Yannan and Wang, Chao}, title = {{Constraint Based Compiler Optimization for Energy Harvesting Applications}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {16:1--16:29}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.16}, URN = {urn:nbn:de:0030-drops-182096}, doi = {10.4230/LIPIcs.ECOOP.2023.16}, annote = {Keywords: Compiler, energy optimization, constraint solving, cryptography, IoT} }  @InProceedings{li_et_al:LIPIcs.ECOOP.2023.16 author = {Li, Yannan and Wang, Chao}, title = {{Constraint Based Compiler Optimization for Energy Harvesting Applications}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {16:1--16:29}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.16}, URN = {urn:nbn:de:0030-drops-182096}, doi = {10.4230/LIPIcs.ECOOP.2023.16}, annote = {Keywords: Compiler, energy optimization, constraint solving, cryptography, IoT} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.17    

 Restrictable Variants: A Simple and Practical Alternative to Extensible Variants   
 Authors:  Magnus Madsen, Jonathan Lindegaard Starup, and Matthew Lutze  
  Abstract    
 We propose restrictable variants as a simple and practical alternative to extensible variants. Restrictable variants combine nominal and structural typing: a restrictable variant is an algebraic data type indexed by a type-level set formula that captures its set of active labels. We introduce new pattern-matching constructs that allows programmers to write functions that only match on a subset of variants, i.e., pattern-matches may be non-exhaustive. We then present a type system for restrictable variants which ensures that such non-exhaustive matches cannot get stuck at runtime. An essential feature of restrictable variants is that the type system can capture structure-preserving transformations: specifically the introduction and elimination of variants. This property is important for writing reusable functions, yet many row-based extensible variant systems lack it. In this paper, we present a calculus with restrictable variants, two partial pattern-matching constructs, and a type system that ensures progress and preservation. The type system extends Hindley-Milner with restrictable variants and supports type inference with an extension of Algorithm W with Boolean unification. We implement restrictable variants as an extension of the Flix programming language and conduct a few case studies to illustrate their practical usefulness.   

  Cite as    
 Magnus Madsen, Jonathan Lindegaard Starup, and Matthew Lutze. Restrictable Variants: A Simple and Practical Alternative to Extensible Variants. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 17:1-17:27, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{madsen_et_al:LIPIcs.ECOOP.2023.17 author = {Madsen, Magnus and Starup, Jonathan Lindegaard and Lutze, Matthew}, title = {{Restrictable Variants: A Simple and Practical Alternative to Extensible Variants}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {17:1--17:27}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.17}, URN = {urn:nbn:de:0030-drops-182109}, doi = {10.4230/LIPIcs.ECOOP.2023.17}, annote = {Keywords: restrictable variants, extensible variants, refinement types, Boolean unification} }  @InProceedings{madsen_et_al:LIPIcs.ECOOP.2023.17 author = {Madsen, Magnus and Starup, Jonathan Lindegaard and Lutze, Matthew}, title = {{Restrictable Variants: A Simple and Practical Alternative to Extensible Variants}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {17:1--17:27}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.17}, URN = {urn:nbn:de:0030-drops-182109}, doi = {10.4230/LIPIcs.ECOOP.2023.17}, annote = {Keywords: restrictable variants, extensible variants, refinement types, Boolean unification} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.18    

 Programming with Purity Reflection: Peaceful Coexistence of Effects, Laziness, and Parallelism   
 Authors:  Magnus Madsen and Jaco van de Pol  
  Abstract    
 We present purity reflection, a programming language feature that enables higher-order functions to inspect the purity of their function arguments and to vary their behavior based on this information. The upshot is that operations on data structures can selectively use lazy and/or parallel evaluation while ensuring that side effects are never lost or re-ordered. The technique builds on a recent Hindley-Milner style type and effect system based on Boolean unification which supports both effect polymorphism and complete type inference. We illustrate that avoiding the so-called 'poisoning problem' is crucial to support purity reflection. We propose several new data structures that use purity reflection to switch between eager and lazy, sequential and parallel evaluation. We propose a DelayList, which is maximally lazy but switches to eager evaluation for impure operations. We also propose a DelayMap which is maximally lazy in its values, but also exploits eager and parallel evaluation. We implement purity reflection as an extension of the Flix programming language. We present a new effect-aware form of monomorphization that eliminates purity reflection at compile-time. And finally, we evaluate the cost of this new monomorphization on compilation time and on code size, and determine that it is minimal.   

  Cite as    
 Magnus Madsen and Jaco van de Pol. Programming with Purity Reflection: Peaceful Coexistence of Effects, Laziness, and Parallelism. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 18:1-18:27, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{madsen_et_al:LIPIcs.ECOOP.2023.18 author = {Madsen, Magnus and van de Pol, Jaco}, title = {{Programming with Purity Reflection: Peaceful Coexistence of Effects, Laziness, and Parallelism}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {18:1--18:27}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.18}, URN = {urn:nbn:de:0030-drops-182112}, doi = {10.4230/LIPIcs.ECOOP.2023.18}, annote = {Keywords: type and effect systems, purity reflection, lazy evaluation, parallel evaluation} }  @InProceedings{madsen_et_al:LIPIcs.ECOOP.2023.18 author = {Madsen, Magnus and van de Pol, Jaco}, title = {{Programming with Purity Reflection: Peaceful Coexistence of Effects, Laziness, and Parallelism}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {18:1--18:27}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.18}, URN = {urn:nbn:de:0030-drops-182112}, doi = {10.4230/LIPIcs.ECOOP.2023.18}, annote = {Keywords: type and effect systems, purity reflection, lazy evaluation, parallel evaluation} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.19    

 Exact Separation Logic: Towards Bridging the Gap Between Verification and Bug-Finding   
 Authors:  Petar Maksimović, Caroline Cronjäger, Andreas Lööw, Julian Sutherland, and Philippa Gardner  
  Abstract    
 Over-approximating (OX) program logics, such as separation logic (SL), are used for verifying properties of heap-manipulating programs: all terminating behaviour is characterised, but established results and errors need not be reachable. OX function specifications are thus incompatible with true bug-finding supported by symbolic execution tools such as Pulse and Pulse-X. In contrast, under-approximating (UX) program logics, such as incorrectness separation logic, are used to find true results and bugs: established results and errors are reachable, but there is no mechanism for understanding if all terminating behaviour has been characterised. We introduce exact separation logic (ESL), which provides fully-verified function specifications compatible with both OX verification and UX true bug-funding: all terminating behaviour is characterised and all established results and errors are reachable. We prove soundness for ESL with mutually recursive functions, demonstrating, for the first time, function compositionality for a UX logic. We show that UX program logics require subtle definitions of internal and external function specifications compared with the familiar definitions of OX logics. We investigate the expressivity of ESL and, for the first time, explore the role of abstraction in UX reasoning by verifying abstract ESL specifications of various data-structure algorithms. In doing so, we highlight the difference between abstraction (hiding information) and over-approximation (losing information). Our findings demonstrate that abstraction cannot be used as freely in UX logics as in OX logics, but also that it should be feasible to use ESL to provide tractable function specifications for self-contained, critical code, which would then be used for both verification and true bug-finding.   

  Cite as    
 Petar Maksimović, Caroline Cronjäger, Andreas Lööw, Julian Sutherland, and Philippa Gardner. Exact Separation Logic: Towards Bridging the Gap Between Verification and Bug-Finding. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 19:1-19:27, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{maksimovic_et_al:LIPIcs.ECOOP.2023.19 author = {Maksimovi\'{c}, Petar and Cronj\"{a}ger, Caroline and L\"{o}\"{o}w, Andreas and Sutherland, Julian and Gardner, Philippa}, title = {{Exact Separation Logic: Towards Bridging the Gap Between Verification and Bug-Finding}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {19:1--19:27}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.19}, URN = {urn:nbn:de:0030-drops-182123}, doi = {10.4230/LIPIcs.ECOOP.2023.19}, annote = {Keywords: Separation logic, program correctness, program incorrectness, abstraction} }  @InProceedings{maksimovic_et_al:LIPIcs.ECOOP.2023.19 author = {Maksimovi\'{c}, Petar and Cronj\"{a}ger, Caroline and L\"{o}\"{o}w, Andreas and Sutherland, Julian and Gardner, Philippa}, title = {{Exact Separation Logic: Towards Bridging the Gap Between Verification and Bug-Finding}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {19:1--19:27}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.19}, URN = {urn:nbn:de:0030-drops-182123}, doi = {10.4230/LIPIcs.ECOOP.2023.19}, annote = {Keywords: Separation logic, program correctness, program incorrectness, abstraction} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.20    

 Morpheus: Automated Safety Verification of Data-Dependent Parser Combinator Programs   
 Authors:  Ashish Mishra and Suresh Jagannathan  
  Abstract    
 Parser combinators are a well-known mechanism used for the compositional construction of parsers, and have shown to be particularly useful in writing parsers for rich grammars with data-dependencies and global state. Verifying applications written using them, however, has proven to be challenging in large part because of the inherently effectful nature of the parsers being composed and the difficulty in reasoning about the arbitrarily rich data-dependent semantic actions that can be associated with parsing actions. In this paper, we address these challenges by defining a parser combinator framework called Morpheus equipped with abstractions for defining composable effects tailored for parsing and semantic actions, and a rich specification language used to define safety properties over the constituent parsers comprising a program. Even though its abstractions yield many of the same expressivity benefits as other parser combinator systems, Morpheus is carefully engineered to yield a substantially more tractable automated verification pathway. We demonstrate its utility in verifying a number of realistic, challenging parsing applications, including several cases that involve non-trivial data-dependent relations.   

  Cite as    
 Ashish Mishra and Suresh Jagannathan. Morpheus: Automated Safety Verification of Data-Dependent Parser Combinator Programs. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 20:1-20:27, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{mishra_et_al:LIPIcs.ECOOP.2023.20 author = {Mishra, Ashish and Jagannathan, Suresh}, title = {{Morpheus: Automated Safety Verification of Data-Dependent Parser Combinator Programs}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {20:1--20:27}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.20}, URN = {urn:nbn:de:0030-drops-182138}, doi = {10.4230/LIPIcs.ECOOP.2023.20}, annote = {Keywords: Parsers, Verification, Domain-specific languages, Functional programming, Refinement types, Type systems} }  @InProceedings{mishra_et_al:LIPIcs.ECOOP.2023.20 author = {Mishra, Ashish and Jagannathan, Suresh}, title = {{Morpheus: Automated Safety Verification of Data-Dependent Parser Combinator Programs}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {20:1--20:27}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.20}, URN = {urn:nbn:de:0030-drops-182138}, doi = {10.4230/LIPIcs.ECOOP.2023.20}, annote = {Keywords: Parsers, Verification, Domain-specific languages, Functional programming, Refinement types, Type systems} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.21    

 Automata Learning with an Incomplete Teacher   
 Authors:  Mark Moeller, Thomas Wiener, Alaia Solko-Breslin, Caleb Koch, Nate Foster, and Alexandra Silva  
  Abstract    
 The preceding decade has seen significant interest in use of active learning to build models of programs and protocols. But existing algorithms assume the existence of an idealized oracle - a so-called Minimally Adequate Teacher (MAT) - that cannot be fully realized in practice and so is usually approximated with testing. This work proposes a new framework for active learning based on an incomplete teacher. This new formulation, called iMAT, neatly handles scenarios in which the teacher has access to only a finite number of tests or otherwise has gaps in its knowledge. We adapt Angluin’s L^⋆ algorithm for learning finite automata to incomplete teachers and we build a prototype implementation in OCaml that uses an SMT solver to help fill in information not supplied by the teacher. We demonstrate the behavior of our iMAT prototype on a variety of learning problems from a standard benchmark suite.   

  Cite as    
 Mark Moeller, Thomas Wiener, Alaia Solko-Breslin, Caleb Koch, Nate Foster, and Alexandra Silva. Automata Learning with an Incomplete Teacher. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 21:1-21:30, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{moeller_et_al:LIPIcs.ECOOP.2023.21 author = {Moeller, Mark and Wiener, Thomas and Solko-Breslin, Alaia and Koch, Caleb and Foster, Nate and Silva, Alexandra}, title = {{Automata Learning with an Incomplete Teacher}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {21:1--21:30}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.21}, URN = {urn:nbn:de:0030-drops-182145}, doi = {10.4230/LIPIcs.ECOOP.2023.21}, annote = {Keywords: Finite Automata, Active Learning, SMT Solvers} }  @InProceedings{moeller_et_al:LIPIcs.ECOOP.2023.21 author = {Moeller, Mark and Wiener, Thomas and Solko-Breslin, Alaia and Koch, Caleb and Foster, Nate and Silva, Alexandra}, title = {{Automata Learning with an Incomplete Teacher}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {21:1--21:30}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.21}, URN = {urn:nbn:de:0030-drops-182145}, doi = {10.4230/LIPIcs.ECOOP.2023.21}, annote = {Keywords: Finite Automata, Active Learning, SMT Solvers} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.22    

 Modular Verification of State-Based CRDTs in Separation Logic   
 Authors:  Abel Nieto, Arnaud Daby-Seesaram, Léon Gondelman, Amin Timany, and Lars Birkedal  
  Abstract    
 Conflict-free Replicated Datatypes (CRDTs) are a class of distributed data structures that are highly-available and weakly consistent. The CRDT taxonomy is further divided into two subclasses: state-based and operation-based (op-based). Recent prior work showed how to use separation logic to verify convergence and functional correctness of op-based CRDTs while (a) verifying implementations (as opposed to high-level protocols), (b) giving high level specifications that abstract from low-level implementation details, and (c) providing specifications that are modular (i.e. allow client code to use the CRDT like an abstract data type). We extend this separation logic approach to verification of CRDTs to handle state-based CRDTs, while respecting the desiderata (a)-(c). The key idea is to track the state of a CRDT as a function of the set of operations that produced that state. Using the observation that state-based CRDTs are automatically causally-consistent, we obtain CRDT specifications that are agnostic to whether a CRDT is state- or op-based. When taken together with prior work, our technique thus provides a unified approach to specification and verification of op- and state-based CRDTs. We have tested our approach by verifying StateLib, a library for building state-based CRDTs. Using StateLib, we have further verified convergence and functional correctness of multiple example CRDTs from the literature. Our proofs are written in the Aneris distributed separation logic and are mechanized in Coq.   

  Cite as    
 Abel Nieto, Arnaud Daby-Seesaram, Léon Gondelman, Amin Timany, and Lars Birkedal. Modular Verification of State-Based CRDTs in Separation Logic. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 22:1-22:27, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{nieto_et_al:LIPIcs.ECOOP.2023.22 author = {Nieto, Abel and Daby-Seesaram, Arnaud and Gondelman, L\'{e}on and Timany, Amin and Birkedal, Lars}, title = {{Modular Verification of State-Based CRDTs in Separation Logic}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {22:1--22:27}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.22}, URN = {urn:nbn:de:0030-drops-182154}, doi = {10.4230/LIPIcs.ECOOP.2023.22}, annote = {Keywords: separation logic, distributed systems, CRDT, replicated data type, formal verification} }  @InProceedings{nieto_et_al:LIPIcs.ECOOP.2023.22 author = {Nieto, Abel and Daby-Seesaram, Arnaud and Gondelman, L\'{e}on and Timany, Amin and Birkedal, Lars}, title = {{Modular Verification of State-Based CRDTs in Separation Logic}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {22:1--22:27}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.22}, URN = {urn:nbn:de:0030-drops-182154}, doi = {10.4230/LIPIcs.ECOOP.2023.22}, annote = {Keywords: separation logic, distributed systems, CRDT, replicated data type, formal verification} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.23    

 Information Flow Analysis for Detecting Non-Determinism in Blockchain   
 Authors:  Luca Olivieri, Luca Negrini, Vincenzo Arceri, Fabio Tagliaferro, Pietro Ferrara, Agostino Cortesi, and Fausto Spoto  
  Abstract    
 A mandatory feature for blockchain software, such as smart contracts and decentralized applications, is determinism. In fact, non-deterministic behaviors do not allow blockchain nodes to reach one common consensual state or a deterministic response, which causes the blockchain to be forked, stopped, or to deny services. While domain-specific languages are deterministic by design, general-purpose languages widely used for the development of smart contracts such as Go, provide many sources of non-determinism. However, not all non-deterministic behaviours are critical. In fact, only those that affect the state or the response of the blockchain can cause problems, as other uses (for example, logging) are only observable by the node that executes the application and not by others. Therefore, some frameworks for blockchains, such as Hyperledger Fabric or Cosmos SDK, do not prohibit the use of non-deterministic constructs but leave the programmer the burden of ensuring that the blockchain application is deterministic. In this paper, we present a flow-based approach to detect non-deterministic vulnerabilities which could compromise the blockchain. The analysis is implemented in GoLiSA, a semantics-based static analyzer for Go applications. Our experimental results show that GoLiSA is able to detect all vulnerabilities related to non-determinism on a significant set of applications, with better results than other open-source analyzers for blockchain software written in Go.   

  Cite as    
 Luca Olivieri, Luca Negrini, Vincenzo Arceri, Fabio Tagliaferro, Pietro Ferrara, Agostino Cortesi, and Fausto Spoto. Information Flow Analysis for Detecting Non-Determinism in Blockchain. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 23:1-23:25, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{olivieri_et_al:LIPIcs.ECOOP.2023.23 author = {Olivieri, Luca and Negrini, Luca and Arceri, Vincenzo and Tagliaferro, Fabio and Ferrara, Pietro and Cortesi, Agostino and Spoto, Fausto}, title = {{Information Flow Analysis for Detecting Non-Determinism in Blockchain}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {23:1--23:25}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.23}, URN = {urn:nbn:de:0030-drops-182167}, doi = {10.4230/LIPIcs.ECOOP.2023.23}, annote = {Keywords: Static Analysis, Program Verification, Non-determinism, Blockchain, Smart contracts, DApps, Go language} }  @InProceedings{olivieri_et_al:LIPIcs.ECOOP.2023.23 author = {Olivieri, Luca and Negrini, Luca and Arceri, Vincenzo and Tagliaferro, Fabio and Ferrara, Pietro and Cortesi, Agostino and Spoto, Fausto}, title = {{Information Flow Analysis for Detecting Non-Determinism in Blockchain}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {23:1--23:25}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.23}, URN = {urn:nbn:de:0030-drops-182167}, doi = {10.4230/LIPIcs.ECOOP.2023.23}, annote = {Keywords: Static Analysis, Program Verification, Non-determinism, Blockchain, Smart contracts, DApps, Go language} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.24    

 Toward Tool-Independent Summaries for Symbolic Execution   
 Authors:  Frederico Ramos, Nuno Sabino, Pedro Adão, David A. Naumann, and José Fragoso Santos  
  Abstract    
 We introduce a new symbolic reflection API for implementing tool-independent summaries for the symbolic execution of C programs. We formalise the proposed API as a symbolic semantics and extend two state-of-the-art symbolic execution tools with support for it. Using the proposed API, we implement 67 tool-independent symbolic summaries for a total of 26 libc functions. Furthermore, we present SumBoundVerify, a fully automatic summary validation tool for checking the bounded correctness of the symbolic summaries written using our symbolic reflection API. We use SumBoundVerify to validate 37 symbolic summaries taken from 3 state-of-the-art symbolic execution tools, angr, Binsec and Manticore, detecting a total of 24 buggy summaries.   

  Cite as    
 Frederico Ramos, Nuno Sabino, Pedro Adão, David A. Naumann, and José Fragoso Santos. Toward Tool-Independent Summaries for Symbolic Execution. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 24:1-24:29, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{ramos_et_al:LIPIcs.ECOOP.2023.24 author = {Ramos, Frederico and Sabino, Nuno and Ad\~{a}o, Pedro and Naumann, David A. and Fragoso Santos, Jos\'{e}}, title = {{Toward Tool-Independent Summaries for Symbolic Execution}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {24:1--24:29}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.24}, URN = {urn:nbn:de:0030-drops-182171}, doi = {10.4230/LIPIcs.ECOOP.2023.24}, annote = {Keywords: Symbolic Execution, Runtime Modelling, Symbolic Summaries} }  @InProceedings{ramos_et_al:LIPIcs.ECOOP.2023.24 author = {Ramos, Frederico and Sabino, Nuno and Ad\~{a}o, Pedro and Naumann, David A. and Fragoso Santos, Jos\'{e}}, title = {{Toward Tool-Independent Summaries for Symbolic Execution}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {24:1--24:29}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.24}, URN = {urn:nbn:de:0030-drops-182171}, doi = {10.4230/LIPIcs.ECOOP.2023.24}, annote = {Keywords: Symbolic Execution, Runtime Modelling, Symbolic Summaries} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.25    

 A Direct-Style Effect Notation for Sequential and Parallel Programs   
 Authors:  David Richter, Timon Böhler, Pascal Weisenburger, and Mira Mezini  
  Abstract    
 Modeling sequential and parallel composition of effectful computations has been investigated in a variety of languages for a long time. In particular, the popular do-notation provides a lightweight effect embedding for any instance of a monad. Idiom bracket notation, on the other hand, provides an embedding for applicatives. First, while monads force effects to be executed sequentially, ignoring potential for parallelism, applicatives do not support sequential effects. Composing sequential with parallel effects remains an open problem. This is even more of an issue as real programs consist of a combination of both sequential and parallel segments. Second, common notations do not support invoking effects in direct-style, instead forcing a rigid structure upon the code. In this paper, we propose a mixed applicative/monadic notation that retains parallelism where possible, but allows sequentiality where necessary. We leverage a direct-style notation where sequentiality or parallelism is derived from the structure of the code. We provide a mechanisation of our effectful language in Coq and prove that our compilation approach retains the parallelism of the source program.   

  Cite as    
 David Richter, Timon Böhler, Pascal Weisenburger, and Mira Mezini. A Direct-Style Effect Notation for Sequential and Parallel Programs. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 25:1-25:22, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{richter_et_al:LIPIcs.ECOOP.2023.25 author = {Richter, David and B\"{o}hler, Timon and Weisenburger, Pascal and Mezini, Mira}, title = {{A Direct-Style Effect Notation for Sequential and Parallel Programs}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {25:1--25:22}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.25}, URN = {urn:nbn:de:0030-drops-182181}, doi = {10.4230/LIPIcs.ECOOP.2023.25}, annote = {Keywords: do-notation, parallelism, concurrency, effects} }  @InProceedings{richter_et_al:LIPIcs.ECOOP.2023.25 author = {Richter, David and B\"{o}hler, Timon and Weisenburger, Pascal and Mezini, Mira}, title = {{A Direct-Style Effect Notation for Sequential and Parallel Programs}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {25:1--25:22}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.25}, URN = {urn:nbn:de:0030-drops-182181}, doi = {10.4230/LIPIcs.ECOOP.2023.25}, annote = {Keywords: do-notation, parallelism, concurrency, effects} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.26    

 Sinatra: Stateful Instantaneous Updates for Commercial Browsers Through Multi-Version eXecution   
 Authors:  Ugnius Rumsevicius, Siddhanth Venkateshwaran, Ellen Kidane, and Luís Pina  
  Abstract    
 Browsers are the main way in which most users experience the internet, which makes them a prime target for malicious entities. The best defense for the common user is to keep their browser always up-to-date, installing updates as soon as they are available. Unfortunately, updating a browser is disruptive as it results in loss of user state. Even though modern browsers reopen all pages (tabs) after an update to minimize inconvenience, this approach still loses all local user state in each page (e.g., contents of unsubmitted forms, including associated JavaScript validation state) and assumes that pages can be refreshed and result in the same contents. We believe this is an important barrier that keeps users from updating their browsers as frequently as possible. In this paper, we present the design, implementation, and evaluation of Sinatra, which supports instantaneous browser updates that do not result in any data loss through a novel Multi-Version eXecution (MVX) approach for JavaScript programs, combined with a sophisticated proxy. Sinatra works in pure JavaScript, does not require any browser support, thus works on closed-source browsers, and requires trivial changes to each target page, that can be automated. First, Sinatra captures all the non-determinism available to a JavaScript program (e.g., event handlers executed, expired timers, invocations of Math.random). Our evaluation shows that Sinatra requires 6MB to store such events, and the memory grows at a modest rate of 253KB/s as the user keeps interacting with each page. When an update becomes available, Sinatra transfer the state by re-executing the same set of non-deterministic events on the new browser. During this time, which can be as long as 1.5 seconds, Sinatra uses MVX to allow the user to keep interacting with the old browser. Finally, Sinatra changes the roles in less than 10ms, and the user starts interacting with the new browser, effectively performing a browser update with zero downtime and no loss of state.   

  Cite as    
 Ugnius Rumsevicius, Siddhanth Venkateshwaran, Ellen Kidane, and Luís Pina. Sinatra: Stateful Instantaneous Updates for Commercial Browsers Through Multi-Version eXecution. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 26:1-26:29, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{rumsevicius_et_al:LIPIcs.ECOOP.2023.26 author = {Rumsevicius, Ugnius and Venkateshwaran, Siddhanth and Kidane, Ellen and Pina, Lu{\'\i}s}, title = {{Sinatra: Stateful Instantaneous Updates for Commercial Browsers Through Multi-Version eXecution}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {26:1--26:29}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.26}, URN = {urn:nbn:de:0030-drops-182190}, doi = {10.4230/LIPIcs.ECOOP.2023.26}, annote = {Keywords: Internet browsers, dynamic software updating, multi-version execution} }  @InProceedings{rumsevicius_et_al:LIPIcs.ECOOP.2023.26 author = {Rumsevicius, Ugnius and Venkateshwaran, Siddhanth and Kidane, Ellen and Pina, Lu{\'\i}s}, title = {{Sinatra: Stateful Instantaneous Updates for Commercial Browsers Through Multi-Version eXecution}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {26:1--26:29}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.26}, URN = {urn:nbn:de:0030-drops-182190}, doi = {10.4230/LIPIcs.ECOOP.2023.26}, annote = {Keywords: Internet browsers, dynamic software updating, multi-version execution} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.27    

 An Efficient Vectorized Hash Table for Batch Computations   
 Authors:  Hesam Shahrokhi and Amir Shaikhha  
  Abstract    
 In recent years, the increasing demand for high-performance analytics on big data has led the research on batch hash tables. It is shown that this type of hash table can benefit from the cache locality and multi-threading more than ordinary hash tables. Moreover, the batch design for hash tables is amenable to using advanced features of modern processors such as prefetching and SIMD vectorization. While state-of-the-art research and open-source projects on batch hash tables made efforts to propose improved designs by better usage of mentioned hardware features, their approaches still do not fully exploit the existing opportunities for performance improvements. Furthermore, there is a gap for a high-level batch API of such hash tables for wider adoption of these high-performance data structures. In this paper, we present Vec-HT, a parallel, SIMD-vectorized, and prefetching-enabled hash table for fast batch processing. To allow developers to fully take advantage of its performance, we recommend a high-level batch API design. Our experimental results show the superiority and competitiveness of this approach in comparison with the alternative implementations and state-of-the-art for the data-intensive workloads of relational join processing, set operations, and sparse vector processing.   

  Cite as    
 Hesam Shahrokhi and Amir Shaikhha. An Efficient Vectorized Hash Table for Batch Computations. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 27:1-27:27, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{shahrokhi_et_al:LIPIcs.ECOOP.2023.27 author = {Shahrokhi, Hesam and Shaikhha, Amir}, title = {{An Efficient Vectorized Hash Table for Batch Computations}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {27:1--27:27}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.27}, URN = {urn:nbn:de:0030-drops-182203}, doi = {10.4230/LIPIcs.ECOOP.2023.27}, annote = {Keywords: Hash tables, Vectorization, Parallelization, Prefetching} }  @InProceedings{shahrokhi_et_al:LIPIcs.ECOOP.2023.27 author = {Shahrokhi, Hesam and Shaikhha, Amir}, title = {{An Efficient Vectorized Hash Table for Batch Computations}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {27:1--27:27}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.27}, URN = {urn:nbn:de:0030-drops-182203}, doi = {10.4230/LIPIcs.ECOOP.2023.27}, annote = {Keywords: Hash tables, Vectorization, Parallelization, Prefetching} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.28    

 Hinted Dictionaries: Efficient Functional Ordered Sets and Maps   
 Authors:  Amir Shaikhha, Mahdi Ghorbani, and Hesam Shahrokhi  
  Abstract    
 This paper introduces hinted dictionaries for expressing efficient ordered sets and maps functionally. As opposed to the traditional ordered dictionaries with logarithmic operations, hinted dictionaries can achieve better performance by using cursor-like objects referred to as hints. Hinted dictionaries unify the interfaces of imperative ordered dictionaries (e.g., C++ maps) and functional ones (e.g., Adams' sets). We show that such dictionaries can use sorted arrays, unbalanced trees, and balanced trees as their underlying representations. Throughout the paper, we use Scala to present the different components of hinted dictionaries. We also provide a C++ implementation to evaluate the effectiveness of hinted dictionaries. Hinted dictionaries provide superior performance for set-set operations in comparison with the standard library of C++. Also, they show a competitive performance in comparison with the SciPy library for sparse vector operations.   

  Cite as    
 Amir Shaikhha, Mahdi Ghorbani, and Hesam Shahrokhi. Hinted Dictionaries: Efficient Functional Ordered Sets and Maps. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 28:1-28:30, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{shaikhha_et_al:LIPIcs.ECOOP.2023.28 author = {Shaikhha, Amir and Ghorbani, Mahdi and Shahrokhi, Hesam}, title = {{Hinted Dictionaries: Efficient Functional Ordered Sets and Maps}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {28:1--28:30}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.28}, URN = {urn:nbn:de:0030-drops-182214}, doi = {10.4230/LIPIcs.ECOOP.2023.28}, annote = {Keywords: Functional Collections, Ordered Dictionaries, Sparse Linear Algebra} }  @InProceedings{shaikhha_et_al:LIPIcs.ECOOP.2023.28 author = {Shaikhha, Amir and Ghorbani, Mahdi and Shahrokhi, Hesam}, title = {{Hinted Dictionaries: Efficient Functional Ordered Sets and Maps}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {28:1--28:30}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.28}, URN = {urn:nbn:de:0030-drops-182214}, doi = {10.4230/LIPIcs.ECOOP.2023.28}, annote = {Keywords: Functional Collections, Ordered Dictionaries, Sparse Linear Algebra} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.29    

 Semantics for Noninterference with Interaction Trees   
 Authors:  Lucas Silver, Paul He, Ethan Cecchetti, Andrew K. Hirsch, and Steve Zdancewic  
  Abstract    
 Noninterference is the strong information-security property that a program does not leak secrets through publicly-visible behavior. In the presence of effects such as nontermination, state, and exceptions, reasoning about noninterference quickly becomes subtle. We advocate using interaction trees (ITrees) to provide compositional mechanized proofs of noninterference for multi-language, effectful, nonterminating programs, while retaining executability of the semantics. We develop important foundations for security analysis with ITrees: two indistinguishability relations, leading to two standard notions of noninterference with adversaries of different strength, along with metatheory libraries for reasoning about each. We demonstrate the utility of our results using a simple imperative language with embedded assembly, along with a compiler into that assembly language.   

  Cite as    
 Lucas Silver, Paul He, Ethan Cecchetti, Andrew K. Hirsch, and Steve Zdancewic. Semantics for Noninterference with Interaction Trees. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 29:1-29:29, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{silver_et_al:LIPIcs.ECOOP.2023.29 author = {Silver, Lucas and He, Paul and Cecchetti, Ethan and Hirsch, Andrew K. and Zdancewic, Steve}, title = {{Semantics for Noninterference with Interaction Trees}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {29:1--29:29}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.29}, URN = {urn:nbn:de:0030-drops-182227}, doi = {10.4230/LIPIcs.ECOOP.2023.29}, annote = {Keywords: verification, information-flow, denotational semantics, monads} }  @InProceedings{silver_et_al:LIPIcs.ECOOP.2023.29 author = {Silver, Lucas and He, Paul and Cecchetti, Ethan and Hirsch, Andrew K. and Zdancewic, Steve}, title = {{Semantics for Noninterference with Interaction Trees}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {29:1--29:29}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.29}, URN = {urn:nbn:de:0030-drops-182227}, doi = {10.4230/LIPIcs.ECOOP.2023.29}, annote = {Keywords: verification, information-flow, denotational semantics, monads} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.30    

 Interaction Tree Specifications: A Framework for Specifying Recursive, Effectful Computations That Supports Auto-Active Verification   
 Authors:  Lucas Silver, Eddy Westbrook, Matthew Yacavone, and Ryan Scott  
  Abstract    
 This paper presents a specification framework for monadic, recursive, interactive programs that supports auto-active verification, an approach that combines user-provided guidance with automatic verification techniques. This verification tool is designed to have the flexibility of a manual approach to verification along with the usability benefits of automatic approaches. We accomplish this by augmenting Interaction Trees, a Coq datastructure for representing effectful computations, with logical quantifier events. We show that this yields a language of specifications that are easy to understand, automatable, and are powerful enough to handle properties that involve non-termination. Our framework is implemented as a library in Coq. We demonstrate the effectiveness of this framework by verifying real, low-level code.   

  Cite as    
 Lucas Silver, Eddy Westbrook, Matthew Yacavone, and Ryan Scott. Interaction Tree Specifications: A Framework for Specifying Recursive, Effectful Computations That Supports Auto-Active Verification. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 30:1-30:26, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{silver_et_al:LIPIcs.ECOOP.2023.30 author = {Silver, Lucas and Westbrook, Eddy and Yacavone, Matthew and Scott, Ryan}, title = {{Interaction Tree Specifications: A Framework for Specifying Recursive, Effectful Computations That Supports Auto-Active Verification}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {30:1--30:26}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.30}, URN = {urn:nbn:de:0030-drops-182239}, doi = {10.4230/LIPIcs.ECOOP.2023.30}, annote = {Keywords: coinduction, specification, verification, monads} }  @InProceedings{silver_et_al:LIPIcs.ECOOP.2023.30 author = {Silver, Lucas and Westbrook, Eddy and Yacavone, Matthew and Scott, Ryan}, title = {{Interaction Tree Specifications: A Framework for Specifying Recursive, Effectful Computations That Supports Auto-Active Verification}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {30:1--30:26}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.30}, URN = {urn:nbn:de:0030-drops-182239}, doi = {10.4230/LIPIcs.ECOOP.2023.30}, annote = {Keywords: coinduction, specification, verification, monads} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.31    

 Breaking the Negative Cycle: Exploring the Design Space of Stratification for First-Class Datalog Constraints   
 Authors:  Jonathan Lindegaard Starup, Magnus Madsen, and Ondřej Lhoták  
  Abstract    
 The λ_Dat calculus brings together the power of functional and declarative logic programming in one language. In λ_Dat, Datalog constraints are first-class values that can be constructed, passed around as arguments, returned, composed with other constraints, and solved. A significant part of the expressive power of Datalog comes from the use of negation. Stratified negation is a particularly simple and practical form of negation accessible to ordinary programmers. Stratification requires that Datalog programs must not use recursion through negation. For a Datalog program, this requirement is straightforward to check, but for a λ_Dat program, it is not so simple: A λ_Dat program constructs, composes, and solves Datalog programs at runtime. Hence stratification cannot readily be determined at compile-time. In this paper, we explore the design space of stratification for λ_Dat. We investigate strategies to ensure, at compile-time, that programs constructed at runtime are guaranteed to be stratified, and we argue that previous design choices in the Flix programming language have been suboptimal.   

  Cite as    
 Jonathan Lindegaard Starup, Magnus Madsen, and Ondřej Lhoták. Breaking the Negative Cycle: Exploring the Design Space of Stratification for First-Class Datalog Constraints. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 31:1-31:28, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{starup_et_al:LIPIcs.ECOOP.2023.31 author = {Starup, Jonathan Lindegaard and Madsen, Magnus and Lhot\'{a}k, Ond\v{r}ej}, title = {{Breaking the Negative Cycle: Exploring the Design Space of Stratification for First-Class Datalog Constraints}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {31:1--31:28}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.31}, URN = {urn:nbn:de:0030-drops-182244}, doi = {10.4230/LIPIcs.ECOOP.2023.31}, annote = {Keywords: Datalog, first-class Datalog constraints, negation, stratified negation, type system, row polymorphism, the Flix programming language} }  @InProceedings{starup_et_al:LIPIcs.ECOOP.2023.31 author = {Starup, Jonathan Lindegaard and Madsen, Magnus and Lhot\'{a}k, Ond\v{r}ej}, title = {{Breaking the Negative Cycle: Exploring the Design Space of Stratification for First-Class Datalog Constraints}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {31:1--31:28}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.31}, URN = {urn:nbn:de:0030-drops-182244}, doi = {10.4230/LIPIcs.ECOOP.2023.31}, annote = {Keywords: Datalog, first-class Datalog constraints, negation, stratified negation, type system, row polymorphism, the Flix programming language} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.32    

 Asynchronous Multiparty Session Type Implementability is Decidable - Lessons Learned from Message Sequence Charts   
 Authors:  Felix Stutz  
  Abstract    
 Multiparty session types (MSTs) provide efficient means to specify and verify asynchronous message-passing systems. For a global type, which specifies all interactions between roles in a system, the implementability problem asks whether there are local specifications for all roles such that their composition is deadlock-free and generates precisely the specified executions. Decidability of the implementability problem is an open question. We answer it positively for global types with sender-driven choice, which allow a sender to send to different receivers upon branching and a receiver to receive from different senders. To achieve this, we generalise results from the domain of high-level message sequence charts (HMSCs). This connection also allows us to comprehensively investigate how HMSC techniques can be adapted to the MST setting. This comprises techniques to make the problem algorithmically more tractable as well as a variant of implementability that may open new design space for MSTs. Inspired by potential performance benefits, we introduce a generalisation of the implementability problem that we, unfortunately, prove to be undecidable.   

  Cite as    
 Felix Stutz. Asynchronous Multiparty Session Type Implementability is Decidable - Lessons Learned from Message Sequence Charts. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 32:1-32:31, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{stutz:LIPIcs.ECOOP.2023.32 author = {Stutz, Felix}, title = {{Asynchronous Multiparty Session Type Implementability is Decidable - Lessons Learned from Message Sequence Charts}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {32:1--32:31}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.32}, URN = {urn:nbn:de:0030-drops-182251}, doi = {10.4230/LIPIcs.ECOOP.2023.32}, annote = {Keywords: Multiparty session types, Verification, Message sequence charts} }  @InProceedings{stutz:LIPIcs.ECOOP.2023.32 author = {Stutz, Felix}, title = {{Asynchronous Multiparty Session Type Implementability is Decidable - Lessons Learned from Message Sequence Charts}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {32:1--32:31}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.32}, URN = {urn:nbn:de:0030-drops-182251}, doi = {10.4230/LIPIcs.ECOOP.2023.32}, annote = {Keywords: Multiparty session types, Verification, Message sequence charts} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.33    

 ConDRust: Scalable Deterministic Concurrency from Verifiable Rust Programs   
 Authors:  Felix Suchert, Lisza Zeidler, Jeronimo Castrillon, and Sebastian Ertel  
  Abstract    
 SAT/SMT-solvers and model checkers automate formal verification of sequential programs. Formal reasoning about scalable concurrent programs is still manual and requires expert knowledge. But scalability is a fundamental requirement of current and future programs. Sequential imperative programs compose statements, function/method calls and control flow constructs. Concurrent programming models provide constructs for concurrent composition. Concurrency abstractions such as threads and synchronization primitives such as locks compose the individual parts of a concurrent program that are meant to execute in parallel. We propose to rather compose the individual parts again using sequential composition and compile this sequential composition into a concurrent one. The developer can use existing tools to formally verify the sequential program while the translated concurrent program provides the dearly requested scalability. Following this insight, we present ConDRust, a new programming model and compiler for Rust programs. The ConDRust compiler translates sequential composition into a concurrent composition based on threads and message-passing channels. During compilation, the compiler preserves the semantics of the sequential program along with much desired properties such as determinism. Our evaluation shows that our ConDRust compiler generates concurrent deterministic code that can outperform even non-deterministic programs by up to a factor of three for irregular algorithms that are particularly hard to parallelize.   

  Cite as    
 Felix Suchert, Lisza Zeidler, Jeronimo Castrillon, and Sebastian Ertel. ConDRust: Scalable Deterministic Concurrency from Verifiable Rust Programs. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 33:1-33:39, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{suchert_et_al:LIPIcs.ECOOP.2023.33 author = {Suchert, Felix and Zeidler, Lisza and Castrillon, Jeronimo and Ertel, Sebastian}, title = {{ConDRust: Scalable Deterministic Concurrency from Verifiable Rust Programs}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {33:1--33:39}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.33}, URN = {urn:nbn:de:0030-drops-182263}, doi = {10.4230/LIPIcs.ECOOP.2023.33}, annote = {Keywords: concurrent programming, verification, scalability} }  @InProceedings{suchert_et_al:LIPIcs.ECOOP.2023.33 author = {Suchert, Felix and Zeidler, Lisza and Castrillon, Jeronimo and Ertel, Sebastian}, title = {{ConDRust: Scalable Deterministic Concurrency from Verifiable Rust Programs}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {33:1--33:39}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.33}, URN = {urn:nbn:de:0030-drops-182263}, doi = {10.4230/LIPIcs.ECOOP.2023.33}, annote = {Keywords: concurrent programming, verification, scalability} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.34    

 Dependent Merges and First-Class Environments   
 Authors:  Jinhao Tan and Bruno C. d. S. Oliveira  
  Abstract    
 In most programming languages a (runtime) environment stores all the definitions that are available to programmers. Typically, environments are a meta-level notion, used only conceptually or internally in the implementation of programming languages. Only a few programming languages allow environments to be first-class values, which can be manipulated directly in programs. Although there is some research on calculi with first-class environments for statically typed programming languages, these calculi typically have significant restrictions. In this paper we propose a statically typed calculus, called 𝖤_i, with first-class environments. The main novelty of the 𝖤_i calculus is its support for first-class environments, together with an expressive set of operators that manipulate them. Such operators include: reification of the current environment, environment concatenation, environment restriction, and reflection mechanisms for running computations under a given environment. In 𝖤_i any type can act as a context (i.e. an environment type) and contexts are simply types. Furthermore, because 𝖤_i supports subtyping, there is a natural notion of context subtyping. There are two important ideas in 𝖤_i that generalize and are inspired by existing notions in the literature. The 𝖤_i calculus borrows disjoint intersection types and a merge operator, used in 𝖤_i to model contexts and environments, from the λ_i calculus. However, unlike the merges in λ_i, the merges in 𝖤_i can depend on previous components of a merge. From implicit calculi, the 𝖤_i calculus borrows the notion of a query, which allows type-based lookups on environments. In particular, queries are key to the ability of 𝖤_i to reify the current environment, or some parts of it. We prove the determinism and type soundness of 𝖤_i, and show that 𝖤_i can encode all well-typed λ_i programs.   

  Cite as    
 Jinhao Tan and Bruno C. d. S. Oliveira. Dependent Merges and First-Class Environments. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 34:1-34:32, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{tan_et_al:LIPIcs.ECOOP.2023.34 author = {Tan, Jinhao and Oliveira, Bruno C. d. S.}, title = {{Dependent Merges and First-Class Environments}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {34:1--34:32}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.34}, URN = {urn:nbn:de:0030-drops-182277}, doi = {10.4230/LIPIcs.ECOOP.2023.34}, annote = {Keywords: First-class Environments, Disjointness, Intersection Types} }  @InProceedings{tan_et_al:LIPIcs.ECOOP.2023.34 author = {Tan, Jinhao and Oliveira, Bruno C. d. S.}, title = {{Dependent Merges and First-Class Environments}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {34:1--34:32}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.34}, URN = {urn:nbn:de:0030-drops-182277}, doi = {10.4230/LIPIcs.ECOOP.2023.34}, annote = {Keywords: First-class Environments, Disjointness, Intersection Types} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.35    

 Synthesis-Aided Crash Consistency for Storage Systems   
 Authors:  Jacob Van Geffen, Xi Wang, Emina Torlak, and James Bornholt  
  Abstract    
 Reliable storage systems must be crash consistent - guaranteed to recover to a consistent state after a crash. Crash consistency is non-trivial as it requires maintaining complex invariants about persistent data structures in the presence of caching, reordering, and system failures. Current programming models offer little support for implementing crash consistency, forcing storage system developers to roll their own consistency mechanisms. Bugs in these mechanisms can lead to severe data loss for applications that rely on persistent storage. This paper presents a new synthesis-aided programming model for building crash-consistent storage systems. In this approach, storage systems can assume an angelic crash-consistency model, where the underlying storage stack promises to resolve crashes in favor of consistency whenever possible. To realize this model, we introduce a new labeled writes interface for developers to identify their writes to disk, and develop a program synthesis tool, DepSynth, that generates dependency rules to enforce crash consistency over these labeled writes. We evaluate our model in a case study on a production storage system at Amazon Web Services. We find that DepSynth can automate crash consistency for this complex storage system, with similar results to existing expert-written code, and can automatically identify and correct consistency and performance issues.   

  Cite as    
 Jacob Van Geffen, Xi Wang, Emina Torlak, and James Bornholt. Synthesis-Aided Crash Consistency for Storage Systems. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 35:1-35:26, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{vangeffen_et_al:LIPIcs.ECOOP.2023.35 author = {Van Geffen, Jacob and Wang, Xi and Torlak, Emina and Bornholt, James}, title = {{Synthesis-Aided Crash Consistency for Storage Systems}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {35:1--35:26}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.35}, URN = {urn:nbn:de:0030-drops-182285}, doi = {10.4230/LIPIcs.ECOOP.2023.35}, annote = {Keywords: program synthesis, crash consistency, file systems} }  @InProceedings{vangeffen_et_al:LIPIcs.ECOOP.2023.35 author = {Van Geffen, Jacob and Wang, Xi and Torlak, Emina and Bornholt, James}, title = {{Synthesis-Aided Crash Consistency for Storage Systems}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {35:1--35:26}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.35}, URN = {urn:nbn:de:0030-drops-182285}, doi = {10.4230/LIPIcs.ECOOP.2023.35}, annote = {Keywords: program synthesis, crash consistency, file systems} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.36    

 Synthesizing Conjunctive Queries for Code Search   
 Authors:  Chengpeng Wang, Peisen Yao, Wensheng Tang, Gang Fan, and Charles Zhang  
  Abstract    
 This paper presents Squid, a new conjunctive query synthesis algorithm for searching code with target patterns. Given positive and negative examples along with a natural language description, Squid analyzes the relations derived from the examples by a Datalog-based program analyzer and synthesizes a conjunctive query expressing the search intent. The synthesized query can be further used to search for desired grammatical constructs in the editor. To achieve high efficiency, we prune the huge search space by removing unnecessary relations and enumerating query candidates via refinement. We also introduce two quantitative metrics for query prioritization to select the queries from multiple candidates, yielding desired queries for code search. We have evaluated Squid on over thirty code search tasks. It is shown that Squid successfully synthesizes the conjunctive queries for all the tasks, taking only 2.56 seconds on average.   

  Cite as    
 Chengpeng Wang, Peisen Yao, Wensheng Tang, Gang Fan, and Charles Zhang. Synthesizing Conjunctive Queries for Code Search. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 36:1-36:30, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{wang_et_al:LIPIcs.ECOOP.2023.36 author = {Wang, Chengpeng and Yao, Peisen and Tang, Wensheng and Fan, Gang and Zhang, Charles}, title = {{Synthesizing Conjunctive Queries for Code Search}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {36:1--36:30}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.36}, URN = {urn:nbn:de:0030-drops-182294}, doi = {10.4230/LIPIcs.ECOOP.2023.36}, annote = {Keywords: Query Synthesis, Multi-modal Program Synthesis, Code Search} }  @InProceedings{wang_et_al:LIPIcs.ECOOP.2023.36 author = {Wang, Chengpeng and Yao, Peisen and Tang, Wensheng and Fan, Gang and Zhang, Charles}, title = {{Synthesizing Conjunctive Queries for Code Search}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {36:1--36:30}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.36}, URN = {urn:nbn:de:0030-drops-182294}, doi = {10.4230/LIPIcs.ECOOP.2023.36}, annote = {Keywords: Query Synthesis, Multi-modal Program Synthesis, Code Search} }    

  Document   
 DOI: 10.4230/LIPIcs.ECOOP.2023.37    

 Do Machine Learning Models Produce TypeScript Types That Type Check?   
 Authors:  Ming-Ho Yee and Arjun Guha  
  Abstract    
 Type migration is the process of adding types to untyped code to gain assurance at compile time. TypeScript and other gradual type systems facilitate type migration by allowing programmers to start with imprecise types and gradually strengthen them. However, adding types is a manual effort and several migrations on large, industry codebases have been reported to have taken several years. In the research community, there has been significant interest in using machine learning to automate TypeScript type migration. Existing machine learning models report a high degree of accuracy in predicting individual TypeScript type annotations. However, in this paper we argue that accuracy can be misleading, and we should address a different question: can an automatic type migration tool produce code that passes the TypeScript type checker? We present TypeWeaver, a TypeScript type migration tool that can be used with an arbitrary type prediction model. We evaluate TypeWeaver with three models from the literature: DeepTyper, a recurrent neural network; LambdaNet, a graph neural network; and InCoder, a general-purpose, multi-language transformer that supports fill-in-the-middle tasks. Our tool automates several steps that are necessary for using a type prediction model, including (1) importing types for a project’s dependencies; (2) migrating JavaScript modules to TypeScript notation; (3) inserting predicted type annotations into the program to produce TypeScript when needed; and (4) rejecting non-type predictions when needed. We evaluate TypeWeaver on a dataset of 513 JavaScript packages, including packages that have never been typed before. With the best type prediction model, we find that only 21% of packages type check, but more encouragingly, 69% of files type check successfully.   

  Cite as    
 Ming-Ho Yee and Arjun Guha. Do Machine Learning Models Produce TypeScript Types That Type Check?. In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 37:1-37:28, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{yee_et_al:LIPIcs.ECOOP.2023.37 author = {Yee, Ming-Ho and Guha, Arjun}, title = {{Do Machine Learning Models Produce TypeScript Types That Type Check?}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {37:1--37:28}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.37}, URN = {urn:nbn:de:0030-drops-182307}, doi = {10.4230/LIPIcs.ECOOP.2023.37}, annote = {Keywords: Type migration, deep learning} }  @InProceedings{yee_et_al:LIPIcs.ECOOP.2023.37 author = {Yee, Ming-Ho and Guha, Arjun}, title = {{Do Machine Learning Models Produce TypeScript Types That Type Check?}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {37:1--37:28}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.37}, URN = {urn:nbn:de:0030-drops-182307}, doi = {10.4230/LIPIcs.ECOOP.2023.37}, annote = {Keywords: Type migration, deep learning} }    

  Document   
 Experience Paper   
 DOI: 10.4230/LIPIcs.ECOOP.2023.38    

 Building Code Transpilers for Domain-Specific Languages Using Program Synthesis (Experience Paper)   
 Authors:  Sahil Bhatia, Sumer Kohli, Sanjit A. Seshia, and Alvin Cheung  
  Abstract    
 Domain-specific languages (DSLs) are prevalent across many application domains. Such languages let developers easily express computations using high-level abstractions that result in performant implementations. To leverage DSLs, however, application developers need to master the DSL’s syntax and manually rewrite existing code. Compilers can aid in this effort, but part of building a compiler requires transpiling code from the source code to the target DSL. Such transpilation is typically done via pattern-matching rules on the source code. Sadly, developing such rules is often a painstaking and error-prone process. In this paper, we describe our experience in using program synthesis to build code transpilers. To do so, we developed MetaLift, a new framework for building transpilers that transform general-purpose code into DSLs using program synthesis. To use MetaLift, transpiler developers first define the target DSL’s semantics using MetaLift’s specification language, and specify the search space for each input code fragment to be transpiled using MetaLift’s API. MetaLift then leverages program synthesizers and theorem provers to automatically find transpilations expressed in the target DSL that is provably semantic equivalent to the input code. We have used MetaLift to build three DSL transpilers targeting different programming models and application domains. Our results show that the MetaLift-based compilers can translate many benchmarks used in prior work created by specialized implementations, but can be built using orders-of-magnitude fewer lines of code as compared to prior work.   

  Cite as    
 Sahil Bhatia, Sumer Kohli, Sanjit A. Seshia, and Alvin Cheung. Building Code Transpilers for Domain-Specific Languages Using Program Synthesis (Experience Paper). In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 38:1-38:30, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{bhatia_et_al:LIPIcs.ECOOP.2023.38 author = {Bhatia, Sahil and Kohli, Sumer and Seshia, Sanjit A. and Cheung, Alvin}, title = {{Building Code Transpilers for Domain-Specific Languages Using Program Synthesis}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {38:1--38:30}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.38}, URN = {urn:nbn:de:0030-drops-182316}, doi = {10.4230/LIPIcs.ECOOP.2023.38}, annote = {Keywords: Program Synthesis, Code Transpilation, DSLs, Verification} }  @InProceedings{bhatia_et_al:LIPIcs.ECOOP.2023.38 author = {Bhatia, Sahil and Kohli, Sumer and Seshia, Sanjit A. and Cheung, Alvin}, title = {{Building Code Transpilers for Domain-Specific Languages Using Program Synthesis}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {38:1--38:30}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.38}, URN = {urn:nbn:de:0030-drops-182316}, doi = {10.4230/LIPIcs.ECOOP.2023.38}, annote = {Keywords: Program Synthesis, Code Transpilation, DSLs, Verification} }    

  Document   
 Experience Paper   
 DOI: 10.4230/LIPIcs.ECOOP.2023.39    

 Rust for Morello: Always-On Memory Safety, Even in Unsafe Code (Experience Paper)   
 Authors:  Sarah Harris, Simon Cooksey, Michael Vollmer, and Mark Batty  
  Abstract    
 Memory safety issues are a serious concern in systems programming. Rust is a systems language that provides memory safety through a combination of a static checks embodied in the type system and ad hoc dynamic checks inserted where this analysis becomes impractical. The Morello prototype architecture from ARM uses capabilities, fat pointers augmented with object bounds information, to catch failures of memory safety. This paper presents a compiler from Rust to the Morello architecture, together with a comparison of the performance of Rust’s runtime safety checks and the hardware-supported checks of Morello. The cost of Morello’s always-on memory safety guarantees is 39% in our 19 benchmark suites from the Rust crates repository (comprising 870 total benchmarks). For this cost, Morello’s capabilities ensure that even unsafe Rust code benefits from memory safety guarantees.   

  Cite as    
 Sarah Harris, Simon Cooksey, Michael Vollmer, and Mark Batty. Rust for Morello: Always-On Memory Safety, Even in Unsafe Code (Experience Paper). In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 39:1-39:27, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{harris_et_al:LIPIcs.ECOOP.2023.39 author = {Harris, Sarah and Cooksey, Simon and Vollmer, Michael and Batty, Mark}, title = {{Rust for Morello: Always-On Memory Safety, Even in Unsafe Code}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {39:1--39:27}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.39}, URN = {urn:nbn:de:0030-drops-182322}, doi = {10.4230/LIPIcs.ECOOP.2023.39}, annote = {Keywords: Compilers, Rust, Memory Safety, CHERI} }  @InProceedings{harris_et_al:LIPIcs.ECOOP.2023.39 author = {Harris, Sarah and Cooksey, Simon and Vollmer, Michael and Batty, Mark}, title = {{Rust for Morello: Always-On Memory Safety, Even in Unsafe Code}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {39:1--39:27}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.39}, URN = {urn:nbn:de:0030-drops-182322}, doi = {10.4230/LIPIcs.ECOOP.2023.39}, annote = {Keywords: Compilers, Rust, Memory Safety, CHERI} }    

  Document   
 Experience Paper   
 DOI: 10.4230/LIPIcs.ECOOP.2023.40    

 On Using VeriFast, VerCors, Plural, and KeY to Check Object Usage (Experience Paper)   
 Authors:  João Mota, Marco Giunti, and António Ravara  
  Abstract    
 Typestates are a notion of behavioral types that describe protocols for stateful objects, specifying the available methods for each state. Ensuring methods are called in the correct order (protocol compliance), and that, if and when the program terminates, all objects are in the final state (protocol completion) is crucial to write better and safer programs. Objects of this kind are commonly shared among different clients or stored in collections, which may also be shared. However, statically checking protocol compliance and completion when objects are shared is challenging. To evaluate the support given by state of the art verification tools in checking the correct use of shared objects with protocol, we present a survey on four tools for Java: VeriFast, VerCors, Plural, and KeY. We describe the implementation of a file reader, linked-list, and iterator, check for each tool its ability to statically guarantee protocol compliance and completion, even when objects are shared in collections, and evaluate the programmer’s effort in making the code acceptable to these tools. With this study, we motivate the need for lightweight methods to verify the presented kinds of programs.   

  Cite as    
 João Mota, Marco Giunti, and António Ravara. On Using VeriFast, VerCors, Plural, and KeY to Check Object Usage (Experience Paper). In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 40:1-40:29, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{mota_et_al:LIPIcs.ECOOP.2023.40 author = {Mota, Jo\~{a}o and Giunti, Marco and Ravara, Ant\'{o}nio}, title = {{On Using VeriFast, VerCors, Plural, and KeY to Check Object Usage}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {40:1--40:29}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.40}, URN = {urn:nbn:de:0030-drops-182330}, doi = {10.4230/LIPIcs.ECOOP.2023.40}, annote = {Keywords: Java, Typestates, VeriFast, VerCors, Plural, KeY} }  @InProceedings{mota_et_al:LIPIcs.ECOOP.2023.40 author = {Mota, Jo\~{a}o and Giunti, Marco and Ravara, Ant\'{o}nio}, title = {{On Using VeriFast, VerCors, Plural, and KeY to Check Object Usage}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {40:1--40:29}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.40}, URN = {urn:nbn:de:0030-drops-182330}, doi = {10.4230/LIPIcs.ECOOP.2023.40}, annote = {Keywords: Java, Typestates, VeriFast, VerCors, Plural, KeY} }    

  Document   
 Pearl/Brave New Idea   
 DOI: 10.4230/LIPIcs.ECOOP.2023.41    

 The Dolorem Pattern: Growing a Language Through Compile-Time Function Execution (Pearl/Brave New Idea)   
 Authors:  Simon Henniger and Nada Amin  
  Abstract    
 Programming languages are often designed as static, monolithic units. As a result, they are inflexible. We show a new mechanism of programming language design that allows to more flexible languages: by using compile-time function execution and metaprogramming, we implement a language mostly in itself. Our approach is usable for creating feature-rich, yet low-overhead system programming languages. We illustrate it on two systems, one that lowers to C and one that lowers to LLVM.   

  Cite as    
 Simon Henniger and Nada Amin. The Dolorem Pattern: Growing a Language Through Compile-Time Function Execution (Pearl/Brave New Idea). In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 41:1-41:27, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{henniger_et_al:LIPIcs.ECOOP.2023.41 author = {Henniger, Simon and Amin, Nada}, title = {{The Dolorem Pattern: Growing a Language Through Compile-Time Function Execution}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {41:1--41:27}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.41}, URN = {urn:nbn:de:0030-drops-182343}, doi = {10.4230/LIPIcs.ECOOP.2023.41}, annote = {Keywords: extensible languages, meta programming, macros, program generation, compilation} }  @InProceedings{henniger_et_al:LIPIcs.ECOOP.2023.41 author = {Henniger, Simon and Amin, Nada}, title = {{The Dolorem Pattern: Growing a Language Through Compile-Time Function Execution}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {41:1--41:27}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.41}, URN = {urn:nbn:de:0030-drops-182343}, doi = {10.4230/LIPIcs.ECOOP.2023.41}, annote = {Keywords: extensible languages, meta programming, macros, program generation, compilation} }    

  Document   
 Pearl/Brave New Idea   
 DOI: 10.4230/LIPIcs.ECOOP.2023.42    

 Synthetic Behavioural Typing: Sound, Regular Multiparty Sessions via Implicit Local Types (Pearl/Brave New Idea)   
 Authors:  Sung-Shik Jongmans and Francisco Ferreira  
  Abstract    
 Programming distributed systems is difficult. Multiparty session typing (MPST) is a method to automatically prove safety and liveness of protocol implementations relative to protocol specifications. In this paper, we introduce two new techniques to significantly improve the expressiveness of the MPST method: projection is based on implicit local types instead of explicit; type checking is based on the operational semantics of implicit local types instead of on the syntax. That is, the reduction relation on implicit local types is used not only "a posteriori" to prove type soundness (as usual), but also "a priori" to define the typing rules - synthetically. Classes of protocols that can now be specified/implemented/verified for the first time using the MPST method include: recursive protocols in which different roles participate in different branches; protocols in which a receiver chooses the sender of the first communication; protocols in which multiple roles synchronously choose both the sender and the receiver of a next communication, implemented as mixed input/output processes. We present the theory of the new techniques, as well as their future potential, and we demonstrate their present capabilities to effectively support regular expressions as global types (not possible before).   

  Cite as    
 Sung-Shik Jongmans and Francisco Ferreira. Synthetic Behavioural Typing: Sound, Regular Multiparty Sessions via Implicit Local Types (Pearl/Brave New Idea). In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 42:1-42:30, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{jongmans_et_al:LIPIcs.ECOOP.2023.42 author = {Jongmans, Sung-Shik and Ferreira, Francisco}, title = {{Synthetic Behavioural Typing: Sound, Regular Multiparty Sessions via Implicit Local Types}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {42:1--42:30}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.42}, URN = {urn:nbn:de:0030-drops-182358}, doi = {10.4230/LIPIcs.ECOOP.2023.42}, annote = {Keywords: behavioural types, multiparty session types, choreographies} }  @InProceedings{jongmans_et_al:LIPIcs.ECOOP.2023.42 author = {Jongmans, Sung-Shik and Ferreira, Francisco}, title = {{Synthetic Behavioural Typing: Sound, Regular Multiparty Sessions via Implicit Local Types}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {42:1--42:30}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.42}, URN = {urn:nbn:de:0030-drops-182358}, doi = {10.4230/LIPIcs.ECOOP.2023.42}, annote = {Keywords: behavioural types, multiparty session types, choreographies} }    

  Document   
 Pearl/Brave New Idea   
 DOI: 10.4230/LIPIcs.ECOOP.2023.43    

 On the Rise of Modern Software Documentation (Pearl/Brave New Idea)   
 Authors:  Marco Raglianti, Csaba Nagy, Roberto Minelli, Bin Lin, and Michele Lanza  
  Abstract    
 Classical software documentation, as it was conceived and intended decades ago, is not the only reality anymore. Official documentation from authoritative and official sources is being replaced by real-time collaborative platforms and ecosystems that have seen a surge, influenced by changes in society, technology, and best practices. These modern tools influence the way developers document the conception, design, and implementation of software. As a by-product of these shifts, developers are changing their way of communicating about software. Where once official documentation stood as the only truth about a project, we now find a multitude of volatile and heterogeneous documentation sources, forming a complex and ever-changing documentation landscape. Software projects often include a top-level README file with important information, which we leverage to identify their documentation landscape. Starting from ∼12K GitHub repositories, we mine their README files to extract links to additional documentation sources. We present a qualitative analysis, revealing multiple dimensions of the documentation landscape (e.g., content type, source type), highlighting important insights. By analyzing instant messaging application links (e.g., Gitter, Slack, Discord) in the histories of README files, we show how this part of the landscape has grown and evolved in the last decade. Our findings show that modern documentation encompasses communication platforms, which are exploding in popularity. This is not a passing phenomenon: On the contrary, it entails a number of unknowns and socio-technical problems the research community is currently ill-prepared to tackle.   

  Cite as    
 Marco Raglianti, Csaba Nagy, Roberto Minelli, Bin Lin, and Michele Lanza. On the Rise of Modern Software Documentation (Pearl/Brave New Idea). In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 43:1-43:24, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{raglianti_et_al:LIPIcs.ECOOP.2023.43 author = {Raglianti, Marco and Nagy, Csaba and Minelli, Roberto and Lin, Bin and Lanza, Michele}, title = {{On the Rise of Modern Software Documentation}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {43:1--43:24}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.43}, URN = {urn:nbn:de:0030-drops-182369}, doi = {10.4230/LIPIcs.ECOOP.2023.43}, annote = {Keywords: software documentation landscape, GitHub README, instant messaging} }  @InProceedings{raglianti_et_al:LIPIcs.ECOOP.2023.43 author = {Raglianti, Marco and Nagy, Csaba and Minelli, Roberto and Lin, Bin and Lanza, Michele}, title = {{On the Rise of Modern Software Documentation}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {43:1--43:24}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.43}, URN = {urn:nbn:de:0030-drops-182369}, doi = {10.4230/LIPIcs.ECOOP.2023.43}, annote = {Keywords: software documentation landscape, GitHub README, instant messaging} }    

  Document   
 Pearl/Brave New Idea   
 DOI: 10.4230/LIPIcs.ECOOP.2023.44    

 Python Type Hints Are Turing Complete (Pearl/Brave New Idea)   
 Authors:  Ori Roth  
  Abstract    
 Grigore proved that Java generics are Turing complete by describing a reduction from Turing machines to Java subtyping. Furthermore, he demonstrated that his "subtyping machines" could have metaprogramming applications if not for their extremely high compilation times. The current work reexamines Grigore’s study in the context of another prominent programming language - Python. We show that the undecidable Java fragment used in Grigore’s construction is included in Python’s type system, making it Turing complete. In contrast to Java, Python type hints are checked by third-party static analyzers and run-time type checkers. The new undecidability result means that both kinds of type checkers cannot fully incorporate Python’s type system and guarantee termination. The paper includes a survey of infinite subtyping cycles in various type checkers and type reification in different Python distributions. In addition, we present an alternative reduction in which the Turing machines are simulated in real time, resulting in a significantly faster compilation. Our work is accompanied by a Python implementation of both reductions that compiles Turing machines into Python subtyping machines.   

  Cite as    
 Ori Roth. Python Type Hints Are Turing Complete (Pearl/Brave New Idea). In 37th European Conference on Object-Oriented Programming (ECOOP 2023). Leibniz International Proceedings in Informatics (LIPIcs), Volume 263, pp. 44:1-44:15, Schloss Dagstuhl – Leibniz-Zentrum für Informatik (2023)  
   Copy BibTex To Clipboard    
   
  @InProceedings{roth:LIPIcs.ECOOP.2023.44 author = {Roth, Ori}, title = {{Python Type Hints Are Turing Complete}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {44:1--44:15}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.44}, URN = {urn:nbn:de:0030-drops-182372}, doi = {10.4230/LIPIcs.ECOOP.2023.44}, annote = {Keywords: nominal Subtyping with Variance, Python} }  @InProceedings{roth:LIPIcs.ECOOP.2023.44 author = {Roth, Ori}, title = {{Python Type Hints Are Turing Complete}}, booktitle = {37th European Conference on Object-Oriented Programming (ECOOP 2023)}, pages = {44:1--44:15}, series = {Leibniz International Proceedings in Informatics (LIPIcs)}, ISBN = {978-3-95977-281-5}, ISSN = {1868-8969}, year = {2023}, volume = {263}, editor = {Ali, Karim and Salvaneschi, Guido}, publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik}, address = {Dagstuhl, Germany}, URL = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ECOOP.2023.44}, URN = {urn:nbn:de:0030-drops-182372}, doi = {10.4230/LIPIcs.ECOOP.2023.44}, annote = {Keywords: nominal Subtyping with Variance, Python} }    

 Filters  

 Authors 
   Show All  Collapse 
  Show All 
  A 
  Adão, Pedro 
  Ali, Karim 
  Amin, Nada 
  Arceri, Vincenzo 
  B 
  Barwell, Adam D. 
  Batty, Mark 
  Bauwens, Jim 
  Bhatia, Sahil 
  Bianchini, Riccardo 
  Bieniusa, Annette 
  Birkedal, Lars 
  Böhler, Timon 
  Bornholt, James 
  Botelho Guerra, Henrique 
  Brandl, Katharina 
  C 
  Castrillon, Jeronimo 
  Castro-Perez, David 
  Cecchetti, Ethan 
  Chandramohan, Mahin 
  Cheung, Alvin 
  Cogumbreiro, Tiago 
  Cooksey, Simon 
  Cortesi, Agostino 
  Costa Seco, João 
  Cronjäger, Caroline 
  Cruz-Filipe, Luís 
  D 
  Daby-Seesaram, Arnaud 
  Dagnino, Francesco 
  de Muijnck-Hughes, Jan 
  De Porre, Kevin 
  Dietrich, Jens 
  E 
  Erdweg, Sebastian 
  Ertel, Sebastian 
  F 
  Fan, Andong 
  Fan, Gang 
  Ferrara, Pietro 
  Ferreira, Carla 
  Ferreira, Francisco 
  Ferreira, João F. 
  Foster, Nate 
  Fragoso Santos, José 
  G 
  Gardner, Philippa 
  Ghorbani, Mahdi 
  Giannini, Paola 
  Giunti, Marco 
  Gondelman, Léon 
  Gonzalez Boix, Elisa 
  Graversen, Eva 
  Guha, Arjun 
  H 
  Haas, Julian 
  Hansen, Nils 
  Harris, Sarah 
  He, Paul 
  Henniger, Simon 
  Hirsch, Andrew K. 
  Hou, Ping 
  J 
  Jagannathan, Suresh 
  Jin, Feiyang 
  Jongmans, Sung-Shik 
  K 
  Keidel, Sven 
  Kidane, Ellen 
  Koch, Caleb 
  Kohli, Sumer 
  Kuessner, Christian 
  Kuhn, Roland 
  L 
  Lanza, Michele 
  Lhoták, Ondřej 
  Li, Yannan 
  Lin, Bin 
  Lööw, Andreas 
  Lugović, Lovro 
  Lutze, Matthew 
  M 
  Madsen, Magnus 
  Maksimović, Petar 
  Melgratti, Hernán 
  Mezini, Mira 
  Minelli, Roberto 
  Mishra, Ashish 
  Moeller, Mark 
  Mogk, Ragnar 
  Montesi, Fabrizio 
  Mota, João 
  N 
  Nagy, Csaba 
  Naumann, David A. 
  Negrini, Luca 
  Nieto, Abel 
  O 
  Oliveira, Bruno C. d. S. 
  Olivieri, Luca 
  P 
  Parreaux, Lionel 
  Pearce, David J. 
  Peressotti, Marco 
  Pina, Luís 
  R 
  Raglianti, Marco 
  Ramos, Frederico 
  Ravara, António 
  Richter, David 
  Roth, Ori 
  Rumsevicius, Ugnius 
  S 
  Sabino, Nuno 
  Salvaneschi, Guido 
  Sarkar, Vivek 
  Scott, Ryan 
  Seshia, Sanjit A. 
  Shahrokhi, Hesam 
  Shaikhha, Amir 
  Shirako, Jun 
  Silva, Alexandra 
  Silver, Lucas 
  Solko-Breslin, Alaia 
  Spoto, Fausto 
  Starup, Jonathan Lindegaard 
  Stutz, Felix 
  Suchert, Felix 
  Sutherland, Julian 
  T 
  Tagliaferro, Fabio 
  Tan, Jinhao 
  Tang, Wensheng 
  Timany, Amin 
  Torlak, Emina 
  Tuosto, Emilio 
  V 
  van de Pol, Jaco 
  Van Geffen, Jacob 
  Vanderbauwhede, Wim 
  Venkateshwaran, Siddhanth 
  Vollmer, Michael 
  W 
  Wang, Chao 
  Wang, Chengpeng 
  Wang, Xi 
  Weisenburger, Pascal 
  Westbrook, Eddy 
  Wickert, Anna-Katharina 
  Wiener, Thomas 
  Y 
  Yacavone, Matthew 
  Yanakieva, Elena 
  Yao, Peisen 
  Yee, Ming-Ho 
  Yoshida, Nobuko 
  Yu, Lechen 
  Z 
  Zdancewic, Steve 
  Zeidler, Lisza 
  Zhang, Charles 
  Zhou, Fangyi 
  Zucca, Elena 

  Subjects 
   Show All  Collapse 
  Show All 
  Computer systems organization 
  Computer systems organization → Availability 
  Computer systems organization → Dependable and fault-tolerant systems and networks 
  Computer systems organization → Distributed architectures 
  Computer systems organization → Peer-to-peer architectures 
  Computer systems organization → Secondary storage organization 
  Computer systems organization → Single instruction, multiple data 
  Computing methodologies 
  Computing methodologies → Concurrent programming languages 
  Computing methodologies → Distributed programming languages 
  General and reference 
  General and reference → Evaluation 
  Human-centered computing 
  Human-centered computing → Collaborative and social computing 
  Human-centered computing → User interface programming 
  Information systems 
  Information systems → Data management systems 
  Security and privacy 
  Security and privacy → Cryptography 
  Security and privacy → Distributed systems security 
  Security and privacy → Formal methods and theory of security 
  Security and privacy → Information flow control 
  Security and privacy → Logic and verification 
  Software and its engineering 
  Software and its engineering 
  Software and its engineering → Automated static analysis 
  Software and its engineering → Automatic programming 
  Software and its engineering → Collaboration in software development 
  Software and its engineering → Compilers 
  Software and its engineering → Concurrent programming languages 
  Software and its engineering → Concurrent programming structures 
  Software and its engineering → Consistency 
  Software and its engineering → Data flow languages 
  Software and its engineering → Distributed programming languages 
  Software and its engineering → Distributed systems organizing principles 
  Software and its engineering → Domain specific languages 
  Software and its engineering → Dynamic analysis 
  Software and its engineering → Formal software verification 
  Software and its engineering → Functional languages 
  Software and its engineering → General programming languages 
  Software and its engineering → Language features 
  Software and its engineering → Maintaining software 
  Software and its engineering → Middleware 
  Software and its engineering → Object oriented languages 
  Software and its engineering → Parallel programming languages 
  Software and its engineering → Reflective middleware 
  Software and its engineering → Search-based software engineering 
  Software and its engineering → Software creation and management 
  Software and its engineering → Software defect analysis 
  Software and its engineering → Software notations and tools 
  Software and its engineering → Software reliability 
  Software and its engineering → Software safety 
  Software and its engineering → Software testing and debugging 
  Software and its engineering → Software verification and validation 
  Software and its engineering → Source code generation 
  Software and its engineering → Synchronization 
  Software and its engineering → System modeling languages 
  Theory of computation 
  Theory of computation → Abstraction 
  Theory of computation → Active learning 
  Theory of computation → Automated reasoning 
  Theory of computation → Concurrency 
  Theory of computation → Constraint and logic programming 
  Theory of computation → Data structures design and analysis 
  Theory of computation → Denotational semantics 
  Theory of computation → Distributed algorithms 
  Theory of computation → Distributed computing models 
  Theory of computation → Hoare logic 
  Theory of computation → Lambda calculus 
  Theory of computation → Logic and verification 
  Theory of computation → Parallel computing models 
  Theory of computation → Pre- and post-conditions 
  Theory of computation → Process calculi 
  Theory of computation → Program analysis 
  Theory of computation → Program reasoning 
  Theory of computation → Program semantics 
  Theory of computation → Program specifications 
  Theory of computation → Program verification 
  Theory of computation → Programming logic 
  Theory of computation → Separation logic 
  Theory of computation → Type structures 
  Theory of computation → Type theory 

  Questions / Remarks / Feedback   X  Feedback for Dagstuhl Publishing  
     
  Send    
   
  Thanks for your feedback!  
 Feedback submitted   
 OK    
  Could not send message  
 Please try again later or send an E-mail    
 OK    
   About DROPS  
 Schloss Dagstuhl - Leibniz Center for Informatics has been operating the Dagstuhl Research Online Publication Server (short: DROPS) since 2004. DROPS enables publication of the latest research findings in a fast, uncomplicated manner, in addition to providing unimpeded, open access to them. All the requisite metadata on each publication is administered in accordance with general guidelines pertaining to online publications (cf. Dublin Core). This enables the online publications to be authorized for citation and made accessible to a wide readership on a permanent basis. Access is free of charge for readers following the open access idea which fosters unimpeded access to scientific publications.  
 More about DROPS 
    
 Instructions for Authors  
 Dagstuhl Series   
  LIPIcs 
  OASIcs 
  Dagstuhl Follow-Ups 
    
 Dagstuhl Journals   
  DARTS – Dagstuhl Artifacts Series 
  Dagstuhl Reports 
  Dagstuhl Manifestos 
  LITES 
  TGDK – Transactions on Graph Data and Knowledge 

 Instructions for Editors  
 Dagstuhl Series   
  LIPIcs 
  OASIcs 
  Dagstuhl Follow-Ups 
    
 Dagstuhl Journals   
  DARTS – Dagstuhl Artifacts Series 
  Dagstuhl Reports 
  Dagstuhl Manifestos 
  LITES 
  TGDK – Transactions on Graph Data and Knowledge 

 © 2023-2024 Schloss Dagstuhl – LZI GmbH  About DROPS  Imprint  Privacy  Contact

4. PDP_3 conference:
Toggle navigation          
 Home 
  About 
  CfP 
  Schedule 
  Speakers | Brendan Bouffler 
  Angelo Ciaramella 
  Giuseppe Coviello 
  Pasqua D’Ambra 
  Jorge Ejarque Artigas 
  Alessandro Mei 
  Sessions 
  Committee 
  Venue 
  Contacts 
  Blog 
  Register Now 

 Special Issues   
 Parallel, Distributed, and Network-Based Processing has changed rapidly over recent years. New architectures and applications have rapidly become the central focus of the discipline. These changes are often a result of the cross-fertilization of parallel and distributed technologies with other rapidly evolving technologies. Reviewing and assessing these new developments compared with recent research achievements in […]  
   
 Read more    
   News   /    Comments Off on Special Issues         

 Awards   
 Best Paper Award: Aymar Cublier Martínez, Alejandro Álvarez Isabel, Jesús Carretero and David E. Singh. Fine-grained parallel social modelling for analyzing the COVID-19 propagation Short Best Paper Award: Julen Galarza, Javier Navaridas, Jose A. Pascual, Juan L Muñoz, Ibon Bustinduy and Txomin Romero. Parallelizing Multipacting Simulation for the Design of Particle Accelerator Components Student Best […]  
   
 Read more    
   News   /    Comments Off on Awards         

 Live Sessions   
 Wednesday, March 1st Opening Ceremony of the 31st Euromicro International Conference on Parallel, Distributed, and Network-Based Processing at University of Napoli “Parthenope”. Welcome message by general chair Prof. Raffaele Montella with Prof. Antonio Garofalo, Rector of the University of Naples “Parthenope, and Karl-Erwin Grosspietsch, Euromicro Chair. Brendan Bouffler’s (Amazon Web Services – Head of Developer […]  
   
 Read more    
   News   /    Comments Off on Live Sessions         

 Free Public Transports with UNICO Campania   
 UNICO Campania, the public transport consortium in the Campania Region, supported the 31st Euromicro International Conference on Parallel, Distributed, and Network-Based Processing by providing our attendees with a free 3-day ticket to use public transportation in Napoli. To retrieve your ticket, download the free UNICO Campania App and follow these steps. The complimentary public transportation […]  
   
 Read more    
   News   /    Comments Off on Free Public Transports with UNICO Campania         

 NEC Labs: High-Impact Technology Research   
 The 31st Euromicro International Conference on Parallel, Distributed, and Network-Based Processing is supported by NEC Labs, the US-based center for NEC Corporation’s global network of corporate research laboratories. About NEC Labs NEC Laboratories America‘s diverse research groups collaborate with industry, academia, and governments to provide disruptive solutions to complex problems. NEC’s activities focus on the following […]  
   
 Read more    
   News   /    Comments Off on NEC Labs: High-Impact Technology Research         

 AWS Cloud Solutions   
 Amazon Web Services Europe supported the 31st Euromicro International Conference on Parallel, Distributed, and Network-Based Processing with a generous donation of credit awards for pursuing further research. About AWS Amazon Web Services (AWS) is a cloud provider for accessing technology services, such as computing power, storage, and databases, on an as-needed basis. AWS has more […]  
   
 Read more    
   News   /    Comments Off on AWS Cloud Solutions         

 High-tech solutions with E4   
 The 31st Euromicro International Conference on Parallel, Distributed, and Network-Based Processing is actively supported by E4 Computer Engineering, that will also be an exhibitor at PDP 2023 Demo Area, where attendees can visit the company’s boot and talk to the team about high-tech solutions for HPC Clusters, Cloud services, Data Analytics, Artificial Intelligence, and Hyper-converged infrastructures. […]  
   
 Read more    
   News   /    Comments Off on High-tech solutions with E4         

 The ADMIRE project   
 This year’s PDP edition is part of the dissemination activities of the European-funded project ADMIRE, which will also be an exhibitor at PDP 2023 Demo Area. The main objective of the ADMIRE project is to establish control to avoid congestion and balance computational with storage to maximize performance. Unfortunately, appropriate interfaces and policies for managing […]  
   
 Read more    
   News   /    Comments Off on The ADMIRE project         

 About Euromicro   
 Euromicro, the main organizer of the 31st International Conference on Parallel, Distributed, and Network-Based Processing, is an international non-profit organization in science, engineering, and education. It is dedicated to advancing the arts, sciences, and applications of Information Technology and Microelectronics. Euromicro’s contributions to the progress in this field form a unique European focal point of […]  
   
 Read more    
   News   /    Comments Off on About Euromicro

5. EURO_0 conference:
Home 
  Conferences 
  Current Member Societies 
  EURO Working Groups 
  Publications 

 Home 
  EURO | OR and EURO 
  Current Member Societies 
  Executive Committee 
  EURO Officers 
  Branding OR and EURO 
  Privacy Policy 
  EDI Policy 
  Contact 
  EURO Instruments 
  Conferences | EURO-k Conferences 
  EURO Mini Conferences 
  Calendar 
  Publications | European Journal of Operational Research (EJOR) 
  EURO Journal on Computational Optimization (EJCO) 
  EURO Journal on Decision Processes (EJDP) 
  EURO Journal on Transportation and Logistics (EJTL) 
  EURO Advanced Tutorials in Operational Research 
  Working Groups | Charter 
  EURO Working Groups 
  Forums | Charter 
  WISDOM 
  EUROYoung 
  Practitioners' Forum 
  OR Education Forum 
  Prizes and Awards | Gold Medal (EGM) 
  Distinguished Service Award (EDSA) 
  Doctoral Dissertation Award (EDDA) 
  Excellence in Practice Award (EEPA) 
  Prize for OR for the Common Good (EPOCG) 
  Award for the Best EJOR Paper (EABEP) 
  ROADEF/EURO Challenge 
  Education | EURO PhD Schools (EPS) 
  EURO Summer/Winter Institutes (ESWI) 
  Online Seminar Series | Guidelines 
  EURO OSS on Operational Research and Machine Learning 
  General Support Fund | Guidelines 
  Last Activity Reports 
  Cooperation | Cooperation with Other National Societies & Regional Organizations 
  Conference Sponsorship: The EURO Plenary 
  Bulletin Board 
  Documents | EURO Statutes 
  EURO Manual 
  EURO File List 
  Archive | e-Newsletter 
  Videos 
  Brochures (archive) 
  Bulletins (archive) 
  Directories (archive) 
  Newsletters (archive) 
    
 Home 
    
 EURO 
  EURO Instruments 
  Conferences 
  Publications 
  Working Groups 
  Forums 
  Prizes and Awards 
  Education 
  Online Seminar Series 
  General Support Fund 
  Cooperation 
  Bulletin Board 
  Documents 
  Archive 

 EURO  is the 'Association of European Operational Research Societies'  . The objectives of EURO aim to promote Operational Research  within Europe.  

 EURO Advanced Tutorials  
  New Volume. Combinatorial Models for Scheduling Sports Tournaments | Hot topics:  
 50th LNMB Conference on the Mathematics of Operations Research. Conference Hotel Kontakt der Kontinenten in Soesterberg on 13–15 January 2024. 
  5th edition of the IMA-ORS Conference on the Mathematics of Operational Research, Birmingham, UK, 30th of April to the 2nd of May 2025. Abstracts should be submitted by 10 January 2025. 
  ANOR: Special Issue: Recent Advances in Stochastic and Robust Optimization. Submission deadline 30 November 2024. 
  IHTC-2024 Integrated Healthcare Timetabling Competition. Solutions submission: March 1, 2025. 
  ITOR SI: Call for Papers Special issue on “Multiple criteria decision making for sustainable development goals (SDGs)”. The deadline for submissions is February 28, 2025 
  ITOR SI: Call for Papers Special issue on “Optimizing port and maritime logistics: advances for sustainable and efficient operations”. The deadline for submissions is December 31, 2024 
  ITOR SI: Call for Papers Special issue on “Sharing platforms for sustainability: Exploring strategies, trade-offs, and applications”. The deadline for submissions is November 30, 2024 
  Journal of Heuristics. SI Metaheuristics International Conference. Deadline: February 15th 2025. 
  The 38th ECCO'2025 Conference of the European Chapter on Combinatorial Optimization. May 8-10 2025. Marrakech, Morocco. Abstract Submission deadline : January 24, 2025 
  “European Journal of Operational Research” (EJOR) : special issue on the topic "The Complexity of the Energy Transition". Submission deadline: 31 December 2024. 

  This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 International License  and the GNU Free Documentation License  (unversioned, with no invariant sections, front-cover texts, or back-cover texts).  
 Privacy Policy.   

 EURO-Online login  
   
 Username: |  
 Password: |  
  
  New to EURO? | Create an account 
  I forgot my username and/or my password. 

 Sign Up for e-Newsletter     

  Tweets by EUROonline_News

6. ECOOP_2 conference:


7. ECOOP_3 conference:
ECOOP 2023   Mon 17 - Fri 21 July 2023 Seattle (University of Washington campus), Washington, United States    
 co-located with ECOOP and ISSTA 2023    

 Toggle navigation        
 Attending | Venue: Seattle 
  ECOOP and ISSTA 2023 
  Conduct 
  Covid-19 
  Accommodation 
  Registration 
  Visas 
  Program | ECOOP Program 
  Your Program 
  Schedule Overview 
   Mon 17 Jul 
  Tue 18 Jul 
  Wed 19 Jul 
  Thu 20 Jul 
  Fri 21 Jul 
  Tracks | ECOOP 2023 
  Awards 
  Keynotes 
  Research Papers 
  Artifacts 
  ECOOP and ISSTA 2023 
  Doctoral Symposium 
  Keynotes 
  Sponsorships 
  Student Research Competition 
  Student Volunteers 
  Workshops 
   Workshops 
  COP 
  DEBT 
  FTfJP 
  FUZZING 
  ICOOOLPS 
  VORTEX 
  Organization | ECOOP 2023 Committees 
  Organizing Committee 
  Track Committees 
  Research Papers | Program Committee 
  Extended Review Committee and External Reviewers 
  Artifacts 
  ECOOP and ISSTA 
  Doctoral Symposium 
  Sponsorships 
  Student Research Competition 
  Student Volunteers 
  Workshops 
  Contributors 
  People Index 
   Workshops 
  COP | Organizing Committee 
  Program Committee 
  DEBT | Organizing Committee 
  Program Committee 
  FTfJP | Organizing Committee 
  Program Committee 
  FUZZING | Organizing Committee 
  Program Committee 
  ICOOOLPS | Organizing Committee 
  Program Committee 
  VORTEX | Organizing Committee 
  Program Committee 
  Search 
  Series | Series 
   ECOOP 2025 
  ECOOP 2024 
  ECOOP 2023 
  ECOOP 2022 
  ECOOP 2021 
  ECOOP 2020 
  ECOOP 2019 
  ECOOP 2018 
  ECOOP 2017 
  ECOOP 2016 
  ECOOP 2015 
   2014: Uppsala 
  2013: Montpellier 
  2012: Beijing 
  2011: Lancaster 
  2010: Maribor 
  2009: Genova 
  2008: Cyprus 
  2007: Berlin 
  2006: Nice 
  2005: Glasgow 
  Sign in 
  Sign up 

  ECOOP and ISSTA 2023  ( series  ) /   ECOOP 2023  ( series  ) /  Research Papers ECOOP 2023   
   
 Program 
  Accepted Papers 
  Call for Papers 
  Dates    

 Plenary    

   Program Display Configuration  
   
   Time Zone   
   
 The program is currently displayed in (GMT-07:00) Pacific Time (US & Canada)  .   Use conference time zone: (GMT-07:00) Pacific Time (US & Canada)    Select other time zone   (GMT-12:00) AoE (Anywhere On Earth)  (GMT-11:00) Midway Island, Samoa  (GMT-09:00) Hawaii-Aleutian  (GMT-10:00) Hawaii  (GMT-09:30) Marquesas Islands  (GMT-09:00) Gambier Islands  (GMT-08:00) Alaska  (GMT-07:00) Tijuana, Baja California  (GMT-08:00) Pitcairn Islands  (GMT-07:00) Pacific Time (US & Canada)  (GMT-06:00) Mountain Time (US & Canada)  (GMT-06:00) Chihuahua, La Paz, Mazatlan  (GMT-07:00) Arizona  (GMT-06:00) Saskatchewan, Central America  (GMT-05:00) Guadalajara, Mexico City, Monterrey  (GMT-06:00) Easter Island  (GMT-05:00) Central Time (US & Canada)  (GMT-04:00) Eastern Time (US & Canada)  (GMT-04:00) Cuba  (GMT-05:00) Bogota, Lima, Quito, Rio Branco  (GMT-04:00) Caracas  (GMT-04:00) Santiago  (GMT-04:00) La Paz  (GMT-03:00) Faukland Islands  (GMT-04:00) Manaus, Amazonas, Brazil  (GMT-03:00) Atlantic Time (Goose Bay)  (GMT-03:00) Atlantic Time (Canada)  (GMT-02:30) Newfoundland  (GMT-03:00) UTC-3  (GMT-03:00) Montevideo  (GMT-02:00) Miquelon, St. Pierre  (GMT-02:00) Greenland  (GMT-03:00) Buenos Aires  (GMT-03:00) Brasilia, Distrito Federal, Brazil  (GMT-02:00) Mid-Atlantic  (GMT-01:00) Cape Verde Is.  (GMT) Azores  (UTC) Coordinated Universal Time  (GMT+01:00) Belfast  (GMT+01:00) Dublin  (GMT+01:00) Lisbon  (GMT+01:00) London  (GMT) Monrovia, Reykjavik  (GMT+02:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna  (GMT+02:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague  (GMT+02:00) Brussels, Copenhagen, Madrid, Paris  (GMT+01:00) West Central Africa  (GMT+02:00) Windhoek  (GMT+03:00) Athens  (GMT+03:00) Beirut  (GMT+02:00) Cairo  (GMT+03:00) Gaza  (GMT+02:00) Harare, Pretoria  (GMT+03:00) Jerusalem  (GMT+03:00) Minsk  (GMT+03:00) Syria  (GMT+03:00) Moscow, St. Petersburg, Volgograd  (GMT+03:00) Nairobi  (GMT+03:30) Tehran  (GMT+04:00) Abu Dhabi, Muscat  (GMT+04:00) Yerevan  (GMT+04:30) Kabul  (GMT+05:00) Ekaterinburg  (GMT+05:00) Tashkent  (GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi  (GMT+05:45) Kathmandu  (GMT+06:00) Astana, Dhaka  (GMT+07:00) Novosibirsk  (GMT+06:30) Yangon (Rangoon)  (GMT+07:00) Bangkok, Hanoi, Jakarta  (GMT+07:00) Krasnoyarsk  (GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi  (GMT+08:00) Irkutsk, Ulaan Bataar  (GMT+08:00) Perth  (GMT+08:45) Eucla  (GMT+09:00) Osaka, Sapporo, Tokyo  (GMT+09:00) Seoul  (GMT+09:00) Yakutsk  (GMT+09:30) Adelaide  (GMT+09:30) Darwin  (GMT+10:00) Brisbane  (GMT+10:00) Hobart  (GMT+10:00) Vladivostok  (GMT+10:30) Lord Howe Island  (GMT+11:00) Solomon Is., New Caledonia  (GMT+11:00) Magadan  (GMT+11:00) Norfolk Island  (GMT+12:00) Anadyr, Kamchatka  (GMT+12:00) Auckland, Wellington  (GMT+12:00) Fiji, Kamchatka, Marshall Is.  (GMT+12:45) Chatham Islands  (GMT+13:00) Nuku'alofa  (GMT+14:00) Kiritimati     

   The GMT offsets shown reflect the offsets at the moment of the conference  .     
   
 Time Band   
   
 By setting a time band, the program will dim events that are outside this time window. This is useful for (virtual) conferences with a continuous program (with repeated sessions).  
  The time band will also limit the events that are included in the personal iCalendar subscription service.   Display full program    Specify a time band   -      

  Save    

  Close    

 ×    You're viewing the program in a time zone which is different from your device's time zone change time zone     

 Wed 19 Jul   
  
 Displayed time zone: Pacific Time (US & Canada)  change      

 08:00 - 08:30 | Coffee and Light Breakfast ECOOP and ISSTA Catering   at Microsoft Atrium (Allen Center) 
 08:00   
 30m    
 Coffee break | Break   ECOOP and ISSTA Catering 

 08:30 - 09:15 | ISSTA Impact Paper Award ECOOP and ISSTA Keynotes   at Amazon Auditorium (Gates G20) 
 08:30   
 45m    
 Keynote | Reflections on the Impact of Calculating Source Line Level Energy Information for Android Applications   ECOOP and ISSTA Keynotes   
 K:  William G.J. Halfond  University of Southern California 

 09:15 - 10:00 | AITO Test of Time Award ECOOP and ISSTA Keynotes   at Amazon Auditorium (Gates G20) 
 09:15   
 45m    
 Keynote | AITO Test of Time Award: Why Programming Languages Matter: Reflections on 45 Years of Language Design   ECOOP and ISSTA Keynotes   
 K:  Andrew P. Black     
  Pre-print   Media Attached 

 10:00 - 10:30 | Coffee Break ECOOP and ISSTA Catering   at Microsoft Atrium (Allen Center) 
 10:00   
 30m    
 Coffee break | Break   ECOOP and ISSTA Catering 

 10:30 - 12:00 | ECOOP 1: Semantics Research Papers   at Amazon Auditorium (Gates G20)   
  Chair(s): Sophia Drossopoulou  Imperial College London 
 10:30   
 15m    
 Talk | Semantics for Noninterference with Interaction Trees   Research Papers   
 Lucas Silver  University of Pennsylvania  , Paul He  University of Pennsylvania  , Ethan Cecchetti  University of Maryland, College Park  , Andrew K. Hirsch  University at Buffalo  , Steve Zdancewic  University of Pennsylvania    
  DOI 
 10:45   
 15m    
 Talk | Interaction Tree Specifications: A Framework for Specifying Recursive, Effectful Computations that Supports Auto-active Verification   Research Papers   
 Lucas Silver  University of Pennsylvania  , Edwin Westbrook  Galois  , Matthew Yacavone  Galois, Inc.  , Ryan Scott  Galois, Inc.    
  DOI 
 11:00   
 15m    
 Talk | Multi-Graded Featherweight Java   Research Papers   
 Riccardo Bianchini  University of Genoa  , Francesco Dagnino  University of Genoa  , Paola Giannini  University of Eastern Piedmont  , Elena Zucca  University of Genoa    
  DOI 
 11:15   
 15m    
 Talk | Wiring circuits is easy as {0, 1, ω}, or is it…   Research Papers   
 Jan de Muijnck-Hughes  University of Glasgow  , Wim Vanderbauwhede  University of Glasgow    
  DOI 
 11:30   
 15m    
 Talk | Automata Learning with an Incomplete Teacher   Research Papers   
 Mark Moeller  Cornell University  , Thomas Wiener  Cornell University  , Alaia Solko-Breslin  University of Pennsylvania  , Caleb Koch  Stanford  , Nate Foster  Cornell University  , Alexandra Silva  Cornell University    
  DOI 
 11:45   
 15m    
 Talk | A Direct-Style Effect Notation for Sequential and Parallel Programs   Research Papers   
 David Richter  Technical University of Darmstadt  , Timon Böhler  Technical University of Darmstadt  , Pascal Weisenburger  University of St. Gallen  , Mira Mezini  TU Darmstadt    
  DOI   Pre-print   Media Attached 

 12:00 - 13:30 | Lunch ECOOP and ISSTA Catering   at Zillow Commons (Gates 4th Floor) 
 12:00   
 90m    
 Lunch | Lunch   ECOOP and ISSTA Catering 

 13:30 - 15:00 | ECOOP 2: Replication Research Papers   at Amazon Auditorium (Gates G20)   
  Chair(s): Eric Jul  University of Oslo 
 13:30   
 15m    
 Talk | Behavioural Types for Local-First Software   Research Papers   
 Roland Kuhn  Actyx AG  , Hernan Melgratti  University of Buenos Aires, Argentina  , Emilio Tuosto  Gran Sasso Science Institute, L'Aquila, Italy    
  DOI 
 13:45   
 15m    
 Talk | Algebraic Replicated Data Types: Programming Secure Local-First Software   Research Papers   
 Christian Kuessner  Technische Universität Darmstadt  , Ragnar Mogk  Technische Universität Darmstadt  , Anna-Katharina Wickert  TU Darmstadt, Germany  , Mira Mezini  TU Darmstadt    
  DOI   Pre-print 
 14:00   
 15m    
 Talk | Modular Verification of State-Based CRDTs in Separation Logic   Research Papers   
 Abel Nieto  Aarhus University  , Arnaud Daby-Seesaram  ENS Paris Saclay  , Léon Gondelman  Aarhus University  , Amin Timany  Aarhus University  , Lars Birkedal  Aarhus University    
  DOI 
 14:15   
 15m    
 Talk | VeriFx: Correct Replicated Data Types for the Masses   Research Papers   
 Kevin De Porre  Vrije Universiteit Brussel  , Carla Ferreira  NOVA University Lisbon  , Elisa Gonzalez Boix  Vrije Universiteit Brussel    
  DOI 
 14:30   
 15m    
 Talk | Nested Pure Operation-Based CRDTs   Research Papers   
 Jim Bauwens  Vrije Universiteit Brussel  , Elisa Gonzalez Boix  Vrije Universiteit Brussel    
  DOI 
 14:45   
 15m    
 Talk | LoRe: A Programming Model for Verifiably Safe Local-First Software   Research Papers   
 Julian Haas  Technische Universität Darmstadt  , Ragnar Mogk  Technische Universität Darmstadt  , Elena Yanakieva  University of Kaiserslautern-Landau  , Annette Bieniusa  Kaiserslautern  , Mira Mezini  TU Darmstadt    
  DOI   Pre-print 

 15:00 - 15:30 | Coffee Break ECOOP and ISSTA Catering   at Microsoft Atrium (Allen Center) 
 15:00   
 30m    
 Coffee break | Break   ECOOP and ISSTA Catering 

 15:30 - 17:00 | ECOOP 3: Distribution Research Papers   at Amazon Auditorium (Gates G20)   
  Chair(s): Elisa Gonzalez Boix  Vrije Universiteit Brussel 
 15:30   
 15m    
 Talk | Synthetic Behavioural Typing: Sound, Regular Multiparty Sessions via Implicit Local Types   Research Papers   
 Sung-Shik Jongmans  Open University of the Netherlands; CWI  , Francisco Ferreira  Royal Holloway, University of London    
  DOI 
 15:45   
 15m    
 Talk | Asynchronous Multiparty Session Type Implementability is Decidable – Lessons Learned from Message Sequence Charts   Research Papers   
 Felix Stutz  MPI-SWS    
  DOI 
 16:00   
 15m    
 Talk | Dynamically Updatable Multiparty Session Protocols   Research Papers   
 David Castro-Perez  University of Kent  , Nobuko Yoshida  University of Oxford    
  DOI 
 16:15   
 15m    
 Talk | Designing Asynchronous Multiparty Protocols with Crash-Stop Failures   Research Papers   
 Adam D. Barwell  University of St Andrews and University of Oxford  , Ping Hou  University of Oxford  , Nobuko Yoshida  University of Oxford  , Fangyi Zhou  Imperial College London    
  DOI   Pre-print 
 16:30   
 15m    
 Talk | ConDRust: Scalable Deterministic Concurrency from Verifiable Rust Programs   Research Papers   
 Felix Suchert  Center for Advancing Electronics Dresden, TU Dresden  , Lisza Zeidler  Composable Operating Systems Group, Barkhausen Institute, Dresden  , Jeronimo Castrillon  TU Dresden, Germany  , Sebastian Ertel  Composable Operating Systems Group, Barkhausen Institute, Dresden    
  DOI 
 16:45   
 15m    
 Talk | Information Flow Analysis for Detecting Non-Determinism in Blockchain   Research Papers   
 Luca Olivieri  Ca’ Foscari University of Venice  , Vincenzo Arceri  University of Parma, Italy  , Luca Negrini  Ca’ Foscari University of Venice, Corvallis S.r.l.  , Fabio Tagliaferro  CYS4 Srl  , Pietro Ferrara  Università Ca' Foscari, Venezia, Italy  , Agostino Cortesi  Università Ca' Foscari Venezia  , Fausto Spoto  U. Verona    
  DOI 

 17:30 - 20:30 | Banquet ECOOP and ISSTA Catering   at HUB Ballroom 

 Thu 20 Jul   
  
 Displayed time zone: Pacific Time (US & Canada)  change      

 08:00 - 08:30 | Coffee and Light Breakfast ECOOP and ISSTA Catering   at Microsoft Atrium (Allen Center) 
 08:00   
 30m    
 Coffee break | Break   ECOOP and ISSTA Catering 

 08:30 - 09:00 | Dahl-Nygaard Prize Ceremony and Awards ECOOP and ISSTA Keynotes   at Amazon Auditorium (Gates G20) 
 08:30   
 30m    
 Awards | ECOOP: Dahl-Nygaard Prize Ceremony and Awards   ECOOP and ISSTA Keynotes 

 09:00 - 10:00 | Keynote ECOOP and ISSTA Keynotes   at Amazon Auditorium (Gates G20) 
 09:00   
 60m    
 Keynote | Dahl-Nygaard Senior Prize: Safe Journeys into the Unknown – Object Capabilities   ECOOP and ISSTA Keynotes   
 K:  Sophia Drossopoulou  Imperial College London    
  Media Attached 

 10:00 - 10:30 | Coffee Break ECOOP and ISSTA Catering   at Microsoft Atrium (Allen Center) 
 10:00   
 30m    
 Coffee break | Break   ECOOP and ISSTA Catering 

 10:30 - 12:00 | ECOOP 4: Types Research Papers   at Habib Classroom (Gates G01)   
  Chair(s): Giorgio Audrito  Università di Torino 
 10:30   
 15m    
 Talk | Python Type Hints are Turing Complete   Research Papers   
 Ori Roth  Technion    
  DOI 
 10:45   
 15m    
 Talk | Restrictable Variants: A Simple and Practical Alternative to Extensible Variants   Research Papers   
 Magnus Madsen  Aarhus University  , Jonathan Lindegaard Starup  Aarhus University  , Matthew Lutze  Aarhus University    
  DOI 
 11:00   
 15m    
 Talk | Modular Compilation for Higher-order Functional Choreographies   Research Papers   
 Luís Cruz-Filipe  University of Southern Denmark  , Eva Graversen  University of Southern Denmark  , Lovro Lugović  University of Southern Denmark  , Fabrizio Montesi  University of Southern Denmark  , Marco Peressotti  University of Southern Denmark    
  DOI 
 11:15   
 15m    
 Talk | Programming with Purity Reflection: Peaceful Coexistence of Effects, Laziness, and Parallelism   Research Papers   
 Magnus Madsen  Aarhus University  , Jaco van de Pol  Aarhus University    
  DOI 
 11:30   
 15m    
 Talk | Dependent Merges and First-Class Environments   Research Papers   
 Jinhao Tan  University of Hong Kong  , Bruno C. d. S. Oliveira  University of Hong Kong    
  DOI 
 11:45   
 15m    
 Talk | super-Charging Object-Oriented Programming Through Precise Typing of Open Recursion   Research Papers   
 Andong Fan  The Hong Kong University of Science and Technology  , Lionel Parreaux  HKUST (The Hong Kong University of Science and Technology)    
  DOI 

 12:00 - 13:30 | Lunch ECOOP and ISSTA Catering   at Zillow Commons (Gates 4th Floor) 
 12:00   
 90m    
 Lunch | Lunch   ECOOP and ISSTA Catering 

 13:30 - 15:00 | ECOOP 5: Synthesis Research Papers   at Habib Classroom (Gates G01)   
  Chair(s): Karine Even-Mendoza  King’s College London 
 13:30   
 15m    
 Talk | Synthesis-Aided Crash Consistency for Storage Systems   Research Papers   
 Jacob Van Geffen  Veridise Inc.  , James Bornholt  University of Texas at Austin  , Emina Torlak  Amazon Web Services and University of Washington  , Xi Wang  University of Washington    
  DOI 
 13:45   
 15m    
 Talk | Synthesizing Conjunctive Queries for Code Search   Research Papers   
 Chengpeng Wang  Hong Kong University of Science and Technology  , Peisen Yao  Zhejing University  , Wensheng Tang  Hong Kong University of Science and Technology  , Gang Fan  Ant Group  , Charles Zhang  Hong Kong University of Science and Technology    
  DOI 
 14:00   
 15m    
 Talk | Hoogle⋆: Constants and λ-abstractions in Petri-net-based Synthesis using Symbolic Execution   Research Papers   
 Henrique Botelho Guerra  INESC-ID and IST, University of Lisbon  , João F. Ferreira  INESC-ID and IST, University of Lisbon  , João Costa Seco  NOVA-LINCS; Nova University of Lisbon    
  DOI 
 14:15   
 15m    
 Talk | Building Code Transpilers for Domain-Specific Languages Using Program Synthesis   Research Papers   
 Sahil Bhatia  University of California, Berkeley  , Sumer Kohli  UC Berkeley  , Sanjit Seshia  UC Berkeley  , Alvin Cheung  University of California at Berkeley    
  DOI 
 14:30   
 15m    
 Talk | Do Machine Learning Models Produce TypeScript Types that Type Check?   Research Papers   
 Ming-Ho Yee  Northeastern University  , Arjun Guha  Northeastern University and Roblox Research    
  DOI   Media Attached   File Attached 
 14:45   
 15m    
 Talk | Toward Tool-Independent Summaries for Symbolic Execution   Research Papers   
 Frederico Ramos  Instituto Superior Técnico  , Nuno Sabino  Instituto Superior Técnico, Carnegie Mellon University  , Pedro Adão  IST-ULisboa and Instituto de Telecomunicações  , David Naumann  Stevens Institute of Technology  , José Fragoso Santos  INESC-ID/Instituto Superior Técnico, Portugal    
  DOI 

 15:00 - 15:30 | Coffee Break ECOOP and ISSTA Catering   at Microsoft Atrium (Allen Center) 
 15:00   
 30m    
 Coffee break | Break   ECOOP and ISSTA Catering 

 15:30 - 17:00 | Keynote – ISSTA'24 Preview – Closing ECOOP and ISSTA Keynotes   at Amazon Auditorium (Gates G20) 
 15:30   
 60m    
 Keynote | Machine Learning for Software Engineering   ECOOP and ISSTA Keynotes   
 K:  Satish Chandra  Meta Platforms 
 16:30   
 15m    
 Day closing | ISSTA'24 Preview   ECOOP and ISSTA Keynotes 
 16:45   
 15m    
 Day closing | ISSTA Closing   ECOOP and ISSTA Keynotes 

 15:30 - 17:00 | ECOOP 6: Design Research Papers   at Habib Classroom (Gates G01)   
  Chair(s): Shigeru Chiba  The University of Tokyo 
 15:30   
 15m    
 Talk | On the Rise of Modern Software Documentation   Research Papers   
 Marco Raglianti  Software Institute - USI, Lugano  , Csaba Nagy  Software Institute - USI, Lugano  , Roberto Minelli  Software Institute - USI, Lugano  , Bin Lin  Radboud University  , Michele Lanza  Software Institute - USI, Lugano    
  DOI 
 15:45   
 15m    
 Talk | Rust for Morello: Always-on Memory Safety, Even in Unsafe Code   Research Papers   
 Sarah Harris  University of Kent  , Simon Cooksey  University of Kent  , Michael Vollmer  University of Kent  , Mark Batty  University of Kent    
  DOI 
 16:00   
 15m    
 Talk | Modular Abstract Definitional Interpreters for WebAssembly   Research Papers   
 Katharina Brandl  JGU Mainz  , Sebastian Erdweg  JGU Mainz  , Sven Keidel  TU Darmstadt, Germany  , Nils Hansen  JGU Mainz    
  DOI   Pre-print 
 16:15   
 15m    
 Talk | Sinatra: Stateful Instantaneous Updates for Commercial Browsers Through Multi-Version eXecution   Research Papers   
 Ugnius Rumsevicius  University of Illinois - Chicago  , Siddhanth Venkateshwaran  University of Illinois - Chicago  , Ellen Kidane  University of Illinois - Chicago  , Luís Pina  University of Illinois at Chicago    
  DOI   Pre-print 
 16:30   
 15m    
 Talk | The Dolorem Pattern: Growing a Language through Compile-Time Function Execution   Research Papers   
 Simon Henniger  Technical University of Munich  , Nada Amin  Harvard University    
  DOI 
 16:45   
 15m    
 Talk | Breaking the Negative Cycle: Exploring the Design Space of Stratification for First-Class Datalog Constraints   Research Papers   
 Jonathan Lindegaard Starup  Aarhus University  , Magnus Madsen  Aarhus University  , Ondřej Lhoták  University of Waterloo    
  DOI 

 17:30 - 18:30 | Reception ECOOP and ISSTA Catering   at Microsoft Atrium (Allen Center) 

 Fri 21 Jul   
  
 Displayed time zone: Pacific Time (US & Canada)  change      

 08:00 - 08:30 | Coffee and Light Breakfast ECOOP and ISSTA Catering   at Microsoft Atrium (Allen Center) 
 08:00   
 30m    
 Coffee break | Break   ECOOP and ISSTA Catering 

 08:30 - 09:00 | Outlooks and Farewells ECOOP and ISSTA Keynotes   at Amazon Auditorium (Gates G20) 
 08:30   
 30m    
 Day closing | ECOOP: Outlooks and Farewells   ECOOP and ISSTA Keynotes 

 09:00 - 10:00 | Keynote ECOOP and ISSTA Keynotes   at Amazon Auditorium (Gates G20) 
 09:00   
 60m    
 Keynote | Dahl-Nygaard Junior Prize: My Part of the Scala Story, and Beyond!   ECOOP and ISSTA Keynotes   
 K:  Heather Miller  Carnegie Mellon University and Two Sigma    
  Media Attached 

 10:00 - 10:30 | Coffee Break ECOOP and ISSTA Catering   at Microsoft Atrium (Allen Center) 
 10:00   
 30m    
 Coffee break | Break   ECOOP and ISSTA Catering 

 10:30 - 12:00 | ECOOP 7: Verification and Testing Research Papers   at Amazon Auditorium (Gates G20)   
  Chair(s): Wenxi Wang  University of Texas at Austin 
 10:30   
 15m    
 Talk | On using VeriFast, VerCors, Plural, and KeY to check object usage   Research Papers   
 João Mota  NOVA School of Science and Technology  , António Ravara  NOVA LINCS & FCT, NOVA University of Lisbon  , Marco Giunti  NOVA-LINCS, FCT NOVA / Universidade Nova de Lisboa    
  DOI 
 10:45   
 15m    
 Talk | Exact Separation Logic   Research Papers   
 Petar Maksimović  Imperial College London, UK  , Caroline Cronjäger  Ruhr-Universität Bochum  , Andreas Lööw  Imperial College London  , Julian Sutherland  Imperial College London  , Philippa Gardner  Imperial College London    
  DOI   Pre-print 
 11:00   
 15m    
 Talk | Morpheus: Automated Safety Verification of Data-dependent Parser Combinator Programs   Research Papers   
 Ashish Mishra  Purdue University  , Suresh Jagannathan  Purdue University    
  DOI 
 11:15   
 15m    
 Talk | Constraint Based Compiler Optimization for Energy Harvesting Applications   Research Papers   
 Yannan Li  University of Southern California  , Chao Wang  University of Southern California    
  DOI 
 11:30   
 15m    
 Talk | Dynamic Determinacy Race Detection for Task-Parallel Programs with Promises   Research Papers   
 Feiyang Jin  Georgia Institute of Technology  , Lechen Yu  Georgia Institute of Technology  , Tiago Cogumbreiro  University of Massachusetts Boston  , Vivek Sarkar  Georgia Institute of Technology  , Jun Shirako  Georgia Institute of Technology    
  DOI 
 11:45   
 15m    
 Talk | On Leveraging Tests to Infer Nullable Annotations   Research Papers   
 Jens Dietrich  Victoria University of Wellington  , David J. Pearce  ConsenSys  , Mahin Chandramohan  Oracle Labs    
  DOI 

 12:00 - 13:30 | Lunch ECOOP and ISSTA Catering   at Zillow Commons (Gates 4th Floor) 
 12:00   
 90m    
 Lunch | Lunch   ECOOP and ISSTA Catering 

 Unscheduled Events  
  
 Not scheduled   
  Talk | Hinted Dictionaries: Efficient Functional Ordered Sets and Maps   Research Papers   
 Amir Shaikhha  University of Edinburgh  , Mahdi Ghorbani  University of Edinburgh  , Hesam Shahrokhi  University of Edinburgh    
  DOI 
 Not scheduled   
  Talk | An Efficient Vectorized Hash Table for Batch Computations   Research Papers   
 Hesam Shahrokhi  University of Edinburgh  , Amir Shaikhha  University of Edinburgh    
  DOI 

 Accepted Papers  
  
 Title 
 A Direct-Style Effect Notation for Sequential and Parallel Programs  Research Papers   
 David Richter  , Timon Böhler  , Pascal Weisenburger  , Mira Mezini    
  DOI   Pre-print   Media Attached 
 Algebraic Replicated Data Types: Programming Secure Local-First Software  Research Papers   
 Christian Kuessner  , Ragnar Mogk  , Anna-Katharina Wickert  , Mira Mezini    
  DOI   Pre-print 
 An Efficient Vectorized Hash Table for Batch Computations  Research Papers   
 Hesam Shahrokhi  , Amir Shaikhha    
  DOI 
 Asynchronous Multiparty Session Type Implementability is Decidable – Lessons Learned from Message Sequence Charts  Research Papers   
 Felix Stutz    
  DOI 
 Automata Learning with an Incomplete Teacher  Research Papers   
 Mark Moeller  , Thomas Wiener  , Alaia Solko-Breslin  , Caleb Koch  , Nate Foster  , Alexandra Silva    
  DOI 
 Behavioural Types for Local-First Software  Research Papers   
 Roland Kuhn  , Hernan Melgratti  , Emilio Tuosto    
  DOI 
 Breaking the Negative Cycle: Exploring the Design Space of Stratification for First-Class Datalog Constraints  Research Papers   
 Jonathan Lindegaard Starup  , Magnus Madsen  , Ondřej Lhoták    
  DOI 
 Building Code Transpilers for Domain-Specific Languages Using Program Synthesis  Research Papers   
 Sahil Bhatia  , Sumer Kohli  , Sanjit Seshia  , Alvin Cheung    
  DOI 
 ConDRust: Scalable Deterministic Concurrency from Verifiable Rust Programs  Research Papers   
 Felix Suchert  , Lisza Zeidler  , Jeronimo Castrillon  , Sebastian Ertel    
  DOI 
 Constraint Based Compiler Optimization for Energy Harvesting Applications  Research Papers   
 Yannan Li  , Chao Wang    
  DOI 
 Dependent Merges and First-Class Environments  Research Papers   
 Jinhao Tan  , Bruno C. d. S. Oliveira    
  DOI 
 Designing Asynchronous Multiparty Protocols with Crash-Stop Failures  Research Papers   
 Adam D. Barwell  , Ping Hou  , Nobuko Yoshida  , Fangyi Zhou    
  DOI   Pre-print 
 Do Machine Learning Models Produce TypeScript Types that Type Check?  Research Papers   
 Ming-Ho Yee  , Arjun Guha    
  DOI   Media Attached   File Attached 
 Dynamically Updatable Multiparty Session Protocols  Research Papers   
 David Castro-Perez  , Nobuko Yoshida    
  DOI 
 Dynamic Determinacy Race Detection for Task-Parallel Programs with Promises  Research Papers   
 Feiyang Jin  , Lechen Yu  , Tiago Cogumbreiro  , Vivek Sarkar  , Jun Shirako    
  DOI 
 Exact Separation Logic  Research Papers   
 Petar Maksimović  , Caroline Cronjäger  , Andreas Lööw  , Julian Sutherland  , Philippa Gardner    
  DOI   Pre-print 
 Hinted Dictionaries: Efficient Functional Ordered Sets and Maps  Research Papers   
 Amir Shaikhha  , Mahdi Ghorbani  , Hesam Shahrokhi    
  DOI 
 Hoogle⋆: Constants and λ-abstractions in Petri-net-based Synthesis using Symbolic Execution  Research Papers   
 Henrique Botelho Guerra  , João F. Ferreira  , João Costa Seco    
  DOI 
 Information Flow Analysis for Detecting Non-Determinism in Blockchain  Research Papers   
 Luca Olivieri  , Vincenzo Arceri  , Luca Negrini  , Fabio Tagliaferro  , Pietro Ferrara  , Agostino Cortesi  , Fausto Spoto    
  DOI 
 Interaction Tree Specifications: A Framework for Specifying Recursive, Effectful Computations that Supports Auto-active Verification  Research Papers   
 Lucas Silver  , Edwin Westbrook  , Matthew Yacavone  , Ryan Scott    
  DOI 
 LoRe: A Programming Model for Verifiably Safe Local-First Software  Research Papers   
 Julian Haas  , Ragnar Mogk  , Elena Yanakieva  , Annette Bieniusa  , Mira Mezini    
  DOI   Pre-print 
 Modular Abstract Definitional Interpreters for WebAssembly  Research Papers   
 Katharina Brandl  , Sebastian Erdweg  , Sven Keidel  , Nils Hansen    
  DOI   Pre-print 
 Modular Compilation for Higher-order Functional Choreographies  Research Papers   
 Luís Cruz-Filipe  , Eva Graversen  , Lovro Lugović  , Fabrizio Montesi  , Marco Peressotti    
  DOI 
 Modular Verification of State-Based CRDTs in Separation Logic  Research Papers   
 Abel Nieto  , Arnaud Daby-Seesaram  , Léon Gondelman  , Amin Timany  , Lars Birkedal    
  DOI 
 Morpheus: Automated Safety Verification of Data-dependent Parser Combinator Programs  Research Papers   
 Ashish Mishra  , Suresh Jagannathan    
  DOI 
 Multi-Graded Featherweight Java  Research Papers   
 Riccardo Bianchini  , Francesco Dagnino  , Paola Giannini  , Elena Zucca    
  DOI 
 Nested Pure Operation-Based CRDTs  Research Papers   
 Jim Bauwens  , Elisa Gonzalez Boix    
  DOI 
 On Leveraging Tests to Infer Nullable Annotations  Research Papers   
 Jens Dietrich  , David J. Pearce  , Mahin Chandramohan    
  DOI 
 On the Rise of Modern Software Documentation  Research Papers   
 Marco Raglianti  , Csaba Nagy  , Roberto Minelli  , Bin Lin  , Michele Lanza    
  DOI 
 On using VeriFast, VerCors, Plural, and KeY to check object usage  Research Papers   
 João Mota  , António Ravara  , Marco Giunti    
  DOI 
 Programming with Purity Reflection: Peaceful Coexistence of Effects, Laziness, and Parallelism  Research Papers   
 Magnus Madsen  , Jaco van de Pol    
  DOI 
 Python Type Hints are Turing Complete  Research Papers   
 Ori Roth    
  DOI 
 Restrictable Variants: A Simple and Practical Alternative to Extensible Variants  Research Papers   
 Magnus Madsen  , Jonathan Lindegaard Starup  , Matthew Lutze    
  DOI 
 Rust for Morello: Always-on Memory Safety, Even in Unsafe Code  Research Papers   
 Sarah Harris  , Simon Cooksey  , Michael Vollmer  , Mark Batty    
  DOI 
 Semantics for Noninterference with Interaction Trees  Research Papers   
 Lucas Silver  , Paul He  , Ethan Cecchetti  , Andrew K. Hirsch  , Steve Zdancewic    
  DOI 
 Sinatra: Stateful Instantaneous Updates for Commercial Browsers Through Multi-Version eXecution  Research Papers   
 Ugnius Rumsevicius  , Siddhanth Venkateshwaran  , Ellen Kidane  , Luís Pina    
  DOI   Pre-print 
 super-Charging Object-Oriented Programming Through Precise Typing of Open Recursion  Research Papers   
 Andong Fan  , Lionel Parreaux    
  DOI 
 Synthesis-Aided Crash Consistency for Storage Systems  Research Papers   
 Jacob Van Geffen  , James Bornholt  , Emina Torlak  , Xi Wang    
  DOI 
 Synthesizing Conjunctive Queries for Code Search  Research Papers   
 Chengpeng Wang  , Peisen Yao  , Wensheng Tang  , Gang Fan  , Charles Zhang    
  DOI 
 Synthetic Behavioural Typing: Sound, Regular Multiparty Sessions via Implicit Local Types  Research Papers   
 Sung-Shik Jongmans  , Francisco Ferreira    
  DOI 
 The Dolorem Pattern: Growing a Language through Compile-Time Function Execution  Research Papers   
 Simon Henniger  , Nada Amin    
  DOI 
 Toward Tool-Independent Summaries for Symbolic Execution  Research Papers   
 Frederico Ramos  , Nuno Sabino  , Pedro Adão  , David Naumann  , José Fragoso Santos    
  DOI 
 VeriFx: Correct Replicated Data Types for the Masses  Research Papers   
 Kevin De Porre  , Carla Ferreira  , Elisa Gonzalez Boix    
  DOI 
 Wiring circuits is easy as {0, 1, ω}, or is it…  Research Papers   
 Jan de Muijnck-Hughes  , Wim Vanderbauwhede    
  DOI 

 Call for Papers  
  
 ECOOP  is a conference about programming originally focused on object-orientation, but now including all practical and theoretical investigations of programming languages, systems and environments. ECOOP solicits innovative solutions to real problems as well as evaluations of existing solutions.  
 Authors are asked to pick one of the following categories:  
 Research. | The most traditional category for papers that advance the state of the art. 
  Replication. | An empirical evaluation that reconstructs a published experiment in a different context in order to validate the results of that earlier work. 
  Experience. | Applications of known PL techniques in practice as well as tools. Industry papers will be reviewed by practitioners. We welcome negative results that may provide inspiration for future research. 
  Pearls/Brave New Ideas. | Articles that either explain a known idea in an elegant way or unconventional papers introducing ideas that may take some time to substantiate. These papers may be short. 
  Submissions   
 Submission must not have been published, or have major overlap with previous work. In case of doubt, contact the chairs. Proceedings are published in open access by Dagstuhl LIPIcs in the Dagstuhl LIPIcs LaTeX-style  template. To reduce friction when resubmitting, ACM’s PACMPL and TOPLAS formatted papers can be submitted as such (with the understanding that if accepted, they will be reformatted).  
 ECOOP uses double-anonymous reviewing. Authors’ identities are only revealed if a paper is accepted. Papers must omit author names and institutions, and use the third person when referencing the authors’ own work. Nothing should be done in the name of anonymity that weakens the submission; see the FAQ. If in doubt, contact the chairs.  
 There is no page limit on submissions, but authors must understand that reviewers have a fixed time budget for each paper, so the length of the feedback is likely to be unaffected by length. Brevity is a virtue. Authors also have to consider that the camera-ready version must be 25 pages  in LIPIcs format (not including references).  
 Authors will be given a three-day period to read and respond to the reviews of their papers before the program committee meeting. Responses have no length limit.  
 ECOOP will continue to have two deadlines for submissions. Papers submitted in each round can be (a) accepted, (b) rejected, or (c) asked for revisions. Rejected papers that are submitted to the immediate next round may be desk rejected if they are not sufficiently different from the previous submission. Revisions can be submitted at any later round. Papers retain their reviewers during revision.  
 Artifact Evaluation and Intent   
 To support replication of experiments, authors of research papers may submit artifacts to the Artifact Evaluation Committee. They will be asked whether they intend to submit an artifact at submission time. It is understood that some paper do not have artifacts. AEC members will serve on the extended review committee.  
 Journal First and Journal After   
 We have Journal First / After arrangements with ACM’s Transactions on Programming Languages and Systems (TOPLAS), Elsevier’s Science of Computer Programming (SCP) and AITO’s Journal of Object Technology (JOT).  
 Only new research papers are eligible to be Journal First (JF). JF papers will have an extended abstract in the ECOOP proceedings. The deadline is that same as Round 1 of submissions and the notification is aligned with Round 2 notification. TOPLAS JF papers should be submitted according to this announcement. SCP JF papers should follow this call for papers. JF papers are presented at the conference and eligible for awards.  
 Journal After (JA) papers are papers for which the authors request to be considered for post conference journal publication. Once accepted by the ECOOP PC, these papers will be forwarded to the journal editors. Reviews and reviewers will be forwarded and used at the editor’s discretion. JA papers will have an extended abstract (up to 12 pages) in the conference proceedings.  

 Important Dates   AoE (UTC-12h)     

 Fri 12 May 2023  
  Camera-ready R2 
 Fri 28 Apr 2023  
  Author Notification R2 
 Mon 17 - Wed 19 Apr 2023  
  Author Response R2 
 Wed 1 Mar 2023   
  Submission R2 
 Tue 21 Feb 2023  
  Camera-ready R1 
 Mon 6 Feb 2023  
  Author Notification R1 
 Mon 23 - Wed 25 Jan 2023  
  Author Response R1 
 Thu 1 Dec 2022  
  Submission R1 

 Submission Link   
   
   https://ecoop23.hotcrp.com     
   
 Program Committee    
   
 Karim Ali Program Co-Chair    
 University of Alberta 
  Guido Salvaneschi Program Co-Chair    
 University of St. Gallen   
 Switzerland 
  Ben Hermann Reproduction Area Chair    
 TU Dortmund   
 Germany 
  Cyrus Omar Pearls/Brave New Ideas Area Chair    
 University of Michigan   
 United States 
  Emma Söderberg Experience Area Chair    
 Lund University   
 Sweden 
  Gul Agha PC Member    
 University of Illinois at Urbana-Champaign, USA 
  Riyadh Baghdadi PC Member    
 NYU Abu Dhabi   
 United Arab Emirates 
  Shigeru Chiba PC Member    
 The University of Tokyo   
 Japan 
  Andrew Craik PC Member    
 Chronosoft   
 Australia 
  Wolfgang De Meuter PC Member    
 Vrije Universiteit Brussel   
 Belgium 
  Alastair F. Donaldson PC Member    
 Imperial College London   
 United Kingdom 
  Simon J. Gay PC Member    
 University of Glasgow, UK   
 United Kingdom 
  Jeremy Gibbons PC Member    
 Department of Computer Science, University of Oxford   
 United Kingdom 
  Tony Hosking PC Member    
 Australian National University   
 Australia 
  Atsushi Igarashi PC Member    
 Kyoto University   
 Japan 
  Mikel Luján PC Member    
 University of Manchester   
 United Kingdom 
  Ana Milanova PC Member    
 Rensselaer Polytechnic Institute 
  Anders Møller PC Member    
 Aarhus University   
 Denmark 
  Klaus Ostermann PC Member    
 University of Tübingen   
 Germany 
  Tomas Petricek PC Member    
 Charles University   
 Czechia 
  Alex Potanin PC Member    
 Australian National University   
 Australia 
  Tom Schrijvers PC Member    
 KU Leuven   
 Belgium 
  Manuel Serrano PC Member    
 Inria; University of Côte d'Azur   
 France 
  Thodoris Sotiropoulos PC Member    
 ETH Zürich   
 Switzerland 
  Peter Thiemann PC Member    
 University of Freiburg, Germany 
  Emma Tosch PC Member    
 Northeastern University, USA 
  Vasco T. Vasconcelos PC Member    
 LASIGE, University of Lisbon   
 Portugal 
  Yuepeng Wang PC Member    
 Simon Fraser University   
 Canada 
  Stefan Wehr PC Member    
 Offenburg University of Applied Sciences   
 Germany 
  Tobias Wrigstad PC Member    
 Uppsala University, Sweden   
 Sweden 
  Chengyu Zhang PC Member    
 ETH Zurich   
 Switzerland 
    
 Extended Review Committee and External Reviewers    
   
 Hernán Ponce de León Co-chair    
 Huawei Dresden Research Center   
 Germany 
  Stefan Winter Co-chair    
 LMU Munich   
 Germany 
  Mehran Alidoost Nia Committee Member    
 Shahid Beheshti University   
 Iran 
  Daniel Baier Committee Member    
 Ludwig Maximilian University of Munich   
 Germany 
  Dorra Ben Khalifa Committee Member    
 University of Perpignan   
 France 
  Utpal Bora Committee Member    
 University of Cambridge   
 United Kingdom 
  Oliver Bračevac Committee Member    
 Galois, Inc.   
 United States 
  Alexandra Bugariu Committee Member    
 Max Planck Institute for Software Systems (MPI-SWS)   
 Germany 
  Stefanos Chaliasos Committee Member    
 Imperial College London   
 United Kingdom 
  Yanju Chen Committee Member    
 University of California at Santa Barbara   
 United States 
  Jianyi Cheng Committee Member    
 Imperial College London   
 United Kingdom 
  Michele Chiari Committee Member    
 TU Wien   
 Austria 
  Vikraman Choudhury Committee Member    
 University of Glasgow   
 United States 
  Hoang-Hai Dang Committee Member    
 BedRock Systems   
 Germany 
  Stefania Dumbrava Committee Member    
 ENSIIE & Institut Polytechnique de Paris 
  Emanuele D’Osualdo Committee Member    
 MPI-SWS   
 Germany 
  Karine Even-Mendoza Committee Member    
 King’s College London   
 United Kingdom 
  William Hallahan Committee Member    
 Binghamton 
  Yann Herklotz Committee Member    
 Imperial College London   
 United Kingdom 
  Xiaowen Hu Committee Member    
 The University of Sydney 
  David Justo Committee Member    
 Microsoft Azure   
 United States 
  Eduard Kamburjan Committee Member    
 University of Oslo   
 Norway 
  Martin Kruliš Committee Member    
 Charles University   
 Czechia 
  Ton Chanh Le Committee Member    
 Stevens Institute of Technology   
 United States 
  Shaohua Li Committee Member    
 ETH Zurich   
 Switzerland 
  Yao Li Committee Member    
 Portland State University   
 United States 
  Zhengyang Liu Committee Member    
 University of Utah 
  Kristóf Marussy Committee Member    
 Budapest University of Technology and Economics   
 Hungary 
  Johannes Mey Committee Member    
 Technische Universität Dresden 
  Raphaël Monat Committee Member    
 Inria and University of Lille   
 France 
  Austin Mordahl Committee Member    
 University of Texas at Dallas   
 United States 
  Fabian Muehlboeck Committee Member    
 Australian National University   
 Australia 
  Tomoki Nakamaru Committee Member    
 University of Tokyo   
 Japan 
  Krishna Narasimhan Committee Member    
 TU Darmstadt   
 Germany 
  Adrian Palacios Committee Member    
 Amazon Web Services   
 United States 
  Mário Pereira Committee Member    
 NOVA LINCS & DI -- Nova School of Science and Technology   
 Portugal 
  Baber Rehman Committee Member    
 University of Hong Kong 
  Neea Rusch Committee Member    
 Augusta University   
 United States 
  John Sarracino Committee Member    
 Cornell University   
 United States 
  Michael Schröder Committee Member    
 TU Wien   
 Austria 
  Lars Schütze Committee Member    
 Technische Universität Dresden   
 Germany 
  Jiasi Shen Committee Member    
 The Hong Kong University of Science and Technology 
  Qingkai Shi Committee Member    
 Purdue University   
 United States 
  Somesh Singh Committee Member    
 INRIA, ENS Lyon   
 France 
  Mallku Soldevila Committee Member    
 FAMAF, UNC (Argentina) / CONICET (Argentina)   
 Argentina 
  Martin Spiessl Committee Member    
 LMU Munich   
 Germany 
  Quentin Stiévenart Committee Member    
 Vrije Universiteit Brussel   
 Belgium 
  Alix Trieu Committee Member    
 ANSSI   
 France 
  Michele Tucci Committee Member    
 Charles University   
 Czechia 
  Wenxi Wang Committee Member    
 University of Texas at Austin   
 United States 
  Yuke Wang Committee Member    
 University of California Santa Barbara 
  Zheng Wang Committee Member    
 University of California, Santa Barbara   
 United States 
  Pascal Weisenburger Committee Member    
 University of St. Gallen   
 Switzerland 
  Aslan Askarov External Reviewer    
 Aarhus University 
  Marco Autili External Reviewer    
 University of L'Aquila, Italy   
 Italy 
  Richard Bubel External Reviewer    
 Technische Universität Darmstadt   
 Germany 
  Sebastian Burckhardt External Reviewer    
 Microsoft Research   
 United States 
  Tej Chajed External Reviewer    
 VMware Research   
 United States 
  Maria Eichlseder External Reviewer    
 TU Graz 
  Simon Fowler External Reviewer    
 University of Glasgow   
 United Kingdom 
  Lorenzo Gheri External Reviewer    
 University of Oxford   
 United Kingdom 
  Sung-Shik Jongmans External Reviewer    
 Open University of the Netherlands; CWI   
 Netherlands 
  Sven Keidel External Reviewer    
 TU Darmstadt, Germany   
 Germany 
  Daniel Lehmann External Reviewer    
 University of Stuttgart   
 Germany 
  Jean-Marie Madiot External Reviewer 
  Alessandro Margara External Reviewer    
 Politecnico di Milano 
  Changwoo Min External Reviewer    
 Virginia Tech, USA 
  Ragnar Mogk External Reviewer    
 Technische Universität Darmstadt   
 Germany 
  Emerson Murphy-Hill External Reviewer    
 Google   
 United States 
  Arthur Oliveira Vale External Reviewer 
  Mike Rainey External Reviewer    
 Carnegie Mellon University   
 United States 
  David Richter External Reviewer    
 Technical University of Darmstadt   
 Germany 
  Philipp Schuster External Reviewer    
 University of Tübingen   
 Germany 
  Marc Shapiro External Reviewer    
 Sorbonne-Université (LIP6) & Inria   
 France 
  Laura Titolo External Reviewer    
 NIA/NASA LaRC   
 United States 
  Heike Wehrheim External Reviewer    
 Carl von Ossietzky Universität Oldenburg / University of Oldenburg   
 Germany 

 x  Sat 30 Nov 06:50    

  ECOOP 2023   
  contact form    
  using conf.researchr.org  ( v1.67.1  )  
   Support page    
     
 Tracks  
 Awards   
  Keynotes   
  Research Papers   
  Artifacts   
   
  ECOOP and ISSTA 2023  
 Doctoral Symposium   
  Keynotes   
  Sponsorships   
  Student Research Competition   
  Student Volunteers   
  Workshops    
 Workshops  
 COP 2023   
  DEBT 2023   
  FTfJP 2023   
  FUZZING 2023   
  ICOOOLPS 2023   
  VORTEX 2023    

 Attending  
 Venue: Seattle   
  ECOOP/ISSTA Code of Conduct   
  ECOOP/ISSTA Covid-19 Disclosure & Liability Waiver   
  Accommodation   
  ECOOP / ISSTA 2023 Registration Is Open   
  Visas

8. EURO_1 conference:
Zur Metanavigation 
  Zur Hauptnavigation 
  Zur Suche 
  Zum Inhalt 
  Zur Subnavigation 
  Zum Seitenfuß 
   
 Language | Deutsch 
  English 
   /sitemap.json 

 OR 2023   

 Registration & Submission | Conference Fees 
  Submission of Abstracts 
  Registration 
  Proceedings 
  Dates 
  Location | About Hamburg 
  Accommodation 
  Committee | Program Committee 
  Organizational Committee 
  Program | Streams and Streamchairs 
  Invited Speakers 
  Schedule 
  Technical Program 
  Social Program 
  Dokt!OR 
  Sponsors 

 Photo: UHH/Denstorf   

 OR 2023   
 Decision Support & Choice-Based Analytics for a Disruptive World  
 Welcome to the annual conference of the Society for Operations Research in Germany (GOR e.V.). This conference is a place to exchange ideas and interact with other academics, researchers, and practitioners in the fields of Operations Research, Management Science, Data Science, and Analytics. The OR 2023 will take place from August 29 to September 1, 2023 at the University of Hamburg.  
 We invite academics, researchers, and practitioners from around the world to attend and submit a paper to OR 2023. The conference is a great platform to share your research findings, discover new applications and practices, discuss trends in the industry, and interact with professionals and leading experts. Join us in this experience!  
  
 Organizers  

 News   
 15.08.2023: The conference booklet and the technical program is now available.   
 In two weeks the OR 2023 will start in Hamburg. As of now, the conference booklet with details on the program, site plans and much more information is available under the following link  . In addition, you can find this year's technical program here  . We look forward to welcoming you soon!  
 13.07.2023: The deadline for submission of contributions is extended to August 6.   
 We are extending the deadline for submission of Proceedings contributions to August 6. We hope that this extension allows you enough time to put the finishing touches on your contribution, and look forward to welcoming you in Hamburg soon!  
 04.05.2023: : The submission of Proceedings contributions is now open.  
 From June 1, 2023, to July 16, 2023, you can submit your short paper for a possible publication in the Proceedings. All further information can be found here  .  
 01.05.2023: The deadline for submitting abstracts is extended to May 14th.  
 The deadline for submitting abstracts is extended by two weeks. We hope that this extension will give you sufficient time to prepare and submit your contributions. We look forward to your submissions and to seeing you soon in Hamburg!  
 14.03.2023: Registration for the OR 2023 is now open!  
 Registration for OR 2023 is now open! If you register by May 28, you can benefit from the “Early-Bird” prices. Furthermore, some events in the social program only allow a limited number of participants, so early registration is recommended. We are excited to welcome you soon in Hamburg. You can find all further information in the conference fees  tab as well as in the registration  tab.  
 17.01.2023: Abstract Submission is now open!  
 Abstract submission for OR 2023 is now open until April 30, 2023. We are looking forward to your submissions! All further information can be found here  .  

 Contact:  
 Conference Front Desk GOR 2023   
 Institute of Logistics (SCM)   
 Moorweidenstraße 18   
 20148 Hamburg   
 Email: Gor2023.bwl  "AT"  uni-hamburg.de     

 Last update: 13 March 2023  
 Feedback 
  Legal notice 
  Privacy statement 
  Site map 

 Registration & Submission 
  Conference Fees 
  Submission of Abstracts 
  Registration 
  Proceedings 
  Dates 
  Location 
  About Hamburg 
  Accommodation 
  Committee 
  Program Committee 
  Organizational Committee 
  Program 
  Streams and Streamchairs 
  Invited Speakers 
  Schedule 
  Technical Program 
  Social Program 
  Dokt!OR 
  Sponsors 
  © 2024 University of Hamburg. All rights reserved

9. EuroPLop_0 conference:
Skip to the content  EuroPLoP   

 Menu     
   
 Conference | Program 
  Call for Papers 
  Submission 
  Registration 
  Venue 
  Publication 
  Organizers 
  Patterns 
  About | About EuroPLoP 
  Past Conferences 
  Hillside Europe 
  Sponsors 
  Submit work 

 30th European Conference on  
  Pattern Languages of Programs, People, and Practices  

 2-6 July 2025, Kloster Irsee, Germany  

 Call for Papers      

 Become a Sponsor      

 EuroPLoP is the premier European conference on patterns and pattern languages. Experience a unique way of knowledge sharing in the fields of software development, system design, human computer interaction, education, business and many more.  

 Authors  

 Gain visibility by publishing patterns and get active, high-quality feedback that can significantly improve their pattern writing and daily activities.  

 Practitioners  

 Enlarge their network and increase visibility at EuroPLoP by meeting leading experts and practitioners, and getting feedback.  

 Academics  

 Gain from EuroPLoP’ s intensive process of shepherding, reviews, and peer discussions at Writers’ Workshops which will yield a high-quality publication.  

 Participants  

 Keep up-to-date with contemporary movements in software engineering and related topics, with in-depth discussions during EuroPLoP’ s Writers’ Workshops.  

 Accepted papers will be published in the ACM ICPS  . Further elaborated accepted papers qualify for submission to the Springer journal LNCS Transactions on Pattern Languages of Programming (TPLoP).  

 The EuroPLoP conference accepts papers on patterns, pattern languages, their theory, and their practical application.  

 It focuses on topics related to computing, including software engineering, programming, design, education, organizational, and management topics.  

 Learn more      

 Important dates  

 February 3, 2025 

 Deadline for initial paper submission  

 March 10, 2025 

 Acceptance for shepherding  
  Start of shepherding  

 May 5, 2025 

 Deadline for improved paper version (for PC review)  

 May 16, 2025 

 Deadline for Focus Group proposal submission   

 May 28, 2025 

 Acceptance notification;  
  Registration opens  

 June 4, 2025 

 Author Registration Deadline  

 June 16, 2025 

 End of shepherding   
  Deadline for conference version of paper   

 June 23, 2025 

 Registration closes  

 July 2-6, 2025 

 Conference  

 September 30, 2025 

 Dedline for proceedings version of paper  

 Facebook     Twitter       

  2023     
   
 Facebook     Twitter       

 Program 
  Venue 
  Organizers 
   
 Program 
  Venue 
  Organizers 

 Call for Papers 
  Submission 
  Registration 
  Publication 
   
 Call for Papers 
  Submission 
  Registration 
  Publication 

 Patterns 
  About 
  Past Conferences 
  Hillside Europe 
   
 Patterns 
  About 
  Past Conferences 
  Hillside Europe 

 Imprint 
  Privacy Policy 
   
 Imprint 
  Privacy Policy

10. EURO_2 conference:
Skip to content      
   
  Home 
  Programme 
  Submission | Call for Abstracts 
  Key Dates 
  Registration | Conference Registration 
  Accommodation 
  Venue | Venue & Travel 
  About Leeds 
  About | About the Conference 
  Organising Committee 
  Programme Committee 
  Contact 
   
     Menu    
 Home 
  Programme 
  Submission | Call for Abstracts 
  Key Dates 
  Registration | Conference Registration 
  Accommodation 
  Venue | Venue & Travel 
  About Leeds 
  About | About the Conference 
  Organising Committee 
  Programme Committee 
  Contact 

 EURO 2025  
  22 - 25 June  
  University of Leeds, UK  

 Welcome  

 On behalf of the Operational Research Society, the University of Leeds is honoured to be hosting the 34th European Conference on Operational Research in 2025. Offering a warm Yorkshire welcome, we are delighted to make the 50th Anniversary of EURO a memorable experience for all.  

 Read More      

 Call for Abstracts  

 We are delighted to invite you to the 34th European Conference on Operational Research (EURO 2025), taking place in Leeds, United Kingdom, from June 22 to June 25, 2025. This event holds special significance as we celebrate the 50th Anniversary of the Association of European Operational Research Societies (EURO).  
 We warmly encourage researchers, academics, practitioners, and students involved in Operational Research and related fields to submit their abstracts for consideration and contribute to this landmark event.  

 Read More      

 About Leeds  

 EURO 2025 will take place at the University of Leeds. Find out more about what the city has to offer visitors from Visit Leeds.  

 Find out more      

 About the conference  

 This year EURO celebrates its 50th anniversary. Find out more about the history of the conference.  

 Find out more      

 About The OR Society  

 EURO 2025 is hosted by the Operational Research Society. Find out more about the host organisation.  

 Find out more

11. EuroPLop_1 conference:
Skip to the content  EuroPLoP   

 Menu     
   
 Conference | Program 
  Call for Papers 
  Submission 
  Registration 
  Venue 
  Publication 
  Organizers 
  Patterns 
  About | About EuroPLoP 
  Past Conferences 
  Hillside Europe 
  Sponsors 
  Submit work 

 Program Preview  

 The core of the conference program are the  writers’ workshops   where the accepted papers will be discussed. Additionally, we offer an Open Space format for the accepted  focus group  proposals. The conference also contains many social activities to foster social networking.   

 Writers Workshops  

 This is where your paper is discussed during the conference. The workshops group together the authors of up to five papers that thematically fit together. Shortly before the conference begins, we will publish the paper-to workshop assignments. If you are an author, use this page to find which workshop you are assigned to. Non-authors, please use the same page to decide which group you would like to join throughout the conference. All participants should download, print and read all the papers in their group before the conference.    

 EuroPLoP is the premier European conference on patterns and pattern languages. Design patterns are a unique and effective way to capture and share expertise, tacit knowledge and research findings.  

 Submission      

 Unlike other conferences, EuroPLoP focuses on improving papers instead of only presenting them. Authors will receive high quality feedback in a constructive way during the shepherding process and during the workshops at the conference. The feedback can be used to improve submitted papers for final publication.  
 We hope to be able to organize the conference on-site, but this is subject to change, considering any restrictions imposed by Covid-19. EuroPLoP’s registration fee is normally 1111€ and covers all activities, accommodation, and food.  

  2023     
   
 Facebook     Twitter       

 Program 
  Venue 
  Organizers 
   
 Program 
  Venue 
  Organizers 

 Call for Papers 
  Submission 
  Registration 
  Publication 
   
 Call for Papers 
  Submission 
  Registration 
  Publication 

 Patterns 
  About 
  Past Conferences 
  Hillside Europe 
   
 Patterns 
  About 
  Past Conferences 
  Hillside Europe 

 Imprint 
  Privacy Policy 
   
 Imprint 
  Privacy Policy

12. ECSA_0 conference:
ECSA 2023   Mon 18 - Fri 22 September 2023 Istanbul, Turkey    

 Toggle navigation        
 Attending | Venue: Yeditepe University 
  Registration 
  Accommodation 
  Traveling tips 
  Social Events 
  Info | Previous Venues 
  Contact 
  Program | ECSA Program 
  Your Program 
   Mon 18 Sep 
  Tue 19 Sep 
  Wed 20 Sep 
  Thu 21 Sep 
  Fri 22 Sep 
  Tracks | ECSA 2023 
  Research Papers 
  Industry Program 
  Journal First 
  Tools & Demos 
  Workshops/Tutorials 
  Diversity, Equity and Inclusion (DE&I) 
  Doctoral Symposium 
  Keynotes 
  Organization | ECSA 2023 Committees 
  Organizing Committee 
  Steering Committee 
  Track Committees 
  Research Papers 
  Industry Program 
  Tools & Demos 
  Workshops/Tutorials 
  Contributors 
  People Index 
  Search 
  Series | Series 
   ECSA 2025 
  ECSA 2024 
  ECSA 2023 
  ECSA 2022 
  ECSA 2021 
  ECSA 2020 
  Sign in 
  Sign up 

 17th European Conference on Software Architecture (ECSA)  
   
 Welcome to the website of the ECSA 2023 conference!   
 The European Conference on Software Architecture (ECSA) is the premier European software architecture conference, providing researchers, practitioners, and educators with a platform to present and discuss the most recent, innovative, and significant findings and experiences in the field of software architecture research and practice. The 17th European Conference on Software Architecture (ECSA 2023) will be held from September 18 to 22, 2023  .  
 ECSA 2023 is planned as an in-person/physical conference, with the events taking place in the beautiful and historic city of Istanbul in Turkiye  .  
  News  
 To download the slides for the keynote presented by Dr. Birgit Penzenstadler, | please click | . 
  To download the slides for the keynote presented by Professor Flavio Oquendo, | please click | . 
  To download the slides for the opening session, | please click | . 
  A shuttle will be available between Dedeman Bostancı Istanbul Hotel and the conference venue. | Depart time from hotel: 07:45 (everyday) | Depart time from university: 17:45 (everyday) 
  Have a look at the | Travel Planner | and | Istanbul Brochure | to learn more about Istanbul and plan your travelling 
  Download the main conference program 
  The detailed program is | available 
  Please make sure that you have filled in the | registration form 
  Please make sure that you have selected your | preference for the city tour | . Note that two different slots are available each of which accepts 35 participants at most. 
  Click to view the weather forecast in Istanbul 
   Publications  
 The ECSA 2023 Conference Proceedings is now available. The conference proceedings has been published by Springer-Verlag as a volume of the Lecture Notes in Computer Science (LNCS) series  . The volume includes 16 full papers and the 9 short papers that have been selected from 71 submissions after thorough reviews.  
  To access the conference proceedings published via SpringerLink, please click here  . Note that the free access is available for 4 weeks only for the conference participants and authors.  Keynotes To Attend  
 Wednesday, 20th of September   
 09:30 - 10:30: The trek towards sustainability - truth, tale, or transition? (Birgit Penzenstadler) 
  Thursday, 21st of September   
 09:30 - 10:30: Green IT: How you can take action now (Virginie Corraze) 
  14:05 - 14:35: The PhD journey (Matthias Galster) 
  Friday, 22nd of September   
 09:30 - 10:30: Software Architecture in the Era of Collective Intelligence: The Rise of Systems-of-Systems (Flavio Oquendo) 

  ECSA 2023 Tracks   
   
 Research Papers  | Industry Program  | Journal First  | Tools & Demos  | Workshops/Tutorials  | Diversity, Equity and Inclusion (DE&I)  | Doctoral Symposium  | Keynotes    

   Posts   
   
 ECSA 2023    

 x  Sat 30 Nov 06:50    

  ECSA 2023   
  using conf.researchr.org  ( v1.67.1  )  
   Support page    
     
 Tracks  
 Research Papers   
  Industry Program   
  Journal First   
  Tools & Demos   
  Workshops/Tutorials   
  Diversity, Equity and Inclusion (DE&I)   
  Doctoral Symposium   
  Keynotes    

 Attending  
 Venue: Yeditepe University   
  Registration   
  Accommodation   
  Traveling tips   
  Social Events    
 Sign Up

13. EURO_3 conference:
Skip to content      
   
  Home 
  Programme 
  Submission | Call for Abstracts 
  Key Dates 
  Registration | Conference Registration 
  Accommodation 
  Venue | Venue & Travel 
  About Leeds 
  About | About the Conference 
  Organising Committee 
  Programme Committee 
  Contact 
   
     Menu    
 Home 
  Programme 
  Submission | Call for Abstracts 
  Key Dates 
  Registration | Conference Registration 
  Accommodation 
  Venue | Venue & Travel 
  About Leeds 
  About | About the Conference 
  Organising Committee 
  Programme Committee 
  Contact 

 About the Conference  

 Welcome to EURO 2025  

 On behalf of The Operational Research Society  , the University of Leeds  is honoured to be hosting the 34th European Conference on Operational Research  in 2025. Offering a warm Yorkshire welcome, we are delighted to make the 50th Anniversary of EURO a memorable experience for all.  
 The UK has a significant history and influence in the field of Operational Research (OR). Originating during World War II, OR was developed in Britain to address complex military logistics and strategy problems. Post-war, it played a pivotal role in decision-making and strategy, helping to solve complex problems through the innovative use of mathematics and science.  
 British universities, particularly institutions like the University of Leeds, have been instrumental in advancing OR research and education, fostering innovations that drive efficiency and decision-making processes in both public and private sectors.  
 The University of Leeds is a prestigious institution known for its research excellence and provides an ideal setting for the EURO 2025 conference. Located in the heart of Leeds, the university boasts state-of-the-art facilities and a vibrant academic environment that will inspire and facilitate engaging discussions and collaborations. We have a truly global community, with more than 39,000 students from 170 different countries and over 9,000 staff of 100 different nationalities.  
 While we delve into the intricacies of algorithms and analytics, let’s not forget to enjoy the charm of Leeds. Whether it’s exploring the historic city centre or enjoying a cup of Yorkshire tea, we hope your stay will be both intellectually stimulating and personally enjoyable. Leeds offers a great combination of modern European energy with a strong heritage and a huge warm and friendly welcome.  
 EURO 2025 will be packed with insightful presentations, engaging discussions, and opportunities for networking. With a wide array of topics and cutting-edge research, the conference is designed to inspire and challenge attendees, fostering growth and collaboration.  

 News  

  EURO 2025 welcomes Hexaly as headline sponsor   
 October 16, 2024    
 Read More »

14. ECSA_1 conference:
ECSA    
 ☰  History 
  Steering Committee 
  SC Documents 
  Awards 
  Call for Letters of Interest 
  ECSA 2024 

 ECSA is the premier European conference on Software Architecture. It targets advances and breakthroughs beyond the state-of-the-art in Software Architecture and covers all aspects of research in the domain of Software Architecture, ranging from theory to technology and their applications.  
 ECSA is a top ranked conference venue for researchers with an ‘A’ CORE conference rank since its entry in 2010, and more recently according to CORE2023  . Since its first edition in 2007, the proceedings have been published by Springer as volumes of the LNCS series.  
 On this web site you can find information about the ECSA conference series as well as useful information for organizing a future ECSA conference  . We also provide information about the history of ECSA and its predecessor event, EWSA, as well as on awards.  

 Tweets by ECSACONF    
   
 Upcoming Edition  

 Previous Recent Editions  

 #ECSA   

 Copyright © 2023 ECSA

15. EuroPLop_2 conference:
Deutsch  | English   

    About bibliography 
  Registering a publication 
  Search in bibliography 
  Publication list 

 University Bibliography 
  Document ID 12140 

  Basket:  0  Publications     

 EuroPLoP '23: Proceedings of the 28th European Conference on Pattern Languages of Programs  

 add to basket  MODS  BibTeX  EndNote  RIS    
 Association for Computing Machinery (Eds.):   
 EuroPLoP '23: Proceedings of the 28th European Conference on Pattern Languages of Programs   
 EuroPLoP 2023; Irsee, Germany; July 5 - 9, 2023   
 New York: Association for Computing Machinery, 2024-02-05   

 2024-02-05  Conference proceedings    

 Related: 3 publication(s)     

 Title:   
 EuroPLoP '23: Proceedings of the 28th European Conference on Pattern Languages of Programs   
   
 Conference   
 EuroPLoP 2023; Irsee, Germany; July 5 - 9, 2023   
   
 Editor:   
 Association for Computing Machinery    
   
 Place of publication:   
 New York   
   
 Publisher:   
 Association for Computing Machinery   
   
 Date published:   
 2024-02-05   
   
 Extent:   
 451 Seiten   
   
 DOI   
 10.1145/3628034    
   
 ISBN   
 979-8-4007-0040-8   
   
 Language of text:   
 English   
   
 Type of resource:   
 Text   
   
 Practice Partner:   
 No   
   
 Category:   
 Research   
   
 Part of statistic:   
 Not part of statistic   

 Contact 
  Privacy 
  Site Notice 
  Accessibility

16. ECSA_2 conference:
ECSA 2025   Mon 15 - Fri 19 September 2025 Limassol, Cyprus    

 Toggle navigation        
 Series 
  ECSA 2025 
  All Editions | ECSA 2025 
  ECSA 2024 
  ECSA 2023 
  ECSA 2022 
  ECSA 2021 
  ECSA 2020 
  Sign in 
  Sign up 

 ECSA  
   
 All Editions   

 Mon 15 - Fri 19 September 2025 Limassol, Cyprus  ECSA 2025   
 with ICTSS 2025    
 Welcome to the website of the ECSA 2025 conference! The European Conference on Software Architecture (ECSA) is the premier European software architecture conference, providing researchers, practitioners, and educators with a platform to present and discuss the most recent, innovative, and significant findings and experiences in the field of software architecture research and practice. The 19th European Conferenc ... 
 Tue 3 - Fri 6 September 2024 Luxembourg, Luxembourg  ECSA 2024   
 Welcome to the website of the ECSA 2024 conference! The European Conference on Software Architecture (ECSA) is the premier European software architecture conference, providing researchers, practitioners, and educators with a platform to present and discuss the most recent, innovative, and significant findings and experiences in the field of software architecture research and practice. The 18th European Conferenc ... 
 Mon 18 - Fri 22 September 2023 Istanbul, Turkey  ECSA 2023   
 Welcome to the website of the ECSA 2023 conference! The European Conference on Software Architecture (ECSA) is the premier European software architecture conference, providing researchers, practitioners, and educators with a platform to present and discuss the most recent, innovative, and significant findings and experiences in the field of software architecture research and practice. The 17th European Conferenc ... 
 Mon 19 - Fri 23 September 2022 Prague, Czech Republic  ECSA 2022   
 Welcome to the website of the ECSA 2022 conference! The European Conference on Software Architecture (ECSA) is the premier European software architecture conference, providing researchers, practitioners, and educators with a platform to present and discuss the most recent, innovative, and significant findings and experiences in the field of software architecture research and practice. The 16th European Conferenc ... 
 Mon 13 - Fri 17 September 2021  ECSA 2021   
 The ECSA 2021 proceedings are now available at the following link: Springer online proceedings 
 Mon 14 - Fri 18 September 2020 L'Aquila, Italy  ECSA 2020   
 ECSA 2020 proceedings Proceedings are made available free for all registered participants of both Workshops and Main conference. It is accessible from the Files -&gt; ECSA 2020 Proceedings folder in the General channel of both ECSA 2020 - Main conference and ECSA 2020 - workshops teams. The online version of Springer CCIS proceedings can be accessed from here The online version of Springer LNCS proceedings can ... 

 Steering Committee (ECSA 2025)   
   
 No members yet 

 x  Sat 30 Nov 06:50    

 using conf.researchr.org  ( v1.67.1  )  
   Support page    

 Sign Up

17. EuroPLop_3 conference:
Conference announcements   
 Extended Submission Deadline -  
  28th European Conference on Pattern Languages of Programs (EuroPLoP'2024)  
   
 From: "'Filipe Correia' via ECOOP Info" <ecoop-info@ecoop.org> Date: Tue, 7 Feb 2023 12:32:34 +0000 Subject: [ECOOP-Info] EuroPLoP 2023 - Extended Submission Deadline: Feb. 20th, 2023 To: [...], ECOOP Info <ecoop-info@ecoop.org>, [...] cc: Cesare Pautasso <c.pautasso@ieee.org> Reply-To: Filipe Correia <filipe.correia@fe.up.pt> Dear pattern authors We are extending the submission deadline for EuroPLoP 2023, so that you can send us your initial submission until Monday, February 20th, 2023, 23:59 AoE. If you haven't started writing your paper yet, now is still a good time to start. If you have already submitted a paper, you can keep updating it until Feb 20th. Remember that we will review your initial submissions for suitability for the conference. Upon acceptance, we expect you to still revise and improve it during the shepherding phase into a finished paper. The updated call for papers is available at: http://europlop.net/2023/cfp  Submit your initial submission at: https://www.hillside.net/europlop/europlop2023/submission/  We would appreciate it if you could forward this to your colleagues co-workers, and pattern friends and inform them about the extension. Feel free to get in touch if you have any questions regarding the conference. We look forward to receiving your submission for EuroPLoP 2023! Best regards Filipe Correia, Cesare Pautasso EuroPLoP 2023 Chairs    
 Call for Papers and Focus Group Proposals -  
  28th European Conference on Pattern Languages of Programs (EuroPLoP'2024)  
   
 From: "'Filipe Correia' via ECOOP Info" <ecoop-info@ecoop.org> Date: Mon, 19 Dec 2022 10:31:09 +0000 Subject: [ECOOP-Info] EuroPLoP 2023 - Call for Papers and Focus Group Proposals To: [...], ECOOP Info <ecoop-info@ecoop.org>, [...] Reply-To: Filipe Correia <filipe.correia@fe.up.pt> ========================================================================= 28th European Conference on Pattern Languages of Programs (EuroPLoP 2023) July 5-9, 2023 - Kloster Irsee, Bavaria, Germany www.europlop.net  ========================================================================= Patterns represent practical experience and best practice, and EuroPLoP is the premier European conference on patterns and pattern languages. Hereby, we invite you to submit a paper for the EuroPLoP 2023! Important Dates =============== Feb 6, 2023: Deadline for initial paper submission Mar 9, 2023: Acceptance for shepherding Mar 9, 2023: Start of shepherding May 8, 2023: Deadline for improved paper version (for PC review) May 8, 2023: Deadline for focus group proposal submission May 25, 2023: Acceptance notification May 25, 2023: Registration opens Jun 1, 2023: Author registration deadline Jun 15, 2023: End of shepherding Jun 22, 2023: Registration closes Jun 22, 2023: Deadline for conference version of paper Jul 5-9, 2023: Conference Sep 30, 2023: Deadline for proceedings version of paper (always 23:59 AoE) Why come to EuroPLoP 2023? ========================== Patterns represent practical experience and best practices, and EuroPLoP is the premier European conference on patterns and pattern languages. - Authors gain visibility by publishing patterns and get active high-quality feedback that can significantly improve their pattern writing and daily activities. - Practitioners enlarge their network and increase visibility at EuroPLoP by meeting leading experts and practitioners, and getting feedback. - Academics gain from EuroPLoP's intensive process of shepherding, reviews and peer discussions at Writers' Workshops which will yield a high-quality publication: * Accepted papers to be published in the ACM ICPS (pending confirmation) * Further elaborated accepted papers qualify for submission to the Springer journal LNCS Transactions on Pattern Languages of Programming (TPLoP). - Participants keep up-to-date with contemporary movements in software engineering and related topics, with in-depth discussions during EuroPLoP's Writers' Workshops. Accepted papers will be published in the ACM ICPS. Further elaborated accepted papers qualify for submission to the Springer journal LNCS Transactions on Pattern Languages of Programming (TPLoP). Call for Pattern Papers and Focus Group Proposals ================================================= The EuroPLoP conference accepts papers on patterns, pattern languages their theory, and their practical application. It focuses on topics related to computing, including software engineering, programming design, education, organizational, and management topics. EuroPLoP is open for synergies with other fields and therefore accepts up to 20% of pattern papers on non-computing topics. Tracks ====== The writers' workshops will focus on the following tracks*: A. Software/Systems Engineering, Classical Software Design Patterns - Patterns in software and systems architecture, design & implementation - Patterns in Human-computer-interface (HCI) design and architecture - Patterns for improving software quality and software verification - Reports, studies, or empirical evaluations of using patterns and pattern languages B. Modern Development and Operations Paradigms - Patterns in agile processes, e.g., XP, Scrum, DevOps, CI/CD - Patterns in API Design & Management, Microservices, SOA, Serverless - Patterns in Domain Driven Design (DDD), Model-driven Development & Eng. C. Patterns in Business, Organization, Innovation, and Requirements Eng. - Patterns for business, organization, requirements engineering, and process management - Patterns for design thinking / lateral thinking, innovation processes and creativity - Patterns for transformations of corporate processes and alternative business cultures. D. Education and Learning Patterns - Patterns in education, collaboration, and interdisciplinary topics - Reports of using patterns in education - Gamification patterns E. Patterns in the Internet of Things / Cyber-Physical-Systems - Patterns in (Industrial) IoT, Cyber-Physical-Systems, embedded devices control systems - Hardware/Software Co-Design patterns - Patterns about safety, security, reliability, or dependability - Patterns for cloud, fog, edge, embedded environments and isomorphic computing F. Patterns in Emerging Topics - Hyper-automation, robotic process automation, digital transformation Industry 4.0 patterns - Blockchain, smart contracts and decentralized systems patterns - Patterns for AI and machine learning - Patterns for virtual reality, augmented reality, mixed reality, and immersive applications - Patterns for multi-experience environments, people-centric smart spaces G. Meta Topics - Theoretical arguments about patterns - Empirical evaluations of patterns and pattern languages *) The exact assignment of topics to writers workshops may change due to balancing reasons Paper Submission Process ======================== The submission runs through three quality gates before the final proceedings will be published. After the first draft is accepted, your paper will be assigned to a shepherd. This is an experienced pattern author, who will provide feedback and suggestions on how to improve your paper. Following several iterations of shepherding, your improved second draft will be reviewed again and accepted or rejected for the conference. On acceptance, your paper will be discussed in the writers' workshop during the conference. Based on the feedback received during the workshops, you must submit a final revised version that will be published. The submission system is available under https://europlop.net/content/submission.  Paper Submission Format ======================== The final submission for publication must be formatted using the single-column ACM primary article template, but for the drafts and intermediate versions, you can use any format. However, we encourage you to use the ACM format right from the beginning to avoid layout problems in the end. If you don't intend to publish with ACM, you can choose whatever format you like. We recommend 10 pages as a guideline and especially welcome shorter papers. Longer papers are also possible but bear in mind that the writers' workshop might decide to focus only on a part of your paper. Have a look at the introductory information pack for examples. Focus Group Proposals ===================== Do you have a pattern-related topic with the potential to spark a discussion? Focus Groups at EuroPLoP are an excellent opportunity to collaborate with other passionate pattern writers. They are 1 to 2 hour sessions, usually workshops, but you are welcome to experiment with different formats. Your submission should include a summary of the topic outcomes you envision, a brief description of how you will organize the session, its time budget, and the required number of participants." EuroPLoP values =============== High-quality feedback All submissions will benefit from an iterative shepherding process prior to the conference: an experienced pattern author will give you feedback and suggestions on how to improve your paper. In Writers' Workshops - the core of the conference - peers and experts will discuss your paper. You will receive in-depth, constructive feedback and insights to improve your paper further. If you wish, you may complement your paper with alternative media (e.g., short video clips linked from the paper) to get feedback on that format as well. Share and learn Patterns are an effective way to share knowledge about a domain. The interdisciplinary topics of the conference will provide you with new insights and inspiring ideas from other fields. Theory and practice EuroPLoP, with its creative and constructive atmosphere, attracts participants from both industry and academia. You will be part of a unique community of pattern book authors, researchers, and practitioners. ~ o ~ We are looking forward to receiving your contribution! If you have any questions, please do not hesitate to contact us: Conference Chair: Filipe Correia, FEUP, Portugal, filipe dot correia at fe dot up dot pt Program Chair: Cesare Pautasso, USI, Switzerland, c dot pautasso at ieee dot org Focus Group Chair: Tsvetelina Plummer, Bulgaria, tsvetelina dot plummer at gfk.com     To the Ada-Belgium home page.  
 Last update: 202x/xx/xx.  
  
 Dirk Craeynest

18. ECSA_3 conference:
Anmelden 
  Registrierung 
  Deutsch  English 
  Español 
  Português 
  Français 

     Dom 
  Najlepsze kategorie | CAREER & MONEY 
  PERSONAL GROWTH 
  POLITICS & CURRENT AFFAIRS 
  SCIENCE & TECH 
  HEALTH & FITNESS 
  LIFESTYLE 
  ENTERTAINMENT 
  BIOGRAPHIES & HISTORY 
  FICTION 
  Najlepsze historie 
  Najlepsze historie 
  Dodaj historię 
  Moje historie 

 Home 
  Software Architecture: 17th European Conference, ECSA 2023, Istanbul, Turkey, September 18–22, 2023, Proceedings [1 ed.] 303142591X, 9783031425912, 9783031425929 

 Software Architecture: 17th European Conference, ECSA 2023, Istanbul, Turkey, September 18–22, 2023, Proceedings [1 ed.] 303142591X, 9783031425912, 9783031425929   
 This book constitutes the refereed proceedings of the 17th International Conference on Software Architecture, ECSA 2023,   
  405    43    27MB    
  English   Pages 387 [374]   Year 2023    
  Report DMCA / Copyright    
  DOWNLOAD FILE   
   
 Polecaj historie   

 Software Architecture. 17th European Conference, ECSA 2023 Istanbul, Turkey, September 18–22, 2023 Proceedings 9783031425912, 9783031425929  
  
  2,745    116    Read more   

 Software Architecture: 14th European Conference, ECSA 2020, L'Aquila, Italy, September 14–18, 2020, Proceedings [1st ed.] 9783030589226, 9783030589233  
 This book constitutes the refereed proceedings of the 14th International Conference on Software Architecture, ECSA 2020,  
  715    107    22MB    Read more   

 Comparative Genomics: 20th International Conference, RECOMB-CG 2023, Istanbul, Turkey, April 14–15, 2023, Proceedings 3031369106, 9783031369100  
 This book constitutes the refereed proceedings of the 20th Annual RECOMB Satellite Workshop on Comparative Genomics, REC  
  1,344    86    12MB    Read more   

 Comparative Genomics: 20th International Conference, RECOMB-CG 2023, Istanbul, Turkey, April 14–15, 2023, Proceedings 9783031369117, 9783031369100, 3031369114  
 This book constitutes the refereed proceedings of the 20th Annual RECOMB Satellite Workshop on Comparative Genomics, REC  
  173    25    24MB    Read more   

 Logics in Artificial Intelligence: 18th European Conference, JELIA 2023, Dresden, Germany, September 20–22, 2023, Proceedings 9783031436192, 9783031436185, 3031436199  
 This book constitutes proceedings of the 18th European Conference on Logics in Artificial Intelligence, JELIA 2023, held  
  226    78    66MB    Read more   

 Multi-Agent Systems: 20th European Conference, EUMAS 2023, Naples, Italy, September 14–15, 2023, Proceedings 9783031432644, 3031432649  
 This volume LNCS 14282 constitutes the refereed proceedings of the 20th European Conference EUMAS 2023, held in Naples,  
  115    33    Read more   

 Software Architecture: 13th European Conference, ECSA 2019, Paris, France, September 9–13, 2019, Proceedings [1st ed. 2019] 978-3-030-29982-8, 978-3-030-29983-5  
 This book constitutes the refereed proceedings of the 13th European Conference on Software Architecture, ECSA 2019, held  
  1,128    74    13MB    Read more   

 Software architecture : 11th European Conference, ECSA 2017, Canterbury, UK, September 11-15, 2017, Proceedings 978-3-319-65831-5, 331965831X, 978-3-319-65830-8  
 This book constitutes the proceedings of the 11th European Conference on Software Architecture, ECSA 2017, held in Cante  
  615    71    18MB    Read more   

 Software Architecture: 14th European Conference, ECSA 2020 Tracks and Workshops, L'Aquila, Italy, September 14–18, 2020, Proceedings [1st ed.] 9783030591540, 9783030591557  
 This book constitutes the refereed proceedings of the tracks and workshops which complemented the 14th European Conferen  
  2,044    99    48MB    Read more   

 Logics in Artificial Intelligence: 18th European Conference, JELIA 2023, Dresden, Germany, September 20–22, 2023, Proceedings (Lecture Notes in Computer Science, 14281) [1st ed. 2023] 9783031436185, 9783031436192, 3031436180  
 This book constitutes proceedings of the 18th European Conference on Logics in Artificial Intelligence, JELIA 2023, held  
  389    46    19MB    Read more   

 Author / Uploaded 
  Bedir Tekinerdogan (editor) 
  Catia Trubiani (editor) 
  Chouki Tibermacine (editor) 
  Patrizia Scandurra (editor) 
  Carlos E. Cuesta (editor) 
  Categories 
  Computers 

 Table of contents :  
  Preface  
  Organization  
  Abstract of Keynotes  
  The Trek Towards Sustainability - Truth, Tale, or Transition?  
  Green IT: How You Can Take Action Now  
  Software Architecture in the Era of Collective Intelligence: The Rise of Systems-of-Systems  
  Contents  
  Quality in Software Architectures  
  Supporting the Exploration of Quality Attribute Tradeoffs in Large Design Spaces  
  1 Introduction  
  2 Example: A Client-Server Design Space  
  3 Requirements for Tradeoff Explainability  
  4 Approach  
  4.1 Design Representation Using a Search Graph  
  4.2 Clustering of the Quality-Attribute Space  
  4.3 Distance Between Architectural Configurations  
  4.4 Explanation Charts  
  5 Study Design  
  5.1 Client-Server Design Space  
  5.2 User Study  
  6 Findings  
  6.1 Threats to Validity  
  7 Related Work  
  8 Conclusions  
  References  
  Tool Support for the Adaptation of Quality of Service Trade-Offs in Service- and Cloud-Based Dynamic Routing Architectures  
  1 Introduction  
  2 Approach Overview  
  3 Approach Details  
  3.1 Reconfiguration Activities of the Dynamic Configurator  
  3.2 Analytical Models  
  4 Tool Overview  
  5 Evaluation  
  5.1 Evaluation Cases  
  5.2 Results Analysis  
  6 Threats to Validity  
  7 Related Work  
  8 Conclusions  
  References  
  Architecture-Based Attack Path Analysis for Identifying Potential Security Incidents  
  1 Introduction  
  2 Modeling Attack Paths and Path Selection  
  3 Attack Path Identification  
  4 Evaluation  
  5 Related Work  
  6 Conclusion  
  References  
  Carving Sustainability into Architecture Knowledge Practice  
  1 Introduction  
  1.1 Background  
  1.2 Related Studies  
  2 Methodology  
  2.1 Study Objective and Questions  
  2.2 Study Design  
  3 Main Findings and Results  
  3.1 Demographics  
  3.2 Architecture Knowledge Elements  
  3.3 Architecture Knowledge Representation  
  3.4 Architecture Knowledge Communication  
  3.5 Sustainability  
  4 Discussion  
  5 Threats to Validity  
  6 Conclusion  
  References  
  Guidance Models for Designing Big Data Cyber Security Analytics Systems  
  1 Introduction  
  2 Research Approach  
  3 Guidance Models  
  3.1 Data Engineering  
  3.2 Feature Engineering  
  3.3 Process Engineering  
  3.4 Data Processing  
  3.5 Data Post-Processing  
  4 Related Work  
  5 Conclusions  
  References  
  Architecture Modeling and Design  
  Automated Integration of Heteregeneous Architecture Information into a Unified Model  
  1 Introduction  
  2 Background  
  2.1 Digital Architecture Twin  
  2.2 Architecture Information Recovery Methods  
  3 Problem Statement and Challenges for Architecture Information Integration  
  4 Detailed Architecture Integration Approach  
  5 Implementation  
  6 Evaluation  
  6.1 Goals and Questions  
  6.2 Metrics  
  6.3 Methodology  
  6.4 Results and Discussion  
  6.5 Threats to Validity  
  7 Related Work  
  8 Conclusion  
  References  
  An Experience Report on the Design and Implementation of an Ad-hoc Blockchain Platform for Tactical Edge Applications  
  1 Introduction  
  2 Context and Architectural Vision  
  2.1 Current Architecture: Centralised Information Platform  
  2.2 Vision: Decentralised Secure Information Platform  
  3 Design and Implementation of the Platform  
  3.1 Requirements and Constraints  
  3.2 Platform Architecture  
  3.3 Platform Implementation  
  3.4 Platform Bootstrapping Process  
  4 Develop and Deploy Applications with the Platform  
  4.1 Application Architecture  
  4.2 Application Development Process  
  4.3 Application Deployment Process  
  5 Case Study  
  5.1 Context  
  5.2 Implementation  
  5.3 Deployment and Operation  
  6 Lessons Learned  
  7 Related Work  
  8 Conclusions  
  References  
  Designing a Reference Architecture for the C-ITS Services  
  1 Introduction  
  2 Method  
  2.1 Abstraction Phase  
  2.2 Description Phase  
  2.3 Architecture Review  
  3 Results  
  3.1 C-ITS System Classification  
  3.2 C-ITS Architecture Description  
  4 Lessons Learnt  
  5 Conclusion and Future Work  
  References  
  Towards Assessing Spread in Sets of Software Architecture Designs  
  1 Introduction  
  2 Motivating Example  
  3 Related Work  
  4 Proposed Architectural Quality Indicator  
  4.1 Architectural Distance as Sequence Distance  
  4.2 Application of MAS  
  5 Conclusion  
  References  
  Continuous Evaluation of Consistency in Software Architecture Models  
  1 Introduction  
  2 Related Work  
  3 Approach  
  3.1 Supporting Tools  
  4 Evaluation  
  5 Discussion  
  6 Final Remarks  
  References  
  Artificial Intelligence and Autonomous Systems  
  Architecting Explainable Service Robots  
  1 Introduction  
  2 Preliminaries  
  3 Towards Explainable HMT  
  4 Explainability Levels  
  5 Architectural Solution  
  6 Evaluation  
  7 Related Work  
  8 Conclusion and Future Work  
  References  
  Analysing Interoperability in Digital Twin Software Architectures for Manufacturing  
  1 Introduction  
  2 Background  
  2.1 ISO 23247 and Information Exchange  
  2.2 The Conceptual Interoperability Model  
  3 Research Methodology  
  3.1 Research Goal and Questions  
  3.2 Search and Selection Process  
  3.3 Classification Framework and Data Extraction  
  3.4 Data Analysis and Synthesis  
  3.5 Threats to Validity  
  4 Results  
  4.1 How Is Data Exchanged? (RQ1)  
  4.2 Interoperability Level (RQ2)  
  5 Summary, Discussion and Future Directions  
  6 Related Work  
  7 Conclusion and Future Work  
  References  
  Architecting Artificial Intelligence for Autonomous Cars: The OpenPilot Framework  
  1 Introduction  
  2 Research Materials and Methods  
  3 Framework Architecture  
  4 OpenPilot and SelfDrive  
  4.1 Package Structure  
  4.2 The ModelD Artificial Intelligence Module  
  5 OpenPilot: A Technical and Socio-Organizational Quality Analysis  
  6 Discussions  
  7 Conclusions  
  References  
  Designing and Evaluating Interoperable Industry 4.0 Middleware Software Architecture: Reconfiguration of Robotic System  
  1 Introduction and Motivation  
  2 Problem and Approach  
  2.1 Use Case: Upload Program  
  2.2 Problem  
  2.3 Approach  
  3 Quality Attribute Scenario  
  4 Middleware Software Architecture Design  
  4.1 Design  
  4.2 Tactics  
  5 Evaluation  
  5.1 Design  
  5.2 Measurements, Pilot Test, and Analysis  
  6 Conclusion  
  References  
  Shaping IoT Systems Together: The User-System Mixed-Initiative Paradigm and Its Challenges  
  1 Introduction  
  2 Related Works  
  3 Smart City Scenario and IoT-Together Paradigm  
  4 Discussion, Challenges, and Future Directions  
  References  
  Software Architecture Implementation and Deployment  
  Analyzing the Evolution of Inter-package Dependencies in Operating Systems: A Case Study of Ubuntu  
  1 Introduction  
  2 Background and Motivation  
  2.1 Software Complexity  
  2.2 Code Dependency Types  
  3 Our Approach and Implementation  
  4 Studying the Architectural Aspects of Ubuntu  
  5 Findings and Results  
  5.1 OS-Wide Dependency Graph  
  5.2 Dependencies Coupling Aspects  
  5.3 Dependency Graphs Evolutionary Trends  
  6 Discussion  
  6.1 Threats to Validity  
  6.2 Challenges and Limitations  
  7 Related Work  
  8 Conclusion and Future Work  
  References  
  A Graph-Based Java Projects Representation for Antipatterns Detection  
  1 Introduction  
  2 Proposed Approach for Graph Construction  
  2.1 Relations Between Classes  
  2.2 Relations Between Classes and Methods  
  2.3 Relations Between Methods  
  2.4 Automatic Graph Generation: Tool Implementation  
  3 Antipatterns Mathematical Formulation  
  3.1 God Class Antipattern: Mathematical Formulation  
  3.2 Circuitous Treasure Hunt Antipattern: Mathematical Formulation  
  3.3 Empty Semi Truck Antipattern: Mathematical Formulation  
  4 Related Work  
  4.1 Graph-Based Representation of Object-Oriented Projects  
  4.2 Antipatterns Detection  
  4.3 Open Challenges of the Approach  
  5 Conclusion  
  References  
  Scalable Cloud-Native Pipeline for Efficient 3D Model Reconstruction from Monocular Smartphone Images  
  1 Introduction  
  2 Background and Technology  
  2.1 Standard and Conventional Techniques  
  2.2 AI-Based Techniques  
  3 Proposed Pipeline  
  3.1 Pipeline Definition  
  3.2 Data Acquisition  
  3.3 Preprocessing  
  3.4 Reconstruction  
  3.5 Architecture  
  4 Evaluation  
  4.1 Qualitative Evaluation  
  4.2 Performance Evaluation  
  5 Conclusion and Future Work  
  References  
  Automated Reverse Engineering of the Technology-Induced Software System Structure  
  1 Introduction  
  2 Foundation  
  3 Approach  
  4 Evaluation  
  5 Related Work  
  6 Conclusion  
  References  
  Cloud-Native Architecture for Mixed File-Based and API-Based Digital Twin Exchange  
  1 Introduction  
  2 Digital Twins in a Nutshell  
  2.1 Scope and Key Concepts  
  2.2 Architectural Challenges for Digital Twins and AAS  
  3 Cloud-Native Architecture for AAS Implementation  
  4 Related Work  
  5 Summary and Future Work  
  References  
  Software Architecture Documentation  
  What Rationales Drive Architectural Decisions? An Empirical Inquiry  
  1 Introduction  
  2 Related Work  
  3 Method  
  3.1 Questionnaire: Data-Gathering  
  3.2 Questionnaire: Analysis  
  3.3 Interviews: Data Gathering  
  3.4 Interviews: Analysis  
  4 Results  
  4.1 RQ1 & RQ2: Most Frequent Rationales and Prioritised Software Quality Attributes  
  4.2 RQ3: Rationales' Origins  
  5 Discussion  
  6 Threats to Validity  
  7 Conclusion  
  References  
  Learning from Each Other: How Are Architectural Mistakes Communicated in Industry?  
  1 Introduction  
  2 Method  
  2.1 Data Collection  
  2.2 Data Analysis  
  3 Results  
  3.1 RQ1: Definition and Characteristics of SA Mistakes  
  3.2 RQ2: Management of SA Mistakes  
  3.3 RQ3: Communication of SA Mistakes  
  4 Discussion  
  4.1 Increase Detection Trigger  
  4.2 Ensure Communication Opportunities  
  5 Related Work  
  6 Threats to Validity  
  7 Conclusion  
  References  
  A Query Language for Software Architecture Information  
  1 Introduction  
  2 The Digital Architecture Twin (DArT)  
  3 Application Scenarios  
  4 The Architecture Information Query Language (AIQL)  
  5 User Study  
  6 Related Work  
  7 Conclusion and Future Work  
  References  
  Extracting the Architecture of Microservices: An Approach for Explainability and Traceability  
  1 Introduction  
  2 Related Works  
  3 Our Approach  
  3.1 Tree Structure Abstraction  
  3.2 Generic Exploratory Algorithm  
  3.3 Scanner  
  4 Case Study  
  4.1 Comparison of Manually Derived and Automatically Extracted Views  
  4.2 Detectors  
  4.3 Traces  
  5 Discussion  
  6 Conclusion  
  References  
  A Comparison of Static and Dynamic Analysis to Identify Microservices in Monolith Systems  
  1 Introduction  
  2 Related Work  
  3 Monolith Microservices Identification  
  3.1 Data Collection Tools  
  3.2 Monolith Monitoring  
  3.3 Static vs Dynamic Data Collection  
  4 Evaluation  
  4.1 Complexity and Similarity Measures Correlation  
  4.2 Best Complexity Decomposition  
  4.3 Lessons Learned  
  5 Conclusions  
  References  
  Author Index   
 Citation preview   
  LNCS 14212  
   
  Bedir Tekinerdogan · Catia Trubiani · Chouki Tibermacine · Patrizia Scandurra · Carlos E. Cuesta (Eds.)  
   
  Software Architecture 17th European Conference, ECSA 2023 Istanbul, Turkey, September 18–22, 2023 Proceedings  
   
  Lecture Notes in Computer Science Founding Editors Gerhard Goos Juris Hartmanis  
   
  Editorial Board Members Elisa Bertino, Purdue University, West Lafayette, IN, USA Wen Gao, Peking University, Beijing, China Bernhard Steffen , TU Dortmund University, Dortmund, Germany Moti Yung , Columbia University, New York, NY, USA  
   
  14212  
   
  The series Lecture Notes in Computer Science (LNCS), including its subseries Lecture Notes in Artificial Intelligence (LNAI) and Lecture Notes in Bioinformatics (LNBI), has established itself as a medium for the publication of new developments in computer science and information technology research, teaching, and education. LNCS enjoys close cooperation with the computer science R & D community, the series counts many renowned academics among its volume editors and paper authors, and collaborates with prestigious societies. Its mission is to serve this international community by providing an invaluable service, mainly focused on the publication of conference and workshop proceedings and postproceedings. LNCS commenced publication in 1973.  
   
  Bedir Tekinerdogan · Catia Trubiani · Chouki Tibermacine · Patrizia Scandurra · Carlos E. Cuesta Editors  
   
  Software Architecture 17th European Conference, ECSA 2023 Istanbul, Turkey, September 18–22, 2023 Proceedings  
   
  Editors Bedir Tekinerdogan Wageningen University Wageningen, The Netherlands Chouki Tibermacine LIRMM University of Montpellier Montpellier, France  
   
  Catia Trubiani Computer Science Gran Sasso Science Institute L’Aquila, Italy Patrizia Scandurra DIGIP University of Bergamo Dalmine, Italy  
   
  Carlos E. Cuesta Superior de Ingeniería Informática Rey Juan Carlos University Mostoles, Madrid, Spain  
   
  ISSN 0302-9743 ISSN 1611-3349 (electronic) Lecture Notes in Computer Science ISBN 978-3-031-42591-2 ISBN 978-3-031-42592-9 (eBook) https://doi.org/10.1007/978-3-031-42592-9 © The Editor(s) (if applicable) and The Author(s), under exclusive license to Springer Nature Switzerland AG 2023 This work is subject to copyright. All rights are reserved by the Publisher, whether the whole or part of the material is concerned, specifically the rights of translation, reprinting, reuse of illustrations, recitation, broadcasting, reproduction on microfilms or in any other physical way, and transmission or information storage and retrieval, electronic adaptation, computer software, or by similar or dissimilar methodology now known or hereafter developed. The use of general descriptive names, registered names, trademarks, service marks, etc. in this publication does not imply, even in the absence of a specific statement, that such names are exempt from the relevant protective laws and regulations and therefore free for general use. The publisher, the authors, and the editors are safe to assume that the advice and information in this book are believed to be true and accurate at the date of publication. Neither the publisher nor the authors or the editors give a warranty, expressed or implied, with respect to the material contained herein or for any errors or omissions that may have been made. The publisher remains neutral with regard to jurisdictional claims in published maps and institutional affiliations. This Springer imprint is published by the registered company Springer Nature Switzerland AG The registered company address is: Gewerbestrasse 11, 6330 Cham, Switzerland Paper in this product is recyclable.  
   
  Preface  
   
  The European Conference on Software Architecture (ECSA) is the premier European software architecture conference, providing researchers, practitioners, and educators with a platform to present and discuss the most recent, innovative, and significant findings and experiences in the field of software architecture research and practice. The special theme for the 17th edition of ECSA was “Software Architectures for Engaging Responsibility”. We are interested in learning about how software architecture principles and practices are evolving and being applied to engage software architects in societal and environmental responsibility. This raises questions such as: What are current research and practice results in developing and evolving software architecture principles for systems that include responsible design solutions? What are current research and practice results in developing and evolving software architecture principles for promoting responsibility in different domains such as collaborative, autonomous, and heterogeneous systems, as well as other emerging applications? What are good/bad examples and case studies in the context of responsible software architectures? How have software architecture courses changed to accommodate responsibility in design decisions, team skills, and underlying technologies? This edition of ECSA was held during September 18–22, 2023, as an in-person event taking place in the beautiful and historic city of Istanbul in Turkey. The core technical program included five sessions that blended contributions from the research, industry, and tools & demonstration tracks, plus three keynote talks. Moreover, ECSA 2023 offered a doctoral symposium track. ECSA 2023 also encompassed workshops on diverse topics related to the software architecture discipline, such as context-aware, autonomous and smart architectures, agility with microservices programming, formal approaches for advanced computing systems, designing and measuring security in software architectures, quality in software architectures, and digital twin architectures. For ECSA 2023, we received 71 submissions for research and industrial full papers. For the second time, this year the ECSA research track followed a double-blind review process. Each paper received three reviews. Based on the recommendations of the Program Committee, we accepted 16 papers as full papers and 9 additional papers as short papers. Hence the acceptance rate for full papers was 22% for ECSA 2023. The conference attracted papers (co-)authored by researchers, practitioners, and academics from 28 countries (Argentina, Australia, Austria, Belgium, Brazil, Canada, Chile, China, Colombia, Czech Republic, Denmark, France, Germany, Greece, India, Italy, Japan, The Netherlands, Peru, Poland, Portugal, South Korea, Spain, Sweden, Switzerland, Turkey, the UK, and the USA). The main ECSA program had three keynotes. Our first speaker, Virginie Corraze, is Associate Director at Amadeus, in charge of Engineering Quality & Sustainability. She has 25+ years of experience in IT travel, in both commercial and R&D organizations. Virginie and her team interact with the Amadeus engineering community (8,000 members) to ensure sustainability and quality are part of all engineering practices. Our second  
   
  vi  
   
  Preface  
   
  speaker, Flavio Oquendo, is a Full Professor of Computing and a research director on Formal Approaches to Software Architecture at the IRISA Research Institute (UMR CNRS 6074), France. He has been a recipient of the Research Excellence Award from the Ministry of Research and Higher Education (France), having been promoted to the rank of Distinguished Full Professor, named by the Section of Computing of the National Council of Universities. Our third speaker, Birgit Penzenstadler, is an Associate Professor at the joint Department of Computer Science and Engineering at Chalmers University of Technology and Gothenburg University, Sweden, as well as an Adjunct Professor at the Lappeenranta University of Technology, Finland. She has been investigating resilience and sustainability from the point of view of software engineering during the past ten years, working on a body of knowledge and concepts of how to support sustainability from within Requirements Engineering. We are grateful to the members of the Program Committee for their valuable and timely reviews. Their efforts formed the basis for a high-quality technical program for ECSA 2023. We would like to thank the members of the Organizing Committee for successfully organizing the event with several tracks, as well as the workshop organizers, who made significant contributions to this year’s successful event. We thank our sponsor Springer, who funded the best paper award of ECSA 2023 and supported us by publishing the proceedings in the Lecture Notes in Computer Science series. Finally, we thank the authors of all the ECSA 2023 submissions and the attendees of the conference for their participation. We thank the software architecture community for their support, and for continuing to advance the field of software architecture through their scientific submissions to ECSA. July 2023  
   
  Bedir Tekinerdogan Catia Trubiani Chouki Tibermacine Patrizia Scandurra Carlos E. Cuesta  
   
  Organization  
   
  General Chair Bedir Tekinerdogan  
   
  Wageningen University, The Netherlands  
   
  Steering Committee Paris Avgeriou Thais Batista Stefan Biffl Tomas Bures Laurence Duchien Carlos E. Cuesta David Garlan Ilias Gerostathopoulos Paola Inverardi Patricia Lago Grace Lewis Ivano Malavolta Raffaela Mirandola Henry Muccini Elena Navarro Flavio Oquendo (Chair) Ipek Ozkaya Jennifer Pérez Bedir Tekinerdogan Chouki Tibermacine Catia Trubiani Danny Weyns  
   
  University of Groningen, The Netherlands Federal University of Rio Grande do Norte, Brazil Vienna University of Technology, Austria Charles University, Czech Republic CRIStAL, University of Lille, France Rey Juan Carlos University, Spain Carnegie Mellon University, USA Vrije Universiteit Amsterdam, The Netherlands University of L’Aquila, Italy Vrije Universiteit Amsterdam, The Netherlands Carnegie Mellon Software Engineering Institute, USA Vrije Universiteit Amsterdam, The Netherlands Politecnico di Milano, Italy University of L’Aquila, Italy University of Castilla-La Mancha, Spain IRISA, University of South Brittany, France Carnegie Mellon University, USA Technical University of Madrid, Spain Wageningen University, The Netherlands University of Montpellier, France Gran Sasso Science Institute, Italy KU Leuven, Belgium  
   
  Program Co-chairs Chouki Tibermacine Catia Trubiani  
   
  University of Montpellier, France Gran Sasso Science Institute, Italy  
   
  viii  
   
  Organization  
   
  Program Committee Jesper Andersson Vasilios Andrikopoulos Paolo Arcaini Hernan Astudillo Justus Bogner Paris Avgeriou Muhammad Ali Babar Rami Bahsoon Luciano Baresi Thais Batista Steffen Becker Alessio Bucaioni Radu Calinescu Matteo Camilli Jan Carlson Carlos E. Cuesta Rogério de Lemos Elisabetta Di Nitto Daniele Di Pompeo Khalil Drira Ghizlane El Boussaidi António Rito Silva Filipe Figueiredo Correia Matthias Galster David Garlan Ilias Gerostathopoulos Robert Heinrich Sebastian Herold Jasmin Jahic Andrea Janes Anne Koziolek Patricia Lago Valentina Lenarduzzi Grace Lewis Lukas Linsbauer Marin Litoiu Antónia Lopes Ivano Malavolta  
   
  Linnaeus University, Sweden University of Groningen, The Netherlands National Institute of Informatics, Japan Universidad Técnica Federico Santa María, Chile University of Stuttgart, Germany University of Groningen, The Netherlands University of Adelaide, Australia University of Birmingham, UK Politecnico di Milano, Italy Federal University of Rio Grande do Norte, Brazil University of Stuttgart, Germany Mälardalen University, Sweden University of York, UK Politecnico di Milano, Italy Mälardalen University, Sweden Rey Juan Carlos University, Spain University of Kent, UK Politecnico di Milano, Italy University of L’Aquila, Italy LAAS-CNRS, France École de Technologie Supérieure, Canada University of Lisbon, Portugal University of Porto, Portugal University of Canterbury, New Zealand Carnegie Mellon University, USA Vrije Universiteit Amsterdam, The Netherlands Karlsruhe Institute of Technology, Germany Karlstad University, Sweden University of Cambridge, UK FHV Vorarlberg University of Applied Sciences, Austria Karlsruhe Institute of Technology, Germany Vrije Universiteit Amsterdam, The Netherlands University of Oulu, Finland Carnegie Mellon Software Engineering Institute, USA ABB Corporate Research, Germany York University, Canada University of Lisbon, Portugal Vrije Universiteit Amsterdam, The Netherlands  
   
  Organization  
   
  Tommi Mikkonen Raffaela Mirandola Henry Muccini Elena Navarro Evangelos Ntentos Pablo Oliveira Antonino Flavio Oquendo Ipek Ozkaya Patrizio Pelliccione Jennifer Perez Ana Petrovska Diego Pérez Riccardo Pinciroli Maryam Razavian Salah Sadou Riccardo Scandariato Patrizia Scandurra Bradley Schmerl Lionel Seinturier Jacopo Soldani Romina Spalazzese Christos Tsigkanos Katja Tuma Elisa Yumi Nakagawa Christelle Urtado Dimitri Van Landuyt Rainer Weinreich Danny Weyns Anna Wingkvist André van Hoorn Andrzej Zalewski  
   
  University of Helsinki, Finland Politecnico di Milano, Italy University of L’Aquila, Italy University of Castilla-La Mancha, Spain University of Vienna, Austria Fraunhofer IESE, Germany IRISA (UMR CNRS) - Univ. Bretagne-Sud, France Carnegie Mellon University, USA Gran Sasso Science Institute, Italy Universidad Politécnica de Madrid (UPM), Spain Technical University of Munich, Germany Linnaeus University, Sweden Gran Sasso Science Institute, Italy Eindhoven University of Technology, The Netherlands IRISA (UMR CNRS) - Univ. Bretagne-Sud, France Hamburg University of Technology, Germany University of Bergamo, Italy Carnegie Mellon University, USA University of Lille, France University of Pisa, Italy Malmö University, Sweden University of Bern, Switzerland Vrije Universiteit Amsterdam, The Netherlands University of São Paulo, Brazil IMT Mines Alès, France KU Leuven, Belgium Johannes Kepler University Linz, Austria KU Leuven, Belgium Linnaeus University, Sweden University of Hamburg, Germany Warsaw University of Technology, Poland  
   
  Organizing Committee Industrial Track Co-chairs Carlos E. Cuesta Patrizia Scandurra  
   
  ix  
   
  Rey Juan Carlos University, Spain University of Bergamo, Italy  
   
  x  
   
  Organization  
   
  Workshops Co-chairs Hasan Sozer Romina Spalazzese  
   
  Özye˘gin University, Turkey Malmö University, Sweden  
   
  Tools and Demos Co-chairs Rami Bahsoon Matthias Galster  
   
  University of Birmingham, UK University of Canterbury, New Zealand  
   
  Doctoral Symposium Co-chairs Muhammad Ali Babar Danny Weyns  
   
  University of Adelaide, Australia KU Leuven, Belgium  
   
  Journal-First Chair Henry Muccini Uwe Zdun  
   
  University of L’Aquila, Italy University of Vienna, Austria  
   
  Proceedings Chair Jasmin Jahic  
   
  University of Cambridge, UK  
   
  Publicity Chair Elisa Yumi Nakagawa  
   
  University of São Paulo, Brazil  
   
  Local Chair Mert Özkaya  
   
  Yeditepe University, Turkey  
   
  Web Chair Deniz Akdur  
   
  Aselsan, Turkey  
   
  Virtualization Chair Sezer Gören U˘gurda˘g  
   
  Yeditepe University, Turkey  
   
  Organization  
   
  Registration Chair Esin Onba¸sıo˘glu  
   
  Yeditepe University, Turkey  
   
  Student Volunteer Co-chairs Egehan Asal Sevde Sim¸ ¸ sek  
   
  Yeditepe University, Turkey Yeditepe University, Turkey  
   
  Additional Reviewers Joran Leest Elvin Alberts Sylvain Vauttier Calum Imrie Tobias Dürschmid Sinem Getir Farnaz Fotrousi  
   
  Max Scheerer Leif Bonorden Dominik Fuchß Vaclav Struhar Adel Taweel Samir Ouchani Cédric Eichler  
   
  xi  
   
  Abstract of Keynotes  
   
  The Trek Towards Sustainability - Truth, Tale, or Transition?  
   
  Birgit Penzenstadler Chalmers University of Technology and Gothenburg University, Sweden [email protected]  Abstract. You may have heard about sustainability and the Sustainable Development Goals and the Global Reporting Initiative that now requires bigger companies to adjust their reporting in order to increase transparency. At the same time, you may have a funky feeling that there’s quite a bit of hot air and greenwashing going on around there. So how do we truly transition towards more sustainability? Why may we also want to think about more resilience? And what inner transition is required to make this big outer shift? In this talk, I give a brief (necessarily incomplete) overview of the last decade of sustainability research in and outside of software engineering and sketch a vision of what’s to come if we truly embrace a transition, and what may happen if we don’t.  
   
  Green IT: How You Can Take Action Now  
   
  Virginie Corraze Amadeus, France [email protected]  Abstract. The younger generations seek a sense of purpose in their work, while the pace of climate change is increasing, with the IT industry playing a significant role in this acceleration through its carbon footprint. Now is the time to take accountability and prioritize sustainability in all engineering activities, to generate a positive influence and reduce the environmental impact of IT and in particular as a software architect. Join the session to gain knowledge on the fundamentals of green IT, learn Amadeus’ feedback practices on deploying green practices in an IT organization, and ways to integrate sustainable development in your daily work.  
   
  Software Architecture in the Era of Collective Intelligence: The Rise of Systems-of-Systems  
   
  Flavio Oquendo IRISA Research Institute, France [email protected]  Abstract. This keynote addresses why and how software architecture plays a central role in building collective intelligence in a rising class of complex systems, enabled by pervasive connectivity. De facto, different enabling technologies have progressively made possible to interconnect software-intensive systems that were independently developed, operated, managed, and evolved, yielding a new kind of complex system, i.e., a system that is itself composed of systems, the so-called “systemof-systems”. By its very nature, a software-intensive system-of-systems is architected to exhibit “collective intelligence”, very often opportunistically while operating in open environments. This is the case of systemsof-systems found in different areas as diverse as automotive, aeronautics, energy, healthcare, manufacturing, and transportation. In this context, safety is of paramount necessity since various aspects of our lives and livelihoods are becoming progressively dependent on those systems-ofsystems. In this keynote, I will present the challenges facing research on software architecture to address the building of artificial collective intelligence in systems-of-systems, while enforcing safety. I will discuss the discriminating characteristics of systems-of-systems when compared with single (even very large) systems from the software architecture perspective. Especially, I will analyze why novel architectural approaches are needed to handle the complexity of software-intensive systems-ofsystems in particular regarding the architectural challenges implied by self-organization and emergent behavior, the two key features for supporting collective intelligence. I will survey novel solutions for architecting systems-of-systems based on supervenience for achieving intelligent collective behavior and illustrate their applications in the field of driving automation for connected and automated vehicles. I will conclude by identifying the guarantees of correctness of the proposed approaches for architecting safe systems-of-systems, based on formal description and verification techniques dealing with dynamicity and uncertainty.  
   
  Contents  
   
  Quality in Software Architectures Supporting the Exploration of Quality Attribute Tradeoffs in Large Design Spaces . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . J. Andres Diaz-Pace, Rebekka Wohlrab, and David Garlan  
   
  3  
   
  Tool Support for the Adaptation of Quality of Service Trade-Offs in Service- and Cloud-Based Dynamic Routing Architectures . . . . . . . . . . . . . . . . Amirali Amiri and Uwe Zdun  
   
  20  
   
  Architecture-Based Attack Path Analysis for Identifying Potential Security Incidents . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Maximilian Walter, Robert Heinrich, and Ralf Reussner  
   
  37  
   
  Carving Sustainability into Architecture Knowledge Practice . . . . . . . . . . . . . . . . Markus Funke and Patricia Lago Guidance Models for Designing Big Data Cyber Security Analytics Systems . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Faheem Ullah and Muhammad Ali Babar  
   
  54  
   
  70  
   
  Architecture Modeling and Design Automated Integration of Heteregeneous Architecture Information into a Unified Model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Sven Jordan, Christoph König, Lukas Linsbauer, and Ina Schaefer  
   
  83  
   
  An Experience Report on the Design and Implementation of an Ad-hoc Blockchain Platform for Tactical Edge Applications . . . . . . . . . . . . . . . . . . . . . . . . 100 Nguyen Khoi Tran, Muhammad Ali Babar, Julian Thorpe, Seth Leslie, and Andrew Walters Designing a Reference Architecture for the C-ITS Services . . . . . . . . . . . . . . . . . . 117 Priyanka Karkhanis, Yanja Dajsuren, and Mark van den Brand Towards Assessing Spread in Sets of Software Architecture Designs . . . . . . . . . . 133 Vittorio Cortellessa, J. Andres Diaz-Pace, Daniele Di Pompeo, and Michele Tucci  
   
  xxii  
   
  Contents  
   
  Continuous Evaluation of Consistency in Software Architecture Models . . . . . . . 141 Priom Biswas, Andreas Morgenstern, Pablo Oliveira Antonino, Rafael Capilla, and Elisa Yumi Nakagawa Artificial Intelligence and Autonomous Systems Architecting Explainable Service Robots . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 153 Marcello M. Bersani, Matteo Camilli, Livia Lestingi, Raffaela Mirandola, Matteo Rossi, and Patrizia Scandurra Analysing Interoperability in Digital Twin Software Architectures for Manufacturing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 170 Enxhi Ferko, Alessio Bucaioni, Patrizio Pelliccione, and Moris Behnam Architecting Artificial Intelligence for Autonomous Cars: The OpenPilot Framework . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 189 Luciano Baresi and Damian A. Tamburri Designing and Evaluating Interoperable Industry 4.0 Middleware Software Architecture: Reconfiguration of Robotic System . . . . . . . . . . . . . . . . . . . . . . . . . . 205 Sune Chung Jepsen and Torben Worm Shaping IoT Systems Together: The User-System Mixed-Initiative Paradigm and Its Challenges . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 221 Romina Spalazzese, Martina De Sanctis, Fahed Alkhabbas, and Paul Davidsson Software Architecture Implementation and Deployment Analyzing the Evolution of Inter-package Dependencies in Operating Systems: A Case Study of Ubuntu . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 233 Victor Prokhorenko, Chadni Islam, and Muhammad Ali Babar A Graph-Based Java Projects Representation for Antipatterns Detection . . . . . . . 250 Roberta Capuano and Henry Muccini Scalable Cloud-Native Pipeline for Efficient 3D Model Reconstruction from Monocular Smartphone Images . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 266 Potito Aghilar, Vito Walter Anelli, Michelantonio Trizio, and Tommaso Di Noia Automated Reverse Engineering of the Technology-Induced Software System Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 283 Yves R. Kirschner, Jan Keim, Nico Peter, and Anne Koziolek  
   
  Contents  
   
  xxiii  
   
  Cloud-Native Architecture for Mixed File-Based and API-Based Digital Twin Exchange . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 292 Nafise Eskandani and Sten Grüner Software Architecture Documentation What Rationales Drive Architectural Decisions? An Empirical Inquiry . . . . . . . . 303 Klara Borowa, Rafał Lewanczyk, Klaudia Stpiczy´nska, Patryk Stradomski, and Andrzej Zalewski Learning from Each Other: How Are Architectural Mistakes Communicated in Industry? . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 319 Marion Wiese, Axel-Frederik Brand, and André van Hoorn A Query Language for Software Architecture Information . . . . . . . . . . . . . . . . . . . 337 Joshua Ammermann, Sven Jordan, Lukas Linsbauer, and Ina Schaefer Extracting the Architecture of Microservices: An Approach for Explainability and Traceability . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 346 Pierre-Jean Quéval and Uwe Zdun A Comparison of Static and Dynamic Analysis to Identify Microservices in Monolith Systems . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 354 Bernardo Andrade, Samuel Santos, and António Rito Silva Author Index . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 363  
   
  Quality in Software Architectures  
   
  Supporting the Exploration of Quality Attribute Tradeoﬀs in Large Design Spaces J. Andres Diaz-Pace1(B) , Rebekka Wohlrab2 , and David Garlan3 1  
   
  3  
   
  ISISTAN Research Institute, CONICET and UNICEN University, Tandil, Buenos Aires, Argentina [email protected]  2 Department of Computer Science and Engineering, Chalmers University of Gothenburg, Gothenburg, Sweden [email protected]  Software and Societal Systems Department, Carnegie Mellon University, Pittsburgh, PA, USA [email protected]   
   
  Abstract. When designing and evolving software architectures, architects need to consider large design spaces of architectural decisions. These decisions tend to impact the quality attributes of the system, such as performance, security, or reliability. Relevant quality attributes might inﬂuence each other and usually need to be traded oﬀ by architects. When exploring a design space, it is often challenging for architects to understand what tradeoﬀs exist and how they are connected to architectural decisions. This is particularly problematic in architectural spaces generated by automated optimization tools, as the underlying tradeoﬀs behind the decisions that they make are unclear. This paper presents an approach to explore quality-attribute tradeoﬀs via clustering and visualization techniques. The approach allows architects to get an overview of the main tradeoﬀs and their links to architectural conﬁgurations. We evaluated the approach in a think-aloud study with 9 participants from academia and industry. Our ﬁndings show that the proposed techniques can be useful in understanding feasible tradeoﬀs and architectural changes aﬀecting those tradeoﬀs in large design spaces. Keywords: Quality attribute tradeoﬀs  
   
  1  
   
  · Architecture exploration  
   
  Introduction  
   
  Designing and evolving a software architecture is usually a challenging activity, as architects need to consider large design spaces that arise from alternative architectural decisions [4,7]. These decisions tend to have an impact on quality attributes of the system (e.g., performance, security, or reliability requirements), which might interact with each other. For example, achieving excellent performance and reliability at a low cost and with high security is often unfeasible. In c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 3–19, 2023. https://doi.org/10.1007/978-3-031-42592-9_1  
   
  4  
   
  J. A. Diaz-Pace et al.  
   
  practice, stakeholders make tradeoﬀs between the quality attributes of interest, which in turn aﬀect the decisions that the architect can choose for the system. This architectural decision problem can be seen as one of multi-objective optimization [1,15], in which making a set of decisions (and avoiding others) produces an architectural conﬁguration that fulﬁlls a set of quality attribute goals to varying degrees. However, in large design spaces, it is often diﬃcult for humans to assess how good a set of architectural decisions is for the relevant quality attributes and what tradeoﬀs those decisions entail. To assist architects, several tools for automated architecture generation and optimization have been proposed [1,3,9,16,17], which can search through a wide range of conﬁgurations and recommend the most promising ones (e.g., those closer to the Pareto front for the relevant quality measures). An architectural conﬁguration is shaped by the decisions being selected (e.g., deploying a service on a device, or inserting an intermediary between components). An architect normally takes a given conﬁguration as the starting point and then relies on an optimization tool for generating and assessing alternative conﬁgurations. In some cases, diﬀerent conﬁgurations might be connected to similar tradeoﬀs. Conversely, in other cases, small variations in a conﬁguration might lead to diﬀerent tradeoﬀs. However, in existing tools, the reasons why a generated conﬁguration fulﬁlls a set of quality attributes are normally opaque to architects. This limitation negatively aﬀects their interactions with the tool and the exploration of architectural alternatives. The concerns above call for forms of explaining a design space [20] to humans, which are currently not supported in optimization tools. This paper presents an approach to explain tradeoﬀ spaces using clustering and visualization techniques. Clustering is used to ﬁnd groups of conﬁgurations sharing similar qualityattribute characteristics (i.e., making similar tradeoﬀs). Furthermore, conﬁgurations are linked to each other based on a distance measure that considers the decisions (or architectural changes) to transition from one conﬁguration to a neighborhood of alternatives. Along with this process, diﬀerent charts are used to visualize prototypical conﬁgurations within a particular group, or to identify diﬀerences between groups. The proposed techniques enable us to summarize a large amount of information about quality attributes and related decisions. Thus, we help architects to quickly explore a design space and increase their conﬁdence in the solutions generated by a tool. To evaluate our approach, we performed a think-aloud study with 9 participants from industry and academia. The goal was to assess how the proposed techniques support architects in understanding tradeoﬀs and associated decisions within a space. Although at initial stages, we found that our techniques can be beneﬁcial in large design spaces, allowing users to identify key tradeoﬀs, reason about architectural changes aﬀecting them, and explore related alternatives.  
   
  2  
   
  Example: A Client-Server Design Space  
   
  For illustration purposes, let’s assume a simple client-server architecture as schematized in Fig. 1 (left). The relevant quality attributes are performance, reliability, and cost. Client requests go through a load balancer that assigns them  
   
  Supporting the Exploration of Quality Attribute Tradeoﬀs  
   
  5  
   
  to service instances (on the server side) for processing. Service instances can be deployed on two physical devices. Each device is assumed to have a capacity to host up to six service instances. The two devices diﬀer in their hardware characteristics: device1 is a low-end device while device2 is a high-end device, which aﬀects their processing and reliability capabilities. In this setting, the processing time for incoming requests depends on the number of service instances, regardless of their deployment. For reliability, the probability of successfully executing a request is maximized when both devices are used or decreases otherwise.  
   
  Fig. 1. Simple client-server style and associated tradeoﬀs.  
   
  To quantify the levels of performance, reliability and cost, let’s assume that predeﬁned analysis models are provided [15]. These models rely on both the structure and additional properties of a conﬁguration (e.g., device cost, service failure probability, etc.) to compute a variety of measures. For instance, a cost model that sums up the individual costs of all the active services and devices might estimate a total cost of $70 for a conﬁguration. Analogously, models for the processing time and failure probability of a conﬁguration are devised. In an architectural conﬁguration, the decisions refer to the speciﬁc number of service instances and devices being active. As a result, this space has a total of 48 possible conﬁgurations with diﬀerent tradeoﬀs. For example, the chart of Fig. 1 (right) shows that conﬁgurations with fast response times for processing the requests might have either low or high reliability. However, not all combinations of performance and reliability are feasible in this space. In general, it is not always obvious for the architect to determine what tradeoﬀs a given conﬁguration is associated with and how the quality measures are correlated with each other.  
   
  3  
   
  Requirements for Tradeoﬀ Explainability  
   
  For explaining tradeoﬀ spaces, it is crucial to understand the information needs that stakeholders have. In particular, we focus on the questions that architects might pose when trying to reason about architectural conﬁgurations, design  
   
  6  
   
  J. A. Diaz-Pace et al.  
   
  decisions, and quality-attribute tradeoﬀs. First, to select an appropriate conﬁguration, it is important to get an overview of the kinds of tradeoﬀs that exist in a design space. Afterwards, the corresponding conﬁgurations can be assessed individually, along with alternatives having similar or diﬀerent tradeoﬀs. In this work, we consider the following questions: – Q1: What are the categories of feasible tradeoﬀs in a given design space? – Q2: What architectural conﬁgurations are representative of each category of tradeoﬀs? What are the key decisions behind those conﬁgurations? – Q3: For a given conﬁguration, which alternatives lead to similar tradeoﬀs? – Q4: For a given conﬁguration, which alternatives lead to diﬀerent tradeoﬀs? We argue that, by answering these questions, tradeoﬀs can be understood and the design space can be quickly explored to arrive at one or more conﬁgurations that make appropriate tradeoﬀs. The requirements of a tradeoﬀ explainability approach are thus to: answer Q1–Q4, provide a suﬃcient level of usability, and be understandable to stakeholders with basic architecture knowledge.  
   
  4  
   
  Approach  
   
  We propose a framework that involves three stages, as outlined in Fig. 2. The output of the ﬁrst two stages is a repository that enables the creation of a dashboard with visualizations (called explanation charts) for the architect.  
   
  Fig. 2. Stages of the proposed framework.  
   
  First, there is an exploration stage, in which a (large) number of architectures is generated (or sampled) by an automated optimization tool. This stage must be executed beforehand. Each architectural instance comprises both the architectural conﬁguration and its quality-attribute values. This information is represented by a search graph, which connects an initial architectural conﬁguration to the various conﬁgurations that can be derived from it by applying predeﬁned decisions. Next, during the pre-processing and clustering stage, the information  
   
  Supporting the Exploration of Quality Attribute Tradeoﬀs  
   
  7  
   
  from the architectural instances is split into two parts. The quality-attribute values are grouped to derive clusters. To do this, a combination of discretization (of numerical values) and clustering techniques is used. The sequences of decisions (paths in the graph) leading to each conﬁguration are identiﬁed, and the important decisions for the tradeoﬀs are then determined. Furthermore, decisions serve to compute a distance metric between sequences. All the artifacts are stored in a repository. Finally, the visualization stage provides a set of explanation charts for the architect to get insights on the tradeoﬀ space. 4.1  
   
  Design Representation Using a Search Graph  
   
  We consider a multi-objective architecture optimization [4], and assume an architectural space for a family of systems that encompasses all possible architectural conﬁgurations in terms of a (ﬁnite) set of design decisions. More formally, let DS = {A0 , A1 , A2 , ..., An } be a design space with n architectural conﬁgurations in which each Ai corresponds to a (valid) conﬁguration that results from a sequence of predeﬁned decisions Ai =< d1i , d2i , ..., dmi >. Each dij = 1 if the decision was made (for conﬁguration Ai ) or 0 otherwise. In this work, we restrict the possible decisions to architectural tactics [5]. An architectural tactic is a design transformation that aﬀects parts of an architectural conﬁguration to improve a particular quality attribute. In our example, a tactic is to deploy a service instance on a given device in order to increase the system performance. Note that the same tactic might have an eﬀect on other quality attributes (e.g., cost). From this perspective, the conﬁgurations in DS are linked to one another through the application of tactics. DS can be visualized as a directed graph in which each node represents a conﬁguration, while an edge between two nodes Ai and Aj captures a tactic leading from the former to the latter. A distinctive node A0 refers to the initial conﬁguration. In general, an automated tool will be responsible for exploring the design space and generating a (large) graph of conﬁgurations. The techniques for populating DS might include speciﬁc architectural tools [1], evolutionary algorithms [3,6], or model checkers such as Prism [7,14], among others. Since enumerating all the conﬁgurations available in the design space is usually computationally unfeasible, only a subset of those conﬁgurations will be generated. Our framework does not depend on the tool or the speciﬁc search technique, as long as it can expose the decisions being applied for each conﬁguration. We require a conﬁguration Ai to be assessed with respect to multiple quality attributes (objectives) by means of quantitative measures [15]. Let QAS =< O1 , O2 , ..., Ok > be a quality-attribute space with k objectives in which each Ok represents a quality metric (e.g., latency, failure probability, or cost) associated with some architectural conﬁguration. That is, an evaluation function f : DS → QAS maps a conﬁguration to a multi-valued vector in k .  
   
  8  
   
  J. A. Diaz-Pace et al.  
   
  4.2  
   
  Clustering of the Quality-Attribute Space  
   
  To understand the possible tradeoﬀs, architects need a succinct representation of the quality-attribute space. A suitable technique for this purpose is clustering [22], which is a Machine Learning technique for grouping a set of instances in such a way that instances in the same group (or cluster) are more similar to each other than to those in other groups. To do so, a similarity criterion needs to be established. In our case, an instance refers to the quality-attribute vector for a conﬁguration Ai . For the similarity criterion, we rely on the Euclidean distance between vectors (although other metrics could be used). We are interested in cohesive clusters that capture the main tradeoﬀs available in the space. To this end, classical algorithms such as k-means or agglomerative clustering [22] can be applied. In both algorithms, the number of desired clusters is speciﬁed beforehand, and the quality of the resulting clusters is assessed with metrics such as the silhouette coeﬃcient [22]. This coeﬃcient assesses the (average) cohesion and separation of a set of clusters, by measuring how similar instances are for their own cluster compared to the other clusters. Once clusters are identiﬁed, we assign a label to each cluster that reﬂects the quality attributes being traded oﬀ in a way that humans can more easily understand. Speciﬁcally, we select the cluster centroid, which is computed as the mean of the vectors belonging to the cluster. Examples of three clusters were shown in Fig. 1 (right) with their centroids marked. Since a centroid is a numeric vector, we transform it into a label by means of a discretization procedure which partitions the range of values of each quality attribute into an ordinal (or Likert-like) scale. In Fig. 1, the partitioning is indicated by the dotted lines that map to levels of satisfaction (e.g., fast, average, or slow for performance). The cluster label results from the concatenation of the quality-attribute levels of the cluster centroid. In our example using a 3-point scale, the orange cluster gets labeled as fast/minimally-reliable, the blue cluster gets fast/highly-reliable, and the green cluster gets slow/minimally-reliable. Note that after the clustering and discretization, the quality-attribute space is reduced to three groups of tradeoﬀs. The number of architectural conﬁgurations belonging to each cluster might vary, depending on the design space being considered. 4.3  
   
  Distance Between Architectural Configurations  
   
  An architectural conﬁguration in the search graph is the result of applying speciﬁc tactics to the initial architecture. The optimization tool progressively applies diﬀerent tactics to derive alternative conﬁgurations. Thus, a conﬁguration Ai can be represented by a sequence of tactics Si =< t1i , t2i , ..., tmi >, which comes from the shortest path between the initial node and a particular node (with a valid conﬁguration) in the search graph. Coming back to our client-server example, we can consider a tactic increaseCapacity(?device) that deploys (and activates) a new service on a given device1 . Instantiations of this tactic for speciﬁc devices 1  
   
  A tactic decreaseCapacity(?device) that reverses the eﬀects of adding a service to a device can be also considered in the graph.  
   
  Supporting the Exploration of Quality Attribute Tradeoﬀs  
   
  9  
   
  (device1, device2) will then label the edges of the graph. Note that we consider the sequences as shorter paths in the graph because all the tactics in the example involve “atomic” conﬁguration changes. If more complex tactics were available, other criteria for determining the paths to each alternative should be considered. By representing conﬁgurations as sequences of decisions, we can assess the distance between two conﬁgurations in terms of their delta of changes [3]. Given a pair of conﬁgurations Ai and Ai , which are derived from sequences Si and Sj respectively, we model their distance as a function of the diﬀerences in the tactics made for Si and Sj . Our approach currently uses a version of the hamming distance2 [10], although other metrics could be employed. A distance matrix for all tactic sequences is computed in the pre-processing stage (Fig. 2). When the architect wants to explore alternatives for a conﬁguration Ax , all conﬁgurations are sorted based on their distance to Ax , and the top-k results with the shortest distance are returned. Upon the architect’s request, ﬁlters can be applied to select: only conﬁgurations within a particular cluster, conﬁgurations belonging to all clusters, or conﬁgurations that exclude a predeﬁned cluster. For instance, Fig. 3 shows the distances between three conﬁgurations resulting from two clusters from our example. Conﬁgurations A and C are assumed to share the same cluster, while conﬁguration B belongs to a diﬀerent cluster. The labels associated with each conﬁguration refer to its quality-attribute characteristics (which might slightly diﬀer from those of the cluster centroid). For example, as shown in Fig. 3, one could sacriﬁce response time (e.g., due to cost concerns) by moving from A towards C, which both decreases the number of active services and uses a cheaper device for them. Alternatively, one could make changes to  
   
  Fig. 3. Alternative conﬁgurations and tradeoﬀs based on decision changes. 2  
   
  In case of sequences of diﬀerent lengths, we pad the shorter sequence with a special noOp() tactic that makes no changes to the architectural conﬁgurations.  
   
  10  
   
  J. A. Diaz-Pace et al.  
   
  A so as to reach B, which oﬀers both higher reliability and smaller response time, because services are deployed in two devices. Alternative C causes a slight variation in the tradeoﬀ of A for performance and reliability, while alternative B leads to a better tradeoﬀ for both qualities. In general, intermediate conﬁgurations might need to be traversed (in the graph) to move between two particular alternatives. Note also that the distances refer to changes in the design space, rather than to cluster diﬀerences in the quality-attribute space. 4.4  
   
  Explanation Charts  
   
  In the visualization stage, the architect goes through a series of charts that shed light on diﬀerent aspects of the design space. This exploratory process is structured as a suggested workﬂow of activities. Each activity involves a speciﬁc chart targeted to answer questions Q1-Q4. The four available charts are illustrated in Fig. 4. The suggested order for an architect to use them is clockwise, as indicated by the numbers in the ﬁgure. The charts were designed and adjusted iteratively by the authors, according to the notion of pretotypes [19], which allows one to test ideas at a low cost before building a (prototype) tool. We brieﬂy describe below the main characteristics of each chart type: 1. Quality-attribute prototypes. This radar chart displays the values of the cluster centroids with respect to the quality attribute goals. As the initial view, it presents the main tradeoﬀs of the quality-attribute space to the  
   
  Fig. 4. Types of explanation charts.  
   
  Supporting the Exploration of Quality Attribute Tradeoﬀs  
   
  11  
   
  architect, using the centroids as representative instances (or prototypes) of the feasible tradeoﬀs. This chart is intended to address Q1. The chart legend additionally shows the labels and the percentage of architectural conﬁgurations (from the whole space) per cluster. 2. Architectural configuration view. To focus on a given prototype or cluster (from chart #1), the architect can inspect one or more architectural conﬁgurations related to that cluster. This is motivated by the need to drill down into the structure of conﬁguration and its underlying decisions. The chart targets Q2 and enables an understanding of the design space. Here, we use PlantUML for our client-server example, although the notation is dependent on the architectural models being captured by the space. 3. Quality-attribute space. This chart gives a detailed view of all the architectural conﬁgurations, their contributions to the diﬀerent quality-attribute measures, and how conﬁgurations are grouped into clusters. It complements chart #1 by showing all possible tradeoﬀs, in order to address Q1 and Q2. This chart is interactive, allowing architects to select speciﬁc points and display basic information about the conﬁgurations or cluster labels. 4. Alternative architectural configurations. After the insights exposed by the previous charts, the architect might want to understand how to move from a given conﬁguration to another with diﬀerent quality-attribute characteristics. This chart creates an interactive graph that takes a target conﬁguration and connects it to a set of nearby conﬁgurations that result from making “small” changes to the decisions for the target conﬁguration. The alternative conﬁgurations might belong either to the same cluster as the target or to different clusters. This graph chart seeks to address Q3 and Q4. The target can be any conﬁguration from charts #1 or #3. The construction of the graph is based on the architectural distance described in Sect. 4.3.  
   
  5  
   
  Study Design  
   
  To evaluate the eﬀectiveness of our explanation framework, we applied it to an extended version of the client-server problem presented in Sect. 2 in two ways: (i) exploring and assessing conﬁguration variants and tradeoﬀs using a pre-generated space, and (ii) conducting a think-aloud study to evaluate our ﬁndings and the role of the explanation charts3 . 5.1  
   
  Client-Server Design Space  
   
  We set a client-server style with up to three available servers (devices), each with a capacity to deploy a maximum of six services. To model tradeoﬀs between performance (latency), reliability (probability of failure), and cost (total deployment expenditure), we assigned diﬀerent characteristics to each device, in terms of high-end hardware (i.e., very good processing capabilities, low failure rate, 3  
   
  Notebook: https://shorturl.at/jyCX3 - Tasks: https://shorturl.at/lHU08.  
   
  12  
   
  J. A. Diaz-Pace et al.  
   
  and high cost), mid-range hardware, and low-end hardware (i.e., minimum processing capabilities, higher failure rate, and low cost). The decisions in this space include: (i) adding one (active) service to any device, or (ii) removing an alreadydeployed service from a device. The choice of the device depends on its hardware characteristics. We departed from an initial conﬁguration with no services allocated to devices, and ran an optimization procedure based on the Prism model checker [14]. This way, we generated a large number of architectural conﬁgurations for our system to evaluate the feasibility of the proposed framework. In principle, other search strategies (e.g.,, evolutionary algorithms) could have been used, as the approach is mostly independent of how the optimization part is implemented. 5.2  
   
  User Study  
   
  The think-aloud method is a technique to investigate problem-solving processes and participants’ cognitive models [12], in which participants vocalize their thought process while working on a task. We chose a think-aloud study because it can provide insights into how the clustering and visualization techniques proposed in our framework can facilitate the participants’ architectural reasoning. The study consisted of a series of design sessions with 9 participants from both academia and industry. The selected participants had various roles in their organizations (e.g., university faculty, researcher, PhD student, industry practitioner, and senior engineer) and varying degrees of architectural knowledge and experience (from 2 to more than 20 years in the architecture ﬁeld). All sessions were recorded and had a duration of 45 min approximately. A session involved four phases: introduction, learning, testing, and postmortem. The session started with an introduction to the architectural problem, and was facilitated by one of the authors. As mentioned above, this problem was based on the design space already investigated (Sect. 5.1). After the introduction, there was a learning phase in which the participant assumed the role of an architect and was asked to explore the space of quality-attribute tradeoﬀs and candidate conﬁgurations by means of the explanation charts. For this phase, we provided a Jupyter notebook in Google Colab that included predeﬁned Python functions for a user to load the space as a dataset and generate the charts. Furthermore, some Python functions admit parameters to adjust the chart behavior (e.g., the name of the architectural conﬁguration to be inspected, or the number of alternatives to show in the graph). We decided not to include the quality-attribute space chart (pairwise scatter plots) in this study, since it provides detailed information about the clusters but can be complex to grasp for unfamiliar users. To avoid long sessions, we considered it could be substituted by the radar and graph charts in the interviews, without losing much information. The eﬀectiveness of the charts was assessed during the testing phase, in which a set of glitch detection tasks and prediction tasks was presented to the participant [11]. In the glitch detection tasks, the subjects identify things that are wrong in a system or explanation; while in the prediction tasks, the subjects  
   
  Supporting the Exploration of Quality Attribute Tradeoﬀs  
   
  13  
   
  have to predict the results of certain design decisions and explain their predictions. Both kinds of tasks referred to design situations based on the presented charts. These tasks enabled us to analyze the participant’s reasoning process and whether it was aided by the mechanisms of the explanation charts. At the end, we conducted a short questionnaire to measure the satisfaction levels of the participants when using the charts. To do this, we used a list of Likert-scale questions. Apart from satisfaction, we also focused on the participants’ expectations as well as on areas of improvement for the framework.  
   
  6  
   
  Findings  
   
  For our client-server example, Prism returned a graph with a design space of 342 conﬁgurations. Each conﬁguration was evaluated with (simpliﬁed) analytical models to estimate values of cost, latency, and probability of failure. A visual inspection of the resulting tradeoﬀ space showed that it had enough diversity and coverage. Figure 5 depicts both the design and quality-attribute spaces. Each path in the graph is a sequence of design decisions. The sequence length to move between conﬁgurations ranges from 1 to 18 decisions.  
   
  Fig. 5. Design space (graph) and quality-attribute space (pairwise scatter plots) for the client-server space. Colors refer to the clusters exposing four tradeoﬀs.  
   
  In the clustering process, we sought a balance between having a small number of clusters and achieving a high silhouette coeﬃcient. We applied hierarchical clustering with four clusters, which yielded a silhouette coeﬃcient of 0.52. The obtained clusters have unique combined labels, which are derived from a discretization of the ranges for each quality attribute into ﬁve bins. In principle, this discretization enables 125 possible tradeoﬀs, but only 19 of them were reachable in the space. Thus, our clustering reduced the tradeoﬀ space in ≈ 80%. For the user study, we categorized the ﬁndings according to the chart types, focusing on the understandability of the charts (and the design space thereof) as well as on participants’ satisfaction. An overview of the questions and answers from the post-mortem questionnaire is given in Fig. 6. The participants indicated that they were generally satisﬁed with the information conveyed by the charts. During the learning phase, all participants were able to understand the purpose  
   
  14  
   
  J. A. Diaz-Pace et al.  
   
  of the three charts, and to use them for architectural reasoning in the testing phase. Most glitches were detected by the participants. The most diﬃcult glitches and prediction tasks were those related to the graph chart, particularly for less experienced participants.  
   
  Fig. 6. Likert-scale answers of participants of the user study.  
   
  The radar chart was judged as the easiest to use by most participants. During the testing phase, it was perceived as straightforward to apply. This might be due to the fact that architects are often exposed to similar charts. In fact, other visualization tools [9] have proposed radar charts for tradeoﬀs. A PhD student stated: “The radar chart with the clusters shows you quite easily what types of solutions are the most likely ones to satisfy your needs”. As for the labels, they were intuitive for the participants, although some asked questions about the value ranges for the labels, and moreover, about the quality-attribute thresholds that should be considered in order to weight each cluster prototype. On the downside, some participants argued that despite the chart provides an overview of the tradeoﬀs, it did not seem actionable with respect to decision-making. The architectural conﬁguration chart was used by participants to drill down into the architectural structure of a particular prototype. Participants usually did not explore more than one conﬁguration with the chart. During the testing phase, the annotations on the devices were a key element for detecting glitches. This might suggest that enriching architectural views with quality-attribute annotations can help design reasoning. However, this aspect likely depends on the size and architectural notation used for the views. Along this line, one researcher noted: “If I had a system with dozens of components, where there is only a slight diﬀerence between conﬁguration A and conﬁguration B when I’m looking at the alternatives, it’ll take me much longer to understand what the diﬀerences are between these alternatives, and I’d have to trust more the tool to do the job right ... I might need something that shows me the diﬀerences between the architectures”. When it comes to the graph chart, we observed mixed impressions. A number of participants found the chart diﬃcult to interpret and use later in the glitch  
   
  Supporting the Exploration of Quality Attribute Tradeoﬀs  
   
  15  
   
  detection and prediction tasks. This situation was evident for those participants with less architecture experience. For instance, the implications of the decisions made when transitioning from one conﬁguration to another were not easy to be reasoned about. Despite this complexity, other participants argued that it was useful to explore alternatives by means of small conﬁguration changes. One practitioner said: “The graph was probably the most challenging to use but also potentially getting to be the most powerful”. Another participant stated: “[The graph chart] shows me a what-if analysis ... it lets me do an analysis of diﬀerent tactics and look at what is their impact in terms of the tradeoﬀs I would get”. We collected suggestions to enhance this chart, such as: clarifying the tactic names in the edges, linking the nodes to architectural views (conﬁgurations), and (again) adding quality-attribute thresholds. During the learning phase, three participants raised questions about the eﬀort or complexity (e.g., development cost, or deployment cost) of applying the decisions shown in the graph. Overall, we can conclude that the charts were eﬀective in helping to expose the tradeoﬀs of the space, and to a lesser extent, in helping the participants reason about decisions aﬀecting those tradeoﬀs. Having a better focus on the decisions that architects could make is one of the areas of improvement that we identiﬁed from the user study. In retrospect, our ﬁndings indicate that the information shown in the notebook provides insights about the tradeoﬀs and conﬁgurations, but it might lack contextual information about the problem that the architect is trying to solve. In this regard, one practitioner said during a session: “I’m trying to arrive at a decision, not just see that there are tradeoﬀs”. Furthermore, two practitioners mentioned that the charts should be integrated with tools that architects and developers use in their daily work (e.g., infrastructure as code, dashboards, or IDEs) for assessing options and making decisions. 6.1  
   
  Threats to Validity  
   
  Internal Validity. The results of the clustering process depend on both the characteristics of the quality-attribute space and the (hyper-)parameters used for the algorithm (e.g., choosing the number of clusters). The cluster boundaries might not be always clean. Furthermore, using the cluster centroid (and its associated label) to characterize the tradeoﬀs of all the cluster members is an approximation. Not all the instances belonging to a cluster might have the same tradeoﬀ posed by the centroid, and thus slight tradeoﬀ variations might appear in the space. In the client-server example, applying other clustering algorithms (e.g., k-medoids) could produce diﬀerent results. All these factors can aﬀect the participants’ interpretation of the radar chart and parts of the graph chart. The graph chart relies on both the tactic sequences for each conﬁguration and a distance criterion for sequences. The sequences can be seen as proxies for representing the conﬁgurations, but they omit some architectural characteristics. Thus, the sequences were a good representation for our client-server example, but they might fall short for dealing with other architectural styles. Regarding the architectural distance, we implemented a hamming distance under the  
   
  16  
   
  J. A. Diaz-Pace et al.  
   
  assumption that all the tactics have the same weight (or involve a similar amount of changes). This might not hold if a diﬀerent set of tactics is considered. Construct Validity. When talking about concepts like “tradeoﬀs” or “software architecture”, our participants might have diﬀerent interpretations as to what they mean. Especially due to their abstract nature, these constructs can be diﬃcult to understand. To mitigate the threat, we discussed the example scenario and concepts at the beginning of the interviews. We asked our participants to describe the scenario in their own words to understand their ways of thinking about tradeoﬀ-related issues. In case they were unsure, we gave explanations of the key constructs and ensured that our views were aligned. Conclusion Validity. While we did not aim to arrive at statistically signiﬁcant results, conclusion validity is still relevant for our study. The reliability might have been compromised by having a sample of nine participants with limited time to work with the notebook during the sessions. Collecting data from a larger number of participants would have led to more information and richer feedback about the framework. To mitigate this, we aim to be transparent about our research method and study materials. We thoroughly discussed and reﬁned the materials to avoid issues such as potentially incoherent structure, overly complex visualizations, or poor wording in tasks and questions. External Validity. The automated generation of a large graph of alternatives, which also includes the information required by our framework (e.g., decisions applied at each step, quality-attribute values for each alternative), can be challenging and might not feasible (or accurate) for any system or optimization algorithm. This aspect might prevent the exploitation of the techniques presented in the paper. Furthermore, our study does not have a broad generalizability, as it was exercised on a small architectural problem. The goal was to present a think-aloud study focusing on the practical usage of the explainability charts by humans. We selected the participants trying to achieve a coverage of diﬀerent proﬁles. Involving diﬀerent participants helped us get a variety of perspectives on the topic and strengthen external validity. Another threat is the presence of the authors, who assumed a central role in developing the notebook and facilitating the sessions. These factors might lead to the participants responding more positively. As mitigation, we stressed that they should openly share their thoughts and that improvement suggestions were welcome. Our results indicate that the participants followed these instructions and shared criticisms.  
   
  7  
   
  Related Work  
   
  Several tools for automated architecture optimization that generate a set of alternatives have been proposed [1,3]. These tools work mostly as black boxes, and their internal search space is not comprehensible by humans. As a result, architects might not trust the proposed architecture candidates. Recent approaches, like SQuAT-Viz [9] and Voyager [16], have investigated visualization techniques for helping architects to understand tradeoﬀs, and have also evaluated their usability. Among other techniques, SQuAT-Viz [9] uses radar charts and scatter  
   
  Supporting the Exploration of Quality Attribute Tradeoﬀs  
   
  17  
   
  plots for the quality-attribute space, although they show all possible combinations of tradeoﬀs. Voyager [16], in turn, combines tradeoﬀ analysis with architectural structure visualizations alongside, highlighting the need to connect these two spaces, which is a shared concern with our framework. Voyager does not consider strategies for reducing the size of the quality-attribute space (e.g., via clustering) or navigating related conﬁgurations (e.g., like our graph chart). Other authors have attempted to explain tradeoﬀ spaces using dimensionality reduction and clustering techniques. For instance, Camara et al. [8] propose PCA (Principal Component Analysis) loading plots to relate quality-attribute and architectural variables. In the robot planning domain [20], contrastive explanations of tradeoﬀs have been developed. This kind of explanations compares a selected policy to Pareto-optimal alternative plans and describes their qualityattribute impact on the user. Also in the planning domain, Wohlrab et al. [21] complement the PCA plots of Camara et al. [8] with clustering and decision trees. The usage of the clusters diﬀers from our framework, as they refer to policies sharing similar characteristics and provide a high-level tradeoﬀ explanation. The clustering process is applied on top of the loading plots, which often implies some information loss when transforming the space to a 2D representation. Furthermore, clusters are explained using bar charts showing feature means, which might not be an intuitive visualization for humans. These works center on information reduction techniques for the design space, but user studies about their eﬀectiveness have not been reported yet. The GATSE tool [17] allows architects to visually inspect AADL (Architecture Analysis and Description Language) models from a previously computed dataset. It oﬀers several visualizations to support quality-attribute analyses of AADL models (e.g., via a Pareto diagram), enabling the architect to focus on regions of the quality-attribute space to narrow down or deepen the search for alternatives. This interaction mechanism is called “design by shopping”. Kinneer and Herzig [13] investigate metrics of dissimilarity and clustering for a set of spacecraft architectures within a space mission domain. Since a large number of architecture candidates are automatically synthesized, but some candidates might be similar to each other, the architect has to waste time sifting through the space. Thus, a clustering process based on PAM (Partitioning Around Medoids) is proposed to group the architectures and select a representative instance from each group. The clustering is tied to the notion of distance between architectures. Based on user studies that identify correlations between clustering and human judgements, the authors highlight the role of human perception when diﬀerent stakeholders explore the space.  
   
  8  
   
  Conclusions  
   
  In this paper, we discussed some requirements for improving an architect’s understanding of design spaces regarding the interplay between tradeoﬀs and architectural decisions. To this end, we presented an approach that relies on clustering and visualization techniques. An initial version of our framework was evaluated  
   
  18  
   
  J. A. Diaz-Pace et al.  
   
  on an architectural problem with a think-aloud study. This study conﬁrmed our hypothesis that design spaces can be summarized to a handful of qualitytradeoﬀs and related architectural decisions, and also provided us with feedback to improve the explanation charts and underlying techniques. This suggests more focus on characterizing the architecture space, which has received less attention in the literature in comparison to the quality-attribute space. As future work, we plan to test our framework for larger design spaces, whether generated by existing optimization tools [3,17] or by humans [18]. As the spaces grow larger, mechanisms to extract the main paths of decisions and tradeoﬀs will become increasingly important. We think that the notion of “policy summaries” [2] can be adapted to work with the graphs of alternatives (within the architectural space) to extract a sub-graph of decisions that contribute the most to the quality attributes of interest for the architect or stakeholders. Acknowledgments. This work was partially supported by the Wallenberg AI, Autonomous Systems and Software Program funded by the Knut and Alice Wallenberg Foundation. It was also supported by project PICT-2021-00757.  
   
  References 1. Aleti, A., Buhnova, B., Grunske, L., Koziolek, A., Meedeniya, I.: Software architecture optimization methods: a systematic literature review. IEEE Trans. on Soft. Eng. 39(5), 658–683 (2013) 2. Amir, O., Doshi-Velez, F., Sarne, D.: Summarizing agent strategies. Auton. Agent. Multi-Agent Syst. 33(5), 628–644 (2019). https://doi.org/10.1007/s10458-01909418-w 3. Arcelli, D., Cortellessa, V., D’Emidio, M., Di Pompeo, D.: Easier: an evolutionary approach for multi-objective software architecture refactoring. In: 2018 IEEE Int. Conf. on Software Architecture (ICSA), pp. 105–10509 (2018). https://doi.org/10. 1109/ICSA.2018.00020 4. Bachmann, F., Bass, L., Klein, M., Shelton, C.: Designing software architectures to achieve quality attribute requirements. IEEE Proc. Softw. 152, 153–165 (2005) 5. Bass, L., Clements, P., Kazman, R.: Software Architecture in Practice. SEI Series in Software Engineering, Addison-Wesley (2003) 6. Busch, A., Fuchß, D., Koziolek, A.: PerOpteryx: automated improvement of software architectures. In: 2019 IEEE International Conference on Software Architecture Companion (ICSA-C), pp. 162–165 (2019). https://doi.org/10.1109/ICSA-C. 2019.00036 7. C´ amara, J., Garlan, D., Schmerl, B.: Synthesizing tradeoﬀ spaces of quantitative guarantees for families of software systems. J. Syst. Softw. 152, 33–49 (2019) 8. C´ amara, J., Silva, M., Garlan, D., Schmerl, B.: Explaining architectural design tradeoﬀ spaces: a machine learning approach. In: Biﬄ, S., Navarro, E., L¨ owe, W., Sirjani, M., Mirandola, R., Weyns, D. (eds.) ECSA 2021. LNCS, vol. 12857, pp. 49–65. Springer, Cham (2021). https://doi.org/10.1007/978-3-030-86044-8 4 9. Frank, S., van Hoorn, A.: SQuAT-Vis: visualization and interaction in software architecture optimization. In: Muccini, H. (ed.) ECSA 2020. CCIS, vol. 1269, pp. 107–119. Springer, Cham (2020). https://doi.org/10.1007/978-3-030-59155-7 9  
   
  Supporting the Exploration of Quality Attribute Tradeoﬀs  
   
  19  
   
  10. Hamming, R.W.: Error detecting and error correcting codes. Bell Syst. Tech. J. 29(2), 147–160 (1950). https://doi.org/10.1002/j.1538-7305.1950.tb00463.x 11. Hoﬀman, R.R., Mueller, S.T., Klein, G., Litman, J.: Metrics for explainable AI: Challenges and prospects. arXiv preprint arXiv:1812.04608 (2018) 12. Jaspers, M.W., Steen, T., van den Bos, C., Geenen, M.: The think aloud method: a guide to user interface design. Int. J. Med. Inf. 73(11), 781–795 (2004). https:// doi.org/10.1016/j.ijmedinf.2004.08.003 13. Kinneer, C., Herzig, S.J.I.: Dissimilarity measures for clustering space mission architectures. In: Proceedings of the 21th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, pp. 392–402. MODELS 2018, ACM, New York, USA (2018). https://doi.org/10.1145/3239372.3239390 14. Kwiatkowska, M., Norman, G., Parker, D.: PRISM 4.0: veriﬁcation of probabilistic real-time systems. In: Gopalakrishnan, G., Qadeer, S. (eds.) CAV 2011. LNCS, vol. 6806, pp. 585–591. Springer, Heidelberg (2011). https://doi.org/10.1007/9783-642-22110-1 47 15. Martens, A., Koziolek, H., Becker, S., Reussner, R.: Automatically improve software architecture models for performance, reliability, and cost using evolutionary algorithms. In: Proceedings of the 1st Joint WOSP/SIPEW International Conference on Performance Engineering, pp. 105–116. ACM, New York, USA (2010). https://doi.org/10.1145/1712605.1712624 16. Mashinchi, J., C´ amara, J.: Voyager : software architecture trade-oﬀ explorer. In: Muccini, H. (ed.) ECSA 2020. CCIS, vol. 1269, pp. 55–67. Springer, Cham (2020). https://doi.org/10.1007/978-3-030-59155-7 5 17. Procter, S., Wrage, L.: Guided architecture trade space exploration: fusing model based engineering amp; design by shopping. In: 2019 ACM/IEEE 22nd International Conference on Model Driven Engineering, Languages and Systems (MODELS), pp. 117–127 (2019) 18. Sanchez, C.C., Capilla, R., Staron, M.: Estimating the complexity of architectural design decision networks. IEEE Access 8, 168558–168575 (2020). https://doi.org/ 10.1109/ACCESS.2020.3023608 19. Savoia, A.: The Right It: Why So Many Ideas Fail and How to Make Sure Yours Succeed. Harper-Collins (2019) 20. Sukkerd, R., Simmons, R., Garlan, D.: Tradeoﬀ-focused contrastive explanation for MDP planning. In: Proceedings of 29th IEEE International Conference on Robot & Human Interactive Communication. Virtual (September 2020) 21. Wohlrab, R., C´ amara, J., Garlan, D., Schmerl, B.: Explaining quality attribute tradeoﬀs in automated planning for self-adaptive systems. J. Syst. Softw. 198, 111538 (2023). https://doi.org/10.1016/j.jss.2022.111538 22. Xu, D., Tian, Y.: A comprehensive survey of clustering algorithms. Ann. Data Sci. 2, 165–193 (2015)  
   
  Tool Support for the Adaptation of Quality of Service Trade-Oﬀs in Service- and Cloud-Based Dynamic Routing Architectures Amirali Amiri1,2(B) and Uwe Zdun1 1  
   
  2  
   
  University of Vienna, Software Architecture Group, Vienna, Austria [email protected]  University of Vienna, Doctoral School Computer Science, Vienna, Austria [email protected]   
   
  Abstract. Dynamic routing is an essential part of service- and cloudbased applications. Routing architectures are based on vastly diﬀerent implementation concepts, such as API Gateways, Enterprise Service Buses, Message Brokers, or Service Proxies. However, their basic operation is that these technologies dynamically route or block incoming requests. This paper proposes a new approach that abstracts all these routing patterns using one adaptive architecture. We hypothesize that a self-adaptation of the dynamic routing is beneﬁcial over any ﬁxed architecture selections concerning reliability and performance trade-oﬀs. Our approach dynamically self-adapts between more central or distributed routing to optimize system reliability and performance. This adaptation is calculated based on a multi-criteria optimization analysis. We evaluate our approach by analyzing our previously-measured data during an experiment of 1200 h of runtime. Our extensive systematic evaluation of 4356 cases conﬁrms that our hypothesis holds and our approach is beneﬁcial regarding reliability and performance. Even on average, where right and wrong architecture choices are analyzed together, our novel architecture oﬀers 9.82% reliability and 47.86% performance gains. Keywords: Self-Adaptive Systems · Dynamic Routing Architectures Service- and Cloud-Based Applications · Reliability and Performance Trade-Oﬀs · Prototypical Tool Support  
   
  1  
   
  ·  
   
  Introduction  
   
  Dynamic routing is common in service- and cloud-based applications, for which diﬀerent techniques are available. These techniques range from simple strategies, e.g., request routing based on load balancing, to more complex routing, such as This work was supported by FWF (Austrian Science Fund), projects IAC2 : I 4731-N, API-ACE: I 4268. c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 20–36, 2023. https://doi.org/10.1007/978-3-031-42592-9_2  
   
  Trade-Oﬀs Adaptation of Dynamic Routing Architectures  
   
  21  
   
  checking for compliance with regulations. Assume a company has to comply with a regulation that the data of European customers have to be stored and processed on European servers based on the General Data Protection Regulation1 . In such a case, Dynamic Routers [17] can update the data-ﬂow paths at runtime to ensure compliant data handling. Multiple dynamic-routing architectural patterns are provided for service- and cloud-based environments. These patterns include centralized routing, e.g., using an API Gateway [27] or an Enterprise Service Bus [10], and distributed routing using multiple Dynamic Routers [17] or Sidecars [20,27] to make local routing decisions. The dynamic-routing architectures are based on vastly diﬀerent implementations. However, they all route or block requests essentially. There is a possibility to change these patterns, e.g., from centralized to distributed routing, by adjusting the number of routers in a service- and cloud-based system. To do so, we should monitor the quality-of-service measures and make architectural decisions. So far, the trade-oﬀs of reliability and performance measures in cloud-based dynamic routing have not been speciﬁcally and extensively studied. Reliability and performance in relation are essential for designing routing architectures. This factor must be considered because changing the routing schema to improve performance, e.g., by adding more routers for parallel processing of requests, may lead to a decrease in system reliability as more points of a crash are introduced to a system (empirically validated in [3]). Our study is motivated by example scenarios, such as assuming a sudden reliability decrease is observed in a software system by adding services to the system for the parallel processing of requests (increasing the performance). In such a situation, time is important to reconﬁgure the system to meet the quality criteria required for the application. An automatic adaptation can yield beneﬁts not only in time and eﬀort overheads for the management of the system but also in reliability and performance trade-oﬀs. Thus, we study the research questions: RQ1: Can we ﬁnd an optimal conﬁguration of routers that automatically adapts the reliability and performance trade-oﬀs in dynamic routing architectures based on monitored system data at runtime? RQ2: What is the architecture of a supporting tool that analyses the system at runtime and facilitates the reconﬁguration of a dynamic routing application using the optimal conﬁguration solution? RQ3: How do the reliability and performance predictions of the chosen optimal solution compare with the case where one architecture runs statically?  
   
  1  
   
  https://gdpr.eu.  
   
  22  
   
  A. Amiri and U. Zdun  
   
  The contributions of this paper are three-fold. Firstly, we propose an adaptive-routing architecture that automatically adjusts the quality-of-service trade-oﬀs. Secondly, we introduce an analytical model of performance that is generalizable to dynamic-routing applications and analyze the trade-oﬀs of reliability and performance. Finally, we provide a prototypical tool that generates deployment artifacts for reconﬁguring a dynamic-routing application. Additionally, our tool provides a visualization environment for users to study diﬀerent conﬁgurations without generating additional artifacts. The structure of the paper is as follows: Sect. 2 presents the overview of our approach. Section 3 explains the proposed architecture in detail, presenting our performance model and the trade-oﬀ analysis. Section 4 provides the tool that supports our architectural concepts. Section 5 presents the evaluation of the presented approach, and Sect. 6 discusses the threats to the validity of our research. We study the related work in Sect. 7 and conclude in Sect. 8.  
   
  2  
   
  Approach Overview  
   
  The proposed architecture in this paper is based on Monitor, Analyze, Plan, Execute, Knowledge (MAPE-K) loops [4,5,19]. Our adaptive architecture automatically changes between diﬀerent dynamic-routing patterns by reconﬁguring service- and cloud-based applications according to an optimization analysis [2]. We deﬁne a router as an abstraction for any controller component that makes routing decisions, e.g., an API Gateway [27], an Enterprise Service Bus [10], or Sidecars [20,27]. Our approach changes the number of routers, i.e., changes between diﬀerent conﬁgurations moving from a centralized approach with one router to a distributed system with more routers (or vice versa) to adapt based on the need of an application. Metamodel. Figure 1 presents the metamodel of our architecture. A Model describes multiple elements. Host is any execution environment, either physical or virtual. Each Component is deployed on (up to) one Host at each point in time. Request models the request ﬂow, linking a source and a destination component. There are several diﬀerent component types. Clients send Client Requests to API Gateways. The gateways send Internal Requests to Routers and Services. Conﬁgurator Components perform the reconﬁguration, and Reconﬁgurable Components are the adaptation targets of our architecture. Monitor observes reconﬁgurable components and the requests that pass the gateways. Manager manages the control ﬂow of the reconﬁguration by calling Infrastructure as Code (IaC) to update the infrastructure, or Scheduler to reschedule the containers. Visualizer provides visualizations of the architectural conﬁgurations.  
   
  Trade-Oﬀs Adaptation of Dynamic Routing Architectures  
   
  23  
   
  Model 1  
   
  1 * Host 0..1  
   
  * * Component  
   
  destination  
   
  1  
   
  Client  
   
  API Gateway  
   
  Monitor  
   
  Configurator Component  
   
  Manager  
   
  IaC  
   
  Scheduler  
   
  * Request  
   
  source  
   
  1  
   
  *  
   
  Reconfigurable Component  
   
  Visualizer  
   
  Router  
   
  Internal Request  
   
  Client Request  
   
  Service  
   
  Fig. 1. Metamodel of the Adaptive Architecture Dynamic Configurator  
   
  System Services Visualize  
   
  «Visualizer» visualizer  
   
  «Scheduler»  
   
  Reconfig.  
   
  scheduler  
   
  Reconfig.  
   
  «Service»  
   
  «Service»  
   
  «Service»  
   
  service1  
   
  service2  
   
  service3  
   
  Infra. Config. Data «IaC»  
   
  Visualize  
   
  Routers  
   
  IaC component  
   
  Reconfig.  
   
  «Router»  
   
  «Router»  
   
  router1  
   
  router2  
   
  «Manager» manager Consume Monitoring Data  
   
  «API Gateway»  
   
  «Monitor» QoS monitor  
   
  gateway Read Monitoring Data «Client»  
   
  «Client»  
   
  client1  
   
  client2  
   
  Fig. 2. Component Diagram of an Example Conﬁguration (dashed lines represent the data ﬂow and solid lines the reconﬁguration control ﬂow.)  
   
  Example of a Routing Configuration. Figure 2 presents a component diagram of a sample conﬁguration, in which dashed lines represent the data ﬂow and solid lines the reconﬁguration control ﬂow of an application. As shown, clients access the system via a gateway that publishes monitoring data to the Qualityof-Service (QoS) monitor component. The conﬁguration manager observes the monitoring data and triggers a reconﬁguration. Moreover, the manager can communicate with the visualizer component to visualize the current architecture conﬁguration. The manager calls the IaC component if infrastructure changes are needed. IaC reconﬁgures the infrastructure and triggers the scheduler to  
   
  24  
   
  A. Amiri and U. Zdun  
   
  reschedule the containers. Alternatively, if there is no need for infrastructure reconﬁguration, the manager directly triggers the scheduler. After a reconﬁguration, the scheduler can call the visualizer.  
   
  3  
   
  Approach Details  
   
  This section introduces the details of our proposed architecture. 3.1  
   
  Reconfiguration Activities of the Dynamic Configurator  
   
  Figure 3 shows the reconﬁguration activities of the dynamic conﬁgurator. The QoS monitor reads monitoring data and checks for reconﬁguration, e.g., when degradation of reliability and performance metrics are observed. Moreover, the reconﬁguration can be triggered periodically or manually by an architect. When a  
   
  D ynamic Configurator  
   
  Read Monitoring Data  
   
  Reconfig. Needed? [No]  
   
  Time-Interval / Manual Trigger [Yes]  
   
  Consume Monitoring Data  
   
  Perform a Multi-Criteria Optimization Analysis (Reliability vs. Performance)  
   
  Choose the Final Reconfig. Solution Based on a Preference Function  
   
  Infra. Reconfig. Needed? [No] [Yes]  
   
  Reconfigure the Infrastructure  
   
  Schedule Containers  
   
  Fig. 3. Reconﬁguration Activities of the Dynamic Conﬁgurator  
   
  Trade-Oﬀs Adaptation of Dynamic Routing Architectures  
   
  25  
   
  reconﬁguration is triggered, the reconﬁguration manager consumes the monitoring data, performs a multi-criteria optimization analysis [2], and chooses a ﬁnal reconﬁguration solution. Either the IaC component is triggered to reconﬁgure the infrastructure or the scheduler reschedules the containers. Our architecture is based on MAPE-K loops [4,5,19]. The QoS monitor implements the monitor and analyze stages, the manager develops the plan step, and the IaC component and the scheduler realize the execute step. We use our models as knowledge. 3.2  
   
  Analytical Models  
   
  Reliability Model Based on Bernoulli processes [31], request loss during router and service crashes can be modeled as follows [3]:  T  · cf · c∈Com CPc · dc  CI (1) R= T In this formula, request loss is deﬁned as the number of client requests not processed due to a failure, such as a component crash. Equation 1 gives the request loss per second as a metric of reliability by calculating the expected value of the number of crashes. Having this information, we sum all the requests received by a system during the downtime of a component and divide them by the observed system time T . We model the crash interval as CI that is the interval during which we check for a crash of a component. To clarify, CI is the time between two consecutive health checks when the heartbeat pattern [18] or the health check API pattern [26] are used. cf is the incoming call frequency based on requests per second (r/s). Com is the set of components, i.e., routers and services. CPc is the crash probability of each component, and dc is the average downtime of a component after it crashes. Performance Model. We model the average processing time of requests per router as a performance metric. This metric is important as it allows us to study the quality of service factors, such as the eﬃciency of architecture conﬁgurations. The total number of client requests, i.e., Req, is the call frequency cf multiplied by the observed time T : Req = cf · T (2) The number of processed requests is the total number of client requests minus the request loss. Let P be performance. The average processing time of requests per router is given as follows: P =  
   
  T nrout (Req − R)  
   
  (3)  
   
  Using Eqs. 1 to 3, the average processing time is the following: P =  
   
    
   
  nrout · cf T −  
   
  T T  CI   
   
  ·  
   
   c∈Com  
   
  CPc · dc  
   
    
   
  (4)  
   
  26  
   
  A. Amiri and U. Zdun  
   
  Model Validations. To empirically validate our models, we ran an experiment of 200 runs with a total of 1200 h of runtime (excluding setup time) [3]. We had a private cloud setting with three physical nodes and installed virtual machines with eight cores and 60 GB of system memory. Each router or service was containerized in a Docker2 container. Moreover, to ensure generalizability, we duplicated our experiment on Google Cloud Platform3 and empirically validated our results (see below for experiment cases). We compared our analytical reliability and performance model with our empirical results using the mean absolute percentage error [31]. With more experiment runs, we observed an ever-decreasing error, converging at 7.1%. Our analytical performance model yielded a low error rate of 0.5%, indicating the very high accuracy of our model. We also evaluated our models using the mean absolute error, the mean square error, and the root mean square error, which conﬁrmed our results. Parameterization of Model to Experiment Values. In our experiment, we deﬁned nserv and nrout as the number of services and routers to study their eﬀects. We had three levels for the number of services, i.e., nserv ∈ { 3, 5, 10 }. Based on our experience and a survey of existing cloud applications in the literature and industry, the number of cloud services directly dependent on each other in a call sequence is usually rather low. Moreover, we had four levels for incoming call frequencies, i.e., cf (r/s) ∈ { 10, 25, 50, 100 }. The call frequency of cf = 100 r/s, or even lower numbers, is chosen in many studies (see, e.g., [13,30]). Therefore, we chose diﬀerent portions between 10 to 100 r/s. We studied three architecture conﬁgurations, i.e., centralized routing (nrout = 1), completely distributed routing with one router per each service (nrout = nserv ), and a middle ground with three routers (nrout = 3). Therefore, we have nrout ∈ { 1, 3, nserv }. Overall, we evaluated our model in 36 experiment cases. We also deﬁned some constants as follows: We observed the system for T = 600 s in each experiment case, had a crash interval of CI = 15 s, and studied uniform crash probabilities and downtimes for all components as CPc = 0.5% and dc = 3 s, respectively. These values are system-speciﬁc and can be updated based on diﬀerent infrastructures. Considering these experiment cases, we can parameterize our general reliability model in r/s (presented by Eq. 1) and performance model in ms (given by Eq. 4) as follows: R = cf · 0.001(nserv + nrout ) 1000 P = nrout · cf (1 − 0.001(nserv + nrout ))  
   
  2 3  
   
  https://www.docker.com. https://cloud.google.com/.  
   
  (5) (6)  
   
  Trade-Oﬀs Adaptation of Dynamic Routing Architectures  
   
  27  
   
  Multi-criteria Optimization (MCO) Analysis. In our approach, the reconﬁguration between the architecture conﬁgurations is performed automatically based on an MCO analysis [2]. Consider the following optimization problem: An application using the proposed architecture has nserv services and is under stress for a period of time with the call frequency of cf . To optimize reliability and performance, the system can change between diﬀerent architecture conﬁgurations dynamically by adjusting nrout , ranging from a centralized routing (nrout = 1) and up to the extreme of one router per service (nrout = nserv ). We use the notations Rnrout and Pnrout to specify the reliability and performance of an architecture conﬁguration by its number of routers. For instance, only conﬁguring one router R1 indicates the reliability model of centralized routing, and conﬁguring nserv routers (i.e., R1 , . . . , Rnserv ) indicates completely distributed routing. Let Rth and Pth be the reliability and performance thresholds. The MCO question is: Given a cf and nserv , what is the optimal number of routers that minimizes request loss and average processing time for requests per router without the predicted values violating the respective thresholds? M inimize Rnrout Pnrout  
   
  Algorithm 1: Reconﬁguration Algorithm Input: Rth , Pth , performanceWeight Rnrout , Pnrout , cf, nserv ← readMonitoringData() routersRange ← MCO(cf, nserv , Rnrout , Pnrout , Rth , Pth ) reconﬁgSolution ← preferenceFunction(routersRange, performanceWeight) reconfigureRouters(reconﬁgSolution) function preferenceFunction(range, PW) begin length ← max(range) - min(range) +1 ﬂoor ←  PW * length  if floor == max(range) then return max(range) else if floor == 0 then return min(range) else return ﬂoor + min(range) -1 end end  
   
  (7) (8)  
   
  28  
   
  A. Amiri and U. Zdun  
   
  Subject to Rnrout ≤ Rth Pnrout ≤ Pth 1 ≤ nrout ≤ nserv  
   
  (9) (10) (11)  
   
  Typically, there is no single answer to an MCO problem. Using the above MCO analysis, we ﬁnd a range of nrout conﬁgurations that all meet the constraints. One end of this range optimizes reliability and the other performance. We need a preference function so our approach can automatically select a ﬁnal nrout value. Preference Function. An architect deﬁnes an importance vector that gives weights to reliability and performance. The preference function instructs the proposed architecture to choose a ﬁnal nrout value in the range found by the MCO analysis based on this importance vector. Let us consider an example: When performance is of the highest importance to an application, an architect gives the highest weight, i.e., 1.0, to performance and the lowest weight, i.e., 0.0, to reliability. Thus, the preference function chooses the highest value on the nrout range to choose more distributed routing. This reconﬁguration results in processing client requests in parallel, giving a higher performance. Automatic Reconfiguration. As shown in Fig. 2, the QoS monitor reads the monitoring data from the API Gateway and feeds this information to the reconﬁguration manager. This manager reconﬁgures the infrastructure or reschedules the containers. Algorithm 1 presents our reconﬁguration algorithm. The QoS monitor triggers the reconﬁguration algorithm, e.g., whenever reliability or performance metrics degrade. Time intervals, manual triggering or change in the incoming load can also be used to trigger the algorithm if more appropriate than metrics degradation. Note that reconfigureRouters(reconfigSolution) performs the ﬁnal reconﬁguration based on the chosen solution by either reconﬁguring the infrastructure using the IaC component or rescheduling the containers using the container scheduler. Our supporting tool provides a simple implementation.  
   
  4  
   
  Tool Overview  
   
  We developed a prototypical tool to demonstrate our adaptive architecture, which is available in our online artifact4 . Figure 4 shows the tool architecture. We provide two modes, i.e., deployment and visualization. In the case of deployment, our tool generates artifacts in the form of Bash5 scripts and conﬁguration ﬁles, e.g., infrastructure conﬁguration data to be used by an IaC tool. These 4 5  
   
  The online artifact of our study can be anonymously downloaded from https:// zenodo.org/record/7944823. https://www.gnu.org/software/bash/.  
   
  Trade-Oﬀs Adaptation of Dynamic Routing Architectures  
   
  29  
   
  Fig. 4. Tool Architecture Diagram  
   
  scripts can schedule containers using the Docker technology6 . We also provide a visualization environment that only generates diagrams using PlantUML7 . The frontend of our application provides the functionalities of the QoS monitor, i.e., to specify architecture conﬁgurations as well as model elements such as reliability and performance thresholds. This information is sent to the manager component in the backend that ﬁnds the ﬁnal reconﬁguration solution (see Algorithm 1). The manager sends this solution to the IaC component and the scheduler to generate deployment artifacts. A visualization is then created in the backend and shown in the frontend. The frontend is implemented in React8 and the backend is developed in Node.js9 as a RESTful application. The tool ﬂow of our application is as follows: An architect gives the architecture conﬁguration by entering the number of services and routers. Users also specify model thresholds, call frequency of client requests, and performance weight. A reconﬁguration is triggered when metrics degradation is observed, according to timers or manually. When reconﬁguration is triggered, the backend performs an MCO analysis and chooses a ﬁnal reconﬁguration solution. If the deployment mode is chosen, deployment artifacts will be generated. The reconﬁguration visualization is then created and shown.  
   
  6 7 8 9  
   
  https://www.docker.com/. https://plantuml.com/. https://reactjs.org/. https://nodejs.org/.  
   
  30  
   
  5  
   
  A. Amiri and U. Zdun  
   
  Evaluation  
   
  In this section, we evaluate our architecture by comparing the reliability and performance predictions to the empirical results of our experiment (see Sect. 3.2). The proposed architecture is neither speciﬁc to our infrastructure nor our cases. We use our empirical data set in our online artifact (see footnote 4) to evaluate our approach. 5.1  
   
  Evaluation Cases  
   
  We systematically evaluate our proposed architecture through various thresholds and importance weights for reliability and performance. We compare our model predictions with our 36 experiment cases (see Sect. 3.2 for the rationale behind choosing them). That is, we compare with three ﬁxed architecture conﬁgurations, i.e., nrout ∈ { 1, 3, nserv } and three levels of services, i.e., nserv ∈ { 3, 5, 10 }. We consider four levels of call frequencies, i.e., cf ∈ { 10, 25, 50, 100 } r/s. Regarding reliability and performance thresholds, we start with very tight reliability and very loose performance thresholds so that only centralized routing is acceptable. We increase the reliability and decrease the performance thresholds by 10% in each step so that distributed routing becomes applicable. To ﬁnd the starting points, we consider the worst-case scenario of our empirical data. Equation (1) informs that a higher nserv results in a higher expected request loss. In our experiment, the highest number of services is ten. With nserv = 10, the worst-case reliability for centralized routing and completely distributed routing (nrout = 10) is 1.1 and 2.0 r/s, respectively. Regarding performance, for the case of nserv = 10, we investigate our predictions to ﬁnd a range where a reconﬁguration is possible. The lowest possible performance prediction is 33.7 ms, and the highest is 101.1 ms. We adjust these values slightly and take our boundary thresholds as follows. We analyze step-by-step by increasing the reliability threshold and decreasing the performance threshold by 10% as before. 1.1 ≤ Rth ≤ 2.0 r/s 35 ≤ Pth ≤ 100 ms  
   
  (12) (13)  
   
  We start with an importance weight of 1.0 for reliability and 0.0 for performance. We decrease the reliability importance and increase the performance weight by 10% in each iteration. Overall we evaluate 4356 systematic evaluation cases: 36 experiment cases, 11 importance weight levels, and 11 thresholds. To support reproducibility, the evaluation script and the evaluation log detailing information about each case are provided in the online artifact of our study (see footnote 4).  
   
  Trade-Oﬀs Adaptation of Dynamic Routing Architectures  
   
  31  
   
  Fig. 5. Reliability and Performance Gains of our Adaptive Architecture Compared to Fixed Architecture Conﬁgurations ( nrout ∈ { 1, 3, nserv } )  
   
  5.2  
   
  Results Analysis  
   
  We deﬁne reliability gain, i.e., RGain, and performance gain, i.e., P Gain, as the average percentage diﬀerences of our predictions compared to those of ﬁxed architectures, i.e., nrout ∈ { 1, 3, nserv }. These formulas are based on the Mean Absolute Percentage Error (MAPE), widely used in the cloud QoS research [31]. RGain = P Gain =  
   
  100% · n 100% · n  
   
    
   
  (14)  
   
  c∈Cases  
   
  Rc − Rnrout Rnrout  
   
  (15)  
   
  c∈Cases  
   
  Pc − Pnrout Pnrout  
   
    
   
  32  
   
  A. Amiri and U. Zdun  
   
  Remember Rnrout and Pnrout are reliability and performance predictions (see the MCO analysis in Sect. 3.2). Cases are our experiment cases, so n = 36. Figure 5 shows the reliability and performance gains compared to the predictions of ﬁxed architecture conﬁgurations, i.e., without adaptations. Our adaptive architecture provides improvements in both reliability and performance gains. As more importance is given to the reliability of a system, i.e., reliability weight increases, our architecture reconﬁgures the routers so that the gain in reliability rises, as shown by Fig. 5a. Regarding performance, the same trend can be seen in Fig. 5b. A higher performance weight results in a higher performance gain. On average, when cases with correct and incorrect architectural choices are analyzed together, our adaptive architecture provides 9.82% and 47.86% reliability and performance gains, respectively. A higher gain for performance compared to reliability is expected. To clarify, studying Eqs. 5 and 6 informs that changing the number of routers has a higher eﬀect on the performance than a system’s reliability. We deﬁne performance as the average processing time of requests per router. Having a higher number of routers to process the requests in parallel divides the average processing time by more routers. However, only the sum of the number of services and routers aﬀects the reliability.  
   
  6  
   
  Threats to Validity  
   
  Regarding construct validity, we used request loss and the average processing time of requests per router as reliability and performance metrics, respectively. While this is a common approach in service- and cloud-based research (see Sect. 7), the threat remains that other metrics might model these quality attributes better, e.g., a cascade of calls beyond a single call sequence for reliability [22], or data transfer rates of messages which are m byte-long for performance [21]. More research, probably with real-world systems, is required for this threat to be excluded. Regarding Internal validity, our adaptive architecture abstracts the controlling logic component in dynamic routing under a router concept to allow interoperability between diﬀerent implementation technologies. In a real-world system, changing between these technologies is not always an easy task, but it is not impossible either. In this paper, we provided a scientiﬁc proof-of-concept based on an experiment with the prototypical implementation of these technologies. The threat remains that changing between these technologies in a real-world application might have other impacts on reliability and performance, e.g., network latency increasing processing time. Regarding External validity, we designed our novel architecture with generality in mind. However, the threat remains that evaluating our approach based on another infrastructure may lead to diﬀerent results. To mitigate this thread, we systematically evaluated the proposed architecture with 4356 evaluation cases (see Sect. 5 for details). Moreover, the results might not be generalizable beyond the given experiment cases of 10–100 requests per second and call sequences of length 3–10. As this covers a wide variety of loads and call sequences in cloudbased applications, the impact of this threat should be limited.  
   
  Trade-Oﬀs Adaptation of Dynamic Routing Architectures  
   
  33  
   
  Regarding Conclusion validity, as the statistical method to evaluate the accuracy of our model’s predictions, we deﬁned reliability and performance gains based on the Mean Absolute Percentage Error (MAPE) metric [31] as it is widely used and oﬀers good interpretability in our context.  
   
  7  
   
  Related Work  
   
  Architecture-based approaches [12,31] employ probabilistic analytical models such as discrete-time Markov chains (DTMCs) [11] and Queueing Networks (QNs) [29]. Some papers use high-level architectural models such as proﬁleextended UML [23] or Palladio [7,8] models that are simulated or transformed into analytical models. These works are based on the observation that a system’s reliability and performance depend on those of each component, along with the interplay between them. Pitakrat et al. [24] use architectural knowledge to predict how a failure propagates to other components based on Bayesian networks. Other studies introduce service- and cloud-speciﬁc reliability models. For instance, Wang et al. [32] propose a DTMC model for analyzing system reliability based on constituent services. Grassi and Patella [15] propose an approach for reliability prediction that considers the decentralized and autonomous nature of services. Zheng and Lyu [34] propose an approach that employs past failure data to predict a service’s reliability. However, none of these approaches focuses on major routing architectural patterns in service- and cloud-based architectures; they are rather based on a very generic model concerning the notion of service. Moreover, numerous approaches have been proposed that study architecturebased performance prediction. Spitznagel and Garlan [29] present a general architecture-based model for performance analysis based on QNs. Architecture-based MCO [2] builds on top of these prediction approaches and the application of architectural tactics to search for optimal architectural candidates. Example MCO approaches supporting reliability and performance is ArcheOpterix [1], PerOpteryx [9], and SQuAT [25]. Sharma and Trivedi [28] present an architecture-based uniﬁed hierarchical model for software reliability, performance, security, and cache behavior prediction. This is one of the few studies that consider performance and reliability. Like our study, those works focus on supporting architectural design or decision-making. In contrast to our work, they do not focus on speciﬁc kinds of architecture or architectural patterns. Our approach focuses on service- and cloud-based dynamic routing. Finally, our approach is related to self-adaptive systems, which typically use MAPE-K loops [4,5,19] and similar approaches to realize adaptations. Our approach is based on the MAPE-K loop structure and extends such approaches with support speciﬁc to the cloud- and service-based dynamic routing architectures. Similarly, auto-scalers for the cloud [6,33], which promise stable QoS and cost minimization when facing changing workload intensity, and in general research on cloud elasticity [14,16] are related to our work. Our approach is similar to auto-scaling but performs the adaptation only for the dynamic routers. Major contributions of our approach are that, in contrast to the existing related work, it  
   
  34  
   
  A. Amiri and U. Zdun  
   
  considers reliability and performance trade-oﬀs together and focuses on speciﬁc architectural patterns for dynamic routing in service- and cloud-based architectures. By focusing on runtime adaptations, we deﬁned a targeted model and a reconﬁguration algorithm, which is hard to consider in the generic case.  
   
  8  
   
  Conclusions  
   
  In this paper, we set out to answer whether we can ﬁnd an optimal conﬁguration of routers that automatically adapts the reliability and performance trade-oﬀs in dynamic routing architectures based on monitored system data at runtime (RQ1), what the architecture of a supporting tool that analyses the system at runtime and facilitates the reconﬁguration of a dynamic routing application using the optimal conﬁguration solution is (RQ2), and how the reliability and performance predictions of the chosen optimal solution compare with the case where one architecture runs statically (RQ3). For RQ1, we proposed a routing architecture that dynamically self-adapts between diﬀerent routing patterns based on the need of an application. For RQ2, we provided a prototypical tool that analyzes diﬀerent inputs and creates deployment artifacts. This tool also provides visualizations to study diﬀerent architecture conﬁgurations. For RQ3, we systematically evaluated our approach using 4356 evaluation cases based on the empirical data of our extensive experiment of 1200 h of runtime (see Sect. 5). The results conﬁrms that the proposed architecture can adapt the routing pattern in a running system to optimize reliability and performance. Even on average, where cases with the right and the wrong architecture choices are analyzed together, our approach oﬀers a 9.82% reliability gain and a 47.86% performance gain. For our future work, we plan to apply our novel architecture to real-world applications.  
   
  References 1. Aleti, A., Bj¨ ornander, S., Grunske, L., Meedeniya, I.: ArcheOpterix: an extendable tool for architecture optimization of AADL models. In: ICSE 2009 Workshop on Model-Based Methodologies for Pervasive and Embedded Software, MOMPES 2009, pp. 61–71. IEEE (2009) 2. Aleti, A., Buhnova, B., Grunske, L., Koziolek, A., Meedeniya, I.: Software architecture optimization methods: a systematic literature review. IEEE Trans. Software Eng. 39(5), 658–683 (2013) 3. Amiri, A., Zdun, U., van Hoorn, A.: Modeling and empirical validation of reliability and performance trade-oﬀs of dynamic routing in service- and cloud-based architectures. In: IEEE Transactions on Services Computing (TSC) (2021) 4. Arcaini, P., Riccobene, E., Scandurra, P.: Modeling and analyzing MAPE-K feedback loops for self-adaptation. In IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, pp. 13–23 (2015) 5. Arcaini, P., Riccobene, E., Scandurra, P.: Formal design and veriﬁcation of selfadaptive systems with decentralized control. ACM Trans. Auton. Adapt. Syst. (TAAS) 11(4), 1–35 (2017)  
   
  Trade-Oﬀs Adaptation of Dynamic Routing Architectures  
   
  35  
   
  6. Bauer, A., Herbst, N., Spinner, S., Ali-Eldin, A., Kounev, S.: Chameleon: a hybrid, proactive auto-scaling mechanism on a level-playing ﬁeld. IEEE Trans. Parallel Distrib. Syst. 30(4), 800–813 (2018) 7. Becker, S., Koziolek, H., Reussner, R.: Model-based performance prediction with the palladio component model. In: Proceedings of the 6th International Workshop on Software and Performance, WOSP 2007, pp. 54–65. ACM (2007) 8. Brosch, F., Koziolek, H., Buhnova, B., Reussner, R.: Architecture-based reliability prediction with the palladio component model. IEEE Trans. Softw. Eng. 38(6), 1319–1339 (2011) 9. Busch, A., Fuchss, D., Koziolek, A.: PerOpteryx: automated improvement of software architectures. In: IEEE International Conference on Software Architecture ICSA Companion 2019, pp. 162–165. IEEE (2019) 10. Chappell, D.A.: Enterprise Service Bus. O’Reilly, Sebastopol (2004) 11. Cheung, R.C.: A user-oriented software reliability model. IEEE Trans. Softw. Eng. SE-6(2), 118–125 (1980) 12. Cortellessa, V., Di Marco, A., Inverardi, P.: Model-based software performance analysis, Springer (2011). https://doi.org/10.1007/978-3-642-13621-4 13. Dean, D.J., Nguyen, H., Wang, P., Gu, X.: PerfCompass: toward runtime performance anomaly fault localization for infrastructure-as-a-service clouds. In: 6th USENIX Workshop on Hot Topics in Cloud Computing (HotCloud 14) (2014) 14. Galante, G., de Bona, L.C.E.: A survey on cloud computing elasticity. In: 2012 IEEE Fifth International Conference on Utility and Cloud Computing, pp. 263– 270. IEEE (2012) 15. Grassi, V., Patella, S.: Reliability prediction for service-oriented computing environments. IEEE Internet Comput. 10(3), 43–49 (2006) 16. Herbst, N.R., Kounev, S., Reussner, R.: Elasticity in cloud computing: what it is, and what it is not. In: 10th International Conference on Autonomic Computing (ICAC 13), pp. 23–27 (2013) 17. Hohpe, G., Woolf, B.: Enterprise Integration Patterns. Addison-Wesley, Boston (2003) 18. Homer, A., Sharp, J., Brader, L., Narumoto, M., Swanson, T.: Cloud Design Patterns. Microsoft Press (2014) 19. Iglesia, D.G.D.L., Weyns, D.: MAPE-K formal templates to rigorously design behaviors for self-adaptive systems. ACM Trans. Auton. Adapt. Syst. (TAAS) 10(3), 1–31 (2015) 20. Jamshidi, P., Pahl, C., Mendon¸ca, N.C., Lewis, J., Tilkov, S.: Microservices: the journey so far and challenges ahead. IEEE Softw. 35(3), 24–35 (2018) 21. Kratzke, N.: About microservices, containers and their underestimated impact on network performance. arXiv preprint arXiv:1710.04049 (2017) 22. Nygard, M.: Release It!: Design and Deploy Production-Ready Software. Pragmatic Bookshelf, Raleigh (2007) 23. Petriu, D., Shousha, C., Jalnapurkar, A.: Architecture-based performance analysis applied to a telecommunication system. IEEE Trans. Softw. Eng. 26(11), 1049– 1065 (2000) 24. Pitakrat, T., Okanovi´c, D., van Hoorn, A., Grunske, L.: Hora: architecture-aware online failure prediction. J. Syst. Softw. 137, 669–685 (2018) 25. Rago, A., Vidal, S.A., Diaz-Pace, J.A., Frank, S., van Hoorn, A.: Distributed quality-attribute optimization of software architectures. In: Proceedings of the 11th Brazilian Symposium on Software Components, Architectures and Reuse, SBCARS 2017, pp. 7:1–7:10. ACM (2017)  
   
  36  
   
  A. Amiri and U. Zdun  
   
  26. Raj, P., Raman, A., Subramanian, H.: Architectural Patterns: Uncover Essential Patterns in the Most Indispensable Realm. Packt Publishing, Birmingham (December 2017) 27. Richardson, C.: Microservice architecture patterns and best practices. https:// microservices.io/index.html (2019) 28. Sharma, V.S., Trivedi, K. S.: Architecture based analysis of performance, reliability and security of software systems. In: Proceedings of the 5th International Workshop on Software and Performance, WOSP 2005, pp. 217–227, New York, USA (2005). Association for Computing Machinery 29. Spitznagel, B., Garlan, D.: Architecture-based performance analysis. In: Proceedings of the 1998 Conference on Software Engineering and Knowledge Engineering. Carnegie Mellon University (June 1998) 30. Sukwong, O., Sangpetch, A., Kim, H.S.: SageShift: managing SLAs for highly consolidated cloud. In: 2012 Proceedings IEEE INFOCOM, pp. 208–216 (2012) 31. Trivedi, K.S., Bobbio, A.: Reliability and Availability Engineering: Modeling, Analysis, and Applications. Oxford University Press, Oxford (2017) 32. Wang, L., Bai, X., Zhou, L., Chen, Y.: A hierarchical reliability model of servicebased software system. In: 2009 33rd Annual IEEE International Computer Software and Applications Conference. vol. 1, pp. 199–208, July 2009 33. Zhang, F., Tang, X., Li, X., Khan, S.U., Li, Z.: Quantifying cloud elasticity with container-based autoscaling. Future Gener. Comput. Syst. 98, 672–681 (2019) 34. Zheng, Z., Lyu, M.R.: Collaborative reliability prediction of service-oriented systems. In: 2010 ACM/IEEE 32nd International Conference on Software Engineering. vol. 1, pp. 35–44, May 2010  
   
  Architecture-Based Attack Path Analysis for Identifying Potential Security Incidents Maximilian Walter(B) , Robert Heinrich, and Ralf Reussner KASTEL – Institute of Information Security and Dependability, Karlsruhe Institute of Technology (KIT), Karlsruhe, Germany {maximilian.walter,robert.heinrich,ralf.reussner}@kit.edu  
   
  Abstract. Analyzing attacks and potential attack paths can help to identify and avoid potential security incidents. Manually estimating an attack path to a targeted software element can be complex since a software system consists of multiple vulnerable elements, such as components, hardware resources, or network elements. In addition, the elements are protected by access control. Software architecture describes the structural elements of the system, which may form elements of the attack path. However, estimating attack paths is complex since diﬀerent attack paths can lead to a targeted element. Additionally, not all attack paths might be relevant since attack paths can have diﬀerent properties based on the attacker’s capabilities and knowledge. We developed an approach that enables architects to identify relevant attack paths based on the software architecture. We created a metamodel for ﬁltering options and added support for describing attack paths in an architectural description language. Based on this metamodel, we developed an analysis that automatically estimates attack paths using the software architecture. This can help architects to identify relevant attack paths to a targeted component and increase the system’s overall security. We evaluated our approach on ﬁve diﬀerent scenarios. Our evaluation goals are to investigate our analysis’s accuracy and scalability. The results suggest a high accuracy and good runtime behavior for smaller architectures. Keywords: Attack Propagation  
   
  1  
   
  · Software Architecture · Attack Path  
   
  Introduction  
   
  As a society, we digitize various aspects of our lives with new smart devices. This covers diﬀerent sectors, such as the health sector with a wide variety of This work was supported by the German Research Foundation (DFG) under project number 432576552 (FluidTrust), by funding from the topic Engineering Secure Systems of the Helmholtz Association (HGF), by KASTEL Security Research Labs, by “Kerninformatik am KIT (KiKIT)” funded by the Helmholtz Association (HGF), and by the German Federal Ministry of Education and Research (BMBF) grant number 16KISA086 (ANYMOS). c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 37–53, 2023. https://doi.org/10.1007/978-3-031-42592-9_3  
   
  38  
   
  M. Walter et al.  
   
  eHealth services, the energy sector with smart meters, or production processes with Industry 4.0. Internet of Things (IoT) devices are the foundation for most of these sectors. These devices exchange data with a wide range of possible services, such as cloud services, thereby building a large and complex network of heterogeneous devices and services. Often, these devices or services contain vulnerabilities. However, not only IoT devices are aﬀected but also the backend of these systems, such as cloud services or typical company networks with outdated Windows versions [12]. These vulnerabilities can be chained in so-called advanced persistent threats (APT) and build complex attack paths and potentially enable attackers to reach critical components, such as payment components [26] or even turn oﬀ critical infrastructure, such as the power grid [9]. Analyzing these systems for attack paths is complicated since diﬀerent devices often have diﬀerent vulnerabilities. Moreover, these vulnerabilities may manifest in diverse areas of the system, including hardware resources, network resources, and various software components. Therefore, it is essential to model diﬀerent areas of the system to estimate the potential impact of any vulnerabilities eﬀectively. Software architecture can provide the means to model these diﬀerent areas. An attack path is then a list of compromised architectural elements. Moreover, a software architecture model may facilitate system analysis, even in cases where a running system is unavailable. Therefore, it enables secure system design and management during development and periods of downtime, such as following an attack or maintenance. Notably, this concept aligns with the principles outlined in the new OWASP Top Ten element “Insecure Design” [18], highlighting that security threats are often embedded within the system design and, therefore, the software architecture. Furthermore, a modeled software architecture enables the creation of what-if scenarios to analyze and ﬁnd the best solution by modeling and analyzing diﬀerent scenarios. Existing attack propagation approaches, such as Bloodhound1 , mainly focus on one aspect, such as the Active Directory, or only use a network topology, which often does not contain information regarding software components or deployments. Finally, given the high number of vulnerable elements in many systems, it is not uncommon that there are many possible attack paths that attackers could exploit. In such cases, eﬀective vulnerability management is necessary. One solution is to prioritize and select the most relevant attack paths for mitigation. Therefore, meaningful ﬁlter operations are necessary to identify relevant paths. Besides vulnerabilities, attackers may exploit access control policies to gain access to various architectural elements. Once an attacker has gained access to an element, they may use this element to launch further attacks on other elements. Therefore, it is crucial to consider vulnerabilities and access control to develop a comprehensive security analysis for identifying combined attack paths. These attack paths help then to identify potential security incidents, which are multiple unwanted security events that threaten the system [11]. 1  
   
  https://bloodhoundenterprise.io/.  
   
  Identifying Potential Security Incidents  
   
  39  
   
  In Walter et al. [33], we developed a metamodel and analysis to tackle some of these problems. However, we focused on the propagation of one attacker from one initial breach point in the software architecture. In contrast, this work focuses on creating multiple attack paths leading to one targeted element in the software architecture. This enables architects to identify potential security risks to critical components. For instance, a software architect could be interested in whether an attack path from an externally accessible component, such as a web service, to a conﬁdential database exists. In addition, this approach estimates the used attacks based on the modeled vulnerabilities and the ﬁltering options. It does not require the concrete modeling of the attacker’s capabilities and knowledge as the previous approach [33]. Our contributions to this paper are: C1 We extended an architectural vulnerability metamodel by adding support for modeling multiple attack paths leading to a target element and support for ﬁltering options. This enables architects to select attack paths based on the relevant properties, such as the complexity of the used attacks. C2 Based on the new extended metamodel, we developed an attack path generation. It generates multiple attack paths to a targeted element and can consider ﬁlter options. These ﬁlters can help software architects to identify relevant attack paths based on the paths’ properties. Additionally, the ﬁlters fasten the calculation since they reduce the problem size. In contrast to existing approaches (see Sect. 5), we consider ﬁne-grained access control policies and vulnerabilities based on the software architecture for attack paths leading to one targeted element. The derived attack paths can help software architects to harden the system. We evaluated our approach on ﬁve scenarios based on real-world breaches and research cases. The investigated properties are accuracy and scalability. The results indicate a high accuracy and acceptable overall runtime for smaller systems. The paper is structured as follows. We describe our metamodel and the attack path generation in Sect. 2 and Sect. 3. The evaluation follows in Sect. 4. Afterward, we discuss related work in Sect. 5. Finally, Sect. 6 concludes the paper.  
   
  2  
   
  Modeling Attack Paths and Path Selection  
   
  In Walter et al. [33], we provide a metamodel extension for the Palladio Component Model (PCM) [21] to model access control properties and vulnerabilities. PCM is an architecture description language (ADL) which supports the component-based modeling and analysis for diﬀerent quality properties, such as conﬁdentiality or performance [21,25]. We also used the approach to estimate the criticality of the accessed data [34] and analyze diﬀerent usage and misuse scenarios [32]. The main idea of their approach is to reuse the existing vulnerability classiﬁcations Common Weakness Enumeration (CWE) [7], Common Vulnerabilities and Exposure (CVE) [5] and Common Vulnerability Scoring System (CVSS) [6] to describe the vulnerabilities during an attack propagation. These are commonly used to classify vulnerabilities and their attributes can be found in public databases, such as the US National Vulnerability Database (NVD). We also developed an approach to derive the architecture and vulnerabilities automatically [15].  
   
  40  
   
  M. Walter et al.  
   
  We will explain our approach based on the running example from Walter et al. [33]. Figure 1 illustrates the components, devices, and network entities. The example is settled in an Industry 4.0 setting. It contains a technician who can maintain a machine by accessing a terminal. The machine stores its data on an external storage. This scenario is modeled by three components (Terminal, Machine, ProductionDataStorage). Each of these components is deployed on its own hardware device. A local network connects each hardware device. Additionally, the storage device contains one additional component, which contains conﬁdential data about the production process. For simplicity reasons, we reduced the number of access control policies to two. The StorageServer and TerminalServer are only accessible by a user with the role Admin. Additionally, in our case, we have one vulnerability for the TerminalServer. In this scenario, the goal or the target of the attacker is to ﬁnd potential attack paths, leading to the ProductStorage since this component contains conﬁdential data.  
   
  Fig. 1. Running Example with a vulnerable TerminalServer and Access Control policies based on Walter et al. [33]  
   
  Figure 2 illustrates the extended vulnerability metamodel. The gray elements are the original metamodel elements [33], the black ones are PCM elements, and the white elements are the new elements. For simplicity reasons, we left out non-relevant elements for this approach. The complete metamodel can be found in our dataset [35]. The main element to integrate vulnerabilities in PCM is the Vulnerability class. It annotates LinkingResources for network resources, ResourceContainers for hardware devices and AssemblyContexts for instantiated components with vulnerability information. This element is implemented by two concrete elements the CWEVulnerability and the CVEVulnerability. The CWEVulnerability describes more general vulnerabilities based on a CWE class, and the CVEVulnerability describes a concrete vulnerability. The relationship between CVE and CWE is not represented in the model excerpt but is included in the metamodel. The Vulnerability has attributes, such as the attack vector  
   
  Identifying Potential Security Incidents  
   
  41  
   
  (the location from which a vulnerability is exploitable) or the gained attributes through the exploitation. While our previous metamodel can already model vulnerabilities and access control properties, the output is restricted to one attack propagation graph for a list of concrete attacks. It cannot represent diﬀerent attack paths leading to a target or attacks limited by their properties. Hence, we need to add support for diﬀerent attack paths. Additionally, for identifying the relevant attack paths, we need to add support for ﬁnding the relevant attack paths.  
   
  Fig. 2. Excerpt of the extended metamodel with ﬁlters (white elements are new elements, gray ones are taken from Walter et al. [33], and black ones are taken from PCM)  
   
  The starting point for an attack path is the attack’s initial start point, and the targeted element is the element an attack wants to inﬁltrate. In our running example (Fig. 1), the targeted element is the ProductStorage. It is, therefore, the element to which all the attack paths should lead. The start point of the list is connected by its elements to the targeted element. The connection is realized by vulnerabilities or exploited credentials. The attack path is represented with the AttackPath element. The actual path elements are modeled as a list of AttackPathElements. Each AttackPathElement describes a compromised architectural element and stores the reason for the compromisation. With the extension to the metamodel so far, our analysis can calculate attack paths leading to one targeted element based on the modeled software architecture. However, even in our small example, this could lead to many irrelevant attack paths. For instance, for our running example, we get an attack path to the targeted element for every architectural element, resulting in seven paths. In larger systems, this might be even more. Many attack paths may be irrelevant because they demand initial knowledge about speciﬁc credentials. For instance, in our running example, there is an attack path from the MachineController to the ProductStorage over the StorageServer. However, this path would require the knowledge of the Admin credentials. Usually, a system architect might assume that the admin’s credentials might be secure. Therefore, the attack path can sometimes be considered irrelevant. The selection of relevant paths is realized by ﬁltering. We currently support ﬁve ﬁlter options. The common abstract element to model attack path ﬁlters is  
   
  42  
   
  M. Walter et al.  
   
  the FilterCriterion. The ﬁlters are then realized as child elements, allowing an easy metamodel extension for new ﬁlters. The ﬁrst ﬁlter is the MaximumPath ﬁlter, and it restricts the path length of the found attack paths. This property can also be found in related approaches, such as [20]. This is beneﬁcial if software architects are only interested in short attack paths because they may be simpler than longer paths. As described, in some cases, it is beneﬁcial to restrict the initial usage of credentials. This is represented by the CredentialFilter. Suppose the software architect is only interested in an attack path from certain elements, such as in our running the externally accessible Terminal, to the target element. They can use the StartElement ﬁlter in that case. The last two ﬁlters (ImpactFilter, ExploitFilter) use properties of the vulnerability for ﬁltering. Hence, they are grouped together with the common parent VulnerabilityFilter element. Because the initial metamodel does not include all CVSS properties, we added the following: 1. AttackComplexity describes how complex it is to exploit the vulnerability. 2. UserInteraction describes that the attacker needs additional support from the user to exploit the vulnerability. 3. IntegrityImpact is the impact regarding integrity. 4. AvailablityImpact is the impact regarding availability. A more detailed description of the properties can be found in [6]. The ExploitFilter ﬁlters attacks based on the attackVector, attackComplexity, UserInteraction. This enables an architect to ﬁnd only attack paths to a targeted element, which contains easily exploited vulnerabilities. This can be helpful in considering diﬀerent attacker types. The ImpactFilter ﬁlters out vulnerabilities of a certain impact, such as only attack paths that aﬀect the conﬁdentiality of a system. The diﬀerent ﬁlters are then selected in the SurfaceAttacker. It stores a list of the ﬁlter criteria. Additionally, it contains the information necessary to calculate an attack path by storing the targeted element.  
   
  3  
   
  Attack Path Identification  
   
  Based on a modeled software architecture, our approach can identify attack paths leading to a targeted element. We identify the potential attack paths based on an attack graph. In contrast to our previous work [33], the attack graph contains all the vulnerabilities as long as they do not share the ﬁltered properties. The graph is especially not limited by a set of speciﬁed attacks. Figure 3 illustrates an attack graph based on our running example. The graph consists of vertices, which are the vulnerable architectural elements. In our case, these are elements from the type LinkingResource, ResourceContainer, and AssemblyContext. The edges are possibilities to compromise a vertex from another vertex. For this, the original architectural elements represented by the vertex need to be connected. For instance, this could be the network connection like in our running example with the MachineController to the TerminalServer. Additionally, the edges have three types. The ﬁrst type models the necessary credentials to access a vertex. For instance, in our running example, the TerminalServer is connected with the MachineController and the Admin  
   
  Identifying Potential Security Incidents  
   
  43  
   
  Fig. 3. Attack Graph of the running example with attack path p1 in red and attack path p2 in blue (Color ﬁgure online)  
   
  property gives access to the TerminalServer. Therefore, there is a directed edge from the MachineController to the TerminalServer with the label Admin. The second edge type models vulnerabilities, which can be exploited on the target vertex. For instance, the Terminal is deployed on the TerminalServer and the TerminalServer is vulnerable to CVE-2021-28374. Therefore, a vulnerability edge exists between Terminal and TerminalServer. In our illustration, we renamed CVE-2021-28374 with vulnerability. However, in the analysis, the edge still has the information about its vulnerability. The last edge type is implicit edges. These are edges between a ResourceContainer and the components deployed on it. Here, we assume that a compromised hardware automatically compromises the underlying software. For instance, in our running example, the ProductStorage is deployed on the StorageServer. Hence, there is a directed implicit edge from StorageServer to the ProductStorage. Algorithm 1 illustrates the graph creation process in more detail. For the graph creation, we need the software architecture (arch) and the selected ﬁlters (fil). We ﬁrst create an empty graph (l. 2) and then iterate over all relevant architectural elements (ResourceContainer, AssemblyContext, LinkingResource). For each element, we identify the connected neighbors (l. 4). Afterwards, we iterate over the neighbors and identify how they are connected. If the neighbor element is deployed on the current element, we add an implicit edge (l. 6/7). If the neighbor has access control policies, we add an edge containing this policy. The last step is to identify whether the neighbor has a vulnerability (l. 12). If it has at least one vulnerability, we iterate over all the vulnerabilities of the neighbor. We check whether each vulnerability’s attack vector is within the connection vector to the current architectural element (l. 14). Besides the attack vector, we also check whether the vulnerability can be ﬁltered based on the use  
   
  44  
   
  M. Walter et al.  
   
  Algorithm 1. Simpliﬁed Attack Graph Creation 1: procedure attackGraphCreation(arch,ﬁl) 2: g := emptyGraph() 3: for all res := arch.getElements do 4: neighbours := getConnectedElements(res) 5: for all n := neighbours do 6: if isDeployment(res, n) then 7: g.createImplicitEdge(res, n) 8: end if 9: if n.hasACP olicy() then 10: g.createACEdge(res, n) 11: end if 12: if n.hasV ulnerability() then 13: for all vul = n.getV ulnerability() do 14: if isInAV ector(vul.AV ector()) && 15: f il.notF iltered(vul) then 16: g.createV Edge(res, n, vul) 17: end if 18: end for 19: end if 20: end for 21: end for 22: end procedure  
   
  of VulnerabilityFilters. For instance, a ExploitFilter with a selected high complexity would create an attack graph that contains only vulnerabilities with low attack complexity. This is helpful in scenarios where software architects want only to consider low-complexity attacks. Based on this attack graph, the attack paths are calculated by calculating the path from a node to the targeted node. An attack path is a sequence of nodes that are connected by edges. It has a starting node and a target node from the targeted architectural element. For instance, based on the attack graph in Fig. 3, an attack path (p1) with the targeted element ProductStorage could Admin  
   
  Implicit  
   
  be: Terminal −−−−→ StorageServer −−−−−→ ProductStorage The attack path is also highlighted in red in Fig. 3. Besides the start point, the path on the graph and the endpoint, an AttackPath also contains a set of initially required credentials. These can be calculated by ﬁrst getting all required credentials. The required credentials are all credentials that are on the edge of an attack path. In our running example, this is the Admin. Afterward, all credentials gained during the attack path are removed. The rest are then the initially required credentials. Since we do not gain any credentials in our example path, the Admin attribute is in the initial required set. The actual attack path is calculated by ﬁrst determining the start nodes. The start nodes are all nodes except the target node. If a StartFilter exists, only these elements are start nodes. Afterward, the analysis calculates paths to the target node. The path ﬁnding invalidates solutions, which require the ﬁltered cre-  
   
  Identifying Potential Security Incidents  
   
  45  
   
  dentials as initial credentials. However, it supports the gaining of credentials during the path. Therefore, the path can contain the ﬁltered credential. After a path is found, we check for the length of the path. We discard it if it exceeds the length speciﬁed in the MaximumPath ﬁlter. Otherwise, we add the path to the list of attack paths. For our running example with the ProductStorage as a target, we get seven attack paths, including our previous example, p1. However, not all are reasonable. For instance, the attack path from the StorageServer only exploits the deployment relationship. A software architect can specify a start ﬁlter to get a better solution. We choose a StartFilter containing only the Terminal since external technicians can access it. Then the output is only the attack path p1. However, this attack path requires that the attacker knows the Admin credentials since it is an initially required credential. While an attacker could have it at the beginning, in general, we assume that an attacker does not have the knowledge. Therefore, we create a CredentialFilter with the Admin. If we run V ulnerability our analysis now, we get the following attack path (p2): Terminal −−−−−−−−−→ Admin  
   
  Implicit  
   
  TerminalServer −−−−→ StorageElement −−−−−→ ProductStorage. The path is highlighted in blue. This attack path still uses the Admin credential but gains it by exploiting the vulnerability and, therefore, does not require it from the start. A software architect can then use the resulting attack path and consider mitigating the attack path or accepting the risk.  
   
  4  
   
  Evaluation  
   
  We structure our evaluation using the Goal Question Metric [3] approach. Afterward, we will explain our evaluation scenarios, design and discuss our results, threats to validity, and limitations. Goals, Questions, Metrics. The ﬁrst evaluation goal G1 is to investigate accuracy. Accuracy is an important property that is also investigated in other related approaches, such as [10,25]. The evaluation question Q1 is: How accurately does the analysis identify the attack paths? This question is important since a low accuracy suggests that our analysis does not work adequately and that the attack paths might be meaningless for software architects. Our metrics are precision tp tp r = tp +f (p), recall (r) [31] and the harmonic middle F1 of both: p = tp +f p n p∗r F 1 = 2 p+r . The tp are true positives, meaning correctly detected attack paths. fp are false positives that are attack paths, which are actually no attack paths and fn false negatives are not found attack paths. Higher values are better. Our second goal G2 is to evaluate the scalability of the approach. The number of architectural elements is increasing due to trends like IoT. Furthermore, new vulnerabilities are discovered continuously during the system’s lifespan. Hence, continuously searching for the system’s existing attack paths is necessary. One possible solution is to conduct checks similar to integration tests as recommended by [24]. Typically, these tests run daily. Therefore, it is required that the analysis is completed within a few hours. Our questions are: Q2.1 How does the  
   
  46  
   
  M. Walter et al.  
   
  runtime of the graph creation behave with an increasing number of elements? Q2.2 How does the runtime of the path finding behave with an increasing number of elements? We split the evaluation into two questions to investigate the goal in more detail. Q2.1 investigates the part where the analysis transforms the software architecture in an attack graph, and Q2.2 then covers identifying an attack path on a given attack graph. The G2’s metric is the relation between runtime and input elements. Evaluation Scenarios. We answer our evaluation question based on ﬁve scenarios. Two scenarios (Target, Power Grid) are based on real-world system breaches. One scenario is based on the research case TravelPlanner [14] and one scenario is based on the cloud case study from [2]. The last scenario is based on our running example. The Target, Power Grid and TravelPlanner scenarios are also used in Walter et al. [33]. Hence, the architectural models are the same. Using these scenarios for our evaluation increases the insight and illustrates the applicability and comparability of our approach. Table 1 illustrates some characteristics of the evaluation scenarios. It contains the name of the scenario, the number of instantiated components (abbrev. comp), the number of hardware resources (abbrev. hard.), the number of linking resources (network) and the number of potential attack paths. In addition, it contains the evaluation results for G1. Table 1. Characteristic of the evaluation scenarios and results for accuracy goal Scenario  
   
  comp. hard. network paths p 6  
   
  2  
   
  14  
   
  r  
   
  F1  
   
  Target  
   
  7  
   
  1.00 1.00 1.0  
   
  Power Grid  
   
  9  
   
  8  
   
  2  
   
  16  
   
  1.00 0.88 0.93  
   
  Cloud Storage 11  
   
  16  
   
  4  
   
  14  
   
  1.00 1.00 1.00  
   
  TravelPlaner  
   
  4  
   
  3  
   
  3  
   
  1  
   
  1.00 1.00 1.00  
   
  Maintenance  
   
  4  
   
  3  
   
  1  
   
  7  
   
  1.00 0.86 0.92  
   
  Our ﬁrst scenario is a scenario based on the Target breach, which involved attackers stealing access credentials from a supplier to access Targets’s billing business backend. Afterward, they exploited diﬀerent vulnerabilities in other components to gain access to unencrypted credit card data. The model is based on [19,26]. It contains POS devices, FTP storage servers, and databases annotated with vulnerabilities, as they were components compromised in the Target breach [26]. These elements are segregated by the supplier in a separate network. The targeted element is one POS device. The second scenario is based on the cyberattack on the Ukrainian Powergrid in 2015, which resulted in a widespread power outage. The model relies on the report of [9] and covers the attack propagation from the back-oﬃce network to the ICS network. The target is the circuit breakers in the ICS network. The third scenario is a research case study for threat modeling in a cloud environment [2]. In contrast to the  
   
  Identifying Potential Security Incidents  
   
  47  
   
  previous scenarios, it is not a real-world system breach. However, the software architecture is based on concepts and ideas from real-world products. It resembles a cloud storage environment. We manually created a PCM model based on the description for the ﬁrst proposed cloud infrastructure. Here, the targeted element is a database. The fourth scenario is the conﬁdentiality research case study TravelPlanner [14]. It is used to evaluate diﬀerent security analyses, such as [25,33]. The previous scenarios are based on real-world breaches or inspired by real-world cloud centers. Therefore, the attacker behavior was given by the case. This case study lets us deﬁne the attacker’s behavior in more detail. The case is a simple mobile application to book ﬂights. It has four entities: customer, credit card center, travel agency, and airline. The ﬁfth scenario is our running example, the maintenance scenario. Evaluation Design. For the accuracy analysis, we used the ﬁve scenarios. We manually determined the number of attack paths for each scenario based on their descriptions. We tried to ﬁnd an attack path from each architectural element (excluding the targeted element) to the targeted element. For the attack paths, we used the vulnerabilities and potentially found credentials. However, we excluded as initial credentials all credentials so that an attack path needs to either ﬁnd the necessary credentials or need to exploit a vulnerability. This is beneﬁcial to get more complicated attack paths than otherwise the attack path could be just using the root or admin credentials. For each scenario, we then manually checked whether each attack path was a valid attack path. An attack path is valid if it is a list of connected vulnerable elements from the start point to the target and each vulnerability can be exploited by the attacker. If it is a valid path, we count it as tp . If it is not a valid path, we count it as fp . If we found for one architectural element an attack path and the analysis did not show an attack path, we counted this as fn . Based on these values, we then calculate p, r and F 1 for each scenario. For analyzing the scalability, we ﬁrst identiﬁed the inﬂuencing factors. We separate this along Q2.1 and Q2.2. For Q2.1, based on our algorithm 1, the most inﬂuencing factors are l. 3, 5, and 13 because of their loops. The other lines, 2, 4, 6–12,14–17, are not relevant. For l. 3,5, the relevant attributes are the architectural elements (l. 3 and l. 5). For l. 13, it is the vulnerabilities for an architectural element. For the former, we choose to scale along the number of connected resource containers. This creates a linked chain of vulnerable resource containers and creates a worst-case scenario for the graph creation. The behavior for architectural elements is similar in the algorithm, so the analysis time should be similar. We did not investigate the scaling along the number of vulnerabilities for one architectural element because, usually, the number for one element is not very high. We measured the runtime starting from the graph creation with the already loaded PCM models till the attack graph is returned. We scaled by the power of 10 from 101 elements to 105 elements. Regarding Q2.2, the relevant factors are the number of edges between distinct nodes and the path length. We achieve the ﬁrst by choosing the scaling along the ResourceContainer. For the second, we use a start ﬁlter and set it to the ﬁrst element in the chained  
   
  48  
   
  M. Walter et al.  
   
  elements, and the target element is the last. This will force a worst-case scenario for a single path. We assume that software architects are more interested in only a ﬁltered list for bigger architectures. For instance, similar to our running example with the Terminal, they are only interested in paths from externally accessible components to certain internal components. Here, we measured the time after the attack graph from Q2.1 is created till one attack path is returned. For both, we repeated each measurement ﬁve times and calculated the average to avoid outliers. We performed one warm-up analysis and run the analysis on a Debian 11 VM with 21 AMD Opteron Processor 8435 with 62.5 GB RAM. Results and Discussion Accuracy. The last three columns in Table 1 show the evaluation results for G1. For each scenario, we get the perfect precision of 1.00. This means that every attack path of the analysis was an actual attack path regarding our manual comparison. We archived these perfect results since the cases are small, and we focused on a restricted model with no dependencies to unknown behavior, which simpliﬁes the results. Regarding the recall, we archive in the Cloud Storage, Target, and TravelPlanner scenarios the perfect results of 1.00 and also an F1 score of 1.00. This means that our analysis can ﬁnd all the attack paths from our manual comparison in these scenarios, and they are valid attack paths. However, in the Power Grid, our analysis missed two attack paths and in the Maintenance scenario, one attack path. Therefore, we only have a recall of 0.88 and 0.86 in these scenarios. The F1 score is 0.93 and 0.92. The missed attack paths can be traced back to our usage of simple paths during the attack path creation. For simplicity and performance reasons, the attack paths are loopless and do not contain duplicates. However, in the missed cases, it would be necessary to have loops to get the required credentials. For instance, in the maintenance scenario, the attack path from the TerminalServer would require one self-loop to get the necessary credentials. Results and Discussion Scalability. Figure 4 illustrates the scalability results. The horizontal axis shows the number of resource containers and the vertical axis shows the runtime in ms. The blue line with circles is the graph creation and the red line with the boxes is the path ﬁnding. Both axes use a logarithmic scale. The runtime of both functions is very close together. For 10 elements, the graph creation needs around 26 ms and the path ﬁnding around 42 ms. It then slowly increases till around 103 elements with 597 ms (graph creation) and 693 ms (path ﬁnding). From there, the runtime grows longer until it takes around 5.7 × 106 ms (graph creation) and 5.6 × 106 ms (path ﬁnding) for 105 elements. This summarizes to a runtime of around 3 h. The scalability behavior is not ideal. However, the runtime should still be suﬃcient for the usage in daily analysis runs. In addition, the model sizes with 105 elements are quite high. Usually, the model sizes are smaller. Even in bigger architectures like in IoT environments, the architecture can be reduced by grouping similar elements, for instance, when there are groups of sensors connected to the same backend.  
   
  Identifying Potential Security Incidents  
   
  49  
   
  Fig. 4. Scalability results for increasing number of resource containers  
   
  Threats to Validity. We structure our threats to validity on the guidelines for case study validity from Runeson and H¨ ost [22]. Internal Validity is that only the expected factors inﬂuence the results. Our evaluation depends on the modeled system as input and the results reﬂecting modeled properties. Especially since we also manually created the reference output. We tried to lower the risk by using real-world breaches and literature to create the reference output. For the scalability, other factors, such as the general system usage, could aﬀect the runtime. To avoid this, we repeated the experiment 5 times and ran it on a separate VM. We used multiple real-world breach and research scenarios in our evaluation to ensure the External Validity of our results. While we modeled systems are small, we covered all relevant model elements for our extension and analysis features. While scalability may vary with diﬀerent architectural elements, our internal handling of elements should produce similar results. Construct Validity is about the validity of the investigated properties for the intended goal. In our case, the properties are the metrics, and the goal is the evaluation goals. To lower the threat, we used the GQM approach, which illustrates the connection between goals and metrics. For accuracy, we use precision, recall and F1. These metrics are often used to describe the accuracy in diﬀerent related architectural approaches such as [25,33]. Therefore, we assume the metrics to be appropriate and the risk to be low. The scalability metric is a simple runtime metric and similar metrics are used in related approaches, such as [20]. Reliability discusses how reproducible the results are by other researchers. We use metrics to answer our evaluation question, avoiding subjective interpretation and increasing reproducibility. Besides the metrics, we also provide a dataset [35] for others to verify the results.  
   
  50  
   
  M. Walter et al.  
   
  Limitations. Our approach requires an architecture model and the manual creation of the vulnerability model. Our approach can identify attack paths only based on known vulnerabilities. In addition, it can only be used to identify mitigation locations, but does not support advanced mitigations, such as trusted execution environments. While we already consider the involvement of third parties in our ﬁlter, the actual attack calculation does not consider it besides in the ﬁltering.  
   
  5  
   
  Related Work  
   
  We divided the related work in the section of Policy Analysis, Model-based Confidentiality Analysis and Attacker Modeling. Policy Analysis. Our approach analyzes access control policies to estimate the necessary credentials for an attacker. Other approaches can consider various other policy quality aspects. One policy analysis approach is Margrave [8], which can calculate change impact on policies. Another policy analysis is Turkmen et al. [30], which uses SMT internally to analyze policies for diﬀerent properties, such as change impact and attribute hiding. In summary, all the approaches mentioned focus on policy analysis, not attack propagation. Model-driven Security Analyses. Our approach uses model-driven concepts for generating the attack paths. UMLSec [13] extends UML with security properties. It adds diﬀerent analysis types, such as secure communication link, fair exchange, and conﬁdentiality. Additionally, they include an attacker model for checking the security requirements. In contrast, our approach focuses on the attack path generation. Another UML extension for security is SecureUML [17]. They focussed on access control. So far, they do not support attack propagation or attack path generation. There exist various approaches which analyze information ﬂow or access control based on some model, such as SecDFD [29], and Data-centric Palladio [25]. In contrast, both use dataﬂow deﬁnitions, but do not consider attack paths calculation. Attacker-related approaches are the Sparta approach [27], Berger et al. [4] or Cyber Security Modeling Language (CySeMoL) [28]. The ﬁrst two are dataﬂow analyses in threat detection. In contrast to our approach, these focus on single threat detection and not combining diﬀerent vulnerabilities/threats to attack paths. CySeMoL [28] calculates potential attack paths but does not use a ﬁne-grained access control system. Attacker Modeling. Schneier [23] introduced the idea of attack trees, which are used in many approaches to model attacker behavior [16]. Polatidis et al. [20] present an approach for attack path generation. Other approaches are, for instance, Aksu et al. [1] and Yuan et al. [36]. In contrast to our approach, all the mentioned approaches use a network layer perspective instead of a componentbased software architecture and do not consider ﬁne-grained access control policies.  
   
  Identifying Potential Security Incidents  
   
  6  
   
  51  
   
  Conclusion  
   
  We proposed an approach for generating potential attack paths to a targeted architectural element. Our presented metamodel extension enables architects to model ﬁltering options for attack paths and specify targeted elements. In contrast to Walter et al. [33], our attack analysis provides multiple attack paths to the targeted elements and can remove non-relevant paths by using the ﬁlter options. The evaluation indicates that our approach can ﬁnd in several scenarios attack paths with high accuracy and for smaller systems within a reasonable time. Our approach can help to identify potential weak spots in the software architecture. Software architects can use this information to add mitigation mechanisms to harden the system and prevent attacker propagation. In the future, we want to investigate the problem with the missing attack paths in the evaluation. Additionally, we want to consider mitigation approaches and combine the approach with dataﬂow analyses similar to [34]. Acknowledgement. We like to thank Jonathan Schenkenberger, who helped to implement this approach during his Master’s thesis.  
   
  References 1. Aksu, M.U., et al.: Automated generation of attack graphs using NVD. In: Proceedings of the Eighth ACM Conference on Data and Application Security and Privacy (CODASPY), pp. 135–142. ACM (2018) 2. Alhebaishi, N., et al.: Threat modeling for cloud data center infrastructures. In: Foundations and Practice of Security, pp. 302–319 (2016) 3. Basili, G., et al.: The goal question metric approach. Encyclopedia of Software Engineering (1994) 4. Berger, B.J., Sohr, K., Koschke, R.: Automatically extracting threats from extended data ﬂow diagrams. In: Caballero, J., Bodden, E., Athanasopoulos, E. (eds.) ESSoS 2016. LNCS, vol. 9639, pp. 56–71. Springer, Cham (2016). https:// doi.org/10.1007/978-3-319-30806-7 4 5. CVE. https://cve.mitre.org/. Accessed 11 Jan 2022 6. CVSS SIG. https://www.ﬁrst.org/cvss/. Accessed 11 Jan 2022 7. CWE. https://cwe.mitre.org/. Accessed 11 Jan 2022 8. Fisler, K., et al.: Veriﬁcation and change-impact analysis of access-control policies. In: International Conference on Software Engineering 2005, p. 196 (2005) 9. Hamilton, B.A.: Industrial Cybersecurity Threat Brieﬁng. Tech. rep., p. 82 10. Heinrich, R., et al.: Architecture-based change impact analysis in cross-disciplinary automated production systems. JSS 146, 167–185 (2018) 11. ISO: Information technology. en. Standard ISO/IEC 27000:2018, Geneva, CH (2018) 12. Johns, E.: Cyber Security Breaches Survey 2021: Statistical Release (2021) 13. J¨ urjens, J.: UMLsec: extending UML for secure systems development. In: J´ez´equel, J.-M., Hussmann, H., Cook, S. (eds.) UML 2002. LNCS, vol. 2460, pp. 412–425. Springer, Heidelberg (2002). https://doi.org/10.1007/3-540-45800-X 32 14. Katkalov, K.: Ein modellgetriebener Ansatz zur Entwicklung informationsﬂusssicherer Systeme. doctoral thesis, Universit¨ at Augsburg (2017)  
   
  52  
   
  M. Walter et al.  
   
  15. Kirschner, Y.R., et al.: Automatic Derivation of Vulnerability Models for Software Architectures. In: IEEE 20th International Conference on Software Architecture Companion (ICSA-C), pp. 276–283 (2023) 16. Kordy, B., et al.: DAG-based attack and defense modeling: don’t miss the forest for the attack trees. Comput. Sci. Rev. 13–14, 1–38 (2014) 17. Lodderstedt, Torsten, Basin, David, Doser, J¨ urgen.: SecureUML: a UML-based modeling language for model-driven security. In: J´ez´equel, Jean-Marc., Hussmann, Heinrich, Cook, Stephen (eds.) UML 2002. LNCS, vol. 2460, pp. 426–441. Springer, Heidelberg (2002). https://doi.org/10.1007/3-540-45800-X 33 18. OWASP Top Ten Web Application Security Risks — OWASP. https://owasp.org/ www-project-top-ten/. Accessed 11 Jan 2022 19. Plachkinova, M., Maurer, C.: Security breach at target. J. Inf. Syst. Educ. 29(1), 11–20 (2018) 20. Polatidis, N., et al.: From product recommendation to cyber-attack prediction: generating attack graphs and predicting future attacks. Evolving Syst. 11(3), 479– 490 (2020) 21. Reussner, R., et al.: Modeling and Simulating Software Architectures - The Palladio Approach. MIT Press, Cambridge (2016). isbn: 9780262034760 22. Runeson, P., H¨ ost, M.: Guidelines for conducting and reporting case study research in software engineering. Empirical Softw. .ineering 14(2), 131 (2008) 23. Schneier, B.: Attack trees. Dr. Dobb’s J. 24(12), 21–29 (1999) 24. Securing the Software Supply Chain: Recommended Practices Guide for Developers, p. 64. Cybersecurity and Infrastructure Security Agency (CISA) (2022) 25. Seifermann, S., et al.: detecting violations of access control and information ﬂow policies in data ﬂow diagrams. J. Syst. Softw. 184, 111138 (2021) 26. Shu, X., et al.: Breaking the Target: An Analysis of Target Data Breach and Lessons Learned. arXiv:1701.04940 [cs] (2017) 27. Sion, L., et al.: Solution-aware data ﬂow diagrams for security threat modeling. In: Symposium on Applied Computing, pp. 1425–1432. ACM (2018) 28. Sommestad, T., et al.: The cyber security modeling language: a tool for assessing the vulnerability of enterprise system architectures. IEEE Syst. J. 7(3), 363–373 (2012) 29. Tuma, K., et al.: Flaws in ﬂows: unveiling design ﬂaws via information ﬂow analysis. In: International Conference on Software Architecture, pp. 191–200 (2019) 30. Turkmen, F., den Hartog, J., Ranise, S., Zannone, N.: Analysis of XACML policies with SMT. In: Focardi, R., Myers, A. (eds.) POST 2015. LNCS, vol. 9036, pp. 115– 134. Springer, Heidelberg (2015). https://doi.org/10.1007/978-3-662-46666-7 7 31. Van Rijsbergen, C., and Van Rijsbergen, C.: Information Retrieval. Butterworths (1979). isbn: 9780408709293 32. Walter, M., and Reussner, R.: Tool-based attack graph estimation and scenario analysis for software architectures. In: European Conference on Software Architecture 2022 Tracks and Workshops (accepted, to appear) 33. Walter, M., et al.: Architectural attack propagation analysis for identifying conﬁdentiality issues. In: International Conference on Software Architecture (2022) 34. Walter, M., et al.: Architecture-based attack propagation and variation analysis for identifying conﬁdentiality issues in Industry 4.0. at - Automatisierungstechnik 71(6), 443–452 (2023) 35. Walter, M., et al.: Dataset: Architecture-based Attack Path Analysis for Identifying Potential Security Incidents. https://doi.org/10.5281/zenodo.7900356  
   
  Identifying Potential Security Incidents  
   
  53  
   
  36. Yuan, B., et al.: An attack path generation methods based on graph database. In: 2020 IEEE 4th Information Technology, Networking, Electronic and Automation Control Conference (ITNEC), pp. 1905–1910 (2020)  
   
  Carving Sustainability into Architecture Knowledge Practice Markus Funke(B)  
   
  and Patricia Lago  
   
  Vrije Universiteit Amsterdam, Amsterdam, The Netherlands [email protected]  Abstract. In the daily work of a software architect, knowledge is ubiquitous. In addition to technical expertise, architecture knowledge (AK) also requires practical experience in the representation, communication, and management of architectural decisions. However, there is a pressing need to also incorporate sustainability aspects, i.e., capturing decisions towards software systems that are environmentally, economically, and socially balanced in the long term. With this study, we aim to provide a review of AK concepts and their representation and communication from a practical point of view. Having this understanding, we explore where sustainability can be applied in daily practice and how we can address sustainability in architecture processes in the future. The paper presents an empirical study conducted in an industrial context encompassing a questionnaire survey with 32 participants and semi-structured interviews with 15 practitioners; both groups are from a major bank in the Netherlands. Based on the insights gained from combining our ﬁndings, we (i) provide a map of applied concepts for communicating and representing AK in a large enterprise, and (ii) discuss potential avenues for carving sustainability into current software architecture practice.  
   
  We thank the architects participating in this survey; Antony Tang, John Klein, and Rich Hilliard for discussions on current state-of-research; and Haben Birhane Gebreweld for executing the questionnaire survey. c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 54–69, 2023. https://doi.org/10.1007/978-3-031-42592-9_4  
   
  Carving Sustainability into Architecture Knowledge Practice  
   
  1  
   
  55  
   
  Introduction  
   
  Software Architecture entails the systematic organisation of various software components to construct a comprehensive system [13] and facilitate the reasoning about a given system [3]. In the present day, the life cycle of software has a holistic impact on an enterprise and thus demands consideration on multiple layers of its business operations. To preserve the reasoning and information about the overarching system across all layers, documentation is a crucial part [8]. It facilitates the documentation of knowledge during the design process, i.e., architecture knowledge (AK), enabling the recording of decisions for future reference and leveraging past experience to improve future decisions [1]. Although AK is a well-established ﬁeld in software engineering, the concept of sustainability has gained signiﬁcant attention only in recent times [4]. Software sustainability is a multidimensional concept that involves environmental, social, economic, and technical dimensions [17]. Despite the increasing attention given to sustainability, practitioners lack reusable guidelines and consolidated knowledge to integrate sustainability into their daily work [16]. We aim to highlight the critical role of AK across all diﬀerent layers of architecture and propose the incorporation of software sustainability into existing AK methods. This integration contributes to achieving sustainable development goals. Following the problem statement we need to bridge the gap between isolated techniques for software sustainability and their application in professional practice. First, we need to know the state-of-practice of software AK and how professionals understand and already support sustainability in their daily work. With these insights, we can either improve current practice on AK or propose recommendations to incorporate sustainability. By combining our ﬁndings from an extensive survey in a major bank in the Netherlands encompassing a questionnaire with 35 practitioners and 15 semi-structured interviews, our main contributions of this research are twofold: (i) we provide an overview of applied AK concepts in a large organisation; (ii) we use this understanding to discuss recommendations for applying sustainability. In the remainder of this section we ﬁrst provide the background; then we discuss related studies. In Sect. 2 we outline our study goal and describe the applied methodology. Section 3 presents the main ﬁndings which are then discussed in Sect. 4. Threats to validity are examined in Sect. 5, while Sect. 6 closes this paper. 1.1  
   
  Background  
   
  Architecture Knowledge. Throughout this study, we use the deﬁnition of AK according to Kruchten et al. [12] as: Architectural knowledge consists of architecture design as well as the design decisions, assumptions, context, and other factors that together determine why a particular solution is the way it is.  
   
  56  
   
  M. Funke and P. Lago  
   
  Additionally, in our work we particularly highlight the distinction between AK representation and AK communication. The former, AK representation, aims at capturing and preserving knowledge in a certain form. While the latter, AK communication, describes how the knowledge is disclosed between involved stakeholders. Figure 1 depicts our view on the interaction of the AK artifacts as a mental model. We can observe that various AK representation methods express AK. Such representation identiﬁes multiple stakeholders by capturing their concerns and interests in the particular knowledge. While stakeholders have a certain interest in the AK, they acquire the knowledge by using certain communication methods.  
   
  Fig. 1. Architecture knowledge mental model - Process view  
   
  We can compare our mental-model with the diﬀerent “AK management philosophies” deﬁned by Ali Babar et al. [1]. The authors diﬀerentiate between “explicit and tacit knowledge” and between “application-generic and application-speciﬁc knowledge”. While this view can be considered as the knowledge view, i.e., from the knowledge perspective, we deﬁne our AK mental model as the process view, i.e., from the stakeholder perspective. The knowledge view illustrates how the knowledge itself moves within the diﬀerent categories; our process view, instead, illustrates how the knowledge is utilised by the actual stakeholders. This view emphasises the utilisation of AK in an industrial context and is considered throughout the rest of our study. Software and Sustainability. The need for addressing sustainability in architecture has led to various approaches, techniques, and tools for designing [14,15], evaluating [10], and improving [20] the sustainability of software systems. To the best of our knowledge, however, those emerging approaches appear in isolation without consideration of embedding them in industrial practice. When we call for balanced sustainability in software architecture, we seek to achieve a harmonious and equitable consideration of the four sustainability dimensions [17] into the design and development of software systems. We recognise that software is a multi-faceted concept which requires a construct of inter-dimensional trade-oﬀs. Those trade-oﬀs demand to be considered at design time, i.e., in software architecture, to align the software with sustainability goals.  
   
  Carving Sustainability into Architecture Knowledge Practice  
   
  1.2  
   
  57  
   
  Related Studies  
   
  There are few studies that examine the use of AK in professional practice. Malavolta et al. [18] consider architecture modeling languages (AL) as representation tool for AK and conduct a study on the strengths and limitations of these languages by surveying 49 practitioners and identifying their needs and requirements for future AL. Our study goes beyond AK representation and also examines AK elements and communication methods. In facing AK from the knowledge management perspective (AKM) [1], Capilla et al. [5] determine what industry needs by analysing state-of-the-art AKM tools. The authors raise questions identifying barriers for using those tools and documenting architecture in practice. Even though the focus of this research relies on AKM tools, we are able to build up on this research and reuse for instance certain interview questions for our work. Dasanayake et al. [7] conduct a case study in an industrial setting to investigate how architecture decisions are made in practice and to improve the decisionmaking process. The study entails 10 interviews in three companies, revealing that the experts do not follow a systematic approach. The study also ﬁnds that the practitioners are willing to adopt lightweight solutions to enhance their decision processes. While the study partially aligns with our goal of comprehensively embracing the entire AK process, it primarily focuses on decision-making. The studies discussed above have made partial contributions to our research, but none of them have speciﬁcally aimed to incorporate sustainability into current practice using AK. Andrikopoulos et al. [2] conduct a systematic mapping study to explore software architecture together with sustainability and ﬁnd that current research has neglected the holistic viewpoint by focusing on particular sustainability-related dimensions. Lago et al. [16] conduct a more practical study by examining the needs of both researchers and practitioners regarding “architecting for sustainability”. The study uncovers barriers to implement sustainability, such as the lack of understanding among practitioners on how to translate sustainability into their own work.  
   
  2  
   
  Methodology  
   
  To encourage reproducibility and enhance the reliability of our results, we provide an online replication package1 containing the anonymized data and results related to this paper. 2.1  
   
  Study Objective and Questions  
   
  The goal of this study is twofold. First, we want to provide a review to software architects and the research community about AK and its representation and communication in an industrial context. This understanding helps us in our second goal, i.e., to explore where and how sustainability can be addressed in the future. We identify two main research questions (RQs) and three sub-questions: 1  
   
  Replication package: https://github.com/S2-group/ECSA23-AKCR-rep-pkg.  
   
  58  
   
  M. Funke and P. Lago  
   
  RQ1 How is AK represented and communicated in practice? RQ1.1 What are the elements that are represented and communicated? RQ1.2 How is architecture knowledge represented? RQ1.3 How is architecture knowledge communicated? We investigate current professional practice about AK by executing our research together with a major bank in the Netherlands. The industrial context helps us in creating a holistic view on what the state-of-practice is regarding AK. We create a map of a large enterprise and their AK elements (e.g., decisions and principles), representation methods (e.g., diagrams and viewpoints), and communication practices (e.g., corporate platforms and workshops). This helps us in understanding the daily work of architects. RQ2 How can sustainability aspects be represented and communicated in software architecture? Building upon the practical insights about AK identiﬁed in RQ1 we are able to propose recommendations on how sustainability can be incorporated into daily practice. Based on the additionally uncovered impediments we can establish the current needs in order to achieve balanced sustainability. 2.2  
   
  Study Design  
   
  To answer our RQs, we organize our research process in four steps (see Fig. 2). Exploratory Review. In Step (1) we build the necessary understanding about architecture documentation, representation, communication, and AK in general. We talk to three researchers in the ﬁeld of AK. We enrich those insights by consulting background literature and books (e.g., [1,3,6]). This understanding helps us in the subsequent steps to bootstrap our qualitative research.  
   
  Fig. 2. Study Design  
   
  Questionnaire Survey. In Step (2) we construct a series of questions to operationalize our RQs. The questions are related to AK practices, supplemented with commonly used demographic questions. The questionnaire comprises 34 questions in total. With 24 open questions and the rest as guiding and closed questions, we facilitate a candid expression of our participants’ unique experiences. The survey guide can be found in the replication package.  
   
  Carving Sustainability into Architecture Knowledge Practice  
   
  59  
   
  Following the design, we ﬁrst execute a pilot survey with ﬁve experts to check the quality of the survey and eliminate potential pitfalls. Then, we determine the main population. Based on the objectives of our research, we determine software architects and similar roles (e.g., domain architects, cloud architects, etc.) as our target population. Based on an internal mailing list and the team leads we generate a draft list of 145 architects. After eliminating redundant names and removing the architects needed for an extensive interview in Step (3) we arrive at a population with 124 architects. The survey is conducted using Qualtrics2 and designed to be anonymous to alleviate concerns about judgment or consequences. We reach out to the 124 architects via email and received 45 (39 %) survey responses. After removing the 13 responses that refused consent or dropped after completing the demographics part, the total population counts 32 architects (N = 32). Interview Survey. The aim of Step (3) is to gain in-depth insights from the experts and follow up on the results from the questionnaire. Again, the complete interview guide can be found online. The interview comprises 21 questions in total, all of them designed as open-questions. Most questions are adopted from the questionnaire survey. However, some questions are combined to better ﬁt in an interview setting. It is accepted and especially appreciated if the interview ﬂow lead to other questions or guides the discussion into other directions. The interviewees are selected following purposeful sampling based on two conditions: (i) interviewee has a leading role in the organisation, e.g., manager or head-of, and (ii) interviewee is not part of the questionnaire survey. The leading role allows us to ask more detailed questions of the representatives of an entire group of architects. Further, we do not only select software architects, but rather a broader range of architects including architects with a higher level focus, e.g., enterprise architects or business architects. In total we contacted 21 practitioners, and 15 accepted our invitation (N = 15). To determine the length and ﬂow of the interview, we use three experts as pilots. These are included in our ﬁnal data set as the structure and questions did not change and only a few questions were improved in terms of phrasing. Synthesis and Reflection. To understand the current practice of AK and uncover potential hooks for sustainability, the ﬁnal Step (4) synthesises the data gained from both the questionnaire and the interviews. Data collection and organisation. As the questionnaire is executed online, the collected data is exported automatically into spreadsheets. The answers are not edited. In contrast, all interviews are conducted virtually via Microsoft Teams, audio recorded, and transcribed. The transcriptions are cleaned from emotions and mumbled speech. Coding and Vertical Analysis. The questionnaire data are pre-coded per question. Those results are used in preparation for the in-depth interviews, e.g., in form of follow-up questions. As both the questionnaire spreadsheets and the interview transcripts follow a similar structure, they are coded together by the ﬁrst author and validated by the second author following coding techniques for 2  
   
  QualtricsXM: https://www.qualtrics.com.  
   
  60  
   
  M. Funke and P. Lago  
   
  qualitative data analysis [19]. We start with an initial set of coding categories derived by the RQs (i.e., provisional coding [19]), which are then revised and/or extended (i.e., open coding [19]). We use ATLAS.ti3 as qualitative data analysis tool. The output of this step are the results in Sect. 3. We structure our results according to the identiﬁed themes, codes, and sub-codes as shown in Table 2. Horizontal Analysis and Reﬂection. To gain further insights from the data, we investigate the responses across our two RQs via horizontal analysis [9]. Our goal is to merge the insights related to AK with those regarding sustainability, and identify potential avenues and gaps for addressing sustainability in AK practice. We reﬂect on our results by organising all ﬁndings in one comprehensive table. The table contains the results from the coding and vertical analysis and the emerged insights from the horizontal analysis. Insights are then turned into recommendations and discussed in several brainstorming sessions between the researchers. To ﬁnd further practical connections or insights, we additionally discuss this set of recommendations together with two experts from our industrial partner in two informal meetings; one expert related to the higher level of architecture (i.e., Lead of Senior Architects) and one related to the lower level of architecture (i.e., Domain Architect). We summarise our results from this ﬁnal step in our Discussion in Sect. 4.  
   
  3  
   
  Main Findings and Results  
   
  As in our study design outlined, the coding procedure is identical for both the interviews and the questionnaire survey. After saturation, four themes emerged with 12 codes in total (cf. Table 2). Each code has several sub-codes with more granular results. The complete code-book is available in the replication package. Due to space restrictions, we present and analyse the top sub-codes selected based on their highest frequency - if applicable. The given frequencies indicate the population who answered a certain question. Not all participants responded to every item in the survey. Items may have been left empty or ﬁlled with blanks because the expert was reluctant to answer, did not understand it, or had personal time constraints. If a substantial proportion of respondents did not answer a question, this is mentioned in our analysis. All results and frequencies refer to the data from both interviews and questionnaire; only when signiﬁcant, we distinguish between the two. 3.1  
   
  Demographics  
   
  The demographics of our participants is outlined in Table 1. Our entire population comprises 47 participants with 32 from the questionnaire survey and 15 from the interviews. As outlining all diﬀerent job titles would not reveal strong insights due the variety of titles in a large enterprise, we clustered the participants into either high-level or low-level architecture. The former, high-level, 3  
   
  ATLAS.ti: https://atlasti.com.  
   
  Carving Sustainability into Architecture Knowledge Practice  
   
  61  
   
  includes jobs like Enterprise-, Business-, or Governance Architect; all operating towards the strategic level of architecture. The latter, low-level, includes roles like Solution-, Domain-, or Data Architect; all operating towards the operational level of architecture. For the interviews, we sought balance to complement the questionnaire with its majority on the low-level. We acknowledge that the highlevel architecture has a substantial inﬂuence on the low-level. Thus, we aim to complement our insights from both levels. We notice that 42 participants (89%) have engaged in software projects for more than 10 years, with their experience ranging from 11 to 41 years. This suggests that the results obtained were derived from experts who possess extensive and valuable experience gained from a long industrial career. With working for the same company of more than 17 years on average (arithmetic mean), we guarantee that the majority of the experts have profound understanding of the processes in their organisation, leading us to reliable results. Table 1. Demographics of participants. I = Interview; Q = Questionnaire; Σ = Summation of Interview and Survey Participants; years = Arithmetic mean  
   
  (a) Architecture Level Level  
   
  I  
   
  Q  
   
  Σ  
   
  High-Level 7 Low-Level 8  
   
  5 27  
   
  12 35  
   
  3.2  
   
  (b) Experience in software  
   
  (c) Experience in current organisation  
   
  Years  
   
  I  
   
  Q  
   
  Σ  
   
  Years  
   
  I  
   
  Q  
   
  Σ  
   
  1-5 6 - 10 11 - 20 21 - 30 31 - 41  
   
  1 1 3 7 3  
   
  0 3 10 8 11  
   
  1 4 13 15 14  
   
  1-5 6 - 10 11 - 20 21 - 30 31 - 41  
   
  3 2 6 3 1  
   
  6 8 3 9 6  
   
  9 10 9 12 7  
   
  years  
   
  23.5  
   
  24.4  
   
  24.1  
   
  years  
   
  15.3  
   
  18.0  
   
  17.1  
   
  Architecture Knowledge Elements  
   
  Most participants provided deﬁnitions that reﬂected our understanding of AK. However, a few participants shared unique perspectives: “Skills to guide a particular solution landscape in a certain context. This is not a library: it is ﬂuid and keeps developing with every problem I address. Because I have been doing this for a long time, books and trainings are hardly needed, unless big new innovations [...]” (Q ID-31) Besides the general understanding of AK, our interest is especially focused on what kind of knowledge elements the experts keep in their professional context and if they could think of any elements which would support their daily work. Elements. While the majority referred to well known elements as part of their daily work, i.e., (i) architecture design decisions, (ii) standards and guidelines, and (iii) principles, we also found the blueprint (n = 11) mentioned as a driving”element”. Although we have not considered this as a separate element,  
   
  62  
   
  M. Funke and P. Lago Table 2. Results clustered by themes, codes, and sub-codes (extract)  
   
  Carving Sustainability into Architecture Knowledge Practice  
   
  63  
   
  as it implies the entire architecture design [3], it is worth mentioning that the design is treated as a holistic AK element by the experts. Impediments. It appears that there might be a demand (n = 16) for a better link beyond the speciﬁc architecture documents to (i) the other architecture levels, (ii) the business itself, and (iii) the broader context. We identify that as a need for developing new AK elements that better capture the context and link various architecture views to various stakeholders and the business. “[...] we tend to develop views that are understood by architects (which gives grip on the architecture), but less meaningful for (other) stakeholders, linking architecture views to (non architectural) views of diﬀerent stakeholders is now lacking. We tend to speak our own language and not the language of diﬀerent stakeholders.” (Q ID-4) In our interviews we tried to better understand this need. We found that indeed, only on the higher level of architecture documents, there are elements (e.g., diagrams) that explicitly outline the relationship to the business models. At the lower level this connection is not made explicit and the link to the underlying system architecture is lost. “If we distinguish enterprise architecture and domain architecture what we have in the bank, and then also the lower level [...] system architecture, that linkage is missing. [...] what I would suggest is that we co-create the domain architecture also with the system architecture. So, certain chapters in the template would be created from the domain architect, while others would be created from the system architect. This would lead to one joint-deliverable and enable collaboration” (I ID-10) 3.3  
   
  Architecture Knowledge Representation  
   
  Methods. Not surprisingly, 45 experts (95%) referred to architecture description templates and 34 (72%) to diagrams as their method to represent AK. However, most of the experts used their corporate synonyms to refer to a template. For instance, the professionals distinguish between Solution Intents to describe the actual change and architecture of an intended solution on the low-level; and Future State Architecture to represent the envisioned state incorporating strategic goals on the high-level. Nevertheless, all documents are based on one common template. Interestingly, only ﬁve experts mentioned views and viewpoints. Recent emerging methods such as Architecture Description Records (ADRs)4 or C4-model5 haven been mentioned only once. Standards. Highly related to the methods are standard notations and languages to represent AK. ArchiMate6 was mentioned 32 times (72%) as standard architecture modeling language. However, at the same time, especially during the interviews, we also recognised impediments regarding ArchiMate: 4 5 6  
   
  ADRs: https://cognitect.com/blog/2011/11/15/documenting-architecture-decisions. C4-model: https://c4model.com. ArchiMate: https://www.opengroup.org/archimate-forum/archimate-overview.  
   
  64  
   
  M. Funke and P. Lago  
   
  “The point with ArchiMate is it’s not easy to understand for people who don’t know the notation [...] I think the knowledge of ArchiMate is really decreasing in the organization [...]” (I ID-06) The experts mentioned also methods which cannot be considered as standards (n = 9) such as PowerPoint or “Diagram.net” diagrams. This underlines the deep integration of “boxes-and-lines” tools into the daily work. Impediments. We uncovered that the architecture is currently not consistently represented and captured throughout the bank. This conclusion derives from contradicting results: 19 experts (40%) answered our question about consistency with no, while 23 (48%) answered with yes. When diﬀerentiating between architecture layers, only 16% of high-level architects report a lack of complete consistency across the organisation, while nearly 50% of low-level architects aﬃrm or deny this, respectively. This might be an indicator that the high-level architects are not aware of the lack in consistency on the lower-levels. However, we do also acknowledge the ﬂuid transition between the layers which is in line with the ﬁndings from Capilla et al. [5] that consistency in AK is context dependent. 3.4  
   
  Architecture Knowledge Communication  
   
  Methods. Similar to the results of AK representation methods, the discovered methods in AK communication are in line with our understanding on how AK is communicated. While 26 experts (55%) use their corporate repositories (e.g., Microsoft SharePoint or Conﬂuence) as main communication tool, the majority mentioned face-to-face knowledge exchange in form of scheduled or informal meetings as well as meetings in a workshop setup. The Architecture Review Board (ARB) is used to evaluate all architecture description documents and assess how well they conform to the company’s fundamental principles. We consider the ARB as a central communication element since the knowledge represented and captured in the documents is complemented with tacit knowledge during the review sessions. Stakeholders. Overall we got diverse answers regarding the stakeholders the architects have to communicate their knowledge. The responses vary from product owner or managers to people who build the architecture, the DevOps team, or the platform team. However, if we consider the role of our expert and match the named roles to their level, in 74% of the cases we observe that it is always “the level below you, and the level above you” (I ID-04). This conclusion conﬁrms the results from Kruchten [11] as they see the architecture role as “communication bridge” between diﬀerent levels. Impediments. While we did not encounter any signiﬁcant obstacles in the communication process, a subset of experts (n = 6) expressed the concern AK may be scattered across various repositories. Although only a small number of participants (n = 4) reported implicit tacit knowledge, it may still pose a challenge due to the frequent reliance on face-to-face communication as a primary instrument for sharing information.  
   
  Carving Sustainability into Architecture Knowledge Practice  
   
  3.5  
   
  65  
   
  Sustainability  
   
  Definition. Among respondents, 25 linked environmental factors (e.g., energy eﬃciency) and 21 linked technical factors (e.g., longevity) to IT sustainability. Thirteen experts connected sustainability directly to economic costs. These ﬁndings highlight an imbalanced perspective and limited understanding of the sustainability dimensions. The participants tend to focus either on single dimensions or merge concerns from diﬀerent dimensions. “[...] reducing footprints, reducing energy, reducing the use of resources in general - almost equals to reducing costs.” (I ID-07) Daily Work. Nineteen experts expressed a personal interest in IT sustainability and intrinsic motivation to address it in their daily work. We reached that conclusion based on participants’ missing awareness about strategic targets pertaining sustainability (n = 28), coupled with frequent mentions (n = 25) of sustainability practices in their daily tasks (e.g., selecting energy-eﬃcient solutions during the design process or incorporating quality attributes regarding sustainability). “I do something from an intrinsic motivation. So how can I from a data management perspective contribute to the sustainability agenda of [anonymised], maybe the IT sustainability agenda as well?” (I ID-17) Interestingly, 15 respondents reported that they did not consider sustainability in their daily work; however, they later mentioned some sustainability-related tasks in their professional routine. The incorporation of sustainability aspects contradicts their awareness of sustainability. This indicates a possibly-unconscious consideration of sustainability. Where and How to inject? We also leveraged the participants’ experience to understand where and how sustainability could be considered in their daily work. While 11 architects suggest that sustainability should be integrated into the low-level, i.e., the solution design, 10 experts consider the high-level as the right starting level, i.e., enterprise architecture. The most frequent answer regarding the how was to embed sustainability into the architecture description templates, i.e., the Solution Intent. “In the solution intent by using quality attributes. I see sustainability as an aspect of the solution, like security” (Q ID-12) Impediments. The majority of experts (59%) are not aware of the sustainability targets in their organisation. This points to a problem in both representing and communicating the two strategic targets on all architecture levels: target (i) lower the Co2 footprint, and target (ii) circular IT assets. When asked what would be necessary or what hinders the experts in addressing sustainability, some respondents indicated missing guidance on how to leverage sustainability. This guidance should be either in form of concrete architecture guidelines and standards, tangible strategic goals, and a clear deﬁnition of what sustainability means. This reﬂects the ﬁndings from Lago et al. [16].  
   
  66  
   
  M. Funke and P. Lago  
   
  “We need to have some guidelines, what sustainability requirements we see as a bank or what we have as a bank. [...] So we would need some hooks.” (I ID-11)  
   
  4  
   
  Discussion  
   
  In the previous section, results give an overview of AK professional practice in a large-scale enterprise, which helps us achieve our ﬁrst research goal and answer RQ1. Building on these results, we now turn to our second goal. We conducted a horizontal analysis between RQ1 and RQ2 and identiﬁed a list of 14 recommendations. Due to space limitations, we discuss those ﬁve that have been prioritised in the two informal meetings (cf. Section 2.2). The complete list is available online. Each recommendation is labeled R-1 through R-5 and comes with a boxed example of a speciﬁc AK method and the equivalent application of sustainability. The example entails the “as-is” state describing the current situation in the bank7 ; the “to-be” state exempliﬁes our vision towards achieving sustainable architecture in current practice. All recommendations are grounded on the evidence found during the interviews and questionnaire. We link the recommendations to our ﬁndings presented in Sect. 3. R-1: Repositories contain architecture standards and guidelines developed at a high-level. These standards provide the necessary knowledge about speciﬁcations that solutions or documents must conform to, while guidelines represent the recommended course of action. This enables a valuable opportunity to also establish principles and guidelines related to sustainability to guide the architecture design process. We can reuse current practices and ensure that sustainability is not addressed unconsciously, while also providing the required guidance.  
   
  R-2: Given that AK is largely represented in templates and diagrams, we recommend utilizing these templates to add a new chapter dedicated to sustainability assessments and persistently storing sustainability knowledge. Initially, this chapter could include diagrams (e.g., [14]), a sustainability assessment (e.g., [15]), and the adherence to sustainability standards and guidelines (see R-1). By treating sustainability in the same manner as other important chapters such as security, it can be eﬀectively integrated into the architecture document. We acknowledge that adding a new chapter may increase the size of 7  
   
  The “as-is” states are based on real-world examples; however, they have been generalised to avoid disclosing sensitive information.  
   
  Carving Sustainability into Architecture Knowledge Practice  
   
  67  
   
  the template, but if sustainability is a part of a company’s strategy, it requires the same level of attention as other strategic concerns.  
   
  R-3: Given the importance of architecture design-decisions in the current AK practice, we propose capturing sustainability-related design-decisions.  
   
  R-4: Based on the current architecture process, it is crucial to address sustainability on all levels and translate individual requirements for each level. However, we face two challenges: (i) the need for new or revised AK elements to better connect the diﬀerent architecture levels, and (ii) the need for clear guidance on how to address sustainability throughout all levels. To make an immediate impact, we suggest a “bottom-up” approach, starting with the lowlevel, while also implementing a “top-down” approach on the high-level to ensure lasting eﬀects on future solutions.  
   
  R-5: Given the critical importance of understanding sustainability in general, we see the repositories currently used (e.g., Microsoft SharePoint) as an opportunity to provide experts with the necessary knowledge. Similar to the e-learning tutorials available on architecture, crucial information about sustainability can  
   
  68  
   
  M. Funke and P. Lago  
   
  also be communicated. This knowledge transfer is particularly important for members of the ARB, as it is the highest instance assessing new designs.  
   
  5  
   
  Threats to Validity  
   
  External Validity. To increase the adoption of our recommendations, we phrased them in a generic manner for potential reuse, dependent on the AK practices in other enterprises. To further improve the generality of our ﬁndings, we clearly describe the context and methodology of our study. Additionally, we selected a diverse population with an average of 24.1 years of experience in software projects and 17.1 years of experience in the company. We also asked participants if they were aware of any AK methods that were exclusively valid in their banking context, and the majority (n = 31) responded no. Based on this response and their long experience in software in general, we derive that our results are applicable and generally known beyond our speciﬁc context. Internal Validity. To ensure the validity of our survey ﬁndings, we acknowledge potential threats due to cultural diﬀerences, organizational culture, time and project pressure, and the design of the questionnaire. To address these issues, we carefully designed our survey guides based on existing literature and expert opinions, and conducted a pilot study to test the questions. Additionally, we collected data from multiple sources and triangulated the ﬁndings to ensure consistency and objectivity.  
   
  6  
   
  Conclusion  
   
  In this study, we combined the results from an extensive questionnaire and interview survey encompassing 47 architects on various architecture layers. We provided an extensive overview of current AK practice in the context of a major bank in the Netherlands. Based on those insights we propose concrete recommendations on how sustainability can be addressed and integrated. With those recommendations we contribute a major building block towards the overarching need: providing practical guidance on architecting software systems that are sustainable-balanced and creating awareness for a sustainability-aware architecture process in professional practice. In the future, we aim to ﬁrst deriving insights from other domains, and then apply our recommendations in a realworld setting using an action research approach, with the goal of contributing our ﬁndings to both the research community and practitioners.  
   
  Carving Sustainability into Architecture Knowledge Practice  
   
  69  
   
  References 1. Ali Babar, M., Dingsøyr, T., Lago, P., van Vliet, H.: Software Architecture Knowledge Management. Springer, Berlin Heidelberg (2009) 2. Andrikopoulos, V., Boza, R.D., Perales, C., Lago, P.: Sustainability in Software Architecture: A Systematic Mapping Study. In: 48th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), IEEE (2022) 3. Bass, L., Clements, P., Kazman, R.: Software Architecture in Practice, 4th edn. Sei Series in Software Engineering, Addison-Wesley (2021) 4. Calero, C., et al.: 5Ws of green and sustainable software. Tsinghua Sci. Technol. 25(3) (2020) 5. Capilla, R., Jansen, A., Tang, A., Avgeriou, P., Babar, M.A.: 10 years of software architecture knowledge management: Practice and future. J. Syst. Softw. 116, 191–205 (2016) 6. Clements, P., et al.: Documenting Software Architectures: Views and Beyond. SEI Series in Software Engineering, Addison-Wesley (2003) 7. Dasanayake, S., Markkula, J., Aaramaa, S., Oivo, M.: Software Architecture Decision-Making Practices and Challenges: An Industrial Case Study. In: 24th Australasian Software Engineering Conference, IEEE (2015) 8. Ding, W., Liang, P., Tang, A., van Vliet, H.: Knowledge-based approaches in software documentation: a systematic literature review. Inform. Softw. Technol. 56(6), 545–567 (2014) 9. Kasunic, M.: Designing an Eﬀective Survey. Carnegie-Mellon Univ Pittsburgh PA Software Engineering Inst, Tech. rep. (2005) 10. Koziolek, H.: Sustainability evaluation of software architectures: A systematic review. In: Proceedings of the Joint ACM SIGSOFT Conference and Symposium on Quality of Software Architectures and Architecting Critical Systems, ACM (2011) 11. Kruchten, P.: What do software architects really do? J. Syst. Softw. 81(12), 2413– 2416 (2008) 12. Kruchten, P., Lago, P., van Vliet, H.: Building Up and Reasoning About Architectural Knowledge. In: Quality of Software Architectures, vol. 4214, Springer, Berlin Heidelberg (2006) 13. Kruchten, P., Obbink, H., Staﬀord, J.: The Past, Present, and Future for Software Architecture. IEEE Software 23(2), 22–30 (2006) 14. Lago, P.: Architecture Design Decision Maps for Software Sustainability. In: 41st International Conference on Software Engineering: Software Engineering in Society (ICSE-SEIS), IEEE (2019) 15. Lago, P., Condori-Fernandez, N.: The Sustainability Assessment Framework. SAF) toolkit, Instruments to help sustainability-driven software architecture design decision making (2022) 16. Lago, P., Greefhorst, D., Woods, E.: Architecting for Sustainability. In: EnviroInfo (2022) 17. Lago, P., Ko¸cak, S.A., Crnkovic, I., Penzenstadler, B.: Framing sustainability as a property of software quality. Commun. ACM 58(10), 70–78 (2015) 18. Malavolta, I., Lago, P., Pelliccione, P., Tang, A.: What industry needs from architectural languages: a survey. IEEE Trans. Softw. Eng. 39(6) (2013) 19. Salda˜ na, J.: The Coding Manual for Qualitative Researchers. SAGE (2016) 20. Vos, S., Lago, P., Verdecchia, R., Heitlager, I.: Architectural Tactics to Optimize Software for Energy Eﬃciency in the Public Cloud. In: ICT4S, IEEE (2022)  
   
  Guidance Models for Designing Big Data Cyber Security Analytics Systems Faheem Ullah(B) and Muhammad Ali Babar The Centre for Research on Engineering Software Technologies, The University of Adelaide, Adelaide, Australia {faheem.ullah,ali.babar}@adelaide.edu.au  
   
  Abstract. Big Data Cyber Security Analytics (BDCA) systems leverage big data technologies to collect, store, and analyze a large volume of security event data for detecting cyber-attacks. Architecting BDCA systems is a complex design activity, which involves critical decisions about the selection of architectural tactics for the satisfaction of various quality goals. Software architects need to consider associated dependencies, constraints, and impact on quality goals, which makes the design process quite challenging. To facilitate the design process, we propose guidance models for supporting the systematic design of BDCA systems. The guidance models facilitate architects to map functional and non-functional requirements for BDCA systems to a set of architectural tactics. Keywords: Security · Big Data · Architectural Tactic · Design  
   
  1 Introduction The amount of digital data produced is enormously increasing with around 41 Zettabytes data created in 2019 (as compared to 2 Zettabytes in 2010), which is expected to reach 149 Zettabytes in 2024 [1]. Such an enormous growth in data generation has fueled the role of big data technologies (e.g., Hadoop and Spark) in various domains such as healthcare, business analytics, and smart environments. Like other domains, the traditional systems in cyber security (such as Intrusion Detection System (IDS) and malware detector system) are unable to cope with the increasing volume, velocity, and variety of security event data (e.g., NetFlows) [2]. For example, an organization as large as HP generates around 1 trillion security events per day and a continuous network traffic of merely 1 Gbps can make an IDS obsolete [2]. Therefore, these traditional systems are supported with big data technologies, which has given birth to Big Data Cyber Security Analytics (BDCA) systems. A BDCA system is defined as “A system that leverages big data tools for collecting, storing, and analyzing a large volume of security data to protect organizational networks, computers, and data from unauthorized access, damage, or attack”’ [3]. The growing interest in BDCA systems motivated us systematically review and synthesize the State-of-the-Art (SOTA) architectures for BDCA systems [3], which revealed several useful findings: (i) a set of architectural tactics that are used to achieve different quality goals (e.g. response time) (ii) the tactics have associated constraints and impacts © The Author(s), under exclusive license to Springer Nature Switzerland AG 2023 B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 70–80, 2023. https://doi.org/10.1007/978-3-031-42592-9_5  
   
  Guidance Models for Designing Big Data Cyber Security Analytics Systems  
   
  71  
   
  on multiple quality attributes and (iii) the selection and implementation of tactics varies among the reviewed BDCA systems. In the context of this study, an architectural tactic is a reusable design strategy that helps to achieve a particular quality attribute. A follow up empirical study [4] of ours on BDCA showed that the effectiveness of the tactics depends upon several factors such as the quality of security event data, the employed algorithms, and the execution mode of a system (e.g., standalone or distributed). These findings underline the inherent complexities in the design of a BDCA system. Such complexities make it challenging to understand the underlying design dependencies, constraints, and impact of quality goals, and subsequently make informed design decisions. Building on the findings of our previous studies [3, 4], we present guidance models for designing BDCA systems. The guidance models are associated with different BDCA design phases such as data engineering and feature engineering. The guidance models map the problem space (requirements) to the solution space (tactics) and reveal the dependencies, constraints, quality implications, and implementation option for the tactics. The models are expected to guide software architects in mapping functional and non-functional requirements for BDCA systems to a set of architectural tactics. This way, the architects can select the most optimal set of tactics that best satisfy the quality goals, dependencies, and associated constraints.  
   
  2 Research Approach The type model characterizes the elements of the guidance model and the relationship among the elements. The type model has been developed based on the guidelines provided in [5] and taking inspirations from the state-of-the-art on guidance models in various domains such as Cyber-foraging [6] and Microservices [7]. Our type model is presented in Fig. 1, which divides the design process into a problem space and a solution space. The problem space specifies the requirements (both functional and non-functional) and the solution space employs architectural tactics to address the requirements. The bold-headed arrow between a tactic and a requirement indicates that a particular tactic can be used to satisfy the requirement(s). Since BDCA systems use machine learning models to classify security event data into malicious and benign classes, the tactics are divided into three types based on whether a tactic is used in the training phase, testing phase, or both. The tactics used in the training phase are specified by the green box with a dotted borderline, in testing phase by the green box with a solid borderline, and in both training and testing phases by the green box with no borderline. Furthermore, some tactics are generic best practice, some are adopted for use in BDCA systems, and some are only applicable to BDCA systems. Such classification of tactics is specified in Fig. 1 by the symbols for each tactic – ‘*’ generic tactic, ‘#’ adopted for BDCA systems, and ‘’ specific to BDCA systems. If there are any risks or conditions associated with enabling a tactic to satisfy the requirement, these are represented as constraints. A relation between a tactic and requirement(s) has some implications for various Quality Attributes (QA). These implications are denoted as + QA, -QA, + + QA, -- QA, and + -QA in Fig. 1. The ‘ +’ specifies a positive impact on a particular QA, ‘-’ specifies a negative impact, ‘ + +’ specifies a strong positive impact, ‘- -’ QA specifies a strong negative impact, and ‘ + -’ specifies  
   
  72  
   
  F. Ullah and M. A. Babar  
   
  Fig. 1. Guidance Type Model  
   
  a potential for both positive and negative impact. The light-headed arrow between two tactics specifies that a tactic (tactic 1) requires or depends upon another tactic (tactic 2) for its incorporation in a design. In other words, a tactic (tactic 2) complements another tactic (tactic 1). Dependency and complementation are two different sides of the same relationship. However, dependency is an undesirable quality and complementation is a desirable quality. For example, if the incorporation of a tactic (say tactic-X) requires the incorporation of other three tactics in the system, the architect must incorporate all four tactics. On the other hand, if a tactic (say tactic-Y) does not require the incorporation of another tactic (i.e., tactic-Y is not dependent on another tactic), the architect can leverage only one tactic i.e., tactic-Y for a particular decision. Hence, tactic-Y is better (in terms of utility) than tactic-X. Similarly, a tactic that supports/complements the incorporation of other tactics in the system’s design is better than a tactic that does not. The line between a tactic and the associated implementation option specifies that the mentioned tool/technology can be used for the implementation of the tactic. We have developed the guidance models based a systematic analysis of the 74 BDCA systems’ architectures reported in [3]. Based on the previous studies [3, 4], the functional requirements of a BDCA system are divided into five phases. These phases are data engineering, feature engineering, process engineering, data processing, and data postprocessing. First, tactics are selected to address these functional requirements, which are then accompanied by tactics for satisfying non-functional requirements/quality (e.g., scalability and reliability).  
   
  3 Guidance Models This section presents the guidance models for various BDCA design areas. 3.1 Data Engineering Figure 2 presents the guidance model for data engineering. The tactics instantiated during the data engineering aims to preprocess and clean the collected data. The Removal of Duplicates tactic removes duplicate records from the training data to ensure that  
   
  Guidance Models for Designing Big Data Cyber Security Analytics Systems  
   
  73  
   
  Machine Learning (ML) model is not biased towards learning more frequent behaviors. The existence of a large number of duplicates prevents a model from learning the rare behaviors that indicate dangerous attacks [8]. The tactic reduces training time by reducing data size and improves accuracy by ensuring the development of an unbiased ML model. The tactic requires that the functionality responsible for removal of duplicates should not be computationally expensive. The tactic can be implemented using the NullWritable class in Hadoop library. The Handling Missing Values tactic detects the records with the values missing for some features (e.g., protocol type). Such records create a substantial amount of bias for subsequent data analysis. Upon detection, the tactic either removes the record or implants a new value for the feature using the data imputation technique. The tactic improves accuracy but reduces the training time. Some common tools for data imputation include NORM, SOLAS, and SAS. The Removal of Incorrect Data tactic discards records with future values that are not suitable for security analytics. For example, -20 is not a suitable value for number_of_bytes feature in a record. The tactic improves accuracy with a negligible increase in response time. The tactic requires careful formulation of rules (e.g., number_of_bytes > 0) for detecting incorrect values. The Removal of Valueless Data tactic discards data that does not contribute to detecting attacks. For instance, zero-byte flows are collected by a network sniffer;  
   
  Fig. 2. Guidance Model for Data Engineering  
   
  Such data is only used in TCP/IP handshaking and does not have any relevance to attack detection [9]. Similarly, image data captured as URL suffixes with JPEG or JPG needs to be discarded [10]. The tactic improves response time by reducing data size.  
   
  74  
   
  F. Ullah and M. A. Babar  
   
  The Data CutOff tactic imposes a customizable limit on data to be collected for each network connection or process. For example, only collecting the first 15 Kbytes of a network connection or storing data pertaining only to the first 100 s of the execution of a process. This tactic reduces the size of data to reduce prediction time. However, the tactic carries a risk of evading an attack if an attacker plans the execution of an attack after the customizable limit [11]. All five tactics associated with functional requirements depends on Parallel Processing tactic to manage the distribution of processing among computing nodes and Data Ingestion Monitoring tactic to prevent node failures by controlling data influx into a system. The Parallel Processing tactic improves response time, scalability, and reliability, however, it increases the operation cost of a system. The tactic involves a minor risk of breaking a record across different blocks during data partitioning. The tactic depends on Data Ingestion Monitoring tactic and Dynamic Load Balancing tactic for preventing node crash and balancing the load among nodes. The tactic is implemented using big data frameworks such as Hadoop and Spark. The Data Ingestion Monitoring tactic improves reliability by keeping a constant check on data ingestion rate, however, it also complicates the deployment of a system. The tactic is implemented using Flume or Kafka servers. The Dropped NetFlow Detection tactic detects records that are missed by a data collection tool (e.g., Wireshark). The tactic monitors the sequence number of records and if found out of order, a message is flagged. The tactic improves reliability by ensuring data is collected in its entirety and increases response time due to the monitoring cost. The tactic requires connectivity between data collection and data engineering modules. PRTG monitor is a tool for implementing this tactic. 3.2 Feature Engineering Figure 3 presents a guidance model for feature engineering. The tactics used in feature engineering aim to select, generate, and/or transform features in the collected security event data. The Feature Selection tactic selects the most relevant features out of the several available features in data. The security event data often consists of many features as evident from 41 features in KDD and 82 features in CICIDS2017 dataset. Not all the features contribute to attack detection. Therefore, the irrelevant features are discarded to reduce data size and complexity, which eventually leads to improved accuracy and reduced response time. However, discarding features in situations where the number and nature of features continuously change (e.g., in dynamic networks) can harm the accuracy of a system. The Feature Generation tactic generates new features from. the existing features to either improve accuracy or reduce data dimensionality. For example, Rathore et al., [12] sum source_bytes and destination_bytes to generate a new feature number_of_bytes. The tactic improves accuracy, however, the impact on response time depends upon whether the overall number of features is increased or decreased after the feature generation. An increase in the number of features increases response time and vice versa. This tactic increases the overall complexity of a system and requires a lightweight feature generation mechanism to achieve improvement in response time. The Feature Transformation tactic enhances security data in a way that an ML model can efficiently analyze data to detect suspicious cyber activities. For instance, the features’  
   
  Guidance Models for Designing Big Data Cyber Security Analytics Systems Data Ingestion Monitoring* Risk of discarding critical features, challenging to implement in dynamic networks  
   
  + Training Time + Prediction Time + Accuracy  
   
  Correlation Analysis, Info Gain,  
   
  Select the most Feature Selecrelevant features from tion# the security event data Introduce lack of interpretabil+ - Training Time Association Rules ity Create new features from the available features Introduce lack of interpretability Transform the features into a new space  
   
  + - Prediction Time + Accuracy - Complexity  
   
  - Training Time - Prediction Time + Accuracy - Complexity  
   
  Hadoop, Spark, Storm  
   
  Feature Generation# Normalization  
   
  Parallel Processing*  
   
  ++ Training Time ++ Prediction Time + Reliability + Scalability - Cost  
   
  HDFS, Hive, ++ Reliability + Training Time Cassandra Maintaining Multiple Copies**  
   
  + Prediction Time - Storage Cost - Data Security  
   
  Involves risk of breaking a logical record across different data blocks Data processing should be fast and reliable Data inconsistencies, connectivity required between nodes in different racks Multiple copies of the data are stored and maintained Requires connectivity between data collection and data engineering modules  
   
  Feature Transformation# + Reliability  
   
  Hadoop  
   
  75  
   
  HeartBeat*  
   
  Monitor the status of nodes hosting the data copies  
   
  Fig. 3. Guidance Model for Feature Engineering  
   
  values can be transformed into a range of 0 to 1 to help an ML model to discriminate between malicious and benign access requests. This tactic improves accuracy but increases response time and complexity. Some common techniques for implementing this tactic includes normalization, bucketing, and one hot encoding. All the three tactics associated with the functional requirements depend on Parallel Processing and Maintaining Multiple Copies tactics. The Parallel Processing tactic distributes the processing for feature engineering among nodes. The Maintaining Multiple Copies tactic stores and maintains multiple copies of the data processed in this phase. These choices address the issue of node failure and improve response time. This tactic increases the attack surface by exposing the data on multiple fronts and increases storage cost. The tactic requires connectivity among nodes hosting data replicas and introduce data inconsistencies. The tactic relies on Heartbeat to check connectivity and health of the nodes that share data replicas. 3.3 Process Engineering Process engineering ensures effective data processing in the subsequent phase (i.e., data processing). The guidance model for process engineering is shown in Fig. 4, which employs two tactics (i.e., ML Algorithm Selection and Parameter Tuning). The two most important factors for effective security analytics are input data quality and the employed ML algorithm [13]. Therefore, ML Algorithm Selection tactic assesses the applicability of various ML algorithms (e.g., Naïve Bayes and K-means) to select the most suitable algorithm to be employed in the subsequent phase. The algorithms are assessed based on their time complexity, incremental update capacity, attack detection accuracy, online/offline mode, and generalization capability. The tactic improves accuracy and usability by ensuring to select the algorithm that generates highly accurate and interpretable results. The impact on response time depends upon the time consumed in the selection process vs the time gained from the efficiency of the selected algorithm.  
   
  76  
   
  F. Ullah and M. A. Babar  
   
  Moreover, the tactic increases the overall complexity of the BDCA system. The tactic requires careful trade-off among various quality attributes [13]. For example, an algorithm may generate more accurate results but at the cost of increased response time. Distributed ML libraries (such as Apache Mahout and MLlib) are used to implement and assess various algorithms. The Parameter Tuning tactic tunes the parameters (e.g., weights in a regression model) and hyperparameters (number of clusters in K-means) for the algorithms and frameworks (e.g., Hadoop). In addition to ML algorithms, parameter tuning is important for the underlying frameworks. For example, the number of Map and Reduce jobs, buffer size, and the number of data replicas need to be configured for Hadoop. This tactic improves accuracy with potential for both increase and decrease in response time. Furthermore, it decreases the usability of a system as a user must manually or semi-manually tune the parameters. Techniques for ML parameter tuning include Grid search and Bayesian optimization. Data Ingestion Monitoring#  
   
  Require a trade-off between accuracy and response time  
   
  Select most optimized ML algorithm for attack detection  
   
  + - Training Time ++ Accuracy - Complexity + Usability  
   
  Tune the parameters and frameworks  
   
  Mahout, SparkML ML Algorithm # Selection  
   
  Grid search, Random search, Bayesian Optimization  
   
  Require expertise to properly tune the parameters  
   
  - Training Time + Accuracy - -Usability  
   
  Hadoop, Spark, Storm  
   
  Parallel Processing*  
   
  Correlation Analysis, Info Gain, Feature # tion  
   
  Parameter Tuning*  
   
  ++ Training Time ++ Prediction Time + Reliability + Scalability - Cost  
   
  Selec-  
   
  + Training Time + Prediction Time + Accuracy  
   
  Involves risk of breaking a logical record across different data blocks Data processing should be fast and reliable Risk of discarding critical features, challenging to implement in dynamic networks Select the most relevant features from security data  
   
  Requires connectivity between data collection and data engineering ++ Training Time modules + Accuracy  
   
  NullWritable (Hadoop)  
   
  Removal of Duplicates#  
   
  + Reusability + Modularity  
   
  Discard duplicate records from collected security event data  
   
  Fig. 4. Guidance Model for Process Engineering  
   
  3.4 Data Processing The guidance model for data processing is shown in Fig. 5. This phase uses two tactics for detection of attacks. The Anomaly-based Detection tactic is the most crucial tactic, which uses an ML model to detect cyber behavior that deviates from normal behavior. Anomaly-based detection is very effective in detecting zero-day attacks [14]. The efficient use of this tactic improves accuracy, response time, and generality of a BDCA system. The tactic relies on ML algorithm selection and Parameter Tuning tactics to ensure effective selection and execution of ML algorithms and frameworks. The key disadvantage of this tactic is the potential to generate many false positives. Apache Mahout, MLlib, and Distributed Weka are some of the libraries used for implementation of ML algorithms used in anomaly detection. The Signature-based Detection tactic  
   
  Guidance Models for Designing Big Data Cyber Security Analytics Systems  
   
  77  
   
  detects known attacks based on their attack signatures. The tactic improves accuracy only for known attacks by reducing false alarms and is faster as compared to anomalybased detection. However, this tactic not only increases the overall complexity but also poses a challenge of interoperability between anomaly-based detection and signaturebased detection. This concern is more severe in cases where a signature-based detection is an open-source tool such as BRO and SNORT. Signature-based detection is unable to detect zero-day attacks. Moreover, this tactic requires frequent updates of attack signatures to be able to detect newly introduced attacks. For updating the signatures, this tactic uses Attack Pattern Updation tactic that (semi) automatically updates the signatures used by the signature-based detection tactic. Both the tactics in data processing phase depend upon Result Polling and Optimized Notification tactic, which optimizes the delay in feeding results from mappers to reducers. This way Mapper nodes do not have to wait for predefined time limit rather they can notify the Reducer as soon as the Mapper results are ready. This tactic improves response time but makes nodes more vulnerable to failure.  
   
  Fig. 5. Guidance Model for Data Processing  
   
  3.5 Data Post-Processing The guidance model for post-processing is presented in Fig. 6. This phase processes the generated alerts to remove (any) false positives, correlate the alerts to reveal sophisticated attacks, and rank them to facilitate users in responding to them. The False Positive Reduction tactic uses mining techniques (e.g., clustering and classification) to learn about true positive and false positive from various features (e.g., IP address and protocol) of alerts [15]. The learnt characteristics are then used to classify future alerts. This tactic improves accuracy but increases prediction time due to extra processing. The tactic requires ground truth in the form of labels to mine insight from previous alerts. The  
   
  78  
   
  F. Ullah and M. A. Babar  
   
  Fig. 6. Guidance Model for Data Post-processing  
   
  tactic depends upon Anomaly-based Detection tactic for alert generation. The Alert Correlation tactic correlates alerts based on logical relations to generate attack scenarios that help reveal sophisticated attacks (e.g., Advanced Persistent Threats) and root cause of attacks [15]. This tactic improves accuracy and generality at the cost of prediction time and complexity of a BDCA system. This tactic requires contextual information (e.g., network topology) to correlate alerts. Moreover, missing links and/or pre and post alerts can be a hurdle in efficient alert correlation. The tactic uses alerts generated by Anomalybased Detection and Signature-based Detection tactics. Some commercial tools for alert correlation include TIBCO Log-logic, NetIQ Sentinel, and LogRhythm [15]. The Alert Ranking tactic ranks the final list of alerts based on their severity. The ranking facilitates users to respond to severe alerts on a priority basis, which improves a system’s usability. This tactic increases response time due to the processing involved in ranking alerts. The tactic should use a lightweight ranking model otherwise the intensive ranking processing cancels the benefit gained through prioritized response to severe alerts. Some example tools for ranking alerts are IBB-Q1/QRadar and HP ArcSight [15].  
   
  4 Related Work Guidance models recently attracted a lot of attention from the SE community. MacLean et al., [16] introduced Questions-Option-Criteria (QOC) approach, which provides a basis for guidance models. The QOC approach maps questions (problem space) to the options (solutions space). Other similar work include guidance models for cyber-foraging [6], microservices [7], and cloud computing [17]. Sabry et al., [18] report a survey aimed at quantifying the importance of various quality attributes and satisfying them using well-known tactics. Soliman et al., [19] proposes a design approach for making decisions related to the selection of technologies based on their impacts on a system’s architecture. Al-Naeem et al., [20] proposed a quality-driven approach to quantitatively compares various technological options for designing systems. Xu et al., [21] presented decision models for designing Blockchain-based systems. To the best of our knowledge, ours is the first effort to propose guidance models for designing BDCA systems.  
   
  Guidance Models for Designing Big Data Cyber Security Analytics Systems  
   
  79  
   
  5 Conclusions We proposed guidance models for designing BDCA systems. The guidance models provide guidance on various design considerations (e.g., implications on quality goals). The guidance models do not attempt to replace an architect rather aims to enable the architect to consider a variety of factors (e.g., QA and dependencies) in decision making and end up with a BDCA design that is optimal, traceable and justifiable. We plan to evaluate whether or not the models are correct and how useful these are for the practitioners in terms of helping them to design BDCA system. The evaluation will be carried out through a user study with practitioners.  
   
  References 1. Holst, A.: Volume of data/information created worldwide from 2010 to 2024. Statistica (2020) 2. Cardenas, et al.: Big data analytics for security. IEEE Secur. Priv. 11(6), 74–76 (2013) 3. Ullah, F., Babar, M.A.: Architectural tactics for big data cybersecurity analytics systems: a review. J. Syst. Softw. (2019) 4. Ullah, F., Babar, M.A.: An architecture-driven adaptation approach for big data cyber security analytics. Int. Conf. Softw. Architect. (ICSA) (2019) 5. Weinreich, R., Groher, I.: Software architecture knowledge management approaches and their support for knowledge management activities: a systematic literature review. Inf. Softw. Technol. 80, 265–286 (2016) 6. Lewis, G.A., Lago, P., Avgeriou, P.: A decision model for cyber-foraging systems. Conf. Softw. Architect. (WICSA), (2016) 7. Haselböck, S., Weinreich, R., Buchgeher, G.: Decision guidance models for microservices: service discovery and fault tolerance. Conf. Eng. Comput.-Based Syst. (2017) 8. Chen, T., Zhang, X., Jin, S., Kim, O.: Efficient classification using parallel and scalable compressed model and its application on intrusion detection. Expert Syst. Appl. (2014) 9. Zhao, et al.: I-can-mama: integrated campus network monitoring and management. In: Network Operations and Management Symposium (2014) 10. Tian, J.-W., Qiao, H., Li, X., Tian, Z.: A statistical threat detection method based on dynamic time threshold. In: International Conference on Computer and Communications (2016) 11. Zhen, C.: Cloud computing-based forensic analysis for collaborative network security management system (2013) 12. Rathore, M.M., Ahmad, A., Paul, A.: Real time intrusion detection system for ultra-high-speed big data environments. J. Supercomput. 72(9), 3489–3510 (2016) 13. Buczak, A.L., Guven, E.: A survey of data mining and machine learning methods for cyber security intrusion detection. IEEE Commun. Surv. Tutorials 18(2), 1153–1176 (2016) 14. Bhuyan, M.H., Bhattacharyya, D.K., Kalita, J.K.: Network anomaly detection: methods, systems and tools. IEEE Commun. Surv. Tutorials 16(1), 303–336 (2014) 15. Hubballi, N., Suryanarayanan, V.: False alarm minimization techniques in signature-based intrusion detection systems: a survey. Comput. Commun. 49, 1–17 (2014) 16. MacLean, A., Young, R.M., Bellotti, V.M., Moran, T.P.: Questions, options, and criteria: elements of design space analysis. Hum. Comput. Interact. 6(3–4), 201–250 (1991) 17. Zimmermann, O., Wegmann, L., Koziolek, H., Goldschmidt, T.: Architectural decision guidance across projects-problem space modeling, decision backlog management and cloud computing knowledge. In: Conference on Software Architecture (2015) 18. Sabry, A.E.: Decision model for software architectural tactics selection based on quality attributes requirements. Procedia Comput. Sci. 65, 422–431 (2015)  
   
  80  
   
  F. Ullah and M. A. Babar  
   
  19. Soliman, M., Riebisch, M., Zdun, U.: Enriching architecture knowledge with technology design decisions. In: Working IEEE/IFIP Conference on Software Architecture (2015) 20. Al-Naeem, T., Gorton, I., Babar, M.A., Rabhi, F., Benatallah, B.: A quality-driven systematic approach for architecting distributed software applications. In: ICSE, pp. 244–253 (2005) 21. Xu, X., Bandara, H.D., Lu, Q., Weber, I., Bass, L., Zhu, L.: A decision model for choosing patterns in blockchain-based applications. In: ICSA, pp. 47–57: IEEE (2021)  
   
  Architecture Modeling and Design  
   
  Automated Integration of Heteregeneous Architecture Information into a Unified Model Sven Jordan1(B) , Christoph K¨ onig2 , Lukas Linsbauer3 , and Ina Schaefer2 1  
   
  Group IT Solution and Enterprise Architecture, Volkswagen AG, Wolfsburg, Germany [email protected]  2 Institute of Information Security and Dependability, Karlsruhe Institute of Technology (KIT), Karlsruhe, Germany {Christoph.Konig,Ina.Schaefer}@kit.edu 3 Institute of Software Engineering and Automotive Informatics, Technische Universit¨ at Braunschweig, Braunschweig, Germany  
   
  Abstract. As software systems are increasingly complex, architecture documentation becomes more important. Initial documentation of a system’s architecture needs to be kept up-to-date as the system evolves. Therefore, automated support for maintaining and evolving architecture information and documentation of interconnected and heterogeneous systems is highly beneﬁcial to engineers, architects, and other stakeholders. To achieve this, we propose to automatically integrate recovered architecture information from heterogeneous data sources and architectural artifacts into a uniﬁed data model to create integrated views. Integrated views provide a holistic and up-to-date system representation. In this work, we present an integration approach for architecture information in a uniﬁed data model that serves as a digital architecture twin representing the current architecture of a system. We show that the integration approach successfully integrates architecture information by applying adapted metrics. Keywords: Architecture Information · Software Architecture Recovery · Consolidation · Integration · Uniﬁed Model  
   
  1  
   
  Introduction  
   
  Software systems have to frequently adapt to diﬀerent environments, advances in technology, or changing customer requirements. For maintenance and development of a ever-changing software system, it is essential to have up-to-date architecture documentation [3]. However, as a system evolves, the documentation has to keep up with the changes, as otherwise it does not reﬂect the actual system anymore. Decisions based on out-dated architecture documentation lead to inaccuracies impeding architecture planning and causing higher costs [2]. c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 83–99, 2023. https://doi.org/10.1007/978-3-031-42592-9_6  
   
  84  
   
  S. Jordan et al.  
   
  However, the creation and continuous maintenance of documentation is linked with high eﬀort, as it is a primarily manual task [16]. Furthermore, diﬀerent stakeholders require diﬀerent views on a system at diﬀerent levels of granularity [4]. Explicitly documenting all these views at any possible level of granularity does not scale, as it adds to the eﬀort to keep the documentation consistent with the system by also keeping its diﬀerent views consistent with each other [13]. To counter the problem of outdated documentation and decreasing documentation quality, software architecture recovery methods [18] have been proposed. Software architecture recovery [8] describes methods for retrieving architecture information from an implemented system and associated data sources. Currently, architecture recovery methods are performed in isolation, and none of them represents the system entirely. But a software system has to be described from diﬀerent related views to fully understand its architecture [13]. Diﬀerent architecture recovery methods provide architecture information in diﬀerent output formats and granularity level increasing the complexity to correlate the architecture information with each other. However, by combining results of separate architecture recovery methods to create an integrated view of the recovered architecture information, diﬀerent aspects can be linked with each other providing a broader overview of the software system. Automating the recovery and integration reduces human eﬀort to have up-to-date architecture documentation. In this paper, we propose an approach to integrate the diﬀerent outputs of architecture recovery methods concerned with a static representation of the software system into an uniﬁed data model to create integrated views. Integrated views are the basis of a Digital Architecture Twin (DArT) of the software system, which co-evolves with the system and combines diﬀerent system perspectives. For the integration, we focus on the clustering technique, which is most prominently used, in architecture recovery and its results can be automatically performed and integrated [18]. Our integration approach comprises of ﬁve steps, in which diﬀerent architecture information is integrated while respecting possible conﬂicting or supplementary architecture information. We evaluate the integration approach by applying it to four open source systems to observe if our approach is able to integrate architecture information without losing any information. We further discuss how to enhance the integration approach to incorporate other architecture information recovery sources.  
   
  2  
   
  Background  
   
  Architecture information describes a software system from diﬀerent views (e.g., structural, behavioral or deployment views). These views include information such as (low- and high-level) system components, interfaces between software systems or design decisions made while designing the software system [7,13].  
   
  Automated Integration into a Uniﬁed Model Sources  
   
  Git  
   
  DCA Source code  
   
  AIRS  
   
  DMS  
   
  Files  
   
  Versioning  
   
  RELAX AIRS Text DCA Requirements  
   
  Architecture Information Integration (AII)  
   
  Architecture information query engine  
   
  Concern clusters ... ...  
   
  Application scenarios  
   
  Subsystems  
   
  AST Files  
   
  AIQL  
   
  DArT  
   
  ACDC AIRS  
   
  Code DCA  
   
  85  
   
  Architecture Information Model (AIM)  
   
  Fig. 1. Creation process of Digital Architecture Twin (DArT)  
   
  2.1  
   
  Digital Architecture Twin  
   
  The Digital Architecture Twin is an architecture information model that incorporates diﬀerent architecture information (i.e., diﬀerent views, diﬀerent granularity). Figure 1 shows the process to create the DArT. The DArT enables application scenarios like a recommendation system to support future design decisions for software architecture or architecture documentation tailored to the needs of the stakeholder. In the following, we brieﬂy discuss each step of the DArT construction process. The ﬁrst step of the creation process of the DArT is the extraction of data from heterogeneous data sources using the Data Collection Agents (DCAs). They strive to independently extract the raw data from sources like source code repositories, architecture documentation repositories or infrastructure databases and provide it to architecture information recovery services that can make use of the data (e.g., structural information at a certain abstraction such as an abstract syntax tree). During the collection process, preprocessing of the raw data is performed (e.g., parsing of source code into an abstract syntax tree), and the input in the required format for the Architecture Information Recovery Services is generated. Architecture Information Recovery Services (AIRSs) use the preprocessed data and apply architecture recovery methods to recover architecture information. This information is subsequently integrated into the AIM. As the AIRS are supposed to recover the architecture information automatically, the recovery methods need to be automatic and generate results in a reasonable time frame. The Architecture Information Model (AIM) combines diﬀerent kinds of architectural information (e.g., structural or deployment) at diﬀerent levels of abstraction (e.g., classes, packages, or components in the case of structural information of a Java system). The AIM includes information about the data sources from which the information was extracted (e.g., source code in a version control system), the AIRS used, and information about the version of the software system. The AIM also contains information from which data sources (e.g., source code in a version control system) and via which recovery service the information was extracted, and version information to track what architectural information corre-  
   
  86  
   
  S. Jordan et al.  
   
  sponds to which system version. The AIM has a modular and extensible design, which allows to generate various views of a system. The AIM comprises aspects such as architecture rationale (e.g., design decisions, design patterns), business (e.g., domain, capability), components (e.g., subsystems, packages, compilation units), deployment (e.g., network zone), interfaces, and (non-)functional requirements. These aspects are chosen as primary drivers for architecture documentation [11] and their consideration for architecture recovery methods. 2.2  
   
  Architecture Information Recovery Methods  
   
  Architecture information can be recovered from diﬀerent data sources (i.e., artifacts of the system) via architecture recovery methods or from existing documentation [8]. Architecture recovery is the process of extracting architecture information from a system’s implementation (e.g., source code or build scripts) or from other architectural artifacts (e.g., textual documentation). Architecture recovery methods range from manual process guidelines to automatic methods. In the following, we explain four concrete architecture recovery methods, which we use to illustrate integration challenges: ACDC [21], Bunch (NAHC) [19], PKG [15], and RELAX [16]. They automatically produce architectural information describing the system’s structure using source code as input and clustering as a technique. We chose ACDC and Bunch because they are state-of-the-art and included PKG and RELAX to have diﬀerent architecture information. As an example system, we introduce a simple calculator application implemented in Java. The calculator consists of four classes: Main as entry point; UI for the user interface; Calculator for the calculations; and BufferedImageCustom for the insertion of a logo. ACDC [21] is a pattern-driven clustering method, which clusters the structural information of the system based on dependencies and global variables found in the source code. Clusters generated are described as subsystems. ACDC provides comprehensible clusters depicting the structure of the clustered system. Figure 2a displays the shortened results of ACDC revealing a single subsystem (.ss) when applied to a small example system. Bunch [19] uses hierarchical clustering, which generates module dependency graphs based on the source code. The module dependency graph is then partitioned into modules, which are clustered using the Bunch-clustering tools into subsystems producing a high-level overview of the system’s structure. Bunch recovers 3 subsystems to reﬂect the structure of the example system (see Fig. 2b). PKG [15] is a simple method which uses the package structure to recover architecture information. PKG assumes that source code is split into suitable packages. The output generated by PKG (see Fig. 2c) consists of 5 packages. RELAX [16] employs a naive Bayes classiﬁer, in which every Java-class is classiﬁed to eight pre-deﬁned categories like security, graphics or database categorizing the functionality. Second, RELAX clusters the classiﬁed documents on  
   
  Automated Integration into a Uniﬁed Model  
   
  87  
   
  Fig. 2. Architecture recovery results depicting the structure of an example system  
   
  the basis of the classiﬁcation results and possible dependencies found within the documents. Figure 2d describes the classiﬁed and clustered classes and their relationship among each other of the running example as recovered with RELAX. The expected results of the integration are depicted in Fig. 2e, it should include every architecture information automatically obtained of the presented architecture recovery methods, uniﬁed and connected with each other. Architecture information needs to be transformable into a common format.  
   
  3  
   
  Problem Statement and Challenges for Architecture Information Integration  
   
  The main idea of the DArT is to employ proven architecture information recovery approaches leveraging diﬀerent architecture data sources (e.g., source code, build and deployment scripts) by integrating them into the AIM to obtain an updated and linked representation of the software system. Integration of recovered architecture information from diﬀerent sources into the AIM has to consider diﬀerent levels of detail of the architecture information results and how results from diﬀerent perspectives and views can be connected. While studying architecture information obtained from architecture recovery methods, we identiﬁed ﬁve challenges for the integration:  
   
  88  
   
  S. Jordan et al.  
   
  Uniform Data Format. Architecture recovery methods provide diﬀerent output formats (e.g., 3-tuple text ﬁle, XML-ﬁles.) Recovered architecture information needs to be transformed into a uniform representation to automatically integrate this architecture information. Automation. Only automatically obtainable architecture information, not relying on human interpretation can be automatically integrated. Architecture recovery methods like guidelines cannot be automatically integrated. Incrementality. If the architectural information change when system evolves, the information in the uniﬁed data model needs to be updated incrementally. Computationally intensive. Architecture information recovery can be computationally intensive (i.e., long computation times or demanding resources). Validation. Integration of recovered architecture information requires a careful validation to assess the correctness of the results, such as presenting stakeholders with either a guideline to assess the integrated architecture information.  
   
  4  
   
  Detailed Architecture Integration Approach  
   
  In this section, we describe the Architecture Information Integration (AII) process responsible for the integration of recovered architecture information, detailed in Fig. 3. The AII is performed when an AIRS recovers architecture information. The AII is concerned with similar, dissimilar or complementary information recovered from diﬀerent sources or diﬀerent layers of architecture information and their integration in the AIM. The AIM uniﬁes diﬀerent architecture information of diﬀerent levels and views of the analyzed system. The recovered architecture information is integrated unaltered, thus providing architecture information of diﬀerent approaches without redundancies. To support the user assessing the recovered and integrated architecture information in the AIM, we introduce the concept of confidence. We assume that architecture information which is recovered more often by AIRSs, is more likely correct in resembling the system. AIRS providing the same results increases the confidence in the recovered architecture information.  
   
  Fig. 3. Abstract architecture information integration (AII) example  
   
  Automated Integration into a Uniﬁed Model  
   
  89  
   
  Step 1: Transformation of AIRS Output to an Instance of the AIM. In the ﬁrst step of the integration approach, the provided architecture information by AIRS is transformed into a directed acyclic graph (DAG) representation, which complies with the underlying AIM. Whether the AIRS is producing cluster information or providing design patterns or requirements, the information is transformed into the directed acyclic graph. Step 2: Pairwise Comparison of AIRS Output Model to Contents of AIM. The transformed architecture information allows a pairwise comparison of the branches and leaves with the architecture information in the AIM. If the comparison happens between two transformed DAGs with only one branch, this is trivial. If the transformed DAG is complex (e.g., more than one branch), the approach compares every leaf of the newly created DAG with leaves in the existing architecture data model. This comparison is passed upwards to the “root” of the DAG. This process is done with every branch in the transformed DAG. Comparing every branch of the new DAG with the existing architecture information identiﬁes possible (dis-)similarities. For the comparison, we use three diﬀerent comparators. The ﬁrst comparator uses the fully qualiﬁed identiﬁer. For clustering results of an AIRS, the identiﬁcation of the similarity and dissimilarity is done by matching the names of the implemented sources (e.g., in Java, this is the combination of package.classname). For other architecture information, this can also span the name of the business capability, requirement, network zone or design pattern. The second comparator is comparing structures to identify subsets of architecture information, (e.g., subsystem A incorporates classes X, Y Z and new recovered subsystem B incorporates only classes X,Y, so we assume that the new subsystem B is a subset of subsystem A). The subset-comparator, incorporates the type of the compared element. This means that a package cannot be a subset of a class, but vice versa. Therefore it is possible, that architecture information contributes to a subset, when it is of is the same type, but also it has a dependency which does not violate the hierarchies of the types. The third comparator is based on MojoFM [22]. We calculate move and join operators performed to transform the new architecture information DAG into the existing architecture information (based on branches). If every leaf of a DAG, and therefore every item in a cluster, has to be allocated to another DAG item (and therefore cluster item), we assume the architecture information to be disjoint, adding a new view of the system. Less transformation steps increase the similarity rating of the compared architecture information. Every comparator calculates a comparison value and compares it to a threshold. The three comparators are called in sequence, ﬁrst the name-comparator, second the subset-comparator and last the MoJoComparator. If the name comparator detects a 100% coverage, we evaluate the results of the subsetcomparator, which inﬂuences how to proceed with the integration. If the namecomparator is not at 100%, we use the MoJoComparator. When all three com-  
   
  90  
   
  S. Jordan et al.  
   
  Fig. 4. Comparison results for the integration  
   
  parators do not provide a deﬁnitive results, we calculate the arithmetic mean and take this as the result of the integration. Step 3: Integration into Updated AIM. After the comparison step, we differentiate between architecture information (clusters) which are equal, subsets of another architecture information (cluster), disjoint, similar above threshold and similar below threshold. For the integration, we introduced a manual adjustable similarity threshold to diﬀerentiate between architecture information, which is not equal or disjoint. Architecture information above the threshold allows to integrate the new architecture information to the existing architecture information. Architecture information below the threshold is stored independently, but linked with the already existing architecture information. Depending on the similarity, the integration is handled as described in the following. Equal. If the compared new branches and leaves and the existing branches and leaves in the AIM are equal, the information will not be stored again as no new information was recovered. The conﬁdence of the architecture information found in the DArT is increased by one (cf. Fig. 4a). Subset. If the compared new architecture information branches and leaves are a subset of the existing architecture information, the subset is added, leading to  
   
  Automated Integration into a Uniﬁed Model  
   
  91  
   
  the integration of a new hierarchy level in the AIM. Furthermore, it increases the conﬁdence of the architecture information found in the DArT (cf. Fig. 4b). Similar Above Threshold. If the new and the existing architecture information is similar above a speciﬁc threshold, the architecture information is merged into the AIM. This in turn leads to consolidated clusters as well as integrated architecture information via new connections of the architecture information (cf. Fig. 4c). Similar Below Threshold. If the new and the existing architecture information is similar but below a speciﬁc threshold, the new architecture information and the existing architecture information are added as well but the new supplementing information is not merged with the existing architecture information. Merged information as well as new information is stored in the AIM. When possible, new hierarchy levels are added to the AIM. Disjoint. If the new architecture information is disjoint or conﬂicting to the existing information, we add the new information without integration into the AIM. The new information may be another view on the system’s architecture, disjunctive or conﬂicting to the other existing architecture information (cf. Fig. 4d). Step 4: New Structural Levels Are Added Depending on the Consolidated Architecture Information. When integrating architecture information, diﬀerent granularity levels must be considered. If lower-level information (e.g., classes) is recovered by one AIRS and higher-level information (e.g., packages) is recovered by another AIRS, we add a hierarchy level in the DArT relating the information with each other. We also add a hierarchy level, when subset or similar above the threshold architecture information is recovered. As diﬀerent architecture information can be integrated with each other, we also add “hierarchy levels” (e.g., requirements integrated with a subsystem, design patterns with classes) (cf. Fig. 4c). The new hierarchy levels generate new links, which are counted and appropriately increased in terms of conﬁdence. Step 5: Compute Confidence in Elements of AIM. In the last integration step, we calculate the confidence of the architecture information. The conﬁdence value helps estimate whether the recovered architecture information is commonly recovered by the AIRSs or if it is recovered by a single approach. We increment the conﬁdence count when two AIRSs recover the same elements and connections, resulting in higher relative conﬁdence in the corresponding cluster and connection. If multiple AIRS are integrated, the conﬁdence value depicts the most reliable architecture information. For example, if an architecture information is recovered by 8 out of 10 AIRSs, we present a conﬁdence of 80% for that information. Conﬁdence also assists in dealing with conﬂicting information. As diﬀerent AIRS, which are integrated into the AIM might recover diﬀerent views, it is possible that contradictory information is recovered. To address this, we store the conﬂicting architecture information along with the responsible AIRS  
   
  92  
   
  S. Jordan et al.  
   
  in the AIM. This, combined with conﬁdence, provides evidence whether the architecture information is often recovered and a valid description of the software system. This is necessary, as the decision, which architecture information is “correct” and which might distort the architecture of the software system cannot be made automatically or even manually decidable, we store the architecture information independently from each other. Discussion. The ﬁrst challenge (Uniform data format) stated in Sect. 3 is addressed by requiring to transform all recovered architecture information into a DAG. Currently, all architecture information provided by the AIRS as well as in the AIM can be transformed into a DAG. Regarding automation, we can only select architecture recovery methods which can be automatically integrated [8]. To mitigate the challenge of validation, we introduced the concept of conﬁdence such that stakeholders are supported assessing the integrated architecture information. Incrementality is addressed within our integration approach, as AIRS can be applied continuously which we will investigate in detail in future work. However, we cannot remedy the challenge of computationally intensive architecture recovery methods, but we argue that starting the integration process to recover and integrate the architecture information whenever a data source changes avoids having a computationally bottleneck in case of emergency realtime analysis.  
   
  5  
   
  Implementation  
   
  Both the AII and architecture recovery methods are implemented in Java, these are based on the implementation found in Software Architecture INstrument (SAIN)1 . The uniﬁed data model (AIM) is realized and persisted using the Eclipse Modeling Framework2 . To compare and integrate architecture information, we adapted the Variability Analysis Toolkit [20] used to compare program structure and extended it to handle architecture clustering information.  
   
  6  
   
  Evaluation  
   
  In this section, we evaluate our architecture information integration approach using a set of four real-world subject systems using metrics published by Guizzardi et al. [6] adapted for our scenario. 6.1  
   
  Goals and Questions  
   
  Goal. The goal is to integrate architecture information recovered by independent AIRS and to remove redundancies, relate independently recovered information, and resolve conﬂicting information. Research Questions. To evaluate our goal, we identiﬁed two research questions: 1 2  
   
  https://www.sain.info/. https://www.eclipse.org/modeling/emf/.  
   
  Automated Integration into a Uniﬁed Model  
   
  93  
   
  RQ1. Can we integrate architecture information from AIRS without losing any recovered information? RQ2. Can we integrate architecture information from AIRS without redundancy and correlate architecture information of diﬀerent AIRS with each other? 6.2  
   
  Metrics  
   
  For the evaluation, we adapt metrics used to evaluate modeling languages published by Guizzardi et al. [6] and successfully adapted by Ananieva et al. [1] for assessing tool and model variability, showing the metrics adaptability. Guizzardi’s Metrics. Guizzardi et al. proposed 4 metrics: laconic, lucid, complete, and sound, which were adapted by Ananieva et al. [1] resulting in metrics of laconicity, lucidity, completeness and soundness. They extended the existing metrics to allow for a range from 0 to 1 indicating the relative property of the examined model and, in their case, tool. Laconicity and lucidity are used to evaluate the granularity and completeness and soundness for the coverage. Adapting the metrics to our case results in the following understanding: Laconic. We understand an AIRS integration to be laconic, iﬀ every entity recovered by the AIRS is mapped to at most one entity in the AIM (rel. RQ1 ). Lucid. We understand the AIM as lucid, iﬀ every entity in the AIM is mapped to at most one entity extracted by an AIRS (rel. RQ1 ). Complete. We understand the AIRS integration to be complete, iﬀ every entity recovered by the AIRS is mapped to at least one entity in the AIM (rel. RQ1 ). Sound. We understand the AIM as sound, iﬀ every entity in the AIM is mapped to at least one entity extracted by an AIRS (rel. RQ2 ). Following Ananieva et al. [1], we adapted the metrics to AIRSs, to evaluate laconicity, lucidity, completeness and soundness. Entities in our case are both: nodes and edges in the AIM. Whereas nodes are entities like subsystems or classes, edges represent the relation between subsystems and classes. By integrating these information into the AIM, we expect that we do not lose node information (e.g., no classes/subsystems are lost), but we assume that, because of correlating architecture information, an increase of new edges and nodes (e.g., introducing new hierarchy levels) occurs which leads to a decrease in soundness. 6.3  
   
  Methodology  
   
  The dataset used for evaluation includes four open-source systems: JVending, consisting of 1kLOC (8 ﬁles and 1 package), fastjson, having 44kLOC (193 ﬁles and 73 packages), Apache Hadoop, consisting of 68kLOC (399 ﬁles and 82 package), and Apache Struts2, having 70kLOC (568 ﬁles and 110 packages).  
   
  94  
   
  S. Jordan et al.  
   
  To evaluate the integration approach, we apply four AIRS (ACDC, Bunch, PKG, RELAX) on our data set and calculate the metrics using the AIRS output. In our studies, we tried diﬀerent similarity thresholds (50%, 60%, 70%, 80%, 90%). Only clusters with similarity above the speciﬁed threshold are merged together. Thresholds above 90% result in minimal integration of architecture information, as they lead to “disjoint” and “similar below threshold” integration results. Thresholds below 50% cause smaller subsystems to be merged into larger ones, resulting in large clusters and a loss of ﬁner granularity in architecture information. In our pre-study, we set the threshold at 80%, as this leads to integrated clusters that were perceived as similar by humans. We further tested if the order of integrating AIRS is signiﬁcant, but in our pre-study, we could not observe any diﬀerence related to the integration order. 6.4  
   
  Results and Discussion  
   
  Table 1 shows the condensed metric results for the subject systems. Table 1. Metric results of integration approach - The range for laconicity, lucidity, completeness and soundness lies between 0 and 1. Values for laconicity, lucidity and completeness closer to 1 are assessed as better, whereas values for soundness closer to 0 are better, as this means we were able to create new connections and hierarchy levels. Values in brackets indicate the elements compared. System  
   
  Laconicity  
   
  JVending Nodes 1.00 (122/122) Edges 1.00 (110/110)  
   
  Lucidity  
   
  Completeness  
   
  Soundness  
   
  1.00 (51/51) 1.00 (95/95)  
   
  1.00 (122/122) 1.00 (110/110)  
   
  0.86 (44/51) 0.77 (73/95)  
   
  fastjson  
   
  Nodes 1.00 (1951/1951) 1.00 (669/669) 1.00 (1951/1951) 0.94 (627/669) Edges 1.00 (1856/1856) 1.00 (1993/1993) 1.00 (1856/1856) 0.93 (1856/1993)  
   
  Hadoop  
   
  Nodes 1.00 (7558/7558) 1.00 (1800/1800) 1.00 (7558/7558) 0.99 (1777/1800) Edges 1.00 (7366/7366) 1.00 (6169/6169) 1.00 (7366/7366) 0.97 (5956/6169)  
   
  Struts2  
   
  Nodes 1.00 (7820/7820) 1.00 (2510/2510) 1.00 (7820/7820) 0.99 (2499/2510) Edges 1.00 (7577/7577) 1.00 (7379/7379) 1.00 (7577/7577) 0.96 (7105/7379)  
   
  Results. Based on our smallest software system (JVending), we discuss the general evaluation concept. We recovered 122 nodes and 110 edges across all AIRSs for JVending. The metrics laconicity and lucidity indicate that there are no duplicate architecture information stored in the AIM (laconic) or from the AIRS (lucid ). Both metrics indicate that we do not store the same architecture information (nodes or edges) recovered by two AIRS twice, which eliminates duplicates. Furthermore, the completeness metric is 1.00 in both cases (nodes: 122/122; edges: 110/110) as well. This indicates that the information recovered by the AIRSs is reliable mapped to at least one entity of the AIM, therefore we  
   
  Automated Integration into a Uniﬁed Model  
   
  95  
   
  can determine that we do not lose any information while integrating. Lastly, we consider the metric of soundness. This metric represents that every information in the AIM can be mapped to a recovered architecture information. We intend to condense the architecture information by creating new hierarchies or expanding the existing architecture information through the introduction of new hierarchy levels resulting in ﬁner architecture information. The soundness metric results for the recovered nodes and edges of JVending show that some edges and nodes are removed by integrating subsystems, which can be mapped to an existing subsystems by being a subset of the latter. Applied to the other subject systems (see Table 1), the integration strategy shows that the architecture information recovered for all of the subject systems can be integrated in the AIM without losing architecture information and with small gains by linking the architecture information with each other. This aspect, observable by comparing the larger systems like Apache Hadoop with JVending, means that there is no integration of subsets or complete similarity leading to less integration, yet we do not lose any information. This leads to the assumption that the recovered information is supplementing (or contradicting) the existing architecture information. To mitigate this, we introduced the confidence of the recovered architecture information, producing similar results by another approach increases the conﬁdence if the recovered architecture information is reliable. For the integration, we used a Windows Desktop Computer with an Intel(R) Core(TM) i5-3470K CPU @3.20GHz and 32 GB of RAM. The integration times were as follows: JVending (2 s), fastjson (1.11 min), Apache Hadoop (3.67 min), and Apache Struts2 (4.21 min). Bottleneck for the integration for larger systems is the available RAM of the evaluation setup. Discussion. The automatic integration of architecture information into the AIM allows to use diﬀerent architecture recovery methods and their outputs. Reducing the manual eﬀort for the integration can establish an automated architecture integration process. As diﬀerent AIRS produce similar yet diﬀerent architecture information about a system, a general integration, incorporating the diﬀerent perspectives of the AIRSs, connects perspectives by employing the proposed integration approach. The results indicate that the integrated architecture information does not lose any architecture information and provides a small gain in correlating the architecture information. As indicated by the soundness metric, we can observe integration between output of diﬀerent AIRSs. The resulting integrated AIM allows to deduce conclusions regarding concerns, subsystems as well as top-level subsystems. Recovered architecture information like subsystems and concern-based clusters can be overlapping and thus assign concerns to subsystems and their contents, which in turn categorizes the system. Presenting the integrated AIM to experts in a pilot expert interview allowed them to get an idea of architecturally unknown systems (JVending, fastjson). They elaborated that the concept of deferring concerns recovered by RELAX to the integrated subsystems is an interesting insight into the software system. The  
   
  96  
   
  S. Jordan et al.  
   
  integration of subsystems and hierarchies enables the speciﬁcation of key architectural subsystems. To further evaluate our approach, a user study is planned. Integrating architecture information from AIRS like Bunch and ACDC, shows room for improvements for consolidating the architecture information. We identiﬁed that the merging of clusters with a similarity threshold of above 80%, leads to very few consolidated clusters, as clusters are either large yielding a lower chance of similar clusters or quite small, where only small diﬀerences lead to the rejection of merging the two clusters. As we applied diﬀerent thresholds, not much change in the integration results were observed, but introducing a gradual threshold could remedy this challenge. Another insight is that the architecture information recovered by diﬀerent AIRSs is often supplementary, describing different perspectives of a software system. The automatic integration of architecture information has room for improvement. It can be enhanced by further integrating heterogeneous architecture information recovered by AIRS from heterogeneous data sources like existing documentation or knowledge data bases. Our current integration strategy is capable of adding architecture information if transformable into a DAG. Introducing a type-aware comparator or high-level comparator could also improve comparing AIRS output and AIM architecture information. Further research is needed by comparing the integrated architecture information of the integration process and the recovered architecture information for test systems and their identiﬁed ground truth and if the integration leads to better results. 6.5  
   
  Threats to Validity  
   
  External Threats. Known limitations of our research are the limited selection of test systems as well as architecture recovery methods including other systems or methods could yield other results for the integration. We aim to include further AIRS to test if the integration approach is still applicable. We are also limited to AIRS results transformable into a DAG. Internal Threats. A limitation of our research are the borders of the integration process as we compare pair wise on the lowest level, this could have an inﬂuence on the respective architecture information and a comparison of higher level outputs (e.g., whole clusters) could improve the integration process. Having a fourth comparator performing a top-down comparison could help integrating architecture information. Lastly, the pairwise comparison leads to an high use of working memory leading to technical limitations when integrating complex and large systems As stated in the results, this is a hardware limitation, which could be mitigated by optimizing the comparison.  
   
  7  
   
  Related Work  
   
  The Knowledge Discovery Metamodel [10], designed by the Object Management Group, uses the meta-meta-model (MOF). It was created with the goal to have  
   
  Automated Integration into a Uniﬁed Model  
   
  97  
   
  a common data interchange format for software re-engineering tools. KDM consists of four diﬀerent layers. KDM incorporates diﬀerent relevant architecture information. However, it is not focused on automatic integration of architecture information. Yet, the AIM considers similar aspects, but in a concise manner. Konersmann et al. [12] present a process to explicitly integrate software architecture model information with source code. This approach supports the speciﬁc models focused on components and interfaces. It links architecture models using the Intermediate Architecture Description Language (AIDL) with source code to immediately align architecture concepts with the source code. While they state that the focus on a single point of truth for the correlation of architecture information model and source code has its beneﬁts, we argue that integrating diﬀerent sources is beneﬁcial to get diﬀerent architecture information. Kazman et al. [9] propose CORUM II, a framework using a horseshoe-like procedure divided into implementation, component, and business layers. The integrated architecture information allows to use the information for architectural designs, implementations and code generation. Additionally, it aids architects in understanding the analyzed system. While the process is similar to our approach, automating the integration reduces the amount of manual work needed. Lungu et al. [17] present Softwarenaut, which integrates architecture information as a ﬁrst step in the architecture recovery process. By aggregating relationships found in software artifacts horizontally, they enhance comprehension of implemented classes and packages. Softwarenaut uses a hierarchical graph to identify where aggregation and consolidation is useful. Their approach focuses on refactoring source code, neglecting important aspects of software architecture. Farwick et al. [5] propose an approach to automatically integrate cloud architecture information into a enterprise architecture model. They propose a living model tightly coupled to system evolution. The architecture information based on diﬀerent sources (e.g., CMDB, dev. env.) is integrated into a central data model, however an integration of heterogeneous data sources is not necessary, as speciﬁc parts are updated from speciﬁc sources. This approach focuses on cloud architecture, whereas our approach can be adapted for diﬀerent use cases. Laser et al. [14] propose a architecture workbench named ARCADE, which combines diﬀerent architecture recovery approaches, but the integration of the architecture information is part of the exploration of the recovered architecture information. They provide valuable architecture information, but integration is done manually and human interaction still needed.  
   
  8  
   
  Conclusion  
   
  In this paper, we presented an automated approach for consolidating and integrating architecture information that was obtained from independent architecture information recovery methods into a uniﬁed architecture information model. The goal is to remove redundancies in recovered information, relate independently recovered information, and resolve conﬂicting information as well as estimate conﬁdence in the recovered information. We illustrated the original recovery  
   
  98  
   
  S. Jordan et al.  
   
  methods as well as the integration approach using a running example. Finally, we evaluated our approach by applying it to a number of real-world subject systems in order to ensure that no information is lost during integration and to assess how well previously independent information can be related.  
   
  References 1. Ananieva, S., et al.: A conceptual model for unifying variability in space and time. In: SPLC (A), pp. 15:1–15:12. ACM (2020) 2. Behnamghader, P., Le, D.M., Garcia, J., Link, D., Shahbazian, A., Medvidovic, N.: A large-scale study of architectural evolution in open-source software systems. Empir. Softw. Eng. 22(3), 1146–1193 (2017) 3. van Deursen, A., Hofmeister, C., Koschke, R., Moonen, L., Riva, C.: Symphony: view-driven software architecture reconstruction. In: WICSA, pp. 122–134. IEEE Computer Society (2004) 4. Falessi, D., Babar, M.A., Cantone, G., Kruchten, P.: Applying empirical software engineering to software architecture: challenges and lessons learned. Empir. Softw. Eng. 15(3), 250–276 (2010) 5. Farwick, M., Agreiter, B., Breu, R., H¨ aring, M., Voges, K., Hanschke, I.: Towards living landscape models: automated integration of infrastructure cloud in enterprise architecture management. In: International Conference on Cloud Computing, CLOUD 2010, Miami, USA, 5–10 July, pp. 35–42. IEEE Computer Society (2010) 6. Guizzardi, G., Ferreira Pires, L., van Sinderen, M.: An ontology-based approach for evaluating the Domain Appropriateness and Comprehensibility Appropriateness of modeling languages. In: Briand, L., Williams, C. (eds.) MODELS 2005. LNCS, vol. 3713, pp. 691–705. Springer, Heidelberg (2005). https://doi.org/10. 1007/11557432 51 7. IEEE/ISO/IEC International Standard for Software: systems and enterpriseArchitecture description. Standard International Organization for Standardization (2022) 8. Jordan, S., Linsbauer, L., Kittelmann, A., Schaefer, I.: Software architecture recovery - a systematic literature review. Inf. Softw. Technol. J. Under review 9. Kazman, R., Woods, S.S., Carri`ere, S.J.: Requirements for integrating software architecture and reengineering models: CORUM II. In: 5th Working Conference on Reverse Engineering, WCRE ’98, Honolulu, USA, 12–14 October 1998, pp. 154–163. IEEE Computer Society (1998) 10. Architecture-driven modernization: Knowledge discovery meta-model (KDM). Standard, Object Management Group (2016) 11. Knoll, M.: Handbuch der software-architektur. Wirtschaftsinf. 48(6), 454 (2006) 12. Konersmann, M.: A process for explicitly integrated software architecture. Softwaretechnik-Trends 36(2) (2016) 13. Kruchten, P.: The 4+1 view model of architecture. IEEE Softw. 12(6), 42–50 (1995) 14. Laser, M.S., Medvidovic, N., Le, D.M., Garcia, J.: ARCADE: an extensible workbench for architecture recovery, change, and decay evaluation. In: ESEC/SIGSOFT FSE, pp. 1546–1550. ACM (2020) 15. Le, D.M., Behnamghader, P., Garcia, J., Link, D., Shahbazian, A., Medvidovic, N.: An empirical study of architectural change in open-source software systems. In: MSR, pp. 235–245. IEEE Computer Society (2015)  
   
  Automated Integration into a Uniﬁed Model  
   
  99  
   
  16. Link, D., Behnamghader, P., Moazeni, R., Boehm, B.W.: Recover and RELAX: concern-oriented software architecture recovery for systems development and maintenance. In: ICSSP, pp. 64–73. IEEE/ACM (2019) 17. Lungu, M., Lanza, M., Nierstrasz, O.: Evolutionary and collaborative software architecture recovery with softwarenaut. Sci. Comput. Program. 79, 204–223 (2014) 18. Lutellier, T., et al.: Comparing software architecture recovery techniques using accurate dependencies. In: ICSE (2), pp. 69–78. IEEE Computer Society (2015) 19. Mancoridis, S., Mitchell, B.S., Chen, Y., Gansner, E.R.: Bunch: a clustering tool for the recovery and maintenance of software system structures. In: ICSM, p. 50. IEEE Computer Society (1999) 20. Schlie, A., Rosiak, K., Urbaniak, O., Schaefer, I., Vogel-Heuser, B.: Analyzing variability in automation software with the variability analysis toolkit. In: Proceedings of the 23rd International Systems and Software Product Line Conference, SPLC 2019, France, 9–13 September, pp. 89:1–89:8. ACM (2019) 21. Tzerpos, V., Holt, R.C.: ACDC: an algorithm for comprehension-driven clustering. In: WCRE, pp. 258–267. IEEE Computer Society (2000) 22. Wen, Z., Tzerpos, V.: An eﬀectiveness measure for software clustering algorithms. In: 12th International Workshop on Program Comprehension (IWPC 2004), 24–26 June 2004, Bari, Italy, pp. 194–203. IEEE Computer Society (2004)  
   
  An Experience Report on the Design and Implementation of an Ad-hoc Blockchain Platform for Tactical Edge Applications Nguyen Khoi Tran1(B) , Muhammad Ali Babar1 , Julian Thorpe2 , Seth Leslie2 , and Andrew Walters2 1 2  
   
  The University of Adelaide, Adelaide, SA 5005, Australia {nguyen.tran,ali.babar}@adelaide.edu.au Defence Science and Technology Group, Adelaide, Australia  
   
  Abstract. The success of task groups operating in emergency response or military missions largely depends on their ability to access, process, and exchange information, which is enabled by tactical edge software applications. Designing such applications poses challenges for architects due to the need for resilience, trust, and decentralisation of information processing and exchange. Nevertheless, these challenges also present opportunities for exploring new architectural alternatives like blockchainbased decentralised systems. This paper reports the experience from an R&D partnership to architect and implement a decentralised ad-hoc platform for deploying and operating tactical edge software applications, which facilitate information processing and exchange among tactical edge task groups. The platform utilises a peer-to-peer architecture, aided by ad-hoc blockchain networks, to enable secure and decentralised information storage, update, and distribution. By leveraging a kernel-based, service-oriented architecture, the platform can be adapted to diﬀerent mission contexts and integrated with various task groups’ systems and data sources. Additionally, we present a process and heuristics for architecting tactical edge software applications to operate on the platform. We further share our experience in deploying and operating the platform in a government-led ﬁeld experiment and conclude the report with lessons learned from this case study. Keywords: blockchain · smart contract · platform · information sharing · common operating picture · emergency response  
   
  1  
   
  Introduction  
   
  The tactical edge environment of a military or emergency response mission contains various task groups from diﬀerent organisations. The mission’s success depends on the task groups’ ability to access, process, and exchange tactical c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 100–116, 2023. https://doi.org/10.1007/978-3-031-42592-9_7  
   
  Ad-hoc Blockchain Platform for Tactical Edge Applications  
   
  101  
   
  information in a timely and secure manner, despite network bandwidth, processor power, data storage, and electrical power constraints [5,17,18]. Secure and resilient information exchange within and across task groups can enable collaborative information processes, such as maintaining a shared library of dynamic reference information (DRI) about environments and objects of interest within a mission to improve situation understanding and facilitate superior decision processes [4]. Within an increasingly digitalised tactical edge environment, collaborative information processes are increasingly aided by software applications, which we denote in this paper as tactical edge software applications. Tactical edge software applications require an underlying software platform that can support information processing and exchange within and across task groups while ensuring the information’s integrity, conﬁdentiality, traceability, and provenance. This paper presents the ﬁndings and experiences of a longstanding academia-government partnership focused on architecting and developing a decentralised software platform for information processing and exchange at the tactical edge. The platform functions as an ad-hoc information platform established across computing nodes of task groups prior to or during a mission. It allows for the secure distribution, update, and storage of shared information artefacts without relying on a remote intermediary. One of the platform’s key features is its ability to allow task groups to deploy an extensible application suite for facilitating collaborative information processes such as DRI. The platform is built on ad-hoc blockchain networks [16] and peer-to-peer (P2P) content distribution networks like the Interplanetary File System (IPFS) [1]. We utilise a kernel-based, service-oriented architecture to encapsulate the platform’s complexity and enable task groups to adapt the platform to diﬀerent mission contexts and resource availability by changing the application suite. We have also developed a design process and heuristics for architecting software applications that operate on the platform. This paper is structured as follows. Section 2 presents the current centralized architecture of a tactical edge environment and proposes an alternative decentralized information platform. Section 3 describes the architecture of the platform that implements the decentralized information platform. Section 4 details a process for creating tactical edge software applications that function on the platform. Sections 5 and 6 describe the experiences and lessons gained from implementing and operating the platform during a government-led ﬁeld experiment. Section 7 provides an overview of related work. Finally, Sect. 8 summarizes and concludes the paper.  
   
  2 2.1  
   
  Context and Architectural Vision Current Architecture: Centralised Information Platform  
   
  Figure 1 depicts the current architecture of a tactical edge environment consisting of two task groups working together. The computing devices used by these  
   
  102  
   
  N. K. Tran et al.  
   
  Fig. 1. Architecture of an exemplary tactical edge environment and infrastructure  
   
  groups are divided into three tiers, named and classiﬁed based on MITRE’s Tactical Edge Characterisation Framework [5]. The higher a device is in the hierarchy, the more stable its network connectivity, power supply, and computing resources. Devices in the Dismounted systems category include wearable devices, smartphones, mobile workstations, and remote-controlled or autonomous vehicles used by ﬁrst responders during missions. Mobile centres are workstations or servers used by ﬁeld-deployed command and control (C2) to provide situational awareness tools (like Geographic Information System) and C2 facilities to receive updates from ﬁrst responders, monitor missions, and issue instructions. These centres can also serve as cloudlets [8] for oﬄoading data and AI/ML operations from dismounted systems. Fixed centres operate from a remote location away from the tactical edge. They provide commanders with situational awareness and C2 capability over an entire task group. Fixed centres can also serve as a private cloud, providing big data storage and processing capability. Enabling information exchange and processing among task groups requires connecting their infrastructures. The current cloud-centric solutions leverage intermediary public clouds, hybrid clouds [9], or a federated design to establish a centralised information platform to store, distribute, and secure shared information. The exchange of and processing upon shared information can be encapsulated by tactical edge information applications operating within the information platform.  
   
  Ad-hoc Blockchain Platform for Tactical Edge Applications  
   
  103  
   
  Example: Dynamic Reference Information Management. DRI is an evolving information library that describes objects of interest, their attributes, and their connection to the observable world, such as the tactical edge environment where a mission occurs [4]. DRI can be maintained by diverse teams to improve their situational understanding and decision-making abilities. Military and emergency service platforms commonly utilize DRI to conﬁgure their systems and sensors for a mission. Due to its critical role, ensuring the authenticity, integrity, provenance, and availability of this shared information artefact is essential [18]. The storage and update of DRI serve as an excellent example of a tactical edge information application. 2.2  
   
  Vision: Decentralised Secure Information Platform  
   
  Having presented the current architecture, the remainder of this paper focuses on our eﬀort to architect and engineer an alternative to address the following issues of the current architecture that arose in practice: Dependence on Network Uplink. C2 and ﬁrst responders might not have access to up-to-date information on a remote cloud due to intermittent connectivity. Moreover, the exchanged information must cross multiple trust boundaries, thus increasing its exposure to cyber threats. Single Point of Failure. The centralised information platform represents an intermediary within the information ﬂow within and across task groups. Even though a defence-in-depth strategy comprising network protection, intrusion detection, authentication and authorisation, encryption, and sandboxing can protect the information platform from external threats, there is still a risk that programming errors, insider threats, or cyber attacks can disrupt the information platform and, thus, deny C2 and responders from accessing and sharing vital information. Ownership, Control, and Accountability. A major issue we faced when architecting tactical edge information exchange and processing services was the ownership and control over the services and the intermediary cloud infrastructure. The task groups might not be willing or able to host the shared data and processes. They might also not trust others or an intermediary enough to hand over the data and processes. We developed the idea of a Decentralized Secure Information Platform after researching the utility of blockchain technology in Internet of Things (IoT) systems [14] and successfully establishing and leveraging an ad-hoc blockchain network to collect sensor data during a ﬁeld experiment [13]. The architecture of this envisioned information platform is shown in Fig. 2. The platform can be deployed in the ﬁeld and operated directly by tactical edge task groups. Upon the platform, they can deploy decentralised tactical edge software applications to facilitate collaborative information processes such as DRI management. The backbone of the platform is a private ad-hoc blockchain network established  
   
  104  
   
  N. K. Tran et al.  
   
  amongst task groups to provide a decentralised root of trust and synchronisation. Due to the use of an ad-hoc blockchain, we refer to the envisioned decentralised information platform as the “Ad-hoc Blockchain Platform” or simply “platform.”  
   
  3  
   
  Design and Implementation of the Platform  
   
  This section presents the platform’s architecture and implementation details and elaborates on how the platform achieves the vision described in Sect. 2.2.  
   
  Fig. 2. Conceptual view of the Adhoc Blockchain Platform for Tactical Edge  
   
  3.1  
   
  Requirements and Constraints  
   
  The platform was architected towards the following requirements, which we derived from the vision described in Sect. 2.2. Decentralisation. The platform should be operable directly by the tactical edge task groups to avoid the issues of ownership, control, accountability, and single point of failure. Proximity to the Tactical Edge. The platform should operate at or close to the tactical edge to improve availability and reduce latency.  
   
  Ad-hoc Blockchain Platform for Tactical Edge Applications  
   
  105  
   
  Information Trustworthiness. We consider information trustworthy if a receiver can ascertain the identity of the sender (authenticity), verify that it has not been modiﬁed (integrity), and be sure that the sender cannot falsely deny sending the message (non-repudiation) [10]. Provenance of Processing Results. Use cases such as DRI management require updating shared artefacts based on the incoming information. The provenance showing how and by whom the updates were made is vital for both in-situ trust assessment and postmortem analysis. Maintaining such provenance records would lays a foundation and contributes to the trustworthiness of the exchanged information. Potentially Large Data Volume. The platform must support the exchange, processing, and possibly storage of large data payloads captured and exchanged at the tactical edge, such as video and audio recordings. Interoperability with Applications and Data Sources. The platform must support diverse tactical edge information applications. Doing so requires interoperability with various software systems and data sources of task groups.  
   
  Fig. 3. Platform’s architecture comprising multiple peer nodes  
   
  3.2  
   
  Platform Architecture  
   
  We designed the platform’s architecture by leveraging well known architectural styles including peer-to-peer (P2P), service-oriented (SOA), and Microkernel. As a P2P system, the platform is made up of multiple identical software clients called Platform Nodes (Fig. 3), which are deployed across the computing devices of task group participants. Each node represents a participant within the platform and retrieves or updates information on their behalf. Participants can interact with the information through decentralised tactical edge applications running locally on their devices. Nodes communicate via pre-established data links like tactical data links, ad-hoc wireless networks, and cellular networks. To ensure  
   
  106  
   
  N. K. Tran et al.  
   
  the security of the information exchanged, we have adopted a blockchain protocol like Ethereum [19]. Additional capabilities such as data storage and distribution can be enabled by integrating other protocols like IPFS [1]. By adopting a P2P architecture and deploying nodes within the tactical edge, we addressed the ﬁrst two requirements. We addressed the described requirements regarding trustworthiness of information exchanges by leveraging the built-in security mechanisms of a blockchain protocol. To facilitate the adaptation of platform nodes to mission contexts and participant devices, we leveraged the microkernel architecture to design platform nodes. The software stack of a node is separated into kernel space and application space. Both layers comprise software services that abstract the complexity behind predeﬁned service interfaces to simplify the development and integration of applications and data sources. The application space contains applicationspecific services, which are key components of tactical edge information applications running on the platform. This layer’s content can be modiﬁed based on the application suite of a mission and the information needs and authorisation levels of a participant. We will elaborate on developing and deploying a tactical edge application on the platform later in Sect. 4. The kernel space contains clients and kernel services that are vital for platform’s operation and, thus, unchanged across missions and participants. The clients layer contains software clients necessary for the P2P protocols utilised by the platform (e.g., blockchain client and wallet for blockchain protocol, IPFS client for IPFS). The kernel services layer provides a uniform interface for application services to interact with the clients. The wallet service encapsulates a blockchain client and a wallet, providing the ability to query a blockchain and submit transactions. The storage service encapsulates data payload stores (e.g., IPFS client or local storage) and implements the secure oﬄoading process for large data payloads (Sect. 3.2). The Cache service provides the ability to cache on-blockchain records and data payloads. We introduced the cache service to the platform because we found that the read latency from a blockchain, specifically from an Ethereum-based blockchain via the Go-Ethereum, was high and impeded the user experience from the graphical user interface at the application layer. Secure Data Oﬄoading. To save valuable blockchain storage space for critical records, we applied the Oﬀ-chain Data Storage pattern [21] to architect a secure mechanism to store data payloads outside the blockchain. In particular, the platform can store incoming audio and video recordings on a node’s local storage or a decentralised content network established among platform nodes (e.g., using IPFS). The platform then includes the cryptographic hashes of these data payloads in blockchain transactions to prove their existence. These hashes can be used to identify, locate, and verify the integrity of the data payloads. The storage service can transparently handle this oﬄoading process.  
   
  Ad-hoc Blockchain Platform for Tactical Edge Applications  
   
  3.3  
   
  107  
   
  Platform Implementation  
   
  Our platform’s concept demonstrator uses the Go-Ethereum (Geth) client implementation to support the Ethereum protocol. To handle the creation of Ethereum transactions and interaction with smart contracts, we used the Ethers.js for our Wallet service. We implemented the services as NodeJS modules and packaged them as Docker containers. Containerisation helps improve portability across diverse systems that task groups utilize. Additionally, we utilized Docker Compose to provide a programmatic and automated way to deploy the entire stack. 3.4  
   
  Platform Bootstrapping Process  
   
  The platform can be ﬁeld-deployed by deployers, IT operators from participating task groups. Deployers bootstrap the platform on behalf of their task groups and exert no control over the platform after deployment. The process is as follows: 1. Configure the architecture of the ad-hoc blockchain network. Platform deployers can tune the network’s performance with design decisions such as protocol choice and client deployment. Our preliminary collections of common blockchain network designs provide some templates to aid the design process [16]. 2. Deploy and configure blockchain clients on all computing nodes that participate as platform nodes. Deployers can leverage an blockchain deployment automation framework such as NVAL [15] to automatically deploy and conﬁgure blockchain clients according to the architecture from the previous step. 3. Deploy and configure the kernel service layer on all platform nodes. 4. Deploy tactical edge applications. This step consists of deploying the smart contract backend of applications and starting application services on platform nodes. Section 4.3 presents more details about the application deployment process.  
   
  4  
   
  Develop and Deploy Applications with the Platform  
   
  Tactical edge information applications like DRI management can be developed separately from the platform and deployed upon the platform during the bootstrapping process. This section presents the architecture, development, and deployment processes of tactical edge information applications. 4.1  
   
  Application Architecture  
   
  An application is made up of two parts: on-blockchain and on-platform components. The on-blockchain components are smart contracts that store and process information like a DRI library. The on-platform components include software clients that users can interact with and an application service that connects software clients with smart contracts. These components are installed on the platform node of authorized users.  
   
  108  
   
  4.2  
   
  N. K. Tran et al.  
   
  Application Development Process  
   
  After analyzing the project logs, we developed the following process to assist developers in designing and developing applications for the platform. 1. Determine the suitability of the application. To determine if an application is suitable for the platform, it is important to identify its information needs. Only shared information artefacts and their updates will beneﬁt from being hosted on the platform. 2. Identify the data payload and provenance records. The provenance records beneﬁt from being managed by a blockchain, whilst the payloads represent candidates for oﬄoading to oﬀ-chain data stores. 3. Model the collaborative information processes. Because blockchains operate like deterministic state machines, it is helpful to model a collaborative information process as a set of actions targeting the shared information artefacts, transitioning them between various states in their life cycle. The artefacts can be represented in a blockchain by smart contracts. Artefacts’ stages can be stored within the contracts’ variables, and actions can be implemented as smart contract functions. Whenever a user sends a blockchain transaction to a smart contract function to act on the shared information artefact, the transaction becomes part of the provenance record. 4. Develop an application service. This service provides an Application Programming Interface (API) that connects external software clients to smart contracts. To make it easier for integration with external software clients, we recommend designing the API at a higher level of abstraction to allow users to retrieve information instead of blockchain transactions. 5. Develop user-facing software clients (optional). 4.3  
   
  Application Deployment Process  
   
  Before the platform bootstrap (Sect. 3.4), deployers must acquire and integrate software components of all utilised applications into the deployment package of platform nodes. Each node can possess a diﬀerent application suite according to its users’ information needs and authorisation. Once the ad-hoc blockchain network has been established during platform bootstrapping, deployers can deploy the smart contracts of all applications on the blockchain. They can then use the smart contract identiﬁers to ﬁnish conﬁguring application services. Finally, deployers start the application services and corresponding software clients on platform nodes, completing both application deployment and platform bootstrapping.  
   
  5  
   
  Case Study  
   
  We developed and deployed a proof-of-concept demonstration of our platform, along with an application called Decentralised Dynamic Reference Information  
   
  Ad-hoc Blockchain Platform for Tactical Edge Applications  
   
  109  
   
  (DDRI), as part of a government-led ﬁeld experiment. Due to the space constraint of this paper, our report in this section will focus on the design and technological decisions of the proof-of-concept platform and the application utilised in the experiment. Detailed quantitative analysis of the platform would be presented in a forthcoming paper. 5.1  
   
  Context  
   
  The case study was part of the Real-time Information Superiority Experimentation (RISE) initiative [17]. RISE was created to test and explore information management, exploitation, and exchange technologies like the platform and DDRI in a ﬁeld experiment setting. The experiment took place at Port Elliot with Surf Life Saving South Australia and involved three emergency service scenarios. These scenarios included a search and rescue mission for a drifting inﬂatable, a search and rescue mission for an emergency beacon attached to a boat in distress, and a repeated version of the ﬁrst scenario with limited communication capabilities. The platform and DDRI application were utilised to maintain a DRI library based on information from three viewpoints, simulating three task groups. Figure 4 presents the map of the experiment area and locations of platform nodes (PESLSC, Commodore’s Point, and Lady Bay).  
   
  Fig. 4. Node locations at Port Elliot Surf Life Saving South Australia (PESLSC), Commodore’s Point, and Lady Bay  
   
  110  
   
  N. K. Tran et al.  
   
  5.2  
   
  Implementation  
   
  Background. We designed the software components of DDRI based on the following DRI formalisation by Consoli and Walters [4]. An reference information library is a set IAP , consisting of four subsets: known objects O, objects’ attributes or features XA , known sensors S, and environment’s parameters Xenv , such as geographical location. IAP = {O, XA , S, Xenv } The library is updated due to an observation process Θ. This process generates an observation about a stimulus event Se at time t. The observation is made by a sensor S and describes the attributes XA (S) of an object of interest objInti . The observation happens within an environment described by parameters Senv . Θ(Se , t) = {objInti , XA (S), S, Senv } An observation becomes a reference information update (RI update) if it happens within the mission environment (Senv ∈ Xenv ) and either the object of / O) or attributes of a known object (XA (S)) has interest is unknown (objInti ∈ changed, the information generated by the observation represents an update to the library. Therefore, a dynamic reference information library can be considered an IAP that can be modiﬁed by RI updates during a mission. Functional Scope. DDRI’s design began by identifying the elements of DRI management that the platform should host. We decomposed DRI management into four steps: observation, processing, storage, and propagation. While observation and processing can be done manually or with AI-assisted tools, storage and propagation require information exchange among members. Thus, DDRI focused on the storage and propagation steps. Smart Contract Design. Since all observations would come from task groups in the same mission, we assumed they happen in the same observable world. In other words, Senv ∈ Xenv for all observations, so we omitted Senv and Xenv from our data model without losing information. Therefore, a DRI library comprises the set of available sensors S, objects of interest objInti , and attributes of those objects XA (S). The set of available sensors, objects, and their attributes describe the state of DRI at a time. The DRI transition between states is based on incoming RI updates, reporting observations about changes in attributes of an object of interest. The assessment and appending of RI updates into a DRI form the actions making up the collaborative information process among task groups. The attributes within RI updates represent data payloads. The details regarding the sensor, the observed objects, and attributes’ representations (e.g., cryptographic hashes) within RI updates triggering the update of DRI represent the provenance of the shared information artefact. We designed the smart contract backend of the DDRI application based on the above analysis. The smart contract classes and objects (struct) that make  
   
  Ad-hoc Blockchain Platform for Tactical Edge Applications  
   
  111  
   
  up the on-blockchain components of DDRI are presented in the class diagram shown in Fig. 5. We assumed each mission has one DRI and task groups can simultaneously participate in multiple missions. DDRI uses one instance of the Mission contract to represent a mission and manage its DRI. The DDRI contract maintains a list of registered missions and provides the createMission function for deployers to register a new mission. For each mission, the DDRI contract creates a new instance of the Mission contract. This contract includes a list of RIUpdate objects to capture a DRI’s development. Since the latest state of a DRI could be derived from the RI updates, we left the presentation of DRI to oﬀ-blockchain software clients and knowledge representation tools. The addRIUpdate function handles the processing and appending of RI updates. Future implementations of DDRI could extend the addRIUpdate function with collaborative veriﬁcation and validation protocols.  
   
  Fig. 5. Smart contracts for DRI management  
   
  Services and Clients. The next step was designing the application service that exposes DDRI smart contracts to external software clients. This service internally calls the storage service to oﬄoad the RI update payload and then calls the wallet service to construct and submit the relevant transaction. Additionally, it calls the cache service to check and update the cache before ﬁnally returning the sequence result to the upper layer for responding to users. We also developed two types of software clients tailored to diﬀerent users. The Mobile client is a web-based application accessible via mobile phones for forward-deployed agents to report and record RI updates from the ﬁeld rapidly. The C2 Dashboard is a web-based dashboard used by team leaders to access and view the status and history of every object of interest in the mission (Fig. 6). The dashboard presents both the RI update list and the latest state of DRI derived from the RI updates.  
   
  112  
   
  N. K. Tran et al.  
   
  Fig. 6. C2 Dashboard showing an RI update list and a corresponding list of objects of interest  
   
  5.3  
   
  Deployment and Operation  
   
  The prototype platform utilised in the experiment comprised three on-site nodes, placed at vantage points in Fig. 4, and a remote located 85 km from the experiment site to simulate a remote ﬁxed centre. Initially, we had planned to deploy the nodes directly on designated computers and connect them via cellular network links using a virtual private network. However, we had to switch to a fall-back conﬁguration due to weather conditions and technical challenges. As a result, all four nodes were deployed on separate cloud-based virtual machines connected via a VPN. The designated computers could control their corresponding platform nodes through a 4G uplink. During the experiment, the authors took on the responsibility of operating platform nodes to record RI updates. The updates were provided by mission participants who acted as observers and information processors. These updates included verbal instructions and visual observations of the environment and rescue. For instance, an event such as ‘Jet Ski 1 pulling the lost inﬂatable back to the beach to treat the patient’ would involve describing the inﬂatable, patient details, rescue craft and crew status, and the time associated with each action in the situation. Before each experiment, participants were assigned roles as observers and processors, which were also documented in the RI updates. The entire experiment lasted for 5 h and 45 min. In summary, 361 RI updates were recorded and exchanged through the platform throughout the experiment, with an average time interval of 44 s between updates. The ad-hoc blockchain that supported the platform retained a steady rate of 15 s between blocks, which indicated that the blockchain could keep up with the information. At the end of the mission, the distributed ledger maintained by the platform only grew by 10MB, which suggested that the platform had adequate scalability.  
   
  6  
   
  Lessons Learned  
   
  Blockchain Network Architecture Design as a Means to Achieve Software Requirements. The quality attributes of blockchain-based software applications depend on the characteristics of their underlying blockchains. The characteristics cannot be modiﬁed for public blockchains, so they must be treated  
   
  Ad-hoc Blockchain Platform for Tactical Edge Applications  
   
  113  
   
  as constraints. For private blockchains, architects may be able to swap blockchain implementations or develop new consensus protocols. However, caution should be taken due to these protocols’ complexity and adversarial context [2]. We discovered that tweaking the architecture of a blockchain network can oﬀer a promising alternative to the approaches mentioned above. For instance, one can reduce the amount of resources consumed by a blockchain network on dismounted systems by disabling the mining feature of their blockchain nodes and tweaking the protocol conﬁgurations by switching from Proof-of-Work (PoW) to Proof-of-Authority (PoA). Architects can also embed an organisation’s structure into a blockchain network’s architecture by controlling the assignment of blockchain nodes and roles (full nodes, archive nodes, miners) to participants. By taking control of such design decisions, architects can optimise the blockchain network’s characteristics to ease the constraints at the application design level without developing new blockchain protocols or replacing blockchain implementations altogether. Furthermore, blockchain network architectures provide new research opportunities, such as identifying a design space [13] and patterns (e.g., [16]) that can help practitioners design blockchain networks tailored to their applications. Autonomy Versus Control. Decentralisation implies the autonomy of participants. Such autonomy is realised by bringing the abilities to access, process, and exchange information to the tactical edge and replicating them across participants. While this approach can help strengthen the resilience of information access and processing, it can also create challenges regarding coordinating and controlling a mission. Additionally, participants must take on the responsibility of bootstrapping and managing their software infrastructure to be a part of the platform. A solution we adopted in the project is introducing a bootstrapping phase to coordinate the platform launch before the mission. During this phase, platform deployers (who are technicians from task groups) can use automation tools like NVAL [15] to deploy and conﬁgure platform nodes on task groups’ computers according to the mission and their information needs. After deployment, the platform remains decentralised and autonomous. We are also exploring other decentralised monitoring and governance mechanisms so that privileged participants (such as task group commanders) can monitor and take action on the platform, such as disabling platform nodes when compromise is detected.  
   
  7  
   
  Related Work  
   
  Blockchain technology has been increasingly leveraged in military and emergency response contexts to prevent cyber attacks, manage complex supply chains, and strengthen the resilience of communication links both within and outside tactical edge environments [3,12]. For instance, Siemon et al. [11] proposed a framework to leverage blockchains as a resilient communication infrastructure among C2 in an emergency response mission. Fend et al. [6] utilised blockchains as a secure  
   
  114  
   
  N. K. Tran et al.  
   
  mechanism for updating the retransmission policies between military networks (Tactical Data Links or TDL). Rather than focusing on individual use cases, our proposed ad-hoc blockchain platform provides a foundation for developing and operating multiple use-case-speciﬁc applications. For instance, task groups can use the platform to secure TDL retransmission policies by deploying a tactical edge information application that manages the policy updates and exposes service endpoints for TDL gateways to retrieve trusted and up-to-date policies. The platform was designed and developed based on the existing software architecture knowledge about blockchain-based software. Inspired by Xu et al. [20], we leveraged a blockchain as a decentralised software connector for bridging distributed platform nodes. The oﬀ-chain data storage pattern [21] and caching tactic [22] were utilised to implement the platform’s secure data oﬄoading and caching capabilities. We also leveraged the smart contract registry and factory patterns [21] to design the exemplary application, DDRI. The model-driven approach by Jurgelaitis et al. [7] inspired our proposed heuristics for identifying and modelling the shared information processes for developing smart contracts of tactical edge information applications.  
   
  8  
   
  Conclusions  
   
  In this experience report, we discussed a software platform that enables secure information exchange and processing among task groups operating in a tactical edge environment. We provided insights into the platform’s analysis, architecture, and implementation. Additionally, we discussed the design process and supporting heuristics for creating tactical edge information applications that can operate on the platform. The platform’s applicability was also explored, highlighting its usefulness for further academic-government partnership on research and development of innovative concepts like DRI. Our platform was designed with decentralisation, adaptability, and integration in mind. Using a peer-to-peer architecture and an ad-hoc blockchain as a software connector, we created a platform that enables task group members to exchange and process information without relying on remote intermediaries. To achieve adaptability, we separated information processing logic from information exchange, storage, and processing services. The Microkernel architecture we chose reinforced this separation. We also ensured ease of integration by adopting a service-oriented architecture for interactions within and outside the platform. Our platform has been evaluated through a ﬁeld experiment. During platform’s development and deployment, we discovered that blockchain network architecture can be leveraged to achieve non-functional requirements at the application level. We also faced the challenge of balancing autonomy and control when operating a decentralised platform. In the future, we plan to investigate decentralised monitoring and governance mechanisms to address this trade-oﬀ. We also plan to further the quantitative analysis of the case study to inform the future reﬁnements and optimisations of the platform.  
   
  Ad-hoc Blockchain Platform for Tactical Edge Applications  
   
  115  
   
  References 1. Benet, J.: IPFS-content addressed, versioned, P2P ﬁle system. arXiv preprint arXiv:1407.3561 (2014) 2. Cachin, C., Vukoli´c, M.: Blockchain consensus protocols in the wild. arXiv preprint arXiv:1707.01873 (2017) 3. Clementz, G.W.A.Q.R.V.G.: Blockchain in defence: A breakthrough? Tech. rep. (2020). https://ﬁnabel.org/blockchain-in-defence-a-breakthrough/ 4. Consoli, A., Walters, A.: Dynamic reference information: formalising contextual actionable information for contested environments. In: 2020 14th International Conference on Innovations in Information Technology (IIT), pp. 154–159. IEEE (2020) 5. Dandashi, F., et al.: Tactical edge characterization framework, volume 1: Common vocabulary for tactical environments. Tech. rep. (2007) 6. Feng, W., Li, Y., Yang, X., Yan, Z., Chen, L.: Blockchain-based data transmission control for tactical data link. Digital Commun. Netw. 7(3), 285–294 (2021). https://doi.org/10.1016/j.dcan.2020.05.007 ˇ 7. Jurgelaitis, M., Butkien˙e, R., Vaiˇciukynas, E., Drungilas, V., Ceponien˙ e, L.: Modelling principles for blockchain-based implementation of business or scientiﬁc processes. In: CEUR Workshop Proceedings: IVUS 2019 International Conference on Information Technologies: Proceedings of the International Conference on Information Technologies, Kaunas, Lithuania, April 25, 2019. vol. 2470, pp. 43–47. CEURWS (2019) 8. Lewis, G., Echeverria, S., Simanta, S., Bradshaw, B., Root, J.: Tactical cloudlets: moving cloud computing to the edge. In: 2014 IEEE Military Communications Conference. IEEE (oct 2014). https://doi.org/10.1109/milcom.2014.238 9. Mansouri, Y., Prokhorenko, V., Babar, M.A.: An automated implementation of hybrid cloud for performance evaluation of distributed databases. J. Netw. Comput. Appl. 167, 102740 (2020). https://doi.org/10.1016/j.jnca.2020.102740 10. Schneier, B.: Applied Cryptography Protocols, Algorithms and Source Code in C. Wiley and Sons, Incorporated, John (2015) 11. Siemon, C., Rueckel, D., Krumay, B.: Blockchain technology for emergency response. In: Proceedings of the 53rd Hawaii International Conference on System Sciences (2020) 12. Tosh, D.K., Shetty, S., Foytik, P., Njilla, L., Kamhoua, C.A.: Blockchainempowered secure internet-of-battleﬁeld things (IoBT) architecture. In: MILCOM 2018–2018 IEEE Military Communications Conference (MILCOM), pp. 593–598. IEEE (2018) 13. Tran, N.K., Babar, M.A.: Anatomy, concept, and design space of blockchain networks. In: 2020 IEEE International Conference on Software Architecture (ICSA). IEEE (mar 2020). https://doi.org/10.1109/icsa47634.2020.00020 14. Tran, N.K., Babar, M.A., Boan, J.: Integrating blockchain and internet of things systems: a systematic review on objectives and designs. J. Netw. Comput. Appl. 173, 102844 (2021). https://doi.org/10.1016/j.jnca.2020.102844 15. Tran, N.K., Babar, M.A., Walters, A.: A framework for automating deployment and evaluation of blockchain networks. J. Netw. Comput. Appl. 206, 103460 (2022). https://doi.org/10.1016/j.jnca.2022.103460 16. Tran, N.K., Babar, M.A.: Taxonomy of edge blockchain network designs. In: Biﬄ, S., Navarro, E., L¨ owe, W., Sirjani, M., Mirandola, R., Weyns, D. (eds.) ECSA 2021. LNCS, vol. 12857, pp. 172–180. Springer, Cham (2021). https://doi.org/10. 1007/978-3-030-86044-8 12  
   
  116  
   
  N. K. Tran et al.  
   
  17. Walters, A., et al.: Conducting information superiority research in an unclassiﬁed surrogate defence environment. Tech. rep. (Sep 2018) 18. Walters, A., et al.: Building trusted reference information at the tactical edge. Tech. rep. (2019) 19. Wood, G., et al.: Ethereum: a secure decentralised generalised transaction ledger. Ethereum Proj. Yellow Pap. 151(2014), 1–32 (2014) 20. Xu, X., Pautasso, C., Zhu, L., Gramoli, V., Ponomarev, A., Tran, A.B., Chen, S.: The blockchain as a software connector. In: 2016 13th Working IEEE/IFIP Conference on Software Architecture (WICSA), pp. 182–191. IEEE (2016) 21. Xu, X., Pautasso, C., Zhu, L., Lu, Q., Weber, I.: A pattern collection for blockchainbased applications. In: Proceedings of the 23rd European Conference on Pattern Languages of Programs, pp. 1–20. ACM (jul 2018). https://doi.org/10.1145/ 3282308.3282312 22. Y´ anez, W., Bahsoon, R., Zhang, Y., Kazman, R.: Architecting internet of things systems with blockchain: a catalog of tactics. ACM Trans. Softw. Eng. Methodol. (TOSEM) 30(3), 1–46 (2021)  
   
  Designing a Reference Architecture for the C-ITS Services Priyanka Karkhanis(B) , Yanja Dajsuren, and Mark van den Brand Department of Mathematics and Computer Science, The Eindhoven University of Technology, Eindhoven, The Netherlands {p.d.karkhanis,y.dajsuren,M.G.J.v.d.Brand}@tue.nl  
   
  Abstract. Cooperative-Intelligent Transport Systems (C-ITS) services aim to improve road transportation through enhanced cooperative, connected, and automated mobility services. The current reference architectures for C-ITS have diﬀerent abstractions, with some focusing on technical aspects, while others center on speciﬁc traﬃc issues of particular countries. As a result, they have varying technical details and use ad-hoc notations, which limit their adaptability for cross-border deployment of C-ITS services. This paper presents a method for developing a C-ITS reference architecture, involving three essential parts: abstracting common C-ITS systems, describing them using an architecture framework, and reviewing the reference architecture. Using our method, we developed a C-ITS reference architecture for the C-ITS services for deployment sites across European countries. Our reference architecture oﬀers a clear and easily understandable design of C-ITS systems, eliminates the use of ad-hoc notations, and promotes adaptability. This makes it easier for stakeholders to communicate and collaborate across countries, facilitating the deployment of C-ITS services.  
   
  Keywords: C-ITS reference architecture transport systems · C-ITS  
   
  1  
   
  · Cooperative Intelligent  
   
  Introduction  
   
  Cooperative Intelligent Transport Systems (C-ITS), also known as connected vehicle technology in the United States, is a group of technologies and applications that enable eﬃcient communication between Vehicle and X, also known as V2X, where X can be any vehicle, piece of infrastructure, or pedestrian [7,24]. The advantages of C-ITS include increased road safety, decreased traﬃc, improved transportation eﬃciency, increased mobility, reduced environmental impact, and support for economic development [2]. Since 2008, and even earlier, C-ITS has been at the center of several initiatives [7]. There have been many C-ITS deployment projects in Europe and USA since that time [15]. The C-ITS services are an innovative array of technologies facilitated by digital connectivity between vehicles and between vehicles c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 117–132, 2023. https://doi.org/10.1007/978-3-031-42592-9_8  
   
  118  
   
  P. Karkhanis et al.  
   
  and transport infrastructure to enhance road safety, traﬃc eﬃciency, and driving comfort [20]. The primary functions of C-ITS services are to display regulatory boundaries via signs informing road users of speciﬁc obligations, restrictions, or prohibitions; to warn road users of impending incidents and the exact nature of those incidents, and to provide information to road users to improve road safety and comfort during a journey [7]. To promote the deployment of C-ITS services, the development of a reference architecture is seen as a crucial ﬁrst step. In general, reference architecture provides a shared language, reusable structures, and established practices. The ISO 14813-5:2020 Intelligent Transport Systems standard [12] deﬁnes a reference architecture as a high-level overview of the systems and connections relevant to C-ITS services and stakeholders. Reference architectures developed in various projects such as CONVERGE [10], DITCM [21], and NordicWay [26] address several challenges, including technical and operational issues. However, their respective reference architectural designs encompass distinct aspects. For example, NordicWay emphasizes communication to gain a deeper technical understanding of interoperability, while DITCM consists of a system architecture and a description of the business aspects within a Dutch context. From these diverse reference architecture designs, three limitations were readily apparent: First, the information contained within the reference architectures is excessively technical, making it diﬃcult for stakeholders in other nations to comprehend and utilize them. Second, using ad-hoc notations to model reference architectures can lead to fragmentation, with each country making its reference architecture that might not work with designs from other countries. Lastly, the majority of reference architectures are designed for speciﬁc objectives or countries, which may not be compatible with diverse traﬃc patterns and geographical conditions. These problems may cause disconnected and disjointed designs, which limit the usefulness of C-ITS as a whole. The widespread implementation of CITS services across European Union nations, along with the resolution of road transport issues, necessitates the adoption of a generic reference architecture. By utilizing the generic architecture, the extensive deployment of C-ITS services across nations becomes achievable [16]. Furthermore, it is important to acknowledge that the comprehensive understanding of C-ITS services, regardless of their extent, is limited due to the lack of publications by the academic and research communities. Studies such as [4,18] highlight a lack of emphasis on sharing information that could be crucial and particularly valuable in advancing cooperative transportation. According to our current knowledge, there is no explicitly deﬁned methodology or procedure for developing the C-ITS service reference architecture. Therefore, we deﬁne the following research question to develop a reference architecture that can be applied across deployment sites with diﬀerent C-ITS services. RQ: How to develop a reference architecture that can be used to deploy diverse C-ITS services across diﬀerent deployment sites? Our goal is to develop a reference architecture that diﬀerent deployment sites in the European Union (EU) can use as a model for rolling out C-ITS services. To  
   
  Designing a Reference Architecture for the C-ITS Services  
   
  119  
   
  accomplish this goal, we developed an organized method that aided us in producing an eﬃcient reference architecture. We describe our method, which consists of three phases: the abstraction phase, which involves identifying and separating common C-ITS systems; the description phase, which applies architecture standards; and the architecture review phase, which incorporates the feedback of C-ITS stakeholders to verify the reference architecture. These three phases address the three issues previously mentioned. The abstraction phase eliminates unnecessary technical details and maintains a high-level understanding of the systems that can be readily comprehended by stakeholders from diﬀerent deployment sites across countries. The challenge of addressing ad-hoc descriptions and constructing a more systematic representation of C-ITS systems is addressed during the description phase. In the ﬁnal phase of the architecture review, stakeholders from various countries verify the reference architecture’s applicability at diverse deployment sites. We demonstrate the usage of the proposed method in the C-MobILE project and developed a C-ITS reference architecture that is applied in eight deployment sites across EU [28]. The C-MobILE (Accelerating C-ITS Mobility Innovation and deployment)1 is a large-scale C-ITS deployment project with around 37 project partners and took place between 2017 and 2021. The project’s objective is to demonstrate C-ITS solutions on a large scale in urban and motorway environments by providing C-ITS services to end-users. This paper is organized as follows: The Sect. 2 describes the method, which is divided into three phases, i.e., the abstraction, description, and review phases. We present the reference architectural models developed using the proposed method in Sect. 3. We share the lessons learned in Sect. 4. Finally, we conclude our paper and discuss future directions in Sect. 5.  
   
  2  
   
  Method  
   
  In this section, we describe the method comprised of three phases-abstraction, description, and architecture review, that were used to create the reference architecture for C-ITS services. The three phases as shown in Fig. 1 address the limitations of excessive technicality of information; ad-hoc notations causing fragmentation and incompatibility between countries’ reference architectures; and a lack of adaptability to diverse traﬃc patterns and geographical conditions. 2.1  
   
  Abstraction Phase  
   
  The process of abstraction in reference architecture includes making decisions concerning the technologies, applications, and vendors involved [1]. It entails extracting important information from a wider amount of data that may include systems, algorithms, implementation methodologies, multiple approaches, or speciﬁc domain expertise [11]. The diﬃculty lies in determining what kinds of high-level information are suﬃciently broad to be included in our C-ITS reference architecture. According to Cloutier et al. [5], a reference architecture should 1  
   
  https://c-mobile-project.eu/.  
   
  120  
   
  P. Karkhanis et al.  
   
  Fig. 1. Reference architecture process - three phases  
   
  include “business architecture”, “customer context”, and “technical architecture” in order to demonstrate its completeness and maturity. However, when systems evolve and get more complex, the scope of what should be included in the reference architecture needs to be adjusted [27]. Therefore, it is essential to deﬁne the abstraction phase to demarcate what should be included in our reference architecture. In line with the objectives of the C-MobILE project, our reference architecture restricts the incorporation of excessive technical complexities and focuses on eliciting high-level systems of the C-ITS services. This enables subsequent phases to focus on the dedicated attention required to design the technical architecture and business models speciﬁc to each individual C-ITS service. By striking this balance, we ensure that our reference architecture provides a solid framework for the development and deployment of C-ITS services while allowing for necessary customization and adaptability in later stages. As shown in Fig. 1, we do the abstraction in two steps: recognizing the key systems of C-ITS and deﬁning the boundary of the abstraction.  
   
  Designing a Reference Architecture for the C-ITS Services  
   
  121  
   
  Fig. 2. Abstraction phase  
   
  1. Recognizing Key Systems of C-ITS Services. Understanding the fundamental concepts of systems, interfaces, and their relationships is essential for the eﬃcient operation of C-ITS services. The most reliable method to conﬁrm our understanding of current and ongoing C-ITS services is through an analysis of already-completed C-ITS projects. We considered the projects such as DITCM [21], CONVERGE [10], COMPASS4D [19], NordicWay [26], and US-ITS (ARC-IT) [25] that provide the most recent C-ITS services and relevant technologies, as well as areas for improvement. The projects had already achieved TRL5 and TRL7 milestones. The Technology Readiness Level (TRL) scale, originally developed by NASA in the 1990s s and adopted by EU-funded projects as part of the Horizon 2020 framework program in 2014, is used to measure the maturity of a technology, with levels ranging from TRL 1 to TRL 92 . The usefulness of a particular TRL depends on the speciﬁc objectives and requirements of the project. TRL 5 is better for analyzing basic technology functionality and feasibility. TRL 7 is better for assessing system performance and readiness for operational deployment. We recognized it is essential to include the existing knowledge from TRL 5 to TRL 7, which provided us with a comprehensive perspective extending from basic functionality to deployment details. From these projects, we gathered information including systems, interfaces, protocols, networks, technology, and terminology, as well as their corresponding C-ITS services, regions, and countries. We maintain such information in an internal repository in a structured way that allows us to organize them based on country- or project-speciﬁc details. The repository can be updated to reﬂect any new information, e.g., country or project. With the aid of this step, we were able to identify C-ITS systems that are widely utilized across all EU countries, as well as any regional systems, and deﬁne a glossary for the reference architecture. The next step is to identify which data would be suitable for the reference architecture. 2. Deﬁning the Abstraction Boundary. In order to decide what should be a part of a reference architecture, we establish the abstraction phase. Our main objective revolves around the selection of C-ITS systems that exhibit a suﬃciently high-level nature. These systems should also be generic, meaning they 2  
   
  https://ec.europa.eu/research/participants/data/ref/h2020/wp/2014 2015/ annexes/h2020-wp1415-annex-g-trl en.pdf.  
   
  122  
   
  P. Karkhanis et al.  
   
  can be applied to a wide range of scenarios and circumstances. The key criteria we emphasize are ﬂexibility and adaptability, ensuring that the chosen C-ITS systems can be easily adjusted and tailored to suit the speciﬁc requirements and characteristics of diﬀerent deployment sites across various regions. We illustrate our abstraction criterion with roadside and vehicle systems, as shown in Fig. 2. From the collection of key C-ITS systems, we abstracted vehicle systems, such as on-board units (OBUs), as well as their interconnections with other high-level systems, such as roadside units. The C-ITS service uses these terms, “on-board units” and “roadside units”, to describe two types of devices. Whatever the speciﬁcs of the underlying technology, these systems are always a part of any CITS service. The inclusion of this information has been done with the intention of providing a comprehensive overview of C-ITS systems that are common and have been utilized in the past in C-ITS initiatives. Next, we represent them in a structured manner to be understood by interdisciplinary C-ITS stakeholders. 2.2  
   
  Description Phase  
   
  Inconsistent representations of C-ITS systems in the past have been a signiﬁcant issue, as they can contribute to confusion and misunderstandings among stakeholders [14]. Ad-hoc diagrams, made without a standardized method or notation, can generate confusion since diﬀerent people will interpret the same system in diﬀerent ways. In order to address this issue, we introduce a description phase that incorporates well-established standards and practices for describing C-ITS systems. The ISO 14813-5:2020 Intelligent Transport Systems standard [12] recommends using an established method for deﬁning reference architectures within ITS International Standards to ensure seamless integration for deploying C-ITS services internationally. Incorporating well-established standards and practices facilitates the development of a universal and generic reference architecture that can be applied in multiple countries. As shown in Fig. 3 we used the C-ITS architecture framework [28] compatible with the ISO 42010 international stan-  
   
  Fig. 3. Description phase  
   
  Designing a Reference Architecture for the C-ITS Services  
   
  123  
   
  dard [13] for describing the architecture. The ISO/IEC/IEEE 42010 architecture framework facilitates a common practice for creating, interpreting, analyzing, and employing architecture descriptions within a speciﬁc application domain or stakeholder community [28]. We used C-ITS system classiﬁcation, which is a common practice utilized in previous projects [10,25] to group C-ITS systems. To model the systems, we used SysML language which is a general-purpose modeling language to represent complex systems, structures, behaviors, and requirements [9,22]. According to a survey conducted by [22], SysML has been adopted in multidisciplinary domains, including automotive, information technology, and transportation. This indicates that SysML has gained recognition as a modeling language appropriate for various domains and system types, supported by a considerable availability of mature tools that facilitate SysML usage [6,22]. Leveraging established practices in the description of C-ITS systems promotes a comprehensive understanding of the system, enhances communication among stakeholders, and provides a structured and unambiguous representation. Next, we discuss the C-ITS system classiﬁcation and the architecture descriptions. C-ITS System Classiﬁcation is a well-established practice for categorizing C-ITS systems utilized by numerous initiatives, including DITCM [21], CONVERGE [10], and US-ITS [25]. C-ITS classiﬁcation facilitates the organization and categorization of various C-ITS system types based on their functionality, making it simpler for various stakeholders, such as vehicle manufacturers, infrastructure operators, and service providers, to communicate and collaborate eﬀectively. Based on the analysis of existing C-ITS projects, we propose a system classiﬁcation for C-ITS consisting of ﬁve levels that categorize various C-ITS system types, and those levels are support system, central system, vehicle system, roadside system, and traveler/VRU system. These levels are consistent with the deﬁnitions that were applied during the earlier C-ITS studies, e.g., DITCM [21]. These ﬁve levels were used to categorize the high-level C-ITS systems that were analyzed during the abstraction phase. – Support System is comprised of sub-systems performing various tasks like governance, test and certiﬁcation management, security, and credentials management. – Central System is comprised of subsystems such as traﬃc monitoring and traﬃc control, which monitor surveillance cameras to capture and process traﬃc data, which is then disseminated to drivers through traﬃc control. – Roadside System is comprised of sub-systems that cover the ITS infrastructure on or along physical road infrastructure, like roadside units or signal control. – Vehicle System is comprised of sub-systems that are integrated within vehicles, such as onboard systems, advanced driver assistance, safety systems, navigation, and remote data collection. – Traveler/VRU System is comprised of personal devices, like mobile devices or navigation devices, and speciﬁc systems connected to vehicles of VRUs, like tags.  
   
  124  
   
  P. Karkhanis et al.  
   
  C-ITS Architecture Description is essential for designing, deploying, and managing complex, modern systems that enhance communication and collaboration through coordinated and integrated operations. We used the C-ITS architecture framework that complies with the conceptual model of the international standard ISO/IEC/IEEE 42010 [13]. The international standard provides a comprehensive framework for describing the architecture of a system, ensuring that all stakeholders have a common understanding of the system under development. C-ITS architecture framework consists of ﬁve viewpoints that represent the C-ITS systems and their relationships and capture the concerns of various stakeholders [28]. Each viewpoint represents a unique aspect of the system, such as its functionality, structure, behavior, or context. These viewpoints facilitate developers’, architects, and end-user’s comprehension of the system’s architecture. These viewpoints were also utilized in a few C-ITS initiatives, such as COMPASS4D [19] and CVRIA [25]. In this paper, we discuss the context, functional, and physical viewpoints. – Context viewpoint describes how the system interacts with its surroundings (people, systems, and external entities). A context view helps stakeholders comprehend the system’s roles and organization. – Functional viewpoint describes the system’s runtime functional elements’ responsibilities, interfaces, and main interactions. A functional approach helps stakeholders comprehend system structures and aﬀects quality. – Physical viewpoint describes the system’s physical deployment and dependencies. A physical view captures the hardware environment, technical environment requirements for each element, and software elements to the runtime environment that will execute them, helping stakeholders deploy, test, and maintain the system. To eﬀectively model the C-ITS systems in various viewpoints, we employed the SysML Block Deﬁnition Diagram (BDD). The BDD allowed us to depict the high-level C-ITS systems, providing stakeholders with essential base-level information about the structure, behavior, and relationships of the C-ITS systems [9,14]. 2.3  
   
  Architecture Review  
   
  To determine whether the reference architecture is eﬃcient, an architecture review must be conducted while the project is still in the planning or development phase [17]. The entire project team, including architects, developers, project managers, and business analysts, reviews the system’s progress during the development of the reference architecture. We reviewed our reference models, including the structure, components, interfaces, and interactions with the interdisciplinary C-ITS stakeholders. The review phase helped us identify any architectural ﬂaws early on and ensure that the essential C-ITS systems were accurately captured and readily understood by all parties. Overall, the architecture review served as a quality control safeguard to ensure that the reference architecture for C-ITS systems met the project’s objectives [3].  
   
  Designing a Reference Architecture for the C-ITS Services  
   
  125  
   
  The architecture review process is shown in Fig. 4. Main C-ITS systems were initially identiﬁed during the abstraction phase. The C-ITS reference architecture consists of a Glossary that details all the concepts and their respective deﬁnitions, Reference Architectural Models that are outlined in SysML with the help of the Enterprise Architect tool, and system descriptions that provide more information regarding the C-ITS systems. These were developed during the description phase. The Glossary and System Descriptions are outside the scope of this paper, but can be found in the reference architecture deliverable of C-MobILE project [28]. During the development process, we validated the identiﬁed C-ITS systems and models through focused group sessions consisting of 10–15 (depending upon session’s goals) architecture experts, use-case experts, deployment site leaders from diﬀerent countries and regions, and C-ITS application professionals. The C-ITS architects of the C-MobILE project led these focus group sessions, during which the results such as a reference architecture model, a glossary, and a list of open issues and challenges were presented for immediate feedback and discussion. After analyzing the feedback from the focus group, we reﬁned the C-ITS reference architecture. As a result, we updated the repository and models for each session accordingly. This iterative cycle of weekly revisions lasted for about 4–5 months before the ﬁnal reference architecture was approved by the C-ITS experts of all C-MobILE deployment sites. The outcomes of our C-MobILE reference architecture models are presented below.  
   
  3  
   
  Results  
   
  In this section, we present the reference architecture models that were developed using the proposed method for the C-MobILE project. In our deliverable [28], a complete and detailed explanation of outcomes can be found. 3.1  
   
  C-ITS System Classiﬁcation  
   
  We categorize C-ITS systems into ﬁve groups: Support, Central, Roadside, Vehicle, and Traveller/VRU System. We analyzed and reverse architect the systems and subsystems following the steps described in the Sect. 2.1, Abstraction phase. We identiﬁed that the DITCM reference architecture covers most of the CMobILE pre-selected systems. The Fig. 5 shows the high-level systems identiﬁed from the abstraction phase. 3.2  
   
  C-ITS Architecture Description  
   
  We describe our C-ITS reference architecture using the C-ITS architecture framework explained in the Description phase in Sect. 2.2. In this paper, we focus on context, functional, and physical viewpoints.  
   
  126  
   
  P. Karkhanis et al.  
   
  Fig. 4. Architecture review phase  
   
  1. Context Viewpoint deﬁnes the system’s dependencies and interactions with its surroundings (people, systems, and external things). The context perspective helps stakeholders, such as system/software architects, designers, developers, and users to understand the system context. This viewpoint addresses stakeholders’ major concerns by describing the high-level system scope and responsibilities by identifying external entities and their relationships. The notations that we commonly see used for context diagrams are SysML Block Deﬁnition Diagram. In Fig. 6, the main C-ITS systems are depicted as black boxes and corresponding actors’ connections with those systems [28]. – Vehicle Driver: A actor driving motorized vehicles such as cars, buses, and trucks. The actors in this category interact with the vehicle system using the On-Board unit (OBU), Human Machine Interface (HMI), and other vehicle interfaces. – Vulnerable Road User (VRU): VRUs are people like pedestrians, cyclists, and motorcyclists. These actors interact with Traveler/VRU systems using HMI, tablet, and mobile.  
   
  Designing a Reference Architecture for the C-ITS Services  
   
  127  
   
  Fig. 5. C-ITS system classiﬁcation [28]  
   
  – Road Operator: This actor collects and analyzes roadside data through multiple communication routes. – Service Provider: This actor directly supports the Central System, which provides numerous functions such as a navigation provider that provides navigation services and a traﬃc information provider that provides road traﬃc information such as traﬃc jams, incidents, and road work warnings to end users or organizations. – Governance: This actor directly supports the Support System, which includes legal authorities, test and certiﬁcation management, security, and credentials management.  
   
  2. Functional Viewpoint describes the system’s run-time functional elements’ responsibilities, interfaces, and main interactions. The functional view helps stakeholders comprehend system structures and aﬀects quality properties. The functional viewpoint is straightforward to understand and describes the system’s functional structure, so stakeholders, especially system architects, developers, and integrators use it. Functional capabilities and external interfaces displaying system interaction are stakeholders’ major concerns. In Fig. 7, the dependencies between the C-ITS systems across diﬀerent levels are shown. 3. Physical Viewpoint considers the topology of subsystems and their physical linkages at each domain of interest. Subsystems contain functional components that provide ITS application functionality and interfaces. Users, architects, system maintainers, and OEMs are the major stakeholders in the Physical  
   
  128  
   
  P. Karkhanis et al.  
   
  Fig. 6. Context model [8, 14, 28]  
   
  Fig. 7. Functional models [8, 14, 28]  
   
  Viewpoint. This viewpoint addresses stakeholders’ concerns about physical component decomposition and speciﬁcation. In Fig. 8, the C-ITS systems for each C-ITS system classiﬁcation level are highlighted.  
   
  Designing a Reference Architecture for the C-ITS Services  
   
  129  
   
  Fig. 8. Physical models [8, 14, 28]  
   
  4  
   
  Lessons Learnt  
   
  We described the method for developing a reference architecture for C-ITS services and demonstrated its usage in creating a C-ITS reference architecture in the context of C-MobILE project. We share below the lessons learned from both method and their usage in creating a C-ITS reference architecture: – Dividing the reference architecture design process into distinct phases such as abstraction, description, and review can help in streamlining the process and making it more manageable among interdisciplinary stakeholders from diﬀerent countries. – All phases require stakeholders, including architecture specialists from deployment sites and related projects. These phases clarify and improve collaboration. For example, deciding on how to abstract, describe, and assess early on can save time by eliminating redundant discussion on concept deﬁnition and description language. It showed that eﬀective participation with clear phases can oﬀer useful expertise and opinions, align concepts, and ensure that the reference design reﬂects real-world use cases. – While it was a lengthy process to capture the information in the repository during the abstraction phase of identifying the key C-ITS systems, doing so  
   
  130  
   
  P. Karkhanis et al.  
   
  served the aim of collecting all data in one place. However, a more eﬃcient technique could be implemented if time and resources are not a constraint. – As discussed earlier, reference designs are frequently described without a generic language or notations, causing confusion. By selecting the widely utilized modeling language SysML, supported by robust tools like Enterprise Architect and IBM Rational Rhapsody, we successfully minimized unnecessary communication challenges and errors in architecture modeling [22]. – Organizing a meeting with numerous stakeholders can be challenging, which is why we opt for iterative meetings with clear and pre-deﬁned goals during the architecture review phase that concentrates on speciﬁc aspects. For example, we prioritize discussions centered around vehicle-to-vehicle C-ITS services and the associated C-ITS systems. – Given that none of the related projects applied an architecture framework conforming to the ISO 42010 international standard, utilizing an architecture framework was useful in deﬁning the views and perspectives that addressed the concerns of the C-MobILE project’s stakeholders [14].  
   
  5  
   
  Conclusion and Future Work  
   
  This paper describes the design process for a C-ITS reference architecture. It seeks to address the lack of a method to develop a comprehensive C-ITS reference architecture across diﬀerent deployment sites. Existing C-ITS reference architectures lack adaptability and are region-speciﬁc. We propose therefore a method involving abstraction, description, and architecture review phases. In the abstraction phase, we analyzed existing C-ITS initiatives to identify essential systems and categorize them. In the description phase, these systems were modeled in SysML following the C-ITS architecture framework proposed in [28]. In the review phase, the reference architecture models were evaluated by diverse C-ITS architects and experts, ensuring a high-quality architecture design satisfying the needs of the diﬀerent deployment sites. The reference architecture models for the C-MobILE project were created using the proposed method. The reference architecture was instantiated by the 8 deployment sites and further helped realize C-ITS services deﬁned in the C-MobILE project. There are several opportunities for future research in the ﬁeld of reference architecture for C-ITS. While the method has been developed in the context of European countries, extending its applicability to other countries requires careful consideration of unique factors such as technological infrastructure, industry collaborations, and public acceptance. These factors determine C-ITS service implementation and readiness [23]. Therefore, it is crucial to acknowledge these variations and adapt the method accordingly. Although the reference architecture created using the proposed method was used in the eight deployment sites, there was no feedback after the implementation of the C-ITS services because of the nature of the project plan. Existing evaluation methods for software architecture e.g., ATAM, SAAM may not be suitable for evaluating the reference architecture of C-ITS services. Therefore, further study is needed to develop a  
   
  Designing a Reference Architecture for the C-ITS Services  
   
  131  
   
  more nuanced evaluation approach speciﬁcally for reference architectures in this ﬁeld. Additionally, exploring methods for updating the reference architecture to accommodate future modiﬁcations would be valuable. Acknowledgment. The C-MobILE project is funded by the European Union’s “Horizon 2020 research and innovation programme” under grant agreement No 723311.  
   
  References 1. Angelov, S., Grefen, P., Greefhorst, D.: A classiﬁcation of software reference architectures: analyzing their success and eﬀectiveness. In: 2009 Joint Working IEEE/IFIP Conference on Software Architecture and European Conference on Software Architecture, pp. 141–150. IEEE (2009) 2. Asselin-Miller, N., et al.: Study on the deployment of C-ITS in Europe: Final report. Report for DG MOVE MOVE/C 3, 2014-794 (2016) 3. Babar, M.A., Gorton, I.: Software architecture review: the state of practice. Computer 42(7), 26–32 (2009) 4. Botte, M., Pariota, L., D’Acierno, L., Bifulco, G.N.: An overview of cooperative driving in the European union: policies and practices. Electronics 8(6), 616 (2019) 5. Cloutier, R., Muller, G., Verma, D., Nilchiani, R., Hole, E., Bone, M.: The concept of reference architectures. Syst. Eng. 13(1), 14–27 (2010) 6. Dajsuren, Y., van den Brand, M., Serebrenik, A., Huisman, R.: Automotive ADLS: a study on enforcing consistency through multiple architectural levels. In: Proceedings of the 8th international ACM SIGSOFT conference on Quality of Software Architectures, pp. 71–80 (2012) 7. European Union: The c-roads platform an overview of harmonized C-ITS deployment in europe (2020). https://www.c-roads.eu/ﬁleadmin/user upload/media/ Dokumente/C-Roads Brochure 2021 ﬁnal 2.pdf 8. Ferrandez, R., Dajsuren, Y., Karkhanis, P., F¨ unfrocken, M., Pillado, M.: Modeling the C-ITS architectures: C-mobile case study. In: ITS World Congress (2018) 9. Friedenthal, S., Moore, A., Steiner, R.: Omg systems modeling language (omg sysml) tutorial. In: INCOSE International Symposium, vol. 9, pp. 65–67. Citeseer (2006) 10. F¨ unfrocken, M., Vogt, J., Wieker, H.: The converge project - a systems network for its (2021) 11. Houngbo, H., Mercer, R.E.: Method mention extraction from scientiﬁc research papers. In: Proceedings of COLING 2012, pp. 1211–1222 (2012) 12. ISO: Iso 14813–5:2020(en) intelligent transport systems - reference model architecture(s) for the its sector - part 5: Requirements for architecture description in its standards (2020) 13. ISO/IEC/IEEE: Systems and software engineering - architecture description. ISO/IEC/IEEE 42010:2011(E) (Revision of ISO/IEC 42010:2007 and IEEE Std 1471–2000), pp. 1–46 (2011). https://doi.org/10.1109/IEEESTD.2011.6129467 14. Karkhanis, P., van den Brand, M.G., Rajkarnikar, S.: Deﬁning the C-ITS reference architecture. In: 2018 IEEE International Conference on Software Architecture Companion (ICSA-C), pp. 148–151. IEEE (2018) 15. Kotsi, A., Mitsakis, E., Tzanis, D.: Overview of C-ITS deployment projects in Europe and USA. In: 2020 IEEE 23rd International Conference on Intelligent Transportation Systems (ITSC), pp. 1–6. IEEE (2020)  
   
  132  
   
  P. Karkhanis et al.  
   
  16. Lu, M., et al.: Cooperative and connected intelligent transport systems for sustainable European road transport. In: Proceedings 7th Transport Research Arena, Vienna, Austria (2018) 17. Maranzano, J.F., Rozsypal, S.A., Zimmerman, G.H., Warnken, G.W., Wirth, P.E., Weiss, D.M.: Architecture reviews: practice and experience. IEEE Softw. 22(2), 34–43 (2005) 18. Marilisa, B., Luigi, P., Nicola, B.G., et al.: C-ITS communication: an insight on the current research activities in the European union. Int. J. Transport. Syst. 3 (2018) 19. Mitsakis, E., et al.: Large scale deployment of cooperative mobility systems in Europe: Compass4d. In: 2014 International Conference on Connected Vehicles and Expo (ICCVE), pp. 469–476. IEEE (2014) 20. Mitsakis, E., Kotsi, A.: Cooperative intelligent transport systems as a policy tool for mitigating the impacts of climate change on road transport. In: Nathanail, E.G., Karakikes, I.D. (eds.) CSUM 2018. AISC, vol. 879, pp. 418–425. Springer, Cham (2019). https://doi.org/10.1007/978-3-030-02305-8 51 21. van Sambeek, M., et al.: Towards an architecture for cooperative-intelligent transport system (C-ITS) applications in the Netherlands. Eindhoven University of Technology, Technical Report Beta Working Paper series (485) (2015) 22. Santos, T.L., Soares, M.S.: A survey on what users think about sysml. Syst. Eng. (2023) 23. Shaaban, K., Elamin, M., Alsoub, M.: Intelligent transportation systems in a developing country: beneﬁts and challenges of implementation. Transport. Res. Procedia 55, 1373–1380 (2021) 24. Sjoberg, K., Andres, P., Buburuzan, T., Brakemeier, A.: Cooperative intelligent transport systems in Europe: current deployment status and outlook. IEEE Veh. Technol. Mag. 12(2), 89–97 (2017) 25. USD of Transportation: Architecture reference for cooperative and intelligent transportation. https://www.arc-it.net/ 26. Europe Union: Nordicway - architecture, services and interoperability (2017). https://www.nordicway.net/ 27. Wang, Q., von Tunzelmann, N.: Complexity and the functions of the ﬁrm: breadth and depth. Res. Policy 29(7–8), 805–818 (2000) 28. Yanja Dajsuren, P.K., Kadiogullari, D., F¨ unfrocken, M.: C-MobILE d3.1 reference architecture (2017). https://c-mobile-project.eu/wp-content/uploads/sites/ 19/2018/06/C-MobILE-D3.1-ReferenceArchitecture-v1.1.pdf  
   
  Towards Assessing Spread in Sets of Software Architecture Designs Vittorio Cortellessa1 , J. Andres Diaz-Pace2 , Daniele Di Pompeo1(B) , and Michele Tucci1 1  
   
  University of L’Aquila, L’Aquila, Italy {vittorio.cortellessa,daniele.dipompeo,michele.tucci}@univaq.it 2 ISISTAN, CONICET-UNICEN, Buenos Aires, Argentina [email protected]   
   
  Abstract. Several approaches have recently used automated techniques to generate architecture design alternatives by means of optimization techniques. These approaches aim at improving an initial architecture with respect to quality aspects, such as performance, reliability, or maintainability. In this context, each optimization experiment usually produces a diﬀerent set of architecture alternatives that is characterized by speciﬁc settings. As a consequence, the designer is left with the task of comparing such sets to identify the settings that lead to better solution sets for the problem. To assess the quality of solution sets, multi-objective optimization commonly relies on quality indicators. Among these, the quality indicator for the maximum spread estimates the diversity of the generated alternatives, providing a measure of how much of the solution space has been explored. However, the maximum spread indicator is computed only on the objective space and does not consider architectural information (e.g., components structure, design decisions) from the architectural space. In this paper, we propose a quality indicator for the spread that assesses the diversity of alternatives by taking into account architectural features. To compute the spread, we rely on a notion of distance between alternatives according to the way they were generated during the optimization. We demonstrate how our architectural quality indicator can be applied to a dataset from the literature. Keywords: Architecture alternatives Diversity · Quality indicator  
   
  1  
   
  · Multi-objective optimization ·  
   
  Introduction  
   
  When designing or evolving software architectures, the improvement of quality attributes like performance, reliability, or maintainability is a central concern for the designer. This task has recently been the target of an increasing number of automated approaches whose goal is to generate improved versions of an initial architecture [1,6]. The generated architectures are referred to as design alternatives. These alternatives are automatically generated through refactoring, c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 133–140, 2023. https://doi.org/10.1007/978-3-031-42592-9_9  
   
  134  
   
  V. Cortellessa et al.  
   
  which is the application of transformations for improving some quality attributes of interest while keeping the software functionalities unchanged. In practical cases, the designer tackles multiple attributes at the same time. For example, she could aim at improving performance while keeping reliability high and the cost of refactoring low. This context is ideal for multi-objective optimization. Multi-objective optimization normally needs a series of experiments to determine appropriate conﬁguration parameters. Examples of these parameters can be the choice of the optimization algorithm and its settings, such as the speciﬁc genetic algorithm and its population size. A recurring problem is that of deciding which conﬁguration parameters are to be preferred on the basis of the obtained solution sets. In multi-objective optimization, this issue has been traditionally addressed by means of quality indicators for solution sets [5]. These indicators seek to estimate desirable properties of solution sets and, consequently, can help designers to choose parameters that improve such properties. Among these properties, the spread of a solution set plays a fundamental role in assessing how much of the solution space was covered and how diverse the solutions are in the set. The maximum spread (MS) [10] is a prominent indicator for such a property. Higher MS values indicate that the optimization searched the solution space enough to cover a wide area. The spread is especially relevant when dealing with architectural alternatives. It highlights that a sizeable number of alternatives were found, and the obtained solution set covers tradeoﬀs that are dispersed enough to provide a variety of design choices to the designer. Note that quality indicators are computed on the problem objectives, which are the attributes being optimized (i.e., performance, reliability, and cost in the previous example). Although these indicators are valuable for assessing the performance of optimization algorithms, they do not provide insights on the architectural features of the solutions, i.e., the architectural space, which represent more closely the object of the software engineering task we described. In this paper, we propose an architectural quality indicator, called MAS (Maximum Architecture Spread), for the estimation of the spread in sets of design alternatives. MAS is based on the notion of maximum spread by Zitzler et al. [10], but it operates in the architectural space rather than on the objective space. To demonstrate our approach, we show how MAS can be applied to a dataset that addresses an architecture optimization problem from the literature. To do this, we calculate the diﬀerences among architectural alternatives on the basis of their structure. This is achieved by ﬁrst encoding the architectures in terms of sequences of refactorings and then using distance metrics on such encodings. Our preliminary results indicate that MAS provides an additional architectural view of the optimization, and exhibits a correlation with the (MS) indicator.  
   
  2  
   
  Motivating Example  
   
  Let us assume that the designer wants to explore design alternatives that improve a performance objective (e.g., minimization of response time) for an initial architecture (A0 ), while keeping the cost of changes low. For example, this is the case  
   
  Towards Assessing Spread in Sets of Software Architecture Designs  
   
  135  
   
  of the ST+ system [7], in which architectures are speciﬁed in the Palladio Component Model (PCM) notation. An automated optimization tool progressively applies refactorings via a heuristic search and generates a set of design alternatives in the architectural space (i.e., the space of PCM architectures). This set can be seen as a tree rooted at A0 , in which the nodes correspond to alternatives and the edges correspond to refactorings from one alternative to another, as sketched in Fig. 1 (left). Each alternative is evaluated to provide quantiﬁable measures for the objectives. Measures for such objectives constitute the objective space, in which the designer can analyze tradeoﬀs between the alternatives, as depicted in Fig. 1 (right). However, the objective space does not reveal details about the structural characteristics or features of the design alternatives. Likewise, the architectural space does not provide insights about tradeoﬀs between the objectives.  
   
  Fig. 1. Relationship between the architectural and objective spaces. The architectural space is represented as search tree rooted at the initial architecture (A0 ).  
   
  To assess the quality of solution sets in the objective space, the designer can rely on quality indicators, such as MS [10]. However, analyzing only the objective space can be shortsighted, because it does not expose, for example, architectural characteristics of the PCM alternatives in the solution sets. We argue that insights from the architectural space are crucial for the designer to understand and compare conﬁguration parameters in order to make the optimization process more useful and eﬃcient. Unfortunately, quality indicators for the architectural space have not been reported in the literature, partially because they are not domain independent (as the traditional indicators for the objective space) but depend on the kind of models populating the architectural space. We refer to the quality indicators for this space as architectural quality indicators.  
   
  136  
   
  3  
   
  V. Cortellessa et al.  
   
  Related Work  
   
  We highlight that none of the identiﬁed prior studies presented metrics to estimate sets of design alternatives in the architectural space, rather than in the objective space. Esfahani et al. [2] introduced a quantitative framework to graphically drive architects in selecting design alternatives by means of fuzzy mathematical methods to rank alternatives. Ranking alternatives helps designers to ﬁnd the optimal alternative (i.e., the best case) and the most critical one (i.e., the worst case). Sedaghatbaf and Azgomi [9] proposed a framework for modeling and evaluating software architectures. They used a multi-criteria decision model to extract the best and worst alternatives. To this extent, they introduced a distance metric that extracts the maximum and minimum values for the best and worst alternatives, respectively. In addition, they support the designer in this complex process by providing a tool named SQME. Rahmoun et al. [8] exploited a genetic algorithm to generate model transformations and obtain design alternatives deﬁned through the Architecture Analysis and Design Language (AADL). To compare the alternatives generated by their approach and the optimal one, the authors introduced a distance metric based on Mixed-Integer Linear Programming (MILP). The idea beyond the study by Rahmoun et al. is to ﬁnd a way to measure how far the generated alternatives are from the optimal ones.  
   
  4  
   
  Proposed Architectural Quality Indicator  
   
  In multi-objective optimization, the spread of a solution set is recognized as the region of the objective space that is covered by the set. When the solution set is a Pareto front, the spread is also known as the coverage of the set [5]. Higher values of the spread are an indication that the optimization process has extended the search enough to reach a wide area of the objective space. The maximum spread (MS) is a well-known quality indicator [10] that measures the range of a solution set by considering, for any two solutions in the set, the maximum extent of each objective. It is deﬁned as:   o  max (si − si )2 MS (S) =   i=1  
   
  s,s ∈S  
   
  where S is the solution set under consideration, s and s are solutions in that set, and o is the number of objectives. Higher values of M S are to be preferred, as they represent a better coverage of the solution space. As it is evident, quality indicators like M S are deﬁned on the objective space, and they are considered a valuable mean to assess the performance of a search algorithm in producing solution sets coverage. However, when these optimization techniques are employed in the software architecture context, and speciﬁcally for the generation of design alternatives, the quality of the resulting solution sets should be assessed also in the architectural space. Indeed, the architectural features of the solutions represent the ﬁnal product of the optimization process,  
   
  Towards Assessing Spread in Sets of Software Architecture Designs  
   
  137  
   
  and the designer will make decisions on their basis. Therefore, we provide an estimate of the coverage and diversity of solution sets in the architectural space. We introduce the maximum architectural spread (MAS) by following the same principles behind the original M S. It is deﬁned as:  N  2 n=1 maxs,s ∈S (d(sn , sn )) MAS (S) = 2 N max(d) where S is the considered set, N is its cardinality, while s and s are solutions in that set. Moreover, d(s, s ) is a distance metric that is relevant for the problem, and that can be plugged in the formula to quantify the distance between two architectures. max(d) is the maximum possible value for the distance metric. MAS can be interpreted as the square root of the ratio of two quantities: (i) the sum of the maximum distance of any two solutions in the set, divided by (ii) the maximum achievable spread, that is the maximum value for the distance metric multiplied by the number of solutions in the set. The MAS denominator is used to normalize its value between 0 and 1. When MAS is 0, it represents the limit case in which the set consists of a single solution. Instead, 1 represents the maximum achievable spread, which occurs when every solution is at maximum distance from another. The intent is to provide, numerically, an intuition of how far we are from the maximum diversity of solutions we could theoretically achieve. In addition, the normalization is aimed at enabling the comparison of MAS obtained with diﬀerent distance metrics. 4.1  
   
  Architectural Distance as Sequence Distance  
   
  The MAS computation depends on having a notion of distance d(s, s ) between architecture solutions. Since architectures are usually complex objects, simplifying their representations can help to deﬁne intuitive distance metrics. In this work, we rely on the sequences of transformations applied to the initial architecture, and use those sequences as proxies for architectural representations. A sequence is actually a path in the search tree, as illustrated in Fig. 1 (left). More formally, an architecture Ai is modeled by a sequence of transformations Ti = of length L, which comes from the shortest path between the initial node A0 and the node for Ai in the tree. For each tki , the architectural elements targeted by the transformation are parameters in the representation. Once architectures are encoded as sequences, the distance d(Ai , Aj ) is deﬁned in terms of the delta of changes between the elements of their respective sequences. If two transformations tik and tjk share the same name and parameters, then d(tik , tjk ) = 0; and conversely, if they have diﬀerent names and completely diﬀerent parameters, then their distance is equal to 1. The problem becomes one of matching sequences, and well-known distances such as Levenshtein [4] can be used to compute the sequence distances. To distinguish between the transformation names and their parameters, when matching sequences, we use a separate distance function for each part of the transformation, and combine the results via a weighted sum. For a pair of sequences of length L, the  
   
  138  
   
  V. Cortellessa et al.  
   
  distance computation is deﬁned as: d (Ai , Aj ) =  
   
  L   
   
  simpred(tik , tjk ) ∗ wpred + simargs(tik , tjk ) ∗ wargs  
   
  k=1  
   
  Functions simpred() and simargs() extract the transformation name and arguments from tik and tjk , respectively, and then calculate the Levenshtein formula. We perform a label encoding of the vocabulary of transformation names and arguments used in the architectural space, before evaluating simpred() and simargs(). This encoding maps each transformation name or argument to a unique symbol. The maximum possible values of simpred() and simargs() is L. The contributions of these functions are weighted by wpred and wargs , with the constraint wpred + wargs = 1 to keep d(Ai , Aj ) bound to the interval [0..L]. 4.2  
   
  Application of MAS  
   
  We computed MAS on the ST+ dataset1 , which comprises nine component types for instantiating an architecture alternative, and four quality-attribute scenarios as the optimization objectives. Two objectives (referred to as p1 and p2 ) involve minimizing response time and CPU utilization [3], while the other two (referred to as m1 and m2 ) involve minimizing the cost of changes via a complexity metric. The architectural space contains 554 candidate architectures.  
   
  Fig. 2. Comparison of the architectural and objective spaces for the two search algorithms in ST+, along with computed MAS and MS.  
   
  Graphical representations of the architectural and quality-attribute spaces are shown in Fig. 2. The colors refer to the two search strategies (standard search 1  
   
  https://github.com/SQuAT-Team/paper-supplementary.  
   
  Towards Assessing Spread in Sets of Software Architecture Designs  
   
  139  
   
  and negotiation) exercised for ST+. The architectural space (Fig. 2a) is visualized using a multi-dimensional scaling (MDS) projection that is derived from the distances d(Ai , Aj ) between the PCM architectures. In our MDS chart, each color-coded circle encloses the alternatives returned by an algorithm, and gives a notional view of the spread it achieved. In the objective space (Fig. 2b), the solutions computed by the standard search lie in the Pareto front, while the negotiated solutions set apart, particularly for p1 with respect to m1 and m2. This would mean that the negotiation algorithm tries to balance the utilities for that tradeoﬀ. The MS values for the two sets show a larger spread in favor of the standard search algorithm. In the architectural space (Fig. 2a), we observe that the negotiation algorithm achieved a slightly lower MAS than the standard search algorithm, whose spread was maximal. It seems that the space covered by the negotiation algorithm concentrates on a well-deﬁned region. In contrast, the other set is more diverse. Interestingly, some solutions in the negotiation set are at a very close distance of the solutions in the other set. This close distance among the two types of solutions is not evident when looking at the objective space (Fig. 2b). One of the main ﬁndings from this experiment is the relationship between the MAS and MS indicators. Although they operate on diﬀerent spaces and assess diﬀerent objects (i.e., architectures and quality values, respectively), there is an apparent correlation between their spreads. The observed correlation, however, might have been inﬂuenced by the search algorithms used by SQuAT. If the relationship between MAS and MS proves to hold, it might help the designer to make assumptions about the spread on the objective space while looking at the architectural space, and vice versa. Another observation refers to the architectural distance being used in our evaluation. The assessment of architectural similarities (or dissimilarities) based on their transformation sequences works in the context of an initial architecture and a neighborhood of alternatives that are reachable only via transformation sequences applied to the initial architecture. Therefore, the underlying assumption is that all the sequences have the same starting point. The proposed Levenshtein metric, however, is not intended to be a global metric for arbitrary architectures. Furthermore, the metric can be aﬀected by the transformation encoding and by the sequence length.  
   
  5  
   
  Conclusion  
   
  In this work, we proposed a quality indicator for estimating the spread in sets of software architectures, namely the maximum architectural spread (MAS). We showed, through a lightweight literature review, that these sets of architectures represent design alternatives and arise in a variety of contexts, especially when multi-objective optimization techniques are employed to generate them. Diﬀerently from existing quality indicators in multi-objective optimization, ours aims at computing an estimate of the solutions spread from an architectural point of view. This was achieved by encoding the sequences of modiﬁcations being applied to generate each architecture, and then using distance metrics to calculate how far apart the architectures are from each other. Moreover, we showed  
   
  140  
   
  V. Cortellessa et al.  
   
  how our MAS indicator can be applied on practical cases to gain insights on the diversity of architectures and compare optimization settings (e.g., algorithms). The maximum spread provides an idea of the extent of the solution set, but says nothing about the inner shape of the set or the distribution of its solutions. We intend to overcome this limitation in future work by exploring corner cases in which we obtain similar values of MAS on sets that exhibit contrasting distributions. Furthermore, we will explore complementary indicators to assess properties such as uniformity or convergence within the architectural space. Acknowledgments. Daniele Di Pompeo and Michele Tucci are supported by European Union – NextGenerationEU – National Recovery and Resilience Plan (Piano Nazionale di Ripresa e Resilienza, PNRR) – Project: “SoBigData.it – Strengthening the Italian RI for Social Mining and Big Data Analytics” – Prot. IR0000013 – Avviso n. 3264 del 28/12/2021. J. Andres Diaz-Pace is supported by the PICT-2021-00757 project, Argentina.  
   
  References 1. Cortellessa, V., Di Pompeo, D., Stoico, V., Tucci, M.: Many-objective optimization of non-functional attributes based on refactoring of software models. Inf. Softw. Technol. 157, 107159 (2023) 2. Esfahani, N., Malek, S., Razavi, K.: Guidearch: guiding the exploration of architectural solution space under uncertainty. In: 35th International Conference on Software Engineering (ICSE), pp. 43–52 (2013) 3. Koziolek, H., Reussner, R.: A model transformation from the palladio component model to layered queueing networks. In: Kounev, S., Gorton, I., Sachs, K. (eds.) SIPEW 2008. LNCS, vol. 5119, pp. 58–78. Springer, Heidelberg (2008). https:// doi.org/10.1007/978-3-540-69814-2 6 4. Levenshtein, V.I.: Binary codes capable of correcting deletions, insertions, and reversals. Soviet Phys. Doklady 10, 707–710 (1965) 5. Li, M., Yao, X.: Quality evaluation of solution sets in multiobjective optimisation: a survey. ACM Comput. Surv. 52(2), 26:1–26:38 (2019) 6. Ni, Y., et al.: Multi-objective software performance optimisation at the architecture level using randomised search rules. Inf. Softw. Technol. 135, 106565 (2021) 7. Rago, A., Vidal, S.A., Diaz-Pace, J.A., Frank, S., van Hoorn, A.: Distributed quality-attribute optimization of software architectures. In: 11th Brazilian Symposium on Software Components, Architectures and Reuse, pp. 7:1–7:10 (2017) 8. Rahmoun, S., Mehiaoui-Hamitou, A., Borde, E., Pautet, L., Soubiran, E.: Multiobjective exploration of architectural designs by composition of model transformations. Softw. Syst. Model. 18(1), 107–127 (2019). ISSN 1619-1366, 1619-1374 9. Sedaghatbaf, A., Azgomi, M.A.: SQME: a framework for modeling and evaluation of software architecture quality attributes. Softw. Syst. Model. 18(4), 2609–2632 (2019) 10. Zitzler, E., Deb, K., Thiele, L.: Comparison of multiobjective evolutionary algorithms: empirical results. Evol. Comput. 8(2), 173–195 (2000)  
   
  Continuous Evaluation of Consistency in Software Architecture Models Priom Biswas1(B) , Andreas Morgenstern1 , Pablo Oliveira Antonino1 , Rafael Capilla2 , and Elisa Yumi Nakagawa3 1 Fraunhofer IESE, Kaiserslautern, Germany {priom.biswas,andreas.morgenstern,pablo.antonino}@iese.fraunhofer.de 2 Rey Juan Carlos University, Madrid, Spain [email protected]  3 University of S˜ ao Paulo, S˜ ao Carlos, Brazil [email protected]   
   
  Abstract. Ensuring consistency between architectural models in software-intensive systems is challenging; hence, this paper presents an industry-oriented solution for the continuous evaluation of the consistency of architecture models aligned with CI/CD pipelines. We evaluated our solution using a concept car to demonstrate its viability and how architectural consistency checking can be automated. Keywords: Software architecture · consistency checking evaluation · continuous software engineering  
   
  1  
   
  · continuous  
   
  Introduction  
   
  The consistency of architecture models has been investigated for years [10]. Some works like [1] discuss the importance of consistency in UML models using a model-driven architecture (MDA) and suggest a validation language to automatically detect and resolve potential inconsistencies. Automatically detecting and tracking inconsistencies in design models is also highlighted in [7]. However, not all the rules for detecting inconsistencies can be evaluated instantly. Nowadays, many development approaches adopt a continuous software engineering (CSE) model to achieve fast deployments. However, checking the conformance between architectures and requirements continuously is still challenging, as stated in [16]. In this approach, the authors suggest a process for detecting inconsistencies using formal speciﬁcations, but they do not detail how much they can automate the proposed solution. In [4], the authors describe the application of formal methods in the automotive industry to signiﬁcantly increase the correctness and reliability of AUTOSAR architectures. The studies discussed above lack a complete solution to continuously evaluate the consistency between high-level and low-level architecture models. Thus, in this research, we address how to achieve consistency in industrial architecture models and raise the following research questions: (i) RQ1: How to achieve c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 141–149, 2023. https://doi.org/10.1007/978-3-031-42592-9_10  
   
  142  
   
  P. Biswas et al.  
   
  behavioral interaction consistency between high-level and low-level architecture models? and (ii) RQ2: To what extent can consistency evaluation be automated in continuous mode? To answer these research questions, we extend a previous work [2] by enabling model-in-the-loop simulations to be executed using traditional UML sequence and state machine diagrams and integrate them into a CSE approach for continuous consistency checking. The remainder of this paper is organized as follows: Sect. 2 describes related works. Section 3 details the steps of our solution and the tools we developed. Section 4 presents the evaluation of the proposed solution, while Sect. 5 presents our ﬁndings answering the RQs and the limitations. Section 6 provides the ﬁnal remarks of our work.  
   
  2  
   
  Related Work  
   
  Some strategies for achieving architectural consistency deal with rules and formal methods aimed to produce an intermediate representation that can be validated [6,13,17]. One recent work [11] discusses architecture consistency checking of security aspects in microservices and cloud-based systems. However, the proposed solution does not discuss how to automatically handle possible deviations of quality. Regarding quality checking in the context of CSE approaches, the authors of [5] suggest a rule-based language to perform structural analysis of software systems in the development cycles, while in [8], the authors suggest an automatic detection mechanism for architectural violations in software artifacts. Another work [12] discusses the validation of architecture in a continuous way and presents four principles for adapting evaluation in continuous settings. In [3], the authors provide an architecture model for checking the quality of architectures under a DevOps approach and based on industrial scenarios. Also, the evaluation of architecture qualities continuously and semi-automatically is discussed in [14]. One complementary but related work [15] suggests a novel runtime architecture evaluation method that can be used to check deviations from performance values in IoT systems to continuously proﬁle architecture decisions. In [11], the authors investigate how to improve consistency checking activities in infrastructure-as-a-code (IaC) deployments, and propose solutions that identify coupling-related patterns to automatically check conformance using technologyindependent metrics. In contrast to the works discussed above, we provide means to evaluate architecture consistency with the conﬁdence of simulation in a more automated and integrated manner.  
   
  3  
   
  Approach  
   
  Based on our discussions with practitioners from the automotive domain, we propose an automated solution for architecture consistency checking by integrating a simulation-based evaluation tool into a CI/CD pipeline, as depicted in Fig. 1. We extract the relevant information of the UML diagrams, simulate the structural and behavioral models, and evaluate the consistency. Our solution automates consistency checking using simulation without formal methods  
   
  Continuous Evaluation of Consistency in Software Architecture Models  
   
  143  
   
  Fig. 1. Continuous evaluation process for architecture model consistency checking  
   
  or petri nets. The results are reported continuously through a GitLab CI loop. We use a custom-built bridge that connects the Enterprise Architect (EA) modeling tool with a simulator and checker tools for automated model extraction and evaluation, and integrate this solution into a GitLab CI/CD pipeline. 3.1  
   
  Supporting Tools  
   
  The tools supporting our process are: Model Converter: This is an EA plugin that converts sequence and state machine diagrams into semantically predeﬁned textual representations in YAML. FERAL Simulator: We adopted the FERAL1 [9] simulation framework to simulate the behavior models according to discrete event simulation semantics. Checker: We refer to the checker as CAMV (Continuous Architecture Model Validator), whose workﬂow is shown in Fig. 2. At ﬁrst, UML sequence, component connector and state machine models have been created in EA (Step 1). Next, manual creation (Step 2) and placement (Step 3) of YAML ﬁles for events and components (structure model) from component connector diagram is required due to the lack of support in the model converter. However, sequence (data ﬂow model) and state machine YAMLs (behavior models) can be converted using models converter, but still they need to be placed manually within CAMV. For architecture evaluation, evaluation scenarios are speciﬁed manually within CAMV. They detail which state machine YAMLs to compare with the sequence YAML. CAMV automatically generates executable models from YAML ﬁles using FERAL. Afterwards, CAMV veriﬁes the structural conformity according to the events and components YAML, 1  
   
  https://www.iese.fraunhofer.de/en/services/digital-twin/feral.html.  
   
  144  
   
  P. Biswas et al.  
   
  Fig. 2. CAMV workflow  
   
  simulates the state machines, checks for consistency between state machine and sequence models, and reports inconsistencies. Through a GitLab CI/CD pipeline, CAMV performs continuous consistency checks, where each model modiﬁcation results in a commit that triggers the pipeline and produces reports. In the following, we detail the major technical steps performed by CAMV. Executable Model Creation: CAMV ﬁrst turns the YAML representation of a state machine into a Java object, which is subsequently converted into an executable simulation model based on FERAL discrete event semantics (Step 4). CAMV also transforms sequences into executable representations, derived from deserialized sequence YAMLs, where the sequence messages are sorted in the order they appear in the sequence. Lastly, CAMV crafts a FERAL simulation scenario according to the speciﬁed evaluation scenario (Step 5). Consistency Checking Procedure: The evaluation starts after executable models have been created. A simulation end time is set for the FERAL simulation. Each executable state machine is initialized, with the transition from the initial state being performed automatically as an initial step. The executable sequence is initialized by setting all sequence messages to a non-taken state and sequence elements to inactive. The evaluation process begins by initiating the ﬁrst sequence message as an event and making the corresponding source sequence element active. This initiation triggers a simulation of the state machine connected to the source sequence element (Step 6). Using the data from this state machine simulation, CAMV subsequently assesses whether the state machine transition prompted by the sequence message is in alignment with the sequence message itself (Step 7). In this way, CAMV iterates over all the sequence messages, triggers state machine simulations for each message, and evaluates the consistency. In case there are no active sequence elements, CAMV checks whether there are any waiting messages from an environment sequence element  
   
  Continuous Evaluation of Consistency in Software Architecture Models  
   
  145  
   
  and triggers that message for simulation. Environment sequence elements are special elements for which we do not detail the behavior. After iterations over all sequence messages are completed, CAMV logs the inconsistencies (incidents) in a textual report, which is then provided as feedback (Step 8). Supported incident types are: (i) UnexpectedEventIncident: an event was produced but not expected; (ii) UnsatisﬁedStateChangeIncident: a component does not reach an expected state while an event is being consumed by the sequence; and (iii) MissingEventIncident: a sequence failed to be executed due to the missing event. Bridge: The Bridge, integrated into a GitLab CI/CD pipeline, streamlines interactions among EA, the model converter, and the checker, thereby enabling continuous architecture evaluation. It employs two automated tools, as depicted in Fig. 1: Automated EA Model Converter Tool and Automated Tool for Validation Execution and Report Generation of CAMV. The former automatically extracts YAMLs and places them into the CAMV tool, while the latter automates CAMV’s consistency evaluation process, integrating it into the GitLab CI/CD pipeline. These tools allow for scheduled continuous evaluations according to the needs of CSE solutions.  
   
  4  
   
  Evaluation  
   
  This section shows the evaluation of our solution in the context of a consulting project with a German Tier 1 supplier of automotive parts. A proof of concept was ﬁrst performed in a concept car developed by Fraunhofer IESE. After several iteration cycles, it was delivered to the Tier 1 supplier. Concept Car Architecture: The concept car is a 1:5 scale remote-controlled car that emulates some real-world use cases of a car system. It incorporates SensorBoards and an ActuatorBoard, as well as a ControlBoard that manages complex tasks. In this paper, we focus solely on the initialization of the concept car’s actuator at power-up, presuming the sensors are ready and there are no issues with the electronic boards. For evaluation purposes, we considered that in each development cycle, the models must be checked for consistency. Hence, Figs. 3a and 3b present the high-level architecture, while Figs. 3c and 3d present the low-level detailed designs. More speciﬁcally, Fig. 3a shows the static architecture view (component connector) that deﬁnes the decomposition and communication channels of the ControlBoard and ActuatorBoard components. Figure 3b oﬀers the dynamic architecture view (sequence) that represents the dynamic interactions between components. The illustrated sequence switches the actuator up and down by performing interactions between SystemController and ActuatorController, which are detailed in Figs. 3c and 3d using state machines. All these models were manually designed in EA. Evaluation Result: For the evaluation, we followed the CAMV workﬂow described in Sect. 3.1. We ﬁrst generated the events and components YAML from the static view. Next, in the evaluation scenario, we speciﬁed that the state machines in Figs. 3c and 3d are to be evaluated against the sequence in  
   
  146  
   
  P. Biswas et al.  
   
  Fig. 3. Software architecture and detailed design  
   
  Fig. 3b. The ﬁrst run of the evaluation using the bridge tool generated a report indicating seven inconsistencies (incidents). Two were related to UnexpectedEventIncidents, such as SystemOﬀ and LEDConOﬀ, which were not modeled in the sequence, but present in the state machine (Fig. 3c). The third inconsistency was an UnsatisﬁedStateChangeIncident, where the expected state after signal transmission ControlboardOk was incorrect (correct would be Operational/ Heartbeat). The other four inconsistencies were UnexpectedEventIncidents, such as LEDConOn and SystemOk events after ControlboardOk event. Considering  
   
  Continuous Evaluation of Consistency in Software Architecture Models  
   
  147  
   
  these inconsistencies, we modiﬁed the sequence in EA manually by introducing the missing events and executed the pipeline for a second time, which reported No Incidents in the evaluation report.  
   
  5  
   
  Discussion  
   
  Regarding RQ1 (How to achieve behavioral interaction consistency between highlevel and low-level architecture models? ), we improved consistency checking by transforming non-executable architecture models into executable ones. Those models can be integrated within a feedback loop to simulate the behavior of a system. Furthermore, these models enable evaluation of the system’s functionality and interactions in a simulated environment before deploying it in the real world. Concerning RQ2 (To what extent can consistency evaluation be automated? ), we observed that our evaluation can be achieved semi-automatically; in particular, the conversion from non-executable architecture models to executable ones is still challenging considering the lack of supporting tools. Our simulationbased approach reduces the cumbersome task of manual model transformation processes. Furthermore, the conversion is a semi-automated process that encapsulates the complex interactions among the tools developed. Additionally, we traced the execution of the process, reporting incidents about possible inconsistencies in the diﬀerent combinations of UML diagrams. Moreover, continuous evaluation was possible by incorporating architecture consistency analysis into a conﬁgurable CI/CD pipeline that can be scheduled at any time. Limitations: Although we considered the architecture’s dynamic view (represented by a sequence diagram), the static view (represented by a component diagram), and the detailed behavior of components (represented by state machines), there might be other aspects that cannot be covered by these three diagrams. Moreover, the architectural models need to conform to a set of rules. Currently, there are no mechanisms for checking the conformity of these rules during the manual modeling activity. However, we believe this task could be partially automated using a domain-speciﬁc language (DSL). In addition, manual creation of YAML ﬁles for static architecture models can be error-prone and inconvenient, which can lead to incorrect speciﬁcations. Therefore, we need ways to facilitate the conversion of the static architecture models into YAML or similar formats.  
   
  6  
   
  Final Remarks  
   
  Our approach advances previous architecture model checking approaches as we provide an integrated simulation-based solution using CI/CD pipelines to automatically evaluate the consistency of models that we applied in one industrial project. As future work, we plan to increase the number of architectural views and modeling techniques addressed by our solution, with particular attention to the UML activity diagram, which is commonly used in industry projects. We also intend to reduce some manual tasks like model conversion by extending the EA  
   
  148  
   
  P. Biswas et al.  
   
  model converter plugin. Adding facilities for visualizing the evaluation results through the EA modeling environment is another feature we plan to implement, with a mechanism to enforce the modeling rules during design time. Lastly, we also intend to tackle the diﬃcult problem of automatic model correction based on the evaluation report in the future.  
   
  References 1. Allaki, D., Dahchour, M., En-nouaary, A.: Building consistent UML models for better model driven engineering. J. Digit. Inf. Manag. 15, 289–300 (2017) 2. Antonino, P., et al.: Enabling continuous software engineering for embedded systems architectures with virtual prototypes. In: 12th European Conference on Software Architecture (ECSA), pp. 115–130 (2018) 3. Antonino, P.O., et al.: A quality 4.0 model for architecting industry 4.0 systems. Adv. Eng. Inform. 54, 101801 (2022) 4. Beringer, S., Wehrheim, H.: Consistency analysis of AUTOSAR timing requirements. In: 15th International Conference on Software Technologies (ICSOFT), pp. 15–26 (2020) 5. Buchgeher, G., Weinreich, R.: Continuous software architecture analysis. In: Agile Software Architecture, pp. 161–188 (2014) 6. Chen, X., Liu, Q., Mallet, F., Li, Q., Cai, S., Jin, Z.: Formally verifying consistency of sequence diagrams for safety critical systems. Sci. Comput. Program. 216 (2022) 7. Egyed, A.: Automatically detecting and tracking inconsistencies in software design models. IEEE Trans. Softw. Eng. 37(2), 188–204 (2011) 8. Goldstein, M., Segall, I.: Automatic and continuous software architecture validation. In: 37th IEEE International Conference on Software Engineering (ICSE), pp. 59–68 (2015) 9. Kuhn, T., Forster, T., Braun, T., Gotzhein, R.: FERAL - framework for simulator coupling on requirements and architecture level. In: 11th ACM/IEEE International Conference on Formal Methods and Models for Codesign, pp. 11–22 (2013) ´ 10. Lucas, F.J., Molina, F., Alvarez, J.A.T.: A systematic review of UML model consistency management. Inf. Softw. Technol. 51(12), 1631–1645 (2009) 11. Ntentos, E., Zdun, U., Soldani, J., Brogi, A.: Assessing architecture conformance to coupling-related infrastructure-as-code best practices: metrics and case studies. In: 16th European Conference on Software Architecture (ECSA), pp. 101–116 (2022) 12. ˚ Agren, S.M., et al.: Architecture evaluation in continuous development. J. Syst. Softw. 184, 1–12 (2021) 13. Schroder, S., Buchgeher, G.: Formalizing architectural rules with ontologies-an industrial evaluation. In: 2019 26th Asia-Pacific Software Engineering Conference (APSEC), pp. 55–62 (2019) 14. Soares, R., Capilla, R., Santos, V., Nakagawa, E.: Trends in continuous evaluation of software architectures. Computing, pp. 1–24 (2023) 15. Sobhy, D., Minku, L., Bahsoon, R., Chen, T., Kazman, R.: Run-time evaluation of architectures: a case study of diversification in IoT. J. Syst. Softw. 159, 110428 (2020) 16. Vogelsang, A., Eder, S., Hackenberg, G., Junker, M., Teufl, S.: Supporting concurrent development of requirements and architecture: A model-based approach. In: 2nd International Conference on Model-Driven Engineering and Software Development (MODELSWARD), pp. 587–595 (2014)  
   
  Continuous Evaluation of Consistency in Software Architecture Models  
   
  149  
   
  17. Yao, Q., Cui, X.: Approach to check the consistency between the uml2.0 dynamic diagrams. In: 5th Intetnational Conference on Instrumentation and Measurement, Computer, Communication and Control (IMCCC), pp. 1115–1119 (2015)  
   
  Artificial Intelligence and Autonomous Systems  
   
  Architecting Explainable Service Robots Marcello M. Bersani1 , Matteo Camilli1 , Livia Lestingi1(B) , Raﬀaela Mirandola1 , Matteo Rossi1 , and Patrizia Scandurra2 1 Politecnico di Milano, Milan, Italy {marcellomaria.bersani,matteo.camilli,livia.lestingi,raffaela.mirandola, matteo.rossi}@polimi.it 2 University of Bergamo, Bergamo, Italy [email protected]   
   
  Abstract. Service robots entailing a tight collaboration with humans are increasingly widespread in critical domains, such as healthcare and domestic assistance. However, the so-called Human-Machine-Teaming paradigm can be hindered by the black-box nature of service robots, whose autonomous decisions may be confusing or even dangerous for humans. Thus, the explainability for these systems emerges as a crucial property for their acceptance in our society. This paper introduces the concept of explainable service robots and proposes a software architecture to support the engineering of the self-explainability requirements in these collaborating systems by combining formal analysis and interpretable machine learning. We evaluate the proposed architecture using an illustrative example in healthcare. Results show that our proposal supports the explainability of multi-agent Human-Machine-Teaming missions featuring an inﬁnite (dense) space of human-machine uncertain factors, such as diverse physical and physiological characteristics of the agents involved in the teamwork. Keywords: Human-Machine Teaming · Explainability · Software architecture · Statistical model checking · Interpretable ML  
   
  1  
   
  Introduction  
   
  Service robots are being used for a wide range of applications such as telepresence, education, personal care, and assistive medicine [10]. In these applications, humans and robots become “peers” as they share the environment and collaborate to achieve a common goal through coordinated actions. This paradigmatic collaboration is referred to as Human-Machine Teaming [28] (HMT). Eﬀective teaming results from the ability of team members to coordinate their actions based on mutual trust. The level of trust depends on several factors, including dependability aspects and mutual understanding among agents. However, the adoption of complex control policies including Machine learning (ML) techniques often makes robotic agents “opaque”, hence diﬃcult for humans to understand [13]. According to Bersani et al., [2,3], to achieve better trust, robotic agents must exhibit behavior that oﬀers strong assurances, along with human c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 153–169, 2023. https://doi.org/10.1007/978-3-031-42592-9_11  
   
  154  
   
  M. M. Bersani et al.  
   
  interpretable explanations of the expected collaboration outcome. In particular, human stakeholders need to know the main reasons for phenomena of interest occurring during the teaming, such as dependability issues or excessive fatigue of human agents. The phenomena (or explananda) must be understood in terms of interpretable and measurable (changing) factors [2,3]. Recent studies focus on particular facets of explainability related to the decision-making strategies of the robotic agents [12,29], while other teaming aspects such as those mentioned above are often neglected. Ultimately, there is still a limited understanding of systematic engineering methods that can generate useful explanations to human stakeholders. Indeed, there exist frameworks that help designers build adaptive HMT-based systems [24] by extending the MAPE-K control loop architectural style with human-related tasks and runtime models to support online teaming monitoring [6]. To the best of our knowledge, there is a lack of design guidelines for service robots realizing explainable HMT. In line with M.A. K¨ ohl et al. [18], we consider explainability as a pivotal requirement. We introduce six diﬀerent levels of explainability that service robots may achieve during the realization of an HMT. We then propose a software architecture for explainable service robots that supports the (oﬄine) speciﬁcation and analysis of multi-agent HMT and the (online) generation of explanations for the phenomena of interest. Our solution combines our experience in the domain of service robots, formal veriﬁcation through Statistical Model Checking [7] (SMC), and interpretable ML [27]. Explanations are generated in a collective manner— i.e., they are produced by multiple cooperating agents that collectively achieve the HMT goals. We evaluate the proposed architecture considering diﬀerent explainability scenarios occurring in an existing HMT in the healthcare domain. Results show that our proposal supports explainable service robots running HMT missions with inﬁnite (dense) space of factors, such as diverse physical and physiological characteristics of the agents involved in the teamwork. This paper is organized as follows. In Sect. 2, we provide preliminary concepts and then we introduce an illustrative example in Sect. 3. In Sect. 4, we characterize the notion of explainability and levels of explainability in HMT. In Sect. 5, we describe our architectural solution, while we discuss a scenario-based evaluation in Sect. 6. We discuss related work in Sect. 7 and then draw conclusions in Sect. 8.  
   
  2  
   
  Preliminaries  
   
  Predictive ML models are built by using supervised learning techniques [26] to create a concise representation of the distribution of an outcome y in terms of quantiﬁable properties, known as features (or explanatory variables). A data point x is a vector that contains a value xj for each feature j. A supervised learning algorithm that implements classiﬁcation or regression is referred to as classiﬁer and regressor, respectively (more in general, predictor ). Supervised learning uses a training set that includes pre-labeled data points x, y to “learn” the desired prediction function fˆ. There exist several popular predictors (either classiﬁers or regressors) in supervised ML including, for instance, Decision Trees, Random Forests, and Neural Networks.  
   
  Architecting Explainable Service Robots  
   
  155  
   
  Interpretable ML [27] refers to the extraction of relevant knowledge from an ML model concerning existing relations contained in the data or learned by the predictive function. In this context, we refer to interpretability (or explainability as introduced by Miller [25]) as the ability of a model to be understood and explained by humans. Some predictive models are designed to have a clear and simple structure, and their predictions are inherently explained (e.g., Linear Regression, Decision Trees). More complex techniques (e.g., Neural Networks, Random Forests) do not explain their predictions and are referred to as black box (or non-interpretable) models. The scope of interpretability is either global (i.e., holistic model interpretability) or local (i.e., interpretability for a single prediction). Global explanations describe the average behavior of a given model. They give a holistic view of the distribution of the target outcome (e.g., class labels) based on the features. Partial Dependence Plot [27] (PDP) is a global model-agnostic method that shows the marginal eﬀect that selected features have on the predicted outcome of a model. Local explanations, such as those produced by Local Interpretable Model-agnostic Explanation [27] (LIME), take into account an individual data point of interest x and examine the prediction fˆ(x) to explain possible reasons based on an interpretable surrogate model. The model so built has the local ﬁdelity property, that is, it represents a good approximation of local predictions, but it does not have to be a good global approximation.  
   
  3  
   
  Towards Explainable HMT  
   
  To illustrate our approach, we adopt an example of HMT mission in the healthcare domain introduced by Lestingi et al. [22]. The mission features a hospital ward with an analysis room, a waiting room for patients, and a storage room with medical equipment. A service robot assists the patients and the hospital’s personnel during daily operations. The robot executes the following sequence of services to complete the mission: (i) the robot escorts a patient from the entrance to the waiting room; (ii ) the doctor leads the robot to a storage room to retrieve the equipment required for the visit; (iii ) the robot follows the doctor to the analysis room while carrying the equipment; and (iv ) the robot escorts the patient from the waiting room to the analysis room set up for the visit. The example yields a highly dynamic setting in which human agents may indeed behave diﬀerently based on their own characteristics. These dynamics can be formally modeled as a Stochastic Hybrid Automata (SHA) network, an automata-based formalism that allows the speciﬁcation of stochastic behavior and time-dependent physical phenomena through generalized diﬀerential equations [8]. The SHA network of our illustrative example includes ﬁve automata, together modeling the mission, the behavior of human agents (i.e., the patient and the doctor), the service robot, the physical dynamics of the battery, and the robot controller1 . Given the SHA network, Statistical Model Checking [7] 1  
   
  We let the reader refer to [22] for a comprehensive treatment of the model and its accuracy w.r.t. a real-world deployment.  
   
  156  
   
  M. M. Bersani et al. Table 1. HMT factors of our illustrative example.  
   
  Factor  
   
  Agent  
   
  Type  
   
  Domain  
   
  Free will profile Health status Age group Walking Speed  
   
  Patient/Doctor Patient/Doctor Patient/Doctor Patient/Doctor  
   
  Categorical Categorical Categorical Continuous  
   
  {focused, nominal, inattentive} {healthy, sick, unsteady} {young, elderly} [30.0, 100.0] cm/s  
   
  Initial position x Initial position y  
   
  Doctor Doctor  
   
  Continuous Continuous  
   
  [0.0, 50.0] m [0.0, 8.0] m  
   
  Translational Speed Battery charge Maximum Distance Minimum Distance Maximum Fatigue Minimum Fatigue  
   
  Robotic Device Robotic Device Robot Controller Robot Controller Robot Controller Robot Controller  
   
  Continuous Continuous Continuous Continuous Continuous Continuous  
   
  [30.0, 100.0] cm/s [11.1, 12.4] V [5.0, 7.5] m [2.0, 4.5] m [0.5, 0.8] [0.1, 0.4]  
   
  Time Bound (τ )  
   
  -  
   
  Continuous  
   
  [250, 700]  
   
  (SMC) can be used to analyze the HMT mission. For instance, the robot succeeds in escorting a human when both are suﬃciently close to the destination. This kind of property can be expressed through a logical condition expressed in terms of network elements modeling the successful completion of a certain service provided by the robot. Hence, given a sequence of services, the mission is complete when all services in the sequence have been provided. In this case, the robot is dependable if it completes the mission within a given time bound, that is, the mission is successful.  This is formalized through the Metric Temporal N Logic (MTL) property ψ = ♦≤τ i s γi,scs , where γi,scs models the completion of the service i in the sequence Ns ∈ N, ♦ is the “eventually” operator and τ ∈ N is the time bound for the completion of the mission. Uppaal SMC [7] can be used to estimate the probability of ψ holding. In addition, Uppaal can quantify other properties, such as the fatigue of the patients. This quantity can be estimated as the maximum expected value E[≤ τ ](max : Fj ), where Fj is a real-valued variable modeling the physical fatigue of a human subject j in the SHA network. Achieving explainability in this context is typically challenging since there is a huge (dense) space of uncertain characteristics that can change and collectively aﬀect the mission—hence the phenomena we want to explain. Table 1 lists a number of selected characteristics, hereafter referred to as HMT factors, with their intuitive meaning and ranges of values speciﬁc to this work. Some factors apply to the agents participating in the mission (e.g., robots or humans), while others apply to software components (e.g., the robot controller). For instance, humans may pay more or less attention to the robot’s instructions according to diﬀerent free will proﬁles representing their inherent attitude. People may walk at diﬀerent speed. Each robot is managed by a controller, which decides when the robot must move or stop based on the fatigue of the patients (min/max fatigue) and on protective human-robot distance (min/max distance). Ultimately, the HMT factors yield a possibly dense space V of elements v¯ and, therefore, an inﬁnite set of SHA networks M[¯ v ], one for each v¯. Hence, explainability by exhaustive exploration of the factor space is unfeasible.  
   
  Architecting Explainable Service Robots  
   
  157  
   
  Table 2. Levels of HMT explainability. Level Description  
   
  4  
   
  L1  
   
  No explanability: The system ignores any possible explanandum X.  
   
  L2  
   
  Recognition of explainability needs: The system is aware that an explanandum X for stakeholders G exists. Thus, it collects knowledge about the context C either passively or actively, by means that are deliberately designed to increase explainability through exploration.  
   
  L3  
   
  Local explainability: The system provides an explanation E for an explanandum X by considering a speciﬁc (punctual) operating context C to make G able to understand how the relevant individual elements of C inﬂuence X.  
   
  L4  
   
  Global explainability: The system provides an explanation E for an explanandum X by considering a varying operating context C to make G able to understand the extent to which changes of relevant elements of C inﬂuence X on average.  
   
  L5  
   
  Collective local explainaibility: The process of local explainability (L3) is realized by multiple cooperating agents that collectively achieve the mission objectives. Each agent has a partial view of the operating context C whose relevant elements are collected (and possibly analyzed) in a decentralized manner.  
   
  L6  
   
  Collective global explainaibility: The process of global explainability (L4) is realized by multiple cooperating agents that collectively achieve the mission objectives. Each agent has only a partial view of the operating context C whose relevant elements are collected (and possibly analyzed) in a decentralized manner.  
   
  Explainability Levels  
   
  We deﬁne explainability concerns in HMT, building upon the conceptual analysis proposed by M.A. K¨ ohl et al. [18]. In particular, we hereby refer to an explanation E with respect to an explanandum X, a group of stakeholders G, and a context C, as the ability to make any representative of G understand X. Thus, a system is explainable if and only if it is able by a means M to produce an explanation E of an explanandum X for a target group G in a certain operating context C. In other words, the system satisﬁes a given explainability requirement, deﬁned as a tuple R := X, G, C. The means M that produces an explanation E to satisfy R may be part of the system responsible for X or not. When a means M is directly integrated into the system, we consider the system self-explainable. In our view, the context is a composite element that contains factors characterizing relevant phenomena that may aﬀect X according to domain knowledge. Since explanations are directed to G and constructed according to C, it is important that selected factors in C can be interpreted by representatives of G.  
   
  158  
   
  M. M. Bersani et al.  
   
  The notion of explainability, and in particular the characterization of context C and means M , can be given according to diﬀerent (increasing) levels. We take inspiration from the classiﬁcation introduced by Camilli et al. [5] that identiﬁes levels of explainability of self-adaptive systems based, in turn, on the guidelines introduced by the roadmap for robotics in Europe [9]. In Table 2, we identify and describe diﬀerent levels of explainability in the HMT domain. Collective levels L5 and L6 (highlighted in Table 2) are the focus of this work. To instantiate the abstract notions introduced in Table 2, we exemplify here L5 and L6 with two scenarios occurring in our illustrative HMT mission. The scenarios include multiple mission agents, stakeholders, and diﬀerent explainability requirements, i.e., explananda (aspects related to mission dependability and patient fatigue), as well as contexts composed of various HMT factors listed in Table 1. We assume that this list captures domain knowledge, and therefore, contains relevant factors of the agents involved in the HMT as described in [21]. SL 5 (Patient Fatigue). The doctor (G) wants to understand the main characteristics of all agents—including the robot(s), the patient, and the doctor himself/herself—that currently aﬀect the fatigue of the patient (X). Understanding the positive/negative impact (E) of these characteristics can suggest to the doctor how to reduce the level of stress of the patient. The context C consists of the HMT factors characterizing the agents involved in the HMT. Furthermore, C does not include factors that cannot be interpreted by the doctor (e.g., controller conﬁguration) who is the main stakeholder in this scenario. An explanation E here may reveal that joint high doctor and high robot speed have a strong negative eﬀect on fatigue only when the patient has unsteady health. It is worth noting that reasoning on the joint eﬀect of factors of multiple agents is possible here because the scenario yields a collective explainability level. A non-collective level (e.g., L3, L4) would lead to short-sighted explanations based on factors of individual agents only (e.g., speed of the doctor without taking into consideration the health status of the patient), ultimately leading to reduced business impact of stakeholder decisions. SL 6 (Mission Dependability). The system administrator (G) wants to understand what are the important conﬁguration options of the software components (e.g., min and max distance) and how the interactions between them and the other characteristics of the agents aﬀect the likelihood (E) of satisfying the dependability requirements of the mission (X). In this case, context C is composed of all HMT factors, including those concerning the controller conﬁguration that can be interpreted by the system administrator. As an example, the explanation E may suggest to the administrator that the max distance conﬁguration has almost no impact. At the same time, on average there is a linear dependency between max fatigue and the likelihood of mission success.  
   
  5  
   
  Architectural Solution  
   
  Figure 1 illustrates the key components of our architectural solution to realize collective explainability (i.e., L5 and L6) for service robots. The main building  
   
  Architecting Explainable Service Robots administrator/modeler  
   
  subsystem Online Mission Monitor  
   
  Specification Manager Sensor  
   
  Explainer  
   
  Transform create  
   
  stakeholder  
   
  subsystem Offline Mission Builder create  
   
  159  
   
  Sample  
   
  M2M Transformer  
   
  Build Explainers  
   
  Sampler  
   
  Build Predictors  
   
  Check  
   
  HMT Analyzer  
   
  Explanation Builder  
   
  Predictor Builder  
   
  Local Monitor Event Lookup Predictor Lookup, Requirement Lookup  
   
  Factor Lookup subsystem Knowledge  
   
  create  
   
  Subscribe topic: /  
   
  create  
   
  Data Lookup  
   
  Store Artifact  
   
  Subscribe topic: /  
   
  create  
   
  artifact  
   
  artifact  
   
  artifact  
   
  SHA network  
   
  Dataset  
   
  Requirement Mapping  
   
  Requirement Lookup  
   
  create  
   
  artifact  
   
  artifact  
   
  artifact  
   
  artifact  
   
  HMT Factors  
   
  Predictor Catalog  
   
  Explainer Catalog  
   
  Event Log  
   
  Fig. 1. Component diagram of our software architecture.  
   
  blocks are subsystems Offline Mission Builder, Online Mission Monitor, and the shared Knowledge repository. The component Specification Manager assists the modeler in capturing the domain knowledge by creating all necessary artifacts to produce the explanations at runtime. These artifacts are stored in the Knowledge subsystem and include the SHA network and HMT factors modeling the target mission, and then Requirement Mapping that contains a set of tuples X, G, C mapping to the corresponding means M used to produce explanations for X to stakeholder G, according to the context C. In our current solution, X is an MTL property that can be automatically estimated on SHA networks using statistical model checking, G is a unique identiﬁer associated with the stakeholder, C is a nonempty subset of the HMT factors, while M is a categorical variable that identiﬁes a particular interpretable ML technique (either global or local). Offline Mission Builder uses these artifacts to build a number of alternative predictors in charge of forecasting the explanandum X under changing operating context. Then, Online Mission Monitor supervises an ongoing mission taking into account the information in Requirement Mapping. In particular, for each tuple X, G, C, it monitors the context C and provides the stakeholder G with explanations for the predicted quantity X using the selected technique M . In the following, we describe the main subsystems in more detail.  
   
  160  
   
  M. M. Bersani et al.  
   
  Listing 1.1. Speciﬁcation excerpt deﬁning our illustrative HMT. 1 d e f i n e robots : 2 robot Tbot in ( 2 3 0 0 . 0 , 4 0 0 . 0 ) type t u r t l e b o t 3 w a f f l e p i charge 9 0 . 0 3 4 d e f i n e humans : 5 human p a t i e n t in ( 2 3 0 0 . 0 , 6 0 0 . 0 ) speed 4 0 . 0 is young sick freewill inattentive 6 human d o c t o r in ( 4 4 0 0 . 0 , 7 0 0 . 0 ) speed 1 0 0 . 0 i s e l d e r l y h e a l t h y freewill focused 7 8 d e f i n e mission m f o r Tbot : 9 do r o b o t l e a d e r f o r p a t i e n t with target w a i t i n g r o o m 10 do r o b o t f o l l o w e r f o r d o c t o r with target s t o r a g e r o o m 11 do r o b o t f o l l o w e r f o r d o c t o r with target a n a l y s i s r o o m 12 do r o b o t l e a d e r f o r p a t i e n t with target a n a l y s i s r o o m  
   
  Oﬄine Mission Builder. The modeler triggers the oﬄine stage by interacting with Specification Manager, a modeling workbench featuring a DomainSpeciﬁc Language (DSL) introduced by Lestingi et al. [22]. We use this language to specify the HMT, including the HMT factors, and the explainability requirements. Listing 1.1 shows a small DSL extract describing our illustrative example2 . The fragment speciﬁes the agents: a robot, a patient, and a doctor, each one with certain physical/physiological characteristics. As anticipated in Sect. 3, the mission is deﬁned by a sequence of services carried out by the robot(s) and deﬁned leveraging pre-deﬁned templates (e.g., “robot leader”, or “robot follower”) instantiated for the desired agent(s) and for a target location, such as “waiting room”—that is, an alias for a location in the physical space shared by all agents. The modeler also deﬁnes the HMT factors as a set of variables with type and domain (Table 1) and the Requirement Mapping by deﬁning all tuples of interest X, G, C and the corresponding means M . An explanandum X is a quantitative MTL property that can be computed or estimated given the speciﬁcation of the mission and an assignment to the HMT factors. For instance, in SL5, X is the maximum expected value of the fatigue of the patient. In SL6, X is an MTL property ψ whose probability P (ψ) is the likelihood of mission success. The component in charge of estimating the explananda is the HMT Analyzer. Our current solution makes use of Uppaal SMC given that the HMT is formally speciﬁed as an SHA network. To this end, M2M Transformer processes the DSL sources to generate an SHA M[¯ v ], with v¯ a valid value assignment to HMT factors according to their deﬁnition. This is carried out by a fully automated model-to-model transformation in which a set of Uppaal templates corresponding to the elements of the SHA network are customized based on the DSL speciﬁcation [22]. Our illustrative example reduces to a SHA network with structural complexity equal to ∼ 176×103 (calculated as the product of the number of locations, edges, and the cardinality of state variables’ domains). 2  
   
  A package with full mission speciﬁcation, data and sources to replicate our results is available at https://doi.org/10.5281/zenodo.8110691.  
   
  Architecting Explainable Service Robots  
   
  161  
   
  The objective of the Sampler component is to mitigate the uncertainty due to changing HMT factors by enriching Knowledge through a stochastic exploration3 of the factor space rather than exhaustive enumeration (generally unfeasible). Sampler produces many assignments v¯ to HMT factors. Then, the corresponding SHA network M[¯ v ] is generated and analyzed through HMT Analyzer. This latter component estimates the explanandum X for each tuple X, G, C. The analysis, executed for all v¯ and all requirements, produces the artifact Dataset, which is a set {¯ v , y}, where y is the value of X for model M[¯ v ]. For instance, value y in SL5 is the patient fatigue represented as a percentage (i.e., a real value in [0, 1]). In SL6, instead, the outcome is the mission success represented by a Boolean value (i.e., a categorical variable in {0, 1}4 ). When Dataset is available, Predictor Builder creates a Predictor component by training/testing a predictive model (e.g., neural network regressor/classiﬁer) to forecast the explanandum given new HMT value assignments. A predictor is created for each explainability requirement in Requirement Mapping, according to the nature of X and context C. In our scenarios, we create regressors for realvalue variables and classiﬁers for categorical variables. Context C determines the subset of HMT factors used for training. Note that we deﬁne C based on domain knowledge. Nonetheless, our solution does not prevent engineers from complementing this practice through automated techniques to feature selection. Online Mission Monitor. This subsystem is invoked by Mission Builder once Predictor Catalog is complete and available in Knowledge. The Explainer Builder component uses each available predictor to create an Explainer component according to M for each tuple in textttRequirement Mapping. An Explainer embeds a global/local model-agnostic interpretable ML technique to make the predicted explananda interpretable by stakeholders. Our current implementation adopts PDP for global explanations and LIME for local explanations (see Sect. 2). Once Explainer Catalog is ready, the subsystem initializes a publish-subscribe mechanism to realize the collective explainability levels introduced in Sect. 4. In particular, for every requirement R, the corresponding requirement topic / is instantiated. Then, the corresponding Explainer component subscribes to topic /. Finally, for each HMT agent, there is a Local Monitor component subscribed to one or more / topics to receive sensor data. Our solution adopts the Event Sourcing pattern5 , whereby explanations are determined and possibly reconstructed on demand by storing all messages exchanged over topics /. Persisting the messages enables the Explainer components to have a complete chronicle of past context changes. Once the HMT application is deployed, the explanations E are realized at runtime using the publish-subscribe mechanism. Each sensor periodically samples an HMT factor and the associated Sensor component publishes the data to the corresponding / topic. The subscriber Local Monitor can clean or aggregate raw data received by sensors. Since a Local Monitor 3 4 5  
   
  Our current implementation relies on uniform random sampling. Mission success occurs if P (ψ) is greater than a user-deﬁned probability threshold. https://martinfowler.com/eaaDev/EventSourcing.html.  
   
  162  
   
  M. M. Bersani et al.  
   
  belongs to an individual agent, collected data represents a subset of the HMT factors, namely a portion C  of one or more contexts. The outcomes of a Local Monitor are published to the identiﬁed topics / and, therefore, received by all Explainers subscribed to them. This mechanism allows each Explainer to run a continuous collection of the relevant HMT factors used to build the explanations E to the stakeholders based on the latest context available. A stakeholder initiates a direct interaction with an Explainer component solely at times when an explanation is required. Through Event Sourcing, the Explainer components can reconstruct the temporal sequence of explanations over a speciﬁc time window by using historical data of the context retrieved from Event Log.  
   
  Fig. 2. Model score over training set size.  
   
  6  
   
  Evaluation  
   
  The evaluation of our approach aims to answer the following research questions: RQ1: What is the cost of producing accurate predictors in our solution? RQ2: Is our solution able to support explainability up to level 6? Design of the Evaluation. To answer RQ1 and RQ2, we conducted an experimental campaign using our illustrative example. As reported in Sect. 5, the resulting SHA network specifying the mission is not trivial (i.e., structural complexity 103 ). To check the satisfaction of explainability requirements, we adopt a scenario-based assessment considering two selected scenarios: SL5 and SL6 (local and global collective explainability, respectively). For each scenario, we controlled the HMT factors of interest (see Table 1) collectively composing the context C, and we generated 1k unique assignments {¯ v } using uniform random sampling. For all M[¯ v ] with v¯ ∈ V, we used Uppaal to estimate the explanandum X in each scenario Concerning human fatigue,  
   
  Architecting Explainable Service Robots  
   
  163  
   
  parametrization of the formal model has been carried out considering experiments with real human subjects [15]. Estimates of the explananda are obtained through SMC. The results have been used to create a mapping between v¯ and the corresponding real-valued outcome y ∈ [0, 1] (i.e., patient fatigue) as well as Boolean outcome y  ∈ {0, 1} (i.e., mission failure/success). The two datasets {¯ v , y} and {¯ v , y  } have been used to feed the oﬄine stage and study the cost of building accurate predictors. Finally, for each scenario and corresponding context C, we collected and analyzed the output E of the Explainer components to assess the achievement of the target explainability requirements, that is, whether E is interpretable by G and can help in understanding the explanandum X. The experimental campaign has been conducted using a commodity hardware machine running Ubuntu OS v22.04 with 64GB RAM and a quad-core Intel x86 64 CPU at 2.1 GHz. Results RQ1 (Cost of Producing Accurate Predictors). To study the cost in terms of execution time, we conducted multiple runs of the oﬄine stage using {¯ v , y} and {¯ v , y  } for SL5 and SL6, respectively. For both scenarios, we considered ﬁve state-of-the-art predictors commonly adopted to address classiﬁcation and regression problems: Random Forests (RF), Decision Tree (DT), Neural Network (NN), Gradient Boosting Machine (GBM), and eXtreme Gradient Boosting Tree (XGB). We refer the reader to [26] for further details about these techniques. Table 3. Cost of veriﬁcation and predictor train/test. size SMC (sec.)  
   
  train/test regressors (sec.) train/test classiﬁers (sec.) RF DT NN GBM XGB RF DT NN GBM XGB  
   
  100 200 300 400 500 600 700 800  
   
  0.33 0.35 0.46 0.47 0.51 0.56 0.54 0.62  
   
  107805.50 177798.85 282922.82 373003.94 479403.91 563768.23 652054.33 756494.90  
   
  0.01 0.02 0.03 0.02 0.02 0.02 0.03 0.03  
   
  0.30 0.75 0.63 0.83 0.81 0.88 0.97 1.08  
   
  0.23 0.33 0.49 0.59 0.72 0.86 0.97 1.15  
   
  1.91 1.88 1.94 2.02 2.09 2.21 2.15 2.08  
   
  0.16 0.48 0.50 0.52 1.86 2.03 2.07 2.03  
   
  0.01 0.02 0.03 0.04 0.19 0.05 0.01 0.02  
   
  0.56 0.78 1.17 1.40 1.73 2.05 2.65 2.47  
   
  0.45 0.50 0.81 1.02 1.14 1.40 1.47 1.60  
   
  1.62 1.71 1.78 1.47 1.52 1.37 1.37 1.34  
   
  For each scenario, multiple predictors have been created by varying the size of the training set from 100 to 800 data points to determine the cost of achieving a relatively high and steady accuracy level. Once trained, each predictor has been tested using the same test set composed of 200 data points that do not belong to the training set. To measure the accuracy of regressors, in SL5, we adopt the Negative Mean Squared Error (NMSE), which is a negative value that increases to zero as the error decreases. In SL6, we adopt the Area Under the receiver operator characteristic Curve (AUC) to measure the accuracy as the  
   
  164  
   
  M. M. Bersani et al.  
   
  discriminatory power of the classiﬁers [11]. The AUC ranges between 0 (worst), 0.5 (no better than random guessing), and 1 (best). Figure 2 shows the accuracy of the predictors obtained in SL5 (Fig. 2a) and SL6 (Fig. 2b) using training sets of increasing size. We can observe that the accuracy generally increases as the size of the training set does. In both scenarios, the best predictors, stabilizes around size 600. Table 3 shows the cost considering veriﬁcation and creation of predictors. Each row shows the cost of generating the dataset of a certain size as well as the train/test cost per each individual model. The most time-consuming part of the oﬄine stage is due to the SMC being repeatedly executed for each data point. Around 6.5 days are necessary to collect 600 data points (∼ 10 mins per run) and produce the predictors with the highest accuracy. The time required to train and test the predictors is always negligible compared to SMC. DT yields the lowest execution time (boldface). To further assess the accuracy of predicting the target explanandum X, we adopt 10-fold cross-validation using 600 points for the training set (as discussed above) and the remaining 400 points as the test set. After cross-validation, we created a rank of the predictive models using the non-parametric Scott-Knott Eﬀect Size Diﬀerence (ESD) test [30]. Namely, we partitioned the set of AUC/NMSE values into distinct groups with a non-negligible diﬀerence. Consistently with the data in Fig. 2, RF is one of the ﬁrst-rank regressors, and in particular it is the one that predicts the fatigue of the patient (SL5) with the highest median NMSE, equal to −0.01. Also, GBM is the ﬁrst-rank classiﬁer that predicts (un)successful missions (SL6) with the highest median AUC, equal to 0.96.  
   
  Fig. 3. Explanations for SL5 using a LIME Explainer component.  
   
  RQ1 Summary. The most expensive part of the process is oﬄine SMC. In our scenarios around 6.5 days are necessary to collect 600 data points and achieve high and steady accuracy. The time required by training/testing is negligible (less than 3 s). RF is the best regressor in SL5 (median NMSE −0.01). GBM is the best classiﬁer in SL6 (median AUC 0.96).  
   
  Architecting Explainable Service Robots  
   
  165  
   
  Results RQ2 (Satisfaction of Explainability Requirements). To answer this question we executed the online stage and we collected the results produced by the Explainer components in our two selected scenarios. Then, we carried out a qualitative assessment of the explanations to determine the extent to which the target explanandum can be understood by stakeholders. Concerning SL5, all the HMT factors that can be interpreted by the doctor (i.e., all factors except for those aﬀecting the robot controller) are collected and then dispatched to the local Explainer component paired with the best Predictor trained to forecast the patient fatigue (i.e., RF regressor according to RQ1). Then, we adopt a LIME Explainer to build an on-the-ﬂy (interpretable) local surrogate model that, given a snapshot of the context, predicts the fatigue and explains the contribution of the factors. Figure 3a shows a LIME explanation for a mission run where the patient fatigue is relatively high (79%). The plot shows the relative importance of the top 5 HMT factors and illustrates whether each value contributes to an increase or decrease in the expected fatigue level. For instance, the elderly age group has the highest positive weight (0.31) and, therefore, represents the main root cause of high fatigue levels. The robot speed being greater than 82.3 cm/s has the lowest negative weight (−0.29). According to Fig. 3a, the doctor can see there are some factors under his/her own control that have a high positive contribution: a relatively high walking speed (between 65.9 and 82.4 cm/s) and the initial position x (between 2345.9 and 3133.3). The doctor can indeed inspect these values and change them to understand the extent to which these changes impact the target explanandum. Figure 3b shows the LIME explanation for a new assignment where these two latter factors have been changed to decrease the expected fatigue. We can see that the new assignment of doctor speed and position reduces their overall impact since they are not in the top 5 factors anymore. Under the new assignment, the doctor can see that the expected fatigue level in SL5 decreases from 79% to 43%. Concerning SL6, all HMT factors (including those aﬀecting the robot controller) are collected and dispatched to the global Explainer component paired  
   
  Fig. 4. Explanations for SL6 using a PDP Explainer component.  
   
  166  
   
  M. M. Bersani et al.  
   
  with the best Predictor trained to forecast the mission success (i.e., GBM classiﬁer according to RQ1). In this scenario, we adopt a PDP Explainer that builds explanations to understand the marginal eﬀect of selected HMT factors on the expected probability of success. Figure 4 shows two selected PDP explanations illustrating the joint eﬀect of min/max distance (Fig. 4a) and min/max fatigue (Fig. 4b). These factors represent system conﬁguration options that aﬀect the decisions of the robot (e.g., the robot stops and waits for the human when the distance is higher than the max value). The administrator can inspect the plots using a causal interpretation since, in this case, we explicitly model the probability of success as a function of the HMT factors. As an example, Fig. 4b shows an almost linear dependency between max fatigue and probability of success, while min fatigue aﬀects the success with a concave function. The administrator can thus (re)conﬁgure the robot controller by selecting the ranges that maximize the expected success: max fatigue 80% and min fatigue between 25% and 35%. RQ2 Summary. Considering our two selected scenarios, HMT factors have been collected from multiple mission agents and dispatched to the corresponding local/global Explainer components. In both scenarios, we illustrate the achievement of the desired explainability level by showing how the stakeholders can interpret the explanations and take decisions to inﬂuence the explanandum by changing relevant aspects of the operating context. Threats to Validity. We limited construct validity threats by assessing the metrics adopted in our experiments before using them. Both AUC and NMSE are widely suggested to evaluate predictive models [20]. We also use a mainstream measure of the cost in terms of execution time required by the main stages of our approach. Conclusion validity threats have been mitigated by reducing the possibility of overﬁtting on the test set by applying 10-fold cross-validation [31]. Conclusions are partially based on a qualitative assessment carried out by the authors rather than the stakeholders involved in SL5 and SL6. Comprehensive understanding of the quality of the explanations from the point of view of real stakeholders requires further investigation. We addressed internal validity threats by creating a testbed with ﬁne-grained access to HMT factors to increase internal validity compared to observations without manipulation. We also adopted stratiﬁed sampling to reduce the risk of obtaining underrepresented HMT factors while building the predictors. External validity threats exist since our experiments consider a single case study. We limited these threats by considering an example described by existing literature as indicative of the characteristics of other HMT systems. The generalization of our ﬁndings to other domains requires additional experiments.  
   
  7  
   
  Related Work  
   
  In recent years, explainability—i.e., the ability to provide a human with understandable explanations of the results produced by AI and ML algorithms—has  
   
  Architecting Explainable Service Robots  
   
  167  
   
  become a key aspect of designing tools based on these techniques [1], especially in critical areas such as healthcare [33]. As such, it is attracting a growing interest in the Software Engineering community [32], as witnessed by explainable analytical models for predictions and decision-making [32], explainable counterexamples [14], and explainable quality attribute trade-oﬀs in software architecture selection [4]. In the area of self-adaptive systems, there are preliminary approaches that aim at embedding explainability in software applications [16,17] and providing a more general approach to the construction of human-understandable explanations for successful adaptation in robotic scenarios [5]. The role of humans in self-adaptive systems has been mainly classiﬁed into “humans-out-of-the-loop” (if humans cannot change the system’s behavior/outcome), and “humans-on/in-the-loop” (if they act as external controllers and supervisors [19,24], or as input providers for the system [23]). To facilitate the understanding of the system operation through explanations, humanson/in-the-loop have been modeled using stochastic models, which undergo model checking [4,23]. Stochastic models have been applied to develop service robotic applications for which formal guarantees on the feasibility of the collaborative scenarios are obtained through SMC [22]. In such applications, the integration of explainability techniques allows both the designers of robotic scenarios and the humans involved in the interaction with robots to understand the reasons why collaboration can fail or successfully complete [2,3]. Although these works show an eﬀective combination of ML, explainability techniques, and formal methods, they lack a detailed investigation of the architectural aspects involved.  
   
  8  
   
  Conclusion and Future Work  
   
  We addressed the problem of providing meaningful explanations in multi-agent HMT applications to foster trust by introducing six levels of explainability and presenting an architectural solution capable of providing stakeholders with human interpretable explanations based on user-speciﬁed explainability requirements. Our evaluation shows that the proposed architectural solution supports explainability up to level six. We plan to extend our solution with other factor sampling strategies based on metaheuristic optimization, in order to push the exploration of the factor space toward speciﬁc conditions of interest. We also plan to validate the approach with human participants by presenting real stakeholders with the produced explanations and having them assess their quality.  
   
  References 1. Angelov, P.P., Soares, E.A., Jiang, R., Arnold, N.I., Atkinson, P.M.: Explainable artiﬁcial intelligence: an analytical review. WIREs Data Min. Knowl. Discov. 11(5), e1424 (2021) 2. Bersani, M.M., Camilli, M., Lestingi, L., Mirandola, R., Rossi, M.: Explainable human-machine teaming using model checking and interpretable machine learning. In: International Conference on Formal Methods in Software Engineering, pp. 18– 28. IEEE (2023)  
   
  168  
   
  M. M. Bersani et al.  
   
  3. Bersani, M.M., Camilli, M., Lestingi, L., Mirandola, R., Rossi, M., Scandurra, P.: Towards better trust in human-machine teaming through explainable dependability. In: ICSA Companion, pp. 86–90. IEEE (2023) 4. C´ amara, J., Silva, M., Garlan, D., Schmerl, B.: Explaining architectural design tradeoﬀ spaces: a machine learning approach. In: Biﬄ, S., Navarro, E., L¨ owe, W., Sirjani, M., Mirandola, R., Weyns, D. (eds.) ECSA 2021. LNCS, vol. 12857, pp. 49–65. Springer, Cham (2021). https://doi.org/10.1007/978-3-030-86044-8 4 5. Camilli, M., Mirandola, R., Scandurra, P.: XSA: Explainable self-adaptation. In: International Conference on Automated Software Engineering. ASE’22. ACM (2023) 6. Cleland-Huang, J., Agrawal, A., Vierhauser, M., Murphy, M., Prieto, M.: Extending MAPE-K to support human-machine teaming. In: SEAMS, pp. 120–131. ACM (2022) 7. David, A., Larsen, K.G., Legay, A., Mikuˇcionis, M., Poulsen, D.B.: UPPAAL SMC tutorial. STTT 17(4), 397–415 (2015) 8. David, A., et al.: Statistical model checking for networks of priced timed automata. In: Fahrenberg, U., Tripakis, S. (eds.) FORMATS 2011. LNCS, vol. 6919, pp. 80– 96. Springer, Heidelberg (2011). https://doi.org/10.1007/978-3-642-24310-3 7 9. EU: Robotics 2020 Multi-Annual Roadmap For Robotic in Europe (2016). https:// www.eu-robotics.net/sparc/upload/about/ﬁles/H2020-Robotics-Multi-AnnualRoadmap-ICT-2016.pdf 10. Garc´ıa, S., Str¨ uber, D., Brugali, D., Berger, T., Pelliccione, P.: Robotics software engineering: a perspective from the service robotics domain, pp. 593–604. ESEC/FSE 2020. ACM (2020) 11. Hanley, J.A., McNeil, B.J.: The meaning and use of the area under a receiver operating characteristic (ROC) curve. Radiology 143(1), 29–36 (1982) 12. Hayes, B., Shah, J.A.: Improving robot controller transparency through autonomous policy explanation. In: HRI, pp. 303–312. IEEE (2017) 13. Jovanovi´c, M., Schmitz, M.: Explainability as a user requirement for artiﬁcial intelligence systems. Computer 55(2), 90–94 (2022) 14. Kaleeswaran, A.P., Nordmann, A., Vogel, T., Grunske, L.: A systematic literature review on counterexample explanation. Inf. Softw. Technol. 145, 106800 (2022) 15. Kang, H.G., Dingwell, J.B.: Diﬀerential changes with age in multiscale entropy of electromyography signals from leg muscles during treadmill walking. PLoS ONE 11(8), e0162034 (2016) 16. Khalid, N., Qureshi, N.A.: Towards self-explainable adaptive systems (SEAS): a requirements driven approach. In: Joint Proceedings of REFSQ. CEUR Workshop Proceedings, vol. 2857. CEUR-WS.org (2021) 17. Kordts, B., Kopetz, J.P., Schrader, A.: A framework for self-explaining systems in the context of intensive care. In: ACSOS, pp. 138–144. IEEE (2021) 18. K¨ ohl, M.A., Baum, K., Langer, M., Oster, D., Speith, T., Bohlender, D.: Explainability as a non-functional requirement. In: RE, pp. 363–368. IEEE (2019) 19. de Lemos, R.: Human in the loop: what is the point of no return? In: SEAMS, pp. 165–166. ACM (2020) 20. Lessmann, S., Baesens, B., Mues, C., Pietsch, S.: Benchmarking classiﬁcation models for software defect prediction: a proposed framework and novel ﬁndings. IEEE Trans. Softw. Eng. 34(4), 485–496 (2008) 21. Lestingi, L., Askarpour, M., Bersani, M.M., Rossi, M.: A deployment framework for formally veriﬁed human-robot interactions. IEEE Access 9, 136616–136635 (2021)  
   
  Architecting Explainable Service Robots  
   
  169  
   
  22. Lestingi, L., Zerla, D., Bersani, M.M., Rossi, M.: Speciﬁcation, stochastic modeling and analysis of interactive service robotic applications. Robot. Autonom. Syst. 163 (2023) 23. Li, N., C´ amara, J., Garlan, D., Schmerl, B.R., Jin, Z.: Hey! Preparing humans to do tasks in self-adaptive systems. In: SEAMS, pp. 48–58. IEEE (2021) 24. Madni, A.M., Madni, C.C.: Architectural framework for exploring adaptive humanmachine teaming options in simulated dynamic environments. Systems 6(4) (2018) 25. Miller, T.: Explanation in artiﬁcial intelligence: insights from the social sciences. Artif. Intell. 267, 1–38 (2019) 26. Mitchell, T.M.: Machine Learning, 1st edn. McGraw-Hill Inc., New York (1997) 27. Molnar, C.: Interpretable Machine Learning. 2 edn (2022). https://christophm. github.io/interpretable-ml-book 28. Ozkaya, I.: The behavioral science of software engineering and human-machine teaming. IEEE Softw. 37(6), 3–6 (2020) 29. Paleja, R., Ghuy, M., Ranawaka Arachchige, N., Jensen, R., Gombolay, M.: The utility of explainable AI in ad hoc human-machine teaming. In: NEURIPS, vol. 34, pp. 610–623. Curran Associates, Inc. (2021) 30. Scott, A.J., Knott, M.: A cluster analysis method for grouping means in the analysis of variance. Biometrics 30(3), 507–512 (1974) 31. Stone, M.: Cross-validatory choice and assessment of statistical predictions. J. Roy. Stat. Soc.: Ser. B (Methodol.) 36(2), 111–133 (1974) 32. Tantithamthavorn, C.K., Jiarpakdee, J.: Explainable AI for software engineering. In: ASE, pp. 1–2. ACM (2021) 33. Tjoa, E., Guan, C.: A survey on explainable artiﬁcial intelligence (XAI): toward medical XAI. IEEE Trans. Neural Netw. Learn. Syst. 32(11), 4793–4813 (2021)  
   
  Analysing Interoperability in Digital Twin Software Architectures for Manufacturing Enxhi Ferko1(B) , Alessio Bucaioni1 , Patrizio Pelliccione2 , and Moris Behnam1 1  
   
  M¨ alardalen University, V¨ aster˚ as, Sweden {enxhi.ferko,alessio.bucaioni,moris.behnam}@mdu.se 2 Gran Sasso Science Institute, L’Aquila, Italy [email protected]   
   
  Abstract. Digital twins involve the integration of advanced information technologies to create software replicas that control and monitor physical assets. Interoperability is an essential requirement in the engineering of digital twins. This paper is the ﬁrst study analysing interoperability in digital twin software architectures in the manufacturing industry. We began with an initial set of 2403 peer-reviewed publications and after a screening process, we selected a ﬁnal set of 21 primary studies. We identiﬁed the set of technologies used for data exchange and the level of interoperability achieved during such an exchange. We organised the results according to the ISO 23247 standard and the level of conceptual interoperability model. Keywords: Software Architecture ISO 23247 · LCIM  
   
  1  
   
  · Interoperability · Digital twin ·  
   
  Introduction  
   
  A Digital Twin (DT) is a virtual representation of a physical component, system, or process (i.e., the physical twin) that functions as a digital equivalent for the remote monitoring and controlling of the physical twin [23]. The functional suitability of DTs is heavily dependent on interoperable subsystems that are able to seamlessly and eﬀectively exchange data [29]. Interoperability goes beyond the mere data transmission and is deﬁned as “the degree to which two or more systems, products or components can exchange information and use the information that has been exchanged ” [20]. Achieving interoperability for DTs can be challenging [14,22,27]. DTs include a high diversity of subsystems responsible for diﬀerent functionalities. These subsystems may use diﬀerent communication technologies for data exchange that are developed without considering the need to operate with each other causing interoperability issues [P5]. This is the case of the ISO 23247 - digital twin framework for manufacturing standard that provides a functional reference architecture for DTs comprising entities and sub-entities without explicitly discussing how to support interoperability [19]. The observable manufacturing elements (OME) entity and the c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 170–188, 2023. https://doi.org/10.1007/978-3-031-42592-9_12  
   
  Analysing Interoperability in Digital Twin Software Architectures  
   
  171  
   
  data collection sub-entity may communicate using a proprietary network with a specialised conﬁguration, while the application service, operation and management sub-entities may use a wired network running IP-based protocols [19]. This diversity in communication technologies makes it challenging to establish interoperability between subsystems, especially when they are developed by diﬀerent vendors or organisations. Moreover, as the demand for DT federations increases, achieving interoperability between DTs becomes an upcoming requirement [15]. To the best of our knowledge, we are still missing a comprehensive analysis and assessment of the interoperability requirements and support for DTs. Therefore, the research goal (RG) of this paper is to analyse interoperability in DT software architectures for manufacturing. We analyse how data is exchanged and which level of interoperability is reached during such an exchange in proposed architectures for DTs in manufacturing. We focus on the manufacturing domain for two primary reasons. Firstly, the widespread adoption of DTs in this domain has made it a signiﬁcant area of interest, with more than 70% of the research on DTs speciﬁcally targeting manufacturing [11]. Additionally, the manufacturing domain is only domain that has a dedicated standard for DTs, namely the ISO 23247 standard [19]. We use the ISO 23247 standard together with the Level of Conceptual Interoperability Model (LCIM) [33]. We use LCIM due to its recognition as one of the most eﬀective models for addressing interoperability at early stages of software development, particularly in architectural design [33]. Moreover, LCIM has been successfully applied in several domains, including manufacturing [32]. It is worth noting that adhering to the ISO 23247 standard ensures the broader applicability of our research outcomes [15,26]. We tackled the above goal using a research method built on the guidelines for systematic studies [21]. We analysed 21 DT architectures resulting from a systematic literature review of 2403 peer-reviewed studies. We analysed the ﬁnal set of 21 DT architectures following a data extraction, analysis, and synthesis process. We identiﬁed the technologies employed for data exchange and clustered them according to the network view of the ISO 23247 reference architecture. To indicate the interoperability levels that existed for each of the networks in the proposed DT architectures, we used the descriptive view of the LCIM. In addition, we used the prescriptive view to discuss the requirements necessary to achieve higher interoperability levels. The remainder of this paper is structured as follows. Section 2 presents an overview of background information. Section 3 describes the adopted research methodology. Section 4 and Sect. 5 present and discuss the results of this work. Section 6 gives an overview of the related works and Sect. 7 concludes the paper with ﬁnal remarks and future works.  
   
  2  
   
  Background  
   
  This section provides an overview of the ISO 23247 standard (part four) and LCIM [33].  
   
  172  
   
  2.1  
   
  E. Ferko et al.  
   
  ISO 23247 and Information Exchange  
   
  The ISO 23247 standard comprises four parts [19]. Part four deﬁnes the technical requirements for the information exchange between the entities of the reference architecture. In ISO 23247, a network can be seen as a communication point between functional or sub-functional entities of the reference architecture. The standard identiﬁes four types of networks (identiﬁed with the numbers 1–4 in Fig. 1): user, service, access, and proximity.  
   
  Fig. 1. ISO 23247 networking view of digital twin reference models [19].  
   
  The proximity network (4 in Fig. 1) connects the device communication entity with the OMEs, e.g., resources like equipment. Hence, the device communication entity uses the proximity network, for transmitting commands to and receiving results from OMEs. The access network (3 in Fig. 1) connects the device communication entity with the digital twin and the user entity. The digital twin entity synchronises OMEs with their DTs by hosting applications and services such as simulation, analysis, etc. The digital twin entity hosts applications and services using the DT models for humans and other systems. Hence, the device communication entity transmits data collected from the OMEs to the digital twin entity through the data collection sub-entity. Similarly, the device control sub-entity transmits commands from the user entity or the digital twin entity to control the OMEs. The service network (2 in Fig. 1) connects digital twin sub-entities among them. Finally, the user network (1 in Fig. 1) connects the user entity with the digital twin entity to enable the use of the DT instances managed by the digital twin entity. 2.2  
   
  The Conceptual Interoperability Model  
   
  A precise understanding of shared data is essential to achieve interoperability between diﬀerent systems. According to Carney et al., the assessment of interoperability is crucial and must be measurable to attain success [7]. Several models for evaluating interoperability have been proposed to date. Leal et al. have conducted a thorough review and comparison of 22 such models [24]. In this paper, we refer to the Level of Conceptual Interoperability Model (LCIM) [33].  
   
  Analysing Interoperability in Digital Twin Software Architectures  
   
  173  
   
  LCIM identiﬁes 7 levels of interoperability, spanning from no interoperability to conceptual interoperability. At level zero, systems function independently and do not share data. At level one, systems can technically exchange data in the form of raw bits and bytes. At level two, systems use a common data format to achieve syntactic interoperability. However, the meaning of the exchanged data remains undeﬁned at this stage. Semantic interoperability, level three, requires the data meaning to be explicitly speciﬁed. At level four, interoperating systems understand the context, system states, and processes, as well as the meaning of the exchanged data, which results in pragmatic interoperability. At level ﬁve, dynamic interoperability is achieved as systems can comprehend state changes over time. Lastly, at level six, conceptual interoperability is attained, where interoperating systems fully comprehend each other’s information, processes, contexts, and modelling assumptions.  
   
  3  
   
  Research Methodology  
   
  We performed this research using the guidelines for systematic and empirical studies in software engineering [21,30]. Our methodology consists of three phases: planning, conducting, and documenting. In the planning phase, we identiﬁed the needs for this study, deﬁned the research goal and questions, and described the research protocol that we followed for carrying out the study. In the conducting phase, we executed all the steps deﬁned in the research protocol, which were search and selection, deﬁnition of the classiﬁcation framework, data extraction and data analysis. In the search and selection step, we exercised the selected scientiﬁc databases and indexing systems using the deﬁned search string. We followed a rigorous selection process and ﬁltered the candidate studies to get the ﬁnal set of primary studies. We complemented the automatic search with fully recursive forward and backward snowballing activities [35]. Using the key-wording process [28], we deﬁned a classiﬁcation framework, and compared and evaluated the primary studies. We used the classiﬁcation framework to analyse each primary study and extract relevant information through an iterative process. Finally, we analysed the extracted data to answer the elicited research questions. We conducted both quantitative and qualitative analyses. In the documenting phase, we reported on possible threats to validity and related mitigation strategies. To enable independent veriﬁcation and replication of this study, we provide a complete and public replication package1 containing the data from the search and selection, data extraction, the complete list of primary studies, and summary of the ﬁndings. 3.1  
   
  Research Goal and Questions  
   
  Using the Goal-Question-Metric perspectives [4], we deﬁned the RG of this study, that is (Purpose) Identify, classify, and analyse (Issue) needs, solutions, and 1  
   
  The replication package is available at https://anonymous.4open.science/r/ analysing-interoperability-replication-package-ECSA2023/README.md.  
   
  174  
   
  E. Ferko et al.  
   
  challenges of (Object) interoperability in DTs in manufacturing from (Viewpoint) the point of view of researchers. We broke down the RG in the following research questions (RQs). RQ1 – How is the data exchanged within a DT and among DTs? We determine which technologies are employed for data exchange. This information is needed for assessing interoperability, identifying its limitations, and assessing potential trade-oﬀs. RQ2 – Which interoperability levels do current DT implementations reach? We determine the extent of interoperability attained by existing DT implementations according to LCIM [33], together with the identiﬁcation of challenges that may hinder seamless integration within and across DTs. 3.2  
   
  Search and Selection Process  
   
  Following the steps described in Fig. 2, we identiﬁed the set of primary studies. We started with the search string (“Digital Twin” AND Architect* ) and queried four of the largest and most reputable scientiﬁc databases and indexing systems in software engineering [5,21]: IEEE Xplore Digital Library, ACM Digital Library, SCOPUS, and Web of Science. We opted for a concise search string that could help gathering as many relevant studies as possible that we ﬁltered through the application of selection criteria, mitigating potential threats to construct validity.  
   
  Fig. 2. Overview of the search and selection process  
   
  The automatic search on title, abstract and keywords provided an initial set of 2403 studies, from which we removed impurities and duplicates, and obtained a new set of 2074 studies. Following the recommendations in [1], we applied the following selection criteria to the title, abstract, and keywords, and selected only those studies that satisﬁed all the Inclusion criteria (IC) and Exclusion criteria (EC). The IC are: (i) studies proposing a DT architecture in the manufacturing domain, (ii) studies proposing DT architectures with well-identiﬁed and documented components, (iii) studies providing implementation details on how comprised components of the architecture exchange data, (iv) peer-reviewed studies [34], (v) studies written in English, and (vi) studies available as full-text. The EC are: (i) secondary or tertiary studies, (ii) studies published as tutorial papers, short papers (less than 5 pages), poster papers, editorials and manuals. We obtained a new set of 118 studies, and, by analysing the full text, we  
   
  Analysing Interoperability in Digital Twin Software Architectures  
   
  175  
   
  Table 1. Classiﬁcation framework Facet Category  
   
  Description  
   
  Value  
   
  RQ1  
   
  Technologies  
   
  String  
   
  RQ2  
   
  Levels of interoperability  
   
  Technologies (e.g., protocols, standards, data models) enabling interoperability Levels of conceptual interoperability [33] reached  
   
  No interoperability, technical, syntactic, semantic, pragmatic, dynamic, conceptual  
   
  selected 17 primary studies. To reduce possible threats to construct validity we performed closed recursive snowballing activities [35]. As a result, we obtained the ﬁnal set of 21 primary studies that are shown at the end of the paper. 3.3  
   
  Classification Framework and Data Extraction  
   
  We built a classiﬁcation framework for extracting and classifying information from the primary studies (Table 1). The framework comprises two facets, one for each RQ. For RQ1, we collected the list of technologies like protocols, standards, data models, models, etc. used for enabling interoperability. For RQ2, we collected the levels of conceptual interoperability [33] reached by the solution described in the study. For both RQs, we grouped the collected information according to the network deﬁned in the ISO 23247 standard [19]. We arranged the collected information into groups similar to the sorting phase of the grounded theory methodology [9]. During the data extraction, we reﬁned the classiﬁcation framework with additional information. Hence, we analysed again the primary studies according to the reﬁned framework and extracted data. 3.4  
   
  Data Analysis and Synthesis  
   
  We used the recommendations by Cruzes et al. [10] for analysing and synthesising the extracted data according. We performed vertical analysis for discovering information on each category of the classiﬁcation framework. In particular, we analysed each study individually and categorised its features using the classiﬁcation framework. Later, using the line of argument synthesis [34], we reasoned on the entire set of primary studies for uncovering potential patterns. 3.5  
   
  Threats to Validity  
   
  To ensure the internal validity of our research, we deﬁned a research protocol using well-established guidelines [21]. Moreover, we employed rigorous descriptive statistical methods for data analysis [31,36] to further mitigate internal validity threats related to data analysis and synthesis. We are conﬁdent that the selected primary studies are representative of the population deﬁned by the  
   
  176  
   
  E. Ferko et al.  
   
  research questions, as we followed a well-deﬁned and validated protocol. To mitigate threats to construct validity associated with data extraction, we developed a framework for extracting data from the studies. Each author independently repeated the process of extracting data from the studies. In case of doubts, the authors added annotations to the respective primary studies and discussed them until reaching a consensus. The ensure external validity of our research, we conducted a comprehensive search of four diﬀerent electronic databases in software engineering and complemented the automatic search with a fully recursive snowballing process. Further, we ﬁltered the studies using selection criteria [1]. We mitigated potential threats to conclusion validity by meticulously documenting every step of our research and providing a public replication package to ensure transparency and replicability. In addition, we reduced potential bias during the data extraction process by using well-established models, such as LCIM. All authors participated in data extraction, analysis, and synthesis steps. The conclusions drawn on the interoperability needs and open challenges originated from the primary studies. However, any hypotheses and conjectures were clearly identiﬁed as such.  
   
  4  
   
  Results  
   
  We analysed the primary studies and classiﬁed their features according to the classiﬁcation framework in Table 1. 4.1  
   
  How Is Data Exchanged? (RQ1)  
   
  For each network identiﬁed in the ISO 23247 standard, we investigated the primary technologies utilised for data exchange. We focused on two critical aspects of data exchange: data transmission (see Table 2), and data representation and management (see Table 3). Using the grounded theory methodology [9], we clustered the technologies for data transmission into four groups: protocols, standards, architectural patterns, and open-source platforms. We clustered the technologies for data representation and management in six groups: information models, data formats, graphic APIs, open-source platforms, query language, and standards. This helped us to identify the most commonly utilised technologies and their relationships with one another per each network. The proximity network enables communication between the device communication entity and OMEs, allowing the device communication entity to receive sensor data from OMEs and send commands to them. In the proximity network, data transmission relies on communication protocols like Proﬁnet and Modbus each of which deﬁnes a speciﬁc syntax and format. However, there is no apparent consideration for data representation and management within this network. Modbus is the most commonly cited communication protocol in our analysis, appearing in 28% of the primary studies. It is often used to collect data from OME such as sensors, Programmable Logic Controllers (PLCs), and Internet of  
   
  Analysing Interoperability in Digital Twin Software Architectures  
   
  177  
   
  Table 2. Technologies used for data transmission. Network  
   
  Technology  
   
  Proximity Protocol  
   
  Access  
   
  Service  
   
  User  
   
  Primary study Profinet Modbus  
   
  [P4], [P17] [P8], [P11], [P13], [P16], [P17], [P19] MQTT [P10] LoRaWAN [P21] Protocol OPC UA [P2], [P3], [P4], [P7], [P8], [P12], [P14], [P15], [P16], [P17], [P18], [P20], [P21] MTConnect [P4] MQTT [P4], [P9], [P11], [P16] AMQP1.0 [P6] WebSocket [P10] NC-link [P14] Standard IEC 61499 [P5] IEEE 1451 [P5] Architectural pattern IDS [P2] Open-source platform Eclipse Hono [P6] Protocol OPC UA [P3], [P18] MQTT [P18] Open-source platform Apache StreamPipes [P21] Solace [P10] Protocol OPC UA [P3] HTTP [P4], [P6], [P7], [P8], [P9], [P11], [P13], [P15], [P16], [P18], [P19], [P21] SMTP [P10] WebSocket [P6], [P17], [P20] Architectural pattern IDS [P9], [P15] REST [P4], [P6], [P7], [P8], [P9], [P11], [P13], [P15], [P16], [P18], [P19], [P21]  
   
  Things (IoT) devices. In over 50% (11/21) of the primary studies, OME was integrated with the device communication entity within a single system, and then, a proximity network was not necessary. As an example, a modern computer numerical control machine may support direct numerical control for data input and use MTConnect for reporting results [19]. The access network serves as a means to transmit the collected data from the data collection sub-entity to the digital twin entity, and to transmit commands from the user entity to the device control sub-entity within the device communication entity. The most commonly used protocol for transmitting data in this network is Open Platform Communication Uniﬁed Architecture (OPC UA), which was utilised in more than 60% of the primary studies. Kim et al. motivate the adoption of OPC UA over other protocols due to its ability to facilitate integration across diﬀerent platforms, timely detection of anomalies, and data security through user authorisation and authentication [P3]. Other primary studies aim to support publish/subscribe method for data exchange to enhance scalability utilised Message Queue Telemetry Transport (MQTT) [P4].  
   
  178  
   
  E. Ferko et al. Table 3. Technology used for data representation and management.  
   
  Network Technology Access  
   
  Information model Data format  
   
  Primary study AAS with eCl@ss dictionary [P2] AutomationML [P7], [P11], [P14] JSON-LD [P5]  
   
  Service  
   
  Open-source platform Eclipse Ditto Eclipse rdf4j Data format PMML JSON  
   
  [P6] [P13] [P3] [P10]  
   
  User  
   
  Information model  
   
  [P1],[P7],[P8], [P9],[P15],[P18],[P21] [P1] [P1] [P4] [P4] [P6], [P11], [P18] [P4], [P17] [P4], [P11] [P8] [P13]  
   
  Standard Data format Graphic API Query language  
   
  AAS AutomationML DTDL ISO 10303 (STEP) ISO 23952 (QIF) JSON WebGL OpenGL JSONata SPARQL  
   
  MQTT is a messaging protocol for IoT that deﬁnes a publish/subscribe messaging method [19]. Moreno et al. have advocated for the adoption of the International Data Space (IDS) architectural pattern, which is responsible for ensuring a secure and reliable channel of communication [P2]. In a similar vein, Rocha et al. have utilised standardised approaches such as IEEE 1451 and IEC 61499 to build an interoperable digital twin for monitoring water levels [P5]. The IEEE 1451 family of standards manage sensors and actuators of industrial systems, providing communication protocols for data acquisition and exchange that meet Industry 4.0 requirements. When combined with the IEC 61499 standard for data control and visualisation, it becomes a powerful tool for enhancing interoperability. Kherbache et al. propose the use of open-source platforms like Eclipse Hono for implementing the access network, which can eliminate protocol silos in the diﬀerent OMEs [P6]. Eclipse Hono uses micro-services, called protocol adaptors, that map the supported protocols (e.g., HTTP, MQTT, or CoaP) to its API. This approach enables seamless integration and communication across multiple devices and protocols, facilitating interoperability and scalability in digital twin systems [P6]. When it comes to data representation in the access network, only a few primary studies (4/21) make use of an additional information model or data format on top of the protocol or standards used for data transmission. The most commonly used information model is AutomationML (AML). For instance, Fan et al. use AML to model all the components of a ﬂexible manufacturing system [P14].  
   
  Analysing Interoperability in Digital Twin Software Architectures  
   
  179  
   
  The service network is responsible for connecting sub-entities that oﬀer different services within the digital twin core entity, such as operation and management, application and service sub-entity, and resource access and interchange. However, some current implementations of DT systems are designed as single private systems, in which services can communicate directly within the system without the need for a separate service network. Consequently, only a few papers (6/21) have implemented the service network in their digital twin systems. In such cases, data transmission protocols such as OPC UA and MQTT are used. Other primary studies have utilized open-source platforms to manage data transmission for diﬀerent services within the digital twin, such as Apache StreamPipes [P21] and Solace [P10]. For example, Jacoby et al. utilized Apache StreamPipes to implement and manage multiple DT models. The primary motivation behind using Apache StreamPipes was its support for commonly used protocols, as well as the abundance of readily available implementations that can easily be customized with speciﬁc deep learning models, statistical analysis, or complex event processing [P21]. Open-source platforms are also preferred for data representation and management in the service network. Kherbache et al. utilized Eclipse Ditto to model and manage data in the service network, motivated by its easy access to data [P6]. Similarly, Bamunuarachchi et al. utilized Eclipse rdf4j to support ontology models and RDF data [P13]. The user network connects the DT entity with third-party systems such as Enterprise Resource Planning (ERP) or Manufacturing Execution System (MES), allowing them to use the services provided by the DT [19]. Data transmission in the user network typically relies on protocols such as HTTP, WebSocket, SMTP, and OPC-UA. HTTP is the most commonly used protocol, cited in 57% (12/21) of primary studies. The WebSocket protocol is instead recommended in [P17] to support bidirectional communication for real-time data exchange. Some papers also suggest using the IDS architectural pattern in the user network to enable secure data exchange among diﬀerent organisations [P9,P15]. The primary studies place signiﬁcant emphasis on the technologies used for data representation and management within the user network. Information models, standards, graphical APIs, and query languages are some of the approaches identiﬁed. Asset Administration Shell (AAS) is favoured by around 30% (7/21) of the primary studies. AAS is employed to represent information related to physical assets and share it as a common information model with other stakeholders [P1]. Standards, e.g., ISO 10303 (STEP) and ISO 23952 (QIF) are used to represent CAD/CAM information [P4]. Assad et al. utilised WebGL, a JavaScript API, to render 2D/3D graphics [P17]. 4.2  
   
  Interoperability Level (RQ2)  
   
  To answer this RQ, we investigated the LCIM levels of interoperability achieved for each network identiﬁed in the ISO 23247 standard. We used the LCIM descriptive view and our analysis involved examining the technologies utilised for data exchange and the requirements for achieving a particular level [33]. Table 4 presents a comprehensive summary of the LCIM level accomplished for  
   
  180  
   
  E. Ferko et al. Table 4. Levels of interoperability reached Network  
   
  LCIM level Technology  
   
  Proximity Syntactic  
   
  Access  
   
  Syntactic  
   
  Semantic  
   
  Service  
   
  Semantic  
   
  User  
   
  Syntactic Semantic  
   
  Profinet [P4], [P17], Modbus [P8], [P11], [P13], [P16], [P17], [P19], MQTT [P10], LoRaWAN [P21] MTConnect [P4], MQTT [P9], [P16], AMQP 1.0 [P6], Web-socket [P10], Eclipse Hono [P6] OPC UA [P2], [P3], [P4], [P8], [P12], [P15], [P16], [P17], [P18], [P20], [P21], OPC UA + AutomationML [P7],[P14], MQTT + AutomationML [P11], AAS with dictionaries eCl@ss [P2], IEC 61499 and IEEE 1451 [P4], JSON-LD [P5] OPC UA [P3], [P18], ApacheStreamPipes [P21], Eclipse Ditto [P6], Eclipse rdf4j [P13], PMML [P3], Solace [P10], JSON [P10] HTTP [P6], [P11], [P16], [P19], SMTP [P10], WebSocket [P6], [P17], [P20] AAS [P1], HTTP + AAS [P7], [P8], [P9], [P15], [P18], [P21], AutomationML [P1], DTDL [P1], ISO 10303 [P4], ISO 23952 [P4], HTTP + SPARQL [P13]  
   
  each network, as well as the speciﬁc technology employed to achieve it. It is worth remarking that the LCIM levels are hierarchical, with each level encompassing all the capabilities of the lower levels. Consequently, we have reported in the table the highest level of interoperability was achieved and noted the lower levels for the same network only if diﬀerent technologies were employed. In addition, the same primary study might be encountered in diﬀerent levels of interoperability for the same network if there were diﬀerent options suggested to implement certain networks. The proximity network uses a communication protocol, such as Proﬁnet or Modbus for data transmission. These protocols deﬁne a speciﬁc syntax and format for the exchanged data, thereby fulﬁlling the requirements of syntax interoperability level. However, there is no evidence of using data models to deﬁne the meaning of the exchanged data in the proximity network, which would be the requirement to reach semantic interoperability level. Therefore, the highest interoperability level reached in the proximity network is syntax interoperability. In the access network, 28% (6/21) of the primary studies reached syntactic interoperability using a communication protocol (such as MTConnect, and AMPQ 1.0). However, the majority of the implementations for the access network 66% (14/21) achieved semantic interoperability, where systems exchange data that can be semantically parsed. This was accomplished by employing OPC UA and information models such as AAS and AutomationML or standards such as IEC 61499 and IEEE 1451. In the manufacturing and automation domain, OPC UA is emerging as a universal standard protocol for achieving semantic interoperability among connected systems [P12]. OPC UA oﬀers extendable information models for a range of application domains, enabling semantic interpretation of  
   
  Analysing Interoperability in Digital Twin Software Architectures  
   
  181  
   
  encoded information. It goes beyond being just a transport protocol for industrial applications and provides a comprehensive set of services and functionalities to support secure and reliable communication between diﬀerent components of a distributed system [16]. However, to achieve full semantic interoperability, the information models should be well-deﬁned and consistent. Moreno et al. used AAS in combination with eCl@ss dictionary to standardise information models and achieve semantic interoperability in the access network [P2]. The Reference Architecture Model for Industry 4.0 presents the concept of AAS as the foundation for interoperability, which is deﬁned as a digital representation of an asset [P7]. The use of standardised dictionaries such as eCl@ss can simplify the task of assigning semantic descriptions to the information models [P2]. In the service network, semantic interoperability is achieved through all the reported approaches by the use of open-source platforms and the OPC UA protocol. Kim et al. proposed a DT architecture based on the ISO 23247 RA for anomaly detection, with the main services that communicate through the service network being the data presentation and anomaly detection and prediction services [P3]. Communication is based on OPC UA, which gathers data in information models. The pre-processed OPC UA data is then used to generate convolutional neural network (CNN)-based real-time anomaly detection and prediction DTs. Finally, the model is converted to Predictive Model Markup Language (PMML). All technologies used in the service network support semantic interoperability [P3]. Jakoby et al. use the ApacheStreamPipes platform to manage services, which also supports a semantic description level [P21]. Other open-source platforms that support semantic interoperability used in the service network are Eclipse Ditto [P6] and Eclipse rdf4j [P13]. Eclipse Ditto and Eclipse rdf4j both utilize semantic technologies such as JSON-LD, RDF, and SPARQL to enable devices and systems to achieve semantic interoperability. By using a shared data representation, they facilitate communication and integration regardless of underlying technologies or protocols. Our analysis showed that 43% (7/16) of the studies addressing the user network used a protocol for data transmission such as HTTP [P16,P19], SMTP [P10]. Alternatively, they used WebSocket [P17,P20] and JSON [P6,P11] as a data format. In these cases, syntactic interoperability is reached. Conversely, other primary studies (57% or 9/16) reached semantic interoperability by leveraging various information models, standards, and semantic technologies. The most used information model is AAS, commonly implemented over HTTP APIs. However, we found no evidence of methods or taxonomies employed to enable interoperating systems to anticipate the context of exchanged data, a prerequisite for achieving a higher level of interoperability such as pragmatic interoperability.  
   
  5  
   
  Summary, Discussion and Future Directions  
   
  In this section, we summarise and discuss our ﬁndings on the technologies used for data exchange and the level of interoperability achieved. Table 5 gives an overview of our ﬁndings and serves as a prescriptive tool for each network.  
   
  182  
   
  E. Ferko et al.  
   
  In particular, the table points out the levels of interoperability reached along with the most commonly used technology. The technologies corresponding to each level of interoperability, except for the technical level, are documented in the primary studies. For the technical level, speciﬁcations from the ISO 23247 standard are included since this information was not available in the primary studies. The interested reader can check the detailed ﬁndings in the replication package (See footnote 3). In addition, Table 5 highlights levels of interoperability that may be desirable to achieve along with possible technologies for achieving them (marked with the blue italic text). We have determined these based on motivating examples found in the primary studies as well as our consolidated experience in collaborative research projects on DTs. For the empty cells of Table 5, we did not ﬁnd evidence regarding the technologies employed to attain speciﬁc levels of interoperability or motivation for their necessity. For the cells highlighted in grey, we reason that there is no need for reaching higher interoperability levels. Using these ﬁndings and LCIM requirements as a basis, we discuss the needs and trade-oﬀs involved in attaining higher levels of interoperability. Our analysis has shown that the highest level of interoperability reached in the proximity network is syntactic interoperability. This is in line with the primary purpose of this network, which is to collect data from physical entities and transmit it to the data collection entity, without signiﬁcant processing of the data occurring at this stage. The Modbus protocol is commonly employed in the proximity network to achieve syntactic interoperability, typically over industrial Ethernet or proprietary networks. Although it is possible to achieve semantic interoperability in the proximity network, we believe that it may not be necessary or desirable given the network’s primary purposes. Achieving higher levels of interoperability would require some form of reasoning and language, which could potentially impact the timeliness of communication. In this case, achieving higher levels of interoperability at the expense of performance and eﬃciency may not be worthwhile, even if possible (grey cells in Table 5). Table 5. Various LCIM levels achieved per ISO 23247 network along with the most used technology. Technical Proximity Access Service User  
   
  Syntactic Semantic Pragmatic  
   
  Industrial Ethernet or proprietary network Modbus LAN/ WLAN or cellular network MQTT Wired IP-based protocols OPC UA Internet or private intranet HTTP  
   
  Dynamic  
   
  Conceptual  
   
  OPC UA OPC UA SOA & microservices AAS Linked data and ontologies Linked data and ontologies Linked data and ontologies  
   
  Our analysis has shown that the highest level of interoperability achieved for all other networks (including access, service, and user) is semantic interoperability. While OPC UA is used to achieve semantic interoperability in the access and service networks, AAS is the most common technology used in the user network. Although our analysis did not identify any studies that explicitly discussed the need for achieving higher interoperability levels in the access and service networks, we believe that pragmatic interoperability is needed in the service network. Pragmatic interoperability requires that the systems can exchange  
   
  Analysing Interoperability in Digital Twin Software Architectures  
   
  183  
   
  information describing the services along with their availability. The service network provides means of communication for sharing DT applications and services including simulation, analysis of data captured from OMEs, and reporting production status [19]. Hence, pragmatic interoperability in the service network seems to be not only desirable but needed for ensuring the functional suitability of DTs. Several studies have explored the use of Service-Oriented Architecture (SOA) and micro-service patterns as promising solutions for achieving pragmatic interoperability [13]. At these networks, achieving dynamic or conceptual interoperability may negatively impact other DTs’ qualities namely security and privacy as we discuss in the following paragraph [3]. In the user network, our analysis has revealed the need for higher levels of interoperability than semantic in situations where data is exposed to external systems or other DTs. A use case provided by Kuruppuarachchi et al. in the additive manufacturing domain highlights this need [P1]. In this scenario, a product owner has contracted several manufacturers to produce parts for their product, and each manufacturer has their own DT for their product part. The manufacturers share product-related information with a collaborative DT system. The goal is to optimise the production line, avoid downtime, and reduce costs by modifying individual manufacturing capabilities based on the states of other manufacturers. However, achieving this requires at least dynamic interoperability. One example of achieving dynamic interoperability using linked data and ontologies in the domain of System of System has been proposed by Axelsson [3], which could be applicable in this case. To achieve higher levels of interoperability beyond semantic, it is necessary for DTs exchanging data to have access to each other information regarding properties and functions, and to interpret data in light of this information. While this can be a challenging task for many softwareintensive systems, it is even more daunting for DTs due to several reasons. To begin with, it can be diﬃcult to determine which data from DT sub-systems or other DTs should be shared and for how long it needs to be stored. As a result, this can lead to gathering an excessive amount of data, ultimately resulting in decreased performance [17]. In situations when interoperating DTs are owned by diﬀerent organisations, granting access to other DTs’ internal data may be diﬃcult due to conﬁdentiality, accuracy and trust, and security [3]. This is particularly true when internal data holds signiﬁcant value (e.g., commercial competitive situations) and its manufacturer may be hesitant to share it with external organisations [3]. Moreover, even if the data is shared, it may be diﬃcult for an external organisation to verify its accuracy and reliability [3]. Ensuring safe and secure storage of such data is also essential [3]. Eventually, there may be situations in which data can not be shared due to privacy regulations. Web Ontology Language (OWL) and Resource Description Framework (RDF) can help mitigate some of the above-mentioned challenges associated with high levels of interoperability [18]. Hence, further research is needed to develop and reﬁne existing standards to meet the evolving needs of complex and diverse DTs taking into account OWL and RDF for enhancing interoperability. Low-code  
   
  184  
   
  E. Ferko et al.  
   
  development is another emerging paradigm that enhances interoperability by simplifying data source integration [6].  
   
  6  
   
  Related Work  
   
  Numerous studies have explored ways to improve interoperability both within and between DT systems. Nonetheless, to the best of our knowledge, current research appears to lack a comprehensive analysis and assessment of the interoperability requirements and support for DTs. Li et al. presented a framework for achieving seamless interaction between the physical and virtual spaces of a single DT system [25]. To uniformly model all manufacturing units, they proposed a semantic modelling methodology. Damjanovic-Behrendt and Behrendt have stressed the importance of utilizing open-source technologies to facilitate interoperability in DTs [12]. To this end, they have introduced a collection of the most signiﬁcant open-source tools and technologies for designing and building DTs in the context of smart manufacturing [12]. In addition, the authors have discussed the use of a micro-service architecture for the DT demonstrator to support semantic data interoperability. Park et al. made a signiﬁcant contribution to enhancing the interoperability of DTs with external systems in smart manufacturing [27]. They proposed a new data schema to incorporate existing standards for smart manufacturing, ensuring interoperability. The authors also developed a cloud-based DT that uses the proposed schema, which is interoperable with existing legacy systems. Ariansynah and Pardamean have highlighted the importance of integrating asset prognostic and health monitoring DTs with other software systems that manage business operations such as CMMS and ERP to minimise asset downtime [2]. To address this issue, they proposed using rule-based ontology modelling and reasoning to improve the interoperability of DTs with CMMS and ERP systems. Cavalieri and Gambadoro presented a novel approach for enhancing the semantic interoperability of digital twins (DTs) with external systems [8]. The primary objective of their research was to establish communication between DTs based on Digital Twins Deﬁnition Language (DTDL) and any applications that conform to the Open Platform Communications Uniﬁed Architecture (OPC UA).  
   
  7  
   
  Conclusion and Future Work  
   
  This paper investigates interoperability in digital twin software architectures for manufacturing. We analysed 21 primary studies selected from an initial pool of 2403 peer-reviewed publications. Through an examination of the data extracted from these primary studies, we identiﬁed the speciﬁc technologies employed for data exchange in DTs, as well as the degree of interoperability that was achieved during such exchanges. Our analysis has revealed that current DT architectures are successful in achieving semantic interoperability. However pragmatic and dynamic interoperability levels are desirable, particularly in federated DTs. Achieving higher levels of interoperability in federated DTs presents challenges  
   
  Analysing Interoperability in Digital Twin Software Architectures  
   
  185  
   
  related to accuracy, trust, security, and privacy. To overcome these challenges, standards and standardised semantic mapping frameworks hold promise. Concerning future works, one area of interest involves exploring the potential of linked data and ontologies for achieving pragmatic, dynamic and conceptual interoperability. Also, we aim to focus on deﬁning a standards-based architectural framework for digital twins in manufacturing that facilitates data interoperability. This framework will consist of several views, including the functional view, technical adaptation and implementation view, and interoperability view.  
   
  Primary Studies P1. P. M. Kuruppuarachchi et al. “Trusted and secure composite digital twin architecture for collaborative ecosystems,” IET Collab. Intell. Manufacturing, v 5, n. 1, 2023. P2. T. Moreno et al. “Scalable digital twins for industry 4.0 digital services: a dataspaces approach,” Production & Manufacturing Research, vol. 11, no. 1, p. 2173680, 2023. P3. D. B. Kim et al. “A digital twin implementation architecture for wire+ arc additive manufacturing based on iso 23247,” Manufacturing Letters, vol. 34, pp. 1–5, 2022. P4. A. Farhadi et al. “The development of a digital twin framework for an industrial robotic drilling process,” Sensors, v.22, n.9, 2022. P5. H. da Rocha et al. “An interoperable digital twin with the ieee 1451 standards,” Sensors, vol. 22, no. 19, p. 7590, 2022. P6. M. Kherbache et al. “Digital twin network for the iiot using eclipse ditto and hono,” IFAC-PapersOnLine, vol. 55, no. 8, pp. 37–42, 2022. P7. K. Ding et al. “Aml-based web-twin visualization integration framework for dt-enabled and iiot-driven manufacturing system under i4. 0 workshop,” Journal of Manufacturing Systems, vol. 64, pp. 479–496, 2022. P8. F. Schnicke et al. “Architecture blueprints to enable scalable vertical integration of assets with digital twins,” in IEEE 27th Int. Conference ETFA. IEEE, 2022, pp. 1–8. P9. F. Yallı¸c et al. “Asset administration shell generation and usage for digital twins: A case study for non-destructive testing by x-ray.” P10. V. Leiras et al. “Iso23247 digital twin approach for industrial grade radio frequency testing station,” in IEEE 27th Int. Conference ETFA. IEEE, 2022, pp. 1–8. P11. G. N. Schroeder et al. “A methodology for digital twin modeling and deployment for industry 4.0,” Proceedings of the IEEE, vol. 109, no. 4, pp. 556–567, 2020. P12. A. Redelinghuys et al. “A six-layer architecture for the digital twin: a manufacturing case study implementation,” Journal of Intelligent Manufacturing, vol. 31, pp. 1383–1402, 2020. P13. D. Bamunuarachchi et al. “Cyber twins supporting industry 4.0 application development,” in Proceedings of the 18th International Conference on Advances in Mobile Computing & Multimedia, 2020, pp. 64–73.  
   
  186  
   
  E. Ferko et al.  
   
  P14. Y. Fan et al. “A digital-twin visualized architecture for ﬂexible manufacturing system,” Journal of Manufacturing Systems, vol. 60, pp. 176–201, 2021. P15. M. Jacoby et al., “An approach for industrie 4.0-compliant and datasovereign digital twins,” at-Automatisierungstechnik, vol. 69, no. 12, pp. 1051–1061, 2021. P16. F. Pires et al. “Decision support based on digital twin simulation: a case study,” in Service Oriented, Holonic and Multi-Agent Manufacturing Systems for Industry of the Future: Proceedings of SOHOMA 2020. Springer, 2021, pp. 99–110. P17. F. Assad et al. “Utilising web-based digital twin to promote assembly line sustainability,” in 2021 4th IEEE International Conference on Industrial Cyber-Physical Systems (ICPS). IEEE, 2021, pp. 381–386. P18. M. Redeker et al. “A digital twin platform for industrie 4.0,” in Data Spaces: Design, Deployment and Future Directions. Springer International Publishing Cham, 2022, pp. 173–200. P19. E. Russo et al.“Lidite: a full-ﬂedged and featherweight digital twin framework,” IEEE Trans. on Dependable and Secure Computing, 2023. ˇ P20. K. Zidek et al. “Digital twin of experimental smart manufacturing assembly system for industry 4.0 concept,” Sustainability, v.12, n.9, 2020. P21. M. Jacoby et al. “An approach for realizing hybrid digital twins using asset administration shells and apache streampipes,” Information, vol. 12, no. 6, p. 217, 2021. Acknowledgements. The work in this paper has been supported by the Swedish Knowledge Foundation (KKS) through the ACICS and Modev projects, by the Excellence in Production Research (XPRES) Framework, by the EU - NextGenerationEU under the Italian MUR National Innovation Ecosystem grants ECS00000041 - VITALITY, and PE0000020 - CHANGES. The authors also acknowledge the support of the MUR (Italy) Department of Excellence 2023 - 2027 for GSSI.  
   
  References 1. Ali, N.B., Petersen, K.: Evaluating strategies for study selection in systematic literature studies. In: Proceedings of ESEM (2014) 2. Ariansyah, D., Pardamean, B.: Enhancing interoperability of digital twin in the maintenance phase of lifecycle. In: Proceedings of ICITISEE. IEEE (2022) 3. Axelsson, J.: Achieving system-of-systems interoperability levels using linked data and ontologies. In: INCOSE International Symposium, vol. 30, pp. 651–665. Wiley Online Library (2020) 4. Basili, V.R., Caldiera, G., Rombach, H.D.: The goal question metric approach. In: Encyclopedia of Software Engineering (1994) 5. Brereton, P., Kitchenham, B.A., Budgen, D., Turner, M., Khalil, M.: Lessons from applying the systematic literature review process within the software engineering domain. J. Syst. Softw. 80, 571–583 (2007) 6. Bucaioni, A., Cicchetti, A., Ciccozzi, F.: Modelling in low-code development: a multi-vocal systematic review. Softw. Syst. Model. 21(5), 1959–1981 (2022)  
   
  Analysing Interoperability in Digital Twin Software Architectures  
   
  187  
   
  7. Carney, D., Oberndorf, P.: Integration and interoperability models for systems of systems. Technical report, Carneige-Mellon Univ Pittsburgh PA Software engineering Inst (2004) 8. Cavalieri, S., Gambadoro, S.: Proposal of mapping digital twins deﬁnition language to open platform communications uniﬁed architecture. Sensors 23(4), 2349 (2023) 9. Charmaz, K., Belgrave, L.L.: Grounded theory. The Blackwell encyclopedia of sociology (2007) 10. Cruzes, D.S., Dyba, T.: Recommended steps for thematic synthesis in software engineering. In: Proceedings of ESEM (2011) 11. Dalibor, M., et al.: A cross-domain systematic mapping study on software engineering for digital twins. J. Syst. Softw. 139, 111361 (2022) 12. Damjanovic-Behrendt, V., Behrendt, W.: An open source approach to the design and implementation of digital twins for smart manufacturing. Int. J. Comput. Integr. Manuf. 32(4–5), 366–384 (2019) 13. Ferko, E., Bucaioni, A., Behnam, M.: Architecting digital twins. IEEE Access 10, 50335–50350 (2022) 14. Ferko, E., Bucaioni, A., Behnam, M.: Supporting technical adaptation and implementation of digital twins in manufacturing. In: International Conference on Information Technology-New Generations, pp. 181–189. Springer, Heidelberg (2023). https://doi.org/10.1007/978-3-031-28332-1 21 15. Ferko, E., Bucaioni, A., Pelliccione, P., Behnam, M.: Standardisation in digital twin architectures in manufacturing. In: 2023 IEEE 20th International Conference on Software Architecture (ICSA), pp. 70–81 (2023) 16. Graube, M., Hensel, S., Iatrou, C., Urbas, L.: Information models in opc ua and their advantages and disadvantages. In: 2017 22nd IEEE International Conference on Emerging Technologies and Factory Automation (ETFA), pp. 1–8. IEEE (2017) 17. Henningsson, K., Wohlin, C.: Understanding the relations between software quality attributes-a survey approach. In: Proceedings 12th International Conference for Software Quality (2002) ˇ 18. Herzog, R., Jacoby, M., Podnar Zarko, I.: Semantic interoperability in iot-based automation infrastructures: how reference architectures address semantic interoperability. at-Automatisierungstechnik 64(9), 742–749 (2016) 19. International Organization for Standardization: ISO 23247–1:2021. https://www. iso.org/standard/75066.html 20. ISO: ISO/IEC 25010. https://iso25000.com/index.php/en/iso-25000-standards/ iso-25010 21. Kitchenham, B., Brereton, P.: A systematic review of systematic review process research in software engineering. Inf. Softw. Technol. 55, 2049–2075 (2013) 22. Kuruppuarachchi, P., Rea, S., McGibney, A.: An architecture for composite digital twin enabling collaborative digital ecosystems. In: Proceedings of CSCWD, pp. 980–985. IEEE (2022) 23. Lattanzi, L., Raﬀaeli, R., Peruzzini, M., Pellicciari, M.: Digital twin for smart manufacturing: a review of concepts towards a practical industrial implementation. Int. J. Comput. Integr. Manuf. 34(6), 567–597 (2021) 24. Leal, G.D.S.S., Gu´edria, W., Panetto, H.: Interoperability assessment: a systematic literature review. Comput. Ind. 106, 111–132 (2019) 25. Li, J., Zhang, Y., Qian, C.: The enhanced resource modeling and real-time transmission technologies for digital twin based on qos considerations. Rob. Comput.Integr. Manuf. 75, 102284 (2022)  
   
  188  
   
  E. Ferko et al.  
   
  26. Lidell, A., Ericson, S., Ng, A.H.: The current and future challenges for virtual commissioning and digital twins of production lines. In: Proceedings of SPS2022 (2022) 27. Park, Y., Woo, J., Choi, S.: A cloud-based digital twin manufacturing system based on an interoperable data schema for smart manufacturing. Int. J. Comput. Integr. Manuf. 33(12), 1259–1276 (2020) 28. Petersen, K., Feldt, R., Mujtaba, S., Mattsson, M.: Systematic mapping studies in software engineering. In: Proceedingss of EASE (2008) 29. Qi, Q., Tao, F.: Digital twin and big data towards smart manufacturing and industry 4.0: 360 degree comparison. IEEE Access 6, 3585–3593 (2018) 30. Shull, F., Singer, J., Sjøberg, D.I.: Guide to Advanced Empirical Software Engineering. Springer, Heidelberg (2007). https://doi.org/10.1007/978-1-84800-044-5 31. Stol, K.J., Ralph, P., Fitzgerald, B.: Grounded theory in software engineering research: a critical review and guidelines. In: Proceedings of the 38th International conference on software engineering (2016) 32. Tolk, A.: The elusiveness of simulation interoperability - what is diﬀerent from other interoperability domains? In: 2018 Winter Simulation Conference (WSC), pp. 679–690 (2018) 33. Wang, W., Tolk, A., Wang, W.: The levels of conceptual interoperability model: applying systems engineering principles to m&s (2009). arXiv preprint arXiv:0908.0191 34. Wohlin, C., Runeson, P., H¨ ost, M., Ohlsson, M., Regnell, B., Wessl´en, A.: Experimentation in Software Engineering. Springer, Heidelberg (2012). https://doi.org/ 10.1007/978-3-642-29044-2 35. Wohlin, C.: Guidelines for snowballing in systematic literature studies and a replication in software engineering. In: Proceedings of EASE (2014) 36. Wohlin, C., H¨ ost, M., Henningsson, K.: Empirical research methods in software engineering. In: Conradi, R., Wang, A.I. (eds.) Empirical Methods and Studies in Software Engineering. LNCS, vol. 2765, pp. 7–23. Springer, Heidelberg (2003). https://doi.org/10.1007/978-3-540-45143-3 2  
   
  Architecting Artificial Intelligence for Autonomous Cars: The OpenPilot Framework Luciano Baresi1 and Damian A. Tamburri1,2(B) 1  
   
  2  
   
  Politecnico di Milano, Milan, Italy [email protected]  Eindhoven University of Technology, JADS, Eindhoven, The Netherlands [email protected]   
   
  Abstract. Openpilot is a vast open-source semi-automated driving system developed by comma.ai, with 200+ contributors and 750K lines of code according to the OpenHub open-source community-tracking portal. On the one hand, the documentation available gives insights on what Openpilot is capable of doing, how to install it and how people can contribute to it, while the development team posts periodically update on the company’s blog on the state of the project and implementation of new features. On the other hand, this material does little in helping newcomers to embrace the technology with near-zero knowledge over its intended programming model. What is more, not having access to closedsource autonomous-driving framworks does not warrant an appropriate architectural analysis of the framework, the decisions to be made, and the concerns typically emerging in such a decision-making process. This study addresses this gap by exploiting mixed-methods research, featuring (a) an ethnographical study of the community’s operations and (b) a reverse engineering of the OpenPilot codebase both from a structure and operations perspective. This paper is intended as an early-stage adopter study for those software designers, operators, policy-makers and other practitioners aiming at embracing the aforementioned framework and programming model for their own professional endeavours. Keywords: Automotive Software Architecting Vehicles · Smart Cars · autonomous-driving  
   
  1  
   
  · Smart Autonomous  
   
  Introduction  
   
  Recent reports1 forecast that roughly 33 million autonomous vehicles (AVs for short) are going to hit the road by 2040. At the same time, 55% of small businesses—in the US alone—remark that they are going to have a fully autonomous ﬂeet in the next two decades. This implies that while people are expected to get used to driverless cars, so is the software industry that controls 1  
   
  https://policyadvice.net/insurance/insights/self-driving-car-statistics/.  
   
  c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 189–204, 2023. https://doi.org/10.1007/978-3-031-42592-9_13  
   
  190  
   
  L. Baresi and D. A. Tamburri  
   
  everything else around such cars. For example, The German brand Audi plans on spending $16 billion on self-driving cars by 2023, not only to make autonomous driving a better, safer, and more sustainable reality, but also to adapt its software and industrial systems to cope with the new model of vehicular engineering implied. At the same time, the rapid development of the Internet economy and Artiﬁcial Intelligence (AI) has promoted the progress of all onboard systems inside self-driving cars, into a software realm fusing both AI and smart software engineering often called autonomous-driving [8]. Unlike what many would think, self-driving a car is not a hardware problem, instead is almost completely related to software, speciﬁcally, AI software engineering [5]. For example, modern cars are built in such a way that all the relevant information about the status of the car is exchanged over standardized channels; when accessed, these ’levers’ allow controlling the car in 100% of all its functions, electric, mechanical or otherwise [1]. All cars support (to some extent) automated driving, e.g., they use a set of sensors that aid the operation of the vehicle via the interoperation of cameras and sensors; this allows the car driver, its internal systems, or its autonomousdriving AI to be aware of its surroundings and make instrumented decisions. These data are typically elaborated through AI and machine-learning architectures. And this is exactly where the OpenPilot framework steps in. The research problem we address around OpenPilot is that of providing a solid foundational introduction to the framework, its architecture and intended operations to allow practitioners and researchers to address the framework more easily and with an expedient approach as driven by our results and insight. Speciﬁcally, this article oﬀers such a study over the OpenPilot technical space and an analysis of its operational model, namely, how applications developed through it are intended to work and what are the limitations that come with the solution, providing a complete overview of all of its components. In addition, we perform a quality assessment of the framework in an attempt to establish its technical maturity and practical feasibility, with a focus on the community structure and operations. We conclude that the OpenPilot framework oﬀers a mature and stable basis to approach simple to complex automotive programming tasks, including the design and implementation of complex-scale AI software including multiple machine-learning models as well as sensorial equipment. At the same time, we observe a relative lack of autonomous-driving guidelines, especially in the realm of AI software design and interoperation, which is bound to incite further research and practical work in this direction. The rest of this paper is structured as follows. Section 2 oﬀers a motivational and methodological perspective over the work. Section 3 provides an overview of the OpenPilot framework, its architecture and general characteristics. Section 4 elaborates further into the aforementioned architecture and oﬀers an in-depth view over its essential components. Section 6 discusses our results, and Sect. 7 concludes the manuscript.  
   
  2  
   
  Research Materials and Methods  
   
  As previously introduced, what presented in this paper was obtained through a mixed-methods approach, tailored from [12], that features ethnomethodologi-  
   
  Architecting Artiﬁcial Intelligence for Autonomous Cars  
   
  191  
   
  cal research following the same process introduced by Zhou et al. [13]. Figure 1 reports an overview of the overall research method. A 9-month ethnography study of (a) the community environment, (b) the community workﬂows and (c) the OpenPilot codebase evolution was enacted to follow any code-relevant activities such as: (a) git commit actions; (b) pull request actions; (c) issueclosing actions; (d) releases; (e) forks. Such actions were logged into a live-doc in the form of a csv ﬁle for later quantitative and qualitative analysis. Subsequently, the aforementioned actions were analysed through a combination of content analysis [6] and card-sorting [14] to determine: (a) methodological steps intended in the community workﬂows; (b) the intended programming model behind the OpenPilot use and operations (see Sect. 1). Finally, from the perspective of the software reverse engineering is “the practice of analyzing a software system, either in whole or in part, to extract design and implementation information” [4]. To provide for the expected results in this study we combined the use of the Architexa architectural reconstruction suite2 and the VisualParadigm  
   
  Fig. 1. An overview of the research methods adopted in this study. 2  
   
  https://www.architexa.com/.  
   
  192  
   
  L. Baresi and D. A. Tamburri  
   
  deepParse automodeller3 . For what concerns the data involved in our study, its synthesis and reliability assessment, all available data was loaded into tables formatted to be analysed with the R data analytics toolkit in parallel by the two authors of the paper; the purpose of analysis was to produce the statistics, plots and representations currently showcased in the rest of this paper. At this point, for all analyses which involved inter-coder reliability such as card-sorting, we assessed observer reliability evaluating the agreement across analyses over the data tables we produced. Subsequently, we computed the Krippendorﬀ’s α coeﬃcient for observation agreement [6] - the α score essentially measures a conﬁdence interval score stemming from the agreement of values across two distinctly-reported observations about the same event or phenomenon. In our case the value was applied to measure the agreement between coding and cardsorting results of our analysis. The value was calculated initially to be 0.86, hence α > .800, which is a standard reference value for highly-conﬁdent observations.  
   
  3  
   
  Framework Architecture  
   
  Comma.ai is an AI startup founded by George Hotz (@geohot) in September 2015. The mission of the company is to “solve self-driving cars while delivering shippable intermediaries”. To achieve this mission, in 2016 Comma.ai launched Openpilot, an open-source, semi-automated driving system. It is a comprehensive system of driver assistance features supporting a wide range of car models. Today, Comma.ai sold more than 7.000 devices and has more than 3500 active users. The Society of Automotive Engineers (SAE) deﬁnes 6 levels of driving automation ranging from 0 (fully manual) to 5 (fully autonomous). These levels have been adopted by the U.S. Department of Transportation. OpenPilot allows reaching a level 2 driving automation level, meaning that the vehicle on which the device is installed can control both steering and accelerating/decelerating. At a level 2 automation, the human still monitors all the (autonomous-)driving tasks and can take control at any time. It is substantially diﬀerent from other automated driving systems since it can be installed by anyone that buys the Comma Two or Comma Three development kit available in their online shop and ﬂashes the Openpilot software available on the public GitHub repository. Openpilot oﬀers many functionalities based on machine learning and computer vision, such as Automated lane-centering, Adaptive cruise control and more. The Openpilot repository is available online4 and it counts more than 5.000 forks and is starred by more than 25.000 users. Developers that want to contribute to the project push their changes on the master branch, which is stripped and miniﬁed by CI (GitLab Continuous Integration) and pushed to master-ci automatically if the tests pass. When the version on the master branch is ready to be published on the release branch, master-ci is pushed to devel-staging, opening a pull request into devel. This pull request is the spot for comments on the new release, 3 4  
   
  https://circle.visual-paradigm.com/docs/code-engineering/instant-reverse/how-togenerate-uml-from-cpp/. https://github.com/commaai/Openpilot.git.  
   
  Architecting Artiﬁcial Intelligence for Autonomous Cars  
   
  193  
   
  Fig. 2. Flowchart diagram of the development process of OpenPilot, supported by GitHub CI actions as of Feb. 2021.  
   
  and hotﬁxes at this point is cherry-picked from master into devel-staging. Devel is built by CI and pushes the built versions to release-staging and dashcamstaging signed with the oﬃcial comma release key. After the -staging branches are tested by the community for a 1-3 days, then changes are pushed to release and dashcam. For the sake of completeness, we report that the release branch is structured as follows: 1. cereal: the messaging spec and libs used for all logs; 2. common: library like functionality and utility functions; 3. installer/updater: manages updates of NEOS, that is, the operating system for the comma.two and EON Gold Dashcam Development Kits; 4. opendbc: ﬁles showing how to interpret data from cars; 5. panda: code used to communicate on CAN; 6. phonelibs: external libraries;  
   
  194  
   
  L. Baresi and D. A. Tamburri  
   
  7. pyextra: extra python packages not shipped in the standard NEOS distribution; 8. selfdrive: code needed to bootstrap and drive the car or change the operational behavior of any of its components; – assets: fonts, images, and sounds for User Interfacing (UI) as well as extension of the actual UI; – athena: allows communication with the app; – board: daemon to talk to the motherboard of the autonomous-driving vehicle; – camerad: driver to capture images from the camera sensors; – car: car speciﬁc code to read states and control actuators; – common: shared C/C++ code for the daemons; – controls: planning and controls; – debug: tools to help you debug and do car ports; – location: precise localization and vehicle parameter estimation; – logcatd: Android logcat as a service; – loggerd: logger and uploader of car data; – modeld: driving and monitoring model runners; – proclogd: Logs information from processes; – sensord: IMU interface code; – test: unit tests, system tests, and a car simulator; – ui: all assets related to the UI; Conversely, for the sake of simplicity, we focus on the biggest and most important portion of this technical space, namely, the selfdrive sub-structure.  
   
  4  
   
  OpenPilot and SelfDrive  
   
  Openpilot needs many components that allow the software to interface with the car and exchange messages with it. These components, after the open-sourcing of the software, are organized in diﬀerent repositories, allowing to better manage them and have a clear distinction of what role each component plays. This section oﬀers an excursus of the package structure that is available in the main Openpilot component—namely the selfDrive technical space—and focuses on summaryzing the functionalities that are provided. Subsequently, the section closes by illustrating the critical ModelD artiﬁcial intelligence module, that is, the key module with which all artiﬁcial intelligence components stemming from the OpenPilot framework are to be deﬁned. 4.1  
   
  Package Structure  
   
  To describe the architecture of Openpilot the rest of the exposition takes advantage of the 4+1 architectural view model proposed by Kruchten [7], which provides four software architecture essential viewpoints [11] as a systematic way to describe a system architecture according to diﬀerent views, namely, logical, process, development, physical, and use-case views. In the following, we oﬀer details  
   
  Architecting Artiﬁcial Intelligence for Autonomous Cars  
   
  195  
   
  on the ﬁrst four, given that the scope and focus of this study is that of a study over the OpenPilot framework, with a focus on the selfdrive technical space, intended as the packages contained in the root of the framework architecture, i.e., the selfDrive directory. The selfdrive directory is the largest repository of Openpilot and contains the deﬁnition of the Python and C++ processes executed on the Comma device. Table 1 shows an overview of the programming languages (Col. 1) present in the key technical space of selfdrive, including #ﬁles, #blank lines, comments and actual source Lines of Code (SLOC), deﬁned and counted by means of the IntelliJ idea IDE5 . At the same time, the reader should note that the selfdrive technical space is less than 20% of the total amount of lines of code for the entire framework. On the one hand our study focuses on selfdrive, but on the other hand, the rest of the software code deserves future work and experimentation, perhaps in the scope of a feasibility study or a code quality analysis. Reflection. The structure oﬀers an overview which is well-modularised and is expected to reﬂect the necessities for contextualisation, customisation, and extensibility clearly ascribed to the target context.  
   
  Table 1. Lines of code in the selfdrive critical technical space, arranged by programming language. Language  
   
  Files Blanks Comments SLOC  
   
  Python  
   
  164  
   
  3.935  
   
  1.630  
   
  19.587  
   
  C++  
   
  103  
   
  3.458  
   
  1.444  
   
  16.736  
   
  C  
   
  11  
   
  958  
   
  212  
   
  10.275  
   
  C/C++ Header 121  
   
  2.244  
   
  3.056  
   
  9.736  
   
  OpenCL  
   
  7  
   
  88  
   
  60  
   
  556  
   
  SVG  
   
  15  
   
  0  
   
  0  
   
  242  
   
  JSON  
   
  2  
   
  0  
   
  0  
   
  104  
   
  HTML  
   
  2  
   
  11  
   
  0  
   
  89  
   
  Bourne Shell  
   
  8  
   
  17  
   
  3  
   
  83  
   
  QML  
   
  1  
   
  5  
   
  0  
   
  42  
   
  Cython  
   
  1  
   
  4  
   
  2  
   
  22  
   
  Tot.  
   
  435  
   
  10.720 6.407  
   
  57.472  
   
  Logical View. Quoting from Kruchten’s original deﬁnitions, “The logical view focuses on representing the functionality that the system provides to its intended end-users”. As for this view of the Openpilot architecture, the only tasks that 5  
   
  https://plugins.jetbrains.com/plugin/4509-statistic.  
   
  196  
   
  L. Baresi and D. A. Tamburri  
   
  middleware explicitly aims at supporting are to (a) drive a car eﬀectively and (b) oﬀering AI-driven capabilities to instrument any component in the driving process. From version 0.8.7 onwards, the system also supports the use of a navigator. Reflection. As previously mentioned, the extensibility of the framework is high, as conﬁrmed by the rapid release of versions in which further extensions are oﬀered. Process View. Looking at the process view, selfdrive is characterized by the parallel execution of diﬀerent processes, which take care of the diﬀerent aspects that need to be controlled during the software execution. OpenPilot processes include both Python and C++ processes. Generally, the C++ processes are those which require a high level of performance and that can be executed natively on the Comma device. These include the processes taking care of the prediction and elaboration of the acquired frames of the camera, the processes directly controlling or showing content on the device, and logging functionalities. Reflection. Again the process view itself reﬂects a business logic which is rigged for extensibility and customisability, as reﬂected by the native compatibility of the Comm device with multiple externals.  
   
  Development View. Again, quoting the original deﬁnitions of the framework, “the development view illustrates a software system from a programmer’s perspective and is concerned primarily with software management”. Looking at the development view, Openpilot is made of diﬀerent packages which allow communication with the car and run the predictive models necessary for its AI-driven operations. Figure 3 oﬀers an overview of the packages and their interdependencies, using a coloring schema—decreasing in intensity from red (for the Debug package) to dark magenta (for Modeld, UI, Assets, etc.)—to weigh the criticality of the packages measured by the unwighted quantity of SLOC in each package6 . Each package contains the source necessary to enact diﬀerent processes of Openpilot. From a runtime perspective, the processes and operations communicate by using the Cereal messaging speciﬁcations, but they also provide common functionalities and Application Programmers’ Interfaces (APIs) that can be used by other processes to retrieve various details, such as the hardware version, the car model on which the device is mounted, and so on.  
   
  6  
   
  a larger and browsable version of this same ﬁgure is available online: https://tinyurl. com/ECSA-openpilot.  
   
  Architecting Artiﬁcial Intelligence for Autonomous Cars  
   
  197  
   
  Fig. 3. Interdependencies of the selfdrive packages within their respective namespace.  
   
  Reflection. From a development perspective, it is in fact the granularity of the components which aids AI architectures’ developers in their own contextualisation work. In fact such granularity oﬀers an approachable technical space, which blends well with the necessities of practice.  
   
  Physical View. From the original deﬁnitions: “The physical view (aka the deployment view) depicts the system from a system engineer’s point of view. It is concerned with the topology of software components on the physical layer as well as the physical connections between these components”. The physical components that are involved are essentially three: the Comma device (Comma Two or Comma Three), a Comma Pedal to communicate with the car, and the supported car itself. The car provides the raw data that is given to the AI model to generate an output that is then transformed into actions by the car actuators. Raw data come from the car camera, radar, and sensors. Data are then transmitted over the CAN bus, and the Panda device interfaces with the car and intercepts the data over the CAN bus. These data are then transmitted, over USB, to the Comma device. The Openpilot software running on the device, comes with diﬀerent process daemons that manage the acquired data, give them to the AI model, and generate a message that is sent to the car over the same CAN bus. Speciﬁcally, the camera daemon, (camerad ), sends the frames acquired by the car and device’s camera to the model daemon (modeld ), which generates the  
   
  198  
   
  L. Baresi and D. A. Tamburri  
   
  predictions based on AI algorithms, and the sensor daemon (sensord ) elaborates the output of the car’s sensors. All of these data are input into the control daemon (controlsd ), which generates the messages that are sent to the car through Panda and over the CAN bus. A high-level representation of the physical view is recapped in Fig. 4, represented as a standard UML deployment diagram.  
   
  Fig. 4. The standard deployment overview of OpenPilot-oriented software.  
   
  Reflection. From a phisical perspective, the Openpilot technical space oﬀers an easily understandable deployment, which addresses well the necessities and granularities typical of the IoT technology entailed by automotive computing.  
   
  4.2  
   
  The ModelD Artificial Intelligence Module  
   
  The main model takes in a picture from the road camera and answers the question “Where should I drive the car?” It also takes in a desire input, which can command the model to act, such as turning or changing lanes. The full ModelD data-ﬂow representation is available on the full technical report for this work7 . The input of the model is retrieved by a thread that takes the data from the socket liveCalibration containing the calibrated frames elaborated by the process calibrationd. The representation of the camera frames is built by considering both the intrinsic parameters, that are the camera parameters that are internal and ﬁxed to a particular camera/digitization setup, and the extrinsic parameters, that are the camera parameters that are external to the camera and may change concerning the world frame. If the intrinsic parameters deﬁne the location and orientation of the camera concerning the world frame, the intrinsic Parameters allow a mapping between camera coordinates and pixel coordinates in the image. The processed calibrated frames are then used by the model to make the predictions. The actual frames are sent using VisionIPC and can be corrected by using the calibrated frame information computed by the thread managing the 7  
   
  https://www.politesi.polimi.it/bitstream/10589/181889/2/2021 12 Fontana 02. pdf.  
   
  Architecting Artiﬁcial Intelligence for Autonomous Cars  
   
  199  
   
  calibration. The VisionIPC client connects to the socket camerad and the model is initialized. The model which runs the neural network to make the predictions is called Supercombo and as the default setting it is uses the Snapdragon Neural Processing Engine (SNPE), which is a Qualcomm Snapdragon software accelerated runtime for the execution of deep neural networks.  
   
  Fig. 5. The ModelD data-ﬂow representation.  
   
  To make the model faster and more eﬃcient, the framework also introduced Thneed, an SNPE accelerator. The Thneed model runs on the local device, caching a single model run and replaying it at a higher speed. Apart from the caching functionalities, the Thneed module does not change any aspect of the default SNMP. The speciﬁcs of the model and the deﬁnition of its inputs and outputs are deﬁned in the oﬃcial Openpilot wiki8 . The model is trained using the comma2k19 dataset, a dataset of over 33 h of drive. The dataset contains 10.000 camera acquisitions, which were manually labeled to the diﬀerent elements of the frames. The features vectors are then fed to the Recurrent Neural Networks that generate the driving policy. Subsequently, for feature extraction from frames, Comma uses a lot of skip connections and converts a 12 × 128 × 256 (two YUV format consecutive frames with 3 extra alpha channels). The model learns to encode all the relevant information required for planning into a compressed form. This vision encoding is later forked into several branches which are processed independently to output lanes, paths, etc. When the model receives the YUV frames from the VisionIPC server, they are ﬁrst prepared and transformed using the transformation matrix obtained after processing the calibrated frame. This preparation step initializes the ModelFrame, which is a virtual camera frame with even width and height frame that can be used by the model. Subsequently, after the ModelFrame relative to the acquired YUV frames are 8  
   
  https://opwiki.readthedocs.io/en/latest/user manual/gcs install op.html.  
   
  200  
   
  L. Baresi and D. A. Tamburri  
   
  ready, the model execution starts9 . The model, through the directory ioctl() (input/output control), can communicate with the Qualcomm Kernel Graphic Support Layer (KGSL). It also leverages the OpenCL functionalities supported by the Qualcomm platform to increase the performance and eﬃciency of the computation of the predictions. When the execution of the model is triggered, the command clEnqueueNDRangeKernel() enqueues a command to execute the OpenCL kernel on the device. The cached commands are elaborated by the KGSL and the result is retrieved from the OpenCL read buﬀer. The instruction on what type of predictions the model has to make are contained in the desire, which is computed by the lateral planner and indicates on what direction the car should proceed. Finally, The model also runs posenet10 to generate the visual odometry parameters, estimated from the model output and published on socket cameraOdometry. With posenet we generally refer to computer vision techniques that estimate the position of an object, in the speciﬁc case of the rotation and translations of the frame estimated by the model.  
   
  5  
   
  OpenPilot: A Technical and Socio-Organizational Quality Analysis  
   
  Assessing the quality of the contributions in an open-source software (OSS) is not an easy task: unlike industrial software, OSS is often developed under a non-traditional structure and, as a result, is seen as the product of teams composed almost exclusively of developers. This picture is of course incomplete at best, as is well known by those involved with OSS. While young projects can thrive under the guidance of lone developers or small unsupported teams, more mature projects usually beneﬁt from contributions to the project that transcend code. These non-code contributions may include, for example: moderating communication channels associated with the project or its issue tracker(s), ﬁelding questions, outreach, infrastructure, governance, funding acquisition, documentation, or even mere attention, these contributions are all crucial determinants of a project’s continued success [10]. To have a complete picture of the community contributions made to openpilot over time, in the following analysis is considered both code contributions and non-code contributions. To simplify the process of data mining, the analysis is supported by an ad-hoc tool developed for this purpose, that from now on is referenced as contributors-proﬁler. The tool collect the data leveraging the GitHub APIs and for each contributor it compute the key performance indicators (KPIs). For the code contributions, we consider the number of commits, and the ratio between the successful GitHub actions executed after the commits and the total amount of actions triggered by the contributor’s commits, as a proxy of the errors introduced with each commit. The non-code data include the amount of issues made by each contributor and 9 10  
   
  Note that if Thneed is used, a full execution is required only the ﬁrst time since then the outputs are recorded and can be used to make faster predictions. https://iq.opengenus.org/posenet-model/.  
   
  Architecting Artiﬁcial Intelligence for Autonomous Cars  
   
  201  
   
  their activity on the Discord server, since it is the main place where the community interact. For the code contribution, the granularity is of a week, both to speed up the execution and because a ﬁner granularity is not meaningful for this analysis’ purpose. To understand the extent to which top-level core contributors of the project perform within the development community we computed a trend of their community contribution success and failure rates (see Fig. 6). The trend clearly reﬂects a coherently positive success rate of contributions overall.  
   
  Fig. 6. An overview of contribution success and failure rates for key community developers.  
   
  In addition, another performance indicator typically used to assess the quality of the contribution is the entropy of commits [9]. The software entropy takes its name from the entropy in real world, that can be deﬁned as a measure of chaos that either stays the same or increases over time. In the case of software entropy, this indicator is a proxy of the chaos of a software, and measures of how speciﬁc each commit was in relation to the entire code base. Very speciﬁc commits only aﬀect a small set of ﬁles, and thus have a low entropy. Commits that touch a large number of ﬁles are much less speciﬁc and have a higher entropy as a result. Software entropy impacts the overall quality of software systems. High entropy hinders developers from understanding the purpose of a piece of code and can cause developers to make sub-optimal changes and introduce bugs. The overall software entropy of Openpilot can be measured using the tool commitentropy, which allows to compute the average entropy per day and a 30-day rolling average. The result of this analysis is shown in Fig. 7.  
   
  202  
   
  L. Baresi and D. A. Tamburri  
   
  Fig. 7. Overall software entropy computed on a 30-day rolling average for the OpenPilot community.  
   
  6  
   
  Discussions  
   
  In the course of the experimentation recapped in this article, we made several key observations and reﬂections on our results. On the one hand, some of such observations eﬀectively constitute design principles—according to the deﬁnition of Bass et al. [3]—to aid the (re-)application of the OpenPilot framework. On the other hand, the observations lead to further work to reﬁne or expand on the materials proposed in this work. The rest of this section reports on these observations and reﬂections. OpenPilot Intends to be used as part of a more Coherent Component Model. Although the OpenPilot framwork is thought as a software engineering framework, namely, a set of guidelines, standards, and best practices that are used to develop and maintain autonomous-driving software systems, the framework actually focuses on providing a structured approach to the AI software development process intended in autonomous-driving by deﬁning the tasks, roles, and responsibilities of the AI development team, as well as the ML tools/libraries and modelling techniques they should use to achieve their objectives within the intended scope of autonomous-driving. This focus however makes the use of the framework rather narrow and purely dedicated to the AI components in an automotive software component array; this essentially precludes the use of OpenPilot as an independent middleware but rather promotes the use of the framework within a larger series of components intended to operate together in a service-like orchestration. This design principle reﬂects on the need to use the framework in combination with other design-time counterparts, such as the AutoSAR framework [2].  
   
  Architecting Artiﬁcial Intelligence for Autonomous Cars  
   
  203  
   
  OpenPilot Supports Federated Learning and Onboard DataProcessing Model. While the main focus of this study was rotating around a study over the core components of the OpenPilot framework—and from the perspective of the ML components, we primarily focused on the ModelD modelling classes and abstractions—the rest of the framework oﬀers multi-sensor and multi-vocal data fusion support and furhter processing. This extended and multidiverse support promotes the use of the framework as part of onboard embedded data-processing pipelines consistent with edge-computing and therefore with a private-by-design data processing model. This design principle therefore dictates the way in which the typical processing needs to take place within the intended scope of the OpenPilot framework. This not withstanding, the community itself is considerably active in oﬀering interactive context-awareness support to the framework’s own possibilities, such that, for example, the aforementioned pipelines might also interact with sensors available in the context of automotive operation and connectable via Over-The-Air (OTA). Community Structure Changes Quality . Finally, from a community perspective, it should be noted that the community structure and operations were seriously changed when the community around the framework decided to adopt a more continuous CI/CD pipeline structure featuring GitHub actions, speciﬁcally, as of Feb. 2021. After such date, the community contributions are subject to rigorous evaluation, scoring, and merging procedures which themselves are, on the one hand a guarantee of the quality behind the framework’s code but on the other hand constitute a serious hampering of the community’s commit procedures and contribution policy. This limitation should be taken into account for any study interested not only in using the framework in action but also contributing to or otherwise augmenting the framework itself.  
   
  7  
   
  Conclusions  
   
  Openpilot turned out to be a truly vast and complex software. The aim of this work was to clearly deﬁne its framework, by focusing on the relationships that all the diﬀerent components of which are made work and interact with each other. The analysis of the packages gives insights on the main classes deﬁned, describing their methods and the relationship with the other classes of the packages, and focusing on the theoretical basis behind the main design choices. Trying to see the big picture of the framework is not an easy task, given its size and the number of modules of which is made, and that is the reason why a bottom-up approach was adopted for what concerns the analysis of the overall structure: analyzing the submodules ﬁrst allows to have the necessary knowledge to better understand how openpilot leverages them to run its key processes. We conclude that this work is a ﬁrst rudimentary stepping stone to approach the problem of Autonomous-Driving Car onboard software engineering.11 11  
   
  The authors would like to thank Mr. Francesco Fontana for his invaluable help in preparing the materials conveyed in this manuscript.  
   
  204  
   
  L. Baresi and D. A. Tamburri  
   
  References 1. Dajsuren, Y., van den Brand, M.: Automotive software engineering: past, present, and future. In: Automotive Systems and Software Engineering, pp. 3–8. Springer, Cham (2019). https://doi.org/10.1007/978-3-030-12157-0 1 2. AUTOSAR: Guidelines for the use of the C++14 Language in Critical and Safetyrelated Systems. AUTOSAR, 839 edn. (2017) 3. Bass, L., Clements, P., Kazman, R.: Software Architecture in Practice. SEI series in software engineering, Addison-Wesley (2003) 4. Cipresso, T., Stamp, M.: Software Reverse Engineering. In: Stavroulakis, P., Stamp, M. (eds.) Handbook of Information and Communication Security, pp. 659–696. Springer, Berlin, Heidelberg (2010). https://doi.org/10.1007/978-3-64204117-4 31 5. Djuric, D., Devedzic, V., Gasevic, D.: Adopting software engineering trends in AI. IEEE Intell. Syst. 22(1), 59–66 (2007) 6. Krippendorﬀ, K.: Content Analysis: An Introduction to Its Methodology (second edition). Sage Publications (2004) 7. Kruchten, P.: The 4+1 view model of architecture. IEEE Softw. 12(6), 42–50 (1995) 8. Lee, H.H.S., Clemons, J.: Automotive computing. IEEE Micro. 38(1), 29–30 (2018), http://dblp.uni-trier.de/db/journals/micro/micro38.html#LeeC18 9. Roca, J.L.: Microelectron. Reliab. 36(5), 609–620 (1996) 10. Tamburri, D.A., Palomba, F., Kazman, R.: Success and failure in software engineering: a followup systematic literature review. IEEE Trans. Eng. Manage. 68(2), 599–611 (2021). https://doi.org/10.1109/TEM.2020.2976642 11. Tamburri, D.A., Lago, P., Muccini, H.: Leveraging software architectures through the ISO/IEC 42010 standard: a feasibility study. In: Proper, E., Lankhorst, M.M., Sch¨ onherr, M., Barjis, J., Overbeek, S. (eds.) TEAR 2010. LNBIP, vol. 70, pp. 71–85. Springer, Heidelberg (2010). https://doi.org/10.1007/978-3-642-16819-2 6 12. Teddlie, C., Tashakkori, A.: Foundations of Mixed Methods Research?: Integrating Quantitative and Qualitative Approaches in the Social and Behavioral Sciences. SAGE, Los Angeles (2009) 13. Zhou, X., Huang, H., Zhang, H., Huang, X., Shao, D., Zhong, C.: A cross-company ethnographic study on software teams for DevOps and microservices: organization, beneﬁts, and issues. In: 2022 IEEE/ACM 44th International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP), pp. 1–10. Association for Computing Machinery, New York (2022) 14. Zimmermann, T.: Card-sorting. In: Menzies, T., Williams, L.A., Zimmermann, T. (eds.) Perspectives on Data Science for Software Engineering, pp. 137–141. Academic Press (2016), http://dblp.uni-trier.de/db/books/collections/MWZ2016.html #000116  
   
  Designing and Evaluating Interoperable Industry 4.0 Middleware Software Architecture: Reconfiguration of Robotic System Sune Chung Jepsen(B)  
   
  and Torben Worm  
   
  University of Southern Denmark, The Mærsk-McKinney Møller Institute, SDU Software Engineering, Odense, Denmark {sune,tow}@mmmi.sdu.dk https://www.sdu.dk/en/forskning/sdusoftwareengineering  
   
  Abstract. Interoperable middleware is a step towards fulﬁlling the Industry 4.0 (I4.0) vision to support the reconﬁguration of production systems. Therefore examining interoperable middleware software architectures supports the development of ﬂexible I4.0 production systems. This paper aims to design and evaluate an I4.0 middleware software architecture based on a developed interoperability quality attribute scenario (QAS). An industry use case for production reconﬁguration is described and used as input to develop a quantiﬁable interoperability QAS. Production concepts are clariﬁed as background to specify an interoperability QAS. An interoperable middleware software architecture is designed using architectural tactics to meet the QAS. An experiment evaluates the proposed middleware software architecture on actual production equipment. The results show a promising middleware software architecture design that fulﬁlls the speciﬁed interoperability QAS. Keywords: Interoperability · Industry 4.0 Middleware Software Architecture · Reconﬁguration · Cyber-Physical System  
   
  1  
   
  Introduction and Motivation  
   
  Flexible production is a central topic in realizing the Industry 4.0 (I4.0) vision to achieve a more eﬃcient production system supporting, e.g. rapid changeovers between production scenarios [14]. A ﬂexible production system is characterized by possessing the ability to change or react to changes with a low penalty in time, eﬀort, cost, or performance [17]. A change in a production system, e.g. producing a new product or introducing new production equipment, often involves changing the functionality of assets/components [6,15] of the production system, e.g. reprogramming a robot. Changing production functionality requires communication between the components of the production system and therefore also interoperability of the production components. The components of production systems are heterogeneous and reside on diﬀerent levels (from sensors to c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 205–220, 2023. https://doi.org/10.1007/978-3-031-42592-9_14  
   
  206  
   
  S. C. Jepsen and T. Worm  
   
  Enterprise resource planning (ERP)), and therefore middleware is introduced to facilitate the connectivity and interoperability. Connectivity and interoperability requirements are speciﬁed with quality attributes (QA). The architecture of the middleware must furthermore support reconﬁgurability to support the changes in the production functionality. In this paper, we design and evaluate middleware software architecture to support production reconﬁguration in a manufacturing company that produces stainless steel components for the food industry. The work has been part of an industrial collaboration project [5] investigating connectivity and reconﬁguration for smart manufacturing in a small and medium-sized enterprise (SME). The manufacturing company has 25 production cells that process many small-batch production orders which involve software reconﬁguration. A production cell typically contains a robotic arm and a computerized numerical control (CNC) machine. The robotic arms can perform diﬀerent tasks depending on the tools equipped to them, e.g. take a metal item from a pallet and place it inside CNC machine. Furthermore the robot needs a program containing the instructions to perform the task. The programs for the robots and CNC machines are typically stored in a folder on a computer from which it is manually uploaded to the machine or robot via a USB stick, proprietary protocols (e.g. over RS232), or through the robot arm’s native embedded interface (teach pendant). Especially the software part is inﬂuenced by error-prone, time-consuming, and manual tasks, e.g. ﬁnding the correct program in a folder structure on a computer and transferring the program from the computer to the machine. The company is thus a representative candidate to establish a realworld production use case to investigate interoperability requirements for the middleware. Figure 1 shows the high-level middleware software architecture designed at the university [8]. The middleware provides an infrastructure that supports the connection of production components, e.g. warehouses, autonomous mobile robots, magnetic transport tracks, and production cells, to each other and to high-level business components, e.g. an ERP system, in an I4.0 context. The work has been part of building up an infrastructure at the university’s I4.0 Laboratory (I4.0 Lab) to establish an ecosystem around ﬂexible production in an interdisciplinary collaboration between researchers and industry partners. The I4.0 Lab contains state-of-the-art robotics and automated solutions, and the design and development of the lab and the software has been described and documented in various papers [7,9–13]. The middleware software architecture is designed to facilitate information exchange between production components and to examine QAs such as interoperability [2]. This paper uses an industry use case as a background to establish more knowledge and experience with interoperability requirements for middleware software architectures. The use case is reproduced in the I4.0 Lab to provide a stable environment for experimentation that does not interrupt the actual production. Based on the use case and the setup in the lab this paper evaluates the proposed middleware software architecture design based on a stated QA requirement.  
   
  Interface  
   
  subscribe  
   
  Configurator  
   
  Orchestrator  
   
  publish  
   
  Production order Interface  
   
  publish subscribe  
   
  publish Message Bus  
   
  Interface  
   
  publish  
   
  subscribe  
   
  Interface  
   
  publish Service  
   
  Interface  
   
  subscribe  
   
  Service  
   
  subscribe publish Service  
   
  publish Service  
   
  Middleware Production floor  
   
  207  
   
  External service  
   
  Business level  
   
  Interoperable Middleware Software Architecture  
   
  subscribe  
   
  Interface  
   
  Interface  
   
  Interface  
   
  Interface  
   
  Interface  
   
  SOAP  
   
  HTTP  
   
  OPC UA  
   
  MQTT  
   
  Interface  
   
  Interface  
   
  Interface  
   
  Interface  
   
  Warehouse  
   
  Autonomous Mobile Robot  
   
  Magnetic Transport Track  
   
  Production Cell  
   
  Fig. 1. A high-level overview of the designed Industry 4.0 middleware software architecture.  
   
  The structure of the paper is as follows. Section 2 outlines the production use case followed by the research question and approach. Section 3 speciﬁes the interoperability quality attribute scenario (QAS) based on the presented use case. Section 4 introduces the middleware software architecture design. Section 5 evaluates the middleware software architecture through an experiment.  
   
  2  
   
  Problem and Approach  
   
  In this Section the use case from the company is presented, and based on this the research question is stated followed by the approach taken to answer the research question. 2.1  
   
  Use Case: Upload Program  
   
  The production cell in the use case is an instance of the production cells described earlier containing a robotic arm and a CNC machine. The robotic arm is capable of performing diﬀerent tasks depending on the tools equipped to it and the  
   
  208  
   
  S. C. Jepsen and T. Worm  
   
  program executed by the robot, e.g. taking a metal item pallet and placing it inside a CNC machine for further processing. When the item produced in the cell is changed, the tools on the robot and the program executed by the robot often need to change as well. In this use case, only the program needs to change because the tools are general purpose for the range of productions handled by the cell. The company produces small batches of items in the cell, and therefore the amount of time used to change the machine setup (in this case, the program) is essential to keep the machine constantly working and the cost at a minimum. In this particular case, the upload time should be low and ideally below three seconds. The production setup subject to production reconﬁguration is shown in Fig. 2a and shows the input material (the wooden crate), the robot, the CNC machine and the output material (the metal rings).  
   
  Fig. 2. Production use case.  
   
  The machines in the setup are connected through the proposed middleware to support the production. To evaluate the middleware, the company setup is replicated in the I4.0 Lab as illustrated in Fig. 2b where the (re)programming of the robot is the central item being investigated. The numbers indicate the ﬂow of material, and the middleware underlies the CNC machine and the robot and communicates with both. The middleware is deployed on proprietary hardware developed to provide a research setup for the I4.0 demonstrator in the I4.0 Lab. The hardware is a self-contained unit called I4.0-In-A-Box, containing the necessary components to run an I4.0 experiment [10].  
   
  Interoperable Middleware Software Architecture  
   
  2.2  
   
  209  
   
  Problem  
   
  Based on the use case and the identiﬁed interoperablity QA, the following research question is stated: Is the developed middleware software architecture design able to support the stated production use case and fulfill the QA requirement? 2.3  
   
  Approach  
   
  A QAS is a general approach [2] to specify architectural requirements for software architectures originally proposed by the Carnegie Mellon Software Engineering Institute (SEI) [3]. The QAS approach has also been applied in the I4.0 domain [1,8]. To answer the research question we therefore use a QAS to specify the architectural requirements to the middleware. Following the speciﬁcation of the architectural requirements, they serve as input to the design of the architecture for the middleware using suitable tactics for the QAs [2]. The designed middleware is then evaluated in an experiment in the I4.0 Lab. The middleware is evaluated in the lab rather than in the company in order to provide a stable testing environment and to aviod interrupting the production.  
   
  3  
   
  Quality Attribute Scenario  
   
  This Section describe the needed concepts to provide a context to understand the speciﬁed interoperability QAS. An asset will be used throughout the description of the QAS. In this context, an asset is referred to anything that needs to be connected to create an I4.0 solution, e.g. machines, sensors, or software [15]. The asset includes an assembly production cell; mobile transportation; in our context, the robot arm is the asset. The robot arm contains a program to execute tasks, e.g. moving a rounded object from one location to another. A program in this context is referred to as capability. We deﬁne capability as: Definition 1. (Capability). A capability is a set of functions invoked in a particular order. As an example for the robot arm, a program (e.g. robot script) with functions is made available through an interface to invoke externally and execute the capability. Therefore, uploading a new program means changing the capability, e.g. moving a rounded object to moving a squared object. Likewise, if the upload functionality can be invoked in a particular sequence, then it also classiﬁes as a capability oﬀered by the robot arm, which is the case in this context. The upload communication to an asset is an important step in a reconﬁguration process [11] where the middleware needs to handle communication between production components to handle changes eﬃciently, e.g. a new production order.  
   
  210  
   
  S. C. Jepsen and T. Worm  
   
  Fig. 3. Excerpt of the interoperability quality attribute scenario.  
   
  The QAS contains six parts to specify the interoperability requirement, i.e. source, artifact, environment, response, and response measure [2], as seen in Fig. 3. The source initiates the stimulus to the artifact under some environmental conditions. The response is the activity that occurs to handle the stimulus, and the response measure is the measurable part of the scenario such that the requirement can be tested to determine whether the requirement is achieved. Figure 3 gives a short overview of the QAS, and Table 1 provides full details of the scenario. The software driver initiates that a new program needs to be uploaded to the robot arm. The source is a business application such as an ERP system that initiates stimulus, which is the change of program. The stimulus will alternate between two programs to demonstrate the interoperability, i.e. the upload of the program and acknowledgment of successful upload. The programs represent a small, realistic robotic script of size 971 bytes, which moves the robot arm from one location to another. The artifact represents the Service, DatabaseService, Database, and Message bus components in the middleware, which need to interoperate to accomplish the upload. The Service is responsible for managing the capability request queue and invoking capability requests on the asset, whereas the DatabaseService handles requests to the Database. The environment speciﬁes the conditions for the interoperating components. The conditions are that the Service and Database await request, the Database contains the two programs, and the communication between the components is established. The response details how the stimulus is handled. The Service requests the DatabaseService, which queries the Database and returns the program to the Service, which uploads the program to the asset. The response measure is the measurable goal for the requirement. In this case, the interaction process should take less than 2–3 s before the program is correctly uploaded. Correctly in this context, means acknowledging whether the program is uploaded at the correct location on the robot arm system.  
   
  Interoperable Middleware Software Architecture  
   
  211  
   
  Table 1. Interoperability quality attribute scenario. P ortion scenario Source  
   
  of  
   
  A software driver, i.e. an application that mimics the part of a business system responsible for issuing capability change of the asset.  
   
  Stimulus  
   
  The software driver switches between program 1 and program 2 of size 971 bytes each, which must be uploaded to the asset.  
   
  Artifact  
   
  Integrating components – Service • Responsible for handling capability requests, managing queue in terms of adding or removing capability requests, and responding to information requests • Responsible for requesting a program from a database via the message bus, deserializing the program and uploading the program to the asset. – DatabaseService : Responsible for handling requests for files, i.e. interacting with a database, extracting the requested file and returning the requested file via the message bus. – Database : Responsible for storing and querying data, e.g. programs. Coordinating component: – Message bus : Responsible for message transmission between the Service and DatabaseService.  
   
  Environment  
   
  4  
   
  Values  
   
  – – – –  
   
  Service : Awaits capability requests DatabaseService : Awaits request for querying database Database : Contains program 1 and 2 Message bus : The communication between components is established, and messages are transmitted.  
   
  Response  
   
  Service: – The Service receives a capability request from the message bus, stating that a program must be uploaded to the asset – The Service sends a message to the message bus, requesting the required file defining the program DatabaseService: – The DatabaseService receives the file request, stating the requested file. – The DatabaseService extracts the requested file from a connected database – The DatabaseService sends a message to the message bus, containing the file in a serialized format. Service: – The Service receives the file from the message bus, containing the file in a serialized format – The Service deserializes the file into the format required by the asset and thus converts it to a program. – The Service uploads the program to the asset – The Service ensures that the program has been uploaded by checking the existence of the program in the requested file listing  
   
  Response Measure  
   
  Success criteria uploading a program – It should take less than 2-3 seconds for the process (response) to upload the required program to the asset correctly.  
   
  Middleware Software Architecture Design  
   
  This Section describes the Service and DatabaseService design using module views [4] and used tactics that aims to archieve the stated QAS.  
   
  212  
   
  4.1  
   
  S. C. Jepsen and T. Worm  
   
  Design  
   
  The Service contains three primary responsibilities: 1) communication with the Message bus, 2) handling the queue for incoming requests, and 3) communication with an asset. Figure 4 shows the Service module view containing the abovementioned responsibilities through the abstractions IBusClient, IExecutionHandler, and the IAssetClient. Abstractions are generally favored to accomplish a modiﬁable and scalable architecture to support new messages busses, assets, databases etc.  
   
  Fig. 4. Module view of the Service architecture.  
   
  The IBusClient provides the communication layer between middleware components. The concrete Message bus implementation is a Kafka message bus [18] which, among others, provides publish-subscribe functionality through topics. The IBusClient implementation is used on all components that need communication with Kafka making it easy to manage changes across components. The IAssetClient provides a client communcation with the concrete asset. In this case, the FTP client will provide upload functionality to the robot arm. The Service supports communication protocols with diﬀerent assets, as seen in Fig. 1, which includes SOAP, OPC UA, REST, and MQTT protocols. The IExecutionHandler is the glue between the IBusClient and IAssetClient that handles incoming requests from the IBusClient and requests to the IAssetClient. The IExecutionHandler contains a queue from which it manages the requests to the IAssetClient. The Controller has two main responsibilities: 1) initialization of IBusClient, IExecutionHandler, IAssetClient dependencies based on conﬁgurations, and 2) handling incoming messages. The incoming messages from Kafka are sent to the IExecutionHandler. The DatabaseService contains three main responsibilities: 1) communication with Kafka, 2) database creation, and 3) database client. Figure 5 shows the DatabaseService module view containing the abovementioned responsibilities through the abstractions IBusClient (contains the same responsibility as explained above), IDatabaseClientCreator, and the IDatabaseClient. The IDatabaseClientCreator is responsible for creating a concrete database instance based on provided conﬁgurations (e.g. username, password, port). The database will be returned to the Controller as an IDatabaseClient. The IDatabaseClient contains responsibilities for querying and inserting into the  
   
  Interoperable Middleware Software Architecture  
   
  213  
   
  Fig. 5. Module view of the DatabaseService architecture.  
   
  database. The IDatabaseClient uses DataPoint as an abstraction to return data and insert data into the database uniformly across diﬀerent database technologies. All messages sent between components internally in the middleware use a JSON structure. Data values like conﬁgurations and programs are part of the JSON structure. MongoDB is one example of a document database with good support for saving JSON structures, making it a reasonable choice for saving needed JSON data. The PostgreSQL database is an example of a relational database instance used in another context for time series data. The Controller has two primary responsibilities: 1) initialization of IBusClient, IDatabaseClientCreator, and IDatabaseClient dependencies based on conﬁgurations, and 2) handling incoming messages. The incoming messages from Kafka are sent to the IDatabaseClient. 4.2  
   
  Tactics  
   
  The tactics employed in the design are chosen based on handling communication with the robot arm and eﬃcient communication between the Service and DatabaseService to impact the total time for the uploading process stated in the response measure in the QAS. The encapsulation tactic [2], i.e. deﬁne an explicit interface, is used to vary between 1) communication upload, e.g. to change functionality on the robot, and 2) communication to invoke a physical task on the robot. The deﬁned interface allows for diﬀerent implementations to support the two mentioned types of communications. The encapsulation is realized through the IAssetClient interface shown in Fig. 6.  
   
  Fig. 6. Encapsulation tactic.  
   
  214  
   
  S. C. Jepsen and T. Worm  
   
  The interface’s purpose is to handle diﬀerent states, i.e. change functionality (e.g. upload a new program) and invoke a physical task (e.g. assembly task) on the robot arm. The FTP class is an implementation of the change functionality, which gets the program from the database, and handles the deserialization of the program to a ﬁle format that the robot arm can interpret. Next, the ﬁle is uploaded, and conﬁrmed that it resides on the robot. In contrast, the MQTT class implements the execution communication of tasks on the robot arm. The communication (i.e. upload process) between the Service and the robot arm is a step in a reconﬁguration process [11] where each step must be eﬃciently handled by the middleware. Consequently, it does not matter whether the necessary reconﬁguration functionality is achieved if the reconﬁguration does not occur at the right time. Therefore the second tactic employed is the increase eﬃciency [2] tactic focusing on “tuning up” how components communicate. The focus is to achieve eﬃcient communication between the Service and DatabaseService to lower the uploading process time to reduce the total reconﬁguration time. The increase eﬃciency is realized through the publish-subscribe pattern [2] shown in Fig. 7.  
   
  Fig. 7. Increase eﬃciency tactic.  
   
  The Service and DatabaseService communicate through a publish-subscribe pattern through topics [18]. The Service publishes a request for a program through a topic to which the DatabaseService subscribes, and DatabaseService publishes the program back through a topic to which the Service subscribes. The publish-subscribe pattern increases eﬃciency by providing instant event notiﬁcations that reduce potential Service idle time between fetching the program from the DatabaseService and upload functionality.  
   
  5  
   
  Evaluation  
   
  This Section describes the evaluation of the middleware based on the stated QAS. It includes the experiment design, measurements of the QAS response measures, pilot testing, and an analysis of the result. 5.1  
   
  Design  
   
  The middleware is deployed to the I4.0-In-A-Box, which contains four Raspberry Pi’s and a router. Figure 8 shows the allocation view of the middleware mapped to the hardware in the I4.0-In-A-Box.  
   
  Interoperable Middleware Software Architecture  
   
  215  
   
  Fig. 8. Allocation view of the middleware software.  
   
  The box contains its own network to support separations of networks in a production environment, e.g. information technologies and operation technologies [16]. The software is deployed using Docker container technology to package and deploy the software and its dependencies easily. Docker Swarm is used as a lightweight orchestration software tool to distribute the load of the deployed components between the Raspberry Pi’s. Elasticsearch and Kibana are technologies used to save and visualize logs from the middleware components. The ZooKeeper software is used to maintain and conﬁgure Kafka, whereas Kafka UI is used to monitor Kafka. The middleware communicates with the FTP server to the robot arm connected with Ethernet to the router. The SoftwareDriver is deployed on an external server and is responsible for initiating upload requests to the middleware for uploading a program, i.e. alternate between uploading program 1 and program 2. The idea of alternating between two programs is to demonstrate that a new program is uploaded. Running multiple repetitions also means the same program ﬁlename is uploaded. Therefore, a unique ﬁle name (representing program 1 or program 2) is used for each repetition to ensure acknowledgment that a new program is uploaded rather than being overridden or not uploaded due to an error.  
   
  216  
   
  S. C. Jepsen and T. Worm  
   
  Fig. 9. Measurements for the uploading process.  
   
  5.2  
   
  Measurements, Pilot Test, and Analysis  
   
  Measurements. Measurements are taken to log that programs are correctly uploaded according to the stated QAS in Table reftab:qas. The sequence diagram in Fig. 9 illustrates the interacting components from Sect. 4 and the measurements indicated by the open circle/ﬁlled circle and open diamond/ﬁlled diamond. The red steps are used as a referable part of the sequence, which will be used later in the analysis. An upload program message is initially sent to the Service through Kafka. The Service requests the DatabaseService for the program, which it receives in a serialized format. The Service deserializes the program and uploads the program to the FTP Server, and checks whether the program is located in the correct folder on the FTP server by doing a ﬁlename lookup in the FTP server directory. The ﬁrst measure is the upload process time  
   
  Interoperable Middleware Software Architecture  
   
  217  
   
  (open and closed circle), and the second measure checks that the program is uploaded correctly (open and closed diamond). All the measurements are saved in Elasticsearch. Pilot Test. A pilot test of 10 replication was conducted to get familiar with running the middleware software on the physical equipment. The pilot test also determined the number of replications in the evaluation, establishing the validity of the results, i.e. how close the parameter is to the true parameter. Therefore a hypothesis t-test was performed to compute the validity of the number of replications in the evaluation. In the pilot test, the standard deviation was computed to 494.817 milliseconds (ms). For the scope of this experiment, it is fair to have a precision of +-300 ms (one order of magnitude) where the uploading process goal is 2-3 s. Listing 1.1. R code for computing sample size 1 2 3  
   
  power . t . t e s t ( d e l t a = 3 0 0 , type = ” one . sample ” , a l t e r n a t i v e = ” one . s i d e d ” , sd= 4 9 4 . 8 1 7 , s i g . l e v e l = 0 . 0 5 , power=0.9)  
   
  Table 2. Acknowledgement of program exchange, timeformat hh.mm.ss.ms. ID  
   
  Start time  
   
  End time  
   
  Ack.  
   
  1 2 3 4 5 6 7 8 9 10 11 12 13  
   
  16.50.03.296 16.50.03.852 16.50.04.414 16.50.04.979 16.50.05.540 16.50.06.102 16.50.06.656 16.50.07.195 16.50.07.741 16.50.08.285 16.50.09.070 16.50.09.612 16.50.10.157  
   
  16.50.03.850 16.50.04.412 16.50.04.978 16.50.05.539 16.50.06.101 16.50.06.655 16.50.07.194 16.50.07.740 16.50.08.284 16.50.09.069 16.50.09.611 16.50.10.157 16.50.10.708  
   
  Success Success Success Success Success Success Success Success Success Success Success Success Success  
   
  ID  
   
  Start time  
   
  End time  
   
  Ack.  
   
  14 15 16 17 18 19 20 21 22 23 24 25  
   
  16.50.10.708 16.50.11.259 16.50.11.805 16.50.12.348 16.50.12.894 16.50.13.458 16.50.14.025 16.50.14.569 16.50.15.103 16.50.15.637 16.50.16.183 16.50.16.728  
   
  16.50.11.259 16.50.11.804 16.50.12.346 16.50.12.893 16.50.13.457 16.50.14.024 16.50.14.569 16.50.15.102 16.50.15.637 16.50.16.182 16.50.16.728 16.50.17.277  
   
  Success Success Success Success Success Success Success Success Success Success Success Success  
   
  The standard deviation of 494.817 ms and the delta of 300 ms is inserted into the formula shown in Listing 1.1, resulting in 25 replications. The result means running 25 replications gives a precision of +-300 ms of the true uploading process time. Analysis. After the experiment was conducted and the measurements were collected, the results could be analyzed, i.e. data supporting the correct upload in Table 2 and the uploading process time in Fig. 10.  
   
  218  
   
  S. C. Jepsen and T. Worm  
   
  Table 2 shows the 25 program uploads, i.e. program1, program2, program3 etc.; start and end time; and the acknowledgement of the program upload. As the Table 2 shows all programs are uploaded successfully and no errors where discovered during the experiment.  
   
  Fig. 10. Upload process time.  
   
  Figure 10 shows the upload program process time for the 25 uploads. There is a stable tendency, which was expected because, in principle, the two same programs get uploaded, and no complex computation is involved. The average upload process time is 542 ms, where approximately 504 ms are caused by Kafka batching messages. A pattern found in the data logs shows that Kafka uses 504 ms before the message are transferred from the DatabaseService and retrieved by the Service (step 4 in Fig. 9).  
   
  Fig. 11. Upload process distribution time.  
   
  Figure 11 shows a pie chart of the upload process time distributed on the Service, Kafka, and DatabaseService. The DatabaseService takes 1% of the time to query the database (step 3 in Fig. 9). The Service takes 6% of the time, where approximately 4% is used to prepare program upload (step 1 + 5 in Fig. 9), and  
   
  Interoperable Middleware Software Architecture  
   
  219  
   
  2% is used on FTP upload and acknowledgment (step 6 in Fig. 9). The encapsulation tactic has supported increased interoperability by having diﬀerent implementations of an interface to support diﬀerent interactions and exchange types of information. The increase eﬃciency tactic has been beneﬁcial in minimizing potentially unsuccessful pull requests from the Service to the DatabaseService, thereby lowering wasted processing time. From the results, the conﬁguration and batching of messages in Kafka could be further optimized to improve the transmission of messages. However, the overall requirement of 2-3 s to upload programs correctly is successfully acknowledged and achieved with an average of 542 ms.  
   
  6  
   
  Conclusion  
   
  In this experience paper, a middleware software architecture has been designed and evaluated according to the stated interoperability QAS. The middleware components and component interactions have been examined and documented through architectural views, diagrams, and tactics to unfold the design of a middleware architectural structure. The results show that the middleware software architecture design meets the QAS requirements, and therefore we conclude that the middleware software architecture is one solution that contains the architectural structures to support production reconﬁguration. It also means that the middleware is a starting point for analyzing reconﬁgurable middleware software architectures as well as reconﬁguring the physical equipment in a production system. The scope of this middleware evaluation has been limited to the needs described in the use case. However, the setup supports that experiments can be conducted involving many more dimensions, e.g. varying the size of pay-loads (programs), the bandwidth of communication protocols, and physical limitations such as cables etc. Acknowledgements. We would like to thank the SDU Industry 4.0 Initiative and DigitalLead [5] for ﬁnancial support, and SDU Robotics, and SDU Industry 4.0 Laboratory for valuable discussions.  
   
  References 1. Antonino, P.O., Schnicke, F., Zhang, Z., Kuhn, T.: Blueprints for architecture drivers and architecture solutions for industry 4.0 shopﬂoor applications. In: Proceedings of the 13th European Conference on Software Architecture - Volume 2, pp. 261–268. ECSA 2019, Association for Computing Machinery, New York, NY, USA (2019). https://doi.org/10.1145/3344948.3344971 2. Bass, L., Clements, P., Kazman, R.: Software Architecture in Practice. AddisonWesley Professional, Boston, Massachusetts, USA (2012) 3. Bass, L., Klein, M., Bachmann, F.: Quality attribute design primitives. Tech. rep., CMU/SEI-2000-TN-017, Software Engineering Institute, Carnegie Mellon University, Pittsburgh, PA (2000). http://resources.sei.cmu.edu/library/asset-view.cfm? AssetID=5139  
   
  220  
   
  S. C. Jepsen and T. Worm  
   
  4. Clements, P., et al.: Documenting Software Architectures: Views and Beyond. Addison-Wesley (2002) 5. DigitalLead: Connectivity og rekonﬁguration i industri 4.0 (2022). https:// digitallead.dk/innovation/projekter/connectivity-og-rekonﬁguration-i-industri-40/. Accessed 23 Jan 2023 6. Groover, M.P.: Automation, Production Systems, and Computer-Integrated Manufacturing, Fourth edn. Pearson (2015) 7. Jepsen, S.C., Mørk, T.I., Hviid, J., Worm, T.: A pilot study of industry 4.0 asset interoperability challenges in an industry 4.0 laboratory. In: 2020 IEEE International Conference on Industrial Engineering and Engineering Management (IEEM), pp. 571–575. IEEE, Singapore (2020). https://doi.org/10.1109/IEEM45057.2020. 9309952 8. Jepsen, S.C., Siewertsen, B., Worm, T.: A reconﬁgurable industry 4.0 middleware software architecture. In: 2023 IEEE 20th International Conference on Software Architecture Companion (ICSA-C), pp. 1–11 (2023). https://doi.org/10. 1109/ICSA-C57050.2023.00023 9. Jepsen, S.C., Worm, T., Christensen, H.B., Hviid, J., Sandig, L.M.: Experience report: a systematic process for gathering quality attribute requirements for industry 4.0 middleware. In: 2021 IEEE 25th International Enterprise Distributed Object Computing Workshop (EDOCW), pp. 166–175. IEEE, Gold Coast (2021). https://doi.org/10.1109/EDOCW52865.2021.00046 10. Jepsen, S.C., et al.: A research setup demonstrating ﬂexible industry 4.0 production. In: 2021 International Symposium ELMAR, pp. 143–150. IEEE, Zadar (2021). https://doi.org/10.1109/ELMAR52657.2021.9550961 11. Jepsen, S.C., Worm, T., Kang, E.: Reconﬁgurability for industry 4.0 middleware software architectures. In: 2022 International Conference on Omni-layer Intelligent Systems (COINS) (2022) 12. Jepsen, S.C., Worm, T., Mørk, T.I., Hviid, J.: An analysis of asset interoperability for i4.0 middleware. In: Proceedings of the 36th Annual ACM Symposium on Applied Computing, pp. 707–710. SAC 2021, Association for Computing Machinery, New York (2021). https://doi.org/10.1145/3412841.3442094 13. Jepsen, S.C., Worm, T., Mørk, T.I., Hviid, J.: Industry 4.0 middleware software architecture interoperability analysis. In: 2021 IEEE/ACM 3rd International Workshop on Software Engineering Research and Practices for the IoT (SERP4IoT), pp. 32–35. IEEE, Madrid (2021). https://doi.org/10.1109/SERP4IoT52556.2021. 00012 14. Plattform industrie 4.0: the asset administration shell: implementing digital twins for use in industrie 4.0 (2019). https://www.plattform-i40.de/IP/Redaktion/EN/ Downloads/Publikation/VWSiD%20V2.0.html. Accessed 23 Dec 2020 15. Plattform industrie 4.0: the asset administration shell: implementing digital twins for use in industrie 4.0 (2019). https://www.plattform-i40.de/PI40/Redaktion/ EN/Downloads/Publikation/VWSiD%20V2.0.html. Accessed 23 Dec 2020 16. Saturno, M., Pertel, V.M., Deschamps, F., Loures, E.F.R.: Proposal for new automation architecture solutions for industry 4.0. Logforum 14(2), 185–195 (2018). https://doi.org/10.17270/J.LOG.266 17. Terkaj, W., Tolio, T., Valente, A.: A review on manufacturing ﬂexibility. In: Tolio, T. (eds.) Design of Flexible Production Systems. Springer, Berlin, Heidelberg (2009). https://doi.org/10.1007/978-3-540-85414-2 3 18. Thein, K.M.M.: Apache kafka: next generation distributed messaging system. Int. J. Sci. Eng. Technol. Res. 3(47), 9478–9483 (2014)  
   
  Shaping IoT Systems Together : The User-System Mixed-Initiative Paradigm and Its Challenges Romina Spalazzese1,2(B) , Martina De Sanctis3 , Fahed Alkhabbas1,2 , and Paul Davidsson1,2 1  
   
  2  
   
  Department of Computer Science and Media Technology, Malm¨ o University, Malm¨ o, Sweden {romina.spalazzese,fahed.alkhabbas,paul.davidsson}@mau.se Internet of Things and People Research Centre, Malm¨ o University, Malm¨ o, Sweden 3 Gran Sasso Science Institute (GSSI), L’Aquila, Italy [email protected]   
   
  Abstract. Internet of Things (IoT) systems are often complex and have to deal with many challenges at the same time, both from a human and technical perspective. In this vision paper, we (i) describe IoT-Together, the Mixed-initiative Paradigm that we devise for IoT user-system collaboration and (ii) critically analyze related architectural challenges. Keywords: Mixed-initiative paradigm · User-System Collaboration · Intelligent IoT Systems · Novel Experiences · Goal-driven IoT Systems  
   
  1  
   
  Introduction  
   
  Internet of Things (IoT) systems are complex and this implies dealing with many challenges at the same time. For instance, the IoT ecosystem of a Smart City is characterized by IoT, automation, connectivity, and comprises people and multiple application areas, e.g., Smart Environment, Smart Health, Smart Mobility, Smart Living. The IoT is a cross-cutting dimension and, if exploited at the best, can enable novel and powerful experiences for users. Indoor and outdoor city spaces are equipped with IoT sensors, actuators, and devices. Examples are points of interests, like monuments and museums, equipped with, e.g., presence sensors, cameras, Augmented Reality headsets, displays, supporting interactive exhibitions [1], green houses and botanical gardens equipped with IoT technologies for planting and monitoring, supporting participation and learning. Some IoT devices in the smart city are spread all around, e.g., weather, pollution and presence sensors, while others are only in main locations, e.g., interactive screens in main stations. In this settings, an example of novel experience is “create and visit your botanical garden through mixed-reality”, where the user interacts with the IoT devices and system at the city botanical garden. From a technical perspective, IoT systems include diﬀerent dimensions of heterogeneity, quality, and dynamicity, may show diverse faults and errors, and c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 221–229, 2023. https://doi.org/10.1007/978-3-031-42592-9_15  
   
  222  
   
  R. Spalazzese et al.  
   
  often involve humans. From a human perspective (e.g., users and software architects), IoT systems may range from known to unknown, from fully speciﬁed to underspeciﬁed [2]. In the case of more unknown, underspeciﬁed, and dynamic IoT systems as well as user needs and preferences, users should be able to ﬁnd out in easy ways, in conversation with intelligent IoT systems, what are suitable possibilities for them to achieve their current needs according to their preferences. At the same time, intelligent IoT systems should be able to gain more knowledge about the users to better support them in this process of serving them with novel experiences. To address this in the best way possible, i.e., without overwhelming the user or proposing low relevant possibilities, IoT user and system should shape together the most suitable intelligent IoT system. This is in line with the Mixed-Initiative Interaction (MII), identiﬁed as a key missing link between Artiﬁcial Intelligence (AI) and Human-Computer Interaction (HCI) [3,4]. MII refers to a ﬂexible interaction strategy among both humans or computer agents, each contributing what they do best to solve problems or perform tasks. Nevertheless, the MII idea was described around two decades ago, it has been mainly investigated in the HCI area with a major focus on user interfaces, and in the AI area, e.g., to inform the design of human-robot systems [5]. Existing solutions (technologies and research) within Recommender Systems, AI Planning and Goal-driven are not suﬃcient as they are, since the (intelligent) IoT systems we focus on are at their overlap and require additional eﬀorts and diﬀerent solutions to provide the expected novel enhanced experiences. In this vision paper, we (i) describe IoT-Together, a Mixed-initiative Paradigm for IoT user-system collaboration (Sect. 3), and (ii) critically analyze related architectural challenges (Sect. 4). The mixed-initiative paradigm aims at ﬁlling the gap between intelligent IoT systems and users that need, and are willing, to work in partnership to shape suitable shared (intelligent) IoT systems. With intelligent IoT systems we mean that, through the collaboration, they try to: understand and learn user goals and preferences; present the most suitable interfaces and experiences to the users; adjust where needed. As a contribution example, we provide a Smart City Scenario (Sect. 3) to support illustrating the type of targeted systems, the paradigm, and challenges.  
   
  2  
   
  Related Works  
   
  To engineer goal-driven self-adaptive IoT systems, several approaches have been developed to support users to achieve their goals seamlessly in arbitrary, dynamic, and uncertain IoT environments. Mayer et al. [6] make use of a user interface to conﬁgure ambient settings. Rahimi et al. [7] proposed an agentbased approach exploiting reinforcement learning to learn users’ behaviours. Alkhabbas et al. [8] exploited Emergent Conﬁgurations to dynamically form, enact, adapt goal-driven IoT systems. De Sanctis et al. [9] proposed a multilevel self-adaptive approach supporting users to deﬁne run-time goals. Abughazala et al. [10] use agent-based social simulation. To cope with dynamic and unknown IoT settings and to avoid overwhelming users, IoT systems’ interfaces should be intelligent [11,12]. Intelligent User Interfaces (IUI) provide the  
   
  Shaping IoT Systems Together  
   
  223  
   
  ability to perform adaptations to improve users’ Quality of Experience (QoE). Existing approaches consider multiple factors e.g., user goals, context, emotions, behaviours, and accessibility needs [13]. To this aim, diﬀerent techniques can be exploited, e.g., machine learning [14], model-driven engineering [15], and digital twins [16]. Shim et al. [17] identiﬁed the categories of concerns to consider when engineering human-centered IoT systems for interaction. Geetha et al. [18] surveyed Human-centered IoT applications and demonstrated multiple scenarios. In [19], authors proposed an architectural approach for automating users’ environments based on the context (e.g., users’ activities) and users’ preferences. Users get recommendations about the services achievable in their environments. M¨ akitalo et al. [20] proposed collaborative co-located interactions through social devices, where both people and (mobile) devices with physical proximity can start interactions proactively. To summarize, the majority of existing approaches do not fully support users to beneﬁt from the IoT in uncertain situations, e.g., where the user needs are underspeciﬁed and IoT environments are dynamic and possibly not fully known.  
   
  3  
   
  Smart City Scenario and IoT-Together Paradigm  
   
  Scenario. Consider a tourist that arrives in a city with no precise plans. At the central station, she starts interacting with a totem. The totem has access and can interact with any public IoT device and service in the city (e.g., to get info about crowdedness and queues at public places, hospitals, museums, timetables and current position of buses, air quality), to provide users with novel enhanced experiences through (intelligent) systems based on their needs and preferences. The system software (on the totem -possibly other devices and the Cloud) can run in any smart city’s application domain. The user may ﬁnd herself in an unplanned, volatile situation, and she might not have fully clear activities and objective in mind. The system needs to know something about the user (e.g., interests, preferences), for ﬁnding a subset of appropriate options to show her. A user-system collaboration is required, so that both user and system start disclosing something about their needs and knowledge, respectively. To support the user identifying interesting activities, the system can ask input to the user or take it from the shared user data through her devices. This allows the system to prune/build the solution space, to understand the user’s goal that would be very diﬃcult if not impossible otherwise -given the enormous amount of possible options in a smart city. Exchanged information can be how much time she has, by which means she is willing to move, her current interests and preferences. If her interests include, e.g., gardening, art, and food, and she wants to walk, prefers quite places, and has 3 h of time, multiple options of enhanced experiences are possible, e.g.: “IoT gardening: grow a ﬂower with IoT tech at the botanical garden”, “Interactive exhibition: the music, lights, and art installations experience”. Table 1 lists some examples of IoT settings. However, the system excludes (x) the park in the suburbs, the cathedral and the city green house, according to the sensors data. The food truck area, quite at the  
   
  224  
   
  R. Spalazzese et al.  
   
  Table 1. Some places, installed sensors, and their provided data related to enhanced experiences. Place  
   
  Installed Sensors (current data)  
   
  System’s selection  
   
  User’s selection  
   
  Park in the suburbs weather sensors (a storm is coming) x Botanical garden  
   
  presence sensor (normal), IoT tech for plantation e.g., smart soil, moisture, nutrient sensors (normal)  
   
  City green house  
   
  presence sensor (crowded)  
   
  x  
   
  Cathedral  
   
  presence sensor (queue), smart-screens  
   
  x  
   
  Modern art museum presence sensor (normal), hololens, smart-screens, eye-tracking Food trucks area  
   
  cameras (lively in a while), noise sensor (good)  
   
  ∼  
   
  ∼  
   
  moment, it seems will become lively. It can be checked again later on (∼). Only the most feasible alternatives (and combinations of them) are suggested based on their estimated duration, i.e., the remaining ones. The user selects the botanical garden and the modern art museum ( ), and she books them on the totem’s screen. At the garden, the user attends an interactive workshop experiencing the planting and growing of ﬂowers, by leveraging IoT devices e.g., to check the terrain status, water temperature, presence of nutrients, and cameras to monitor her ﬂowers on her smartphone in the next days. At the modern art museum she decides for an interactive exhibition with the given devices. When the visit to the museum is going to ﬁnish, the suitability to go to the food trucks area is computed by verifying if the user’s preferences (e.g., quietness of the place) are still accomplished. The IoT-Together Paradigm. Fig. 1 provides a logical view of the mixedinitiative paradigm. IoT Environment includes (intelligent) things, i.e., IoT devices, sensors, and actuators, that expose their atomic and more complex capabilities, IoT Environment Capabilities, e.g., turn on the light, set up interactive exhibition. Users use IoT environment capabilities to accomplish their User Goals that can be not fully speciﬁed (e.g., ﬁnd interesting smart city activities for three hours) and considering their preferences (e.g., the user wishes to walk). The IoT-Together core platform is key (software) to realize the mixed-initiative paradigm. It supports the synergistic collaboration between IoT Environments and Users to shape/co-generate (intelligent) IoT systems, including both hardware and software, that support users to reach their goals, given the available capabilities in the IoT environments. Within the paradigm, there is an Initial Interaction Point (e.g., the totem or the user’s smartphone) where at least the initial user-system interaction takes place. The shown options could be based  
   
  Shaping IoT Systems Together  
   
  225  
   
  Final IoT System [co-generated]  
   
  IoT Environment  
   
  Users  
   
  initial interaction point  
   
  IoT-Together core platform  
   
  IoT Environment Capabilities  
   
  User Goals G  
   
  G G''  
   
  G'  
   
  c  
   
  a  
   
  b  
   
  IoT-Together core platform Incremental IoT system co-generation Goal Management  
   
  Intelligent User Interface (IUI) Generation  
   
  Backend Generation  
   
  Learning Management (AI) Goal Learning  
   
  Interface Interaction Learning  
   
  Knowledge Management Context Management  
   
  (self-adaptation is cross-cutting)  
   
  Fig. 1. Logical view of the mixed-initiative paradigm.  
   
  e.g., on past learned interactions, goals, preferences/proﬁle from both her and others. The IoT-Together core platform has the following responsibilities. (i) Goal Management that concerns reasoning about users’ goals (e.g., ﬁnd interesting smart city activities for three hours) and their sub-goals (e.g., the interactive exhibition experience at the museum) that need to be achieved in order to achieve the goals. Ontologies, natural language processing, and goal models can be used to achieve this responsibility; (ii) Incremental IoT system cogeneration for enabling the interaction-driven co-generation of IoT systems. This involves the incremental and dynamic generation and adaptation of systems’ backends and intelligent user interfaces considering multiple aspects, including the degree of knowledge of users’ goals and preferences, context (e.g., users’ activities), and the capabilities of the systems (i.e., devices and applications). MultiAgent Systems, AI planning, feedback loops, low-code platforms, and machine learning could be exploited to realize this responsibility; (iii) Learning Management including Goal Learning (GL) and Interface Interaction Learning (IIL). The GL concerns learning the goals in the interest of users within speciﬁc context (e.g., time, user activity, location). Transfer learning could be applied between the user’s smartphone and totem to support the platform recommending relevant activities to the user. The IIL revolves around learning users’ interaction style (e.g., their ability to use technology) e.g., through reinforcement learning; (iv) Context Management concerns collecting and analyzing contextual information (that may be uncertain) about the environment (e.g., the estimated number of people in the cathedral), the proposed IoT systems, and the user. To achieve this, micro-services technologies could be used; (v) Knowledge Management concerns maintaining the knowledge retrieved by analyzing the collected contextual information (e.g., the current quietness level of the food trucks area) through technologies such as (non-)relational databases or ontologies. Lastly,  
   
  226  
   
  R. Spalazzese et al.  
   
  Self-adaptation is a cross-cutting aspect w.r.t. (i), ... (v) and is included in all of them. A ﬁnal IoT system will be co-generated, including all IoT devices and capabilities used to accomplish the user’s goal (e.g., the totem, presence and weather sensors, cameras, IoT technology at the garden and museum). The ﬁnal system can evolve/adapt, e.g., due to the user interaction, evolving goal and context. Also, the user may not interact with or be aware of every device (e.g., the presence sensor at the cathedral).  
   
  4  
   
  Discussion, Challenges, and Future Directions  
   
  IoT-Together is a paradigm characterized by a human perspective (e.g., users and software architects) and a system perspective. The degree of (un)known is a key aspect that permeates the paradigm: it relates to both users (e.g., they move around, their goals and preferences may not be fully speciﬁed) and systems (e.g., they may be brand new market products or users may be unfamiliar with their capabilities). Another dimension is the size of physical or logical boundaries, that can range from small, e.g., a hotel room or an open space oﬃce, to big like a whole smart city. This is shown in Fig. 2, where we also highlight four main challenge areas (discussed below) in relation to IoT-Together. The four areas are in addition to the well-known IoT challenges, e.g., interoperability, scalability, security, privacy, trust, energy eﬃciency. The Y-axis in Fig. 2 shows that the challenges can be looked upon from either the user or the IoT system perspectives. C1 - User Interface, Goal, and Preferences. By critically reﬂecting upon IoT-Together, we identify correlations between boundaries, user/IoT system (un)known, and challenges. In smaller and more known IoT settings, the IoT devices and their capabilities are more known to users. Consequently, their goals are often more known too. An example is when a researcher arrives into a shared work-space she has never visited before and needs to set up a meeting on-the-ﬂy. Fig. 2. IoT-Together Core Challenges. This setting, among all, seems the one with more manageable challenges, i.e., the user goal is clear, and is reasonable to assume that preferences about conﬁgurations setting are known or easy to be known, e.g., through an explicit request. Thus, it should be possible to build and show to the user intelligent user interfaces with a reasonable technical eﬀort, by using e.g., goal-driven and IUI approaches mentioned in Sect. 2.  
   
  Shaping IoT Systems Together  
   
  227  
   
  In a setting where boundaries are bigger, instead, and IoT devices and their capabilities are more unknown to users, also their needs and preferences are usually more open/underspeciﬁed. An example is the whole smart city scenario where the researcher has not been before and there are potentially nearly inﬁnite devices, capabilities and opportunities for new enhaced experiences. (However, users’ needs and preferences can be more open/underspeciﬁed also in more known and smaller IoT settings. An example could be if the researcher needs to do a check and use smart health services at the unknown city hospital.) In the bigger and more unknown setting, the challenges for the generation of intelligent IoT systems revolve around both user goal, preferences and interface; and both the user and the IoT system should interact and incrementally cogenerate intelligent IoT systems. From an architectural perspective, the paradigm should be engineered to meet both Quality of Service (QoS) (e.g., security, interoperability, scalability) and user’s QoE. If either of the qualities decreases (e.g., the systems’ performance degrades or the UI feels not easy to a user), the architecture of the running (ﬁnal) IoT system needs to self-adapt to improve the qualities. For instance, more computational resources could be dynamically allocated to improve the IoT system’s performance, or the ﬁnal IoT system could be adapted by changing the interaction mode to voice. C2 - Explainability. To identify a meaningful and useful IoT system, explainability is a core challenge to be addressed as part of the mixed-initiative interactions. During the user-system collaboration, the system needs to understand to some extent (part of) the user goal and preferences. While supporting users to better identify how to satisfy their current needs and preferences, the system should also constantly explain in an understandable way to diﬀerent users (with diﬀerent abilities) the meaning of/reasons for its proposed options, without overwhelming users with too many requests and/or irrelevant proposals. From an architectural perspective, architects should design IoT systems to execute suitable explanation algorithms, monitor users’ QoE, and adapt the explanation algorithms in the IoT systems components for a better user experience. C3 - Deployment. In the paradigm, user and system start interacting through an initial interaction point to identify a ﬁnal IoT system. The identiﬁcation/cogeneration process is usually heavily based on run-time situations and their related run-time data. For this, another key challenge to be addressed is the eﬀective and eﬃcient continuous run-time deployment of such intelligent IoT systems. From an architectural perspective, due to the dynamicity of IoT environments and the incremental co-generation of ﬁnal systems, the deployment topologies (nodes and their interconnections) of the systems need to be generated incrementally and dynamically across the Cloud-Edge continuum. For instance, the system supporting the planting is deployed when the user is at the garden and based on available sensors and devices.  
   
  228  
   
  R. Spalazzese et al.  
   
  C4 - Tradeoﬀs and Quality, Self-adaptation. Within IoT-Together, selfadaptation as well as tradeoﬀs w.r.t. quality are cross-cutting challenges that need to be continuously dealt with while addressing the above discussed challenges. IoT systems’ architects should be supported to understand how design decisions may impact the satisfaction of requirements. To conclude, when IoT systems or/and user needs and preferences are mainly unknown, underspeciﬁed, and volatile a good way to identify an intelligent IoT system oﬀering interesting enhanced experiences is through the IoT-Together mixed-initiative paradigm. We described the elements of the paradigm and highlighted related challenges. Much research is still needed within the IoT, especially under more unknown and bigger boundaries settings. As future work, we plan to investigate solutions realising IoT-Together and validate them in practice. Acknowledgments. This work was partially funded by the Knowledge Foundation (KK-Stiftelsen) via the project Intelligent and Trustworthy IoT Systems (Grant 20220087), and by the PON Cultural Heritage (AIM1880573), Italian National Project at GSSI. The author De Sanctis acknowledges the support of the MUR (Italy) Department of Excellence 2023–2027 for GSSI.  
   
  References 1. Br¨ oring, A., et al.: IntellIoT: intelligent IoT environments. In: Internet of Things - 5th The Global IoT Summit, GIoTS 2022. Revised Selected Papers, vol. 13533, pp. 55–68 (2022) 2. Weyns, D., Andersson, J., Caporuscio, M., Flammini, F., Kerren, A., L¨ owe, W.: A research agenda for smarter cyber-physical systems. J. Integr. Des. Process. Sci. 25(2), 27–47 (2021) 3. Hearst, M.A.: Trends & controversies: mixed-initiative interaction. IEEE Intell. Syst. 14(5), 14–23 (1999) 4. Horvitz, E.: Principles of mixed-initiative user interfaces. In: Williams, M.G., Altom, M.W. (eds.) Proceeding of the CHI 1999 Conference on Human Factors in Computing Systems: The CHI is the Limit, 1999, pp. 159–166. ACM (1999) 5. Jiang, S., Arkin, R.C.: Mixed-initiative human-robot interaction: deﬁnition, taxonomy, and survey. In: 2015 IEEE International Conference on Systems, Man, and Cybernetics, 2015, pp. 954–961. IEEE (2015) 6. Mayer, S., Verborgh, R., Kovatsch, M., Mattern, F.: Smart conﬁguration of smart environments. IEEE Trans. Autom. Sci. Eng. 13(3), 1247–1255 (2016) 7. Rahimi, H., Trentin, I.F., Ramparany, F., Boissier, O.: Q-smash: Q-learning-based self-adaptation of human-centered internet of things. In: IEEE/WIC/ACM International Conference on Web Intelligence and Intelligent Agent Technology, pp. 694–698 (2021) 8. Alkhabbas, F., Spalazzese, R., Davidsson, P.: ECo-IoT: an architectural approach for realizing emergent conﬁgurations in the internet of things. In: Software Architecture: 12th Europoean Conference on Software Architect, ECSA 2018, pp. 86–102 (2018) 9. De Sanctis, M., Muccini, H., Vaidhyanathan, K.: A user-driven adaptation approach for microservice-based IoT applications. In: IoT 2021: 11th International Conference on the Internet of Things, 2021, pp. 48–56. ACM (2021)  
   
  Shaping IoT Systems Together  
   
  229  
   
  10. Abughazala, M.B., Moghaddam, M.T., Muccini, H., Vaidhyanathan, K.: Human behavior-oriented architectural design. In: Biﬄ, S., Navarro, E., L¨ owe, W., Sirjani, M., Mirandola, R., Weyns, D. (eds.) ECSA 2021. LNCS, vol. 12857, pp. 134–143. Springer, Cham (2021). https://doi.org/10.1007/978-3-030-86044-8 9 11. Alkhabbas, F., Spalazzese, R., Davidsson, P.: Human-centric emergent conﬁgurations: supporting the user through self-conﬁguring IoT systems. In: Ayaz, H., Asgher, U., Paletta, L. (eds.) AHFE 2021. LNNS, vol. 259, pp. 411–418. Springer, Cham (2021). https://doi.org/10.1007/978-3-030-80285-1 48 ˇ 12. Brdnik, S., Heriˇcko, T., Sumak, B.: Intelligent user interfaces and their evaluation: a systematic mapping study. Sensors 22(15), 5830 (2022) 13. Yigitbas, E., Jovanovikj, I., Biermeier, K., Sauer, S., Engels, G.: Integrated modeldriven development of self-adaptive user interfaces. Softw. Syst. Model. 19, 1057– 1081 (2020) 14. Moghaddam, M.T., Alipour, M., Kjærgaard, M. B.: User interface and architecture adaption based on emotions and behaviors. In: IEEE 20th International Conference on Software Architecture Companion (ICSA-C), pp. 101–105 (2023) 15. Zouhaier, L., BenDalyHlaoui, Y., Ayed, L.B.: Adaptive user interface based on accessibility context. Multimedia Tools Appl., 1–30 (2023) 16. Madni, A.M., Madni, C.C., Lucero, S.D.: Leveraging digital twin technology in model-based systems engineering. Systems 7(1), 7 (2019) 17. Shim, J.P., Sharda, R., French, A.M., Syler, R.A., Patten, K.P.: The internet of things: multi-faceted research perspectives. Commun. Assoc. Inf. Syst. 46(1), 21 (2020) 18. Geetha, A., Kalaiselvi Geetha, M.: An appraisal on human-centered internet of things. In: Acharjya, D.P., Geetha, M.K. (eds.) Internet of Things: Novel Advances and Envisioned Applications. SBD, vol. 25, pp. 263–280. Springer, Cham (2017). https://doi.org/10.1007/978-3-319-53472-5 13 19. Alkhabbas, F., Alawadi, S., Spalazzese, R., Davidsson, P.: Activity recognition and user preference learning for automated conﬁguration of IoT environments. In: Proceedings of the 10th International Conference on the Internet of Things, pp. 1–8 (2020) 20. M¨ akitalo, N., et al.: Social devices: collaborative co-located interactions in a mobile cloud. In: Proceedings of the 11th International Conference on Mobile and Ubiquitous Multimedia (MUM 2012), pp. 1–10 (2012)  
   
  Software Architecture Implementation and Deployment  
   
  Analyzing the Evolution of Inter-package Dependencies in Operating Systems: A Case Study of Ubuntu Victor Prokhorenko1,2(B) , Chadni Islam3 , and Muhammad Ali Babar1,2 1  
   
  2  
   
  CREST - The Centre for Research on Engineering Software Technologies, The University of Adelaide, Adelaide, Australia {victor.prokhorenko,ali.babar}@adelaide.edu.au Cyber Security Cooperative Research Centre (CSCRC), Joondalup, Australia 3 Queensland University of Technology, Brisbane, Australia [email protected]   
   
  Abstract. An Operating System (OS) combines multiple interdependent software packages, which usually have their own independently developed architectures. When a multitude of independent packages are placed together in an OS, an implicit inter-package architecture is formed. For an evolutionary eﬀort, designers/developers of OS can greatly beneﬁt from fully understanding the system-wide dependency focused on individual ﬁles, speciﬁcally executable ﬁles, and dynamically loadable libraries. We propose a framework, DepEx, aimed at discovering the detailed package relations at the level of individual binary ﬁles and their associated evolutionary changes. We demonstrate the utility of DepEx by systematically investigating the evolution of a large-scale Open Source OS, Ubuntu. DepEx enabled us to systematically acquire and analyze the dependencies in diﬀerent versions of Ubuntu released between 2005 (5.04) to 2023 (23.04). Our analysis revealed various evolutionary trends in package management and their implications based on the analysis of the 84 consecutive versions available for download (these include beta versions). This study has enabled us to assert that DepEx can provide researchers and practitioners with a better understanding of the implicit software dependencies in order to improve the stability, performance, and functionality of their software as well as to reduce the risk of issues arising during maintenance, updating, or migration. Keywords: Dependency extraction · Package architecture · Binary-to-library dependencies · Package relation · Software coupling  
   
  1  
   
  Introduction  
   
  Combining multiple independent software packages together is commonly used to form complex inter-connected ecosystems. A typical example of such large software ecosystems is various Linux distributions. Such ecosystems tend to consist c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 233–249, 2023. https://doi.org/10.1007/978-3-031-42592-9_16  
   
  234  
   
  V. Prokhorenko et al.  
   
  of hundreds or thousands of packages, libraries, binaries, and conﬁguration ﬁles with an order of magnitude more dependencies among them [12,13]. Developers and researchers have expressed interest in software complexity measurement in an attempt to reason about characteristics of large code bases [29]. Software complexity is viewed as a result of diﬀerent design decisions and implementation speciﬁcs and is a crucial component of long-term eﬀects like the maintainability of software [14]. Although software complexity is a crucial consideration for package managers, Linux distributors, and maintainers, we currently have limited knowledge about the evolution of this complexity over the software lifespan. While the complexity of individual packages is tamed by their corresponding developers, combining thousands of packages materializes a new emergent layer of complexity. It is also uncertain whether diﬀerent metrics for measuring software complexity exhibit similar or varying patterns of evolution. A signiﬁcant amount of research has extensively explored source-level software complexity [2]. As a result, various complexity metrics have been deﬁned, such as cyclomatic, branching, or data ﬂow complexity [1,15]. These metrics are primarily used for software design, debugging, and optimization purposes [14]. These metrics are, however, not applicable when analyzing closed-source software distributed only in binary form without access to the source code. In such cases, binary dependency analysis is required to understand the interactions and dependencies between compiled binary executables. Additionally, even when source code is available, there may be situations where the compiled binary may behave diﬀerently from what is expected due to speciﬁc environment conﬁgurations. Thus, binary dependency analysis can provide a more accurate and complete understanding of run-time software behavior, which can be crucial for identifying potential issues or vulnerabilities. This work considers an OS as a whole rather than focusing on analyzing individual software binaries. Considering an OS enables the identiﬁcation of cross-application relations, which make up an emergent inter-package relation architecture instead of just the intra-package software complexity. We propose a framework that enables the extraction of binary-to-library dependencies and constructs a full OS dependency graph to obtain insights on overall OS complexity which we determine through inter-package dependency coupling. By coupling we mean any type of dependency of one code fragment on another (library inclusion, function call, etc.). Our study focused on Ubuntu as a case study to examine the evolution of large software ecosystems over almost two decades. Through empirical research and evidence-based ﬁndings, we aimed to assess the current state of package, library, and binary dependencies and identify areas for improvement in management tools, policies, and ecosystem analysis platforms. We believe that a deep understanding of emergent inter-package architecture resulting from combining a multitude of independently developed software subsystems would beneﬁt software developers and OS maintainers. The proposed techniques and tools are expected to minimize manual labor associated with multi-package maintenance.  
   
  Analyzing the Evolution of Inter-package Dependencies in OS  
   
  235  
   
  Following are the key contributions of our work – We have introduced a framework for dependency coupling analysis for multipackage software to extract the inter-package relations architecture that is applicable to a broader range of OS due to the binary-level analysis. – We have deﬁned four techniques to quantitatively measure software coupling in terms of executable and dynamically loadable library dependencies at different granularities. – We have investigated the evolution of Ubuntu OS in terms of the proposed library presence dependency type, which revealed the changes in OS-wide inter-package relations over time.  
   
  2 2.1  
   
  Background and Motivation Software Complexity  
   
  Throughout the lifetime of any software system, various code modiﬁcations must be implemented in order to adapt to ever-changing user requirements and environmental conditions. An intuitive expectation is that large and complex software systems may be more diﬃcult to update and maintain. Thus, in eﬀorts to gain a stricter deﬁnition of complexity, multiple code complexity measurement techniques, such as straightforward line count or cyclomatic complexity, have been proposed so far [1]. However, analyzing multiple diverse software systems as a whole is not trivial due to (i) lack of access to the source code of all third-party components, (ii) lack of formal interoperability speciﬁcation and (iii) highly dynamic state of execution environment at run time. Several techniques are typically employed to handle the growing complexity of large software systems (such as a full OS). For instance, the system package manager may track package dependency information at the OS level. This tracking enables detecting incompatibilities between separate software subsystems and repairing them if possible. Unfortunately, manual labor is commonly used in determining and maintaining information on such version-level incompatibilities [4]. Due to the large number of ﬁles in a typical OS, manual eﬀorts typically target only high-level dependency deﬁnitions, such as package level only [6]. As each package may consist of multiple ﬁles containing executable code (i.e., executable binaries and libraries), such package dependency understanding may not represent the dependencies precisely. Further challenges arise due to modern complex software systems commonly developed in various programming languages. For instance, purely-binary compiled languages are intertwined with interpreted script languages leading to execution ﬂow frequently being transferred between them. The dependency chains within such complex systems may propagate through a signiﬁcant portion of ﬁles in the ﬁle system through the indirect reliance of diﬀerent code fragments on each other. A typical example includes PHP web pages relying on the PHP interpreter, web server, and third-party PHP libraries. Such immediately obvious (direct) dependencies, in their turn, recursively rely on other system-provided  
   
  236  
   
  V. Prokhorenko et al.  
   
  and third-party libraries. Therefore we argue that automated and precise dependency tracking would beneﬁt software system maintainers and administrators and may provide useful insight to software developers. 2.2  
   
  Code Dependency Types  
   
  One piece of code can depend on another in numerous ways. For instance, within the source code analysis context, a function may call other functions. Similarly, class methods may work by invoking other class methods. These types of dependencies present in the same code base are well understood and routinely used in modern IDEs (Integrated Development Environments) to aid software developers. In contrast, cross-language code dependencies spanning across multiple independently developed software systems are less formal and challenging to identify. For instance, a PHP-oriented IDE would not detect incompatible changes in the libc library which is required by the PHP interpreter itself. Focusing solely on software running within the same OS while not taking network-based dependencies into consideration, we propose the following four conceptual types of dependencies suitable in the executable code analysis context. These four types include (i) the presence of third-party libraries, (ii) the extent of library coverage, (iii) library function call occurrences, and (iv) the run-time usage of functions (Fig. 1).  
   
  Fig. 1. Executable code dependency measurement approaches.  
   
  The third-party library presence dependency relates to ﬁle-level granularity. This type of dependency indicates a requirement for a dynamically loadable library to be present in the system for an executable binary to be able to load and start. In Windows-based systems, libraries and executables are denoted by .dll and .exe ﬁle extensions, while on Linux-based these are .so and typically extension-less ELF (Executable and Linkable File) correspondingly. While highlevel, this ﬁle granularity is crucial as a missing library ﬁle typically causes the executable ﬁle loader to indicate an error and prevents any further ﬁle execution. Coverage dependency focuses on the library fragments (e.g., functions or class methods) that a developer explicitly uses or relies on. This type of  
   
  Analyzing the Evolution of Inter-package Dependencies in OS  
   
  237  
   
  dependency refers to speciﬁc function existence requirements. Thus, the library coverage aspect reﬂects the degree of reliance on a given library by the executable. Depending on the OS, programming language, and execution environment, individual function-level requirements can be implemented in various ways. For instance, in the context of the Windows PE executable, the list of required functions is tied to a speciﬁc library. In contrast, the lists of required libraries and functions are independent in the Linux ELF executable [28]. These implementation speciﬁc diﬀerences complicate coverage analysis in the general case. Function occurrence dependency type attempts to provide further insight into the code dependency by observing that a single external function can be referred to multiple times in the original code. For instance, some heavily used functions can be mentioned all over the code, while some rarely used functions may only appear once. Extracting this type of dependency is extremely complicated and involves computationally-heavy disassembling of compiled code or parsing of interpreted languages. Initial unoptimized attempts revealed a signiﬁcant time overhead for extracting such occurrence-level dependencies. While certain optimizations can be taken for production-ready usage, it can be concluded that this type of analysis is currently unsuitable for real-time applications. Lastly, dependency usage refers to the actual run-time external code ﬂow control transfers (i.e., the actual function calls). This level of detail may, for example, reveal that one function call is contained within a high-count loop while other function calls may be a part of a condition rarely satisﬁed at run time. Run-time observation would reveal a deeper understanding of the level of reliance on third-party libraries in both cases. Despite seemingly most accurate and closest to reality, relying on this type of dependency suﬀers from a major drawback. Diﬀerent executions or instances of the same executable may exhibit diﬀerent behavior due to diﬀerent run-time conditions. In other words, observing a single execution does not guarantee to reveal all external code usage cases. Note that a purposefully crafted executable may incorporate external dependencies that would not be reﬂected using the proposed dependency measurement techniques. For instance, if an executable downloads code over the network and executes it in place, no third-party library references, function names, or function calls related to the downloaded code may be present in the original executable. Moreover, the downloaded code downloaded can be diﬀerent on each program invocation, making any dependency analysis futile in such a context. Based on the identiﬁed dependency types, we propose an extensible plugin-based framework suitable to extract code dependencies for various types of executable code.  
   
  3  
   
  Our Approach and Implementation  
   
  Analyzing the full ﬁle system enables a more complete and consistent understanding of the dependencies. Software developers only express a requirement for dynamically loadable library presence, but do not have actual guarantees of the library’s existence in a given system. We implement a Python-based proof of concept solution to analyze system-wide dependencies.  
   
  238  
   
  V. Prokhorenko et al.  
   
  On a conceptual level, our proposed approach for Dependency Extraction (DepEx consists of a ﬁle system scanner, a plugin dispatcher, multiple userdeﬁnable ﬁle-type-speciﬁc plugins, and the resulting database. The following steps provide an overview of the DepEx operation: – The existing dependency extraction plugins (also Python-based) are queried to prepare the list of all supported ﬁle types – The speciﬁed ﬁle system is iterated over and each ﬁle of a supported type is passed to a corresponding plugin for dependency extraction – The dependencies extracted by the plugin are stored in an SQLite database Having the knowledge of individual ﬁle type structures, each plugin is responsible for external dependency detection and extraction. Note that while the current implementation assumes one-to-one relation between ﬁle types and plugins, it is possible for multiple plugins to process the same ﬁles to extract diﬀerent types of dependencies. While we have implemented a proof of concept plugins for PHP, Bash, and, to a lesser degree, Python scripts, in this research we primarily focus on ELF executables and .so libraries with the library presence dependency. Once the unattended phase of the dependency extraction is complete, several interactive analysis and usage scenarios become accessible. These include visualization, statistical reporting, and forward and reverse update impact estimation. For instance, various system health characteristics, such as “number of missing libraries” or “number of executables with unfulﬁlled dependencies” can be queried and plotted if necessary. Similarly, update impact calculation enables obtaining the list of executables and libraries that would be potentially aﬀected in case a given library is updated. In order to aid comprehension of the large amounts of data collected, we developed a visualization subsystem. Using DOT language for graph representation enables rendering the resulting graphs using existing tools as well (such as GraphViz or Gephi). While the individual executable ﬁle graphs were readable, the full-system dependency graph was too cluttered for human comprehension. At this stage, interactive ﬁltering was implemented to allow the hiding of popular libraries responsible for most of the visual noise (as shown in Fig. 2b). We are also planning to implement automated ﬁltering based on various features, such as node type, sub-string matching, and popularity. Other auxiliary scripts for dependency graphs exploration include querying all binaries and libraries that depend on a given library (who-uses) and individual binary/library dependency graph generation (get-deps and get-all-deps). Individual library dependencies can also be visualized in a more detailed view.  
   
  4  
   
  Studying the Architectural Aspects of Ubuntu  
   
  We focus on the following Research Questions (RQs) to investigate the ﬁle-level package relation architecture in Ubuntu systems using DepEx. We considered the presence dependency in this case study. We collected and analyzed the dependencies of 84 consecutive live Ubuntu Linux images that span over 18 years of  
   
  Analyzing the Evolution of Inter-package Dependencies in OS  
   
  239  
   
  development and evolution. The research questions we primarily focus on revolve around the emergent inter-package OS-wide architecture implicitly forming as a result of combining multiple independent software packages as well as the related architectural changes observed throughout longer time periods. In addition, we investigate the complexity perception from the perspectives of individual software package developers and whole system maintainers. – RQ1. How do binary-to-library dependencies manifest in the Ubuntu OS in terms of a system-wide dependency graph? – RQ2. What is the diﬀerence between individual library complexity directly exposed to developers vs. overall internal system complexity that emerges as a result of combining multiple subsystems together (direct vs. recursive dependencies)? – RQ3. How does the whole Ubuntu OS binary-to-library dependency graph evolve over a longer period? Having high popularity, rich history, and open-source nature, Ubuntu serves as a comprehensive data source. Despite other Linux distributions, such as Alpine, gaining popularity, we were unable to ﬁnd another dataset comparable in size and quality. Speciﬁcally, older Alpine versions were unavailable for download and Debian produced fewer live images. Throughout the development of our DepEx framework, we relied on wellestablished existing open-source software, such as squashfs-tools1 , binutils2 and ldd3 . SquashFS-related tools were used to expose compressed live Ubuntu images for analysis. Note that diﬀerent versions of SquashFS had to be used depending on the age of the Ubuntu image. Binutils package, particularly the GNU nm tool, was used to extract ELF-speciﬁc data such as imported library names. Lastly, ldd was used to extract library search locations. Special precautions had to be taken to lookup for the library paths inside the mounted image rather than resolving paths within the host system that conducted the analysis. For this purpose, we relied on standard Linux chroot functionality. Solely mounting the Ubuntu ISO ﬁles directly does not provide access to the live ﬁle system, as another layer of compression is typically present for disk space optimization purposes. Thus, we implemented a two-step unpacking process to gain visibility of the inner live ﬁle system. Interestingly, extracting the images generated over 18 years revealed how live image preparation changed over time. We noticed diﬀerent compression techniques used throughout the time period analyzed that ranged from compressed loop files (cloop) to SquashFS versions 2.1–4.0. We also observed that modern SquashFS kernel modules could not transparently mount images compressed by older versions. Thus, we developed a supporting script to provide access to all of the downloaded images in a uniform manner. 1 2 3  
   
  https://github.com/plougher/squashfs-tools. https://www.gnu.org/software/binutils/. https://man7.org/linux/man-pages/man1/ldd.1.html.  
   
  240  
   
  V. Prokhorenko et al.  
   
  Using our DepEx framework, we recursively built the full library dependency graph for each identiﬁed executable using readelf, nm and ldconfig tools. Extracting library dependencies requires analyzing RPATH and RUNPATH variables, system library cache as well as the binary executable ﬁle path. Finally, we used an SQLite database to store the collected dependency data for all the scanned Ubuntu images. This data can be queried for further analysis and visualization.  
   
  5  
   
  Findings and Results  
   
  The dependency data extracted from a typical OS is a rich source of information on the high-level system architecture. In contrast to planned layer of architecture, this layer refers to the unwritten architectural aspects that emerge as a result of combining a multitude of independently-developed software packages. Coupled with temporal updates, this data can serve as a basis for a deeper system evolution trends analysis. For instance, long-term trends such as libraries gaining or losing popularity or executable complexity inﬂation may be detected. Predicting potential OS library or executable removal may help developers adjust the development plans. In addition, determining and removing unused libraries could be useful in optimizing disk space usage and reducing the attack surface. Throughout the data collection conducted, we focused on three key aspects. Firstly, we investigated the OS-level dependency graph as a whole (RQ1). Secondly, we examined various aspects of complexity in binary dependencies determined through coupling analysis (RQ2). Lastly, we analyzed evolutionary trends in the OS dependency graph (RQ3). 5.1  
   
  OS-Wide Dependency Graph  
   
  Analyzing the resulting SQLite database, which covers 84 Ubuntu images, revealed the following number of binaries, libraries and dependencies per image. We found that from Ubuntu 5.04 to 23.04 the number of binary executables ranged from 1519 to 2753 and the number of libraries ranged from 1683 to 3673. In terms of dependencies detected, the numbers ranged from 18 165 to 37 641 in the images scanned. A total of 408 364 binary and library ﬁles were processed to extract the dependencies, which returned almost 2 million dependencies. The total SQLite database size generated is over 83MB of raw dependency data. We noticed that highly popular libraries such as (libc) make the graphs unreadable. Thus we implemented ﬁltering out libraries from the sorted (by popularity) list of all the involved libraries. We observe that hiding the top 10– 15 libraries increases the readability of the whole system graph. Notably, loosely coupled subsystems, such as the networking subsystem, become apparent. The libraries presented alongside the diagram also provide insight into the relative popularity of individual libraries within a system. We have observed that number of libraries imported but not present in the system varied from 20 (v5.04) to 8 (v23.04) with the highest number being 92  
   
  Analyzing the Evolution of Inter-package Dependencies in OS  
   
  241  
   
  Fig. 2. Dependency visualization ﬁltering eﬀects.  
   
  (v21.10b). As a consequence, the number of other libraries directly impacted by the missing dependencies varied from 4 (v17.10 and v17.10.1) to 27 (v13.04 and v9.04). Similarly, we see that the number of unused libraries (i.e., not imported by any other library or executable) ranged from 1301 (v5.04) to 1666 (v23.04). These numbers constitute a signiﬁcant proportion of the total number of libraries included (around 77% and 62% respectively). Potential explanations for such a high number of unused libraries could be a) plugin-based applications that do not import libraries directly, b) “forgotten” legacy libraries and c) libraries shipped “just in case” for use by applications commonly installed at a later stage. 5.2  
   
  Dependencies Coupling Aspects  
   
  Software dependencies represent the reliance of a given piece of code on external code. In practice, software developers only deal with a subset of the code required for an application to run. A graphics-oriented library may expose a simpler set of functions to developers, while relying on a multitude of other complex hardwarespeciﬁc libraries to implement the advertised functionality. Thus, a complex and large code base is made to look simple from the developer’s perspective. This perception diﬀerence opens the possibility of measuring code coupling in direct and recursive ways. The direct coupling of an application reﬂects how many speciﬁc libraries a developer deals with explicitly. In contrast, recursive coupling takes all the underlying dependencies into consideration as well. In addition, there is an inherent asymmetry in dependency tracking. Forward tracking from a given binary to all the required libraries is trivial, as this information is contained within the binary. Reverse tracking from a given library to determine all the binaries and libraries that require the speciﬁed library is complicated, as this information is not stored explicitly. Reverse tracking essentially reﬂects the popularity of a given library and requires scanning the whole ﬁle system to be calculated. Thus we developed functionality to measure the (i) direct coupling, (ii) total (recursive) coupling, and (iii) library popularity.  
   
  242  
   
  V. Prokhorenko et al.  
   
  Figures 3a and 3b illustrate the changes in the average and maximum number of dependencies correspondingly. As can be seen from Fig. 3a, whereas the average total number of dependencies largely stays the same, developer-facing complexity tends to decrease over time. This indicates that developers tend to re-arrange code within libraries to minimize the coupling they face directly. The large spike in Fig. 3b is caused by the introduction of Gnome Shell in Ubuntu 17.10. We, therefore can conclude that while maintaining roughly the same external coupling, GNOME Shell has a complicated internal structure. Particularly, we found that gnome-control-center binary has the largest amount of dependencies. This is explained by the fact that the conﬁguration tool needs to interact with most of the GNOME Shell subsystems.  
   
  Fig. 3. Direct and recursive dependencies.  
   
  A complementary aspect of dependency coupling is popularity. We deﬁne library popularity through the number of other libraries or executables that depend on it. In other words, damaging or removing more popular libraries would impact a larger number of executables in a system. In terms of popularity, the top 10 most used libraries (i.e. imported from other libraries and executables) in Ubuntu are: libc (4397), libpthread (1438), libglib (1037), libgobject (945), libm (836), librt (719), libgthread (660), libgmodule (658), libgtk-x11 (656), libdl (601). The numbers alongside the libraries refer to the number of uses (i.e., library importing) averaged across all Ubuntu versions the library was present in. We notice that 7 out of the top 10 directly-coupled libraries relate to various GNOME subsystems while the other 3 relate to the Evolution mail client. Interestingly, the most compl ximian-connector-setup executable with 100 direct dependencies was only present in two Ubuntu versions. This likely indicates that such high coupling was not tolerated, leading to the application removal. Lastly, analyzing total coupling by taking recursive dependencies into account, we found the top 10 complex libraries and binaries: empathy-call (154), evolution-alarm-notify (156), gnome-control-center (273), gnome-todo (155), libvclplug gtk3lo (154), smbd.x86 64-linux-gnu (155), libiradio (158), gnome-initial-setup (169), libgrilo (158), shotwell-publishing (164).  
   
  Analyzing the Evolution of Inter-package Dependencies in OS  
   
  5.3  
   
  243  
   
  Dependency Graphs Evolutionary Trends  
   
  Running a large-scale analysis on a set of Linux distributions developed and released over 18 years revealed a number of shifts occurring in the domain. In constant eﬀorts to attract users, Ubuntu is known for conducting experiments, such as introducing new large software packages as a replacement for existing ones. For instance, the signiﬁcant dip in the number of dependencies on Fig. 4b is explained by the replacement of GNOME 2 with Unity. On a longer scale it is also visible that despite limited local successes of such experiments, the overall trend indicates a slow growth of the number of ﬁles and dependencies.  
   
  Fig. 4. Overview of ﬁle-level evolutionary trends.  
   
  Interestingly, we also observed a signiﬁcant amount of not explicitly required .so ﬁles are present in the system (Fig. 4a). In other words, up to 37% of libraries physically located in the ﬁle systems were not mentioned in the import tables of any of the binaries or libraries. This likely indicates that such libraries are primarily used as plugins and could be loaded at run-time through dynamic directory scanning if necessary. Note that these conditional dependencies may be impossible to detect in advance due to the unpredictable nature of external factors. For instance, a user controlled application conﬁguration can determine whether a given plugin library should be loaded at run time. The overall trend also hints that such a dynamic plugin-based approach gains popularity as the proportion of libraries not imported keeps steadily growing. Another observation discovered throughout our analysis relate to the longevity of the libraries and binaries in Ubuntu. Namely, while complex binaries are periodically removed in search of better alternatives, highly popular libraries tend to stay around. Once a popular library is introduced in a particular Ubuntu version, it is unlikely to be removed as such removal would impact all libraries and executables that rely on the library’s existence. Even internal code reorganizations aﬀecting highly popular libraries require extra care to maintain compatibility4 . 4  
   
  https://developers.redhat.com/articles/2021/12/17/why-glibc-234-removedlibpthread.  
   
  244  
   
  6  
   
  V. Prokhorenko et al.  
   
  Discussion  
   
  6.1  
   
  Threats to Validity  
   
  While we primarily focused on dependency-centric package management in Linux OS, other factors may explain some of the observations. Despite high popularity, packages might get removed from the system due to licensing, compatibility, security, or maintainability issues. Dependency analysis should, therefore, be coupled with change log analysis to verify and conﬁrm the ﬁndings. To enhance the external validity of our dependency analysis, we selected a highly popular Linux distribution. By including all of the available versions we expect our approach to be generalizable and applicable to a broader range of OSs. Widening the input data set on the time axis enabled the discovery of uncommon cases and long-term trends. Being well-maintained, Ubuntu served as a high-quality dataset. Legacy Ubuntu versions and their corresponding change logs were still available for download5 In contrast, Alpine (another popular Linux distribution) archives did not go far back in time. Moreover, the Alpine archives contained broken links for older versions, preventing image downloading. Similarly, while considering Debian systems, we discovered diﬀerent and incompatible system image layouts which would complicate the analysis. Primary threats to external validity are abrupt changes causing signiﬁcant paradigm shifts, lower granularities skewing the results, and implicit dependencies. Abrupt changes may be introduced throughout evolution. Such changes introduce incompatibilities, forcing to amend the scanning process accordingly. Notable examples we observed include compression algorithm changes, folder hierarchy alterations, and transition from RPATH to RUNPATH. We noticed a different layout of binary ﬁles in the ﬁle system that required consideration due to the changes introduced in Ubuntu 19.04. Speciﬁcally, /bin and /sbin directories were converted to symbolic links to /usr/bin and /usr/sbin correspondingly6 . Depending on whether 19.04 is being installed from scratch or on top of the previously installed version, the number of binaries may look like being suddenly doubled in version 19.04. We alleviated this problem by resolving symbolic links. In addition to library dependencies stored in executable binary ﬁle import tables, other types of coupling occur in practice. For instance, network communication, special ﬁles like Unix domain sockets, Inter-Process Communication (IPC) calls, message-oriented buses, and pipes provide various means of code interactions. Discovering such code coupling instances may not be possible in practice (e.g., new code fragments might be downloaded over a network). Taking into account these code coupling types may signiﬁcantly skew our ﬁndings.  
   
  5 6  
   
  Ubuntu wiki: Releases - https://wiki.ubuntu.com/Releases. https://lists.ubuntu.com/archives/ubuntu-devel-announce/2018-November/ 001253.html.  
   
  Analyzing the Evolution of Inter-package Dependencies in OS  
   
  6.2  
   
  245  
   
  Challenges and Limitations  
   
  The two primary technical challenges we encountered throughout our data collection and analysis are the large data set sizes and performance issues related to extracting dependencies at lower granularities. As the distributed Ubuntu images are growing in size, so do the number of executable ﬁles and their individual sizes. This steady growth is observed over all Ubuntu versions analyzed. For example, within 18 years analyzed, the live Ubuntu image size grew from 600 MB (version 5.04) to 3.7 GB (version 23.04). Likewise, the number of executable ﬁles experienced a 70% increase in size (1605 in 5.04, 2753 in 23.04). Through practical experiments, we established that restricting the dependency granularity is crucial to achieving acceptable processing speed as lower granularity dependency extraction incurs large overheads. Disassembling executable binaries to identify individual third-party library function calls slows the dependency extraction and incurs signiﬁcant memory overheads. For instance, we have observed cases of over-disassembly and analysis of a single executable taking 40 min on an average laptop-class CPU. Thus, while technically possible and potentially interesting to gain further insights, lower-level granularity analysis is out of reach for real-time applications we initially aimed for. At this stage, we restricted the analysis to the ﬁle level only.  
   
  7  
   
  Related Work  
   
  The prior work primarily revolves around two aspects, (i) diverse conceptual complexity metrics deﬁnitions and (ii) dependency extraction and analysis. Various types of software complexity metrics have been widely studied in the literature [19]. Some studies have focused on metrics that are useful in source code analysis but are not easily applicable in binary code analysis [1,2,16]. Others have discussed the deﬁciency of methods to obtain global dependency knowledge and the diﬃculty in visualizing the resulting graphs [10]. The use of software complexity metrics to detect vulnerabilities has also been investigated, with some studies proposing dependency-oriented and execution-time complexities [3]. Dependency extraction aspects and challenges have also been explored, with some studies focusing on speciﬁc languages or ecosystems [17,26]. Package management and dependency validation have been popular research topics, with a set of studies proposing methods to address issues arising from package evolution (e.g., splitting into multiple diﬀerent packages) [4–6]. User questions related to package management, such as calculating the consequences of removing or modifying a package, have also been explored [7,23]. Eﬃcient package management tools and query languages have been proposed, including tools for eﬃcient package management and relations lookup [8]. However, similar to software complexity metrics research eﬀorts, multiple studies have focused only on source-level rather than binary dependencies [9,20]. In eﬀorts to resolve binary compatibility issues, some works have investigated relying on version ranges rather than minimum version requirements [11].  
   
  246  
   
  V. Prokhorenko et al.  
   
  Unfortunately, the large downside of the proposed approach is the requirement of debug symbols availability, which is rare in commercial software. An interesting use of dependency extraction has been proposed for Windows executables for malware detection [24,27]. Taking the notion of the extent of a dependency into account enables detecting and eliminating insigniﬁcant dependencies [18]. Overall, it should be noted that dependency related studies primarily focus on source code dependency analysis and package-level relations [22,25] and do not typically examine software package evolution over time. We, therefore, conclude that a more precise ﬁle-based dependency extraction is an under researched area that might beneﬁt from providing better structural visibility for large-scale systems comprising multiple independently developed packages. We also see that understanding software evolution is essential for maintaining software, ensuring compatibility, and improving security. Having this understanding aids developers in making informed decisions about updates and maintenance, ensures software remains compatible with other systems, and reduces the risk of security issues. Additionally, understanding software evolution can lead to new innovations and improvements in software design and development.  
   
  8  
   
  Conclusion and Future Work  
   
  In this study, we introduce automated extraction of dependency graphs for a whole system at the executable ﬁles level (as opposed to manually maintained traditional package-level dependency graphs). The resulting system-wide dependency graph provides a high-level view of the OS architecture emerging from interactions between the diﬀerent subsystems and user packages. In addition, this study enabled the discovery of general high-level trends/common patterns in Ubuntu Linux architecture evolution over time. We also diﬀerentiate between developer-facing complexity (deﬁned through direct dependency coupling) and overall system complexity (deﬁned through recursive dependency coupling). The motivation behind such a separation is that developers typically deal with third-party libraries without having full visibility of the back-end side of the libraries. In other words, a developer may include one library, while the library itself can have a complicated graph of dependencies not directly visible to the developer. These invisible dependencies may cause software bloating and increase the attack surface. We believe the ﬁndings of this study will provide useful insights for software developers and OS maintainers in terms of gaining a holistic quantitative understanding of inter-package architecture management that would be useful, for example, in optimizing disk space and improving system maintainability. We have identiﬁed two main directions for future research lines. Speciﬁcally, expanding the dependency extraction approach to a wider set of platforms to support and more types of dependencies to extract. For future research, we aim to perform Windows-based analysis and implement support for other levels of granularity, such as individual function dependencies. Also, in contrast to the convenient, holistic ﬁle system structure used in live editions, non-live distribution variants are composed of multiple compressed packages, complicating the  
   
  Analyzing the Evolution of Inter-package Dependencies in OS  
   
  247  
   
  dependency extraction and analysis. Implementing analysis for such non-live distributions could be a potential future research line. As opposed to ﬁxed library imports, code fragments interacting through various communication channels are loosely coupled. Such non-obvious dependencies are not trivial to detect. For instance, changing code on one side of a UNIX pipe may negatively aﬀect the results of the next program in the pipeline. Furthermore, such dependencies may not be predeﬁned in advance and are only required intermittently while being completely unnoticeable most of the time. We believe that comprehensive and accurate detection of such concealed dependencies would greatly enhance the overall system architecture, evolution, and run-time operation understanding and visibility and enable early detection of potential compatibility breaks caused by code modiﬁcations. Acknowledgment. The work has been partially supported by the Cyber Security Research Centre Limited whose activities are partially funded by the Australian Government’s Cooperative Research Centres Programme.  
   
  Data Availability Statement. As the current project is funded by industry partners, we are unable to publish the source code at this stage. However, aiming to increase transparency and reproducibility in research, we have made the obtained dataset available for public access [21]. Researchers and interested parties can access the dataset and utilize it to replicate or build upon our ﬁndings.  
   
  References 1. Honglei, T., Wei, S., Yanan, Z.: The research on software metrics and software complexity metrics. In: International Forum on Computer Science-Technology and Applications, Chongqing, China 2009, pp. 131–136 (2009). https://doi.org/10. 1109/IFCSTA.2009.39 2. Yu, S., Zhou, S.: A survey on metric of software complexity. In: 2010 2nd IEEE International Conference on Information Management and Engineering, Chengdu, China, pp. 352–356 (2010). https://doi.org/10.1109/ICIME.2010.5477581 3. Shin, Y., Williams, L.: An initial study on the use of execution complexity metrics as indicators of software vulnerabilities. In: Proceedings of the 7th International Workshop on Software Engineering for Secure Systems (SESS 2011), pp. 1–7. Association for Computing Machinery, New York. https://doi.org/10.1145/ 1988630.1988632 4. Artho, C., Di Cosmo, R., Suzaki, K., Zacchiroli, S.: Sources of inter-package conﬂicts in debian (2011). arXiv preprint arXiv:1110.1354 5. de Sousa, O.F., de Menezes, M.A., Penna, T.J.: Analysis of the package dependency on debian gnu/linux. J. Comput. Interdisc. Sci. 1(2), 127–133 (2009) 6. Lan, Y.-Q., et al.: Extraction methods on Linux package dependency relations. In: 2009 International Conference on Information Engineering and Computer Science. IEEE (2009) 7. Mithun, X.L.E., van de Wetering, H.M.M.: Linux Package Dependency Visualization. Master’s Thesis at Department of Mathematics and Computer Science, pp. 1–64 (2009)  
   
  248  
   
  V. Prokhorenko et al.  
   
  8. Boender, J., Di Cosmo, R., Vouillon, J., Durak, B., Mancinelli, F.: Improving the quality of GNU/Linux distributions. In: 2008 32nd Annual IEEE International Computer Software and Applications Conference, pp. 1240–1246. IEEE (2008) 9. Lungu, M., Robbes, R., Lanza, M.: Recovering inter-project dependencies in software ecosystems. In: Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, pp. 309–312 (2010) 10. Wang, J., Wu, Q., Tan, Y., Xu, J., Sun, X.: A graph method of package dependency analysis on Linux Operating system. In: 2015 4th International Conference on Computer Science and Network Technology (ICCSNT), Harbin, pp. 412–415 (2015). https://doi.org/10.1109/ICCSNT.2015.7490780 11. Jia, Z., Li, S., Yu, T., Zeng, C., Xu, E., Liu, et al.: DepOwl: detecting dependency bugs to prevent compatibility failures. In: 2021 IEEE/ACM 43rd International Conference on Software Engineering (ICSE), pp. 86–98. IEEE (2021) 12. Spinellis, D., Avgeriou, P.: Evolution of the unix system architecture: an exploratory case study. IEEE Trans. Softw. Eng. 47(6), 1134–1163 (2021). https:// doi.org/10.1109/TSE.2019.2892149 13. Spinellis, D.: A repository with 44 years of unix evolution. In: 2015 IEEE/ACM 12th Working Conference on Mining Software Repositories, Florence, Italy, pp. 462–465 (2015). https://doi.org/10.1109/MSR.2015.64 14. Weyuker, E.J.: Evaluating software complexity measures. IEEE Trans. Softw. Eng. 14(9), 1357–1365 (1988). https://doi.org/10.1109/32.6178 15. Ebert, C., Cain, J., Antoniol, G., Counsell, S., Laplante, P.: Cyclomatic complexity. IEEE Softw. 33(6), 27–29 (2016). https://doi.org/10.1109/MS.2016.147 16. Zhang, M., Baddoo, N.: Performance comparison of software complexity metrics in an open source project. In: Abrahamsson, P., Baddoo, N., Margaria, T., Messnarz, R. (eds.) EuroSPI 2007. LNCS, vol. 4764, pp. 160–174. Springer, Heidelberg (2007). https://doi.org/10.1007/978-3-540-75381-0 15 17. Robillard, M.P.: Topology analysis of software dependencies. ACM Trans. Softw. Eng. Methodol. 17(4), 36 (2008). Article 18. https://doi.org/10.1145/13487689. 13487691 18. Cox, R.: Surviving software dependencies. Commun. ACM 62(9), 36–43 (2019) 19. J´ asz, J., et al.: Static execute after/before as a replacement of traditional software dependencies. In: 2008 IEEE International Conference on Software Maintenance. IEEE (2008) 20. Ossher, J., Bajracharya, S., Lopes, C.: Automated dependency resolution for open source software. In: 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010). IEEE (2010) 21. DepEx Dataset. https://ﬁgshare.com/s/ce3247b81fac82528495 22. LaBelle, N., Wallingford, E.: Inter-package dependency networks in open-source software. arXiv preprint cs/0411096 (2004) 23. Kikas, R., et al.: Structure and evolution of package dependency networks. In: 2017 IEEE/ACM 14th International Conference on Mining Software Repositories (MSR). IEEE (2017) 24. Narouei, M., et al.: DLLMiner: structural mining for malware detection. Secur. Commun. Netw. 8(18), 3311–3322 (2015) ´ The software package dependency networks of some Linux distri25. Horv´ ath, A.: butions. In: 2012 IEEE 4th International Conference on Nonlinear Science and Complexity (NSC). IEEE (2012) 26. Decan, A., Mens, T., Grosjean, P.: An empirical comparison of dependency network evolution in seven software packaging ecosystems. Empir. Softw. Eng. 24, 381–416 (2019)  
   
  Analyzing the Evolution of Inter-package Dependencies in OS  
   
  249  
   
  27. Xie, X., Wang, W.: Lightweight examination of dll environments in virtual machines to detect malware. In: Proceedings of the 4th ACM International Workshop on Security in Cloud Computing (2016) 28. TIS Committee. Tool interface standard (TIS) executable and linking format (ELF) speciﬁcation version 1.2 (1995) 29. Alakus, T.B., Das, R., Turkoglu, I.: An overview of quality metrics used in estimating software faults. In: 2019 International Artiﬁcial Intelligence and Data Processing Symposium (IDAP), pp. 1–6. IEEE (2019)  
   
  A Graph-Based Java Projects Representation for Antipatterns Detection Roberta Capuano(B)  
   
  and Henry Muccini  
   
  University of L’Aquila, L’Aquila, Italy {roberta.capuano,henry.muccini}@univaq.it  
   
  Abstract. The identiﬁcation and resolution of antipatterns in legacy Java code is a crucial process that can enhance the overall quality of software. However, detecting these antipatterns is often challenging, especially in large-scale projects where the codebase is complex and extensive. Relying solely on developers’ knowledge and expertise to identify antipatterns can be time-consuming, labor-intensive, and may result in missed opportunities to improve code quality. To address this challenge, this paper proposes a semi-automatic approach to antipattern detection in Java code-based systems. The approach involves the use of a graph-based representation of the software system, which captures the structural aspects of the code, such as classes, methods and their relations. The approach also employs mathematical rules to identify three common antipatterns: God Class, Circuitous Treasure Hunt, and Empty Semi-Truck. The proposed semi-automatic approach can support developers in identifying and resolving antipatterns that aﬀect legacy code. By detecting these antipatterns, developers can improve software quality, maintainability, and reduce technical debt. Overall, this research oﬀers a promising solution for detecting antipatterns in Java code through a semi-automatic approach, which can aid in the refactoring of legacy code.  
   
  Keywords: Refactoring  
   
  1  
   
  · Antipatterns · Java code analysis  
   
  Introduction  
   
  Software maintenance and evolution are crucial stages in the software development life cycle, aimed at improving code quality, enhancing extensibility, and ensuring maintainability [1,2]. As software systems increase in size and complexity, addressing issues becomes progressively challenging. These issues leading to poor software quality, are commonly addressed through software refactoring, which involves improving the code structure while preserving its behavior [3]. To facilitate the refactoring process, design patterns and antipatterns are commonly used as guiding principles [4]. Design patterns oﬀer established and experience-based solutions to common software development problems, providing c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 250–265, 2023. https://doi.org/10.1007/978-3-031-42592-9_17  
   
  A Graph-Based Java Projects Representation for Antipatterns Detection  
   
  251  
   
  adaptable solutions that can be tailored to speciﬁc contexts. They serve as a basis for best practices in software system design and enable knowledge reuse across diﬀerent software systems. Conversely, antipatterns document recurring suboptimal solutions to common design problems that lead to negative consequences. They identify “bad practices” in software development and oﬀer potential solutions to rectify them. Antipatterns can be used in software development to tackle architectural, design, and development problems. Identifying antipatterns early on can prevent issues and improve software quality [5]. During refactoring, understanding the software is crucial. Techniques like static and dynamic analysis are commonly employed. Diﬀerent graphs, such as the Data Flow Graph (DFG) and Control Flow Graph (CFG), capture data and control ﬂow between program elements [6]. The Program Dependence Graph (PDG) combines data and control dependencies in a uniﬁed graph for a procedure. The System Dependence Graph (SDG) represents inter-procedural dependencies, including program dependencies and procedural calls across procedures [7]. SDGs, also known as call graphs, are widely used in program analysis and software testing [8,9]. For the best of our knowledge, there exist a lack in the literature, in addressesing the antipatterns detection problem analysing a graph representation of the system. In this paper, we propose a semi-automatic approach for detecting three antipatterns in Java projects: God Class, Circuitous Treasure Hunt, and Empty Semi-Truck. Our approach leverages a graph representation of the software projects, constructed through static code analysis. By formulating the selected antipatterns as mathematical problems on the constructed graph representation, we identify their potential instances within the software project. The resulting detection mechanism provides developers with actionable insights for refactoring eﬀorts. The main contributions of this paper can be summarized as follows: – Introduction of a graph representation tailored to Java software projects, providing a comprehensive view of the codebase and enhancing understanding of its underlying structure. To that purpose, we developed a Java parser that, based on the Java 9 grammar, automatically generates the graph-based representation of the system. – Presentation of a mathematical formulation for the detection of potential instances of the God Classes, Circuitous Treasure Hunts, and Empty SemiTruck antipatterns within the constructed graph representation. To help the reader in the understanding of the formulations, we provide an example of application on an open-source Java projects called PetClinic. The paper is organized as follows: Sect. 2 presents the proposed approach for constructing the graph-based representation of Java projects, capturing the codebase relationships. It also includes the implementation of the automatic approach to graph generation. Section 3 introduces the mathematical formulation used to detect the three mentioned performance antipatterns. The PetClinic application is analyzed as an example of antipattern detection. Section 4 presents related work on software representation through graphs and antipattern detection, highlighting the advantages of our approach and its limitations. Finally, Sect. 5 concludes the paper.  
   
  252  
   
  2  
   
  R. Capuano and H. Muccini  
   
  Proposed Approach for Graph Construction  
   
  The graph-based representation of the system presented in this paper is generated automatically through static code analysis. The system is modeled as a directed graph denoted as G = (V, E), where the set of nodes is denoted as V , while the set of edges is referred to as E. We establish the core elements to be represented as a node in the graph to facilitate the antipatterns detection. Thus, we deﬁne the set of nodes V as a combination of two distinct sets: V = M ∪ C. The initial set M consists of nodes that represent methods, whereas the set C comprises nodes that represent classes. The deﬁnitions of these sets are as follows: M = {m1 , m2 , ..., mk C = {c1 , c2 , ..., cn  
   
  |  
   
  mj  
   
  | ci  
   
  is a Method ∀ j ∈ 1, ..., k} is a Class ∀ i ∈ 1, ...n}  
   
  (1) (2)  
   
  The relationships between classes and methods are represented through a comprehensive set of edges denoted as E. In the following subsections, we introduce and categorize the relationships based on the nodes involved. 2.1  
   
  Relations Between Classes  
   
  Our investigation primarily focuses on analyzing class relationships to uncover the intricate structure and dependencies inherent in the system, thereby providing valuable insights into its underlying architecture. In this study, we consider two general classes, referred to as c1 and c2 , both belonging to the set of classes C. We have identiﬁed four types of relationships between these classes: implements, imports, and composed by. However, the exist relationship will not be discussed further in this paper due to limited space constraints and its exclusion from the antipatterns detection process. implements. The implements relationship provides insights into the interdependencies and interactions within a software system. When class c1 implements class i1 , the implements relationship is established as (c1 , i1 ) ∈ E. Please note that interfaces and abstract classes are nodes in the class relationship graph. By establishing the implements relationship, class c1 realizes the speciﬁed methods and behaviors encapsulated by class i1 . Figure 1a depicts a scenario where class c1 eﬀectively implements the methods and behaviors speciﬁed by interface i1 . The relation is represented by the directed arrow from class c1 to interface i1 .  
   
  Fig. 1. Relations between classes.  
   
  A Graph-Based Java Projects Representation for Antipatterns Detection  
   
  253  
   
  imports. The imports relationship represents a dependency between classes, where one class relies on another for speciﬁc functionality. If class c1 imports class c2 , it establishes the imports relationship (c1 , c2 ) ∈ E and is represented in Fig. 1b by the directed arrow from c1 to c2 . This relationship highlights the dependency of class c1 on class c2 for the necessary functionality. composed by. The composed by relationship signiﬁes the composition and aggregation of classes in a system. Note that, if the class c1 is composed by the class c2 , than c1 has an attribute of type c2 . Thus, if class c1 is composed or aggregated by class c2 , then the edge (c1 , c2 ) ∈ E is created. Figure 1c provides an example of the composed by relationship where class c1 is composed or aggregated by class c2 . The relationship is represented by the directed arrow from c1 to c2 . Understanding the composed by relationship provides insights into the structural organization of classes in the system, showcasing how they are composed or aggregated to create more complex entities. 2.2  
   
  Relations Between Classes and Methods  
   
  Another type of relationships that we analyze are those that exist between classes and methods. These relationships play a crucial role in understanding the interactions and dependencies within a software system. Speciﬁcally, we consider four types of relationships: owns, uses as var, uses as arg, and returns. For the sake of space, we do not deal with uses as var, uses as arg, and returns relationship which deﬁnition can be found in the readme ﬁle of the GitHub repository1 . For the sake of exempliﬁcation, in the following we consider two classes, c1 , c2 ∈ C ⊂ V and a method m1 ∈ M ⊂ V . owns. The owns relationship is essential for organizing and deﬁning software systems. It allows classes to manage and manipulate methods eﬃciently, leading to coherent designs. When a class owns a method, denoted as (c1 , m1 ) ∈ E, it takes responsibility for its implementation and accessibility within its scope. This relationship enables encapsulation, with the class gaining authority over the owned method. Class c1 owning method m1 is visually represented in Fig. 2 as a directed edge outgoing from c1 . and incoming in m1 .  
   
  Fig. 2. Owns relation between classes and methods.  
   
  1  
   
  https://github.com/conferenceRepoSubmission/ECSA23.  
   
  254  
   
  2.3  
   
  R. Capuano and H. Muccini  
   
  Relations Between Methods  
   
  In the scope of graph representation for Java systems outlined in this paper, we have speciﬁcally focused on the calls relationship as the sole relationship between methods that is crucial for our objectives. The calls relationship denotes the invocation of one method by another method within the system. The calls relationship as the primary connection that adequately represents the method-level dependencies essential to achieving our objectives. By leveraging this relationship, we can establish a comprehensive understanding of how methods interact and rely on one another within the Java system. If we have two methods, m1 , m2 ∈ M , where m1 calls m2 , we represent this relationship as (m1 , m2 ) ∈ E. This relationship captures the fundamental dependencies and interactions between methods, allowing us to analyze the control ﬂow and data ﬂow within the system. Figure 3 depicts an example of the calls relationship. Thus, if the method m1 calls method m2 , then a direct edge is created.  
   
  Fig. 3. calls relation between methods.  
   
  2.4  
   
  Automatic Graph Generation: Tool Implementation  
   
  The system’s graph representation tool was developed to capture the relationships between classes and methods in a Java project. To accomplish this, the Java source code ﬁles are parsed using a customized parser implemented on top of ANTLR 2 and the Java 9 grammar definition 3 . ANTLR is conﬁgured to generate a Python3 -based Java lexer and Java parser skeleton. This parser skeleton is then utilized in a custom Python3 script, which extracts class and method deﬁnitions, along with the relationships speciﬁed in the previous section, to create a structured representation. The script can handle data from multiple Java source ﬁles and complete codebases, consolidating them into a uniﬁed data structure that does not consider the native Java classes as for example the class “Class”. The resulting graph is constructed using the Neo4j 4 graph-based database management system (DBMS) and its oﬃcial Python3 library. The tool, described in this paper, is available on a GitHub repository5 . To test the implemented tool and provide examples on how to apply the mathematical formulations for antipattern detection presented in Sect. 3, the spring-petclinic 6 open source Java project has been used. We decided to analyse this project since it has been largely 2 3 4 5 6  
   
  https://www.antlr.org/. https://github.com/antlr/grammars\discretionary-v4. https://neo4j.com/. https://github.com/conferenceRepoSubmission/ECSA23. https://github.com/spring-projects/spring-petclinic.  
   
  A Graph-Based Java Projects Representation for Antipatterns Detection  
   
  255  
   
  stuided in the literature for diﬀerent purposes such as architectural refactoring of monoliths [30], architectural performance models extraction [31], and performance optimization using genetics algorithms [32].  
   
  3  
   
  Antipatterns Mathematical Formulation  
   
  In the forthcoming subsections, we will introduce the mathematical formulations of three speciﬁc antipatterns: God Class, Circuitous Treasure Hunt, and Empty Semi-Truck. We decided to analyse those three antipatterns since they are largely discussed in the litterature, giving us the opportunity to evaluate the results of the application of our approach. Each mathematical formulation will be applied on the PetClinic project to exemplify their application. Using the mathematical models, we aim to identify potential instances of these antipatterns to be considered in the refactoring process. 3.1  
   
  God Class Antipattern: Mathematical Formulation  
   
  The God Class antipattern occurs when a class takes on excessive responsibilities and violates the Single Responsibility Principle [24,26,27]. The problem arises when a class performs all of the application’s work or holds all of its data, leading to increased message traﬃc and degraded performance. The recommended solution involves redistributing intelligence across top-level classes, achieving a balanced distribution of data and behavior throughout the system. To identify instances of the God Class antipattern within the graph representation, a metric C has been devised based on the class nodes’ incoming and outgoing edges. The metric, denoted as C(c), quantiﬁes the complexity of a class node c ∈ C ⊂ V relative to the total number of nodes N = |V | in the graph. A high number of connections indicates a God Class burdened with numerous relationships and functionality. The metric is calculated using the formula: C(c) =  
   
  I(c) + O(c) N  
   
  (3)  
   
  In the given formula, I(c) represents incoming edges, O(c) represents outgoing edges, and N represents the total number of nodes in the graph (including classes and methods). In the context of the modeled graph, the calculation of the metric C(c) considers the following edges: – owns: given a class c ∈ C ⊂ V , we analyse all its outgoing edges labeled as owns. As already described, the owns relation connect the class with each of its methods. Thus, we can recognize the number of method in the class. Indeed, a class that contains to many methods have an high probability to expose to many functionalities having high responsibility. – import: given a class c ∈ C ⊂ V , we count both the incoming and outgoing edges of this type. On one hand, if the class c imports a lot of classes, there is an high probability that it will be used for many funtionalities violating  
   
  256  
   
  R. Capuano and H. Muccini  
   
  the principle of single responsibility. On the other hand, if c is imported into many classes, this means that it is required to performs diﬀerent operations. This situation may represent a high degree of coupling. – implements: given a class c ∈ C ⊂ V , that implements interfaces, we consider all the outgoing edges of this type. If a class implements a lot of interfaces, there is an high probability that the class has to many responsibility. By comparing the calculated values across class nodes, excessively connected classes, known as God Classes, can be identiﬁed. This metric helps detect and assess God Classes, allowing developers to address design issues and improve software quality and maintainability. To identify instances of God Classes, a threshold value T is established. If the calculated metric C(c) for a class node c ∈ C ⊂ V exceeds the threshold value (C(c) > T ), the corresponding class node is classiﬁed as a God Class. Thus, the presence of the God Class antipattern within the graph can be evaluated using the mathematical expression: ∀c ∈ C, if C(c) > T , thencis aGod Class.  
   
  (4)  
   
  The threshold value T is speciﬁc to the domain and may vary across diﬀerent projects. By applying this mathematical expression software developers and analysts can eﬀectively detect potential God Classes within the graph representation of the system. Example. In the following we provide an example of the detection of this antipatterns into the PetClinic application. o this purpose, we generated the following Cypher code running on the Neo4j Graph to retreive all the information needed to evaluate the metric C(c). Table 1 reports the ﬁrst six results of the Cypher query. MATCH (c:Class) RETURN c.name, size([o=(c)-[:OWNS]-()|o]) AS ownsOutgoing, size([i1=(c)-[:IMPORTS]-()|i1]) AS imports, size([i2=(c)-[:IMPLEMENTS]-()|i2]) AS implements, (size([o=(c)-[:OWNS]-()|o]) +size([i1=(c)-[:IMPORTS]-()|i1]) +size([i2=(c)-[:IMPLEMENTS]-()|i2])) AS totalEdges, (size([o=(c)-[:OWNS]-()|o]) +size([i1=(c)-[:IMPORTS]-()|i1]) +size([i2=(c)-[:IMPLEMENTS]-()|i2]))/187.0 AS complexity, ORDER BY (complexity) DESC  
   
  If we consider the threashold T > 0.9, the classes Owner and Pet reveal the possible God Class antipattern. Figure 4 highlights all the relationship of type owns, implements, and import in which the class Owner is involved.  
   
  A Graph-Based Java Projects Representation for Antipatterns Detection  
   
  257  
   
  Table 1. Results of the Cypher Query for the God Class Antipattern. c.name  
   
  ownsOutgoing imports implements totalEdges complexity  
   
  “Owner”  
   
  11  
   
  10  
   
  0  
   
  21  
   
  0.11229946  
   
  “Pet”  
   
  7  
   
  13  
   
  0  
   
  20  
   
  0.10695187  
   
  “Vet”  
   
  6  
   
  10  
   
  0  
   
  16  
   
  0.08556149  
   
  “OwnerController” 12  
   
  2  
   
  0  
   
  14  
   
  0.07486631  
   
  “PetController”  
   
  10  
   
  2  
   
  0  
   
  12  
   
  0.06417112  
   
  4  
   
  5  
   
  0  
   
  9  
   
  0.04812834  
   
  “Visit”  
   
  Fig. 4. God Class - Example: Class Owner.  
   
  3.2  
   
  Circuitous Treasure Hunt Antipattern: Mathematical Formulation  
   
  The Circuitous Treasure Hunt antipattern is distinguished by an extended sequence of method invocations or attribute accesses spanning across multiple classes degrading the software performance [24,25,27]. To detect the Circuitous Treasure Hunt antipattern in the graph representation, we use a metric that measures the length and complexity of method call chains. The metric is based on the idea that a long and convoluted call chain indicates participation in the antipattern. To this end, we introduce the metric C(m) for a method node m ∈ M ⊂ V , deﬁned as follows: C(m) = L(m) × W (m)  
   
  (5)  
   
  In the above formula: – L(m) denotes the length of the method call chain originating from the method node m. The recursive deﬁnition of L(m) is as follows:  0 ∀ m ∈ M s.t.  m ∈ M s.t. (m, m ) ∈ E (6) L(m) = 1 + max(L(m )) ∀ m ∈ M s.t. (m, m ) ∈ E  
   
  258  
   
  R. Capuano and H. Muccini  
   
  Thus, the value L(m) is equal to 0 if m lacks outgoing edges representing method call. Otherwise, the value is set to 1 + max(L(m )) for all m such that m calls m . – W (m) signiﬁes the weight of the method node m, reﬂecting its complexity. We deﬁne W (m) as follows: W (m) = N (m) + 1  
   
  (7)  
   
  Note that N (m) represents the count of outgoing edges from m that pertain to method calls, incremented by one to avoid multiplication by zero in formula (5) when m lacks outgoing edges representing method calls. Note that W (m) is necessary to avoid that wrapper and helper function are wrongly detected as Circuitous Threasure Hunt. Thus, the parameter is used to improve the trustability of the formula. Considering the graph-based representation of the system, this antipattern can be recognized on a method m ∈ M ⊂ V by analysing its outgoing edges of type calls. For the purpose of identifying the Circuitous Treasure Hunt antipattern, a threshold value T is established. If the calculated metric C(m) for a method node m exceeds the predeﬁned threshold value (C(m) > T ), the corresponding method node is considered to be part of the antipattern. Consequently, we formulate the mathematical expression to assess the presence of the Circuitous Treasure Hunt antipattern within the graph as follows: ∀m ∈ M, if C(m) > T, then mis part of theCircuitous Treasure Hunt.  
   
  (8)  
   
  Note that the threshold value T is context-dependent and may vary based on the speciﬁc characteristics of the project. The utilization of this mathematical expression empowers software developers and analysts to eﬀectively detect instances of the Circuitous Treasure Hunt antipattern within the system’s graph representation. Example. In the following we provide an example of the detection of this antipatterns into the PetClinic application. To this purpose we created the Cypher query shown in Fig. 5. The query is performed to evaluate the parameter L(m) = 4. Considering, the number of outgoing edges of type calls of the method m processNewVisitForm, its weight results to be W (m) = 3. Thus, in this case the metric is equal to C(m) = 4 × 3 = 12. On the other hand, the same metric for the length of the method m loadPetWithVisit is W (m ) = 2. Thus, in this case the metric results to be C(m ) = 4 × 2 = 8. If we consider the threashold T = 8, then we can consider the method m named processNewVisitForm as a part of a potential Circuitous Threasure Hunt.  
   
  A Graph-Based Java Projects Representation for Antipatterns Detection  
   
  259  
   
  Fig. 5. Circuitous Treasure Hunt - Example.  
   
  3.3  
   
  Empty Semi Truck Antipattern: Mathematical Formulation  
   
  The Empty Semi-Truck antipattern occurs when a class lacks attributes or methods and serves solely as a namespace or grouping mechanism [24,26]. It represents a situation where the class lacks functionality and is used only for organizing or categorizing elements. To identify this antipattern within the graph-based representation of the system, we introduce a metric that gauges the emptiness of a class node. The emptiness metric E(c) for a class node c is deﬁned as follows: E(c) = F (c) + M (c)  
   
  (9)  
   
  In the provided formula, F (c) denotes the number of attributes associated with the class node, whereas M (c) signiﬁes the number of methods associated with the class node c. To evaluate if a class c represent this antipattern, we evaluate two types of edges: – composed by: the sum of the outgoing edges of this type, represents the number of ﬁeld of the class c ∈ C ⊂ V . – owns: the number of outgoing edges of this type, represents the number of methods associated to the node class c ∈ C ⊂ V . To detect the Empty Semi-Truck antipattern, a threshold value T is established. If the calculated emptiness metric E(c) for a class node c falls below the predeﬁned threshold (E(c) < T ), the class node c is identiﬁed as part of the potential antipattern. Thus, the related mathematical expression is formulated as follows: ∀c ∈ C, if E(c) < T , then c is part of the Empty Semi-Truk.  
   
  (10)  
   
  Example. In the following we provide an example of the detection of this antipatterns into the PetClinic application. To this purpose we created the following Cypher query to extract all the composed by and owns relationship in wich the class c is involved. Thus, the metric E(c) has been evaluated by following the proposed formula. Table 2 shows the ﬁrst six results of the created query.  
   
  260  
   
  R. Capuano and H. Muccini  
   
  MATCH (c:Class) RETURN c.name, size([o=(c)-[:COMPOSED_BY]-()|o]) AS compositionsNumber, size([i1=(c)-[:OWNS]-()|i1]) AS methodsNumber, size([o=(c)-[:COMPOSED_BY]-()|o]) +size([i1=(c)-[:OWNS]-()|i1]) AS complexity ORDER BY complexity  
   
  Table 2. Results of the Cypher Query for the Empty-Semy Truck Antipattern. c.name  
   
  4  
   
  compositionsNumber methodsNumber complexity  
   
  “Visit”  
   
  1  
   
  0  
   
  1  
   
  “OwnerController”  
   
  1  
   
  0  
   
  1  
   
  “PetType”  
   
  1  
   
  0  
   
  1  
   
  “SetVisit”  
   
  1  
   
  0  
   
  1  
   
  “PetController”  
   
  1  
   
  0  
   
  1  
   
  “PetTypeFormatter” 1  
   
  0  
   
  1  
   
  Related Work  
   
  In recent years, there has been a growing interest in the ﬁeld of software engineering to develop eﬀective techniques for refactoring and improving the quality of software systems. In this context two types of studies can be identiﬁed. On one hand there are scientiﬁc works addressing the challenge of software comprehension through graph-based representation of the software. On the other hand, researchers have explored various approaches to address common code smells and antipatterns in software projects. In this section we will present the main contributions in the ﬁeld, comparing them to our work. 4.1  
   
  Graph-Based Representation of Object-Oriented Projects  
   
  In the realm of representing dependency relationships, various language-speciﬁc graph variations have been proposed for C++ [14–17] and Java programs. These variations aim to capture the interdependencies among elements within the program. One such representation is the call-based object-oriented system dependence graph (COSDG), which incorporates additional annotations to account for calling context and method visibility details. Several studies have employed and advocated for the use of COSDG in their research [18,19]. Another notable representation is the Java software dependence graph (JSDG), which comprises multiple dependence graphs that depict control, data, and call dependencies among diﬀerent program elements. JSDG has gained extensive usage within the Java context [20]. In order to enhance the capabilities of JSDG, Zhao proposed  
   
  A Graph-Based Java Projects Representation for Antipatterns Detection  
   
  261  
   
  an augmented version known as the Java system dependence graph (JSDG+), which includes a specialized mechanism to handle polymorphism and interfaces, thereby improving the representation of dependencies in Java programs [21]. Building upon JSDG, JavaPDG provides a static analyzer for Java bytecode as well as a browser for visualizing various graphical representations, such as the procedure dependence graph, system dependence graph, control ﬂow graph, and call graph [20,22]. Additionally, an improved version of JavaPDG called jpdg focuses speciﬁcally on enhancing the representation of program dependence graphs (PDGs) for code mining purposes [22,23]. Our proposed tool for graph-based representation carefully analyzes the relationships between classes and methods. In contrast to the existing works, our approach utilizes a simpler notation and focuses solely on capturing the essential elements required for detecting antipatterns. As a result, our approach achieves easier graph generation and, unlike other tools, it has been speciﬁcally designed for the purpose of antipattern detection. 4.2  
   
  Antipatterns Detection  
   
  Authors in [10] introduce MicroART, an Architecture Recovery Tool systems based on microservices. Utilizing Model-Driven Engineering principles, this tool generates software architecture models for microservice-based systems. These models can be managed by software architects to support system maintenance and evolvability. In [11] the PADRE tool is presented, which detects performance antipatterns in UML models. The tool also applies refactoring techniques to eliminate identiﬁed antipatterns from the UML models. Similarly, in [12], the authors propose a technique for enhancing the quality of use case models, demonstrated using a real-world system. This method detects antipattern defects in use case models and automatically refactors them through appropriate model transformations. Authors in [13] propose an algorithm that analyzes multiple architectural antipatterns representing the modularization problems to identify refactoring opportunities. The recommendations aim to minimize changes that have a signiﬁcant impact on the overall system quality. In the study presented in [28], authors provide a systematic process, to identify and resolve performance issues with runtime data by using load testing and and data proﬁling. Similarly, authors in [29], presents a tool for antipatterns detection that uses Java proﬁlers allowing to perform the dinamic analysis of the system. It is noticeable to present two industrial project: Arcan 7 and Designate 8 . The ﬁrst, helps discovering the architectural debt to prevent its accumulation. The second, identiﬁes architecture smells and visualize them. Each detected smell is presented with its deﬁnition and its cause. Our work diﬀers from the presented because of the following advantages: – Our approach does not require the use of UML models, which can be limiting. Nowadays, with the increasing adoption of agile development processes, there 7 8  
   
  https://www.arcan.tech/. https://www.designite-tools.com/.  
   
  262  
   
  R. Capuano and H. Muccini  
   
  is a lack of documentation. This often results in the absence of pre-existing UML models, which need to be regenerated. Even though automatic generation of such models is possible, it still requires the intervention of a software architect to ensure their correctness. In contrast, our system relies solely on the code, reducing the need for software architect intervention. – The dynamic analysis of the system facilitates the detection of antipatterns as the system is simulated, producing more accurate results. However, with the advent of cloud architectures, dynamic system analysis becomes more complicated. Simulating the behavior of the system becomes challenging because a single application can be executed simultaneously on multiple cloud nodes. This makes the analysis of results more diﬃcult, as they are inﬂuenced by uncontrollable external factors. Our approach, on the other hand, focuses solely on the internal structure of the system, bringing to light the most common antipatterns that have been deemed signiﬁcant and impactful on performance within the scientiﬁc and industrial community. 4.3  
   
  Open Challenges of the Approach  
   
  This section highlights potential limitations that aﬀect our study. – Limited coverage of antipatterns: although the graph representation presented in this study is suﬃciently general to detect various antipatterns, its coverage is still limited. Additionally, not all antipatterns can be identiﬁed solely through static analysis; dynamic analysis is required. To overcome these limitations, we plan to expand the range of antipatterns that our tool can detect by i) carefully analyzing new antipatterns to create a valuable mathematical formulation, ii) incorporate dynamic analysis capabilities to annotate the graph, thereby potentially increasing the number of detectable antipatterns. – Manual intervention for antipattern detection: while we employed static analysis techniques to automatically construct the graph representation, our approach does not include an automated antipattern detection mechanism. As a result, the architect’s assistance is necessary to identify the antipatterns by manually creating Cypher queries. By highlighting this limitation, we emphasize the need for developing an automated tool based on our methodology. This would not only validate its eﬀectiveness but also enhance its practical usage, as it would eliminate the reliance on manual intervention and make the detection process more eﬃcient. – Lack of comparative tools for validation: as discussed in Sect. 4, various tools have been proposed in both academic and industrial contexts. However, we were unable to directly compare our work with these tools for a signiﬁcant reason: unlike other existing approaches, our methodology relies solely on static analysis. Consequently, we cannot evaluate the accuracy of our results through a comparative analysis. – Speciﬁcity to Java projects: Although the methods for representing software using graphs and detecting antipatterns mathematically are universally applicable to Object Oriented languages, the tool designed for automatic graph  
   
  A Graph-Based Java Projects Representation for Antipatterns Detection  
   
  263  
   
  generation is limited to Java projects. This restriction arises from the tool’s reliance on a parser developed speciﬁcally for the Java 9 grammar. Therefore, while the general approaches and mathematical formulations are transferable, the tool’s functionality is conﬁned to Java-based systems.  
   
  5  
   
  Conclusion  
   
  In this paper, we presented a semi-automatic approach for detecting three antipatterns, namely the God Class, Circuitous Treasure Hunt, and Empty SemiTruck, in Java projects. To achieve this goal, we developed a Java code parser based on the Java grammar that helps for the automatic generation of a graph representation of the system, providing a comprehensive view of the codebase and enhancing understanding of its underlying structure. By formulating the selected antipatterns as mathematical problems on this graph representation, we eﬀectively identiﬁed potential instances of the antipatterns within the software projects. We exempliﬁed the application of these formulations on the open-source Java project, PetClinic, to illustrate the eﬃcacy of our approach. As future work, we plan to explore and analyze new antipatterns, providing them with appropriate mathematical formulations. Furthermore, we aim to annotate the graph with parameters obtained through dynamic analysis of the system. Currently absent in our tool, this enhancement will allow for the detection of those antipatterns requiring consideration of the system’s behavior. This improvement will enable a more accurate assessment of the tool’s precision in detecting antipatterns by comparing our results with existing market solutions. Acknowledgment. This work was supported by the project “Modernization of Legacy Systems: Microservices Architecture and Non-Functional Requirements” funded within Programma Operativo Nazionale Ricerca e Innovazione 2014–2020.  
   
  References 1. Al-Saiyd, N.A.: Source code comprehension analysis in software maintenance. In: 2017 2nd International Conference on Computer and Communication Systems (ICCCS), Krakow, Poland, pp. 1–5 (2017). https://doi.org/10.1109/CCOMS.2017. 8075175 2. Alshayeb, M.: Empirical investigation of refactoring eﬀect on software quality. Inf. Softw. Technol. 51(9), 1319–1326 (2009) 3. Beck, K., Fowler, M., Beck, G.: Bad smells in code. Refactoring: Improv. Des. Existing Code 1(1999), 75–88 (1999) 4. William, H.B., et al.: AntiPatterns: Refactoring Software, Architectures, and Projects in Crisis. Wiley, Hoboken (1998) 5. Avritzer, A., et al.: A multivariate characterization and detection of software performance antipatterns. In: Proceedings of the ACM/SPEC International Conference on Performance Engineering (ICPE 2021). Association for Computing Machinery, New York, NY, USA, pp. 61–72 (2021). https://doi.org/10.1145/ 3427921.3450246  
   
  264  
   
  R. Capuano and H. Muccini  
   
  6. Ferrante, J., Ottenstein, K.J., Warren, J.D.: The program dependence graph and its use in optimization. ACM Trans. Program. Lang. Syst. 9(3), 319–349 (1987). https://doi.org/10.1145/24039.24041 7. Horwitz, S., Reps, T., Binkley, D.: Interprocedural slicing using dependence graphs. ACM Trans. Program. Lang. Syst. 12(1), 26–60 (1990). https://doi.org/10.1145/ 77606.77608 8. Eichinger, F., Krogmann, K., Klug, R., B¨ ohm, K.: Software-defect localisation by mining dataﬂow-enabled call graphs. In: Machine Learning and Knowledge Discovery in Databases: European Conference, ECML PKDD 2010, Barcelona, Spain, 20– 24 September 2010, Proceedings, Part I 21, pp. 425–441. Springer, Berlin (2010). https://doi.org/10.1007/978-3-642-15880-3 33 9. Law, J., Rothermel, G.: Whole program path-based dynamic impact analysis. In: Proceedings of the 25th International Conference on Software Engineering (ICSE 2003). IEEE Computer Society, USA, pp. 308–318 (2003) 10. Granchelli, G., Cardarelli, M., Di Francesco, P., Malavolta, I., Iovino, L., Di Salle, A.: MicroART: a software architecture recovery tool for maintaining microservicebased systems. In: 2017 IEEE International Conference on Software Architecture Workshops (ICSAW), pp. 298–302. IEEE (2017) 11. Cortellessa, V., Di Pompeo, D., Stoico, V., Tucci, M.: Software model refactoring driven by performance antipattern detection. ACM SIGMETRICS Perform. Eval. Rev. 49(4), 53–58 (2022) 12. Khan, Y.A., El-Attar, M.: Using model transformation to refactor use case models based on antipatterns. Inf. Syst. Front. 18, 171–204 (2016) 13. Dietrich, J., McCartin, C., Tempero, E., Shah, S.M.A.: On the existence of highimpact refactoring opportunities in programs. In: Proceedings of the Thirty-ﬁfth Australasian Computer Science Conference-Volume 122, pp. 37–48 (2012) 14. Harrold, M.J., Rothermel, G.: A coherent family of analyzable graphical representations for object-oriented software. Department of Computer and Information Science, The Ohio State University, Technical Report OSU-CISRC-11/96-TR60 (1996) 15. Larsen, L., Harrold, M.J.: Slicing object-oriented software. In: Proceedings of IEEE 18th International Conference on Software Engineering, pp. 495–505. IEEE (1996) 16. Mallo, B., McGregor, J.D., Krishnaswamy, A., Medikonda, M.: An extensible program representation for object-oriented software. ACM Sigplan Not. 29(12), 38–47 (1994) 17. Rothermel, G., Harrold, M.J.: Selecting Regression Tests for Object-Oriented Software. In: ICSM, vol. 94, pp. 14–25 (1994) 18. Najumudheen, E.S.F., Mall, R., Samanta, D.: A dependence graph-based representation for test coverage analysis of object-oriented programs. ACM SIGSOFT Softw. Eng. Notes 34(2), 1–8 (2009) 19. Najumudheen, E.S.F., Mall, R., Samanta, D.: A dependence representation for coverage testing of object-oriented programs. J. Object Technol. 9(4), 1–23 (2010) 20. Zhao, J.: Applying program dependence analysis to Java software. In: Proceedings of Workshop on Software Engineering and Database Systems, 1998 International Computer Symposium, pp. 162–169 (1998) 21. Walkinshaw, N., Roper, M., Wood, M.: The Java system dependence graph. In: Proceedings Third IEEE International Workshop on Source Code Analysis and Manipulation, pp. 55–64. IEEE (2003) 22. Shu, G., Sun, B., Henderson, T.A., Podgurski, A.: JavaPDG: a new platform for program dependence analysis. In: 2013 IEEE Sixth International Conference on Software Testing, Veriﬁcation and Validation, pp. 408–415. IEEE (2013)  
   
  A Graph-Based Java Projects Representation for Antipatterns Detection  
   
  265  
   
  23. Henderson, T.A., Podgurski, A.: Sampling code clones from program dependence graphs with GRAPLE. In: Proceedings of the 2nd International Workshop on Software Analytics, pp. 47–53 (2016) 24. Trubiani, C.: Automated generation of architectural feedback from software performance analysis results. Unpublished PhD thesis). Universita di L’Aquila (2011). http://www.di.univaq.it/catia.trubiani/phDthesis/PhDThesis-CatiaTrubiani.pdf 25. Smith, C.U., Williams, L.G.: Software performance antipatterns; common performance problems and their solutions. In: International CMG Conference, pp. 797–806 (2001) 26. Smith, C.U., Williams, L.G.: Software performance antipatterns. In: Proceedings of the 2nd International Workshop on Software and Performance, pp. 127–136 (2000) 27. Smith, C.U., Williams, L.G.: New software performance antipatterns: more ways to shoot yourself in the foot. In: International CMG Conference, pp. 667–674 (2002) 28. Trubiani, C., Bran, A., van Hoorn, A., Avritzer, A., Knoche, H.: Exploiting load testing and proﬁling for performance antipattern detection. Inf. Softw. Technol. 95, 329–345 (2018) 29. Trubiani, C., Pinciroli, R., Biaggi, A., Fontana, F.A.: Automated detection of software performance antipatterns in Java-based applications. IEEE Trans. Softw. Eng. (2023) 30. Sellami, K., Saied, M.A., Ouni, A.: A hierarchical DBSCAN method for extracting microservices from monolithic applications. In: Proceedings of the 26th International Conference on Evaluation and Assessment in Software Engineering, pp. 201–210 (2022) 31. Walter, J., Stier, C., Koziolek, H., Kounev, S.: An expandable extraction framework for architectural performance models. In: Proceedings of the 8th ACM/SPEC on International Conference on Performance Engineering Companion, pp. 165–170 (2017) 32. Singh, R., Bezemer, C.P., Shang, W., Hassan, A.E.: Optimizing the performance related conﬁgurations of object relational mapping frameworks using a multi objective genetic algorithm. In: Proceedings of the 7th ACM/SPEC on International Conference on Performance Engineering, pp. 309–320 (2016)  
   
  Scalable Cloud-Native Pipeline for Eﬃcient 3D Model Reconstruction from Monocular Smartphone Images Potito Aghilar1(B) , Vito Walter Anelli2 , Michelantonio Trizio1 , and Tommaso Di Noia2 1 Wideverse, Via Orabona 4, 70125 Bari, Italy {potito.aghilar,michelantonio.trizio}@wideverse.com 2 Politecnico di Bari, Via Amendola 126/b, 70126 Bari, Italy {vitowalter.anelli,tommaso.dinoia}@poliba.it  
   
  Abstract. In recent years, 3D models have gained popularity in various ﬁelds, including entertainment, manufacturing, and simulation. However, manually creating these models can be a time-consuming and resourceintensive process, making it impractical for large-scale industrial applications. To address this issue, researchers are exploiting Artiﬁcial Intelligence and Machine Learning algorithms to automatically generate 3D models eﬀortlessly. In this paper, we present a novel cloud-native pipeline that can automatically reconstruct 3D models from monocular 2D images captured using a smartphone camera. Our goal is to provide an eﬃcient and easily-adoptable solution that meets the Industry 4.0 standards for creating a Digital Twin model, which could enhance personnel expertise through accelerated training. We leverage machine learning models developed by NVIDIA Research Labs alongside a custom-designed pose recorder with a unique pose compensation component based on the ARCore framework by Google. Our solution produces a reusable 3D model, with embedded materials and textures, exportable and customizable in any external 3D modelling software or 3D engine. Furthermore, the whole workﬂow is implemented by adopting the microservices architecture standard, enabling each component of the pipeline to operate as a standalone replaceable module.  
   
  Keywords: 3D Model Reconstruction Augmented Reality · Computer Vision  
   
  1  
   
  · Microservices architecture ·  
   
  Introduction  
   
  In contemporary times, 3D models and complete 3D environments have become ubiquitous across diﬀerent sectors, including art, entertainment, simulation, augmented reality, virtual reality, video games, 3D printing, marketing, TV and manufacturing. The attraction of having a digital version of any physical object as a 3D model lies in its versatility and adaptability for varied purposes. This digital replica, known as a Digital Twin (DT), is a virtual model that accurately c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 266–282, 2023. https://doi.org/10.1007/978-3-031-42592-9_18  
   
  Scalable Cloud-Native 3D Model Reconstruction Pipeline from 2D Images  
   
  267  
   
  reﬂects and maps physical goods in a digital space [1]. DTs can be utilized to replicate physical objects in a virtual environment, thereby enabling speciﬁc tasks on the simulated model and observing their eﬀects on the real-world counterpart. The integration of Industrial Augmented Reality (IAR) in Industry 4.0 can signiﬁcantly enhance worker productivity and task eﬀectiveness by providing real-time data and information. IAR is beneﬁcial in manufacturing, where it assists workers in making informed decisions in realistic situations [2], streamlines engineering workﬂows throughout the design and manufacturing stages [3], and increases productivity by equipping workers with the necessary information to perform tasks more eﬃciently and safely. IAR is also eﬀective in marketing and sales, where it can provide interactive information about products, dispel uncertainty, and inﬂuence client perceptions [4,6–8]. Furthermore, IAR can facilitate training by oﬀering detailed instructions and reducing the time required to train new personnel while minimizing their skill requirements [9]. Over the years, modeling techniques have undergone signiﬁcant evolution, leading to the development of more intuitive and less time-consuming tools for creating or generating 3D models. These models can be created from a set of primitive shapes, mathematical equations, or even a 2D image. The most commonly used techniques for creating 3D models are manual modeling, photogrammetry, and Light Detection and Ranging (LIDAR). Manual modeling, while eﬀective, can be expensive in terms of time and resources since it involves a signiﬁcant amount of manual labor and is unsuitable for large-scale applications. Alternatively, photogrammetry involves the use of photographs taken from diﬀerent angles by a camera to make measurements. Finally, specialized hardware-based techniques such as LIDAR technology are also utilized. In addition, the industrial research sector is actively exploring this research domain. In the last decade, Artiﬁcial Intelligence and Machine Learning techniques [5,13] have gained signiﬁcant attention and NVIDIA is currently developing novel algorithms to enhance the quality of generated 3D models. Two of the approaches analyzed in this paper are based on recent research publications from 2022: Instant NeRF - a set of instant neural graphics primitives for NeRF [10] - and nvdiﬀrec - which leverages diﬀerential rendering and Deep Marching Tetrahedra (DMTet) [11]. The aim of this paper is to present a distributed, cloud-native, and scalable pipeline capable of solving the 3D model reconstruction problem using a set of monocular two-dimensional images. The proposed pipeline is designed to reduce time and resources, providing a cost-eﬀective solution for large-scale industrial applications by leveraging microservices architecture standards. Furthermore, the pipeline is enhanced by Augmented Reality (AR) capabilities to improve the data acquisition workﬂow. The main contributions of this paper are: – deﬁnition of a scalable cloud-native pipeline for the automatic generation of 3D models from monocular two-dimensional images with respect to the microservices architecture standard; – design and implementation of a custom pose recorder component based on ARCore to acquire both images of the object and poses of the camera.  
   
  268  
   
  2  
   
  P. Aghilar et al.  
   
  Background and Technology  
   
  This section provides a list of conventional and standard techniques alongside AI-based ones. It focuses on main drawbacks and how to overcome them. 2.1  
   
  Standard and Conventional Techniques  
   
  Manual modeling involves creating a 3D model using specialized software by an experienced 3D artist or modeler. This technique can be time-consuming and not suitable for large-scale applications due to the time involved for the design process for a single 3D model. The 3D artist is responsible for addressing various issues during the modeling process, such as mesh creation, material deﬁnition, texture generation, model rigging, environment, and lighting. Commonly used software for manual modeling includes techniques such as polygonal modeling, surface modeling, and digital sculpting 1 . Photogrammetry is a technique for generating 3D models from twodimensional images. It involves using a collection of photos taken from diﬀerent angles with a standard 2D camera and extracting material properties using methods from optics and projective geometry. This technique is useful in achieving a realistic feeling during Physically-Based Rendering (PBR)2 . Lastly, LIDAR is a remote sensing technology that uses pulsed laser light to measure variable distances from a source point to a hit point, thereby collecting data about the shape and elevation of the scanned object’s surface. LIDAR is commonly used in 3D model reconstruction of real-world objects and is also known as a 3D laser scanner. The output of a LIDAR scan is a point cloud, which comprises a set of geo-located colored data points in a 3D space and provides additional information about the object’s material properties3 . 2.2  
   
  AI-Based Techniques  
   
  This paragraph discusses about how AI-based techniques can be used to overcome the aforementioned standard techniques’ drawbacks. In particular, Instant NeRF and nvdiﬀrec from NVIDIA Research Labs [10,11]. Instant NeRF. It is a more advanced and eﬃcient implementation of the NeRF technique, which enables the creation of 3D models from 2D images using neural networks and a multi-resolution hash encoding grid. The technique involves reconstructing a volumetric radiance-and-density ﬁeld from 2D images and their corresponding camera poses, which can then be visualized through ray marching. The encoding phase is task-agnostic and only the hash  
   
  1 2 3  
   
  https://en.wikipedia.org/wiki/3D modeling,2022. https://en.wikipedia.org/wiki/Photogrammetry. https://en.wikipedia.org/wiki/Lidar.  
   
  Scalable Cloud-Native 3D Model Reconstruction Pipeline from 2D Images  
   
  269  
   
  table size is adjusted, which aﬀects the trade-oﬀ between quality and performance. The multi-resolution structure enables the network to resolve hash collisions more eﬀectively. The implementation heavily relies on parallelism, utilizing fully-fused CUDA kernels with FullyFusedMLP [12,14]. If this is not available, the algorithm falls back to CutlassMLP - CUDA Templates for Linear Algebra Subroutines4 [15], with a focus on minimizing unnecessary bandwidth and computational operations. The primary limitation of this methodology is its dependence on the NeRF technique, which produces a point cloud as its output. Consequently, the authors had to devise a method to extract the mesh of the scene from the encoded data within the neural networks. To accomplish this, they employed the Marching Cubes (MC) algorithm, a mesh extraction technique that is dependent on a point cloud as its initial input. However, the resulting mesh presents surface irregularities in the form of various holes, lacks UV coordinates, and does not possess any materials. As a result, it is essentially an unusable gray mesh for any 3D modeling software. nvdiﬀrec. It is a tool that enables the creation of 3D models from 2D images. What sets nvdiﬀrec apart from Instant NeRF is its ability to reconstruct a 3D model surface, complete with texture and materials. The authors approached this task as an “inverse rendering” problem, using a 2D image loss function to optimize as many steps as possible jointly. The goal is to ensure that the reconstructed model’s rendered images are of high quality compared to the input imagery. The approach used in nvdiﬀrec enables the learning of topology and vertex positions for a surface mesh without the need for any initial guesses about the 3D geometry. The tool’s diﬀerentiable surface model relies on a deformable tetrahedral mesh that has been extended to support spatially varying materials and high dynamic range (HDR) environment lighting through a novel diﬀerentiable split sum approximation. The resulting 3D model can be deployed on any device capable of triangle rendering, including smartphones and web browsers, without the need for further conversion and can render at interactive rates [11]. The paper tackles the challenge of 3D reconstruction from multi-view images of an object, with known camera poses and background segmentation masks, producing triangle meshes, spatially-varying materials (stored in 2D textures), and HDR environment probe lighting. Speciﬁcally, the authors adapt Deep Marching Tetrahedra (DMTet) to work in the setting of 2D supervision and jointly optimize shape, materials, and lighting. Unlike Instant NeRF, the mesh in this approach is UV-mapped with customizable materials and multiple textures linked to it, allowing for the reuse of the mesh in any 3D engine, such as Blender5 , Maya6 , 3DS Max7 , and Unity8 [11].  
   
  4 5 6 7 8  
   
  https://developer.nvidia.com/blog/cutlass-linear-algebra-cuda/. https://www.blender.org/. https://www.autodesk.it/products/maya/overview. https://www.autodesk.it/products/3ds-max/overview. https://unity.com/.  
   
  270  
   
  3  
   
  P. Aghilar et al.  
   
  Proposed Pipeline  
   
  Skilled service professionals are capable of maintaining and repairing complex machinery and industrial facilities. These professionals utilize their knowledge in industrial maintenance and assembly tasks by employing a combination of simulation, capturing techniques, multimodal interaction, and 3D-interactive graphics to achieve distributed training [16]. The acquired competencies are then adapted to realistic training situations that are utilized in industrial training facilities. In [16], the authors refer to this as immersive training, which involves “Real-time simulations of object behavior and multimodal interaction that support the development of complex training simulators that address cognitive skills [...] and sensorimotor skills.”. Industrial Augmented Reality (IAR) is a combination of computer vision and computer graphics that utilizes camera-based interaction. IAR can be exploited to facilitate the data acquisition process for the proposed scalable cloud-native pipeline. The adoption of a powerful container orchestration platform is crucial for achieving scalable DTs: Kubernetes facilitates the deployment, scaling, and management of containerized applications across distributed systems.9 . In our proposed architecture, we leverage Kubernetes clustering to facilitate the deployment of the diﬀerent phases of the pipeline as Jobs to worker nodes. This approach enables us to achieve scalability while reducing operational overhead and infrastructure costs. Worker nodes require an NVIDIA GPU to handle the high-end capabilities needed for dataset preprocessing and reconstruction jobs. Therefore, the complete reconstruction pipeline consists of various phases that can be executed either on an embedded device or in the cloud, depending on the diﬀerent resource requirements. The approach of using schedulable Jobs to fulﬁll resource-intensive tasks, instead of standard Kubernetes Deployment resources, allows to dynamically scale up the approach and reduces resources. Actually, GPUs allocation is impactful for the overall infrastructure cost, which needs to be addressed in an industrial perspective. 3.1  
   
  Pipeline Deﬁnition  
   
  We deﬁned a reconstruction pipeline (Fig. 1) by identifying a set of phases that are executed progressively, each performing speciﬁc operations on the dataset. The pipeline phases are described below: – Data acquisition, a custom written pose recorder with a poses compensation algorithm is implemented; – Preprocessing, the images and poses are preprocessed and the relative alpha masks are generated (silhouettes); – Reconstruction, the 3D model is generated alongside a preview of the current pipeline status in order to provide feedback to the end user.  
   
  9  
   
  https://kubernetes.io/.  
   
  Scalable Cloud-Native 3D Model Reconstruction Pipeline from 2D Images  
   
  271  
   
  Fig. 1. A graphical representation of the proposed pipeline. In (a), the sequence of operations required to achieve the expected result is described. In (b), the data ﬂow between the intermediate stages of the pipeline is illustrated.  
   
  The pipeline is constituted by two sub-workﬂows: a local workﬂow and a cloud workﬂow. The former is implemented in a mobile Android native app and comprises the data acquisition phase. The latter is deployed in the cloud and includes both Preprocessing and Reconstruction phases (see Sect. 3.5). Upon completion of the entire process, the end user can interact with the generated 3D model and visualize it from diﬀerent angles directly on his smartphone. We have adopted a distributed storage solution that caches both ﬁnal model and each intermediate output for the entire pipeline’s ﬂow in MinIO: an high-performance, S3 compatible, Kubernetes-native object storage solution10 . 3.2  
   
  Data Acquisition  
   
  The initial step in the reconstruction pipeline is the generation of the dataset through data acquisition. The dataset comprises a collection of images and corresponding poses. These crucial components are obtained through a native Android application that implements the ARCore framework11 . The reconstruction module necessitates speciﬁc technical prerequisites for the input data, particularly: – a set of RGB images with a resolution of 512 × 512 pixels; – a set of alpha masks (silhouettes) with a resolution of 512 × 512 pixels; – a poses bounds.npy ﬁle containing the view matrices of the camera for each image with the speciﬁc camera intrinsics. Given a set of images of size N , the poses bounds ﬁle is a numpy 5 array of shape (N, 17), in which N is the number of images and 17 is the number of 10 11 5  
   
  https://min.io/. https://github.com/google-ar/arcore-android-sdk. https://numpy.org/  
   
  272  
   
  P. Aghilar et al.  
   
  total features for each image. The ﬁrst 12 columns of each row are the 3 × 4 view matrix of the camera for the corresponding image, and the last 5 elements represent: – height of the image obtained from camera intrinsics; – width of the image obtained from camera intrinsics; – focal length of the camera obtained from camera intrinsics (we are assuming the focal lengths of both axes are the same); – scene bounds obtained from depth map of the scene (the minimum and maximum distance from the camera). It is imperative to maintain a coherent coordinate system throughout the entire process: both the ARCore framework and nvdiﬀrec adopt the same OpenGL right-handed system convention12 . Pose Recorder. To record the poses during 2D image acquisition, a pose recorder component is necessary, wherein each pose corresponds to a single image. We have implemented this workﬂow as a library in a native Android application, where the management of the anchor lifecycle is a critical aspect, particularly for the poses compensation algorithm. Moreover, this library facilitates the selection of a camera with varying resolutions or frames per second (FPS) to initiate the recording process. In the subsequent preprocessing phase, the images are resized to 512×512 pixels to fulﬁll the input requirements of the machine learning model. ARCore provides a view matrix of the device’s pose in the world coordinate system, which is represented by a 4 × 4 matrix. The rotation matrix is represented by the ﬁrst 3 × 3 submatrix, while the translation vector is represented by the last column. However, a 4 × 4 matrix is not suitable for this particular problem, as a 3 × 4 view matrix is required. To address this, the last row of the matrix is removed to obtain the desired 3 × 4 matrix. The resulting matrix follows the column-major order convention in which the matrix elements are ordered by column13 . To complete the transformation, a new column of shape 3 × 1 that contains the height, width, and focal length of the device is concatenated with the matrix. The resulting matrix is: ⎤ ⎡ r11 r12 r13 tx h ⎣r21 r22 r23 ty w⎦ r31 r32 r33 tz f in which rij is the ij-element of the rotation view matrix, ti is the i-element of the translation vector and h, w, f are the height, the width and the focal lenght respectively extracted from the camera instrinsics. After a matrix ﬂattening operation14 and a subsequent concatenation, we obtain the ﬁnal data-ﬂattened 12 13 14  
   
  https://learnopengl.com/Getting-started/Coordinate-Systems. https://en.wikipedia.org/wiki/Row- and column-major order. https://github.com/Fyusion/LLFF/issues/10#issuecomment-514406658.  
   
  Scalable Cloud-Native 3D Model Reconstruction Pipeline from 2D Images  
   
  273  
   
  view matrix. Thus, the following reshaped data entry can be generated for each frame: r11 r12 r13 tx h r21 r22 r23 ty w r31 r32 r33 tz f m M in which m and M , are respectively the minimum and the maximum scene bounds computed from the depth map in meters. During the recording, a compensation matrix is applied in real-time to compensate camera pose jumps. An additional rotational ﬁx is applied to the 3 × 3 rotation submatrix of the camera: it consists in a swap of the ﬁrst and the second column and a sign inversion of the new ﬁrst column (see footnote 13): ⎤ ⎡ ⎤ ⎡ ⎤ ⎡ r12 r11 r13 tx h −r12 r11 r13 tx h r11 r12 r13 tx h ⎣r21 r22 r23 ty w⎦ ⇒ ⎣r22 r21 r23 ty w⎦ ⇒ ⎣−r22 r21 r23 ty w⎦ r31 r32 r33 tz f r32 r31 r33 tz f −r32 r31 r33 tz f At the end of recording, diﬀerent tasks are performed to generate the dataset: – the compensated poses bounds ﬁle is saved in the device’s local storage; – the compensation matrix is saved in the device’s local storage; – the images are cropped with an aspect ratio of 1:1 and saved in the device’s local storage; – the whole dataset is compressed and saved in the device’s local storage. – the compressed dataset is uploaded to the S3 bucket. Pose Compensation Algorithm. During experiments we faced a sensor drifting problem, leading to an inconsistent dataset and a jugged surface on the reconstructed model: a comparison was performed between our dataset and the COLMAP’s generated one. COLMAP adopts Structure-from-motion (SfM) and Multi-View Stereo (MVS) techniques [17,18]. The two datasets were generated in two distinct coordinate systems, forcing us to reconcile all the data points though a series of matrix transformations. Finally, the computed diﬀerence between the two datasets yields a diﬀerence matrix, which highlights their deviation (Fig. 2). Consequently, a pose compesation algorithm is required to ﬁx the sensor drifting problem. This relies on a self-made anchor management system to detect real-time variations of positions or rotations of ARCore Anchors while scanning. This avoids trajectory discontinuity by computing and applying a compensation matrix to the camera view matrix. The Poses Compensation Algorithm comprises the following components: – – – –  
   
  Anchors, objects placed in the scene, provided by ARCore; Delta position from initial pose for each anchor frame by frame; Delta rotation from initial pose for each anchor frame by frame; Quaternion products to compute the rotation matrix.  
   
  Given a quaternion q = a + bi + cj + dk deﬁned by the following coeﬃcients < a, b, c, d > and the following imaginary components (i, j, k), each delta quaternion can be computed as follows: −1 qdelta = qtarget qcurrent  
   
  274  
   
  P. Aghilar et al.  
   
  Fig. 2. Comparison of our solution’s extracted poses (a) with COLMAP’s (b). COLMAP lacks of real-world reference during the pose extraction phase resulting in a non-overlapped set of poses between (a) and (b).  
   
  in which qdelta is the delta quanternion to compute, qtarget represents the target −1 represents the inverse of the current rotation we want to reach and qcurrent −1 rotation. Therefore, because qcurrent is the conjugate of quaternion qcurrent , it can be computed by an inversion of the imaginary components of the quaternion: conj(a + bi + cj + dk) = a − bi − cj − dk Moreover, given two quaternions q and r having the form: q = q 0 + q1 i + q2 j + q3 k  
   
  r = r0 + r1 i + r2 j + r3 k  
   
  From [19], the product of two quaternions is a quaternion having the form: n = q × r = n0 + n1 i + n2 j + n3 k where: n0 = (r0 q0 − r1 q1 − r2 q2 − r3 q3 )  
   
  n1 = (r0 q1 + r1 q0 − r2 q3 + r3 q2 )  
   
  n2 = (r0 q2 + r1 q3 + r2 q0 − r3 q1 )  
   
  n3 = (r0 q3 − r1 q2 + r2 q1 + r3 q0 )  
   
  Speciﬁcally, the algorithm is composed of three main steps: – compute the delta mean pose starting from the delta pose of each valid anchor (tracked from SDK): this indicates, on average, how much each anchor has moved from the initial pose. More anchors are placed in the scene, more accurate is the estimation; – combine the current camera pose with the delta mean pose exploiting the pose composition method; – convert the new pose to a 3 × 4 matrix and apply the rotational ﬁx. The values of the compensation matrix change frame by frame resulting in a full matrix of shape N × 17 (Fig. 3).  
   
  Scalable Cloud-Native 3D Model Reconstruction Pipeline from 2D Images  
   
  275  
   
  Fig. 3. In (a), a partial view of the compensation matrix generated at run-time is illustrated. In (b) and (c), the diﬀerence during reconstruction with the implementation of the compensation matrix is presented: in both cases the reference image is placed side by side to highlight the diﬀerences.  
   
  3.3  
   
  Preprocessing  
   
  In this phase, the images are resized to a resolution of 512 × 512 pixels before starting the alpha masks generation subtask. Thus, we adopted CarveKit, a neural networks model to extract the alpha mask starting from the RGB images15 . To optimize performance, the framework is executed on the GPU. We then reﬁne the silhouettes by applying a threshold to eliminate any ambiguous regions and enhance the edges of the 3D model during the reconstruction phase. Ultimately, we obtain a set of sharpened alpha masks integrated into the initial dataset. 3.4  
   
  Reconstruction  
   
  This phase adopts nvdiﬀrec tool to reconstruct the 3D model. The input parameters required for this task are: – a collection of RGB images in PNG format; – a collection of alpha mask images in PNG format (silhouette); – a set of camera poses serialized in the poses bounds numpy matrix ﬁle. Finally, upon successful reconstruction, the tool provides as artifacts: – – – – –  
   
  15  
   
  mesh.obj containing the reconstructed mesh, UV mapped; mesh.mtl containing the material properties; texture kd.png ﬁle containing the diﬀuse texture; texture ks.png containing the ORM map (-, roughness, metalness); texture n.png containing the normal map.  
   
  https://github.com/OPHoperHPO/image-background-remove-tool.  
   
  276  
   
  3.5  
   
  P. Aghilar et al.  
   
  Architecture  
   
  We have designed and implemented the pipeline utilizing microservices architecture standards, speciﬁcally tailored to be deployed on a Kubernetes cluster. Microservices. The microservices compose the fundamental constituents of the pipeline. Each microservice, implemented as a Docker image, is purposefully crafted to accomplish a speciﬁc task. Speciﬁcally, the microservices that have been identiﬁed are the Preprocessing microservice, the Reconstruction microservice, and the Workloads scheduler microservice (refer to Fig. 4). – The Preprocessing microservice is dedicated to dataset preprocessing. Its container is based on the NVIDIA CUDA runtime environment image, with the necessary dependencies installed to ensure CarveKit to operate properly. – The Reconstruction microservice heavily relies on the nvdiﬀrec repository. This Docker image is built utilizing speciﬁc conﬁgurations, dependencies, and environmental variables outlined in the oﬃcial documentation. The image was modiﬁed by adding customized domain-speciﬁc code to enable preview image generation, dataset management, and 3D model uploading. – The Workloads scheduler microservice is responsible for job scheduling within the cluster. It operates as a backend service API that oversees the entire pipeline lifecycle for each reconstruction request. A clear separation between the Preprocessing and the Reconstruction microservices is motivated by the need to preserve the original structure of the nvdiﬀrec codebase and can ease future updates from the authors. This approach enables code maintenance from the upstream repository, ensuring compatibility with bug ﬁxes and future upgrades. Moreover, the Preprocessing microservice is purposefully crafted to tailor the dataset to ﬁt the speciﬁc requirements of the reconstruction tool. In case of necessary changes, a portion of the pipeline can be preserved, while keeping the interface between components unmodiﬁed, thus enabling microservice reuse. Consequently, while further subdividing the services into smaller components may seem like an attractive solution, it is important to consider that this could lead to a signiﬁcant increase in communication overhead, thus negating the eﬀorts to improve system eﬃciency. The balance between service granularity and communication overhead is critical for ensuring optimal performance in this speciﬁc setting. Each microservice is deployed within the Kubernetes cluster. Speciﬁcally, the Workloads scheduler is a resource of type Deployment due to its stateless characteristics. An Horizontal Pod Autoscaler (HPA) is attached to this resource to exploit fault-tolerance and high-availability (HA) to face diﬀerent traﬃc-peak times. The Preprocessing and Reconstruction pods are overseen by the upperlevel Kubernetes Job resource to attain stateful execution, owing to the presence of isolated reconstruction contexts across diﬀerent requests. These microservices communicate and exchange unstructured data with the storage layer operated by MinIO through S3 compatible API. It contains both the ﬁnal 3D model and intermediate stage results. The storage layer and the three microservices represent  
   
  Scalable Cloud-Native 3D Model Reconstruction Pipeline from 2D Images  
   
  277  
   
  the Cloud pipeline workﬂow. Furthermore, the Local pipeline workﬂow is implemented in the mobile native app whose goals are to acquire the dataset and view the generated 3D model interactively. Finally, to improve overall performance, data acquisition and visualization phases are executed on the smartphone.  
   
  Fig. 4. Pipeline architecture with the Workloads scheduler, Preprocessing and Reconstruction microservices. The pipeline workﬂow is partitioned between local and cloud execution. All the stages communicate with the S3 storage layer to cache intermediate outputs and ﬁnal 3D reconstructed model.  
   
  Cloud Infrastructure. The cloud infrastructure consists of a Kubernetes cluster deployed on bare metal, with accelerated machines designated as worker nodes. To support resource-intensive tasks such as dataset preprocessing and 3D model reconstruction, the worker nodes are equipped with an NVIDIA Quadro M4000 GPU. However, due to certain speciﬁcations associated with the cloud nodes themselves, a Systemd-enabled Kubernetes worker CUDA-accelerated base image was crafted leveraging a docker-in-docker execution16 17 .  
   
  4  
   
  Evaluation  
   
  This section accounts the performance and outcomes of the proposed solution, through qualitative and quantitative evaluations. Furthermore, diﬃculties encountered during the study and prospects for enhancements are presented.  
   
  16 17  
   
  https://medium.com/swlh/docker-and-systemd-381dfd7e4628. https://zauner.nllk.net/post/0038-running-systemd-inside-a-docker-container/.  
   
  278  
   
  4.1  
   
  P. Aghilar et al.  
   
  Qualitative Evaluation  
   
  The qualitative evaluation is performed considering user experience in mobile app utilization, alpha masks generation quality, and the real-look feeling of the generated 3D models (Fig. 5). The signiﬁcance of user experience cannot be understated, especially when it comes to addressing challenges within speciﬁc industrial environments. A smartphone user is empowered to scan a variety of equipment, but it is crucial for them to be at ease with the requisite preparatory steps before initiating the model scanning process. In particular, the user must establish anchors by tapping on the screen next to distinguishable reference points. Failing to execute this preparatory process correctly may result in 3D models that are imprecise and of subpar quality. Moreover, it is imperative that the user receives updates on the progress of the reconstruction pipeline through three status indicators, along with a preview of the current model. The generation of alpha masks has a signiﬁcant impact on the quality of the dataset, due to the silhouette extraction process involved. This procedure relies entirely on machine learning techniques, which are susceptible to errors such as inaccurate segmentation layers. As a result, it is imperative that the masks produced should be carefully examined by the user before commencing the reconstruction  
   
  Fig. 5. Android application during camera selection (a), data acquisition (b) and reconstruction (c) phases with the proper pipeline workﬂow status on the User Interface (UI). In (d) and (e) two reconstruction attempts with their respective reference images.  
   
  Scalable Cloud-Native 3D Model Reconstruction Pipeline from 2D Images  
   
  279  
   
  phase. This intermediate step, enables the erroneous alpha masks to be discarded from the dataset. The two aforementioned steps have a signiﬁcant impact on the overall quality of the dataset. As they are entirely reliant on machine learning techniques, errors may arise due to the lack of operator feedback. This can ultimately result in a reduced level of realism in the 3D models generated. 4.2  
   
  Performance Evaluation  
   
  The performance evaluation of the system takes into account the latency of the pipeline, from the scanning phase to the interaction phase. This latency can be computed using the following formula: Tlatency = Tscan + 2Tupload + 2Tsignal + Tpreprocessing + Treconstruction + Tdownload Here, Tsignal denotes the time required for signals to propagate within the infrastructure, while Tupload and Tdownload represent the time taken to upload and download assets from the S3 bucket, respectively. Since Tscan , Tpreprocessing , and Treconstruction take signiﬁcantly longer than the other steps, we can simplify the formula as follows: Tlatency = Tscan + Tpreprocessing + Treconstruction The conducted tests consisted in 20 runs with a generated dataset of approximately 100 images each. During the experiments, network latency, denoted by Tscan , was found to be almost 120 s, while preprocessing time took roughly 30 s. The reconstruction process required approximately 2 h and 30 min (see Table 1). The reconstruction task demands a considerable amount of time, emphasizing the need for ongoing upgrades to this pipeline component. The modular architecture facilitates the integration of more advanced AI models, resulting in streamlined computational processes, improved user experience, and cost savings. Opting for a microservices approach over legacy monolithic 3D reconstruction systems allows for eﬀortless component replacement, while maintaining infrastructure transparency for end user through Kubernetes as middleware. This ensures uninterrupted operational service during upgrades and swift scaling capabilities. Additionally, losses on both training and validation sets were taken into consideration. The calculation of image space loss was performed using nvdiﬀrast [20], which assesses the diﬀerence between the rendered image and the reference one. As shown in Fig. 6, the employment of nvdiﬀrec resulted in a loss of 0.010540 on the training set and 0.010293 on the validation set.  
   
  280  
   
  P. Aghilar et al.  
   
  Table 1. List of the performed tasks with frequencies for a single run. Mean execution time over 20 diﬀerent reconstruction tests with approximately 100 images per run. Task  
   
  Task frequency Mean Time (min)  
   
  Tscan Tupload Tsignal Tpreprocessing Treconstruction Tdownload  
   
  1 2 2 1 1 1  
   
  2 0 0 0.5 150 0  
   
  Total  
   
  8  
   
  152.5 = Tlatency  
   
  Fig. 6. The loss values on the training and validation sets of the 3D reconstructed model performed using nvdiﬀrec, serving as an evaluation of the model’s performance.  
   
  5  
   
  Conclusion and Future Work  
   
  This study presents an innovative cloud-native scalable pipeline to reconstruct 3D models of real-world objects, providing a starting point for Digital Twins. The approach oﬀers various advantages related to Industry 4.0, including a faster training process since it employs a 2D smartphone cameras overlaid by Google’s ARCore framework for dataset generation, and high-end cloud worker nodes for alpha masks generation and reconstruction tasks. Speciﬁcally, nvdiﬀrec tool by NVIDIA is exploited to perform the eﬀective 3D model reconstruction. This can be interactively viewed on the end user’s smartphone. The pipeline complies to microservices architecture standards, enabling scalability in large-scale production environments. Although the proposed solution has achieved the expected outcomes, the modular design allows for future improvements, including: – – – –  
   
  adopt a better machine learning model to produce higher quality meshes [21]; replace or improve the machine learning model to generate the alpha masks; decompose the 3D model in layers enabling a more thorough experience; implement an in-app feedback gathering feature to collect user experience;  
   
  Scalable Cloud-Native 3D Model Reconstruction Pipeline from 2D Images  
   
  281  
   
  References 1. Tao, F., et al.: Digital twin-driven product design framework. Int. J. Prod. Res. 57, 3935–3953 (2019) 2. Moloney, J.: Augmented reality visualisation of the built environment to support design decision making. In: Tenth International Conference On Information Visualisation (IV’06), pp. 687–692 (2006) 3. Schneider, M., Rambach, J., Stricker, D.: Augmented reality based on edge computing using the example of remote live support. In: 2017 IEEE International Conference On Industrial Technology (ICIT), pp. 1277–1282 (2017) 4. Zhang, X., Navab, N., Liou, S.: E-commerce direct marketing using augmented reality. In: 2000 IEEE International Conference On Multimedia And Expo. ICME2000. Proceedings. Latest Advances In The Fast Changing World Of Multimedia (Cat. No. 00TH8532), vol. 1, pp. 88–91 (2000) 5. Cornacchia, G., et al.: Auditing fairness under unawareness through counterfactual reasoning. Inf. Process. Manage. 60(2), 103224 (2023) 6. Hauswiesner, S., Straka, M., Reitmayr, G.: Virtual try-on through image-based rendering. IEEE Trans. Vis. Comput. Graph. 19, 1552–1565 (2013) 7. Wiwatwattana, N., Sukaphat, S., Putwanpen, T., Thongnuch, S., Kanokudomsin, P.: Augmenting for purchasing with mobile: Usage and design scenario for ice dessert. In: IISA 2014, The 5th International Conference On Information, Intelligence, Systems And Applications, pp. 446–450 (2014) 8. EL-ﬁrjani, N., Maatuk, A.: Mobile augmented reality for interactive catalogue. In: 2016 International Conference On Engineering & MIS (ICEMIS), pp. 1–4 (2016) 9. Hoˇrejˇsi, P.: Augmented reality system for virtual training of parts assembly. Procedia Eng. 100, 699–706 (2015) 10. M¨ uller, T., Evans, A., Schied, C., Keller, A.: Instant neural graphics primitives with a multiresolution hash encoding. Trans. Graph. 41, 102:1-102:15 (2022) 11. J. Munkberg, J.: Extracting triangular 3D models, materials, and lighting from images. ArXiv:2111.12503 (2021) 12. M¨ uller, T.: Tiny CUDA neural network framework. https://github.com/nvlabs/ tiny-cuda-nn. Accessed 18 Sep 2022 13. Anelli, V.W., Di Noia, T., Di Sciascio, E., Ragone, A.: Semantic interpretation of Top-N recommendations. IEEE Trans. Knowl. Data Eng. 34(5), 2416–2428 (2022) 14. M¨ uller, T., Rousselle, F., Nov´ ak, J., Keller, A.: Real-time neural radiance caching for path tracing. ACM Trans. Graph. (2021) 15. M¨ uller, T.: CUDA templates for linear algebra subroutines (2022). https://github. com/NVIDIA/cutlass 16. Webel, S., Bockholt, U., Engelke, T., Gavish, N., Olbrich, M., Preusche, C.: An augmented reality training platform for assembly and maintenance skills. Robot. Auton. Syst. 61, 398–403 (2013) 17. Sch¨ onberger, J., Frahm, J.: Structure-from-motion revisited. Conf. Comput. Vis. Pattern Recogn. (CVPR) (2016) 18. Sch¨ onberger, J.L., Zheng, E., Frahm, J.-M., Pollefeys, M.: Pixelwise view selection for unstructured multi-view stereo. In: Leibe, B., Matas, J., Sebe, N., Welling, M. (eds.) ECCV 2016. LNCS, vol. 9907, pp. 501–518. Springer, Cham (2016). https:// doi.org/10.1007/978-3-319-46487-9 31  
   
  282  
   
  P. Aghilar et al.  
   
  19. Stevens, B., Lewis, F., Johnson, E.: Aircraft Control and Simulation: Dynamics, controls design, and Autonomous Systems, 2nd Edition. John Wiley & Sons (2003) 20. Laine, S., Hellsten, J., Karras, T., Seol, Y., Lehtinen, J., Aila, T.: Modular primitives for high-performance diﬀerentiable rendering. Trans. Graph. 39 (2020) 21. Vicini, D., Speierer, S., Jakob, W.: diﬀerentiable signed distance function rendering. Trans. Graph. (Proc. of SIGGRAPH) 41, 125:1–125:18 (2022)  
   
  Automated Reverse Engineering of the Technology-Induced Software System Structure Yves R. Kirschner(B) , Jan Keim, Nico Peter, and Anne Koziolek Karlsruhe Institute of Technology (KIT), Karlsruhe, Germany {yves.kirschner,jan.keim,anne.koziolek}@kit.edu, [email protected]   
   
  Abstract. Evolving system architectures can be complex and diﬃcult to understand, leading to problems such as poor maintainability. Automated reverse engineering of system structure models from source code can mitigate these problems and facilitate architectural decisions. However, identifying components with their interfaces can be challenging because components are often implemented in diﬀerent frameworks and interconnected in complex ways. Our approach aims to create software models using reusable concept descriptions for reverse engineering. We use structural-level mapping rules to reconstruct the static system structure from source code, assuming that the technology used can determine the components with their interfaces and deployment. We evaluate our approach on four public reference systems. The analyses show that technology-speciﬁc rules already provide good results, but the addition of project-speciﬁc rules further improves reverse engineering. Keywords: Automated reverse engineering · Reusable concept descriptions · Software architecture models · Structure-level mapping rules  
   
  1  
   
  Introduction  
   
  Large software systems often become complex and diﬃcult to understand during development, leading to problems such as poor maintainability. To solve these problems, software architects must have a clear understanding of the system’s software architecture. Therefore, there is a growing need for automated tools that can extract the static system structure from source code. Automated reverse engineering of models oﬀers beneﬁts such as improved software maintainability and support for architectural decisions. However, reverse engineering the static system structure is challenging due to diﬃculties in identifying components and their interfaces [4]. Factors such as diﬀerent programming languages and frameworks used to implement components make it diﬃcult to accurately capture all possibilities. In addition, components may have complex interconnections, making it unclear which interfaces they use to communicate. The goal c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 283–291, 2023. https://doi.org/10.1007/978-3-031-42592-9_19  
   
  284  
   
  Y. R. Kirschner et al.  
   
  of our proposed approach is to support the creation and maintenance of models. To reverse engineer models, we want to utilize reusable concept descriptions. To achieve this goal, we formulate the following research questions: RQ1: To what extent do a selected framework impact the underlying software static system structure? RQ2: How can this impact be implemented as a transformation for reverse engineering? Our new approach aims to use mapping rules at the structural level to reconstruct the static aspects of the system from source code. We assume that components with their interfaces and deployment can often be explicitly determined by the used technology, e. g., application frameworks. Since we want to use knowledge about technologies to discover components, we expect our approach to generate models that are more consistent with the present architecture. We also expect technology-speciﬁc rules to provide a better understanding of the relationships between a technology and its underlying concept and the static system structure.  
   
  2  
   
  Foundation  
   
  Web services are a type of software component that provide a standardized way for communication over the internet [13]. RESTful web services make resources available through a uniform and predeﬁned set of stateless operations, typically HTTP methods [10]. Reverse engineering aims to identify structures in the form of elements and relationships within the software system under investigation. This involves analyzing and understanding software systems that may have evolved over time or may not be formally documented [9]. In this way, patterns, relationships, and constraints in the system can be identiﬁed, providing insight into the design, implementation, and maintenance of the software. Manual reverse engineering a software architecture can be diﬃcult and timeconsuming process, especially for large and complex systems. Automating this process typically involves analyzing the system’s code to identify components, interfaces, dependencies, and other architecture elements. This can be accomplished through various techniques, e. g., static analyses, dynamic analyses, or both [5]. Static analyses examine the source code or compiled binary of the software system without running the system. They are fast but may miss certain runtime-related aspects of the system’s behavior. Model-Driven Reverse Engineering (MDRE) is the task that focuses on recovering models. Favre et al. deﬁne MDRE as the creation of descriptive models from existing systems that have been created in some way [6]. MDRE is about transforming heterogeneous software development artifacts into homogeneous models.  
   
  3  
   
  Approach  
   
  Our goal is to automatically extract from existing software development artifacts the structure that represents the static aspects of the system. This structure includes the way a software system is split up into components and shows the dependencies among these components as well as the deployment of these components to nodes. We consider artifacts written during the development of  
   
  Reverse Engineering of Technology-Induced System Structure  
   
  285  
   
  a software system, e. g., source code or other conﬁguration ﬁles like deployment descriptors. The idea is to model the knowledge of used technologies in order to reverse engineer this static system structure from artifacts. This approach is an implementation-based reconstruction of the source code based on implementation knowledge and grouping based on deployment. Rules capture how a certain concept is implemented in a technology and how this concept aﬀects the static structure of a system. These rules are expressed as model-to-model transformations. The technology-speciﬁc rules are developed by analyzing the patterns of each technology and mapping them to model elements. Rules can be formulated to cover any aspect of a technology that can be identiﬁed through static analysis of a software project’s artifacts. Although the approach is designed for reuse, it also supports project-speciﬁc rules. These rules can be used, for example, to model how components are implemented in a speciﬁc software project. To deﬁne transformation rules, we use the transformation language Xtend [1]. Listing 1 depicts a simpliﬁed form of a extended Backus-Naur form (EBNF) that deﬁnes the framework of our approach for such rules. However, the shown EBNF is a simpliﬁed version and contains only a subset of the possible solutions. We only include the most relevant production rules.  
   
  < RulesDocument > ::= { < Rule >} < Rule > ::= [ < Loop >] { < Condition >} { < Detection >} < Loop > ::= " for " < HelperGet > ":" < Condition > ::= " if " < HelperBool > ":" < HelperGet > ::= " getClasses () " | " getMethods () " | ... < HelperBool > ::= " isAnnotatedWith () " | " isExtending () " | ... < Detection > ::= " detectComponent () " | " detectRole () " | ...  
   
  Listing 1: Simpliﬁed EBNF as a conceptual framework for our rules. The example represents non-terminals for helper methods with two methods each.  
   
  A RulesDocument is a collection of rules and a Rule consists of several non-terminals. A rule can start with a loop that iterates over parts of the code model instance. The objects to be iterated are deﬁned in the non-terminal HelperGet. The next part of a rule is the Condition that is deﬁned as an if-expression with a non-terminal HelperBool to select what to inspect. The rule engine provides predeﬁned aspects of what a user might be looking for, such as speciﬁc annotations or names. The idea of these HelperGet and - Bool methods is to discover elements. These methods deﬁne queries to the code models that return elements of interest. These query methods need to be deﬁned only once and can be reused without knowing the exact structure of the code models. To associate a model element with the current object, the user performs a detection that can identify, e. g., components, interfaces, and provided or required roles. The methods for these identiﬁcations are provided by the rule engine.  
   
  286  
   
  Y. R. Kirschner et al.  
   
  The ﬁrst step in our reverse engineering approach is to create a model from existing artifacts that provides a uniﬁed view of the software system. In order for these models to provide a uniﬁed view, they must conform to a suitable given metamodel. The structure of these models is realized in MDRE by socalled discoverers that depend on the associated metamodel. The second step is the main step of our reverse engineering approach. The previously created models are used to eﬀectively achieve the desired reverse engineering scenario. During this step, these models are analyzed using rules represented by model-tomodel transformations. For this purpose, our approach includes a framework for MDRE that allows for reusable acquisition of this knowledge. These two steps use the proposed rules to identify and compose relevant model elements and their relationships from the collection of code model elements. The ﬁrst sub-step is for the inner component model and uses the results from model discovery. The deﬁned rules allow the identiﬁcation of software system elements, e. g., components, interfaces, and communication paths. The second sub-step is for the outer service model. Here, rules for the deployment descriptor artifacts are used to compose components into larger logical units. These composite components can represent services or subsystems. To generate the static system structure model instance, the ﬁrst model understanding sub-step is to create the interfaces by extracting information from the code model instances. To create a model, there need to be several individual rules, each of which helps to identify at least one model element. The previously deﬁned rules are used to identify relevant elements within speciﬁc code structures. The rules formulate these structural patterns that deﬁne which code artifacts map to relevant components and how to infer provided and required roles. Extracting model information from the code model involves identifying the interface name, signature name, return type, and parameters of each method. The rules deﬁne which code artifacts are associated with relevant components and how to derive provided and required roles. The second sub-step is to compose components based on the information in the deployment descriptor models into services. By associating each component with a service, subsystem boundaries can be inferred, resulting in a more readable and understandable view of the system. Delegation connectors link provided and required interfaces with inner components, while assembly connectors link inner components with each other. Assembly connectors are created for each component that matches the required role of another component in the service. In the third step, all the information determined by the rules of the previous model understanding is merged into the ﬁnal static system structure model. For our approach, we use the Palladio Component Model (PCM) [12] as a component-based architecture model, but the concepts are also applicable to others Architectural description languages (ADLs). Our approach can be adapted in this model generation step to use other notations for describing componentbased architecture models, e. g., UML component or deployment diagrams.  
   
  Reverse Engineering of Technology-Induced System Structure  
   
  4  
   
  287  
   
  Evaluation  
   
  For the evaluation, we ﬁrst create our own reference model for the software system under study in order to compare it with our automated results. To do this, we ﬁrst analyze the source code and conﬁguration ﬁles to identify the components and their roles. We then compare the constructed model with existing documentation or diagrams available in the repository or linked to the software system, and perform a reﬁnement and validation of the constructed model using expert knowledge and domain-speciﬁc information. The extraction process involves applying the technology-speciﬁc rule set to the system and comparing the resulting model to the expected one. Success is measured using precision (p), recall (r), and F 1, the harmonic mean of both. True positives are relevant elements that should be found, false positives are falsely extracted elements, and false negatives are missing elements in the extracted model relative to the expected elements. Recall alone does not guarantee correctness as misrecognized elements may still be present. Precision is also necessary to indicate misrecognition. The extracted software architecture is analyzed for possible improvement by adding new rules to the technology-speciﬁc rule set. The completeness of the generated model and the eﬀort required to deﬁne new rules is measured by the number of newly deﬁned rules and the total lines of code (LOC) required. Spring Systems: The ﬁrst two case studies are two open source systems implemented primarily based on the Spring framework. PetClinic1 is a Spring Boot microservices application implemented with Java and Docker that simulates a simple management system for veterinary clinics. Piggy Metrics2 is a simple ﬁnancial advisory application developed to demonstrate the microservice architecture model using Spring Boot and Docker. The Spring PetClinic reference system consists of 4 microservices. For these combined, 11 components, 11 interfaces, 11 provider roles, and 9 required roles are evaluated, for a total of 42 elements. The model extracted by our approach with only the technology-speciﬁc rules contains all intended components, interfaces, and provided roles. However, 2 required roles are missing, 5 data types are incorrect in the correctly identiﬁed roles, and 3 data types are missing in the identiﬁed roles. The good results are due to the fact that the system adheres closely to the Spring speciﬁcations, providing a solid foundation for deﬁning the technology-speciﬁc rule set. The Piggy Metrics reference system consists of four microservices. For these combined, 29 components, 28 interfaces, 28 provider roles, and 22 required roles are evaluated, for a total of 107 elements. The model extracted by our approach with only the technology-speciﬁc rules has a total of 116 correctly identiﬁed elements, 25 missing elements, and 12 incorrect elements. 23 components are correctly identiﬁed, while 5 interfaces and 6 provided roles are missing. In addition, 4 interfaces and 6 provided roles are incorrectly identiﬁed. Four required roles are also missing. New project-speciﬁc rules are derived to improve the extraction result by analyzing missing and incorrect elements. Two new rules are added, modifying the 1 2  
   
  https://github.com/spring-petclinic/spring-petclinic-microservices. https://github.com/sqshq/PiggyMetrics.  
   
  288  
   
  Y. R. Kirschner et al.  
   
  existing rules with a total of 7 new LOC. These new rules correctly identify the four missing components and their associated roles. JAX-RS Systems: Tea Store3 is a microservice application implemented in Java and Docker that emulates a simple web store for tea. Acme Air4 is an application implemented in Java for a ﬁctional airline. The Tea Store reference system consists of six microservices. For these combined, 79 components, 64 interfaces, 79 provider roles, and 10 required roles are evaluated, for a total of 232 elements. The model extracted with only the technology-speciﬁc rules has a total of 104 correctly identiﬁed elements, 128 missing elements, and no incorrect elements. The system was analyzed to identify missing elements, and new project-speciﬁc rules were applied to improve the extraction. In total, four new rules were created and implemented in 29 LOC. Using these new project-speciﬁc rules, the new model extracted by our approach produced 15 false positives, 13 false negatives, and 219 true positives out of the expected 232 elements. The Acme Air reference system consists of ﬁve services and one package service that deﬁne common interfaces. For these, a total of 31 components, 33 interfaces, 31 provider roles, and 30 required roles are evaluated, for a total of 125 elements. The model extracted with the technology-speciﬁc rules has a total of 78 correctly identiﬁed elements, 47 missing elements, and 4 incorrect elements. With this new project-speciﬁc rule set, 30 items are still missing, but no items are incorrect, and 95 items are correct. Table 1. Summary of results. Subscripts indicate the ﬁrst run with technology-speciﬁc rules and the second run with additional project-speciﬁc rules. The number of rules (NuR) and LOC are given for the project-speciﬁc rules. Case Study  
   
  p1  
   
  r1  
   
  F 11  
   
  p2  
   
  r2  
   
  F 12  
   
  NuR LOC  
   
  -  
   
  –  
   
  Spring PetClinic 93.2%  
   
  93.2% 93.2% –  
   
  –  
   
  –  
   
  Piggy Metrics  
   
  90.6%  
   
  82.3% 86.2% 91.2% 88.7% 89.9% 2  
   
  7  
   
  Tea Store  
   
  100.0% 44.8% 61.9% 93.6% 94.4% 94.0% 4  
   
  29  
   
  Acme Air  
   
  95.1%  
   
  32  
   
  62.4% 75.4% 100% 76.0% 86.4% 3  
   
  Results and Discussion: The summary of the evaluation results of the four case studies for the technology-speciﬁc and project-speciﬁc rules is shown in Table 1. Precision values range from 90.6% to 100.0%, recall values from 44.8% to 94.4%, and F 1-scores from 61.9% to 94.0%. For the Tea Store system, our approach achieves the best overall F 1-score using the improved project-speciﬁc rules. The Spring PetClinic system performs best on the ﬁrst pass with the technologyspeciﬁc with a F 1-score of 93.2% because it strictly follows the Spring framework patterns. The evaluation shows that general technology-speciﬁc rules have a higher risk of falsely classifying elements as relevant. However, the results generally improve when these rules are used together with other project-speciﬁc 3 4  
   
  https://github.com/DescartesResearch/TeaStore. https://github.com/acmeair/acmeair.  
   
  Reverse Engineering of Technology-Induced System Structure  
   
  289  
   
  rules. On average, a new rule improves results by less than 2.0%. Piggy Metrics improved by 3.7% with two rules, while Tea Store improved by 32.1% and Acme Air improved by 11.0% with more rules. JAX-RS systems beneﬁt more from new rules than Spring-based systems due to fewer technology-speciﬁc implementation requirements and constraints. The results show that opinionated frameworks like Spring provide a better foundation for technology-speciﬁc rule sets than weaker frameworks. Comparing the LOC required for project-speciﬁc rule sets reveals diﬀerences between Spring and JAX-RS systems. JAX-RS systems required more LOC than the Piggy Metrics system because a single rule covers all discoverable elements. This highlights an area for future improvement to simplify rule implementation. A poor result from the rule engine may indicate a poorly designed system with missing patterns. To address this, architects can implement new project-speciﬁc rules. In this way, the rule engine can act as a warning system to check the quality of a relevant system when bad extraction results are given.  
   
  5  
   
  Related Work  
   
  Garcia et al. conclude that clustering of software entities is the almost universally used method for automated architecture reconstruction [7]. In most cases, a graph structure is generated based on dependencies in the source code, so that components can be reconstructed using clustering or pattern matching. Although each of these reverse engineering methods has a diﬀerent principle, they all divide source code entities into mutually exclusive clusters, each based on a dominant principle such as cohesion and coupling or naming patterns. Garzón et al. propose an approach for reverse engineering object-oriented code into a uniﬁed language for both object-oriented programming and modeling [8]. Using an incremental and rule-based approach, UML class diagrams and state machines can be mixed with the associated source code. However, these rules cover only the basic object-oriented constructs, not speciﬁc technologies. Starting from the assumption that most well-designed systems follow strict architecture design rules, Cai et al. propose a new perspective for architecture reconstruction [3]. Their so-called ArchDRH clustering family allows design rule-based clustering to be combined with other clustering techniques to partition a large system into subsystems. However, these design rules take the form of special program constructs, like shared data structures or abstract interfaces, that are not used by any of the submodules. In their literature review, Raibulet et al. compare ﬁfteen diﬀerent model-driven reverse engineering approaches and ﬁnd that the approaches and their application areas are versatile. In this respect, MoDisco [2] is the most related approach in a comprehensive scope [11]. Bruneliere et al. developed the generic and extensible MoDisco approach, which provides support for Java, JEE, and XML technologies to generate model-based views of the architecture. Although MoDisco is extensible with technologies, it does not support direct reuse of a technology’s common concepts.  
   
  290  
   
  6  
   
  Y. R. Kirschner et al.  
   
  Conclusion  
   
  This paper presents a novel approach for building static system structure models in component-based software systems using reusable concept descriptions for reverse engineering. The approach uses structural mapping rules to reconstruct models from source code, considering technology-speciﬁc relationships and concepts. The contributions of the approach include formally deﬁned rules created by technology experts prior to the automatic extraction process, and a rule engine that can apply these rules to produce consistent software models. Evaluation of reference systems using Spring and JAX-RS technologies demonstrated the eﬀectiveness of the approach. The evaluation also showed the potential to improve the rule system by integrating project-speciﬁc rules. The automatic model generation enabled by this approach has the potential to improve software maintainability and support architectural decisions in component-based software systems. Future work includes investigating the application of the approach to diﬀerent types of systems, evaluating its scalability and eﬃciency, and developing a knowledge base of technology-speciﬁc rules to improve its reusability in similar projects.  
   
  References 1. Bettini, L.: Implementing Domain-speciﬁc Languages with Xtext and Xtend. Packt Publishing Ltd., Birmingham (2016) 2. Bruneliere, H., Cabot, J., Jouault, F., Madiot, F.: MoDisco: a generic and extensible framework for model driven reverse engineering. In: Proceedings of the 25th IEEE/ACM International Conference on Automated Software Engineering (2010) 3. Cai, Y., Wang, H., Wong, S., Wang, L.: Leveraging design rules to improve software architecture recovery. In: Proceedings of the 9th International ACM Sigsoft Conference on Quality of Software Architectures, QoSA 2013. ACM (2013) 4. Canfora, G., Di Penta, M.: New frontiers of reverse engineering. In: 2007 Future of Software Engineering, FOSE 2007. IEEE Computer Society (2007) 5. Canfora, G., Di Penta, M., Cerulo, L.: Achievements and challenges in software reverse engineering. Commun. ACM 54, 142–151 (2011) 6. Favre, J.M.: Foundations of model (driven) (reverse) engineering. In: Language Engineering for Model-Driven Software Development (2005) 7. Garcia, J., Ivkovic, I., Medvidovic, N.: A comparative analysis of software architecture recovery techniques. In: ASE 2013 (2013) 8. Garzón, M.A., Lethbridge, T.C., Aljamaan, H.I., Badreddin, O.: Reverse engineering of object-oriented code into Umple using an incremental and rule-based approach. In: CASCON 2014 (2014) 9. Kazman, R., Woods, S., Carriere, S.: Requirements for integrating software architecture and reengineering models: CORUM II. In: Proceedings Fifth Working Conference on Reverse Engineering (Cat. No.98TB100261) (1998) 10. Pautasso, C., Wilde, E.: RESTful web services: principles, patterns, emerging technologies. In: Proceedings of the 19th International Conference on World Wide Web, WWW 2010. ACM (2010) 11. Raibulet, C., Fontana, F.A., Zanoni, M.: Model-driven reverse engineering approaches: a systematic literature review. IEEE Access 5, 14516–14542 (2017)  
   
  Reverse Engineering of Technology-Induced System Structure  
   
  291  
   
  12. Reussner, R.H., Becker, S., Happe, J., Koziolek, A., Koziolek, H.: Modeling and Simulating Software Architectures - The Palladio Approach. MIT Press, Cambridge (2016) 13. Roy, J., Ramanujan, A.: Understanding web services. IT Prof. 3, 69–73 (2001)  
   
  Cloud-Native Architecture for Mixed File-Based and API-Based Digital Twin Exchange Naﬁse Eskandani(B)  
   
  and Sten Grüner  
   
  ABB Corporate Research Center, Ladenburg, Germany [email protected]  Abstract. Digital Twin technology plays a crucial role in the implementation of Industry 4.0 by providing means of optimizing operations, improving eﬃciency, reducing costs, and minimizing risks through its ability to simulate and integrate information silos and perform test scenarios in a virtual environment. As industrial enterprises face the need to align themselves with new information technologies (IT) and respond to variable market demands, the role of Digital Twin in enabling the evolution toward smart manufacturing becomes even more signiﬁcant. This paper provides an overview of Digital Twin technology, identiﬁes the architectural challenges that it encompasses, and proposes a preliminary cloud-native architecture to address these challenges, laying the groundwork for future research in this ﬁeld. Keywords: Industrial IoT · Digital Twin Applications · Software Architecture  
   
  1  
   
  · Cloud-Native  
   
  Introduction  
   
  Industry 4.0, the combination of industrial practice and Internet of Things (IIoT) technologies, is one of the leading research and development initiatives for transforming and automating traditional manufacturing and process industry enterprises through the integration of modern technologies and tools. The ultimate goal of Industry 4.0 is to create smart manufacturing machines and systems that are connected, automated, and constantly monitored to improve production, reduce costs, and optimize processes [8]. This sector is quickly expanding, pushing a demand for research that explores the new possibilities oﬀered by smart factories: The Industry 4.0 market size is expected to experience signiﬁcant growth from USD 84.59 Billion in 2020 to USD 334.18 Billion by 20281 . Digital Twin (DT) technology is a key enabler of Industry 4.0 [12]. DT enables bridging the gap between physical and virtual systems enabling the exchange of 1  
   
  https://www.globenewswire.com/news-release/2022/09/15/2517217/0/en/ Demand-for-Global-Industry-4-0-Market-Size-to-Surpass-USD-334-18-Billionby-2028-Exhibit-a-CAGR-of-19-4-Industry-4-0-Industry-Trends-Share-GrowthValue-Analysis-Forecast-Report-by-.html.  
   
  c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 292–299, 2023. https://doi.org/10.1007/978-3-031-42592-9_20  
   
  Cloud-Native Architecture for Digital Twin Exchange  
   
  293  
   
  data and information between them – ultimately facilitating the implementation of Industry 4.0 [15]. The capabilities actually supported by DT are crucial for these systems to be eﬀective. The most important aspects include real-time data acquisition and processing, integration of data from multiple sources, and high ﬁdelity representation [6,17,18]. The importance of such requirements should be reﬂected into the architectural designs of DT systems. Especially in the early stages of DT adoption, a mix of diﬀerent tools and DT access methods, e.g., ﬁle-based and API-based DT access, is required due to missing interfaces between the tools and organizations. To date, limited research has explicitly tackled the architectural challenges associated with integrity of DT content when mixing ﬁle- and API-based interaction patterns in the implementation of DT. In this paper, we highlight these challenges arising from IT/OT integration and present a cloud-native architecture to facilitate mixed ﬁle and API-based exchange of DTs across organizational boundaries. The remainder of the paper is structured as follows: Sect. 2 introduces the foundations of DTs, in Sect. 3 the cloud-native architecture for DT exchange is presented, Sect. 4 points to related work and in Sect. 5 a summary and an outlook are given.  
   
  2  
   
  Digital Twins in a Nutshell  
   
  2.1  
   
  Scope and Key Concepts  
   
  DT applications and their boundaries diﬀer drastically based on the particular use case and industry domain. Applications range from providing static information about products, e.g., supplementary documentation on one end, to real-time monitoring and synchronization of physical activities with virtual space through networked Cyber-Physical Systems [9] on the other end. This state of things leads to a plethora of DT deﬁnitions2 in academic and industrial sources. For this work, we adopt a use-case-agnostic deﬁnition of DT from the Digital Twin Consortium (DTC): “A Digital Twin is a virtual representation of realworld entities and processes, synchronized at a speciﬁed frequency and ﬁdelity”. Arguably, also non-physical parts of real-world entities may have their digital lifecycle, e.g., product speciﬁcations, therefore a deﬁnition of the Industry IoT Consortium (IIC) is also applicable: “A Digital Twin is a digital representation suﬃcient to meet the requirements of a set of use cases”. For a discussion of the evolution of industrial DT deﬁnitions please refer to [19]. The Asset Administration Shell (AAS) is an interoperable implementation of a DT designed speciﬁcally for industrial applications. Developed collaboratively by the Plattform Industry 4.0 consortium and the Industrial Digital Twin Association (IDTA), the AAS aims to establish a standardized and uniﬁed approach to accessing information models associated with physical or virtual assets. The AAS is deﬁned using a technology-independent meta-model, enabling integration with various technologies such as RESTful APIs and OPC UA, which can be leveraged at diﬀerent stages of an asset’s lifecycle [2]. 2  
   
  https://awortmann.github.io/research/digital_twin_deﬁnitions/.  
   
  294  
   
  N. Eskandani and S. Grüner  
   
  AAS are a composite structure comprising multiple submodels, each serving as a coherent and self-contained unit. These submodels encompass information elements and complex data objects such as ﬁles and technical functionalities. A technical functionality can refer to diverse range of services such as a conﬁguration management, event logging and monitoring capabilities, or ﬁrmware updates. The AAS, the refernced submodels, and the asset AAS is referencing have unique identiﬁers and can be accessed through dedicated AAS infrastructure. In the area of AAS and related infrastructure, several open-source Software Development Kits (SDKs) have been developed, with Eclipse BaSyx3 being one of the prominent examples (cf. [3] for an overview of AAS SDKs). AAS speciﬁcation diﬀerentiates between the so-called “passive” or type 1 AASs and “reactive” type 2 AASs. Passive AASs can be exchanged in a speciﬁed packaging format called “AASX” to enable the oﬄine exchange of AAS. The AASX package includes the AAS content, which can be stored as an XML or JSON ﬁle. Reactive AASs are typically hosted on a server and accessible using well-deﬁned RESTful APIs. Furthermore, “proactive” type 3 AAS exist, e.g., to facilitate automated negations, which are out of scope of this work. 2.2  
   
  Architectural Challenges for Digital Twins and AAS  
   
  Despite the sophisticated speciﬁcation of the AAS, its implementation introduces a range of architectural challenges that, to the best of our knowledge, have not been comprehensively addressed in the existing literature. These challenges arise from the complexity of integrating AAS within diverse industrial environments and the need to ensure interoperability, scalability, security, data management, real-time processing, handling heterogeneity, and lifecycle management. The heterogeneity of assets, technologies, protocols, and interfaces poses a fundamental challenge for the AAS infrastructure. The AAS needs to accommodate a wide range of asset types with varying data formats, communication protocols, and connectivity options. Developing an infrastructure that can eﬀectively handle this heterogeneity requires robust mechanisms for data transformation, protocol abstraction, and interoperability. As assets evolve over time, the AAS infrastructure must handle updates and upgrades smoothly. It should provide mechanisms for deploying new software versions, ﬁrmware updates, and conﬁguration changes to assets. The infrastructure should ensure the integrity and security of updates, coordinate the update process, and manage rollback mechanisms in case of issues or incompatibilities. Moreover, as the number of assets and data generated within industrial systems grows, scalability becomes a critical challenge for the AAS infrastructure. The infrastructure must be designed to handle increasing data volumes, processing demands, and system complexity without sacriﬁcing performance or reliability. This involves ensuring eﬃcient storage and retrieval of large amounts of data, and providing mechanisms for horizontal and vertical scaling to accommodate evolving system needs. Additionally, scalability should consider the management 3  
   
  https://www.eclipse.org/basyx/.  
   
  Cloud-Native Architecture for Digital Twin Exchange  
   
  295  
   
  Fig. 1. Overview of the proposed cloud-native architecture  
   
  of distributed AAS instances, load balancing, and fault tolerance to ensure uninterrupted operation and resource utilization. We address heterogeneity and scalability challenges with a novel architecture that ensures interoperability and smooth communications, regardless of varying formats of DTs. Moreover, our architecture is designed to accommodate a growing number of participants and increasing volumes of DT data, enabling organizations to expand their DT ecosystem without sacriﬁcing eﬃciency or performance.  
   
  3  
   
  Cloud-Native Architecture for AAS Implementation  
   
  While various vendor-dependent solutions exist for implementing DTs, there is currently no recognized reference architecture for implementing DTs across organizational boundaries from an infrastructural perspective. Figure 1 shows an overview of the proposed cloud-native architecture for mixed use of ﬁle-based and API-based DT access. A typical use-case is the import of DTs packaged as type 1 AAS, instantiating and editing them as type 2 AAS via RESTful APIs, and exporting them again as type 1 AAS at some speciﬁc event. Type 1 AASs can be generated out of backed systems by means of model transformations has been addressed, e.g., in [7,14]. Mixed ﬁle-based and API-based access may be needed in case no direct API-based access is available between organizations, as it is often the case during the introduction of DTs. Key microservices of the architecture run inside containers. Containers can be deployed on local machines for development and testing, in the cloud for scalable and distributed execution, or on edge devices to bring the system closer to the data source or reduce latency. This ﬂexibility allows manufacturers to choose the most suitable environment based on factors such as cost, performance requirements, data privacy, and network constraints. Also, stateless containers scale horizontally or vertically based on the demand or available resources. Container orchestration platforms like Kubernetes further simplify the scaling process by automating container deployment and management. In the following, we provide a comprehensive description of each component: Server: The server serves as a provider of AAS and enables dynamic uploading of AAS instances. APIs allow creation new AASs or uploading existing ones.  
   
  296  
   
  N. Eskandani and S. Grüner  
   
  Once uploaded, the server registers the new AAS instance to the registry. API users can continuously update and enhance the AASs by uploading new versions or modifying existing ones. Registry: The registry allows discovery of information related to diverse AAS instances. It contains metadata and descriptive details about each AAS, including exclusive identiﬁers, versions, authorship, creation timestamps, and relevant attributes or qualities associated with the represented asset. The registry facilitates exploration, retrieval, and incorporation of AAS instances by providing a centralized catalog comprising the available AASs. Consequently, organizations and systems can seek out particular AASs, extract their corresponding information, and establish connections or interactions with the respective assets. Distributed Storage: The distributed storage serves as a database that stores AAS instances (e.g., AASX ﬁles) or their database representation. An AAS typically deals with large volumes of data associated with assets. Distributed storage provides a reliable and scalable solution for storing such data, and enables easy access and retrieval, even in the event of hardware failures or disruptions. Furthermore, the utilization of distributed storage, which incorporates versioning capabilities, facilitates the preservation of diverse iterations of an asset, enabling comprehensive change tracking and the ability to revert back when required. Temporary Storage: The temporary storage serves as a bridge between the server container and the distributed storage. Since containers are stateless, any data or changes made within a container are not preserved when the container is terminated or restarted. By mapping storage outside the container, data persistency can be ensured. The temporary storage stores the mapped data from the container and provides local access to the modiﬁed AAS instances. Diﬀ Detector: The change detector allows to monitor the temporary storage and facilitates the transfer of data to distributed storage whenever requested. On request, it identiﬁes any modiﬁcations, additions, or deletions to the stored data. When the change detector identiﬁes a change in the temporary storage, it triggers a data transfer process to move the updated data to the distributed storage. This transfer process ensures that the distributed storage remains synchronized and up-to-date with the most recent version of the data. The change detector operates based on predeﬁned rules or algorithms that determine what constitutes a “change” in the context of the monitored data, e.g., based on AAS meta-model. Management UI: The management UI serves as a user interface that facilitates interactions with the registry and empowers users to modify instances of the AAS. It provides a graphical or web-based interface through which users can access and manage various aspects of the AAS, such as properties and attributes of registered AAS instances.  
   
  Cloud-Native Architecture for Digital Twin Exchange  
   
  297  
   
  Fig. 2. Dynamic view of the typical system use-case  
   
  Figure 2 shows a dynamic view of the typical use case for the usage of proposed architecture where type 1 AASs are instantiated into the server for interaction with AAS-enabled tools using RESTful APIs. An actor (user or tool) uploads AASX packages into the AAS server. The latter registers AAS and included submodels in the AAS registry to allow discovery by the AAS-enabled tools. Tools or user interact with the content of DTs and update them using rest API. The server persists the AAS information into the temporary storage. On a speciﬁed event, e.g., a user interaction, the content of the AAS is synced into the distributed storage by calculating a diﬀerence ﬁrst and then deploying the changes into the storage allowing a persistent storage and change tracking.  
   
  4  
   
  Related Work  
   
  DTs have gained signiﬁcant attention in recent years and has extensive applications across various industries. As a result, numerous research areas and topics have emerged in the ﬁeld of DT. These areas cover a broad range, such as modeling and simulation, data integration and streaming, lifecycle management, standardization and interoperability, security, and real-time monitoring and control [4,15,16]. To maintain a focus on infrastructure integrity, this paper will speciﬁcally address the relevant studies within this scope. Malakuti and Grüner [10] discuss the essential architectural decisions when designing DTs. Decisions include the internal structure and content of the DT, APIs and their usage, the bindings between the twins and its physical counterparts, as well as the runtime environment. Our work falls into the API category, while addressing the life cycle of DTs. Costantini et al. [5] report on deﬁning and deploying a collection of software services designed to serve as a highly distributed computing platform for a hybrid DT model. This platform facilitates the integration of simulative and  
   
  298  
   
  N. Eskandani and S. Grüner  
   
  data-driven models, enabling the incorporation of AI services. In [13] the advantages of deploying DTs on edge computing devices are explored. These advantages range from minimizing manual engineering eﬀorts through IT/OT data integration to improving the reliability of the system by more informed device management and monitoring. Our architecture is deliberately using cloud-native architecture to cover the indicated diﬀerent deployment options and allow scalability. Another study [11] presents a four-layer architecture pattern for building DTs and integrating data from diverse sources. The proposed pattern is designed to be highly adaptable, allowing for the integration of new information sources and accommodating both proprietary and standard data formats. Our approach does not focus the the building of DTs, but enables the (intermediate) editing of packaged DT information models and can be used in conjunction with presented pattern to reduce the load on the data sources. Aheleroﬀ et al. [1] discuss DTs’ enabling technologies and reference architecture model, and they introduce Digital Twin as a Service (DTaaS) on top of the proposed reference model. According to the ﬁndings of this study, the utilization of Industry 4.0 technologies such as cloud, IoT, and augmented reality enhances the capabilities of DT, thereby driving industrial transformation. Our scalable platform could be used as a component to implement such a DTaaS.  
   
  5  
   
  Summary and Future Work  
   
  DT technology emerges as a crucial enabler in the implementation of Industry 4.0, oﬀering signiﬁcant beneﬁts such as operational optimization, enhanced eﬃciency, cost reduction, and risk mitigation. The main contribution of this work is an overview of infrastructural integration challenges in implementing DT for mixed ﬁle-based and API-based access, and a proposed cloud-native architecture to mitigate those challenges. Such a mixed approach may be especially needed during the gradual introduction of DT tools within an existing tool landscape. Cloud-native architecture’s elastic scalability, containerization, microservices approach, and DevOps practices make it a suitable solution for addressing the integrity interoperability, and scalability challenges of the AAS infrastructure. Future works includes implementation of more complex interaction patterns, evaluation of scalability and load handling eﬃciency, as well as piloting the architecture on realistic DT applications.  
   
  References 1. Aheleroﬀ, S., Xu, X., Zhong, R.Y., Lu, Y.: Digital twin as a service (DTaaS) in industry 4.0: an architecture reference model. Adv. Eng. Inform. 47, 101225 (2021) 2. Bader, S., Barnstedt, E., Bedenbender, H., Berres, B., Billmann, M., Ristin, M.: Details of the asset administration shell-part 1: the exchange of information between partners in the value chain of industrie 4.0 (version 3.0 rc02) (2022) 3. Barnstedt, E., et al.: Open source drives digital twin adoption. IIC J, Innov (2021)  
   
  Cloud-Native Architecture for Digital Twin Exchange  
   
  299  
   
  4. Barricelli, B.R., Casiraghi, E., Fogli, D.: A survey on digital twin: deﬁnitions, characteristics, applications, and design implications. IEEE Access 7, 167653–167671 (2019) 5. Costantini, A., et al.: IoTwins: toward implementation of distributed digital twins in industry 4.0 settings. Computers 11(5), 67 (2022) 6. Glaessgen, E., Stargel, D.: The digital twin paradigm for future NASA and US air force vehicles. In: 53rd AIAA/ASME/ASCE/AHS/ASC Structures, Structural Dynamics and Materials Conference, p. 1818 (2012) 7. Göllner, D., Klausmann, T., Rasor, R., Dumitrescu, R.: Use case driven digital twin generation. In: 2022 IEEE 5th International Conference on Industrial CyberPhysical Systems (ICPS), pp. 01–06. IEEE (2022) 8. Hermann, M., et al.: Design principles for industrie 4.0 scenarios: a literature review. Technische Universität Dortmund, Dortmund 45 (2015) 9. Lee, J., Bagheri, B., Kao, H.A.: A cyber-physical systems architecture for industry 4.0-based manufacturing systems. Manuf. Lett. 3, 18–23 (2015) 10. Malakuti, S., Grüner, S.: Architectural aspects of digital twins in IIoT systems. In: Proceedings of the 12th European Conference on Software Architecture (2018) 11. Malakuti, S., Schmitt, J., Platenius-Mohr, M., Grüner, S., Gitzel, R., Bihani, P.: A four-layer architecture pattern for constructing and managing digital twins. In: Proceedings of the 13th European Conference on Software Architecture (2019) 12. Nakagawa, E.Y., Antonino, P.O., Schnicke, F., Capilla, R., Kuhn, T., Liggesmeyer, P.: Industry 4.0 reference architectures: state of the art and future trends. Comput. Ind. Eng. 156, 107241 (2021) 13. Platenius-Mohr, M., Grüner, S.: An analysis of use cases for the asset administration shell in the context of edge computing. In: 2022 IEEE 27th International Conference on Emerging Technologies and Factory Automation (ETFA) (2022) 14. Platenius-Mohr, M., Malakuti, S., Grüner, S., Schmitt, J., Goldschmidt, T.: Fileand API-based interoperability of digital twins by model transformation: an IIoT case study using asset administration shell. Future Gener. Comput. Syst. 113, 94–105 (2020) 15. Semeraro, C., Lezoche, M., Panetto, H., Dassisti, M.: Digital twin paradigm: a systematic literature review. Comput. Ind. 130, 103469 (2021) 16. Singh, M., Fuenmayor, E., Hinchy, E.P., Qiao, Y., Murray, N., Devine, D.: Digital twin: origin to future. Appl. Syst. Innov. 4(2), 36 (2021) 17. Tao, F., Cheng, J., Qi, Q., Zhang, M., Zhang, H., Sui, F.: Digital twin-driven product design, manufacturing and service with big data. Int. J. Adv. Manuf. Technol. 94, 3563–3576 (2018) 18. Uhlemann, T.H.J., Schock, C., Lehmann, C., Freiberger, S., Steinhilper, R.: The digital twin: demonstrating the potential of real time data acquisition in production systems. Procedia Manuf. 9, 113–120 (2017) 19. Usländer, T., et al.: Symbiotic evolution of digital twin systems and dataspaces. Automation 3(3), 378–399 (2022)  
   
  Software Architecture Documentation  
   
  What Rationales Drive Architectural Decisions? An Empirical Inquiry Klara Borowa(B) , Rafal Lewanczyk, Klaudia Stpiczy´ nska, Patryk Stradomski, and Andrzej Zalewski Warsaw University of Technology, Institute of Control and Computation Engineering, Warsaw, Poland [email protected]   
   
  Abstract. Architectural decision-making is a crucial concern for researchers and practitioners alike. There is a rationale behind every architectural decision that motivates an architect to choose one architectural solution out of a set of options. This study aims to identify which categories of rationale most frequently impact architectural decisions and investigates why these are important to practitioners. Our research comprises two steps of empirical inquiry: a questionnaire (63 participants) and 13 interviews. As a result, we obtained a set of rationales that motivated architects’ decisions in practice. Out of them, we extracted a list of software quality attributes that practitioners were the most concerned about. We found that, overall, architects prefer to choose solutions which are familiar to them or that guarantee fast software implementation. Mid-career architects (5 to 15 years of experience) are more open to new solutions than senior and junior practitioners. Additionally, we found that most practitioners are not concerned about the quality attributes of compatibility and portability due to modern software development practices, such as the prevalence of using speciﬁc standards and virtualisation/containerization. Keywords: Software Architecture · Architectural decision-making Rationale · Software Quality Attributes  
   
  1  
   
  ·  
   
  Introduction  
   
  Understanding software architecture as a set of architectural decisions (ADs) [11] draws our attention to the motivation underlying these decisions and - this way - the entire architecture. Design rationale, which is a component of ADs [25], consists of the knowledge and reasoning justifying design decisions [20]. The research on factors (including rationales) [15] that shape architectural decisions in practice is rather scarce and seems still far from being mature. The most recent papers by Weinreich et al. [23], Miesbauer et al. [14] and Tang et al. [20] that explore the motivations underlying practitioners’ ADs are at least eight years old. These works are continued in more recent studies that investigate c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 303–318, 2023. https://doi.org/10.1007/978-3-031-42592-9_21  
   
  304  
   
  K. Borowa et al.  
   
  what software quality attributes (QAs) are discussed when choosing architectural patterns [4] and what technology features drive technology design decisions [19]. As the software development landscape changes rapidly, the general purpose of this study is to discover what rationales, and why, currently drive ADs in practice. Such results importantly extend our knowledge and understanding of architectural decision-making (ADM) by allowing researchers to focus their eﬀorts on improving ADM on the basis of current needs and practices of architects. Additionally, we put an emphasis on QAs since they are a rationale subset that has been of major interest for researchers [2,4,5]. Such an aim is expressed by the following research questions: – RQ1: What rationales most frequently inﬂuence architectural decisions? – RQ2: Which software quality attributes are usually prioritised during architectural decision-making? – RQ3: Why do practitioners prioritise these rationales? In order to investigate the above problems we performed a two-phase inquiry. Firstly, we gathered data through a questionnaire. We obtained answers from 63 practitioners. Then, we presented the questionnaire’s results to 13 practitioners during interviews. As a result of the questionnaire, we created a list of rationales (including quality attributes as given in ISO 25010 [10]) that practitioners of various experience levels (beginners, mid-career and experts) consider essential. As a result of the interviews, we found out that, depending on experience level, practitioners tend to prioritise diﬀerent architectural options. The rest of the paper has been organised as follows: Sect. 2 presents related work, Sect. 3 contains details about our research process and Sect. 4 the study’s results. We discuss our ﬁndings in Sect. 5, present the threats to validity in Sect. 6 and conclude in Sect. 7.  
   
  2  
   
  Related Work  
   
  The notion that software architecture is a set of design decisions [11] has heavily impacted the ﬁeld of software architecture [2]. To enable better decision-making, researchers have explored such areas as: human factors in ADM [15], AD models [25], mining AK [5], curating AK [3], tools supporting decision-making [13], techniques that can aid designers in the decision-making process [16,21] and ADM rationale [20]. Numerous aspects make ADM an extremely challenging process. The traditional decision-making process, which includes listing all possible alternatives and their attributes, is impractical for software design decisions [7] because of the number of possible architectural solutions. Furthermore, practitioners can be overwhelmed by the time and eﬀort required to ﬁnd architectural information [8]. Additionally, an entirely rational design-making process is impossible as long as it depends on human beings, that are impacted by various human factors [15].  
   
  Architectural Decisions Rationales  
   
  305  
   
  While there exist general guidelines [21] and various tools [2] for ADM, empirical research on ADM factors is scarce [15]. On the topic of the practitioners’ rationale behind design decisions, several studies must be acknowledged. Firstly, the study of Tang et al. [20], reporting the results of a survey on practitioners’ approach to architectural rationale. Researchers had practitioners choose the importance of generic rationales and optionally allowed participants to provide their own rationales. As a result, a list of 12 rationales indicated by practitioners was made. This study’s results were later expanded by Miesbauer et al. [14] and Weinreich et al. [23] who performed interview-based studies through which the list was expanded to include 18 rationales in total. Soliman et al. [19] researched what technology features impacted technology design decisions. Bi et al. [4] took a diﬀerent approach and researched which ISO 25010 software quality attributes [10] were most often discussed in the context of architectural patterns on the StackOverﬂow platform. We found no recent empirical research focusing widely on ADM rationale more recent than eight years ago. As software technology evolves rapidly, the rationales could also change. Additionally, we found no studies on how rationales depend on architects’ professional experience, which we believe could be relevant since junior and senior architects ﬁnd diﬀerent aspects of ADM challenging [22].  
   
  3  
   
  Method  
   
  Our research comprises two phases: questionnaire and interviews. The purpose of the questionnaire was to gather a larger sample of data that would enable us to answer RQ1 and RQ2. The interviews let us delve deeper into the meaning and implications of the questionnaire’s results (RQ3). Another reason for using two data-gathering methods was to achieve so-called ’methodological triangulation’ [17], which helps to strengthen the validity of our ﬁndings. The overview of the study process is presented in Fig. 1. The questionnaire questions, a summary of questionnaire results, the interview plan, and interview coding details are available online [6].  
   
  Fig. 1. Study phases  
   
  306  
   
  3.1  
   
  K. Borowa et al.  
   
  Questionnaire: Data-Gathering  
   
  The questionnaire’s [6] design was simplistic in order to avoid discouraging practitioners from taking part and to avoid biasing the results by suggesting any speciﬁc answers. The questionnaire was divided into four main sections: 1. Participant data: age, gender, education, years of experience in software development, role in the company, company size, company domain. 2. An open-ended question to provide a maximum of three most often used rationales for architectural decisions, according to the participant’s personal experience. 3. An open-ended question to provide a maximum of three most often used rationales for architectural decisions by the participant’s colleagues. We asked this question to investigate if the participants believed that other practitioners have diﬀerent priorities from them. 4. An optional section containing the option to provide an email and give consent for further contact from the researchers. In order to obtain samples for the study, we distributed the questionnaires in three diﬀerent locations: 1. During a 3-day long IT career fair at our faculty, where representatives of over 50 companies were present. We approached each stall and gave a physical copy of the questionnaire to the practitioners that were advertising their companies. We obtained 35 completed questionnaires at this event. 2. During an IT conference for practitioners and students, where representatives from over 60 companies were present. We used the same strategy as the one during the career fair and obtained 15 additional completed questionnaires. 3. We made the questionnaire available online and posted it on our personal social media accounts; this led to additional information from 13 participants. In total, we obtained data from 63 participants. A summary of the participants’ demographic data is presented in Fig. 2, and their employers’ companies’ domain and size in Fig. 3. 3.2  
   
  Questionnaire: Analysis  
   
  To analyse the questionnaire, we performed the following actions: 1. We divided the participants into the following groups: beginners (under ﬁve years of experience), mid-career (5 to 14 years of experience), and experienced (15 or more years of experience) practitioners. 2. We extracted the answers about the participants’ as well as their colleagues’ rationales and analysed them separately. 3. For each of the six combinations of the above groups (participants’ experience level and their own/colleagues’ rationales) separately, we classiﬁed the rationales (even if they were worded diﬀerently) into categories. When applicable,  
   
  Architectural Decisions Rationales  
   
  307  
   
  Fig. 2. Questionnaire participants  
   
  Fig. 3. Questionnaire participants companies  
   
  we used the ISO/IEC 25010 [10] software quality attributes as the rationale categories. We grouped rationales into categories, since participants often used diﬀerent words to explain the same factors inﬂuencing their decisionmaking. A rationale category groups rationales that are similar to such a degree that we found them almost indistinguishable. For example, we categorised all of the following as “Time/Deadlines”: “time that we will waste on it; how much time there is to do it; time available to create the software; Number of hours required to write the functionality; time-consumption of making the solution; time-consuming; deadline to deliver the project; time available; time”. When rationales were only related to each other, like for example “Documentation” and “Maintainability”, we did not categorise them together. Table 3 summarises the questionnaire analysis results.  
   
  308  
   
  3.3  
   
  K. Borowa et al.  
   
  Interviews: Data Gathering  
   
  Based on questionnaire data analysis, when creating the interview plan [6], we focused on the following categories of observations: 1. The rationales common for 20% of the participants of each professional experience level. 2. Quality attributes of generally low interest to the architects, namely, attributes mentioned by fewer than 5% of all the participants. 3. Cases in which answers varied among architects of diﬀerent experience levels. For example, some rationales were over the 20% cutoﬀ score in one group but not in all of them. We presented the results from the questionnaire in which the above cases occurred to the interviewees. Then, we asked them about the reasons behind the observed level of importance of these rationales for speciﬁc architects’ experience groups. All 13 interviewees were recruited from the questionnaire participants. We invited to a follow-up interview all participants that consented to a follow-up interview in the questionnaire. Table 1 presents the overview of the interviewees’ characteristics. Table 1. Interview participants No. Gender Age Experience Education (years) (years)  
   
  Role  
   
  Company size (employees)  
   
  Company domain  
   
  1  
   
  Male  
   
  23  
   
  1  
   
  Bachelor’s  
   
  Software Engineer  
   
  1001–5000  
   
  2  
   
  Male  
   
  22  
   
  1  
   
  Bachelor’s  
   
  C++ Developer  
   
  51–200  
   
  3  
   
  Male  
   
  45  
   
  22  
   
  PhD  
   
  Company owner  
   
  0–50  
   
  4  
   
  Male  
   
  23  
   
  1  
   
  5 6  
   
  Male Male  
   
  22 23  
   
  1 3  
   
  Infrastructure monitoring Power Engineering IT, Data Science Software House E-commerce Consulting  
   
  7 8 9 10 11 12  
   
  Male Male Male Female Male Male  
   
  24 31 45 25 41 28  
   
  4 5 20 3 20 5  
   
  13  
   
  Male  
   
  32  
   
  6  
   
  Bachelor’s  
   
  Pythin Backend Developer High School Junior Developer Bachelor’s Junior Java Developer Bachelor’s Software Engineer Master’s Software Developer PhD Architect Master’s NLP Engineer PhD CTO High School Senior Testing Engineer Master’s Senior Software Engineering Manager  
   
  51–200 1001–5000 over 5000 51–200 1001–5000 over 5000 over 5000 201–1000 201–1000 over 5000  
   
  Finance Electronics Commerce R&D Finance Videogame development FMCG  
   
  Architectural Decisions Rationales  
   
  3.4  
   
  309  
   
  Interviews: Analysis  
   
  The interview recordings have been transcribed. Then we coded the transcripts by following the subsequent steps: 1. Two separate authors coded the same transcript using the descriptive coding method [18]. This means that segments of the transcripts, which contained a relevant piece of information, were labelled with a code that described its type of content. We started with an empty list of codes, to avoid biasing the results towards our own ideas, and allowed the codes to emerge during the coding process. 2. Both coding authors met to negotiate their coding [9] — they made changes to the coding until reaching a unanimous consensus. 3. An updated list of codes was created as a result of the coding meeting. 4. One of the authors re-coded previously coded transcripts with new codes if they emerged during the current analysis step. 5. The above steps were repeated for each interview transcript. Table 2. Codes Code  
   
  EX  
   
  Description  
   
  Perspective/performed tasks change with the developer’s experience CLNT Recognising client’s needs, focusing on the client’s beneﬁt. EASY Participant mentions how important ease of use for development/maintenance is in the project FUT Thinking about what eﬀects the choice will have for the project D Focusing on the deadline/ how much time something will take FAM Choosing something based on one’s familiarity with it IMP The rationale was omitted because it is ’obviously’ important EMP Thinking how the choice will impact other people Focusing on personal growth CR OUTDATED The rationale does not require much thought because it is handled by newer technology NEG The participant disagrees with other practitioners’ opinions (from the questionnaire) EDU Described behaviour is an eﬀect of education The participant considers something as niche or RARE unimportant  
   
  Number of Number of occurinterviews rences where code occurred 58  
   
  13  
   
  31  
   
  12  
   
  28  
   
  13  
   
  29  
   
  12  
   
  23  
   
  9  
   
  25  
   
  9  
   
  18  
   
  9  
   
  15 15 13  
   
  10 8 8  
   
  11  
   
  7  
   
  10 9  
   
  7 5  
   
  310  
   
  K. Borowa et al.  
   
  Codes are summarised in Table 2. After coding all transcripts, we analysed and discussed the coded segments to draw conclusions.  
   
  4  
   
  Results  
   
  Table 3 presents the questionnaire results. As explained in Sect. 3.3, we consider the rationale as important to a given group of architects if it was indicated but at least 20% of them. Additionally, we focused on software quality attributes that were mentioned by less than 5% of the participants and the variation in rationale prioritisation in diﬀerent groups of participants. 4.1  
   
  RQ1 & RQ2: Most Frequent Rationales and Prioritised Software Quality Attributes  
   
  The rationales that most frequently occurred in the questionnaires (over 20% of participants) were: 1. “Ease of use for development” was the dominant rationale for almost all groups of participants. Over 40% of the beginner and expert groups believed Table 3. Questionnaire results. ISO/IEC 25010 quality attributes are marked by a bold font. Sum  
   
  Beginners  
   
  Mid-career  
   
  Experienced  
   
  No Rationale category  
   
  Participants Colleagues Participants Colleagues Participants Colleagues Participants Colleagues  
   
  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  
   
  23 15 14 14 12 10 9 8 8 7 7 6 5 5 5 5 5 4 4 4 3 3 3 2 2 2 1 1 1 0 0 0 0  
   
  Ease of use for development Maintainability Performance Prior knowledge/experience Time/deadline Reliability Development Project Environment Cost Popularity Scalability Business/customer requirements Documentation Usability Security Aesthetics/UX Fit with existing systems/project Decision-making methodology Testability (simplicity of writing tests) Level of complexity of the problem/system Expertise of more experienced colleagues Functional Suitability Availability of packages Team members’ preferences Portability System life expectancy I want to add new skill to my resume Compatibility Return on Investment (ROI) Market expectations Available human resources/money Bus factor “It works so I should use it” My colleagues have the same rationales as me  
   
  11 2 6 14 8 4 2 9 8 3 5 4 0 2 2 7 4 0 1 1 1 0 4 2 0 1 2 1 0 4 1 1 19  
   
  16 12 13 11 10 6 4 5 7 4 4 6 3 3 1 4 0 3 4 4 2 1 2 2 0 2 0 1 1 0 0 0 0  
   
  7 1 6 9 6 3 1 7 5 3 4 4 0 2 1 4 0 0 1 1 1 0 4 1 0 1 0 1 0 2 1 1 13  
   
  2 2 0 1 1 2 3 1 0 2 1 0 2 2 2 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0  
   
  0 1 0 2 0 1 1 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 4  
   
  5 1 1 2 1 2 2 2 1 1 2 0 0 0 2 1 3 1 0 0 1 2 1 0 2 0 1 0 0 0 0 0 0  
   
  4 0 0 3 2 0 0 2 2 0 1 0 0 0 1 2 3 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 2  
   
  Architectural Decisions Rationales  
   
  311  
   
  that it was important. However, this was not the case for mid-career practitioners, where only 15% mentioned this rationale. 2. The quality attribute of “Maintainability” was the second most often indicated rationale, which was mentioned by 24% of the participants. This was due to the beginners’ insistence that this rationale is important (30% of them), though it was not similarly prioritised by mid-career practitioners (15%) and experts (8%). 3. Both the quality attributes of “Performance” and “Prior knowledge/experience” were mentioned by the same number of practitioners overall (22%). “Performance”, similarly to “Maintainability”, was important to beginners (33%) but not to mid-career (0%) and to expert practitioners (8%). “Prior knowledge/experience” of the solution, in the same way as “Ease of use for development”, was prioritised by both beginners and experts (over 20% in both groups) but not by mid-career practitioners (only 8%). Rationales that were overall mentioned by less than 20% of the participants but were important for a particular group of practitioners (over 20% of that group): 1. “Time/deadline” is a rationale that was mentioned by 26% of beginners but less often by mid-career and expert practitioners (8% in both groups). 2. “Development Project Environment”, which refers to various aspects of management and organisation of development project (e.g. company standards, client speciﬁcs) or current possibilities (available technologies), was important to mid-career practitioners (23%) but less so to beginners (10%) and experts (16%). 3. A “decision-making methodology” was by experts (25%) but only a few mid-career practitioners (8%) and no beginners. Three software quality attributes were mentioned by less than 5% of the participants: Compatibility (1 participant), Portability (2 participants) and Functional Stability (3 participants). Finally, when asked about their colleagues’ rationales, most participants wrote unprompted in their questionnaires that their colleagues are motivated by the same rationales as they are themselves (30%). These were not cases of copying the same answers from one question to another but literally writing a statement about one’s colleagues. This answer dominated the beginner (33%) and mid-career (31%) groups but occurred less frequently in the expert group (17%). 4.2  
   
  RQ3: Rationales’ Origins  
   
  By analysing the interviews, we found a key set of rationales’ origins. Some rationales and rationale origins may slightly overlap (e.g. “Time/deadlines” rationale and “fear of deadlines” rationale origin). This was the case when participants listed both a rationale in the questionnaire and a rationale’s origin in the  
   
  312  
   
  K. Borowa et al.  
   
  interviews. The rationale’s origins include (number of code occurrences overall/number of interviews where code occurred): 1. Practitioner’s experience(58/13): The primary origin of the practitioners’ rationales were their previous experiences. Beginners had limited experience, and to avoid the risk of not performing their duties eﬃciently, they preferred the solutions which they had used previously - because of that, “Ease of use for development” and “Prior knowledge” turned out to be the prevailing rationale for them. As one of the participants stated: “(...) [junior developers] are such fresh people, it is certainly much more convenient. Because, well, since it’s easy to learn something [how to use a solution], it’s easy to reach the right level quite quickly.” Experts with signiﬁcant experience also prioritised these rationales but for diﬀerent reasons – they already had knowledge that they were conﬁdent in, so they did not feel the need to try new solutions and leave their comfort zone, e.g. “Maybe more experienced people who worked a long time with a certain technology change it less often than people who are just entering the IT market (...), but feel comfortable with certain technologies and have been comfortable working with them for many years.” The exception to this eﬀect were mid-career practitioners who were most likely to possess the knowledge and willingness to discover new solutions. As a participant said: “Maybe the moderately experienced people are neither those very experienced people who have been working in a particular technology for a longer period of time, but those who change it more often and maybe they see that it is not that diﬃcult, they are used to changing technologies.” The practitioner’s experience inﬂuence was also crucial for choosing the “Time/deadline” and “decision-making methodology” rationales. Beginners feared the possible consequences of missing a deadline more than other practitioners. Hence, they indicated the “Time/deadline” rationale more frequently than more experienced architects, e.g. “People with more experience are more assertive when it comes to deadlines and are able to say ‘no’ when they know that it is simply impossible to do something in a certain time, and those with less experience may also not be so sure that this is the moment that it is worth saying ’no’ and not doing something, they are afraid of the deadline.” However, using a “decision-making methodology” as their rationale’s foundation was only possible to experienced practitioners due to their greater knowledge, e.g. “ (...) we [the architects] are just getting used to such methodologies, acquiring them, so we will only use them after some time.” 2. Client focus (31/12): Various rationales originated from the endeavour to meet the client’s needs. Practitioners often prioritised “Ease of use for development” and “Time/deadline” rationales because they strived to deliver new functionalities to the client as soon as possible, e.g. “(...) recently there has been a lot of emphasis on time to market and deadlines for implementing individual functionalities, which are usually short.”  
   
  Architectural Decisions Rationales  
   
  3.  
   
  4.  
   
  5.  
   
  6.  
   
  313  
   
  Similarly, the “Development Project Environment” had to be considered to satisfy the client’s needs. Even if two projects appeared to be the same, the environment often made a diﬀerence in its development. As one participant stated: “Otherwise, seemingly the project sounds the same, but in practice, the client often wants something completely diﬀerent than the previous one.” Additionally, “Performance” was seen generally as a key software quality attribute from the client’s perspective, since weak software performance (software freezes, long waiting times, etc.) was seen as very problematic to the clients, e.g. “(...) usually the performance of the system is related to the comfort of use, so it seems to me that this is also the reason why performance is an important criterion.” Making one’s life “easy” (28/13): Generally, practitioners choose solutions that they believed would make their work as eﬀortless as possible. This was not only related to the “Ease of use for development” rationale but also “Prior knowledge” (the source of information about what is “easy”) and “Maintainability” (minimisation of future work). As one participant stated: “Some developers are lazy, which means that solutions that are easier to maintain often scale easier and perhaps require less work or less mental eﬀort to add a new feature or to ﬁx a bug.” Thinking of the project’s future (29/12): In general, practitioners were aware of the software life-cycle and knew that “Maintainability” could impact the amount of eﬀort they would have to put into maintaining the system in the future. However, “Ease of use for development” was also a rationale impacted by this factor. Practitioners believed that if it is easy to use a given solution, it will also be easier to ﬁnd, hire and train new employees that would work on the project in the future, e.g. “(...)the ease of training new employees to work, whenever the software is easier to develop and is based on popular technology or the code is transparent, it is easier to introduce someone new here.” Fear of deadlines (23/9): The fear of missing a deadline had a major impact on beginner practitioners. This was not the case for mid-career and expert practitioners since they already had experiences with missed deadlines in their careers and had the capacity to imagine how such a situation could be handled. For example: “I think it’s because the more experienced ones, I also know that this is how managers and programmers work, as well as project managers, that they know that this deadline is set with some reserve.” Familiarity with a particular solution(25/9): Prior experience with a particular solution was the main source of architectural knowledge. Since it is rarely possible to explore all the possible alternatives, prior experiences are the primary source of information, e.g. “Architecture, all engineering, in general, is based on experience, and experience means things that we brokne in previous designs, in previous products. And on this experience, which looks so negative, but is nevertheless building our knowledge, we base what we create in the future.”.  
   
  314  
   
  K. Borowa et al.  
   
  7. “Obviousness” (18/9): In the case of the “Functional Stability” quality attribute, some practitioners expressed the opinion that the importance of this rationale is simply obvious, and as such, there was no need to mention it in the questionnaire, e.g. “It’s [Functional Stability] also so mundane and part of such day-to-day work that maybe we don’t tie it to the architecture.”. 8. Empathy (15/10): “Ease of use for development” and “Maintainability” were often prioritised because of the practitioners’ awareness that their colleagues will have to maintain and further expand a system in the future, e.g. “It should be done in such a way that I would not hurt myself or that it would not be painful for my colleagues to maintain. I see in this perhaps some form of empathy.”. 9. Personal growth (15/8): Mid-career practitioners did not prioritise “Ease of use for development” and “Prior knowledge” rationales, as beginners and experts did. Our participants pointed out that mid-career practitioners are in a speciﬁc professional situation where they can already feel conﬁdent in their basic knowledge (unlike beginners) but strive to learn about new solutions to further develop their careers (unlike experts). As one participant stated: “(...) resume driven development, i.e. we choose those technologies that will look nice in the CV, or that will make us learn something.”. 10. New technology handles the problem (11/7): In the case of the “Compatibility”, and “Portability’ quality attributes, practitioners believed that new technologies already solved most problems related to these rationales. In the case of “Compatibility”, currently, existing standards are widely used, and compatibility problems are rare. As a participant stated: “(...) because everything is somehow compatible with each other, only a matter of certain calling some services(...)”. Similarly, the widespread use of virtualisation and containerisation solved most problems with “Portability”, as a participant stated: “(...) because practically everything can be uploaded, containerized”. 11. Practitioner’s education(10/7): “Performance” was stated to be a rationale prioritised by beginner practitioners that recently ﬁnished their degrees in a ﬁeld related to Software Engineering. This was due to the focus on the use of optimal data structures and algorithms during their studies, e.g. “(...) during studies and in earlier educational programming, a lot of emphasis was placed on making these solutions work quickly. I even had one subject where we were judged on how many minutes it took to run a program, so it stuck in my head a bit.”. 12. Perception of the quality attribute as unimportant(9/5): Some participants stated that in the case of the projects that they worked on, “Compatibility” and “Portability” quality attributes were not important. For example, the project was targeted to work on a very speciﬁc platform, as the participant stated: “(...)projects are created, for speciﬁc hardware or for speciﬁc platforms, not multi-platform solutions.”  
   
  Architectural Decisions Rationales  
   
  5  
   
  315  
   
  Discussion  
   
  Two top rationales that were not quality attributes were “Ease of use for development” and “Prior knowledge/experience”. This result is similar to the ﬁndings of Miesbauer et al. [14] and Weinreich et al. [23] who found that the most inﬂuential rationale was “Personal experience/Preferences”. This implies that the current trend of researching human factors in ADM [2,15] is appropriate for further understanding and improving ADM. To be more speciﬁc, it seems that practitioners prioritise minimising their own and their colleagues’ workload, both in the short and the long term. This ﬁts with the principle of “Simplicity – the art of maximising the amount of work not done” [1] from Agile software development. However, if done inappropriately, this can lead to consequences such as incurring architectural technical debt [12]. The quality attributes of “Maintainability” and “Performance” were perceived as the most important out of the set of ISO 25010 software quality attributes [10]. This matches the ﬁndings of Bi et al. [4] who found these to be the most often discussed quality attributes in the context of architectural patterns. We further explain this phenomenon since we found that beginner practitioners emphasise these rationales more than experts. In the case of “Maintainability”, it seems that they wanted to avoid their own future workload, which may be perceived as an intimidating perspective. In the case of “Performance”, beginners followed the knowledge acquired during their formal education and the emphasis of scholars on algorithmic eﬃciency. Additionally, we found that practitioners in general do not put an emphasis on the quality attributes of “Portability” and “Compatibility”. Modern technologies deliver solutions that well-address both these issues. In the case of “Portability”, there are many eﬃcient tools that resolve such problems: virtualisation, containerisation or frameworks for building multi-platform applications. Furthermore, in some ﬁelds (like developing console video games), the hardware on which the software will be run can be accurately predicted. Challenges with “Compatibility” have been overcome mostly through the standardisation of the technologies used by practitioners; for example, in the case of web applications, a REST API between the front-end and back-end layers is a predictable solution that most would choose by default. Finally, we discovered that depending on experience level, practitioners have a signiﬁcantly diﬀerent mindset when it comes to ADM. Beginners are greatly inﬂuenced by a fear of the unknown: they fear that it would be too hard to develop the software, or to maintain it later, to learn new solutions during the projects, and the consequences of unmet deadlines. Experts experience less fear of deadlines but put an emphasis on ease of development to make their colleagues’ work easier and feel comfortable with their current practices. They were also the only group to use any decision-making methodologies, which they found natural if they gained enough knowledge. Lastly, mid-career practitioners are the most open to learning about new solutions and attempting not to use ones that are not considered “easy”, to create bespoke solutions that would ﬁt their clients the best.  
   
  316  
   
  6  
   
  K. Borowa et al.  
   
  Threats to Validity  
   
  In this Section we describe three main kinds of threats to validity [17]: Construct Validity To ﬁnd the participants’ rationales for architectural decisions, the possible methods of enquiry are either methods based on selfreporting or observation of the participants’ work. We have chosen self-reporting methods (questionnaires and interviews) since that enabled us to obtain data from a greater number of practitioners. However, it is still possible that the participants’ actual rationale may diﬀer from those that they reported. For example, they may be impacted by cognitive biases [24] that they are not aware of. Internal Validity To maximise the internal validity of our ﬁndings, the coding of the transcripts was always done independently by two authors. Then, both discussed the coding until they unanimously agreed on all codes. This was done to minimise the impact of the researcher’s bias on the ﬁndings. However, it is possible that factors that we did not consider could play a role in practitioners’ approach to decision-making, such as their company’s size or domain. External Validity We used convenience sampling since it is an extreme challenge to obtain a random generalisable sample of software practitioners. However, we strived to overcome this by providing data source triangulation [17]: we searched for participants from three diﬀerent sources (two in-person events and one on social media). This resulted in a varied group of participants. Though, worth noting is that the sample may be biased towards less experienced practitioners, due to the majority of participants having less than 4 years of professional experience. Additionally, since our results partially match results from previous studies [4,14,23], it seems that our sample was big enough to give us outcomes also noticeable to other researchers.  
   
  7  
   
  Conclusion  
   
  In this study, we performed a mixed methods two-step empirical inquiry into the practitioners’ rationale behind their architectural decisions. The three main contributions of this study are as follows: 1. A list of the most impactful rationales that inﬂuence practitioners’ architectural decision-making; 2. An exploration of these rationales’ origin; 3. The ﬁnding of how a practitioner’s experience has a signiﬁcant impact on how they make architectural decisions. Future research could employ diﬀerent research techniques to further conﬁrm or disconﬁrm our ﬁndings. A survey on a random generalisable sample would be beneﬁcial, as well as observational studies on practitioners that would explore their decision-making in real-time. In accordance to our ﬁndings, since experience level seems to be a major factor shaping who architects make their decisions researchers should take it into account during future research on ADM.  
   
  Architectural Decisions Rationales  
   
  317  
   
  Practitioners could beneﬁt from our study by understanding better the way they and their colleagues develop software architectures. The observation on the inﬂuence of experience on ADM should also be reﬂected in shaping a team’s structure, e.g. it would be prudent to focus on having mid-career (between 5 and 14 years of experience) practitioners in their teams when working on an innovative project.  
   
  References 1. Beck, K., et al.: Principles behind the Agile Manifesto (2001). https:// agilemanifesto.org/principles.html 2. Bhat, M., Shumaiev, K., Hohenstein, U., Biesdorf, A., Matthes, F.: The evolution of architectural decision making as a key focus area of software architecture research: a semi-systematic literature study. In: 2020 IEEE International Conference on Software Architecture (ICSA), pp. 69–80. IEEE (2020) 3. Bhat, M., Tinnes, C., Shumaiev, K., Biesdorf, A., Hohenstein, U., Matthes, F.: ADeX: a tool for automatic curation of design decision knowledge for architectural decision recommendations. In: 2019 IEEE International Conference on Software Architecture Companion (ICSA-C), pp. 158–161. IEEE (2019) 4. Bi, T., Liang, P., Tang, A.: Architecture patterns, quality attributes, and design contexts: how developers design with them. In: Proceedings - Asia-Paciﬁc Software Engineering Conference, APSEC 2018-Decem(61472286), pp. 49–58 (2018) 5. Bi, T., Liang, P., Tang, A., Xia, X.: Mining architecture tactics and quality attributes knowledge in stack overﬂow. J. Syst. Softw. (May) (2021) 6. Borowa, K., Lewanczyk, R., Stpiczy´ nska, K., Stradomski, P., Zalewski, A.: What rationales drive architectural decisions? An empirical inquiry - Additional material (May 2023). https://doi.org/10.5281/zenodo.7946764 7. Burge, J.E.: Design rationale: Researching under uncertainty. Artif. Intell. Eng. Design, Anal. Manuf.: AIEDAM 22(4), 311–324 (2008) 8. De Dieu, M.J., Liang, P., Shahin, M.: How do developers search for architectural information? An industrial survey. In: Proceedings - IEEE 19th International Conference on Software Architecture, ICSA 2022 (December 2021), pp. 58–68 (2022) 9. Garrison, D.R., Cleveland-Innes, M., Koole, M., Kappelman, J.: Revisiting methodological issues in transcript analysis: negotiated coding and reliability. Internet Higher Educ. 9(1), 1–8 (2006) 10. ISO/IEC 25010: ISO/IEC 25010:2011, systems and software engineering - systems and software quality requirements and evaluation (square) - system and software quality models (2011) 11. Jansen, A., Bosch, J.: Software architecture as a set of architectural design decisions. In: 5th Working IEEE/IFIP Conference on Software Architecture (WICSA’05), pp. 109–120. IEEE (2005) 12. Kruchten, P., Nord, R., Ozkaya, I.: Managing Technical Debt. Addison-Wesley Professional (2019) 13. Liu, M.X., et al: Unakite: scaﬀolding developers’ decision-making using the web. In: Proceedings of the 32nd Annual ACM Symposium on User Interface Software and Technology, pp. 67–80 (2019) 14. Miesbauer, C., Weinreich, R.: Classiﬁcation of design decisions – an expert survey in practice. In: Drira, K. (ed.) ECSA 2013. LNCS, vol. 7957, pp. 130–145. Springer, Heidelberg (2013). https://doi.org/10.1007/978-3-642-39031-9 12  
   
  318  
   
  K. Borowa et al.  
   
  15. Razavian, M., Paech, B., Tang, A.: Empirical research for software architecture decision making: an analysis. J. Syst. Softw. 149, 360–381 (2019) 16. Razavian, M., Tang, A., Capilla, R., Lago, P.: Reﬂective approach for software design decision making. Proceedings - 1st Workshop on Qualitative Reasoning about Software Architectures, QRASA 2016 pp. 19–26 (2016) 17. Runeson, P., H¨ ost, M., Rainer, A., Regnell, B.: Case study research in software engineering: guidelines and examples (2012). https://www.wiley.com 18. Salda˜ na, J.: The coding manual for qualitative researchers, pp. 1–440 (2021) 19. Soliman, M., Riebisch, M., Zdun, U.: enriching architecture knowledge with technology design decisions. In: Proceedings - 12th Working IEEE/IFIP Conference on Software Architecture, WICSA 2015, pp. 135–144 (2015) 20. Tang, A., Babar, M.A., Gorton, I., Han, J.: A survey of architecture design rationale. J. Syst. Softw. 79(12), 1792–1804 (2006) 21. Tang, A., Kazman, R.: Decision-making principles for better software design decisions. IEEE Softw. 38(6), 98–102 (2021) 22. Tofan, D., Galster, M., Avgeriou, P.: Diﬃculty of architectural decisions - a survey with professional architects. In: Drira, K. (ed.) Softw. Architect., pp. 192–199. Springer, Berlin Heidelberg (2013). https://doi.org/10.1007/978-3-642-39031-9 17 23. Weinreich, R., Groher, I., Miesbauer, C.: An expert survey on kinds, inﬂuence factors and documentation of design decisions in practice. Future Gener. Comput. Syst. 47, 145–160 (2015) 24. Zalewski, A., Borowa, K., Ratkowski, A.: On cognitive biases in architecture decision making. In: Lopes, A., de Lemos, R. (eds.) Softw. Architect., pp. 123–137. Springer International Publishing, Cham (2017). https://doi.org/10.1007/978-3319-65831-5 9 25. Zimmermann, O., Koehler, J., Leymann, F., Polley, R., Schuster, N.: Managing architectural decision models with dependency relations, integrity constraints, and production rules. J. Syst. Softw. 82(8), 1249–1267 (2009)  
   
  Learning from Each Other: How Are Architectural Mistakes Communicated in Industry? Marion Wiese(B) , Axel-Frederik Brand, and Andr´e van Hoorn Universit¨ at Hamburg, Department of Informatics, Hamburg, Germany [email protected]   
   
  Abstract. Context. Own experiences and faulty decisions can be an important source of information for software architects. The experiences and mistakes of other architects can also be valuable information sources. Goal. Under the assumption that the knowledge about faulty decisions, i.e., mistakes, regarding software architecture is not shared adequately in practice, this work qualitatively investigates the handling and particularly communication of those mistakes by software architects. Method. We conducted a grounded-theory study in which we interviewed ten German software architects from various domains. Results. We identiﬁed software architects’ deﬁnitions of architectural mistakes, their handling of these mistakes, and their preferred communication strategies regarding these mistakes. We found that architects communicate mistakes mainly within their project teams and seldom within or across companies. Conclusions. We derived strategies to make learning and prevention of mistakes more eﬀective. To share experiences and knowledge beyond architects’ peer groups, companies should invest more eﬀort in discussing mistakes more consciously and create an environment where mistakes can be discussed openly. Keywords: Software Architecture · Software Architecture Knowledge · Software Architecture Decisions · Software Architecture Communication  
   
  1  
   
  Introduction  
   
  “Errare humanum est” — to err is human, is common knowledge since ancient times [10]. In software architecture, we also make mistakes. By sharing our experiences with mistakes, we enhance the chance of not repeating them. In other domains, e.g., economics, it has become common to learn from each other’s mistakes by sharing experiences, e.g., by conducting “Fuck up nights” [1]. However, in software architecture (SA), it seems that mistakes are not a commonly discussed topic. Even using the term “mistake” in the context of SA may seem oﬀensive. c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 319–336, 2023. https://doi.org/10.1007/978-3-031-42592-9_22  
   
  320  
   
  M. Wiese et al.  
   
  Technical debts are constructs in software systems that are beneﬁcial in the short term but hinder changes in the long term [2]. Technical debt in SA was identiﬁed as one of the most dangerous types [13] because there is a lack of refactoring strategies [3]. One goal to avoid architectural technical debt is to amass knowledge and have at least some experience before deciding on an SA issue. A lot of research focuses on the optimization of SA processes, particularly with regard to SA decision-making [4,21] and gathering SA knowledge [22]. Soliman et al. found that when searching for SA knowledge on Google, experience reports on design decisions and drawbacks of solution options are relevant to a decision but are underrepresented in search results [20]. Architects deal with mistakes, i.e., design decisions that turn out to be suboptimal, by doing “post-mortems” [5] or by deﬁning anti-patterns [17], and architecture smells [14]. However, the question of how to communicate the mistakes between architects is not yet researched systematically to the best of the authors’ knowledge. Our goal is to ﬁll this gap by conducting a grounded theory study. We interviewed ten software architects to gather their approaches to sharing bad experiences regarding decisions in SA, i.e., SA mistakes (SAMs). To follow this goal, we answer the following research questions (RQs): – RQ 1: How do architects define a SA mistake? This question lays the foundation for our work, as the term mistake is not yet commonly used or deﬁned in relation to SA. – RQ 2: How do architects manage SA mistakes? We explain how the architects identify and handle SAMs. It is relevant to understand the overall management of SAMs to identify communication within these processes. Furthermore, we created a comprehensive model of the SAMs’ management. – RQ 3: How do architects communicate SA mistakes? We identiﬁed the ways architects communicate SAMs and particularly on which level, i.e., personal, team-wide, company-wide, or even outside of their company. Furthermore, we identiﬁed factors that suppress or promote the communication of SAMs. Thereby, we uncovered opportunities for process improvements. As the contribution of our study, we answer the research questions and provide: – A deﬁnition of SA mistakes – A theory of a model of SA mistakes’ management – SA mistakes communication issues and potential for improvement In Sect. 2, we explain our research methodology. We present the results and answer the research questions in Sect. 3. In Sect. 4, we discuss our ﬁndings. We compare our study with related work in Sect. 5 and discuss the threats to validity of our study in Sect. 6. With Sect. 7, we conclude our paper and summarize the contributions for practitioners and researchers. Additional material is available [24].  
   
  How Are Architectural Mistakes Communicated in Industry?  
   
  2  
   
  321  
   
  Method  
   
  To answer our research question, we did a grounded theory study. Grounded Theory was ﬁrst introduced by Glaser & Strauss [7]. In grounded theory, the collected data is analyzed interpretatively, and identiﬁed concepts are comprehensibly collected. The concepts are compared, structured, and summarized into categories. From these categories, theses are derived that are valid across the data. The ﬁnal goal of Grounded Theory is to develop a theory on the researched topic. This theory must then be validated by further studies, e.g., surveys. The coding and analysis process takes place in parallel to the collection of new data, whereby the categories are iteratively reconsidered, compared, and questioned. This is referred to as the method of constant comparison. The process of collecting and analyzing data is carried out until the theory is saturated. Saturation is reached when new data hardly generate any new insights in the form of new concepts and categories. We collected and analyzed data in three phases that merged into one another. In each phase, we adapted the interview guide, did the interviews, and analyzed the corresponding data. 2.1  
   
  Data Collection  
   
  We conducted ten interviews with architects selected according to our sampling strategy and in accordance with our interview guide. We transcribed the recordings of the interviews for further analysis. All interviews were held in the German language. Sample. We recruited software architects from our personal network, via social media and speakers from conferences in three phases. All participants completed a survey about their personal background, e.g., domain, company size, and experience level (see [24]). With this information and the iterative approach, we ensured to gather participants from diﬀerent domains, with diﬀerent levels of experience, and consulting and company architects. A variety of participants is important to validate that code saturation is reached for the given context, i.e., German software architects. An overview of the participants can be seen in Table 1. Interview Guideline. We adapted the guideline before each of the three phases to iteratively focus on the emerging theory. All guidelines are available on Zenodo [24] In the end, i.e., in phase three, this led to the following nine questions: 1. What is a SAM or faulty decision in this context? 2. Can you give me examples from your own experience of a SAM or faulty decision? (plus sub-questions regarding the handling of this speciﬁc example) 3. What is the role of communicating bad decisions and mistakes for software architects? 4. How do you talk about bad decisions with your colleagues or other architects? 5. How do you talk about SAMs with your team lead or other managers? Does your communication style diﬀer from your colleagues?  
   
  322  
   
  M. Wiese et al. Table 1. Study Participants  
   
  Participant Company Domain P1 Media P2 Consulting P3 Consulting P4 Aviation P5 Industry P6 Consulting P7 Consulting P8 Consulting P9 Consulting P10 Insurance  
   
  Company size (#employees) 1000-5000 >5000 >5000 >5000 >5000 0-100 100-1000 1000-5000 0-100 >5000  
   
  Team organization agile agile agile agile mix (agile/classic) agile agile agile agile agile  
   
  Years Years as Gender in IT architect >20 5-10 f 10-15 10-15 m >20 10-15 m 15-20 10-15 m 10-15 2-5 m 15-20 5-10 m 5-10 5-10 m >20 15-20 m >20 >20 m >20 >20 f  
   
  6. How do diﬀerent error cultures (e.g. through in-sourcing/out-sourcing or international work/diﬀerent companies) inﬂuence you in dealing with SAMs or faulty decisions? 7. How are faulty decisions or SAMs dealt with in your company for the purpose of knowledge transfer? 8. How has the way you deal with and communicate mistakes changed over time? 9. With regard to concrete faulty decisions — how and with whom should software architects communicate them? 2.2  
   
  Data Analysis  
   
  We coded the transcriptions according to Charmaz’s guidelines and reached theoretical saturation after ten interviews [6]. Coding. According to Charmaz [6], the process of coding consists of two phases: initial coding and focused coding. Initial coding is an inductive approach. Data segments are considered word-by-word and sentence-by-sentence, and all initial analytical concepts are collected without further comparison. Focused coding describes hierarchical sorting and abstracting, i.e., merging of concepts or categories as well as the selection of core categories on which the analysis is focused. The process no longer focuses on the raw data but only on the codes. Furthermore, through cross-coding phases, during which we constantly compared the codes and coded segments, we iterated through every interview multiple times to make sure that the codes were comparable and identical in meaning (Code list see [24]). Theoretical Saturation. The goal of the methodology is to achieve theoretical saturation. Theoretical saturation means that the evaluation of new data, for  
   
  How Are Architectural Mistakes Communicated in Industry?  
   
  323  
   
  example, through further interviews, no longer fundamentally changes the existing structure of the category system. To evaluate saturation, the number of new codes in each new interview is evaluated, and the goal is to amass fewer codes with each interview’s evaluation, particularly focus codes. As we used cross-coding, the number of codes varied a lot and even got smaller if codes were merged in the process. During our last three interviews, we reduced the codes from 291 codes to 264 codes. During the last interview, we still gained 13 codes (see [24]). However, all these new codes were initial codes and did not provide new insides for the report of the results. Therefore, we assume theoretical saturation for the results presented in this paper.  
   
  3  
   
  Results  
   
  In this section, we give a detailed overview of the deﬁnition and characteristics of SA mistakes and how to detect them. We present how architects handle detected SAMs and, ﬁnally, summarize how they communicate the detected SAMs. Each section concludes with a summary. 3.1  
   
  RQ1: Definition and Characteristics of SA Mistakes  
   
  From the transcripts, we extracted the following deﬁnition of SAMs and their characteristics. Definition. A SA decision is classiﬁed as a mistake if, for a given problem, an alternative solution exists that solves the problem better than the implemented solution. The choice of an architect is always associated with trade-oﬀs and considerations. Whether a problem is solved “better” is not easy to judge objectively. Therefore, some participants describe SAMs by their negative impact on non-functional quality attributes. “When it comes to architectural decisions, that [a mistake] is if something doesn’t work, I mean more the non-functional [if ] you will not meet a non-functional requirement.” The eﬀects of a SAM are often noticed particularly late, i.e., they have a long feedback cycle. “The question is, however, after some time, when you reach an appropriate scale, and the application has a corresponding scope, whether you then realize: Yes, you’ve got it working, but it’s not really running ideally.” SAMs are considered diﬃcult to identify because the alternatives are not directly known to the architects. Even if the architects know the alternatives, the eﬀects of SA decisions are diﬃcult to assess. “However, you often do not see what an alternative implementation would have brought and what diﬃculties it would have brought with it.” SA is an overarching topic because SA should fulﬁll many diﬀerent, conﬂicting goals with many inﬂuencing factors and constraints. Therefore, problems are not simply attributable to individual decisions: “So I think with architecture mistakes, it’s often the case that you can’t even say that they did something wrong at that point, but it is rather that somehow the realization arises that something is not going right.”  
   
  324  
   
  M. Wiese et al.  
   
  The goal of SA is to meet non-functional requirements. A SAM is deﬁned as the non-fulﬁllment of these requirements. SA pursues many diﬀerent and contradictory goals, and alternatives are often not obvious, which makes the evaluation diﬃcult. A wrong decision often becomes apparent only after a long time. Characteristics. For the participants, a SAM results from the comparison of an actual state with a target state. One participant explained that a SAM is “everything that turns out afterward that it somehow doesn’t work out the way you imagined it.” This comparison between the actual and target state is a subjective evaluation. The subjective approach results in subjective error levels. The situations are classiﬁed as acceptable or not acceptable, which in situations with several actors can result in a diﬀerent understanding of the situation. “We use our own developed framework, which is already twelve years old because Person C wants it that way, and he gets in the way when we use something else. . . . these are not only wrong decisions, this is almost wanton destruction.”. The term “mistake” is subjectively perceived in diﬀerent ways, i.e., there are diﬀerent connotations associated with the term. Some architects mentioned that making SAMs is normal. “I think making faulty decisions is okay. It can happen, and you have to deal with that somehow.” Some participants also mentioned the positive aspect of making SAMs and learning from them. “It’s that feeling that to do something really well, you have to have failed at it at least once.” However, much more frequently, the participants mention negative aspects of making SAMs: “However, it is unfortunately often the case that due to the fact that SA [decisions] are the expensive decisions, mistakes very often cannot be communicated . . . because then it often looks as if people have wasted a lot of money out of stupidity.” Another characteristic of mistakes is that they are avoidable. We already established that architects think “making mistakes is normal”. This can be interpreted as “making mistakes is unavoidable”. Yet, this inevitability only applies to mistakes in general. “I don’t think we could have actually done much diﬀerently about the situation. . . . That falls under [can be considered as] ‘shit happens.”’ However, on the level of a single mistake, mistakes are considered to be avoidable. “If you had trusted the expertise [of the people involved], this wouldn’t have happened.” Finally, another characteristic of a SAM is that we often don’t know whether a decision is a mistake until a certain amount of time has passed. “I think, overall, it came to light too late that this was even a problem at all.”  
   
  How Are Architectural Mistakes Communicated in Industry?  
   
  325  
   
  – A SAM is a subjective evaluation of a situation. – A SAM may be viewed as acceptable by some and unacceptable by other persons. – The term SAM can be given positive or negative connotations. – The single SAM can be seen as avoidable. – In general, the occurrence of SAMs is regarded as unavoidable. – A SAM is often recognized retrospectively after a certain period of time.  
   
  3.2  
   
  RQ2: Management of SA Mistakes  
   
  We asked the participants questions about their example situation, particularly how and when they came to the conclusion that the situation was a SAM and how the situation was handled afterward. The results are clustered into four subsequent actions: 1. 2. 3. 4.  
   
  Detecting SAMs Handling SAMs Learning from SAMs Preventing SAMs  
   
  We created a theory of a model to visualize the communication-based interdependencies between these categories and their sub-categories, depicted in Fig. 1. Detecting SAMs. Mistake detection is typically initiated by a trigger. These triggers can be driven by the architects themselves, e.g., dissatisfaction with the situation or questioning of requirements. “ If I look at it [the decision] like this, to what extent is this decision that was made in management supported by the teams that use it [the system] . . .? There was a moment when I realized: Not at all.” More often, however, triggers from outside were mentioned, e.g., changes in project team structure, functional tests with users, changes in technical conditions, architecture reviews, or new requirements. “So you suddenly have certain load situations and realize that you have now found the bottleneck. You made a decision back then that now presents you with extreme problems.” In the next step, the trigger is used to try to understand the situation. It is not always apparent whether there is a mistake or exactly where the mistake is. “If you notice a problem somewhere and you ask the swarm [all colleagues combined], then the ﬁrst question is: Where does it come from? What is the cause? And then you come to the conclusion that at some point you made a wrong decision or a wrong assessment.” To evaluate the situation, the eﬀects of the SAM are analyzed, alternatives are examined, and, if possible, reasons for decisions are reconciled. “Often the question is: Was this the best, the second best, or the fourth best solution for something? Nevertheless, the question is: Does it work? Or does it not?”  
   
  326  
   
  M. Wiese et al.  
   
  Fig. 1. Theory of a model of SAM’s Management  
   
  A SAM is detected when a trigger causes the re-evaluation of a situation. These triggers can originate from the architects themselves (internal) but also from external triggers such as changes in the project team, new requirements, functional tests, or external audits. After detection, the situation is analyzed, and alternatives are examined, which triggers a follow-up action. Handling SAMs. The SAM’s handling describes the follow-up action resulting from the evaluation. This corresponds to the technical handling of the SAMs. Other actions are directly performed by the people involved, which corresponds to the personal SAM handling. The core of SAM handling is often the intention to do something diﬀerent in the future. “Well, I wouldn’t do it that way again. I would try it diﬀerently.” Regarding technical handling, sometimes a workaround can be created to restore functionality. The most common handling approaches are to accept a suboptimal situation or to develop the architecture further. “And if it [the SA] does [work], then it is probably more sensible to live with it than to switch everything to the best solution, come hell or high water.” Only rarely do architects revise their architecture completely. “This project completely failed. We came in there as a diﬀerent consulting company and had to stop everything, redo everything, and set everything up again.” As personal SAM handling, all participants report that as a result of a SAM’s assessment, the SAM must be communicated, e.g., “We have highlighted these  
   
  How Are Architectural Mistakes Communicated in Industry?  
   
  327  
   
  problems over and over again. We have said this again and again.” Furthermore, it is important to communicate with superiors to get their support. “I talk very openly with my direct superiors if I think something is right or wrong. Then we usually think about whether we want to change it or not.” Interestingly, many participants reported that they did not use to communicate SAMs in the past, and this changed over time. “In the past, I was much more defensive about admitting my own mistakes.” The topic of SAMs’ communication will be studied in more detail in the following Sect. 3.3. SAMs are handled on a technical and personal level. The technical handling comprises creating workarounds and accepting, changing, or revising the SA. Often the sub-optimal solution is accepted with the intention of deciding diﬀerently next time. Personal handling comprises communication with colleagues and superiors. The participants conceded their openness to communicate SAMs did develop over time. Learning from SAMs. We asked the architects if and how they learn from SAMs, i.e., we asked them about the requirements to learn from SAMs. Firstly, all participants consider that communication is an eﬀective strategy for gaining knowledge from a SAM. They talk about how, in their assessment, a particular situation is a mistake in order to challenge that assessment through the perspective of others. Talking about mistakes means a common evaluation of a situation, the comparison of ideas about an ideal situation, and thinking about further possibilities for action. “Yes, mistakes need to be talked about. . . . It’s only through communication and discussion that you come to a good alternative solution that you want to apply.” Secondly, whether architects are able to learn from SAMs depends on their personal openness to SAMs and the openness of the environment to SAMs. On a personal level, we classiﬁed the attitude of all participants as constructive. The participants were open to and aware of their own mistakes without seeing them as a defeat. Similar to the personal level, mutual acceptance of mistakes in the environment is also important The expectation should not be “It is bad to make mistakes” but “It is bad not to learn from mistakes.” “We’re all human, we all make mistakes, that’s okay. You have to accept that in order to get better. Actually, it’s not a mistake, but you learn something from it.” Thirdly, the participants stated that an established continuous improvement process (CIP) [11] is essential for the learning process. A CIP should speciﬁcally try to increase the triggers for SAM detection and make detection a regular process. Furthermore, the SAM’s detection is promoted by reﬁning the idea of the ideal solution and the collection of information that can be used in the evaluation. The CIP tries to derive concrete actions that prevent SAMs in the future. “[After a SAM situation,] I directly asked: What could have been done better? Could this have been foreseen beforehand? What is being done to avoid it in the future?” Finally, it is considered important to have the necessary information to classify the SAM situation. For SAMs, the focus is on the context of the decision. What were the reasons for the decision? What were the goals? The documenta-  
   
  328  
   
  M. Wiese et al.  
   
  tion of decisions, e.g., by Architecture Decision Records (ADR) [9], is mentioned but not considered to be widespread. “I am a big fan of Arc42 and also ADR . . . I often start a system design with quality scenarios and quality metrics, especially with new customers. . . . I also do a lot of architecture reviews.” Architects need to communicate the mistake with other stakeholders to be able to learn from SAMs. The ability to learn from SAMs depends on the openness to admit SAMs on a personal and organizational level. An established CIP helps with SAM detection, communication, and information gathering. Important information regarding a SAM are SA decisions and their rationale, which should be documented. Preventing SAMs. Learning from mistakes is one form of preventing further mistakes. “Even if it is a mistake, it is, of course, important, especially in the architecture, that you try to prevent it in other areas that might run into this same mistake.” Furthermore, the architects approach people to challenge their decisions before implementing them. “We had meetings, I presented the advantages and disadvantages from my point of view, and we did not get together afterward.” The architects also mentioned other means of preventing SAMs, e.g., taking responsibility for SA, making group decisions, and making more conscious decisions. However, these topics are already discussed in detail in many other research papers. To prevent SAMs, we should communicate and learn from past SAMs. Challenging SA decisions, i.e., communicating them in advance, is a way of preventing SAMs.  
   
  3.3  
   
  RQ3: Communication of SA Mistakes  
   
  Communication is used as a strategy for SAM detection, for learning from SAMs, and for SAM prevention (see Fig. 1). This section presents the communication partners, communication facilitating and hindering factors, and the structures in which communication takes place. Communication Partners. All interviewees work in agile project teams, and their most mentioned form of communication is communication on the team level, i.e., with team colleagues. The colleagues are often directly aﬀected by and interested in resolving the situation. It is a common practice in their teams to discuss a solution in a group. A special kind of group communication is discussions in the context of retrospectives. “ This has led to retrospectives in which people have said: ‘That’s annoying, and it keeps coming back. Can we do something about it or not?’ . . . Then we had a special meeting about it with the topic: Where are we? Where do we stand? Where do we have to go?” The client is also a frequent target of communication, especially due to the need to coordinate further action and the ﬁnancial impact of decisions. Involving the client in retrospectives or debrieﬁngs is perceived as valuable. Likewise, in acute SAM situations, the client is usually involved. In such a situation, some  
   
  How Are Architectural Mistakes Communicated in Industry?  
   
  329  
   
  architects considered communication to be more diﬃcult in some companies. “ [I]f you point out mistakes in a project team with other external people or even with customer employees, particularly in a customer environment where you also have other [consulting] companies, you really have to be very sensitive and really think twice about what you say.” In the context of SA decisions, communication with direct superiors was not considered to be diﬃcult, e.g., “I would assess myself in such a way that I can admit mistakes, even to my boss.” One participant even stated: “My boss gets to listen to a lot. And my boss’s boss and my board. So, I’m really there – I have a big mouth. I so don’t care.” The participants rarely mentioned talking about SAMs with architects outside the team. This is only done if necessary by asking speciﬁc questions or in the context of an architecture board. “[T]here is a regular meeting once a month, called the architecture circle. And then all the brains of my employer sit there and give their suggestions.” Concrete examples of active company-wide communication of SAMs are scarce. Special formats for the presentation of mistakes, such as ‘Fuckup Nights,’ are mentioned only once. Open spaces and all-hands workshops are also mentioned as spaces with the possibility that SAMs are discussed. “We do a lot of ‘Open Spaces,’ including technical ‘Open Spaces.’ Half of them are not about how cool something is that you built but to look at the mistakes I made.” Very occasionally, SAMs are discussed with outsiders, e.g., in the form of conference talks or networking events. The personal conviction that SAMs present valuable knowledge is the motivation for this. “I think I can teach people more when I talk about [SA] mistakes than how to do it right.” SAM communication takes place on six diﬀerent levels: with team colleagues, with the clients, with the superiors, with other architects, company-wide, and with outsiders. The most common form is communication within the team. Company-wide discussions of SAMs or communication with outsiders rarely occur. Communication Facilitating and Hindering Factors. The communication preferences and observed communication patterns can be divided into facilitating and hindering factors. However, some of these factors can be seen as both facilitating and hindering, depending on the architects’ characteristics, e.g., professional status and self-conﬁdence, and psychological safety. The biggest facilitating factor in communicating SAMs successfully is ensuring access to information. This access to information is inﬂuenced by the diversity of experiences, i.e., multiple cultural backgrounds but also diﬀerent domains of IT experience. Diversity ensures that many requirements are represented. “We have a regular meeting in development. . . . Anyone can bring in any topic, be it from testers or other teams. Not development teams, but other teams. That’s when a few problems come to light.” However, this also means a diversity of communication preferences. Responding to these preferences or even being aware of diﬀerences between team cultures can further facilitate communication. “I am also someone who is not afraid of  
   
  330  
   
  M. Wiese et al.  
   
  speaking in large crowds. There are also people who perhaps have relevant experience who don’t want to speak in front of a large crowd right away, where [for whom] you would then perhaps have to ﬁnd other means to communicate that.” Transparent communication promotes exchange. Having access to or being exposed to SAMs information enables the absorption of information, which means that learning from the mistakes of others is possible. In the oﬃce, you inevitably run into other people. In times of remote work, teams need to communicate in open channels rather than in private. “Otherwise, I often ghost around [roam around] in some channels, i.e., Microsoft Teams channels, in order to also capture topics that are being discussed.” The biggest hindering factors are potential negative consequences. The communication of SAMs can generate costs, e.g., in contracting situations or raise the question of guilt. “Unfortunately, it is often the case that software architecture is the most expensive decision and that mistakes are often not communicable.” Additionally, the personal expectation of the outcome of communication can trigger negative consequences in individuals, such as disappointment. “With younger colleagues, the disappointment is usually great when this [developed SA proposal] decision is not followed.” The participants also consider the environment to be of decisive importance for the willingness to communicate SAMs. “If you’re in the corporate bubble, then most people . . . can admit mistakes and reﬂect on them. In other environments, I have experienced diﬀerent situations where people can’t admit it [mistakes].” This is called psychological safety in the domain of psychology, which promotes information sharing [16]. “[My] Superiors always say that reﬂection is important; admitting mistakes is important.” A lack of psychological safety hinders SAM communication. Furthermore, discrepancies among communication participants in reputation, status, or hierarchy seem to make communication more diﬃcult. “That was a challenge, to do a [meeting] format with a developer from a customer and his board of directors .” The participants also mentioned that as one’s own professional status and self-conﬁdence grow, the willingness to communicate SAMs increases, particularly in unclear situations. This, however, means that stakeholders with less status and self-conﬁdence might not share their experiences with mistakes. “So that you can admit mistakes openly, you also need a certain standing. And if you don’t feel conﬁdent, you won’t do it.” People do not only act rationally, either. The exchange of SAM information is hindered by human characteristics such as emotional bias, e.g., human conﬂicts may hinder communication. Seeking direct conversation does not work if there is no access or willingness to talk. “So the question is, as an employee, how do I get the board to listen to me? That’s very diﬃcult.” Finally, communication is complicated by conﬂicts of interest between the role in the project context and personal goals. Even if there is no fear of dismissal, communicating SAMs could damage one’s own reputation or that of the company, no further assignment may follow, or conﬂicts may arise. “But some-  
   
  How Are Architectural Mistakes Communicated in Industry?  
   
  331  
   
  times that is not the right architecture at all. Nevertheless, you might defend it that way. You’re not going to admit that mistake and say, ’I did that because it helps me sell my people [consultants].” Facilitating factors for SAM communication are access to information, i.e., transparent communication and diverse teams in terms of cultures and expertise, as well as supportive communication structures. Hindering factors are potential negative consequences, a missing psychological safety, discrepancies in reputation, status, or hierarchy, a missing professional status and self-conﬁdence, a missing psychological safety in the environment, emotional biases, and conﬂicts of interest. Communication Structures and Strategies. The participants’ preferred communication structure is to talk directly with others. “ In a team, we are closer to each other, and we sit down together when there are issues.” While the participants seek direct communication for acute problems, regular appointments are nevertheless a frequently observed pattern for active exchange. These appointments take place regularly and for various purposes. They shape communication not just in response to problems but proactively: “These classic escalation issues have become fewer because we have managed to have regular appointments. As overarching architects, we have ‘Face To Faces’ with all the teams . . . to sit down and identify and discuss issues.” During these conversations, participants pursue the strategy of communicating constructively and explaining their own points of view in a well-founded manner. In this context, the participants perceive it as helpful not only to communicate problems and not to create accusations. “You have to say, ‘I don’t think this is well designed, for such and such reasons, we have such and such disadvantages.’ . . . It’s not about, ‘Peter, you wanted to do it then, and this is bad now.” Predominantly, architects try to convince their colleagues rather than overrule them. By this, they hope that the other person will adopt the values in the long term rather than simply accept them without understanding them. “So they might do it then, grudgingly accept it. But they do not understand it. And without understanding, they won’t do it any better next time.” Architects prefer direct communication with colleagues. Regular appointments are important and have the advantage of addressing problems proactively. Communication should be constructive and personal positions should be explained in a well-founded manner. It is important to convince people rather than overrule them.  
   
  4  
   
  Discussion  
   
  In retrospect, the initial hypothesis that SAMs are typically not suﬃciently communicated has been only partially conﬁrmed. In the project teams and the peer groups of the participants, there is an active exchange about SAMs. However,  
   
  332  
   
  M. Wiese et al.  
   
  the situation changes on the company level or outside the company. Despite a high level of commitment on the part of the participants, there are only a few examples in which SAMs are discussed outside the involved project teams. In terms of the participants’ companies’ size, this means that many employees do not have access to the learned information. Obviously, the processing of information in a larger circle must be approached diﬀerently and requires more eﬀort than in a small circle of individuals. The information and facts must be prepared more systematically, and there is less time for individual questions. However, making an information exchange process publicly accessible within the company, e.g., in open spaces or all-hands workshops, would counteract information silos. Practical indications can be derived from the action strategies of the participants. Regarding the process model presented in Fig. 1, goals can be formulated, which are discussed below. 4.1  
   
  Increase Detection Trigger  
   
  People and organizations can inﬂuence the triggers for SAM detection in the process shown in Fig. 1. More triggers mean more opportunities for the SAMs’ detection. On a personal level, a constructive mindset is most crucial. A diﬀerent personal attitude may cause SAM detection to be blocked. The point perceived as most important is the change in expectations mentioned in Sect. 3.2. “It is bad to make mistakes” changes to “It is bad not to learn from mistakes.” On a personal and organizational level, formalized and regular CIPs should be established. They can be used to check the validity of SA ideas and implementations and is thus a trigger for SAM detection. The participants report regular architecture reviews or exchanges with architects as one way to achieve continuous improvement, but they require lightweight approaches. 4.2  
   
  Ensure Communication Opportunities  
   
  Our results show that it is extremely important that SAMs are communicated. Successful communication involves not only talking but also listening. The stigma of failure must be removed so that open discussion, rapid learning, and innovation can occur instead of employees hiding failures in order to protect themselves. Conditions for open discussion should be created, and invitations to participate should be formulated and responded to productively. The negative connotation of SAMs was discussed in Sect. 3.1. Therefore, some people try to portray SAMs in a positive or euphemistic way. A constructive mindset also means learning from mistakes. However, this should not lead to a euphemistic presentation of SAMs. SAMs, in general, are not positive but have negative consequences and are avoidable. The fact that they also have positive consequences does not make them positive as a whole.  
   
  How Are Architectural Mistakes Communicated in Industry?  
   
  333  
   
  Firstly, these ﬁndings can be taken as an impetus for an analysis of one’s own handling of SAMs. Secondly, they are also a call for companies to further enable and support SAMs communication among their employees, e.g., by creating company-wide communities of interest. Finally, there should be more open communication about SAMs outside of companies or across companies. For example, governments or chambers of commerce could support this information exchange across companies.  
   
  5  
   
  Related Work  
   
  Our related work section focuses on the main topics of our work, which are SAMs and their communication. Software Architecture Mistakes. The topic of SAMs is highly related to SA decision-making. A variety of research has been done in this research ﬁeld, e.g., [4]. However, most of this research focuses on the decision-making process when deciding on an SA or a part of a SA. Tang et al. did a systematic literature review of the human aspect in decisionmaking [21]. One of the mentioned decision-making practices is “knowledge management”, i.e., knowledge capture, sharing, and communication, which are also important aspects of our work. Yet, all mentioned studies focus on knowledge documentation. While Tang et al. acknowledge that “experience and knowledge play a role in decision making,” all identiﬁed studies focus on the knowledge aspect [21]. The experience aspect, which includes learning from other people’s experiences, is not mentioned. In their semi-systematic literature review, Bhat et al. [4] also identiﬁed diﬀerent studies stating the relevance of experience and knowledge, e.g., [8]. Yet, no work seems to explore how to improve the experience of architects. Less research has been done on how to deal with bad decisions after they have been made. Some of these aspects are discussed in the research ﬁeld of architectural technical debt, e.g., [3]. For example, Kruchten et al. present a guideline on how asking about SAMs might lead to the root causes for some architectural technical debts [12]. However, in their recent interview study, Wiese et al. still identiﬁed a lack of refactoring strategies for old legacy systems as IT managers’ main concern [23]. Software Architecture Mistake Communication. In the ﬁeld of SA Communication, a wide range of work has been done, e.g., regarding documentation [9], visualization [18], or stakeholder communication [15]. Smolander et al. argue the importance of organizational and inter-organizational communication between architects [19]. However, regarding the communication of SAMs between architects, we were not able to ﬁnd related studies. We argue that communication is essential to amass SA knowledge. In their study about SA knowledge in search engines, i.e., Google, Soliman et al. identiﬁed a lack of knowledge on bad decisions in the search engine results [20]. Our study supports the idea that this lack is not caused by a faulty search strategy but by  
   
  334  
   
  M. Wiese et al.  
   
  a lack of willingness to share this knowledge. However, we did not ﬁnd research on if or how communication of SAMs might enhance knowledge gathering.  
   
  6  
   
  Threats to Validity  
   
  We present threats to validity for our qualitative study by addressing the construct, internal and external validity. Construct Validity. For an interview study, the selection of participants and interview questions have a great impact on the validity of the study. In our study, we only interviewed architects working in an agile environment. As we did not enforce this as a precondition, we suspect that an agile team organization is state-of-the-art. We, therefore, suggest using our study’s results speciﬁcally for agile working companies. Furthermore, architects that are more open to discussing their SAMs might be more willing to participate in our study, which might bias our study. We also recruited participants from our personal network. These participants might not be as open regarding their SAMs but might still participate for our sake. Finally, we interviewed ten architects, which might seem too few. However, we reached code saturation on the focus code level, i.e., codes that were reported in this paper did not change during the last three interviews. Further studies in other countries and with more participants, e.g., surveys, should validate our theories. Internal Validity. In the case of our study, internal validity means the possibility of wrongly interpreting and misunderstanding the interview transcripts. To avoid such misconceptions, the coding was done by two researchers. Furthermore, we were able to ask the participants for clariﬁcation in cases we were unsure about a statement. External Validity. External validity concerns the generalization of the result. However, the ability to generalize the results is not the goal of a qualitative study such as ours. Nonetheless, we only surveyed German architects, and architects in other countries might have diﬀerent insights, particularly as cultural aspects are important in our study. The generalizability of our results could be enhanced by further studies, e.g., by surveys generating quantitative data and by interview studies in other countries.  
   
  7  
   
  Conclusion  
   
  In our study, we analyzed the communication of SAMs in the industry by performing an interview study with ten architects. We derived their deﬁnition and list of characteristics of SAMs, their handling of such SAMs after their detection, and ﬁnally, their ways of communicating SAMs. We identiﬁed optimization potential regarding the enhancement of SAM’s detection triggers.  
   
  How Are Architectural Mistakes Communicated in Industry?  
   
  335  
   
  While the communication of SAMs takes place on the team level, we identiﬁed optimization potential on a company and cross-company level. Furthermore, we identiﬁed communication partners, structures, and strategies, and we presented communication facilitating and hindering factors. For practitioners, our study could spark the company-wide exchange of SAMs. Furthermore, we provided many ideas on how to optimize communication on a personal level, e.g., by visiting public communities of interest and changing our own mindset from “It is bad to make mistakes” to “It is bad not to learn from mistakes.” For researchers, we provided the theory of model on how practitioners manage SAMs. This, in turn, forms the question of how to decide whether to accept a SAM, change the architecture, or revise the architecture completely. Furthermore, we identiﬁed the research question on how to optimize the communication of SAMs on the enterprise level besides the ideas mentioned by our participants. For these ideas, an evaluation of their eﬀects is also still missing. For future work, we suggest performing a subsequent survey study to validate our theories and reﬁne them by taking the diﬀerent contexts, e.g., domains, countries, and cultural environments, into account. In addition, this could help to generalize our results. After that, the aforementioned research questions on how to optimize SAM communication should be addressed by solution-seeking studies.  
   
  References 1. Fuckup Nights (2023). https://en.fuckupnights.com/ 2. Avgeriou, P., Kruchten, P., Ozkaya, I., Seaman, C.: Managing technical debt in software engineering. Dagstuhl Reports 6(4) (2016) 3. Besker, T., Martini, A., Bosch, J.: Managing architectural technical debt: a uniﬁed model and systematic literature review. J. Syst. Softw. 135 (2018) 4. Bhat, M., Shumaiev, K., Hohenstein, U., Biesdorf, A., Matthes, F.: The evolution of architectural decision making as a key focus area of software architecture research. In: Proceedings of the IEEE 17th International Conference on Software Architecture, ICSA 2020 (c) (2020) 5. Bjørnson, F.O., Wang, A.I., Arisholm, E.: Improving the eﬀectiveness of root cause analysis in post mortem analysis: a controlled experiment. Inf. Softw. Technol. 51(1) (2009) 6. Charmaz, K.: Constructing grounded theory. Sage Publications (2014) 7. Glaser, B.G., Strauss, A.L.: The discovery of grounded theory: strategies for qualitative research. Nurs. Res. 17(4), 364 (1968) 8. Hassard, S.T., Blandford, A., Cox, A.L.: Analogies in design decision-making (2009) 9. van Heesch, U., Avgeriou, P., Hilliard, R.: A documentation framework for architecture decisions. J. Syst. Softw. 85(4) (2012) 10. Hieronymus, S.E.: Errare humanum est. In: Seneca, Epistulae morales VI,57,12; Cicero, Orationes Philippicae 12,2, vol. VI,57,12 (2023) 11. Imai, M.: Kaizen. No. 201, Random House Business Division, New York (1986)  
   
  336  
   
  M. Wiese et al.  
   
  12. Kruchten, P., Nord, R., Ozkaya, I.: Managing technical debt: reducing friction in software development. Carnegie Mellon University, Software Engineering Institute (2019) 13. Martini, A., Bosch, J.: The danger of architectural technical debt: contagious debt and vicious circles. In: Proceedings of the 12th Working IEEE/IFIP Conference on Software Architecture, WICSA2015 (2015) 14. Mumtaz, H., Singh, P., Blincoe, K.: A systematic mapping study on architectural smells detection. J. Syst. Softw. 173 (2021) 15. M´ arquez, G., Taramasco, C., Astudillo, H., Zalc, V., Istrate, D.: Involving stakeholders in the implementation of microservice-based systems. IEEE Access 9 (2021) 16. Newman, A., Donohue, R., Eva, N.: Psychological safety: a systematic review of the literature. Hum. Resour. Manage. Rev. 27(3) (2017) 17. Richards, M.: Software architecture patterns. O’Reilly Media (2015) 18. Shahin, M., Liang, P., Babar, M.A.: A systematic review of software architecture visualization techniques. J. Syst. Softw. 94 (2014) 19. Smolander, K., P¨ aiv¨ arinta, T.: Describing and communicating software architecture in practice: observations on stakeholders and rationale. In: Pidduck, A.B., Ozsu, M.T., Mylopoulos, J., Woo, C.C. (eds.) CAiSE 2002. LNCS, vol. 2348, pp. 117–133. Springer, Heidelberg (2002). https://doi.org/10.1007/3-540-47961-9 11 20. Soliman, M., Wiese, M., Li, Y., Riebisch, M., Avgeriou, P.: Exploring web search engines to ﬁnd architectural knowledge. In: International Conference on Software Architecture (ICSA2021) (2021) 21. Tang, A., Razavian, M., Paech, B., Hesse, T.M.: Human aspects in software architecture decision making - a literature review. In: International Conference on Software Architecture (ICSA2017) (2017) 22. Weinreich, R., Groher, I.: Software architecture knowledge management approaches and their support for knowledge management activities: a systematic literature review. Inf. Softw. Technol. 80 (2016) 23. Wiese, M., Borowa, K.: IT managers’ perspective on technical debt management. J. Syst. Softw. 202 (2023) 24. Wiese, M., Brand, A.-F., van Hoorn, A.: Additional material for learning from each other: how are architectural mistakes communicated in industry? (2023). https:// doi.org/10.5281/zenodo.7924700  
   
  A Query Language for Software Architecture Information Joshua Ammermann1(B) , Sven Jordan2 , Lukas Linsbauer3 , and Ina Schaefer1 1  
   
  3  
   
  Karlsruhe Institute of Technology (KIT), Karlsruhe, Germany {joshua.ammermann,ina.schaefer}@kit.edu 2 Volkswagen AG, Wolfsburg, Germany [email protected]  Technische Universität Braunschweig, Braunschweig, Germany  
   
  Abstract. Software maintenance is important, but suﬀers from architecture information that is diverging over time (architectural drift). The Digital Architecture Twin (DArT) can support software maintenance by providing continuously recovered architecture information. But the crucial link for stakeholders to retrieve this information is missing. To ﬁll this gap, we contribute the Architecture Information Query Language (AIQL), which enables stakeholders to access up-to-date and tailored architecture information. We derived two application scenarios in the context of continuous reverse engineering. We showed that the AIQL provides the required functionality to formulate queries for the application scenarios. In a user study, stakeholders agreed that the language is easy to understand and assessed its value to the speciﬁc stakeholder for the application scenarios.  
   
  Keywords: Software architecture architecture recovery  
   
  1  
   
  · Query languages · Software  
   
  Introduction  
   
  As software systems evolve over time, architecture documentation is getting increasingly important. In many cases, the architecture documentation is not kept up-to-date due to cost and time restrictions [8]. This divergence is called architectural drift and leads to increased maintenance eﬀort [14]. To mitigate architectural drift, Software Architecture Recovery (SAR) methods emerged [4, 5]. SAR methods enable the recovery of architecture information but only target isolated views (e.g. structural or behavioral views) of a software system from speciﬁc information sources (e.g. source code). Further, architecture information is only recovered at a single point in time. To solve all of the aforementioned issues, Jordan et al. [7] recently developed the Digital Architecture Twin (DArT), an architectural data model that co-evolves with a software system. A DArT incorporates several SAR methods to c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 337–345, 2023. https://doi.org/10.1007/978-3-031-42592-9_23  
   
  338  
   
  J. Ammermann et al.  
   
  automatically generate up-to-date architecture information from multiple information sources (e.g. source code, build and deployment scripts, and views). The DArT enables integration into the development process in the form of continuous reverse engineering [3]. Further, the DArT provides up-to-date, tailored architecture information for stakeholders enabling design decisions on the current software architecture of the software system. However, the crucial link between stakeholders and extensive architecture data models, i.e., a tailored Architecture Query Language (AQL) for the DArT, is missing. This ability to query an architecture information base is a challenge in reverse engineering [3]. The term AQL was proposed by Sartipi [12] in the context of their reverse engineering approach. Sartipi’s AQL is not suitable for querying the DArT as it is constrained to a speciﬁc recovery process [12] and limited in the supported views. Accessing the vast amounts of information in architecture data models becomes harder, the fewer views exist in the query language. In fact, some information may be irretrievable if there is no suitable view to query it. The AQL by Wang et al. [15] is tailored to information exchange between Architecture Description Languages (ADLs), which document software architectures [9,14], so the query results are ADL instances themselves [15]. This is inconvenient to stakeholders because for each view a suitable ADL has to be known and used. To counter those shortcomings of existing AQLs, we propose the Architecture Information Query Language (AIQL)1 that is process-agnostic, typed and supports querying architecture information of various software architecture views. The AIQL is easily extensible to support additional views and has an easy-touse syntax. Architecture information can be queried by deﬁning and restricting query templates. Composition of query templates is a key element of the AIQL, that strongly encourages reuse. The AIQL provides stakeholders with eﬃcient access to the architecture information in extensive architecture data models. To demonstrate this, we present two application scenarios in the context of continuous reverse engineering, which now can be realized by accessing a DArT using the AIQL. In a user study with eight experts, they agreed that the AIQL is easy to understand and use. They further conﬁrmed that AIQL queries enable drilling down into the architecture information in the DArT.  
   
  2  
   
  The Digital Architecture Twin (DArT)  
   
  The DArT [7] is an digital representation of a software system. The DArT automatically recovers and integrates architecture information of multiple views and versions. Figure 1 displays how the DArT is ﬁlled with information. First, in an Architecture Recovery step (), 1 architecture data is continuously gathered from heterogeneous sources by Data Collection Agents. Architecture Information Recovery Services apply diﬀerent architecture recovery approaches on the gathered data to recover architecture information. The recovered architecture information is then integrated into the DArT as a representation of a software 1  
   
  This work brieﬂy summarizes the author’s master thesis [1]. Further details and evaluation is provided in the extended version of this paper in the arXiv [2].  
   
  A Query Language for Software Architecture Information  
   
  339  
   
  Fig. 1. Architecture Information Processing using the DArT [7]  
   
  system’s architecture (step ). 2 The architecture information is versioned and stored in a uniﬁed and persistent Architecture Information Model. In step  3 stakeholders want to access tailored parts of this information to fulﬁll speciﬁc tasks. For this, an easy-to-use language is required to make the information accessible to various kinds of stakeholders, such as developers or enterprise architects.  
   
  3  
   
  Application Scenarios  
   
  Frequent challenges in the industry are understanding and evolving as well as harmonizing software systems. This implies making architecture decisions for existing and new software systems using tailored and up-to-date architecture information, which supports the design decision process. We identiﬁed two application scenarios addressing these challenges, which are reﬁned into concrete use cases and are part of the user study to evaluate the language. Sce. 1: Tailored documentation. Analyzing an architecture is a necessity to make design decisions. To ease this, the language should support tailored architecture documentation in the form of diﬀerent views for speciﬁc stakeholders. Thus, querying for diﬀerent views from an architecture information base needs to be supported. The retrieved information may be used to strengthen the understanding of the system by visualizing it. Examples for this scenario are an enterprise architect, who wants to list all interfaces to another speciﬁc sub-system, or a product owner, who wants to create a comprehensive structural diagram, or a developer, who wants to create a class diagram of a system component. Sce. 2: Recommendation system for architectural design decisions. A recommendation system for architectural design decisions enables the reuse of good design decisions of existing systems. Such a recommendation system uses a knowledge base of previous design decisions to propose architectural designs that may beneﬁt another software system. For this, relevant system properties as well as design decisions, have to be accessible via a query language. Furthermore, a system architect might want to browse the knowledge-base using exploratory queries.  
   
  340  
   
  4  
   
  J. Ammermann et al.  
   
  The Architecture Information Query Language (AIQL)  
   
  The AIQL was designed to enable the application scenarios. In this section, we demonstrate the AIQL’s main language features by an example.2 Our running example consists of a client and a server component connected via Remote Procedure Call (RPC) (see Fig. 2a). After the architecture recovery step, this system is represented in the DArT’s technical component view as depicted in Fig. 2b. A SoftwareSystem component, representing the system, and for each component from the running example, a corresponding TechnicalComponent was created. Language Design. Imagine a software architect who wants to generate tailored documentation for server components (see scenario 1). Figure 3 shows an example AIQL query to retrieve server components from the DArT (for simplicity, we assume that such components could be identiﬁed by their name). Using this example, we demonstrate the AIQL’s main language features. In general, an AIQL query consists of three parts: header, body, and output. The header contains information for the whole query, so no information has to  
   
  Fig. 2. Uniﬁed Modeling Language (UML) component diagram of a client-server example system (a). The UML object diagram shows the system recovered in the DArT (b). Highlighted are the objects that the AIQL query in Fig. 3 returns for this example system.  
   
  Fig. 3. AIQL query for client-server entities of the technical component view. 2  
   
  Detailed description of the language’s syntax in Extended Backus-Naur Form (EBNF) and its semantics are provided in the extended version [2].  
   
  A Query Language for Software Architecture Information  
   
  341  
   
  be provided externally. In the header (lines 1-2), the location of the MODEL from which the architecture information will be queried, and the VERSION(s) of the model are deﬁned. Static keywords for the FIRST and LAST versions are provided, and multiple versions can be accessed through appropriate expressions. In the query body, query templates for elements of the architecture information model can be deﬁned, which a stakeholder either wants to output or further specify the query. A query template is declared using the LIST directive (line 4) followed by the unique name of the type of the element, that should be queried (e.g. TechnicalComponent), and a user-deﬁned identiﬁer (e.g. serverComponent). A query template matches the model elements satisfying the speciﬁed RESTRICTIONS. Multiple restrictions can be deﬁned in one query and are implicit conjunctions except if the OR keyword is used. Restrictions can be used on element attributes (e.g. Name in line 5) for which a static expression language is provided. For our example, the attribute Name has to match ‘server’. The composition of query templates is a key element of the AIQL, that strongly encourages reuse. References to other model elements can be restricted through a combination of a quantiﬁer (such as EXISTS or FORALL), the name of the reference, and the identiﬁer of another query template. Quantiﬁers are only required for one-to-many or many-to-many references. Entities of diﬀerent views may be connected through relations and, thus, a stakeholder’s queries can span multiple views. In line 8 the one-to-many reference Children from SoftwareSystem to TechnicalComponent is restricted by the EXISTS quantiﬁer and the serverComponent template. Only software systems that have a server component are matched. The reference Children in this case is a shortcut deﬁned in the AIQL as the DArT in this example contains ComponentEdges (see Fig. 2b) which are resolved internally. User-deﬁned shortcuts allow more concise queries. Finally, architecture model elements can be output using multiple OUTPUT directives and the query template identiﬁer. Output directives support tailoring of the output format (e.g., to only output speciﬁc attributes).  
   
  5  
   
  User Study  
   
  We performed a user study at an industry partner to evaluate the AIQL’s usability. The eight participants (Enterprise-, Solution-, and Domain Architects, former business stakeholder, IT Project managers, and developers) ranged from 7 to 21 years of work experience. In the user study, we asked participants about the comprehensibility of the AIQL (RQ1 ), the comprehensibility and usability of the output (RQ2 ) and the complexity of example queries (RQ3 ). We presented the AIQL in-depth (i.e., theoretical and practical) to the participants and allowed them to use the AIQL. Furthermore, we showed participants the application scenarios and relevant example queries and asked them to assess the value of the AIQL for both application scenarios (RQ4 ). RQ1 All participants stated that the AIQL is easy to understand. In comparison to other languages (e.g. the Structured Query Language (SQL)), the AIQL was deemed equally easy. 62.5% of participants found the language intuitive and  
   
  342  
   
  J. Ammermann et al.  
   
  the keywords meaningful. 37.5% of participants mentioned diﬃculties using the AIQL, due to the short timeframe of the user study, they were not able to memorize all keywords of the AIQL. More time to familiarize themselves with the AIQL as well as with the DArT was needed. Three participants (solution and enterprise architects) preferred the accessible language design, whereas one participant did not immediately grasp the composition of sub-queries. It was also noted that the comprehensibility is limited for non-technical experts and that the language may be hard to understand for business users. Detailed responses by the participants mentioned missing an “Aggregate”-keyword to automatically ﬁlter the highest-level sub-systems. The current editor support was praised to ease getting started with the AIQL. RQ2 All participants stated that the AIQL is useful for extracting architecture information about a software system, but it is restricted by the underlying data model. 50% of participants noted that the AIQL, if not used to full power is not necessarily more useful than a static view, but the AIQL is more useful when used in an exploratory approach. It was debated that the AIQL is more useful, when adding information about frequency of class calls and when the stakeholder knows the system to some degree. A supplementing static/dynamic view would help for an initial overview of the software system. 37,5% of participants found the AIQL more useful for drilling down into the architecture information. It was noted that the AIQL does not provide more information than a static visualisation as it only displays recovered architecture information. Participants mentioned that the output format (in JavaScript Object Notation (JSON)) is hard for humans to read, but useful for further use and automation. RQ3 Participants stated that the complexity of shown example queries varied from trivial to complex. An easy example query was perceived as very simple. An example query in the complexity of the running example was still perceived as easy. Participants mentioned that linking queries using the sub-query templates was perceived as doable. A complex query using four nested sub-queries was deemed as complex, leading participants to express concerns about the complexity of queries containing more nested sub-queries. Some participants also criticized the lack of self-contained queries (i.e. no sub-query composition). RQ4 50% of participants stated that the AIQL is useful to extract tailored architecture information. Depending on the participant’s background, some ﬁnd the AIQL to be potentially more useful. Developers or solution architects assessed the AIQL as more useful for extracting tailored architecture information for speciﬁc use cases than enterprise architects. The participants believed that the AIQL can be helpful in understanding the source code, from an unknown software system. All participants stated the use of a recommendation system or wizard-based queries for ﬁnding similar software systems based on requirements and architecture is very interesting and “incredibly useful”.  
   
  A Query Language for Software Architecture Information  
   
  6  
   
  343  
   
  Related Work  
   
  Querying of software systems is frequently used in the context of software architecture recovery. Relational queries are used by tools such as ArchView [11], ARM [6], and Dali [8] [4]. Dali and ArchView directly use SQL on an architectural database [4], which is used to persist the recovered architecture information. ARM allows the deﬁnition of pattern descriptions and rules in the commonly used Rigi Standard Format, which are translated into pattern queries exploitable in Dali via SQL [6]. However, the architecture information in the database is not correlated with other architecture information. Our proposed AIQL is a Domain-Speciﬁc Language (DSL) instead of a general-purpose query language. DSLs leverage the restriction to a particular problem domain - the software architecture domain in our case - to gain expressive power by providing domain-tailored notations and abstraction. Architectural Query Languages (AQLs). AQLs are tailored for architecture information retrieval. The term AQL was proposed by Sartipi for an interactive pattern-based architecture recovery method [13] implemented in Alborz [12]. Achitecture information is incrementally recovered by reﬁning patterns deﬁned in the AQL, which are matched against a database of architectural information. An AQL query consists of abstract connectors and components inspired by ADLs. The tight coupling of Sartipi’s AQL to the manual recovery process using special syntactic elements makes it diﬃcult to reuse aspects for a language that is not driven by the proposed process, whereas the AIQL is independent of the architecture recovery process. Wang and Gupta deﬁned the query language ADLQL [15], which is inspired by SQL. They aim to enable information exchange between ADLs, which are not expressive enough by themselves. Thus, a framework enabling integration of ADL is introduced. ADLQL allows the deﬁnition of queries that can be executed against predicates, representing architectural information, using denotational semantics. ADLQL is limited to ADLs, which have to be integrated and do not account for other relevant artifacts, such as a system’s source code, whereas the AIQL is capable of handling source code. Monroy et al. introduced a query mechanism for recovered architecture models using natural language (Spanish) in the ARCo framework [10]. An advantage of the natural language is its richness beneﬁting inexperienced stakeholders, for example, students, but on the other side, it is ambiguous [10,14]. The use of more semantically narrow and formal languages is more suitable, as we expect our stakeholders to have a decent amount of domain knowledge.  
   
  7  
   
  Conclusion and Future Work  
   
  This work aimed to provide the AIQL to access the information present in extensive architecture data models such as DArTs. The language encourages reuse through the composition of templates and supports querying information of different views and levels of abstraction along with diﬀerent versions of a system’s  
   
  344  
   
  J. Ammermann et al.  
   
  architecture over time. In a user study, we showed that the AIQL is easy to understand, but also identiﬁed two aspects to improve our language: providing additional language constructs and providing other output formats. The user study also highlighted the demand for a supporting static view. Future work is concerned with the realization of further application scenarios using the AIQL.  
   
  References 1. Ammermann, J.: An architecture information query language for the digital architecture twin. Master Thesis, TU Braunschweig (2022). https://doi.org/ 10.24355/dbbs.084-202209301202-0, https://leopard.tu-braunschweig.de/receive/ dbbs_mods_00071363 2. Ammermann, J., Jordan, S., Linsbauer, L., Schaefer, I.: A query language for software architecture information (extended version) (2023). https://doi.org/10. 48550/arXiv.2306.16829 3. Canfora, G., Di Penta, M., Cerulo, L.: Achievements and challenges in software reverse engineering. Commun. ACM 54(4), 142–151 (2011). https://doi.org/10. 1145/1924421.1924451 4. Ducasse, S., Pollet, D.: Software architecture reconstruction: a process-oriented taxonomy. IEEE Trans. Softw. Eng. 35(4), 573–591 (2009). https://doi.org/10. 1109/TSE.2009.19 5. Garcia, J., Ivkovic, I., Medvidovic, N.: A comparative analysis of software architecture recovery techniques. In: Proceedings of the 28th IEEE/ACM International Conference on Automated Software Engineering, pp. 486–496. ASE’13 (2013). https://doi.org/10.1109/ASE.2013.6693106 6. Guo, G.Y., Atlee, J.M., Kazman, R.: A software architecture reconstruction method. In: Donohoe, P. (ed.) Software Architecture, TC2 First Working IFIP Conference on Software Architecture (WICSA1), 22–24 February 1999, San Antonio, Texas, USA. IFIP Conference Proceedings, vol. 140, pp. 15–34. Kluwer (1999) 7. Jordan, S., Linsbauer, L., Schaefer, I.: Autoarx: Digital twins of living architectures. In: ECSA 2022, Prague, Czech Republic, September 19–23, 2022, Proceedings. Lecture Notes in Computer Science, vol. 13444, pp. 205–212. Springer, Cham (2022). https://doi.org/10.1007/978-3-031-16697-6_15 8. Kazman, R., Carrière, S.J.: Playing detective: reconstructing software architecture from available evidence. Autom. Softw. Eng. 6(2), 107–138 (1999). https://doi. org/10.1023/A:1008781513258 9. Medvidovic, N., Taylor, R.N.: A framework for classifying and comparing architecture description languages. SIGSOFT Softw. Eng. Notes 22(6), 60–76 (1997). https://doi.org/10.1145/267896.267903 10. Monroy, M., Pinzger, M., Arciniegas, J.: Arco: Architecture recovery in context. J. Xi’an Univ. Archit. Technol 13(2), 128–143 (2021) 11. Pinzger, M.: ArchView - analyzing evolutionary aspects of complex software systems. Ph.D. thesis, TU Wien (2005) 12. Sartipi, K.: Alborz: A query-based tool for software architecture recovery. In: 9th International Workshop on Program Comprehension (IWPC 2001), 12–13 May 2001, Toronto, Canada, pp. 115–116. IEEE Computer Society (2001). https://doi. org/10.1109/WPC.2001.921721 13. Sartipi, K.: Software architecture recovery based on pattern matching. Ph.D. thesis, University of Waterloo, Waterloo, ON, Canada (2003)  
   
  A Query Language for Software Architecture Information  
   
  345  
   
  14. Taylor, R.N., Medvidovic, N., Dashofy, E.M.: Software Architecture - Foundations, Theory, and Practice. Wiley (2010). https://eu.wiley.com/WileyCDA/WileyTitle/ productCd-EHEP000180.html 15. Wang, Q., Gupta, G.: A logic programming-based environment for integrating architecture description languages. In: WLPE 2004: 14th Workshop on Logic Programming Environments, pp. 67–86 (2004)  
   
  Extracting the Architecture of Microservices: An Approach for Explainability and Traceability Pierre-Jean Qu´eval1,2(B) and Uwe Zdun1 1  
   
  2  
   
  University of Vienna, Vienna, Austria [email protected]  Doctoral School Computer Science, Vienna, Austria  
   
  Abstract. The polyglot nature of microservice architectures and the need for high reliability in security analyses pose unique challenges that existing approaches to automatic architecture recovery often fail to address. This article proposes an approach for extracting detailed architecture models from polyglot microservice source code focusing on explainability and traceability. The approach involves abstracting code navigation as a tree structure, using an exploratory algorithm to detect architectural aspects, and providing a set of generic detectors as input. The architecture models are automatically annotated with detailed information that makes them useful for architecture conformance checking and violation ﬁxing. Our case studies of microservice software systems validate the usefulness of our approach, providing insights into its completeness, accuracy, and eﬀectiveness for software architecture tasks.  
   
  Keywords: Architecture  
   
  1  
   
  · Explainability · Microservices · Polyglot  
   
  Introduction  
   
  Understanding software architecture is essential for ensuring software systems’ maintainability, scalability, and evolution. However, with the increasing complexity and diversity of modern software systems, extracting a comprehensive view of the architecture has become challenging. This is particularly true for polyglot microservice architectures [5,6], which are becoming more prevalent in the industry. Existing approaches to automatic architecture recovery [3,11] must address the unique challenges such architectures pose, leading to incomplete or inaccurate architecture models. In addition, existing approaches often need more explainability and traceability for extracting models from the source code. To address these challenges, we present an approach for extracting detailed architecture models with security annotations from polyglot microservice source code, focusing on explainability and traceability, making them useful for tasks such as architecture conformance checking [9] and violation ﬁxing [7] concerning microservice-speciﬁc patterns and best practices. c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 346–353, 2023. https://doi.org/10.1007/978-3-031-42592-9_24  
   
  Extracting the Architecture of Microservices  
   
  2  
   
  347  
   
  Related Works  
   
  Software architecture reconstruction is particularly challenging for decentralized and polyglot systems such as microservices [2]. Static analysis can be performed on a system before deployment, extracting information from existing artifacts [2,3]. Such analyses can help to provide formal veriﬁcation, generate test cases, support program or architecture comprehension (e.g., by generating UML models [10]), and maintain programs (e.g., by identifying code clones [12]). Rademacher et al. [11] propose a model for microservices that address their increased architectural complexity. Bushong et al. [1] present a method to analyze a microservice mesh and generate a communication diagram, context map, and microservice-speciﬁc limited contexts. Granchelli et al. [4] introduce MicroART, an architecture recovery approach for microservice-based systems. Ntentos et al. [8] extract an accurate architecture model abstraction approach for understanding component architecture models of highly polyglot systems. Like these studies, our study focuses on static analyses and polyglot systems, but in contrast, our approach aims to support traceability and explainability.  
   
  3  
   
  Our Approach  
   
  Our approach splits the process of extracting a software architecture model into three independent and decoupled steps. It allows us to work on the diﬀerent concerns involved in each step separately and achieve better control and accuracy: 1. Tree abstraction: By abstracting ubiquitous structures, like folder hierarchies, lines in a text ﬁle, nested brackets inside a code ﬁle, or widespread ﬁle formats like XML or YAML, the detection logic can be expressed agnostically and applied to various languages and paradigms. 2. Exploration: The core of our approach is the exploration of the source code based on a minimal set of generic and conﬁgurable detectors representing the knowledge about the project in a concise and readable manner. 3. Scan: By decoupling the generation of a speciﬁc representation from the detection, the detection logic is focused on architectural and security features common to many projects rather than on the speciﬁc concerns of a single analysis. 3.1  
   
  Tree Structure Abstraction  
   
  In the tree structure abstraction approach, we use a TreeReader class to represent the tree’s current position and navigate to other nodes in the tree. The TreeReader class has three public methods: MoveDown() moves the reader to the ﬁrst child of the current node, ReadNext() reads the next sibling, and MoveUp() moves the reader to the parent node. The Value property holds the content of the current node as a string, which works well for handling string-based elements in source code.  
   
  348  
   
  P.-J. Qu´eval and U. Zdun  
   
  The Path property represents the path to the current node from the root. A Path itself consists of two attributes. The Name attribute serves as an identifying value for a speciﬁc type of navigation, e.g., a folder hierarchy. The Children attribute represents which child node was selected from the current node in the path. For example, a path P = {“Directory” [2, 1, 2]} means, from the root of a folder hierarchy, move to the second child node, then move to the ﬁrst child node of the previous node, and ﬁnally move to the second child node of the previous node. 3.2  
   
  Generic Exploratory Algorithm  
   
  Overview. Rather than directly generating a diagram, our generic exploratory algorithm aims to create a model of the source code that captures its architectural aspects. The model is represented as a tree structure, where each node in the tree corresponds to a localized part of the source code, known as an “Instance.” An instance can be a function, a class, a ﬁle, or any speciﬁc part of the source code with a speciﬁc location. A branch in this tree is the Path from a parent Instance to its children. An Instance can have many Aspects associated with it. Aspects are semantic elements representing a particular characteristic or property of the Instance that are relevant to the analysis.  
   
  Fig. 1. Simpliﬁed model of a Repository  
   
  Figure 1 is an example of a simple model. It pinpoints six locations of interest in the source code: – – – – –  
   
  the root folder of the repository (a), a docker-compose ﬁle (b), two folders corresponding to a speciﬁc service. (c, d), a Java ﬁle (e), and a speciﬁc line in the Java ﬁle that declares a link (f).  
   
  Extracting the Architecture of Microservices  
   
  349  
   
  An Aspect is a simple label that may contain a value. For instance, (e) has the aspect “JavaFile:AuthServiceClient,” which can be understood as: “Here is an instance of a Java ﬁle named AuthServiceClient.” An instance can exhibit more than one Aspect, e.g., as it is the case for the Instance (d), which is both the folder of a service called “conﬁg” and the root of a speciﬁc archetype called “conﬁg service.” An Instance is automatically created for the root repository with the Aspect “root”. Still, apart from this, labels and values of Aspects have no further meaning for the algorithm. They only serve as inputs and outputs for the detectors. If the location of an Instance is contained within the location of another Instance, it is considered its child, and the branch contains the Path from the parent Instance to the child. The Paths in Fig. 1 are written in a readable format for better reading, such as the link “line 13” between (e) and (f), which would be a Path structure P = {“Text file,” [12]} with zero-based indexing. Detector-Based Algorithm. The purpose of a detector is, from an Instance with a given Aspect, to detect another Instance with another Aspect. Using Fig. 1, creating the Instance (f) from the Instance (e) could be done with a detector like “From a JavaFile, detect a FeignLink by using a Text File Tree Reader and detect a node whose value satisﬁes a regex expression.” The algorithm in Fig. 2 can thus extract a complete model, starting from a root instance. Note that the detectors are automatically ordered according to their dependencies. The exploratory algorithm also makes tracing how each aspect was detected straightforward. When an aspect is detected, our tool keeps a trace of the originating detector in the instance. 3.3  
   
  Scanner  
   
  The next step is to scan the model into a speciﬁc format. The Component and Connector (C&C) view is generated from the model, a high-level abstraction of the system’s components and their relationships. The C&C view clearly and concisely represents the system’s architecture, allowing for more straightforward analysis and evaluation. The scanner for the C&C also receives parameters in input, such as which aspects to include or what constitutes a component. This two-step process maintains a decoupling between the detection of architectural aspects and the speciﬁc view of the architecture.  
   
  4  
   
  Case Study  
   
  We based our study on our prior work [13], which studies case studies of 10 microservices from Github repositories to automatically assess their conformance to a set of Architectural Design Decisions. The Component & Connector views were manually modeled based on line-by-line inspection of their source, and industrial experts conﬁrmed the assessment scheme conformed to the most widely used security tactics for microservices today. Using the Component &  
   
  350  
   
  P.-J. Qu´eval and U. Zdun  
   
  Fig. 2. Exploration  
   
  Connector views of the study1 , we ensure that we have a ground truth of models that are accurate and relevant to the security analysis of the given repositories. The study’s full results cannot be directly presented within the scope of this short paper but a replication package is provided online2 . Our case study focuses on analyzing the architecture of the Piggymetrics application, a widely known microservices-based system. Piggymetrics is a ﬁnancial management platform demonstrating the complexities and challenges associated with polyglot microservice architectures. We aim to answer the following questions: – RQ1 Can the approach extract an accurate Component & Connector View? This would mean extracting the same components and connectors as the manual view. 1 2  
   
  https://zenodo.org/record/6424722. https://zenodo.org/record/8100928.  
   
  Extracting the Architecture of Microservices  
   
  351  
   
  – RQ2 Can the approach extract accurate security annotations? This would mean extracting the same annotations as the manual view. – RQ3 Can the approach explain its result? This would mean providing each annotation a link to a location in the source code. 4.1  
   
  Comparison of Manually Derived and Automatically Extracted Views  
   
  The automatic extraction detected the same components as the manual one, but the names are less informative. For instance, a component referred to as “Oauth2 Server” in the manual model becomes “auth-service” in the automatic one. This is an interesting ﬁnding since formalizing the naming conventions was not considered when starting this study, but it would be beneﬁcial in improving the usefulness of the generated views. This work would primarily aﬀect the scanner transforming the model into a Component & Connectors view. The extracted annotations for the components are the same, which is not highly signiﬁcant since we used the manual view as a reference for the desired features. However, it shows that these features could be translated neatly into our detectors. Our automatic tool detected an additional link among the connectors, from “auth-service” to “conﬁg”, compared to the manual one. Since it was adequately justiﬁed in the traces, we consider this a correct result by our automatic extractor. The most noteworthy diﬀerence lies in the security annotations on the connectors. The manual view presents not only the intrinsic attributes of the connector, e.g., that a given connector is a database connection and uses plain text credentials, but also contextual information, like “authentication scope/all request” that was often missing in the automatic view. The automatic extraction of features that can be traced back to a location in the source code is more straightforward than identifying features deduced from multiple sources of information in the repository. While some of these contextual features are also automatically extracted, e.g., to identify internal links between services or external conﬁguration ﬁles, these rely on multiple detectors and require more ﬁne-tuning. 4.2  
   
  Detectors  
   
  The automatic generation of a model for Piggymetrics requires 65 atomic detectors, not counting the one required to transform the model into a Component and Connector View. Most are very generic, for instance, identifying an XML ﬁle or an ArtefactId inside a POM ﬁle. While not each of these detectors will be relevant to every single source code, they are, as a whole, describing patterns widely prevalent among microservices projects. 20 detectors were more speciﬁc, encoding information related to the Spring framework used in Piggymetrics. For instance: “@EnableDiscoveryClient in a Java ﬁle denotes a registry link.” These speciﬁc detectors were of two types: (1) recognizing one or more speciﬁc values in a single node; (2) recognizing a speciﬁc path for a node. That detecting speciﬁc features is so straightforward is promising since it opens the possibility of generating these detectors automatically.  
   
  352  
   
  4.3  
   
  P.-J. Qu´eval and U. Zdun  
   
  Traces  
   
  The purpose of the trace is to allow a human to quickly verify a speciﬁc element of the view. Each annotation, whether from a component or a connector, is listed with the locations in the source code explaining it. Traces are exported as a Json ﬁle, which list the code location for each element’s annotation (component or link.) For instance: “element: gateway {annotation: csrf scope all requests {location: /piggymetrics/authservice/[...]/auth/conﬁg/WebSecurityConﬁg.java, line 28” These work well for most annotations but would become cumbersome for those requiring multiple detectors, as the number of concerned locations can quickly become combinatorially too important; therefore, these annotations are currently not traced.  
   
  5  
   
  Discussion  
   
  As of RQ1, the case study demonstrated the ability of our approach to extract a component and connector view from the source code. Our approach provided the needed detectors to produce an accurate component and connector view of the system’s architecture. The only shortcoming here is the absence of a naming system that makes the names less informative than in a manual view. Considering RQ2 and RQ3, while we achieve promising results, they are less satisfying. Some security features can only be detected by analyzing multiple locations in the source code. It makes the deﬁnition of detectors and the tracing less straightforward. Future research could explore ways to address the limitations of our approach and further improve its accuracy and scalability. One promising direction is to rely on a common core of generic detectors and automatically produce the speciﬁcs with an analyzer and a higher-level description of the expectations. Such an improvement could reduce the dependence on manually crafted detectors and increase the system’s coverage under study.  
   
  6  
   
  Conclusion  
   
  This paper presented an approach for extracting a component and connector view from source code. We evaluated our approach using case studies in microservices and demonstrated its eﬀectiveness in extracting a clear and understandable representation of the system’s architecture. Our approach has limitations, particularly its dependence on the quality of the detectors provided as input. Future research could address these limitations by automatically generating the detectors from a higher-level expectation description and may make our approach a helpful tool for software architects and developers. Acknowledgements. Our work has received funding from the European Union’s Horizon 2020 research and innovation programme under grant agreement No 952647 (AssureMOSS project). This work was supported by: FWF (Austrian Science Fund) project API-ACE: I 4268; FWF (Austrian Science Fund) project IAC: I 4731-N.  
   
  Extracting the Architecture of Microservices  
   
  353  
   
  References 1. Bushong, V., Das, D., Al Maruf, A., Cerny, T.: Using static analysis to address microservice architecture reconstruction. In: 2021 36th IEEE/ACM International Conference on Automated Software Engineering (ASE). IEEE (2021) 2. Cerny, T., Abdelfattah, A.S., Bushong, V., Al Maruf, A., Taibi, D.: Microservice architecture reconstruction and visualization techniques: a review. In: 2022 IEEE International Conference on Service-Oriented System Engineering (SOSE). IEEE (2022) 3. Ducasse, S., Pollet, D.: Software architecture reconstruction: a process-oriented taxonomy. IEEE Trans. Software Eng. 35(4), 573–591 (2009) 4. Granchelli, G., Cardarelli, M., Di Francesco, P., Malavolta, I., Iovino, L., Di Salle, A.: Towards recovering the software architecture of microservice-based systems. In: 2017 IEEE International conference on software architecture workshops (ICSAW). IEEE (2017) 5. Hasselbring, W., Steinacker, G.: Microservice architectures for scalability, agility and reliability in e-commerce. In: 2017 IEEE International Conference on Software Architecture Workshops (ICSAW). IEEE (2017) 6. Newman, S.: Building Microservices. O’Reilly Media Inc., Sebastopol (2015) 7. Ntentos, E., Zdun, U., Plakidas, K., Geiger, S.: Semi-automatic feedback for improving architecture conformance to microservice patterns and practices. In: 2021 IEEE 18th International Conference on Software Architecture (ICSA). IEEE (2021) 8. Ntentos, E., et al.: Detector-based component model abstraction for microservicebased systems. Computing 103(11), 2521–2551 (2021) 9. Ntentos, E., Zdun, U., Plakidas, K., Meixner, S., Geiger, S.: Assessing architecture conformance to coupling-related patterns and practices in microservices. In: Jansen, A., Malavolta, I., Muccini, H., Ozkaya, I., Zimmermann, O. (eds.) ECSA 2020. LNCS, vol. 12292, pp. 3–20. Springer, Cham (2020). https://doi.org/10.1007/ 978-3-030-58923-3 1 10. Papotti, P.E., do Prado, A.F., de Souza, W.L.: Reducing time and eﬀort in legacy systems reengineering to MDD using metaprogramming. In: Proceedings of the 2012 ACM Research in Applied Computation Symposium (2012) 11. Rademacher, F., Sachweh, S., Z¨ undorf, A.: A modeling method for systematic architecture reconstruction of microservice-based software systems. In: Nurcan, S., Reinhartz-Berger, I., Soﬀer, P., Zdravkovic, J. (eds.) BPMDS/EMMSAD -2020. LNBIP, vol. 387, pp. 311–326. Springer, Cham (2020). https://doi.org/10.1007/ 978-3-030-49418-6 21 12. Rattan, D., Bhatia, R., Singh, M.: Software clone detection: a systematic review. Inf. Softw. Technol. 55(7), 1165–1199 (2013) 13. Zdun, U., et al.: Microservice security metrics for secure communication, identity management, and observability. ACM Trans. Softw. Eng. Methodol. 32(1), 1–34 (2023)  
   
  A Comparison of Static and Dynamic Analysis to Identify Microservices in Monolith Systems Bernardo Andrade, Samuel Santos, and Ant´ onio Rito Silva(B) INESC-ID/Department of Computer Science and Engineering, Instituto Superior T´ecnico, Av. Rovisco Pais 1, 1049-001 Lisboa, Portugal {bernardo.andrade,samuel.c.santos,rito.silva}@tecnico.ulisboa.pt  
   
  Abstract. One of the most challenging problems in migrating a monolith to a microservice architecture is the identiﬁcation of the microservices boundaries. Several approaches have recently been proposed for the automatic identiﬁcation of microservices, which, even though following the same basic steps, diverge on how data from the monolith system are collected and analyzed. In this paper, we compare the decompositions generated for two monolith systems into a set of candidate microservices, when static and dynamic analysis data collection techniques are used. As a result of the analysis, we conclude that neither of the analysis techniques, static or dynamic, outperforms the other, but the dynamic collection of data requires more eﬀort. Keywords: Microservices · Software Evolution Dynamic Analysis · Software Architecture  
   
  1  
   
  · Static Analysis ·  
   
  Introduction  
   
  Microservice architecture [6] has become the main stream in the development of large-scale and complex systems when companies, such as Amazon and Netﬂix, faced constraints on their system evolution due to the coupling resulting from the use of a large domain model maintained in a shared database. However, the adoption of this architectural style is not free from problems, where the identiﬁcation of microservice boundaries is one of the most challenging, because a wrong cut results in the need to refactor between distributed services, which aﬀects service interfaces and cannot have the support of integrated development environments. The identiﬁcation of microservice boundaries has been addressed by research [1] in the context of the migration of monolith systems to a microservice architecture. Some approaches take advantage of the monolith’s codebase and This work was partially supported by Funda¸ca ˜o para a Ciˆencia e Tecnologia (FCT) through projects UIDB/50021/2020 (INESC-ID) and PTDC/CCI-COM/2156/2021 (DACOMICO). c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  B. Tekinerdogan et al. (Eds.): ECSA 2023, LNCS 14212, pp. 354–361, 2023. https://doi.org/10.1007/978-3-031-42592-9_25  
   
  A Comparison of Static and Dynamic Analysis  
   
  355  
   
  runtime behavior to collect data, analyze it, and propose a decomposition of the monolith. Although each of the approaches uses diﬀerent techniques, they follow the same basic steps: (1) collection: collect data from the monolith system; (2) decomposition: deﬁne a decomposition by applying a similarity measure and an aggregation algorithm, like a clustering algorithm, to the data collected in the ﬁrst step; (3) analysis: evaluate the quality of the generated decomposition using a set of metrics. However, the approaches diﬀer in the techniques applied in each of the steps. In terms of data collection, they diﬀer in whether the data is collected using static analysis of the code [9], or whether it is collected through the execution of the monolith [4]. In this paper, we analyze two monolith systems to study whether these two data collection techniques provide signiﬁcant diﬀerences when identifying candidate decompositions. The analysis framework is built on top of what the gray literature considers as one of the main diﬃculties in the identiﬁcation of microservices boundaries in monolith systems: the transactional contexts. Therefore, the decomposition to a microservice architecture should minimize the number of distributed transactions implementing a functionality, i.e., minimize the cost of redesigning the functionality in the microservice architecture. Taking into account this analysis framework, we address the following research question: Which collection of monolith behavior data, static or dynamic analysis, generates better decompositions?  
   
  2  
   
  Related Work  
   
  In recent years, a myriad of approaches have been proposed to support the migration of monolith systems to microservice architecture [1], which use the monolith speciﬁcation, codebase, services interfaces, runtime behavior, and project development data to recommend the best decompositions. In this paper, we address approaches that use the monolith codebase or runtime behavior. These approaches follow the same steps, but can diverge on the similarity measures they use, such as accesses [4], reads and writes [9], and sequences [2]. On the other hand, there is no empirical evidence on whether the use of execution traces to collect the behavior of the monolith, e.g. [4], provides better results than static code analysis collection and what is the required eﬀort to collect the data. As far as our knowledge goes, there is no work on the comparison between the use of static and dynamic analysis in the migration of monolith systems to a microservice architecture.  
   
  3  
   
  Monolith Microservices Identification  
   
  Diﬀerent approaches to the migration of monoliths to microservice architecture apply, in the Collection step, static or dynamic techniques, but there is no evidence in the literature on whether one of them subsumes the other, whether they  
   
  356  
   
  B. Andrade et al.  
   
  are equivalent, or even whether they are complementary. Therefore, we collected data using both techniques to address this open problem. Data was collected from two monolith systems, LdoD1 (122 controllers, 71 domain entities) and Blended Workﬂow (BW)2 (98 controllers, 52 domain entities), which are implemented using the Model-View-Controller architectural style, where the controllers process the request by triggering transactional changes in the model, thus corresponding to monolith functionalities. The monolith is designed considering its controllers as transactions that manipulate a persistent model of domain entities. As a result of the collection, the functionalities accesses are stored in a JSON format ﬁle, which consists of a mapping between functionality names and functionality traces. Each functionality trace is characterized by a unique identiﬁer and a (compressed) list of accesses observed for the execution of a speciﬁc functionality. An Access is composed of the domain entity and the type of access, read, or write. During the Decomposition step of the migration process, our tool uses hierarchical clustering (Python SciPy) to process the collected data and, according to 4 similarity measures [8], generate a dendrogram of the domain entities. The generated dendrogram can be cut to produce diﬀerent decompositions, given the number of clusters. For the Analysis step, our tool generates multiple decompositions, by varying the weights of the similarity measures and the number of clusters, and compares them according to a complexity metric. The complexity metric measures the development eﬀort to migrate a monolith to a microservice architecture due to the introduction of distributed transactions [7]. Furthermore, for each monolith system, we compare the decompositions obtained using the statically collected data vs the decompositions obtained using the dynamically collected data using the MoJoFM [10] distance metric. 3.1  
   
  Data Collection Tools  
   
  Two data collection tools were developed. The static collection tool is built on top of Spoon [5] and is capable of, through codebase introspection, identifying Spring-Boot controllers, which represent monolith functionalities, and persistent domain entities implemented using an Object-Relational Mapper (ORM) framework. The dynamic collection tool processes execution traces to identify runtime accesses to the domain entities. Execution traces were obtained by using Kieker [3] on a running instance of the monolith under analysis. Monolith systems were instrumented using AspectJ to intercept calls to ORM data access methods, the ones responsible for manipulating the persistent state.  
   
  1 2  
   
  https://github.com/socialsoftware/edition. https://github.com/socialsoftware/blended-workﬂow.  
   
  A Comparison of Static and Dynamic Analysis  
   
  3.2  
   
  357  
   
  Monolith Monitoring  
   
  While for the static data collection it was enough to run our static analysis tool on the monolith codebases, for the dynamic data collection three diﬀerent monitoring strategies were followed: in production, through functional testing, and by simulation. Regarding the LdoD system, it was monitored in three diﬀerent environments: production, functional testing, and simulation. Production monitoring lasted 3 weeks and a total of 490 GB worth of data was collected. Throughout this period, tight supervision was necessary to oversee the impact the monitoring had on the performance of the system’s functionalities. Since the server hosting the application had a small free disk space (around 20 GB) and a massive performance drop was observed if it was full, it was mandatory to collect the generated logs from time to time (2–3 days) to not harm the user experience and to collect fresh logs instead of discarding them. Analyzing the data collected, only 44% of the controllers were used in production, compared to the total number of controllers identiﬁed by static analysis. Therefore, further processing and evaluation of these data was abdicated due to the substantial eﬀort required to process them and the relatively low coverage. Regarding functional testing, it was achieved by running a suite of 200 integration tests (4.207 lines of code) that exercised 96% of the controllers and 82% of the domain entities, generating a few megabytes (  

 Report "Software Architecture: 17th European Conference, ECSA 2023, Istanbul, Turkey, September 18–22, 2023, Proceedings [1 ed.] 303142591X, 9783031425912, 9783031425929"  
 ×    

 --- Select Reason ---  Pornographic  Defamatory  Illegal/Unlawful  Spam  Other Terms Of Service Violation  File a copyright complaint     

 Close  Submit    

    Contact information  
 Michael Browner   
   [email protected]    
   
   Address:   
 1918 St.Regis, Dorval, Quebec, H9P 1H6, Canada.   
   
 Support & Legal  
  O nas 
  Skontaktuj się z nami 
  Prawo autorskie 
  Polityka prywatności 
  Warunki 
  FAQs 
  Cookie Policy 
    
 Subscribe to our newsletter  
  Be the first to receive exclusive offers and the latest news on our products and services directly in your inbox.  
   Subscribe     

 Copyright © 2024 DOKUMEN.PUB. All rights reserved.        

 Unsere Partner sammeln Daten und verwenden Cookies zur Personalisierung und Messung von Anzeigen. Erfahren Sie, wie wir und unser Anzeigenpartner Google Daten sammeln und verwenden  .   Cookies zulassen

19. EC-TEL_0 conference:
Home 
  Join Us 
  Imprint 
  Legal 
  Contact 
  Menu               

 EA-TEL Association | EATEL Board 
  Membership | Institutional members 
  Individual Members 
  Member Services 
  EATEL Statutes 
  EATEL General Assemblies | EATEL General Assembly 2023 
  SIG | Educational Robots & Robotics – SIG EduRobotX 
  Technology Enhanced Learning Curricula and Programs – SIG CUPTEL 
  SIG Serious Games and Gamification (SeGaGa) 
  SIG Artificial Intelligence for & in Education (AI4Ed) 
  Past SIGs | SIG Wearable-Enhanced Learning (WELL) 
  SIG JTEL Doctoral Academy 
  SIG EC-TEL Advisory Board 
  SIG Open Content for Business and Management 
  SIG dataTEL – Data-driven Research and Learning Analytics 
  SIG Remote Labs and Online Experimentation 
  SIG Technology Enhanced Assessment and Feedback 
  ECTEL Conference | ECTEL 2024 
  Previous editions | ECTEL 2023 
  ECTEL 2022 
  ECTEL 2021 
  JTELSS Summer School | JTELSS 2025 
  Previous editions | JTELSS 2024 
  JTELSS 2023 
  JTELSS 2022 
  JTELSS 2020 (canceled) 
  JTELSS 2019 
  JTELSS 2018 
  JTELSS 2017 
  JTELSS 2016 
  JTELSS 2015 
  JTELSS 2014 
  JTELSS 2013 
  JTELSS 2012 
  JTELSS 2011 
  JTELSS 2010 
  JTELSS 2009 
  JTELSS 2008 
  JTELSS 2007 
  JTELSS 2006 
  JTELSS 2005 
  DE-TEL Project | DETEL multiplier event in Portugal 
  Open Webinar on Doctoral Education in Technology Enhanced Learning 
  DETEL at ECTEL22 
  DETEL multiplier event in Spain 
  DETEL multiplier event in Greece 
  DETEL at JTELSS22 
  DETEL Webinars 2021 
  DETEL program 
  DETEL Survey 
  DETEL survey results 
  TEL doctoral training in Europe 
  DETEL report 
  DETEL Book 
  DETEL publications 
  News | Webinars 

 ECTEL 2023  
   
 Home 

 Eighteenth European Conference on Technology Enhanced Learning  
 ECTEL 2023  
 Aveiro, Portugal | 4-8 September 2023  
  https://ea-tel.eu/ectel2023/   

 Call for Papers for ECTEL 2023  
 The Call for Research Papers, Posters, Demonstrations, Workshops and Doctoral Consortium is now available on this page   .  
 You can submit your contributions to EasyChair  ( https://www.easychair.org/conferences/?conf=ectel2023   ).  
 We look forward to your contributions to EC-TEL 2023  !  

 ECTEL 2023  
 Conference 
  Theme 
  Call for papers 
  Important dates 
  Review criteria 
  Programme 
  Accepted papers 
  Keynote speakers 
  Posters 
  Workshops 
  Doctoral Consortium 
  Proceedings 
  Registration 
  Venue 
  Committee 
  Supporting organizations 

 Tweets by ECTELconference   

   Join EATEL       

 EATEL  
 About EATEL 
  EATEL Board 
  Institutional Members 
  Join Us 

 Activities  
 Special Interest Groups 
  Webinars 

 Events  
 ECTEL Conference 
  JTEL Summer School 
  DE-TEL Project 

 Contact  
 Address: Langwartweg 60, 53129 Bonn, Germany  
 Email: office@ea-tel.eu  

 TOP    
 2024 Copyright © EATEL - European Association of Technology Enhanced Learning   

   EA-TEL | EATEL Board 
  Membership | Institutional members 
  Individual Members 
  Member Services 
  EATEL Statutes 
  EATEL General Assemblies | EATEL General Assembly 2023 
  SIG | Educational Robots & Robotics – SIG EduRobotX 
  Technology Enhanced Learning Curricula and Programs – SIG CUPTEL 
  SIG Serious Games and Gamification (SeGaGa) 
  SIG Artificial Intelligence for & in Education (AI4Ed) 
  Past SIGs | SIG Wearable-Enhanced Learning (WELL) 
  SIG JTEL Doctoral Academy 
  SIG EC-TEL Advisory Board 
  SIG Open Content for Business and Management 
  SIG dataTEL – Data-driven Research and Learning Analytics 
  SIG Remote Labs and Online Experimentation 
  SIG Technology Enhanced Assessment and Feedback 
  ECTEL | ECTEL 2024 
  Previous editions | ECTEL 2023 
  ECTEL 2022 
  ECTEL 2021 
  JTELSS | JTELSS 2025 
  Previous editions | JTELSS 2024 
  JTELSS 2023 
  JTELSS 2022 
  JTELSS 2020 (canceled) 
  JTELSS 2019 
  JTELSS 2018 
  JTELSS 2017 
  JTELSS 2016 
  JTELSS 2015 
  JTELSS 2014 
  JTELSS 2013 
  JTELSS 2012 
  JTELSS 2011 
  JTELSS 2010 
  JTELSS 2009 
  JTELSS 2008 
  JTELSS 2007 
  JTELSS 2006 
  JTELSS 2005 
  DE-TEL | DETEL multiplier event in Portugal 
  Open Webinar on Doctoral Education in Technology Enhanced Learning 
  DETEL at ECTEL22 
  DETEL multiplier event in Spain 
  DETEL multiplier event in Greece 
  DETEL at JTELSS22 
  DETEL Webinars 2021 
  DETEL program 
  DETEL Survey 
  DETEL survey results 
  TEL doctoral training in Europe 
  DETEL report 
  DETEL Book 
  DETEL publications 
  News | Webinars 
  Home 
  Join Us 
  Imprint 
  Legal 
  Contact 
    
 We use cookies on our website to give you the most relevant experience by remembering your preferences and repeat visits. By clicking “Accept All”, you consent to the use of ALL the cookies. However, you may visit "Cookie Settings" to provide a controlled consent.   
 Cookie Settings  Accept All    

 Manage consent    
    Close   Privacy Overview  
 This website uses cookies to improve your experience while you navigate through the website. Out of these, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the website. We also use third-party cookies that help us analyze and understand how you use this website. These cookies will be stored in your browser only with your consent. You also have the option to opt-out of these cookies. But opting out of some of these cookies may affect your browsing experience.   

 Necessary   Necessary    
 Always Enabled    
 Necessary cookies are absolutely essential for the website to function properly. These cookies ensure basic functionalities and security features of the website, anonymously.  
 Cookie | Duration | Description 
 cookielawinfo-checkbox-analytics | 11 months | This cookie is set by GDPR Cookie Consent plugin. The cookie is used to store the user consent for the cookies in the category "Analytics". 
 cookielawinfo-checkbox-functional | 11 months | The cookie is set by GDPR cookie consent to record the user consent for the cookies in the category "Functional". 
 cookielawinfo-checkbox-necessary | 11 months | This cookie is set by GDPR Cookie Consent plugin. The cookies is used to store the user consent for the cookies in the category "Necessary". 
 cookielawinfo-checkbox-others | 11 months | This cookie is set by GDPR Cookie Consent plugin. The cookie is used to store the user consent for the cookies in the category "Other. 
 cookielawinfo-checkbox-performance | 11 months | This cookie is set by GDPR Cookie Consent plugin. The cookie is used to store the user consent for the cookies in the category "Performance". 
 viewed_cookie_policy | 11 months | The cookie is set by the GDPR Cookie Consent plugin and is used to store whether or not user has consented to the use of cookies. It does not store any personal data. 

 Functional   Functional     
   
 Functional cookies help to perform certain functionalities like sharing the content of the website on social media platforms, collect feedbacks, and other third-party features.   

 Performance   Performance     
   
 Performance cookies are used to understand and analyze the key performance indexes of the website which helps in delivering a better user experience for the visitors.   

 Analytics   Analytics     
   
 Analytical cookies are used to understand how visitors interact with the website. These cookies help provide information on metrics the number of visitors, bounce rate, traffic source, etc.   

 Advertisement   Advertisement     
   
 Advertisement cookies are used to provide visitors with relevant ads and marketing campaigns. These cookies track visitors across websites and collect information to provide customized ads.   

 Others   Others     
   
 Other uncategorized cookies are those that are being analyzed and have not been classified into a category as yet.   

 SAVE & ACCEPT

20. EC-TEL_1 conference:
Home 
  Join Us 
  Imprint 
  Legal 
  Contact 
  Menu               

 EA-TEL Association | EATEL Board 
  Membership | Institutional members 
  Individual Members 
  Member Services 
  EATEL Statutes 
  EATEL General Assemblies | EATEL General Assembly 2023 
  SIG | Educational Robots & Robotics – SIG EduRobotX 
  Technology Enhanced Learning Curricula and Programs – SIG CUPTEL 
  SIG Serious Games and Gamification (SeGaGa) 
  SIG Artificial Intelligence for & in Education (AI4Ed) 
  Past SIGs | SIG Wearable-Enhanced Learning (WELL) 
  SIG JTEL Doctoral Academy 
  SIG EC-TEL Advisory Board 
  SIG Open Content for Business and Management 
  SIG dataTEL – Data-driven Research and Learning Analytics 
  SIG Remote Labs and Online Experimentation 
  SIG Technology Enhanced Assessment and Feedback 
  ECTEL Conference | ECTEL 2024 
  Previous editions | ECTEL 2023 
  ECTEL 2022 
  ECTEL 2021 
  JTELSS Summer School | JTELSS 2025 
  Previous editions | JTELSS 2024 
  JTELSS 2023 
  JTELSS 2022 
  JTELSS 2020 (canceled) 
  JTELSS 2019 
  JTELSS 2018 
  JTELSS 2017 
  JTELSS 2016 
  JTELSS 2015 
  JTELSS 2014 
  JTELSS 2013 
  JTELSS 2012 
  JTELSS 2011 
  JTELSS 2010 
  JTELSS 2009 
  JTELSS 2008 
  JTELSS 2007 
  JTELSS 2006 
  JTELSS 2005 
  DE-TEL Project | DETEL multiplier event in Portugal 
  Open Webinar on Doctoral Education in Technology Enhanced Learning 
  DETEL at ECTEL22 
  DETEL multiplier event in Spain 
  DETEL multiplier event in Greece 
  DETEL at JTELSS22 
  DETEL Webinars 2021 
  DETEL program 
  DETEL Survey 
  DETEL survey results 
  TEL doctoral training in Europe 
  DETEL report 
  DETEL Book 
  DETEL publications 
  News | Webinars 

 ECTEL 2023: Proceedings  
   
 Home 
  ECTEL 2023 

 Springer Proceedings  
 The conference proceedings can be accessed here  .  
 Free access is available between 4 th  Sep to 4 th  Oct 2023.  

 ECTEL 2023  
 Conference 
  Theme 
  Call for papers 
  Important dates 
  Review criteria 
  Programme 
  Accepted papers 
  Keynote speakers 
  Posters 
  Workshops 
  Doctoral Consortium 
  Proceedings 
  Registration 
  Venue 
  Committee 
  Supporting organizations 

 Tweets by ECTELconference   

   Join EATEL       

 EATEL  
 About EATEL 
  EATEL Board 
  Institutional Members 
  Join Us 

 Activities  
 Special Interest Groups 
  Webinars 

 Events  
 ECTEL Conference 
  JTEL Summer School 
  DE-TEL Project 

 Contact  
 Address: Langwartweg 60, 53129 Bonn, Germany  
 Email: office@ea-tel.eu  

 TOP    
 2024 Copyright © EATEL - European Association of Technology Enhanced Learning   

   EA-TEL | EATEL Board 
  Membership | Institutional members 
  Individual Members 
  Member Services 
  EATEL Statutes 
  EATEL General Assemblies | EATEL General Assembly 2023 
  SIG | Educational Robots & Robotics – SIG EduRobotX 
  Technology Enhanced Learning Curricula and Programs – SIG CUPTEL 
  SIG Serious Games and Gamification (SeGaGa) 
  SIG Artificial Intelligence for & in Education (AI4Ed) 
  Past SIGs | SIG Wearable-Enhanced Learning (WELL) 
  SIG JTEL Doctoral Academy 
  SIG EC-TEL Advisory Board 
  SIG Open Content for Business and Management 
  SIG dataTEL – Data-driven Research and Learning Analytics 
  SIG Remote Labs and Online Experimentation 
  SIG Technology Enhanced Assessment and Feedback 
  ECTEL | ECTEL 2024 
  Previous editions | ECTEL 2023 
  ECTEL 2022 
  ECTEL 2021 
  JTELSS | JTELSS 2025 
  Previous editions | JTELSS 2024 
  JTELSS 2023 
  JTELSS 2022 
  JTELSS 2020 (canceled) 
  JTELSS 2019 
  JTELSS 2018 
  JTELSS 2017 
  JTELSS 2016 
  JTELSS 2015 
  JTELSS 2014 
  JTELSS 2013 
  JTELSS 2012 
  JTELSS 2011 
  JTELSS 2010 
  JTELSS 2009 
  JTELSS 2008 
  JTELSS 2007 
  JTELSS 2006 
  JTELSS 2005 
  DE-TEL | DETEL multiplier event in Portugal 
  Open Webinar on Doctoral Education in Technology Enhanced Learning 
  DETEL at ECTEL22 
  DETEL multiplier event in Spain 
  DETEL multiplier event in Greece 
  DETEL at JTELSS22 
  DETEL Webinars 2021 
  DETEL program 
  DETEL Survey 
  DETEL survey results 
  TEL doctoral training in Europe 
  DETEL report 
  DETEL Book 
  DETEL publications 
  News | Webinars 
  Home 
  Join Us 
  Imprint 
  Legal 
  Contact 
    
 We use cookies on our website to give you the most relevant experience by remembering your preferences and repeat visits. By clicking “Accept All”, you consent to the use of ALL the cookies. However, you may visit "Cookie Settings" to provide a controlled consent.   
 Cookie Settings  Accept All    

 Manage consent    
    Close   Privacy Overview  
 This website uses cookies to improve your experience while you navigate through the website. Out of these, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the website. We also use third-party cookies that help us analyze and understand how you use this website. These cookies will be stored in your browser only with your consent. You also have the option to opt-out of these cookies. But opting out of some of these cookies may affect your browsing experience.   

 Necessary   Necessary    
 Always Enabled    
 Necessary cookies are absolutely essential for the website to function properly. These cookies ensure basic functionalities and security features of the website, anonymously.  
 Cookie | Duration | Description 
 cookielawinfo-checkbox-analytics | 11 months | This cookie is set by GDPR Cookie Consent plugin. The cookie is used to store the user consent for the cookies in the category "Analytics". 
 cookielawinfo-checkbox-functional | 11 months | The cookie is set by GDPR cookie consent to record the user consent for the cookies in the category "Functional". 
 cookielawinfo-checkbox-necessary | 11 months | This cookie is set by GDPR Cookie Consent plugin. The cookies is used to store the user consent for the cookies in the category "Necessary". 
 cookielawinfo-checkbox-others | 11 months | This cookie is set by GDPR Cookie Consent plugin. The cookie is used to store the user consent for the cookies in the category "Other. 
 cookielawinfo-checkbox-performance | 11 months | This cookie is set by GDPR Cookie Consent plugin. The cookie is used to store the user consent for the cookies in the category "Performance". 
 viewed_cookie_policy | 11 months | The cookie is set by the GDPR Cookie Consent plugin and is used to store whether or not user has consented to the use of cookies. It does not store any personal data. 

 Functional   Functional     
   
 Functional cookies help to perform certain functionalities like sharing the content of the website on social media platforms, collect feedbacks, and other third-party features.   

 Performance   Performance     
   
 Performance cookies are used to understand and analyze the key performance indexes of the website which helps in delivering a better user experience for the visitors.   

 Analytics   Analytics     
   
 Analytical cookies are used to understand how visitors interact with the website. These cookies help provide information on metrics the number of visitors, bounce rate, traffic source, etc.   

 Advertisement   Advertisement     
   
 Advertisement cookies are used to provide visitors with relevant ads and marketing campaigns. These cookies track visitors across websites and collect information to provide customized ads.   

 Others   Others     
   
 Other uncategorized cookies are those that are being analyzed and have not been classified into a category as yet.   

 SAVE & ACCEPT

21. EvoCOP_0 conference:
Skip to main content      

 Toggle navigation     
 About | About Evostar 
  Organizers 
  The EvoStar Code 
  Awards 
  Previous events 
  Contact us 
  Calls | EuroGP 
  EvoAPPS | Analysis of Evolutionary Computation Methods: Theory, Empirics, and Real-World Applications 
  Applications of Bioinspired techniques on Social Networks 
  Computational Intelligence for Sustainability 
  Evolutionary Computation in Edge, Fog, and Cloud Computing 
  Evolutionary Computation in Image Analysis, Signal Processing and Pattern Recognition 
  Machine Learning and AI in Digital Healthcare and Personalized Medicine 
  Resilient Bio-Inspired Algorithms 
  Soft Computing Applied to Games 
  Surrogate-Assisted Evolutionary Optimisation 
  EvoCOP 
  EvoMUSART 
  Joint Track on Evolutionary Machine Learning 
  Late-Breaking Abstracts 
  Submit | Submit Paper 
  Camera-Ready Paper 
  Late-Breaking Abstracts 
  Important Dates 
  Programme | Programme 
  Invited Speakers 
  Accepted contributions | EuroGP Accepted Papers 
  EvoAPPS Accepted Papers 
  EvoCOP Accepted Papers 
  EvoMUSART Accepted Papers 
  Evolutionary Machine Learning Accepted Papers 
  Best paper nominations | EuroGP Best Paper Nominees 
  EvoAPPs Best Paper Nominees 
  EvoCOP Best Paper Nominees 
  EvoMUSART Best Paper Nominees 
  Participants | Registration 
  Preparing your online poster 
  Instructions for presenters 
  Online Poster Session (in Gather) 
  Students | Student Welcome Reception 
  Student Workshop 
  The Great EvoStar Scavenger Hunt 2023 
  EvoStar Outstanding Students 
  Outstanding Students of 2023 
  Local information | About Brno 
  Venue 
  Travel Information 
  Accomodation 

   The 23rd European Conference on Evolutionary Computation in Combinatorial Optimisation is a multidisciplinary conference that brings together researchers working on applications and theory of evolutionary computation methods and other metaheuristics for solving difficult combinatorial optimisation problems appearing in various industrial, economic, and scientific domains.  
 Successfully solved problems include, but are not limited to, multi-objective, uncertain, dynamic and stochastic problems in the context of scheduling, timetabling, network design, transportation and distribution, vehicle routing, stringology, graphs, satisfiability, energy optimisation, cutting, packing, planning and search-based software engineering.  
 The EvoCOP 2023 conference will be held together with EuroGP (the 26th European Conference on Genetic Programming), EvoMUSART (the 12th European conference on evolutionary and biologically inspired music, sound, art and design) and EvoApplications (the 26th European Conference on the Applications of Evolutionary Computation), in a joint event collectively known as EvoStar (Evo*).  
 Accepted papers will be published by Springer Nature in the Lecture Notes in Computer Science series. Previous proceedings can be found in the EvoCOP Conference Proceedings in SpringerLink  .  
 Download the CFP in PDF  .  
 NEW:   The proceedings of EvoCOP 2023 are available following this link  .  
 Conference Chairs  
 Leslie Pérez-Cáceres | Pontificia Universidad Católica de Valparaíso, Chile | leslie.perez(at)pucv.cl 
  Thomas Stützle | Université Libre de Bruxelles, Belgium | stuetzle(at)ulb.ac.be 
  Areas of Interest and Contributions   
 EvoCOP welcomes submissions in all experimental and theoretical aspects of evolutionary computation and other metaheuristics to combinatorial optimisation problems, including (but not limited to) the following areas:  
 Applications of metaheuristics to combinatorial optimization problems 
  Theoretical developments 
  Neighbourhoods and efficient algorithms for searching them 
  Variation operators for stochastic search methods 
  Constraint-handling techniques 
  Parallelisation and grid computing 
  Search space and landscape analyses 
  Comparisons between different (also exact) methods 
  Automatic algorithm configuration and design 
  Prominent examples of metaheuristics include (but are not limited to):  
 Evolutionary algorithms 
  Estimation of distribution algorithms 
  Swarm intelligence methods such as ant colony and particle swarm optimisation 
  Artificial immune systems 
  Local search methods such as simulated annealing, tabu search, variable neighbourhood search, iterated local search, scatter search and path relinking 
  Hybrid methods such as memetic algorithms 
  Matheuristics (hybrids of exact and heuristic methods) 
  Hyper-heuristics and autonomous search 
  Surrogate-model-based methods 
  Notice that, by tradition, continuous/numerical optimisation is *not* part of the topics of interest of EvoCOP. Interested authors might consider submitting to other EvoStar conferences such as EvoApplications.  
 Submission Details  
 Paper submissions must be original and not published elsewhere. The submissions will be peer reviewed by members of the program committee. The reviewing process will be double-blind, please omit information about the authors in the submitted paper  . Submit your manuscript in Springer LNCS format  .  
 Page limit:  16 pages  
 Submission link:  https://easychair.org/conferences/?conf=evo2023   
 The authors of accepted papers will have to improve their paper on the The authors of accepted papers will have to improve their paper on the basis of the reviewers’ comments and will be asked to send a camera ready version of their manuscripts (notifications will be sent on 18 January, 2023  and the camera-ready deadline will be on 1 February, 2023  ). At least one author of each accepted work has to register for the conference not later than 27 February 2023  , attend the conference and present the work.  
 Programme Committee  
 Richard Allmendinger  , The University of Manchester  
  Matthieu Basseur  , LISIC, Université du Littoral Côte d’Opale, France  
  Christian Blum  , Spanish National Research Council (CSIC)  
  Alexander Brownlee  , University of Stirling  
  Maxim Buzdalov  , ITMO University  
  Arina Buzdalova  , ITMO University  
  Christian Camacho Villalon  , Université Libre de Bruxelles (ULB)  
  Josu Ceberio  , University of the Basque Country  
  Marco Chiarandini  , University of Southern Denmark  
  Francisco Chicano  , University of Málaga  
  Carlos Coello Coello  , CINVESTAV-IPN  
  Carlos Cotta  , Universidad de Málaga  
  Nguyen Dang  , St Andrews University  
  Bilel Derbel  , CRIStAL (Univ. Lille)  
  Marcos Diez García  , Fujitsu Research of Europe Limited, Slough, UK  
  Karl Doerner  , University of Vienna  
  Benjamin Doerr  , Ecole Polytechnique  
  Carola Doerr  , Sorbonne University, CNRS, France  
  Talbi El-Ghazali  , University of Lille  
  Jonathan Fieldsend  , University of Exeter  
  Carlos M. Fonseca  , University of Coimbra  
  Alberto Franzin  , Université Libre de Bruxelles (ULB)  
  Bernd Freisleben  , TU Darmstadt  
  Carlos García-Martínez  , Computing and Numerical Analysis Dept. Univ. of Córdoba  
  Adrien Goeffon  , LERIA – Universite d’Angers  
  Andreia Guerreiro  , University of Coimbra  
  Jin-Kao Hao  , University of Angers, France  
  Geir Hasle  , SINTEF Digital  
  Mario Inostroza-Ponta  , Departamento de Ingeniería Informática, Universidad de Santiago de Chile  
  Ekhine Irurozki  , Telecom Paris  
  Thomas Jansen  , Aberystwyth University  
  Andrzej Jaszkiewicz  , Poznan University of Technology  
  Marie-Eleonore Kessaci  , Université de Lille, Laboratoire CRIStAL  
  Ahmed Kheiri  , Lancaster University  
  Frederic Lardeux  , LERIA – University of Angers  
  Rhydian Lewis  , Cardiff University  
  Arnaud Liefooghe  , Univ Lille, CNRS, Inria, Centrale Lille, UMR 9189 CRIStAL  
  Manuel López-Ibáñez  , The University of Manchester  
  Jose A. Lozano  , The University of the Basque Country  
  Gabriel Luque  , University of Málaga  
  Krzysztof Michalak  , Wroclaw University of Economics  
  Elizabeth Montero  , Universidad Andres Bello  
  Nysret Musliu  , TU Wien  
  Gabriela Ochoa  , University of Stirling  
  Pietro S Oliveto  , University Of Sheffield  
  Beatrice Ombuki-Berman  , Brock University, Department of Computer Science  
  Luis Paquete  , University of Coimbra  
  Mario Pavone  , University of Catania  
  Paola Pellegrini  , IFSTTAR  
  Francisco Pereira  , Instituto Superior de Engenharia de Coimbra  
  Pedro Pinacho  , Universidad de Concepción  
  Daniel Porumbel  , CEDRIC, CNAM (Conservatoire National des Arts et Métiers), Paris, France  
  Jakob Puchinger  , EM Normandie Business School  
  Abraham Punnen  , Simon Fraser University  
  Günther Raidl  , Vienna University of Technology  
  María Cristina Riff  , Universidad Tecnica Federico Santa Maria  
  Marcus Ritt  , Instituto de Informatica, Universidade Federal do Rio Grande do Sul  
  Eduardo Rodriguez-Tello  , Cinvestav-Tamaulipas  
  Andrea Roli  , University of Bologna  
  Hana Rudová  , Masaryk University  
  Valentino Santucci  , University for Foreigners of Perugia  
  Frédéric Saubion  , LERIA – University of Angers  
  Kevin Sim  , Edinburgh Napier University  
  Jim Smith  , University of the West of England  
  Dirk Sudholt  , University of Passau  
  Sara Tari  , Université du Littoral Côte d’Opale  
  Renato Tinós  , USP  
  Nadarajen Veerapen  , University of Lille  
  Sébastien Verel  , Université du Littoral Côte d’Opale  
  Markus Wagner  , The University of Adelaide  
  Carsten Witt  , Technical University of Denmark  
  Christine Zarges  , Aberystwyth University  
  Fangfang Zhang  , Victoria University of Wellington  

 Search for:        
   
 Important Dates  
 EvoApps Special Session Proposals   
  9 September 2022 AoE   
 Submission deadline   
  16 November 2022 AoE (extended)    
 Notification to authors   
  18 January 2023   
 Camera-ready submission   
  1 February 2023   
 Author’s mandatory registration   
  27 February 2023   
 Early registration deadline   
  1 March 2023   
 Late-Breaking Abstracts submission   
  2 April 2023   
 EvoStar Conference  
   12-14 April 2023  

 news  
 If you are presenting a poster online in Gather, please read the details | here | . 
  Evostar Speakers, please carefully read our | Instructions for Presenters | . 
  The programme is available | here | . 
  The instructions for poster preparation are now available | here | . 
  The registration fees and dates for online and onsite participants are now published at the | registration page | . 
  Welcome to the Evostar 2023 webpage!!! 

 Recent tweets  
 Tweets by EvostarConf    
  
 Social  
 Twitter 
  Facebook 
  LinkedIn 

 Evostar is organized by:  

  Evostar is published by:  

 © evostar 2021  
   
 Banner photo by Ignat Arapov - CC-BY   
   
 -

22. EC-TEL_2 conference:
researchr 
   explore | Tags 
  Journals 
  Conferences 
  Authors 
  Profiles 
  Groups 
  calendar | New Conferences 
  Events 
  Deadlines 
  search  search 
    
   You are not signed in 
  Sign in 
  Sign up 
     External Links  
 DOI 
  DBLP 
   Google 
  Google Scholar 
  MSAS 
   Cite Key  
 ectel-2023 
    Statistics  
 References: 0 
  Cited by: 0 
  Reviews: 0 
  Bibliographies: 0 
       
  PDF  
 [Upload PDF for personal use] 
      
    Researchr  
 Researchr is a web site for finding, collecting, sharing, and reviewing scientific publications, for researchers by researchers.  
 Sign up  for an account to create a profile with publication list, tag and review your related work, and share bibliographies with your co-authors.  

    Responsive and Sustainable Educational Futures - 18th European Conference on Technology Enhanced Learning, EC-TEL 2023, Aveiro, Portugal, September 4-8, 2023, Proceedings  
 Olga Viberg    , Ioana Jivet    , Pedro J. Muñoz Merino    , Maria A. Perifanou    , Tina Papathoma     , editors,  Responsive and Sustainable Educational Futures - 18th European Conference on Technology Enhanced Learning, EC-TEL 2023, Aveiro, Portugal, September 4-8, 2023, Proceedings    .   Volume 14200 of Lecture Notes in Computer Science  , Springer, 2023.    [doi]     
 Conference: ectel2023     
  Abstract 
   Authors 
   BibTeX 
   References 
   Bibliographies 
   Reviews 
   Related 
         
  Abstract  
 Abstract is missing.  
  
  Table of Contents  
 An Agile Concept Inventory Methodology to Detect Large Sets of Student Misconceptions in Programming Language Courses | Andrea Adamoli     . | 1-15 | [doi] 
   A Transformer-Based Approach for the Automatic Generation of Concept-Wise Exercises to Provide Personalized Learning Support to Students | Muhammad Afzaal    , Jalal Nouri    , Aayesha Aayesha     . | 16-31 | [doi] 
   Generative Pre-trained Transformers for Coding Text Data? An Analysis with Classroom Orchestration Data | Ishari Amarasinghe    , Francielle Marques    , Ariel Ortiz-Beltrán    , Davinia Hernández Leo     . | 32-43 | [doi] 
   What Makes Problem-Solving Practice Effective? Comparing Paper and AI Tutoring | Conrad Borchers    , Paulo F. Carvalho    , Meng Xia    , Pinyang Liu    , Kenneth R. Koedinger    , Vincent Aleven     . | 44-59 | [doi] 
   Exploring Indicators for Collaboration Quality and Its Dimensions in Classroom Settings Using Multimodal Learning Analytics | Pankaj Chejara    , Luis Pablo Prieto    , María Jesús Rodríguez-Triana    , Adolfo Ruiz-Calleja    , Reet Kasepalu    , Irene-Angelica Chounta    , Bertrand Schneider     . | 60-74 | [doi] 
   The Promise of Physiological Data in Collaborative Learning: A Systematic Literature Review | Wicaksono Febriantoro    , Andrea Gauthier    , Mutlu Cukurova     . | 75-88 | [doi] 
   A Learning Design to Support Transfer of Training in Continuing Education | Jaanika Hirv-Biene    , Gerti Pishtari    , Marlene Wagner    , Edna Milena Sarmiento-Márquez    , Tobias Ley     . | 89-103 | [doi] 
   Implementing a Desktop VR Tool in a European University: Priorities and Challenges | Kateryna Holubinka    , Corrie C. Urlings    , Slavi Stoyanov    , Rocío del Pilar Sosa-Fernández    , Roi Méndez-Fernández    , Enrique Castelló-Mayo    , Roland Klemke    , Renate de Groot     . | 104-117 | [doi] 
   Student Perception of Social Comparison in Technology Enhanced Learning | Aditya Joshi    , Bente Molenkamp    , Sergey A. Sosnovsky     . | 118-132 | [doi] 
   Relation Between Student Characteristics, Git Usage and Success in Programming Courses | Aleksandar Karakas    , Denis Helic     . | 133-148 | [doi] 
   The "How" Matters: Evaluating Different Video Types for Cybersecurity MOOCs | Daniel Köhler    , Wenzel Pünter    , Christoph Meinel     . | 149-163 | [doi] 
   Role of Multimodal Learning Systems in Technology-Enhanced Learning (TEL): A Scoping Review | Yoon Lee    , Bibeg Limbu    , Zoltán Rusák    , Marcus Specht     . | 164-182 | [doi] 
   Broader and Deeper: A Multi-Features with Latent Relations BERT Knowledge Tracing Model | Zhaoxing Li    , Mark Jacobsen    , Lei Shi 0003    , Yunzhan Zhou    , Jindi Wang     . | 183-197 | [doi] 
   Why You Should Give Your Students Automatic Process Feedback on Their Collaboration: Evidence from a Randomized Experiment | Lukas Menzel    , Sebastian Gombert    , Joshua Weidlich    , Aron Fink    , Andreas Frey    , Hendrik Drachsler     . | 198-212 | [doi] 
   Interactive Web-Based Learning Materials Vs. Tutorial Chatbot: Differences in User Experience | Behzad Mirzababaei    , Katharina Maitz    , Angela Fessl    , Viktoria Pammer-Schindler     . | 213-228 | [doi] 
   Assessing the Quality of Multiple-Choice Questions Using GPT-4 and Rule-Based Methods | Steven Moore    , Huy Anh Nguyen    , Tianying Chen    , John C. Stamper     . | 229-245 | [doi] 
   Early Prediction of Learners At-Risk of Failure in Online Professional Training Using a Weighted Vote | Mohamed Mouaici     . | 246-262 | [doi] 
   How to Characterize and Analyze the Computational Thinking Skills of a Learning Game? | Mathieu Muratet     . | 263-277 | [doi] 
   Evaluating ChatGPT's Decimal Skills and Feedback Generation in a Digital Learning Game | Huy Anh Nguyen    , Hayden Stec    , Xinying Hou    , Sarah Di    , Bruce M. McLaren     . | 278-293 | [doi] 
   Designing a Revision System: An Exploratory Qualitative Study to Identify the Needs of French Teachers and Students | Denis Ollivier    , Franck Silvestre    , Jean-Baptiste Raclet    , Emmanuel Lescure    , Julien Broisin     . | 294-307 | [doi] 
   Evaluation of a Hybrid AI-Human Recommender for CS1 Instructors in a Real Educational Scenario | Filipe Dwan Pereira    , Elaine H. T. Oliveira    , Luiz A. L. Rodrigues    , Luciano de Souza Cabral    , David B. F. Oliveira    , Leandro S. G. Carvalho    , Dragan Gasevic    , Alexandra I. Cristea    , Diego Dermeval    , Rafael Ferreira Mello     . | 308-323 | [doi] 
   Evaluating the Impact and Usability of an AI-Driven Feedback System for Learning Design | Gerti Pishtari    , Edna Milena Sarmiento-Márquez    , María Jesús Rodríguez-Triana    , Marlene Wagner    , Tobias Ley     . | 324-338 | [doi] 
   Single or Multi-page Learning Analytics Dashboards? Relationships Between Teachers' Cognitive Load and Visualisation Literacy | Stanislav Pozdniakov    , Roberto Martínez Maldonado    , Yi-Shan Tsai    , Namrata Srivastava    , Yuchen Liu    , Dragan Gasevic     . | 339-355 | [doi] 
   Designing Technology for Doctoral Persistence and Well-Being: Findings from a Two-Country Value-Sensitive Inquiry into Student Progress | Luis Pablo Prieto    , María Jesús Rodríguez-Triana    , Yannis A. Dimitriadis    , Gerti Pishtari    , Paula Odriozola-González     . | 356-370 | [doi] 
   A Critical Consideration of the Ethical Implications in Learning Analytics as Data Ecology | Paul Prinsloo    , Mohammad Khalil    , Sharon Slade     . | 371-382 | [doi] 
   Learning to Give Useful Hints: Assistance Action Evaluation and Policy Improvements | Robin Schmucker    , Nimish Pachapurkar    , Bala Shanmugam    , Miral Shah    , Tom M. Mitchell     . | 383-398 | [doi] 
   Understanding Peer Feedback Contributions Using Natural Language Processing | Mayara Simões de Oliveira Castro    , Rafael Ferreira Mello    , Giuseppe Fiorentino    , Olga Viberg    , Daniel Spikol    , Martine Baars    , Dragan Gasevic     . | 399-414 | [doi] 
   AI and Narrative Scripts to Educate Adolescents About Social Media Algorithms: Insights About AI Overdependence, Trust and Awareness | Emily Theophilou    , Francesco Lomonaco    , Gregor Donabauer    , Dimitri Ognibene    , J. Roberto Sánchez Reina    , Davinia Hernández Leo     . | 415-429 | [doi] 
   Analyzing Learners' Perception of Indicators in Student-Facing Analytics: A Card Sorting Approach | Esteban Villalobos    , Isabel Hilliger    , Mar Pérez-Sanagustín    , Carlos González    , Sergio Celis    , Julien Broisin     . | 430-445 | [doi] 
   Here or There? Differences of On-Site and Remote Students' Perceptions of Usability, Social Presence, Engagement, and Learning in Synchronous Hybrid Classrooms | Marlene Wagner    , Gerti Pishtari    , Tobias Ley     . | 446-458 | [doi] 
   Exploring the Potential of Immersive Virtual Environments for Learning American Sign Language | Jindi Wang    , Ioannis P. Ivrissimtzis    , Zhaoxing Li    , Yunzhan Zhou    , Lei Shi 0003     . | 459-474 | [doi] 
   Towards Improving the Reliability and Transparency of ChatGPT for Educational Question Answering | Yongchao Wu    , Aron Henriksson    , Martin Duneld    , Jalal Nouri     . | 475-488 | [doi] 
   How Do Teachers Search for Learning Resources? A Mixed Method Field Study | Elad Yacobson    , Giora Alexandron     . | 489-503 | [doi] 
   Automated Detection of Students' Gaze Interactions in Collaborative Learning Videos: A Novel Approach | Qi Zhou    , Amartya Bhattacharya    , Wannapon Suraworachet    , Hajime Nagahara    , Mutlu Cukurova     . | 504-517 | [doi] 
   Pedagogically-Informed Implementation of Reinforcement Learning on Knowledge Graphs for Context-Aware Learning Recommendations | Hasan Abu Rasheed    , Christian Weber 0003    , Mareike Dornhöfer    , Madjid Fathi     . | 518-523 | [doi] 
   Teacher Professional Development to Help Students Manage Stress: Barriers and Enablers | Laia Albó    , Marc Beardsley     . | 524-530 | [doi] 
   Lateral Reading Against Misinformation: The Cognitive Processing Level Mediates the Intervention Effect on the News Credibility Assessment Performance | Benedikt Artmann    , Christian Scheibenzuber    , Marvin Fendt    , Nicolae Nistor     . | 531-535 | [doi] 
   Exploring Students' Problem-Solving Challenges in Self-regulated Learning Through Training Video Prompts | Guy Cohen    , Anat Cohen     . | 536-541 | [doi] 
   Facilitating and Hindering Aspects of Technology-Enriched Challenge-Based Learning in ECIU University, a European University International Network Initiative | Asta Daunoriene    , Dorothea Ellinger     . | 542-547 | [doi] 
   Digitally Supported Learning Processes in Schools: Teachers' Implicit Theories on Learning Activities with Technology | Nadine Esterl    , Sonja Berger    , Nicolae Nistor     . | 548-553 | [doi] 
   Transferring Digital Competences for Teaching from Theory into Practice Through Reflection | Angela Fessl    , Monica Divitini    , Katharina Maitz     . | 554-559 | [doi] 
   "Feedback is not Embarrassing but Helpful :)" - An Exploratory Study on the Applicability of Constructive Feedback Checklists for Lecturers in Online Learning Settings | Robin Gleeson    , Larissa Bartok    , Carla Alexandra Souta Barreiros     . | 560-565 | [doi] 
   Enhancing Learning Mobility with a Community-Based Micro-Credential e-Portfolio Platform Service for Higher Education | Rika Ikeda    , Andrey Ferriyan    , Keiko Okawa    , Achmad Husni Thamrin     . | 566-572 | [doi] 
   On Extended Reality Objective Performance Metrics for Neurosurgical Training | Alessandro Iop    , Olga Viberg    , Adrian Elmi Terander    , Erik Edström    , Mario Romero     . | 573-579 | [doi] 
   Multimodal Analytics for Collaborative Teacher Reflection of Human-AI Hybrid Teaching: Design Opportunities and Constraints | Shamya Karumbaiah    , Pinyang Liu    , Alisa Maksimova    , Lea De Vylder    , Nikol Rummel    , Vincent Aleven     . | 580-585 | [doi] 
   Computational Analysis of Audio Recordings of Piano Performance for Automatic Evaluation | Norihiro Kato    , Eita Nakamura    , Kyoko Mine    , Orie Doeda    , Masanao Yamada     . | 586-592 | [doi] 
   Barrier-Free Dissemination of Medical Knowledge: Challenges and Solutions for Individuals with Visual Impairments | Sarah Langer    , Andrea Balz    , Iris Nemec     . | 593-598 | [doi] 
   Process Mining on Students' Web Learning Traces: A Case Study with an Ethnographic Analysis | Roberto Nai    , Emilio Sulis    , Elisa Marengo    , Manuela Vinai    , Sara Capecchi     . | 599-604 | [doi] 
   "TRINE 4D Pedagogical Model": Designing Teaching Scenarios for Using Telepresence Robots in Education | Maria A. Perifanou     . | 605-610 | [doi] 
   Traceability by Design: Design of an Interactive System to Improve the Automatic Generation of Git Traces During a Learning Activity | Mika Pons    , Jean-Michel Bruel    , Jean-Baptiste Raclet    , Franck Silvestre     . | 611-617 | [doi] 
   Towards Designing and Evaluating an Adaptable Assistance System for Technology-Enhanced Vocational Education | Antje Proske    , Hermann Körndle    , Kristin Drexler    , Julia Kirsten    , Klara Schröder    , Sebastian Kucharski    , Tommy Kubica    , Iris Braun     . | 618-623 | [doi] 
   Learning with the School Library: Mapping Technology-Enhanced Learning Underpinnings | Eduarda Ribeiro Mota    , Teresa Margarida Loureiro Cardoso    , Ana Carolina Ferreira da Cruz    , Filomena Pestana     . | 624-629 | [doi] 
   Learning Path Recommendation from an Inferred Learning Space | Madjid Sadallah    , Grégory Smits     . | 630-635 | [doi] 
   Exploring Barriers for the Acceptance of Smart Learning Environment Automated Support | Sergio Serrano-Iglesias    , Eduardo Gómez-Sánchez    , Miguel L. Bote-Lorenzo    , Víctor Alonso-Prieto    , Vanesa Gallego-Lema     . | 636-641 | [doi] 
   FAMS: A Formative Assessment Management System for Generating Individualised Feedback | Raja Khurram Shahzad    , Erik Ström    , Peter Mozelius     . | 642-647 | [doi] 
   The Added Value of Simulations in 3D Virtual Worlds for Professional Training of First Aid Medical Teams | Tamar Shamir-Inbal    , Talia Or-Griff    , Ina Blau     . | 648-655 | [doi] 
   Support Mechanisms and Value Creation in Multi-Stakeholder Networks for Digital Innovation in Education: A Cross-Country Study | Pirgit Sillaots    , Raquel Coelho    , Kairit Tammets    , Mutlu Cukurova    , Linda Helene Sillat    , Minna Lakkala    , Heli Aru-Chabilan    , Kirke Kasari    , Madona Mikeladze    , Tatia Nakashidze-Makharadze    , Valentina Dagiene    , Vaida Masiulionyte-Dagiene    , Cecilie Hansen     . | 656-661 | [doi] 
   Towards Live Coding and Instant Feedback on Common Issues in Large Lectures | Sven Strickroth     . | 662-667 | [doi] 
   Supporting Remote Students Through Utilizing Web-Based Exercise-Templates and a Mobile Learning Chatbot for Creating and Interacting with Learning Materials | Hasan Abu Rasheed    , Yannis Efthymiou    , Madjid Fathi    , Parvin Ghadamighalandari    , Julián López Medina    , Covadonga Ordoñez García    , Gregory Tsardanidis    , Johannes Zenkert    , Giannis Zgeras     . | 668-673 | [doi] 
   An Evaluation System to Trace the Usage of the OER Conversion Tool (convOERter) | Lubna Ali    , Sven Judel    , Deekshith Shetty    , Ulrik Schroeder     . | 674-679 | [doi] 
   Technology Enhanced Training in Medical Multi-User Scenarios | Andrea Balz    , Mathias Forjan     . | 680-685 | [doi] 
   A Teacher Professional Development Tool for Creating and Sharing Research Lessons on Evidence-Based Teaching Strategies | Marc Beardsley    , Laia Albó    , Davinia Hernández Leo     . | 686-691 | [doi] 
   CERSEI: Cognitive Effort Based Recommender System for Enhancing Inclusiveness | Geoffray Bonnin    , Vaclav Bayer    , Miriam Fernández    , Christothea Herodotou    , Martin Hlosta    , Paul Mulholland     . | 692-697 | [doi] 
   A Student-Centered Learning Analytics Dashboard Towards Course Goal Achievement in STEM Education | Sebastian Buvari    , Olga Viberg    , Alessandro Iop    , Mario Romero     . | 698-704 | [doi] 
   Augmented Intelligence in Tutoring Systems: A Case Study in Real-Time Pose Tracking to Enhance the Self-learning of Fitness Exercises | Nghia Duong-Trung    , Hitesh Kotte    , Milos Kravcík     . | 705-710 | [doi] 
   The HCA Framework - A Storification Model to Support and Facilitate Gamification Design | Laura Ferreira    , Carlos Santos 0004    , Luís Pedro    , Ana Raquel Carvalho     . | 711-717 | [doi] 
   Evaluating Usability and User Feedback in an Immersive Virtual Reality Environment for Computer Science Education | Birte Heinemann    , Ulrik Schroeder     . | 718-724 | [doi] 
   Responsive Narrativity in Gamified Situational Judgment Tests: A Dynamic System for Enhanced Soft Skills Development | Jérôme Hernandez    , Mathieu Muratet    , Thibault Carron     . | 725-730 | [doi] 
   LA-ReflecT: A Platform Facilitating Micro-learning and Its Multimodal Learning Analytics | Rwitajit Majumdar    , Prajish Prasad    , Kapil Kadam    , Kinnari Gatare    , Jayakrishnan Madathil Warriem     . | 731-735 | [doi] 
   Statoodle: A Learning Analytics Tool to Analyze Moodle Students' Actions and Prevent Cheating | Pedro Manuel Moreno-Marcos    , Jorge Barredo    , Pedro J. Muñoz Merino    , Carlos Delgado Kloos     . | 736-741 | [doi] 
   An Enrollment Dashboard to Reinforce Decision-Making for Students and Advisors | Noe Rivas    , Julià Minguillón    , Jonathan Chacón-Perez     . | 742-747 | [doi] 
   A Moodle Plugin for Rich xAPI Data Logging | Daniela Rotelli    , Yves Noël    , Sébastien Lallé    , Vanda Luengo    , David Pesce     . | 748-754 | [doi] 
   PEER: Empowering Writing with Large Language Models | Kathrin Seßler    , Tao Xiang    , Lukas Bogenrieder    , Enkelejda Kasneci     . | 755-761 | [doi] 
   Using Accessible Motion Capture in Educational Games for Sign language Learning | Joshua Leon Tobias    , Daniele Di Mitri     . | 762-767 | [doi] 

 About 
  Contact 
  Credits 
  Help 
  Web Service API 
  Blog 
  FAQ 
  Feedback 
    
 runs on Web  DSL

23. EvoCOP_1 conference:
Please enable cookies.   
 Sorry, you have been blocked  
 You are unable to access  research.com  

 Why have I been blocked?  
 This website is using a security service to protect itself from online attacks. The action you just performed triggered the security solution. There are several actions that could trigger this block including submitting a certain word or phrase, a SQL command or malformed data.  
   
 What can I do to resolve this?  
 You can email the site owner to let them know you were blocked. Please include what you were doing when this page came up and the Cloudflare Ray ID found at the bottom of this page.  

 Cloudflare Ray ID: 8ea88fdebfc50458   •  Your IP: Click to reveal  183.80.111.110  •   Performance & security by  Cloudflare

24. EuroMPI_0 conference:
Skip links  
 Skip to primary navigation 
  Skip to content 
  Skip to footer 
   
     Home 
  Program 
  Call for Papers 
  Call for Posters 
  Organizers 
  Venue 
  Register 
  Archive 
  Toggle menu    

 Welcome to EuroMPI'23  
 11-13 September 2023, Bristol, UK  
 In 2023, EuroMPI Conference will take place in Bristol on September 11-13, 2023. The conference will be co-located with the 19th International Workshop on OpenMP (IWOMP 2023)  that will be held on September 13-15,2023. The MPI Forum will also meet following the EuroMPI Conference.  
 The EuroMPI conference is the preeminent meeting for users, developers and researchers to interact and discuss new developments and applications of the Message Passing Interface (MPI). This includes new proposed concepts and extensions to the MPI standard, libraries and languages built on top of MPI, interfaces to other standards in parallel programming, applications and optimizations to new architectures and networks, novel algorithms, and tools, with particular focus on quality, portability, performance, and scalability. The annual meeting has a long, rich tradition, and has been held since 1994.  
 Through the presentation of contributed papers, posters and invited talks, the conference presents a complete overview of MPI, its current usage in the parallel programming landscape, and its future directions. The EuroMPI conference provides ample opportunities for attendees to interact and share ideas and experiences to contribute to the improvement and furthering of message-passing and related parallel programming paradigms.  
   
  Important Dates    
 Abstract | EXTENDED | deadline: | 8th May 2023 AoE 
  Submission | FINAL EXTENDED | deadline: | 20th May 2023 AoE 
  Paper notification: | 19th 22nd | 26th June 2023 AoE 
  Short papers and posters submission | FINAL EXTENDED | deadline: | 1st  7th July 2023 AoE 
  Short papers and posters notification: 10th July 2023 AoE 

 Register  
 Link to registration page    

 Contact  
 For queries relating to the conference, please contact julien.jaeger at cea.fr or hugo.taboada at cea.fr  
 For queries concerning research papers (submission, deadlines, publishing, etc.) please contact: emmanuelle.saillard at inria.fr or guillaume.mercier at inria.fr  
   
 Sponsors  
 Thanks to our sponsors for their contribution to the success of the event.  

 Icons made by Freepik  from www.flaticon.com

25. EuroMPI_1 conference:
Please enable cookies.   
 Sorry, you have been blocked  
 You are unable to access  anl.gov  

 Why have I been blocked?  
 This website is using a security service to protect itself from online attacks. The action you just performed triggered the security solution. There are several actions that could trigger this block including submitting a certain word or phrase, a SQL command or malformed data.  
   
 What can I do to resolve this?  
 You can email the site owner to let them know you were blocked. Please include what you were doing when this page came up and the Cloudflare Ray ID found at the bottom of this page.  

 Cloudflare Ray ID: 8ea88ffb7959682f   •  Your IP: Click to reveal  14.237.32.203  •   Performance & security by  Cloudflare

26. EC-TEL_3 conference:
Toggle navigation         
   
 Load unfinished survey 

 0%   

   default       Caution: JavaScript execution is disabled in your browser or for this website. You may not be able to answer all questions in this survey. Please, verify your browser parameters.   
 ECTEL 2023  
   
 Welcome to Eighteenth European Conference on Technology Enhanced Learning 2023 registration!  
 Please answer the following questions (* mandatory questions)  

  To continue please first accept our survey data policy.  
  Show policy      
   
 Survey data policy  
   
 Privacy Policy        
 Information of data processing       
 Personal data will be collected and processed in the strictest confidentiality and under the legislation in force, the General Data Protection Regulation (GDPR), 2016/679 of the 27th of April 2016. ECTEL2023 organizers act as the controller regarding the processing of personal data. Identifying information such as name and email will be collected and processed for participation management and provision of additional event services (e.g., sending participation certificates). Data will not be shared with third parties under any circumstances. It will be stored in a secure database assessed only by authorized personnel. Under the GDPR, you have the rights of access, erasure, rectification, restriction of processing, portability, objection, and not to be subject to automated decision-making. Any questions can be addressed to xxx @ua.pt  . Advice on data protection matters can also be obtained from the Data Protection Officer (DPO) of the University of Aveiro (epd@ua.pt). By registering in ECTEL2023, you acknowledge having read and understood this Privacy Policy and accept how we collect and use your personal data.  
 Throughout ECTEL2023 the organizer and authorized media representatives may take photographs as well as audio and video recordings of participants and their works. These materials may be published, reproduced and exhibited in print/online media to report on the ECTEL2023 or announce future ECTEL events. Audio recordings will be limited to public speaking contributions. With your registration you agree to the production and use of these materials as detailed above.  
   
 Accept  Close    

 Next    
   
 Load unfinished survey    

 ×    

 Close

27. EuroMPI_2 conference:
JavaScript must be enabled to use the system

28. EuroSPI_0 conference:
Home Welcome 
  About EuroAsia SPI² | EuroSPI² Conferences 
  EuroAsiaSPI² App 
  Programme Commitee 
  Publishers 
  Ambassadors 
  CSR 
  Programme | Conference Programme 
  Key Notes 
  Social Events 
  Associated Tech Days 
  Workshop Communities 
  Registration And Prices 
  Submission 
  Information Center | Location 
  Accomodation 
  Travel 
  Contact 
  Download Center 
  Administration | Reviewer Login 
  PC Chair Login 
  Registration Details 
  Coordinator Page 
  Trainer Login 
    
 Home  About  — EuroSPI² Conferences  — EuroAsiaSPI² App  — Programme Commitee  — Publishers  — Ambassadors  — CSR  Programme  — Conference Programme  — Key Notes  — Social Events  — Associated Tech Days  Workshop  Registration  Submission  Download  Administration  — Reviewer Login  — PC Chair Login  — Registration Details  — Coordinator Page  — Trainer Login     

 SPI Manifesto 
  Media 
  Program Committee 
  Certification 
  Vision 

 32nd EuroSPI Conference  
 EuroSPI² 2025 (10 - 12 September 2025) will have 10 international thematic workshop streams supported by thematic topic communities and the ICSSP (International System and Software Process Association) conference will take place as a co-located partner event. Each thematic stream integrates both, research sessions and industry / applied science sessions. The thematic streams will be a mix of pitch talks provoking discussions, full presentations and panel discussions which will focus on specific questions of interest. 
  Thematic Workshop Sessions  
 EuroSPI² 2025, (10 - 12 September 2025), hosted by Riga Technical University, Riga, Latvia, will have international key notes as plenary sessions and thematic workshops integrating research and industry experience. Researchers present case studies and new research which can in future be considered by industry and in the workshops. Industry presents best practices from industry and discusses the approaches and methods with experts. The goal is to fertilize the cooperation between research and industry. Additionally we involve strategic EU projects to empower new directions and co-operations. 
  Social Events  
 We believe that networking and creating research and business relationships is important to create a sustainable community for improvement and innovation. While the conference offers ideas, presentations, discussions, knowledge during the day, the social talks after the conference are equally important to establish trust and partnerships. We also believe that Europe integrates many regions with different cultures and to build European trust based partnerships we need to learn about the culture of regions. So please join the networking space and social events. 
  Key Notes  
 Key notes are plenary sessions by key experts from industry or research. Key notes (if accepted) are used to create key statements in the EuroSPI Youtube channel. We have every year 5 key notes from leading industry and research. Please visit our key notes page and the EuroSPI Youtube channel. We also invite key industry at the EuroSPI technology day, please visit our technology day page and download the free available presentations. 
  Workshop Communities  
 The thematic workshops allow leading industry and research to attend EuroAsiaSPI not only for a conference but also for a dedicated topic based workshop/training event. These workshop are dealing with hot topics and contain key papers and interactive sessions with open discussions. Participants work with the speakers to elaborate key statements to follow up in the next years workshops. The thematic workshops will be published as separate chapters in the annual SPRINGER book in the CCIS series. 
  EuroSPI as a Hybrid Event  
 We will continue to use the advanced technology equipment and organise an onsite and online hybrid event using integrated sound, cameras and video streaming combined with technical and content moderator roles in each workshop. Since EuroSPI² 2020 we have organised this hybrid event very successfully and feedback from attendees encourage us to continue with this new approach. 
  Social Events  
 Europe has many different regional cultures and customs, and still we need to work together in the EU frameworks. Already at the start of EuroAsiaSPI² in 1994 it was decided to place the conference in a different region every year and that the local host organises social events that help us to learn about the hosting culture, the traditions, history and the local food. This has a large influence on what social events EuroAsiaSPI² offers.This year we will explore the famous Bamberger House at the entrance of the Luitpold park with classical music by price winning musicians, and a traditional Bavarian beer festival in Rosenheim. 
  EuroSPI² Target Groups  
 Join our Improvement Community to which more than 28 Nations have been contributed since 1994.  Functional safety and cybersecurity managers and engineers, quality managers, ASPICE & IATF 16949 & ISO 26262 assessors, ISO 21434 and cybersecurity assessors and experts, trainers and teachers, project managers, experienced mechatronic & system & SW engineers, architects, researchers, consultants, innovation & business & improvement managers, process engineers, test managers, gamification designers, automotive & medical device & aerospace & IT industry, .. 
  EuroSPI Publishers  
 SPRINGER publishes a book series with EuroSPI since 2003 and there were more than 1,2 million chapter downloads so far. The latest SPRINGER online-book and seperate chapter downloads are available now! .WILEY publishes an annual EuroSPI volume with 10 selected experience papers in the Wiley Journal of SW Evolution and Process Series. For the 20th anniversary, in 2013, Wiley has created an entry page for EuroSPI as a library. Cooperating Journals publish extended versions of papers. . 
  EuroSPI Award by SPRINGER Nature  
 SPRINGER  publishes a book series with EuroSPI since 2003 and there were more than 900000 (neraly a million) chapter downloads so far. The latest SPRINGER online-book and seperate chapter downloads are available now! .SPRINGER writes for the EuroSPI 2018 book: Your book is helping solve the world’s greatest challenges. EuroSPI 2018,Bilbao, Spain, September 5-7, 2018, Proceedings is among the top used publications on SpringerLink that concern one or more of the UnitedNations Sustainable Development Goals (SDGs)  . 
  ›   ‹     
 1 
  2 
  3 
  4 
  5 
  6 
  7 
  8 
  9 
  10 

 Newsflash    
 The EuroSPI 2025 Paper Submission Deadline:  11 April 2025 
  Early  Registration till 1st August 2025 
  Late  Registration from 9th September 2025 
  Conference  TechDay 8th September and Conference 10 - 12 September 2025, Riga, Latvia, Onsite and Online Hybrid Event! 
  ›   ‹     

 Conference Program  
 10 international thematic streams in 3 days addressing hot topics 
  Research and Industry combined in each thematic stream 
  international key notes 
  50+ pitches or presentations from leading industry and leading research institutes 
  Social Events in Munich, Germany 
  Read More   

 Registration  
 You can participate online and onsite, online participation has a reduced fee. 
  You may book one day, two days or all 3 days and select the preferred workshop streams of the day. 
  The registration includes proceedings, coffee breaks, lunch, and social event. 
  Pay with Mastercard, VISA and Paypal. 
  Don't miss early registration! 
  Go to Registration   

 Paper Submission  
 Research papers  and Thematic Industry/Applied Science  papers shall be 8-12 pages, and address the topics in the call. Extended papers will be invited for submission to cooperating journals. WILEY Journal of Software: Evolution and Process (Best Practices), IET Software (Gamification), JUCS (Cybersecurity).  
 Read More   

 Location  
 Hochschule München ( https://www.hm.edu/  )  
  Lotstraße 64  
  (Room Plan will be announced)   
  80335 München  
  Germany  

 Read More   

 Call for Research and Thematic Papers (Workshop Papers)  

 EuroSPI² 2024 (4 - 6 September 2024) will have 10 international thematic workshop streams supported by thematic topic communities. Each thematic stream integrates both, research sessions and industry / applied science sessions. The thematic streams will be a mix of pitch talks provoking discussions, full presentations and panel discussions which will focus on specific questions of interest. This year you can also submit papers to the partnering co-event of ICSSP  .  
 For the CALL FOR PAPERS  click here...   
 For the PAPER SUBMISSION  page click here...   
 Remember the Submission DEADLINE: 22 March 2024!   

 EuroSPI Publishers  

 SPRINGER  publishes a book series with EuroSPI since 2003 and there were more than 676000 downloads so far. The latest SPRINGER online-book  is available here!  
  WILEY  publishes an annual EuroSPI volume with 10 selected experience papers in the Wiley Journal of SW Evolution and Process Series. For the 20th anniversary, in 2013, Wiley has created an entry page for EuroSPI as a library.   
 Extended papers can be submitted to cooperating journals, with a separate call at the web site.  
 read more...   

 EUROSPI Social Media & Networking  

 EuroSPI has a tradition of social events which introduce attendees to the history, culture and food of the region hosting the event. Impressions, videos and photos of the last years can be viewed on our website and on YouTube.  
 Click here to view last years photos.    
 YouTube: https://www.youtube.com/channel/UCIQfOm8-ycv8gY2BuuhKDMQ/    
 Instagram: https://www.instagram.com/eurospi/    

  Top Reasons for Attending EuroPI² 2024  

 1  
 Published Papers   
 If accepted, your paper will be published in the Springer CCIS Series  (research papers and industry / applied science papers). Selected extended papers will be published in the Wiley Journal of Software: Evolution and Process Series  (selected experience papers). Further extended papers will be invited to cooperating journals  .  
  
 2  
 Highly Recognized Key Notes   
 Hot topics like future quality initiatives and global development strategies are discussed with highly recognized key notes.  
  
 3  
 Paper Awards   
 Together with the LERO (Irish SW research center) a Prof. Rory O Connor best paper award is given annually, with a price of 500 Euro. Together with the ASQ (American Socienty of Quality) a best paper award is given.  
  
 4  
 Networking Opportunities   
 EuroSPI² attracts both the research and the industry community and offers a networking opportunity where researcher meet industry and vice versa. This facilitates the implementation of new ideas.  
  
 5  
 Present, Discuss and Publish   
 EuroSPI² opens you a chance to present, discuss and publish new approaches for process improvement and innovation.  
  
 6  
 Business & Research Partners Gathering   
 You can meet business and research partners in an open social space at the EuroSPI² social event.  
  
 7  
 INTACS and VDA Recognized Event   
 INTACS and the German Automotive Association (VDA) recognize conference participation for the collection of experience evidences for ISO 15504 Assessors.  

 Join us via Youtube    Join us via LinkedIn      

 Publishers  

 Topics  
   
 Emerging New Approaches to SW Engineering -   
 E-Mobility & Digitilisation -   
 SPI Manifesto - Functional Safety - Cybersecurity -   
 Agile & Lean - Standards & Assessments -   
 Team Skills and Diversity - Innovation -   
 Virtual & Augmented Reality - Medical Big Data, IT Systems, and Standards -   
 New Ideas and Proposals   

 Location  

 Hochschule München, München, Germany  

 Contact Us!  
   
 EuroSPI Certificates & Services GesmbH   
  EuroAsiaSPI² 2024 Registration Office  
  Email: rmess@iscn.com    
  Karl-Morre-Straße 86/6  
  8020 Graz  
  AUSTRIA  
 Local contact information     

 © 2024 EuroSPI GmbH

29. EuroMPI_3 conference:
Indico style 
  Indico style - inline minutes 
  Indico style - numbered 
  Indico style - numbered + minutes 
  Indico Weeks View 
      
 Choose Timezone   

  Use the event/category timezone    
  Specify a timezone    
   
 Africa/Abidjan  Africa/Accra  Africa/Addis_Ababa  Africa/Algiers  Africa/Asmara  Africa/Bamako  Africa/Bangui  Africa/Banjul  Africa/Bissau  Africa/Blantyre  Africa/Brazzaville  Africa/Bujumbura  Africa/Cairo  Africa/Casablanca  Africa/Ceuta  Africa/Conakry  Africa/Dakar  Africa/Dar_es_Salaam  Africa/Djibouti  Africa/Douala  Africa/El_Aaiun  Africa/Freetown  Africa/Gaborone  Africa/Harare  Africa/Johannesburg  Africa/Juba  Africa/Kampala  Africa/Khartoum  Africa/Kigali  Africa/Kinshasa  Africa/Lagos  Africa/Libreville  Africa/Lome  Africa/Luanda  Africa/Lubumbashi  Africa/Lusaka  Africa/Malabo  Africa/Maputo  Africa/Maseru  Africa/Mbabane  Africa/Mogadishu  Africa/Monrovia  Africa/Nairobi  Africa/Ndjamena  Africa/Niamey  Africa/Nouakchott  Africa/Ouagadougou  Africa/Porto-Novo  Africa/Sao_Tome  Africa/Tripoli  Africa/Tunis  Africa/Windhoek  America/Adak  America/Anchorage  America/Anguilla  America/Antigua  America/Araguaina  America/Argentina/Buenos_Aires  America/Argentina/Catamarca  America/Argentina/Cordoba  America/Argentina/Jujuy  America/Argentina/La_Rioja  America/Argentina/Mendoza  America/Argentina/Rio_Gallegos  America/Argentina/Salta  America/Argentina/San_Juan  America/Argentina/San_Luis  America/Argentina/Tucuman  America/Argentina/Ushuaia  America/Aruba  America/Asuncion  America/Atikokan  America/Bahia  America/Bahia_Banderas  America/Barbados  America/Belem  America/Belize  America/Blanc-Sablon  America/Boa_Vista  America/Bogota  America/Boise  America/Cambridge_Bay  America/Campo_Grande  America/Cancun  America/Caracas  America/Cayenne  America/Cayman  America/Chicago  America/Chihuahua  America/Ciudad_Juarez  America/Costa_Rica  America/Creston  America/Cuiaba  America/Curacao  America/Danmarkshavn  America/Dawson  America/Dawson_Creek  America/Denver  America/Detroit  America/Dominica  America/Edmonton  America/Eirunepe  America/El_Salvador  America/Fort_Nelson  America/Fortaleza  America/Glace_Bay  America/Goose_Bay  America/Grand_Turk  America/Grenada  America/Guadeloupe  America/Guatemala  America/Guayaquil  America/Guyana  America/Halifax  America/Havana  America/Hermosillo  America/Indiana/Indianapolis  America/Indiana/Knox  America/Indiana/Marengo  America/Indiana/Petersburg  America/Indiana/Tell_City  America/Indiana/Vevay  America/Indiana/Vincennes  America/Indiana/Winamac  America/Inuvik  America/Iqaluit  America/Jamaica  America/Juneau  America/Kentucky/Louisville  America/Kentucky/Monticello  America/Kralendijk  America/La_Paz  America/Lima  America/Los_Angeles  America/Lower_Princes  America/Maceio  America/Managua  America/Manaus  America/Marigot  America/Martinique  America/Matamoros  America/Mazatlan  America/Menominee  America/Merida  America/Metlakatla  America/Mexico_City  America/Miquelon  America/Moncton  America/Monterrey  America/Montevideo  America/Montserrat  America/Nassau  America/New_York  America/Nome  America/Noronha  America/North_Dakota/Beulah  America/North_Dakota/Center  America/North_Dakota/New_Salem  America/Nuuk  America/Ojinaga  America/Panama  America/Paramaribo  America/Phoenix  America/Port-au-Prince  America/Port_of_Spain  America/Porto_Velho  America/Puerto_Rico  America/Punta_Arenas  America/Rankin_Inlet  America/Recife  America/Regina  America/Resolute  America/Rio_Branco  America/Santarem  America/Santiago  America/Santo_Domingo  America/Sao_Paulo  America/Scoresbysund  America/Sitka  America/St_Barthelemy  America/St_Johns  America/St_Kitts  America/St_Lucia  America/St_Thomas  America/St_Vincent  America/Swift_Current  America/Tegucigalpa  America/Thule  America/Tijuana  America/Toronto  America/Tortola  America/Vancouver  America/Whitehorse  America/Winnipeg  America/Yakutat  Antarctica/Casey  Antarctica/Davis  Antarctica/DumontDUrville  Antarctica/Macquarie  Antarctica/Mawson  Antarctica/McMurdo  Antarctica/Palmer  Antarctica/Rothera  Antarctica/Syowa  Antarctica/Troll  Antarctica/Vostok  Arctic/Longyearbyen  Asia/Aden  Asia/Almaty  Asia/Amman  Asia/Anadyr  Asia/Aqtau  Asia/Aqtobe  Asia/Ashgabat  Asia/Atyrau  Asia/Baghdad  Asia/Bahrain  Asia/Baku  Asia/Bangkok  Asia/Barnaul  Asia/Beirut  Asia/Bishkek  Asia/Brunei  Asia/Chita  Asia/Choibalsan  Asia/Colombo  Asia/Damascus  Asia/Dhaka  Asia/Dili  Asia/Dubai  Asia/Dushanbe  Asia/Famagusta  Asia/Gaza  Asia/Hebron  Asia/Ho_Chi_Minh  Asia/Hong_Kong  Asia/Hovd  Asia/Irkutsk  Asia/Jakarta  Asia/Jayapura  Asia/Jerusalem  Asia/Kabul  Asia/Kamchatka  Asia/Karachi  Asia/Kathmandu  Asia/Khandyga  Asia/Kolkata  Asia/Krasnoyarsk  Asia/Kuala_Lumpur  Asia/Kuching  Asia/Kuwait  Asia/Macau  Asia/Magadan  Asia/Makassar  Asia/Manila  Asia/Muscat  Asia/Nicosia  Asia/Novokuznetsk  Asia/Novosibirsk  Asia/Omsk  Asia/Oral  Asia/Phnom_Penh  Asia/Pontianak  Asia/Pyongyang  Asia/Qatar  Asia/Qostanay  Asia/Qyzylorda  Asia/Riyadh  Asia/Sakhalin  Asia/Samarkand  Asia/Seoul  Asia/Shanghai  Asia/Singapore  Asia/Srednekolymsk  Asia/Taipei  Asia/Tashkent  Asia/Tbilisi  Asia/Tehran  Asia/Thimphu  Asia/Tokyo  Asia/Tomsk  Asia/Ulaanbaatar  Asia/Urumqi  Asia/Ust-Nera  Asia/Vientiane  Asia/Vladivostok  Asia/Yakutsk  Asia/Yangon  Asia/Yekaterinburg  Asia/Yerevan  Atlantic/Azores  Atlantic/Bermuda  Atlantic/Canary  Atlantic/Cape_Verde  Atlantic/Faroe  Atlantic/Madeira  Atlantic/Reykjavik  Atlantic/South_Georgia  Atlantic/St_Helena  Atlantic/Stanley  Australia/Adelaide  Australia/Brisbane  Australia/Broken_Hill  Australia/Darwin  Australia/Eucla  Australia/Hobart  Australia/Lindeman  Australia/Lord_Howe  Australia/Melbourne  Australia/Perth  Australia/Sydney  Canada/Atlantic  Canada/Central  Canada/Eastern  Canada/Mountain  Canada/Newfoundland  Canada/Pacific  Europe/Amsterdam  Europe/Andorra  Europe/Astrakhan  Europe/Athens  Europe/Belgrade  Europe/Berlin  Europe/Bratislava  Europe/Brussels  Europe/Bucharest  Europe/Budapest  Europe/Busingen  Europe/Chisinau  Europe/Copenhagen  Europe/Dublin  Europe/Gibraltar  Europe/Guernsey  Europe/Helsinki  Europe/Isle_of_Man  Europe/Istanbul  Europe/Jersey  Europe/Kaliningrad  Europe/Kirov  Europe/Kyiv  Europe/Lisbon  Europe/Ljubljana  Europe/London  Europe/Luxembourg  Europe/Madrid  Europe/Malta  Europe/Mariehamn  Europe/Minsk  Europe/Monaco  Europe/Moscow  Europe/Oslo  Europe/Paris  Europe/Podgorica  Europe/Prague  Europe/Riga  Europe/Rome  Europe/Samara  Europe/San_Marino  Europe/Sarajevo  Europe/Saratov  Europe/Simferopol  Europe/Skopje  Europe/Sofia  Europe/Stockholm  Europe/Tallinn  Europe/Tirane  Europe/Ulyanovsk  Europe/Vaduz  Europe/Vatican  Europe/Vienna  Europe/Vilnius  Europe/Volgograd  Europe/Warsaw  Europe/Zagreb  Europe/Zurich  GMT  Indian/Antananarivo  Indian/Chagos  Indian/Christmas  Indian/Cocos  Indian/Comoro  Indian/Kerguelen  Indian/Mahe  Indian/Maldives  Indian/Mauritius  Indian/Mayotte  Indian/Reunion  Pacific/Apia  Pacific/Auckland  Pacific/Bougainville  Pacific/Chatham  Pacific/Chuuk  Pacific/Easter  Pacific/Efate  Pacific/Fakaofo  Pacific/Fiji  Pacific/Funafuti  Pacific/Galapagos  Pacific/Gambier  Pacific/Guadalcanal  Pacific/Guam  Pacific/Honolulu  Pacific/Kanton  Pacific/Kiritimati  Pacific/Kosrae  Pacific/Kwajalein  Pacific/Majuro  Pacific/Marquesas  Pacific/Midway  Pacific/Nauru  Pacific/Niue  Pacific/Norfolk  Pacific/Noumea  Pacific/Pago_Pago  Pacific/Palau  Pacific/Pitcairn  Pacific/Pohnpei  Pacific/Port_Moresby  Pacific/Rarotonga  Pacific/Saipan  Pacific/Tahiti  Pacific/Tarawa  Pacific/Tongatapu  Pacific/Wake  Pacific/Wallis  US/Alaska  US/Arizona  US/Central  US/Eastern  US/Hawaii  US/Mountain  US/Pacific  UTC   Save    
   
 Australia/Perth  English (United States)  Deutsch (Deutschland) 
  English (United Kingdom) 
  English (United States) 
  Español (España) 
  Français (France) 
  Polski (Polska) 
  Português (Brasil) 
  Türkçe (Türkiye) 
  Монгол (Монгол) 
  Українська (Україна) 
  中文 (中国) 
  Login    

 EuroMPI/Australia 2024     

 Sep 25 – 27, 2024   
 Perth, Australia   
 Australia/Perth timezone   

 Home 
  Program 
   Newsfeed (bsky) 
   Best Paper Award 
   Call for Papers 
  Call for Posters 
  Committees 
   Registration (@CSIRO) 
  Venue 
  Travel 
   Conference Archive 
  Contact  
 eurompi2024@vsc.ac.at 

   EuroMPI/Australia 2024   
 25–27 September 2024  
 Hosted by the Pawsey Supercomputing Research Centre  in Perth, Australia  
  
  The EuroMPI/Australia 2024 conference is the preeminent meeting for users, developers, and researchers to interact and discuss new developments and applications of the Message Passing Interface (MPI). This includes new proposed concepts and extensions to the MPI standard, libraries and languages built on top of MPI, interfaces to other standards in parallel programming, applications and optimizations to new architectures and networks, novel algorithms, and tools, with particular focus on quality, portability, performance, and scalability. The annual EuroMPI meeting has a long, rich tradition, and has been held since 1994.  
 Through the presentation of contributed papers, posters and invited talks, the conference presents a complete overview of MPI, its current usage in the parallel programming landscape, and its future directions. The EuroMPI/Australia 2024 conference provides ample opportunities for attendees to interact and share ideas and experiences to contribute to the improvement and furthering of message-passing and related parallel programming paradigms.  
 EuroMPI/Australia 2024  will again be co-located with IWOMP and other meetings  
 OpenMP Language F2F – 16–20 September 2024 
  MPI Forum – 23–24 September 2024 
  IWOMP 2024 | – 23–25 September 2024 
  EuroMPI/Australia 2024 | – 25–27 September 2024 
  Read our public Newsfeed (bsky)  or follow us on Bluesky  or X  .  
 Supporting Organizations and Sponsors  
 EuroMPI/Australia 2024 is made possible through the generous support of the following organizations and sponsors.  
   Whether you are looking to demonstrate your product or service, gain brand recognition or connect with our audience of leading MPI and HPC developers, EuroMPI/Australia 2024 sponsorship can help you achieve your goals. To learn more about sponsorship opportunities please contact us at eurompi2024@vsc.ac.at  .  
   
  Starts  Sep 25, 2024, 10:00 AM    
 Ends  Sep 27, 2024, 3:30 PM    
 Australia/Perth   

  Perth, Australia   

  Powered by Indico  v3.2.4     
   
 Help 
  Contact

30. EuroSPI_1 conference:
Home Welcome 
  About EuroAsia SPI² | EuroSPI² Conferences 
  EuroAsiaSPI² App 
  Programme Commitee 
  Publishers 
  Ambassadors 
  CSR 
  Programme | Conference Programme 
  Key Notes 
  Social Events 
  Associated Tech Days 
  Workshop Communities 
  Registration And Prices 
  Submission 
  Information Center | Location 
  Accomodation 
  Travel 
  Contact 
  Download Center 
  Administration | Reviewer Login 
  PC Chair Login 
  Registration Details 
  Coordinator Page 
  Trainer Login 
    
 Home  About  — EuroSPI² Conferences  — EuroAsiaSPI² App  — Programme Commitee  — Publishers  — Ambassadors  — CSR  Programme  — Conference Programme  — Key Notes  — Social Events  — Associated Tech Days  Workshop  Registration  Submission  Download  Administration  — Reviewer Login  — PC Chair Login  — Registration Details  — Coordinator Page  — Trainer Login     

 SPI Manifesto 
  Media 
  Program Committee 
  Certification 
  Vision 

 Newsflash    
 The EuroSPI 2025 Paper Submission Deadline:  11 April 2025 
  Early  Registration till 1st August 2025 
  Late  Registration from 9th September 2025 
  Conference  TechDay 8th September and Conference 10 - 12 September 2025, Riga, Latvia, Onsite and Online Hybrid Event! 
  ›   ‹     

  Conference Programme  
 The 2024 conference program has been published. See below!  
 EuroSPI² 2024 (4 - 6 September 2024) has 9 international thematic workshop streams supported by thematic topic communities. Each thematic stream integrates both, research sessions and industry / applied science sessions. The thematic streams are a mix of talks provoking discussions, full presentations and panel discussions which focus on specific questions of interest. In addition there is a half day about new research and industry project and funding proposal ideas. Some streams run longer than one day depending on the size of the community and contributions.  
 Each thematic workshop   covers specific thematic topics and mixes research and industry presentations/discussions on that specific topic.   
 Associated Technology Day - Pre-Conference Event (2 September 2024)  
 The associated technology day is a half day online event on 2 September 2024, with key note speakers presenting most recent developments. It can be attended free of cost. A link to the online conference will be published and the access to the presentations and discussions will be free. There are key note presentations  and content based webinar sessions  . Key note sessions are from leading industry or experts, and webinar sessions are presenting first and then using tools to which attendees can access in a gamified scenario. This pre-conference event on 2 September 2024 is free of cost.   
 See the technology day page  .  
 The EuroSPI 2024 Program (Joint EuroSPI and ICSSP 2024  event)  
 The conference has 5 parallel streams. This year the  ISSPA  joins forces and the ICSSP conference  will form a 5th stream of the EuroSPI conferebce. Attendees register for the whole event and can attend EuroSPI as well as the ICSSP stream. Each stream contains a mix of research and industry/applied science papers/presentations. Also each stream contains a mix of pitch talks (show key message and discuss) and full presentations. Also there will be one special session for discussing new funding proposals and finding partners for ideas. The future conference strategy of EuroSPI² is to gather core topics and build communities around the core thematic topics. Leading industry and research lead the thematic topic streams.  
 Also EuroSPI² continuously builds the SPI strategy and understanding in Europe and the world and continues to promote and develop the SPI Manifesto  .  
 Attendees can book single days, any combination of 2 days, or all 3 days.  
 You can access the Room Plan in the R building of Hochschule Munich  campus. You can download the <EuroSPI 2023 sessions and workshop assignment of rooms>.  
    
 04.09.2024   
 08.00 - 08.40   
 Registration   
   
 08.40 - 09.15   
 Room: R 1.046   
  Opening by Hochschule München  
  EuroSPI Chair, Dr Richard Messnarz,  
  Stan Stutton, President of the ISSPA, USA, and Prof. Ita Richardson of UL and Lero, Ireland, General Chair of ICSSP 2024   
  Automotive Skills Alliance, Dr Jakub Stolfa, ASA Director,  
  iNTACS, Bernhard Sechser, Advisory Board Member,  
  Samer Sameh, EuroSPI Chair for ASA Cooperation   
   
 09.30 - 10.30   
 -R1.004   
 Functional Safety/Cybersecurity/SOTIF    
   
 -R1.046   
 Emerging and  
  Multidisciplinary Approaches  
  to Software Engineering    
   
 -R1.003   
 Norms-Assessments-ASPICE    
   
 -R1.002   
 Sustainability and Life Cycle Challenges    
   
 -R1.001   
 ICSSP Stream    

 10.30 - 11.00   
 Room: Catering Area and Exhibition Space   
  Coffee Break   
   
 11.00 - 12.00   
 -R1.004   
 Functional Safety/Cybersecurity/SOTIF    
   
 -R1.046   
 Emerging and  
  Multidisciplinary Approaches  
  to Software Engineering    
   
 -R1.003   
 Norms-Assessments-ASPICE    
   
 -R1.002   
 Sustainability and Life Cycle Challenges    
   
 -R1.001   
 ICSSP Stream    

 12.00 - 13.30   
 Room: Catering Area  Exhibition Space   
  Lunch Break   
   
 13.30 - 15.30   
 -R1.004   
 Functional Safety/Cybersecurity/SOTIF    
   
 -R1.046   
 Emerging and  
  Multidisciplinary Approaches  
  to Software Engineering    
   
 -R1.003   
 Norms-Assessments-ASPICE    
   
 -R1.002   
 Sustainability and Life Cycle Challenges    
   
 -R1.001   
 ICSSP Stream    

 15.30 - 15.45   
 Room: Catering Area and Exhibition Space   
  Coffee Break   
   
 15.45 - 17.15   
 Room:  R1.046   
  Key Note 1: LLM and GenAI based SE processes  , International Panel led by Anita Carlton, SW Engineering Director SEI, Carnegie Mellon University  , USA Panel Chair: Anita Carleton, Carnegie Mellon University, Software Engineering Institute Executive Software Solutions Director, IEEE Fellow  
 Panelists are:  
 Professor Lionel Briand, Science Foundation Ireland Research Centre for Software, Director  
  Dr. Ipek Ozkaya, Carnegie Mellon University Software Engineering Institute Engineering Intelligent Software Systems Technical Director  
  Dr. Alexander Poth, Volkswagen AG  , IT Quality Manager  
  John Robert, Carnegie Mellon University Software Engineering Institute Software Solutions Deputy Director  
  Roland Weiss, Head of R&D and Technology, ABB  

 17.30-18.30   
 Buses will bring the attendees to the Rosenheimer Herbstfest   
  Note: To reach the beer festival and not lose the places we must leave at 17.30 with the busses (sorry for that short transfer time, but later reservations are not possible because the festival is so well known that other people/groups/tourists will compete/pay/invest for the places onsite). The buses are directly in front of the building. You can either store your bags at the conference location (locked till next morning), or you can take them to the bus and you will have the same bus on the journey back. Have a nice typical Bavarian festival, if possible in Lederhosen!  

 18.30 - 22.00   
 Traditional Bavarian Food, Beer and Music   
  Address: Herbststraße 2, 83022 Rosenheim, Germany   

 05.09.2024   
 08.00 - 09.00   
 Registration   
   
 09.00 - 09.45   
 Room:  R1.046   
  Key Note 2: AI in Software Engineering: Promise and Perils  , Professor Dr. C. Greiner, Professor Dr. Thomas C. Peisl Hochschule München  , Germany   
   
 09.45 - 10.30   
 Room: R1.046   
  Key Note 3: Challenges in Automotive  , Prof. Dr Bernd Hindel Founder ASQF, Founder Methodpark, Founder of SOQRATES, Germany   
   
 10.30 - 11.00   
 Room: Catering Area and  Exhibition Space   
  Coffee Break   
   
 11.00 - 12.00   
 -R1.004   
 Functional Safety/Cybersecurity/SOTIF    
   
 -R1.046   
 Emerging and  
  Multidisciplinary Approaches  
  to Software Engineering    
   
 -R1.002   
 Innovation - New Business Models    
   
 -R1.003   
 E-Mobility-Digitilisation-EU Blueprints    
   
 -R1.001   
 ICSSP Stream    

 12.00 - 13.30   
 Room: Catering Area and Exhibition Space   
  Lunch Break   
   
 13.30 - 14.15   
 Room:  Plenary   
  Key Note 4: ASA Automotive Skills Alliance - The New Initiative TRIREME - Re-skilling Strategies for European Car Industry (2024 - 2028)  , Dr Jakub Stolfa, and Peter Dolejsi ASA  , ACEA    
   
 14.30 - 15.30   
 -R1.004   
 Experiences with Agile and Lean   

 -R1.046   
 Emerging and  
  Multidisciplinary Approaches  
  to Software Engineering    
   
 -R1.003   
 Innovation - New Business Models   
  joined session with E-Mobility   
   
 -R1.003   
 E-Mobility-Digitilisation-EU Blueprints   
  joined session with Innovation - Innovation Agent Task Force in ASA   
   
 -R1.001   
 ICSSP Stream    

 15.30 - 16.00   
 Room: Catering Area and Exhibition Space   
  Coffee Break   
   
 16.00 - 18.00   
 -R1.004   
 Experiences with Agile and Lean   

 -R1.046   
 Good Process Improvement Practices (all Branches)    
   
 -R1.002   
 Innovation - New Business Models    
   
 -R1.003   
 E-Mobility-Digitilisation-EU Blueprints    
   
 -R1.001   
 ICSSP Stream    

 till 19.00   
 Attendees go by public transport and leave at Gartenstrasse (line 27) or at Scheidplatz (line 12). From there it is 550 m walking through the famous Luitpoltpark.   
   
 19.00-23.30   
 19.00 - 19.30 Arrival at the Bamberger House   
  19.30 - 20.15 Classical Music Event  
   
  Karol Danis and Anton Bashynskyi are exceptional musicians who play classical music at EuroSPI social events since 2021 and have both won a number of international prizes. See the profile of Karol Danis  and of Anton Bashynskyi  .  
   
  Music Program:  
  F.M. Bartholdy: Fantasie (Klavier solo)  
   
  J.Brahms: Adagio von Violine Sonate dmol  
   
  P.I.Tchaikovsky: Souvenir d’un lieu cher, – Mélodie  
   
  A.Dvořák: Romantische Stück  
   
  J.Massenet: Méditation aus Thais  
   
  F.Kreisler: Three Old Viennese Dances  
   
  R.Strauss: Morgen  
   
  20.30 - 23.30 Gala-Diner at the Bamberger House.  

 06.09.2024   
 08.00 - 09.00   
 Registration   
   
 09.00 - 09.45   
 Room: R1.046   
  Key Note 5: Consistency for more than one Threat Analysis and Risk Assessment and Security Element out of Context Experiences  , Dr Thomas Liedtke Magility  , and Dr Richard Messnarz, ISCN    
   
 09.45 - 10.30   
 Room: R1.046   
  Key Note 6: From Pharaohs to the Future: Iterative Engineering Excellence Across Millennia  
   Samer Sameh is a principal ASPICE Assessor, SAFe program consultant and Valeo senior process improvement manager, and Aly GadElRab is the Software Test Lead at Valeo's Lighting Division, VALEO, Egypt    
   
 10.30 - 11.00   
 Room: Catering Area and Exhibition Space   
  Coffee Break   
   
 11.00 - 12.00   
 -R1.004   
 EuroSPI - Tech Day Summary - Reflecting and discussing the Tech Day Contributions (Tools, Methods, Approaches)  
  Gerhard Griessnig, AVL, Austria, Jorn Johansen, Whitebox, Denmark, Laura Aschbacher, EuroSPI, Austria, Damjan Ekert, ISCN, Austria   

 -R1.046   
 Good Process Improvement Practices (all Branches)    
   
 -R1.002   
 free workshop space for new topics upcoming in discussions   
   
 -R1.003   
 E-Mobility-Digitilisation-EU Blueprints    
   
 -R1.001   
 free workshop space for new topics upcoming in discussions   

 12.00 - 13.00   
 Room: Catering Area and  Exhibition Space   
  Shorter Lunch Break   
   
 13.15 - 14.00   
 Room: R1.046   
  Plenary: An outllook to the future EuroSPI Conference, Academy, Certificates and Service Eco-System - A Vision of Future SPI  , Dr Richard Messnarz, sharing a vision, EuroSPI    
   
 14.00 - 14.30   
 Rory O Connor Paper Award and Best Paper Award together with USA partnership.   

 Join us via Youtube    Join us via LinkedIn      

 © 2024 EuroSPI GmbH

31. EuroSPI_2 conference:
JavaScript must be enabled to use the system

32. ECML PKDD_0 conference:
Skip to content      

 Homepage 
  Submissions | Key Dates & Deadlines 
  Research and ADS Tracks 
  Journal Track | Journal Track reviewers 
  Tutorials & Workshops Proposals 
  Demo Track 
  PhD Forum 
  Discovery Challenge | Challenges 
  Reviewer Self-nomination 
  Program | Program at a glance 
  Sessions Overview | Program 19 September 2023 
  Program 20 September 2023 
  Program 21 September 2023 
  Keynote Speakers 
  Workshops 
  Tutorials 
  PhD Forum 
  Discovery Challenge 
  Awards 
  Accepted papers | Journal track 
  Research 
  ADS 
  Demo 
  Proceedings 
  Special Day AI4FCF 
  Attending | Registration 
  Venues 
  Accommodation 
  Useful Information 
  Code of Conduct 
  Organisation | Chairs 
  Reviewer Guidelines 
  D&I 
  Sponsorship | Sponsors 
  Sponsorship Opportunities 
  Jobs 

     Navigation Menu     

     Navigation Menu     
 Homepage 
  Submissions | Key Dates & Deadlines 
  Research and ADS Tracks 
  Journal Track | Journal Track reviewers 
  Tutorials & Workshops Proposals 
  Demo Track 
  PhD Forum 
  Discovery Challenge | Challenges 
  Reviewer Self-nomination 
  Program | Program at a glance 
  Sessions Overview | Program 19 September 2023 
  Program 20 September 2023 
  Program 21 September 2023 
  Keynote Speakers 
  Workshops 
  Tutorials 
  PhD Forum 
  Discovery Challenge 
  Awards 
  Accepted papers | Journal track 
  Research 
  ADS 
  Demo 
  Proceedings 
  Special Day AI4FCF 
  Attending | Registration 
  Venues 
  Accommodation 
  Useful Information 
  Code of Conduct 
  Organisation | Chairs 
  Reviewer Guidelines 
  D&I 
  Sponsorship | Sponsors 
  Sponsorship Opportunities 
  Jobs 

 Torino  
 ECML PKDD 2023  
 September 18 -22 2023  

 From the 18th to the 22rd of September 2023, the next European Conference on Machine Learning and Principles and Practice of Knowledge Discovery in Databases will be held in Turin, Italy.  
  The conference main venue is OGR ( Officine Grandi Riparazioni  ), the hub of innovation and art in Turin, supported by a group of modern spaces at Politecnico di Torino for the workshops and tutorials days.  
  This is Europe’s top machine learning and data mining conference, with over 20 years of successful events and conferences across the continent.  
   
 Keynote Speakers  

 Max Welling   
  University of Amsterdam – NL  

 Michael Bronstein    
  University of Oxford – UK  

 Kate Crawford   
  USC Annenberg – USA  

 Sponsors  

 Platinum  

 Gold  

 Silver  

 Bronze  

 PhD Forum Sponsor  

 Publishing partner & Sponsor  

 Twitter feed is not available at the moment.   

 Privacy policy   

 Developed by    

 Neve  | Powered by WordPress   

 Privacy policy   

 Developed by    

 Neve  | Powered by WordPress   

 We use cookies on our website to give you the most relevant experience by remembering your preferences and repeat visits. By clicking “Accept All”, you consent to the use of ALL the cookies. However, you may visit "Cookie Settings" to provide a controlled consent.   
 Cookie Settings  Accept All    

 Manage consent    
    Close   Privacy Overview  
 This website uses cookies to improve your experience while you navigate through the website. Out of these, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the website. We also use third-party cookies that help us analyze and understand how you use this website. These cookies will be stored in your browser only with your consent. You also have the option to opt-out of these cookies. But opting out of some of these cookies may affect your browsing experience.   

 Necessary   Necessary    
 Always Enabled    
 Necessary cookies are absolutely essential for the website to function properly. These cookies ensure basic functionalities and security features of the website, anonymously.  
 Cookie | Duration | Description 
 cookielawinfo-checkbox-analytics | 2 months | This cookie is set by GDPR Cookie Consent plugin. The cookie is used to store the user consent for the cookies in the category "Analytics". 
 cookielawinfo-checkbox-functional | 2 months | The cookie is set by GDPR cookie consent to record the user consent for the cookies in the category "Functional". 
 cookielawinfo-checkbox-necessary | 2 months | This cookie is set by GDPR Cookie Consent plugin. The cookies is used to store the user consent for the cookies in the category "Necessary". 
 cookielawinfo-checkbox-others | 2 months | This cookie is set by GDPR Cookie Consent plugin. The cookie is used to store the user consent for the cookies in the category "Other. 
 cookielawinfo-checkbox-performance | 2 months | This cookie is set by GDPR Cookie Consent plugin. The cookie is used to store the user consent for the cookies in the category "Performance". 
 viewed_cookie_policy | 2 months | The cookie is set by the GDPR Cookie Consent plugin and is used to store whether or not user has consented to the use of cookies. It does not store any personal data. 

 Functional   Functional     
   
 Functional cookies help to perform certain functionalities like sharing the content of the website on social media platforms, collect feedbacks, and other third-party features.   

 Performance   Performance     
   
 Performance cookies are used to understand and analyze the key performance indexes of the website which helps in delivering a better user experience for the visitors.   

 Analytics   Analytics     
   
 Analytical cookies are used to understand how visitors interact with the website. These cookies help provide information on metrics the number of visitors, bounce rate, traffic source, etc.   

 Advertisement   Advertisement     
   
 Advertisement cookies are used to provide visitors with relevant ads and marketing campaigns. These cookies track visitors across websites and collect information to provide customized ads.   

 Others   Others     
   
 Other uncategorized cookies are those that are being analyzed and have not been classified into a category as yet.   

 SAVE & ACCEPT

33. ECML PKDD_1 conference:
Select year      
   
   Menu  

   Close  About    
 Steering Committee    
 Guidelines for proposals    
 Gender balance    
 Code of conduct    
 Springer publication portal    

  European Conference on Machine Learning and Principles and Practice of Knowledge Discovery in Databases.  
 This is the official website of ECMLPKDD  . Here, you can find information about us and what we do.    

 ECML PKDD 2025  
 FROM SEPTEMBER 15 TO 19  
 The next European Conference on Machine Learning and Principles and Practice of Knowledge Discovery in Databases.  Visit conference    

 Recent editions  

  Vilnius, Lithuania  
 ECML PKDD 2024  
     
 September 9 - 13  

   Torino, Italy  
 ECML PKDD 2023  
     
 September 18 -22  

   Grenoble, France  
 ECML PKDD 2022  
     
 September 19-23  

   Bilbao, Spain (Virtual)  
 ECML PKDD 2021  
     
 September 13-17  

   Ghent, Belgium (Virtual)  
 ECML PKDD 2020  
     
 September 14-18  

   Würzburg, Germany  
 ECML PKDD 2019  
     
 September 16-20  

 Contact us to stay up to date with our upcoming conference  

 About    
 Gender balance    
   Twitter  

 Steering Committee    
 Code of conduct    
   Facebook  

 Guidelines for proposals    
 Springer publication portal    
   YouTube

34. ESANN_0 conference:
Log In 

 ESANN 2025     

 Menu      Home | Latest news 
  Submit a paper | Call for papers 
  Special sessions 
  Author guidelines 
  Ethics 
  Submissions 
  Program 
  Participate | Format of the conference 
  Registration 
  Information for speakers 
  The event | Venue 
  About Bruges 
  Hotels 
  Conference commitees 
  Sponsors 
  Contacts 
  Past ESANN | ESANN conferences 
  Proceedings 
  My ESANN 

 close  ×  Call Us  +1 (777) 123 45 67    
 close  ×  Search     

 ESANN 2023 - proceedings  

 31 st  European Symposium on Artificial Neural Networks, Computational Intelligence and Machine Learning  
  Bruges, Belgium October 04 - 06  Content of the proceedings  
 Graph Representation Learning   
  Feature selection and dimension reduction   
  Towards Machine Learning Models that We Can Trust: Testing, Improving, and Explaining Robustness   
  Fairness and Interpretability, Clustering, and NLP   
  Quantum Artificial Intelligence   
  Green Machine Learning   
  Reinforcement learning and Evolutionary computation   
  Classification   
  Deep learning and Computer vision   
  Sequential data, and Meta-learning   
  Machine Learning Applied to Sign Language   
  Efficient Learning in Spiking Neural Networks   
  Anomaly Detection, and Learning Algorithms   
   
  Graph Representation Learning  
  Graph Representation Learning   
  Davide Bacciu, Federico Errica, Alessio Micheli, Nicolò Navarin, Luca Pasa, Marco Podda, Daniele Zambon  
  https://doi.org/10.14428/esann/2023.ES2023-4  Abstract:   
  In a broad range of real-world machine learning applications, representing examples as graphs is crucial to avoid a loss of information. Due to this in the last few years, the definition of machine learning methods, particularly neural networks, for graph-structured inputs has been gaining increasing attention. In particular, Deep Graph Networks (DGNs) are nowadays the most commonly adopted models to learn a representation that can be used to address different tasks related to nodes, edges, or even entire graphs. This tutorial paper reviews fundamental concepts and open challenges of graph representation learning and summarizes the contributions that have been accepted for publication to the ESANN 2023 special session on the topic.  Download manuscript    

 Richness of Node Embeddings in Graph Echo State Networks   
  Domenico Tortorella, Alessio Micheli  
  https://doi.org/10.14428/esann/2023.ES2023-51  Abstract:   
  Graph Echo State Networks (GESN) have recently proved effective in node classification tasks, showing particularly able to address the issue of heterophily. While previous literature has analyzed the design of reservoirs for sequence ESN and GESN for graph-level tasks, the factors that contribute to rich node embeddings are so far unexplored. In this paper we analyze the impact of different reservoir designs on node classification accuracy and on the quality of node embeddings computed by GESN using tools from the areas of information theory and numerical analysis. In particular, we propose an entropy measure for quantifying information in node embeddings.  Download manuscript    

 An Empirical Study of Over-Parameterized Neural Models based on Graph Random Features   
  Nicolò Navarin, Luca Pasa, Luca Oneto, Alessandro Sperduti  
  https://doi.org/10.14428/esann/2023.ES2023-145  Abstract:   
  In this paper, we investigate neural models based on graph random features. In particular, we aim to understand when over-parameterization, namely generating more features than the ones necessary to interpolate, may be beneficial for the generalization of the resulting models. Exploiting the algorithmic stability framework and based on empirical evidences from several commonly adopted graph datasets, we will shed some light on this issue.  Download manuscript    

 Convolutional Transformer via Graph Embeddings for Few-shot Toxicity and Side Effect Prediction   
  Luis Torres, Bernardete Ribeiro, Joel Arrais  
  https://doi.org/10.14428/esann/2023.ES2023-66  Abstract:   
  The prediction of chemical toxicity and adverse side effects is a crucial task in drug discovery. Graph neural networks (GNNs) have accelerated the discovery of compounds with improved molecular profiles for effective drug development. Recently, Transformer networks have also managed to capture the long-range dependence in molecules to preserve the global aspects of molecular embeddings for molecular property prediction. In this paper, we propose a few-shot GNN-Transformer, FS-GNNCvTR to face the challenge of low-data toxicity and side effect prediction. Specifically, we introduce a convolutional Transformer to model the local spatial context of molecular graph embeddings while preserving the global information of deep representations. Furthermore, a two-module meta-learning framework is proposed to iteratively update model parameters across few-shot tasks with limited available data. Experiments on small-sized biological datasets for toxicity and side effect prediction, Tox21 and SIDER, demonstrate a superior performance of FS-GNNCvTR compared to standard graph-based methods. The code and data underlying this article are available in the repository, https://github.com/larngroup/FS-GNNCvTR.  Download manuscript    

 Hidden Markov Models for Temporal Graph Representation Learning   
  Federico Errica, Alessio Gravina, Davide Bacciu, Alessio Micheli  
  https://doi.org/10.14428/esann/2023.ES2023-35  Abstract:   
  We propose the Hidden Markov Model for temporal Graphs, a deep and fully probabilistic model for learning in the domain of dynamic time-varying graphs. We extend hidden Markov models for sequences to the graph domain by stacking probabilistic layers that perform efficient message passing and learn representations for the individual nodes. We evaluate the goodness of the learned representations on temporal node prediction tasks, and we observe promising results compared to neural approaches.  Download manuscript    

 A Tropical View of Graph Neural Networks   
  Francesco Landolfi, Davide Bacciu, Danilo Numeroso  
  https://doi.org/10.14428/esann/2023.ES2023-27  Abstract:   
  Learning dynamic programming algorithms with Graph Neural Networks (GNNs) is a research direction which is increasingly gaining popularity. Prior work has demonstrated that in order to learn such algorithms, it is necessary to have an ``alignment'' between the neural architecture and the dynamics of the target algorithms, and that GNNs align, in fact, with dynamic programming. Here, we provide a different view of this alignment, studying it through the lens of tropical algebra. We show that GNNs can approximate dynamic programming algorithms up to arbitrary precision, provided that their input and output are appropriately pre- and post-processed.  Download manuscript    

 Graph-based Categorical Embedding   
  Weiwei Wang, Stefano Bromuri, Michel Dumontier  
  https://doi.org/10.14428/esann/2023.ES2023-32  Abstract:   
  Categorical features are a challenge for most machine learning algorithms that only accept numerical vectors in input. Graph neural networks are revolutionising how machine learning models are applied even to traditional data sets, thanks to the possibility of introducing graph relationships amongst features and samples. In this contribution, we describe an algorithm leveraging the assignment matrix of a DiffPool graph neural network to calculate embeddings for categorical features, using as an adjacency matrix the co-occurrence matrix between the categorical values and as nodes feature the one hot encoded categorical values. We show that the algorithm proposed is scalable and presents a competitive performance in three publicly available data sets presenting both numerical and categorical values.  Download manuscript    

 FouriER: Link Prediction by Mixing Tokens with Fourier-enhanced MetaFormer   
  Thanh Vu, Huy Ngo, Bac Le, Thanh Le  
  https://doi.org/10.14428/esann/2023.ES2023-73  Abstract:   
  Knowledge graph link prediction has been researched for many years. With the steady development of data, the demand for missing link prediction in knowledge bases is growing. In this study, we propose FouriER, a model using Fourier transforms integrated into MetaFormer architecture to learn features from embeddings better but more computationally cost-effective than the self-attention mechanism in Transformer models. Furthermore, we transform embeddings to a 2D form and stack them that benefit the model in learning interactions between entities and relations more efficiently. As a result, we found that our model outperformed baseline models on two benchmark datasets in our experiments.  Download manuscript    

  Feature selection and dimension reduction  
  Feature Selection for Concept Drift Detection   
  Fabian Hinder, Barbara Hammer  
  https://doi.org/10.14428/esann/2023.ES2023-55  Abstract:   
  Feature selection is one of the most relevant preprocessing and analysis techniques in machine learning. It can dramatically increase the performance of learning algorithms and also provide relevant information on the data. In online and stream learning concept drift, i.e., the change of the underlying distribution over time, can cause tremendous problems for learning models and data analysis. While there do exist feature selection methods for online learning, to the best of our knowledge there do not exist methods to perform feature selection for drift detection, i.e., to increase the performance of drift detectors and to analyze the drift itself. In this work, we study feature selection for concept drift detection and provide a formal derivation and semantic interpretation thereof. We empirically show the relevance of our considerations on several benchmarks.  Download manuscript    

 Improved Interpretation of Feature Relevances: Iterated Relevance Matrix Analysis (IRMA)   
  Michael Biehl, Sofie Lövdal  
  https://doi.org/10.14428/esann/2023.ES2023-127  Abstract:   
  We introduce and investigate the iterated application of Generalized Matrix Relevance Learning for the analysis of feature relevances in classification problems. The suggested Iterated Relevance Matrix Analysis (IRMA), identifies a linear subspace representing the classification specific information of the considered data sets in feature space using Generalized Matrix Learning Vector Quantization. By iteratively determining a new discriminative direction while projecting out all previously identified ones, all features carrying relevant information about the classification can be found, facilitating a detailed analysis of feature relevances. Moreover, IRMA can be used to generate improved low-dimensional representations and visualizations of labeled data sets.  Download manuscript    

 Sparse Nyström Approximation for Non-Vectorial Data Using Class-informed Landmark Selection   
  Maximilian Münch, Katrin Sophie Bohnsack, Alexander Engelsberger, Frank-Michael Schleif, Thomas Villmann  
  https://doi.org/10.14428/esann/2023.ES2023-136  Abstract:   
  We introduce an efficient approach for supervised landmark selection in sparse Nyström approximation of kernel matrices. Our method fconverts structured non-vectorial input data such as graphs or text into a vectorial dissimilarity representation, enabling class-informed landmark identification through prototype-based learning. Experimental results show competitive approximation quality compared to existing strategies and demonstrate the positive effect of integrating class information into the selection process of Nystr\"om landmarks making our approach an efficient and versatile solution for large-scale kernel learning.  Download manuscript    

 Improved the locally aligned ant technique (LAAT) strategy to recover manifolds embedded in strong noise   
  Felipe Contreras, Kerstin Bunte, Reynier Peletier  
  https://doi.org/10.14428/esann/2023.ES2023-151  Abstract:   
  The automatic detection, extraction, and modeling of manifold structures from large data-sets are of great interest, especially in Astronomy. Existing manifold learning techniques for feature extraction in Computer Vision, Bioinformatics and signal denoising typically fail in astronomical scenarios, since they mostly assume low levels of noise and one manifold of fixed dimension. Therefore, the Locally Aligned Ant Technique (LAAT) was recently proposed to discover multiple faint and noisy structures of varying dimensionality embedded in large amounts of background noise. Although it demonstrates excellent results in multiple scenarios, its performance depends on global thresholding and user tuning. Here, we improve LAAT and replace the global threshold by a flexible local strategy.  Download manuscript    

 Nesterov momentum and gradient normalization to improve t-SNE convergence and neighborhood preservation, without early exaggeration   
  Pierre Lambert, Lee John, Edouard Couplet, Cyril de Bodt  
  https://doi.org/10.14428/esann/2023.ES2023-147  Abstract:   
  Student t-distributed stochastic neighbor embedding (t-SNE) finds low-dimensional data representations allowing visual exploration of data sets. t-SNE minimises a cost function with a custom two-phase gradient descent. The first phase is called early exaggeration and involves a hyper-parameter whose value can be tricky and time-consuming to set. This paper proposes another way to optimise the cost function without early exaggeration. Empirical evaluation shows that the proposed method of optimization converges faster and yields competitive results in terms of neighborhood preservation.  Download manuscript    

 On Feature Removal for Explainability in Dynamic Environments   
  Fabian Fumagalli, Maximilian Muschalik, Eyke Hüllermeier, Barbara Hammer  
  https://doi.org/10.14428/esann/2023.ES2023-148  Abstract:   
  Removal-based explanations are a general framework to provide feature importance scores, where feature removal, i.e. restricting a model on a subset of features, is a central component. While many machine learning applications require dynamic modeling environments, where distributions and models change over time, removal-based explanations and feature removal have mainly been considered in a static batch learning environment. Recently, an interventional and observational perturbation method was presented that allows to remove features efficiently in dynamic learning environments with concept drift. In this paper, we compare these two algorithms on two synthetic data streams. We showcase how both yield substantially different explanations when features are correlated and provide guidance on the choice based on the application.  Download manuscript    

 Robust Feature Selection and Robust Training to Cope with Hyperspectral Sensor Shifts   
  Valerie Vaquet, Johannes Brinkrolf, Barbara Hammer  
  https://doi.org/10.14428/esann/2023.ES2023-158  Abstract:   
  Hyperspectral imaging is a suitable measurement tool across domains. However, when combined with machine learning techniques, frequently intensity and transversal shifts hinder the transfer between different sensors and settings. Established approaches focus on eliminating sensor shifts in the data or recalibrating sensors. In this contribution, we target the training procedure, propose robust training, and derive a robust feature selection strategy that can cope with multiple shift dynamics at the same time. We evaluate our approaches experimentally on artificial and real-world datasets.  Download manuscript    

 A Counterexample to Ockham's Razor and the Curse of Dimensionality: Marginalising Complexity and Dimensionality for GMMs   
  Benoit Frénay  
  https://doi.org/10.14428/esann/2023.ES2023-18  Abstract:   
  Ockham's razor and the curse of dimensionality are two founding principles in machine learning. First, simple models should be preferred to complex ones, in order to prevent overfitting. Second, high-dimensional spaces should be avoided, whenever possible, because learning is easier in lower-dimensional spaces. These principles are often invoked to justify methodological choices or to preprocess data. However, this paper shows a counterexample where it is better to first learn a more complex model in a higher-dimensional space, and then to go back to the lower-dimensional space while dropping the additional complexity. Specifically, experiments demonstrate that Gaussian mixtures models can be learned in a higher-dimensional space and then marginalised to the target dimensionality to improve probability density estimation performances. The chosen problem is deliberately simple to facilitate the analysis, but it opens the way to similar work for more complex models and tasks.  Download manuscript    

 Feature Selection for Multi-label Classification with Minimal Learning Machine   
  Joakim Linja, Joonas Hämäläinen, Tommi Kärkkäinen  
  https://doi.org/10.14428/esann/2023.ES2023-134  Abstract:   
  Multi-label classification problems, where more than one class can be active in a single instance, generalize the conventional single-label cases. In this article, we continue the research track documented in [1,2], where the Minimal Learning Machine (MLM) was generalized into multi-label problems with competitive results compared to other state-of-the-art techniques. Our current interest is to consider whether we can reduce the complexity of the distance-based regression model in the MLM by performing feature selection. For this purpose, an existing feature selection filter technique is generalized to multi-label problems. Experimental results confirm that the proposed technique provides a useful ranking, which allows one to reduce the number of active features without jeopardizing the quality of the multi-label MLM classifier.  Download manuscript    

 Learning with Boosting Decision Stumps for Feature Selection in Evolving Data Streams   
  Daniel Nowak-Assis  
  https://doi.org/10.14428/esann/2023.ES2023-16  Abstract:   
  Feature selection plays an important role in Machine Learning pipelines, and many challenges emerge for feature selection when data arrives continuously as a stream. In this paper, we extend the Adaptive Boosting for Feature Selection (ABFS) algorithm by (i) using a different Online Boosting strategy and (ii) changing the Boosting scaling factor of instances weighting. Results show that our extended ABFS leveraged the predictive performance of classifiers more than the standard ABFS in the most used monolithic classifiers for stream mining.  Download manuscript    

  Towards Machine Learning Models that We Can Trust: Testing, Improving, and Explaining Robustness  
  Towards Machine Learning Models that We Can Trust: Testing, Improving, and Explaining Robustness   
  Maura Pintor, Ambra Demontis, Battista Biggio  
  https://doi.org/10.14428/esann/2023.ES2023-5  Abstract:   
  In recent years, machine learning has become the most effective way to analyze massive data streams. However, machine learning is also subject to security and reliability issues. These aspects require machine learning to be thoroughly tested before being deployed in unsupervised scenarios, such as services intended for consumers. The goal of this session is to discuss open challenges, both theoretical and practical, related to the security and safety of machine learning. The session will try to address the following challenges: (i) the implementation of efficient tests for Machine Learning in the context of robustness to attacks and natural drifts of data; and (ii) the design of robust and efficient models able to function in the wild and mitigate or detect adversarial attacks.  Download manuscript    

 Secure Federated Learning with Kernel Affine Hull Machines   
  Mohit Kumar, Bernhard Moser, Lukas Fischer  
  https://doi.org/10.14428/esann/2023.ES2023-56  Abstract:   
  The concept of Kernel Affine Hull Machine (KAHM) was recently introduced for representing data via learning in Reproducing Kernel Hilbert Spaces. KAHM defines a bounded geometric body in data space such that a distance measure from the geometric body can be used to aggregate local KAHM-based models to build a global model. This study leverages KAHMs for secure federated learning where data is protected from an aggressive aggregator by fully homomorphic encryption. An accurate and computationally efficient federated learning architecture, that combines local KAHMs-based classifiers in a robust and flexible manner such that the global model can be homomorphically evaluated in an efficient manner, is provided.  Download manuscript    

 Improving Fast Minimum-Norm Attacks with Hyperparameter Optimization   
  Giorgio Piras, Giuseppe Floris, Raffaele Mura, Luca Scionis, Maura Pintor, Battista Biggio, Ambra Demontis  
  https://doi.org/10.14428/esann/2023.ES2023-164  Abstract:   
  Evaluating the adversarial robustness of machine-learning models using gradient-based attacks is challenging. In this work, we show that hyperparameter optimization can improve fast minimum-norm at- tacks by automating the selection of the loss function, the optimizer, and the step-size scheduler, along with the corresponding hyperparam- eters. Our extensive evaluation involving several robust models demon- strates the improved efficacy of fast minimum-norm attacks when hyped up with hyperparameter optimization. We release our open-source code at https://github.com/pralab/HO-FMN.  Download manuscript    

 On the Limitations of Model Stealing with Uncertainty Quantification Models   
  David Pape, Sina Däubener, Thosten Eisenhofer, Antonio Emanuele Cinà, Lea Schönherr  
  https://doi.org/10.14428/esann/2023.ES2023-125  Abstract:   
  Model stealing aims at inferring a victim model's functionality at a fraction of the original training cost. While the goal is clear, in practice the model's architecture, weight dimension, and original training data can not be determined exactly, leading to mutual uncertainty during stealing. In this work, we explicitly tackle this uncertainty by generating multiple possible networks and combining their predictions to improve the quality of the stolen model. For this, we compare five popular uncertainty quantification models in a model stealing task. Surprisingly, our results indicate that the considered models only lead to marginal improvements in terms of label agreement (i.e., fidelity) to the stolen model. To find the cause of this, we inspect the diversity of the model's prediction by looking at the prediction variance as a function of training iterations. We realize that during training, the models tend to have similar predictions, indicating that the network diversity we wanted to leverage using uncertainty quantification models is not (high) enough for improvements on the model stealing task.  Download manuscript    

 Towards Randomized Algorithms and Models that We Can Trust: a Theoretical Perspective   
  Luca Oneto, Sandro Ridella, Davide Anguita  
  https://doi.org/10.14428/esann/2023.ES2023-29  Abstract:   
  In the last decade it became increasingly apparent the inability of technical metrics to well characterize the behavior of intelligent systems. In fact, they are nowadays requested to meet also ethical requirements such as explainability, fairness, robustness, and privacy increasing our trust in their use in the wild. The final goal is to be able to develop a new generation of more responsible and trustworthy machine learning. In this paper, we focus our attention on randomized machine learning algorithms and models questioning, from a theoretical perspective, if it is possible to simultaneously optimize multiple metrics that are in tension between each other towards randomized machine learning algorithms that we can trust. For this purpose we will leverage the most recent advances coming from the statistical learning theory: distribution stability and differential privacy.  Download manuscript    

 Single-pass uncertainty estimation with layer ensembling for regression: application to proton therapy dose prediction for head and neck cancer   
  Ana Maria Barragan Montero, Robin Tilman, Margerie Huet-Dastarac, Lee John  
  https://doi.org/10.14428/esann/2023.ES2023-115  Abstract:   
  We developed a new uncertainty quantification method for deep learning regression models, based on Layer Ensembles [1], which is competitive with state-of-the-art ensembling and Monte Carlo (MC) dropout techniques. The method was implemented in a UNet-like architecture and applied to predicting 3D dose maps for head and neck cancer patients who are treated with proton therapy. The new approach runs approximately 8 times faster than MC Dropout. Our statistical analysis showed no significant difference in prediction accuracy between the two different methods (p-value = 0.09). Moreover, the correlation uncertainty/error in the body is only -3%. These findings demonstrate the potential of the new method in enabling fast and accurate uncertainty quantification for regression problems and, in particular, for proton therapy dose prediction  Download manuscript    

  Fairness and Interpretability, Clustering, and NLP  
  Mixture of stochastic block models for multiview clustering   
  Kylliann De Santiago, Marie Szafranski, Christophe Ambroise  
  https://doi.org/10.14428/esann/2023.ES2023-54  Abstract:   
  In this work, we propose an original method for aggregating multiple clustering coming from different sources of information. Each partition is encoded by a co-membership matrix between observations. Our approach uses a mixture of Stochastic Block Models (SBM) to group co-membership matrices with similar information into components and to partition observations into different clusters, taking into account their specificities within the components. The parameters are estimated using a Variational Bayesian EM algorithm. The Bayesian framework allows for selecting an optimal numbers of clusters and components.  Download manuscript    

 Fine-tuning is not (always) overfitting artifacts   
  Jérémie Bogaert, Emmanuel Jean, Cyril de Bodt, François-Xavier Standaert  
  https://doi.org/10.14428/esann/2023.ES2023-152  Abstract:   
  Since their release, transformers, and in particular fine-tuned transformers are widely used for text related classification tasks. However, only a few studies try to understand how fine-tuning actually works and existing alternatives, such as feature-based transformers, are often overlooked. In this work, we study a French transformer model, CamemBERT, to compare the fine-tuned and feature-based approaches in terms of their performances, interpretability and embedding space. We observe that while fine-tuning has a limited impact on performances in our case study, it significantly affects the intepretability (by better isolating words that are intuitively connected to the classification task) and embedding space (by summarizing the majority of the relevant information into a fewer dimensions) of the results. We conclude by highlighting open questions regarding the generalization potential of fine-tuned embeddings.  Download manuscript    

 On Instance Weighted Clustering Ensembles   
  Paul Moggridge, Na Helian, Yi Sun, Mariana Lilley  
  https://doi.org/10.14428/esann/2023.ES2023-91  Abstract:   
  Ensemble clustering is a technique which combines multiple clustering results, and instance weighting is a technique which highlights important instances in a dataset. Both techniques are known to enhance clustering performance and robustness. In this research, ensembles and instance weighting are integrated with the spectral clustering algorithm. We believe this is the first attempt at creating diversity in the generative mechanism using density based instance weighting for a spectral ensemble. The proposed approach is empirically validated using synthetic datasets comparing against spectral and a spectral ensemble with random instance weighting. Results show that using the instance weighted sub-sampling approach as the generative mechanism for an ensemble of spectral clustering leads to improved clustering performance on datasets with imbalanced clusters.  Download manuscript    

 Rethink the Effectiveness of Text Data Augmentation: An Empirical Analysis   
  Zhengxiang Shi, Aldo Lipani  
  https://doi.org/10.14428/esann/2023.ES2023-42  Abstract:   
  In recent years, language models (LMs) have made remarkable progress in advancing the field of natural language processing (NLP). However, the impact of data augmentation techniques on the fine-tuning performance of these LMs has been a topic of ongoing debate. In this study, we evaluate the effectiveness of three different fine-tuning methods in conjugation with back-translation across an array of seven diverse NLP tasks. These tasks encompass classification and regression assignments, involving both single-sentence and sentence-pair challenges. Contrary to prior assumptions that data augmentation does not contribute to the enhancement of LMs’ fine-tuning performance, our findings reveal that continued pre-training on augmented data can effectively improve the fine-tuning performance of the downstream tasks. In the most favorable case, continued pre-training improves the performance of fine-tuning by more than 10% in the few-shot learning setting. Our finding highlights the potential of data augmentation as a powerful tool for bolstering LMs' performance.  Download manuscript    

 Similarity versus Supervision: Best Approaches for HS Code Prediction   
  Sédrick Stassin, otmane Amel, Sidi Ahmed Mahmoudi, Xavier Siebert  
  https://doi.org/10.14428/esann/2023.ES2023-163  Abstract:   
  With growing e-commerce flows and new legislative rules, customs representatives bear a great risk when completing customs declarations for their clients. In the latter, the Harmonized System (HS) code is a crucial component using 10 digits (HS10) to classify products and define national tax rates. In this paper, we compare the performance of first, sentence embedding models using semantic similarity and second, supervised models, to predict up to the HS10 code, where currently, to the best of our knowledge, little research is being conducted. We demonstrate the differences and respective strengths of each approach. Our results show the outstanding performance of the semantic similarity approach with a top-3 and top-5 accuracy of 89% and 94.8% respectively for HS10 prediction.  Download manuscript    

 Multimodal Approach for Harmonized System Code Prediction   
  otmane Amel, Sédrick Stassin, Sidi Ahmed Mahmoudi, Xavier Siebert  
  https://doi.org/10.14428/esann/2023.ES2023-165  Abstract:   
  The rapid growth of e-commerce has placed considerable pressure on customs representatives. Artificial intelligence (AI) systems have emerged as a promising approach to minimize the risks faced in the customs domain. Given that the Harmonized System (HS) code is a crucial element for an accurate customs declaration, we propose a novel multimodal HS code prediction approach using deep learning models exploiting both image and text features obtained through the customs declaration combined with e-commerce platform information. We evaluated two early fusion methods and introduced our MultConcat fusion method. To the best of our knowledge, few studies analyze the feature-level combination of text and image in the state-of-the-art for HS code prediction, which heightens interest in our paper and its findings. The experimental results prove the effectiveness of our approach and fusion method with a top-3 and top-5 accuracy of 93.5% and 98.2% respectively.  Download manuscript    

 Mitigating Robustness Bias: Theoretical Results and Empirical Evidences   
  Danilo Franco, Luca Oneto, Davide Anguita  
  https://doi.org/10.14428/esann/2023.ES2023-30  Abstract:   
  Recent research has shown that some learned classifiers can be more easily fooled by an adversary who carefully crafts imperceptible or physically plausible modifications of the input data regarding particular subgroups of the population (e.g., people with particular gender, ethnicity, or skin color). This form of un-fairness has been just recently studied, noting the fact that classical fairness metrics, which only observe the model outputs, are not enough but also robustness biases need to be measured and mitigated. For this reason, in this paper, we will first develop a new metric of fairness which generalizes the current ones and degenerates in the classical ones and then we will develop a theoretical mitigation framework with consistency results able to generate a new empirical mitigation strategy and explain why the current ones actually work.  Download manuscript    

 End-to-End Neural Network Training for Hyperbox-Based Classification   
  Denis Martins, Christian Lülf, Fabian Gieseke  
  https://doi.org/10.14428/esann/2023.ES2023-33  Abstract:   
  Hyperbox-based classification has been seen as a promising technique in which decisions on the data are represented as a series of orthogonal, multidimensional boxes (i.e., hyperboxes) that are often interpretable and human-readable. However, existing methods are no longer capable of efficiently handling the increasing volume of data many application domains face nowadays. We address this gap by proposing a novel, fully differentiable framework for hyperbox-based classification via neural networks. In contrast to previous work, our hyperbox models can be efficiently trained in an end-to-end fashion, which leads to significantly reduced training times and superior classification results.  Download manuscript    

 TabSRA: An Attention based Self-Explainable Model for Tabular Learning   
  Kodjo Mawuena AMEKOE, Mohamed Djallel DILMI, Hanane AZZAG, Zaineb CHELLY DAGDIA, Mustapha Lebbah, Grégoire JAFFRE  
  https://doi.org/10.14428/esann/2023.ES2023-37  Abstract:   
  We propose TabSRA, a novel self-explainable, and accurate model for tabular learning. TabSRA is based on SRA (Self-Reinforcement Attention), new attention mechanism that helps to learn an intelligible representation of the raw input data through element-wise vector multiplication. The learned representation is aggregated by a highly transparent function (e.g linear), which produces the final output. Experimental results on synthetic and real-world classification problems show that the proposed TabSRA solution outperforms existing widely used self-explainable models and performs comparably to full complexity state-of-the-art models in term of accuracy while providing a faithful feature attribution.  Download manuscript    

 Improving Fairness via Intrinsic Plasticity in Echo State Networks   
  Andrea Ceni, Davide Bacciu, Valerio De Caro, Claudio Gallicchio, Luca Oneto  
  https://doi.org/10.14428/esann/2023.ES2023-90  Abstract:   
  Artificial Intelligence, and in particular Machine Learning, has become ubiquitous in today's society, both revolutionizing and impacting society as a whole. However, it can also lead to algorithmic bias and unfair results, especially when sensitive information is involved. This paper addresses the problem of algorithmic fairness in Machine Learning for temporal data, focusing on ensuring that sensitive time-dependent information does not unfairly influence the outcome of a classifier. In particular, we focus on a class of training-efficient recurrent neural models called Echo State Networks, and show, for the first time, how to leverage local unsupervised adaptation of the internal dynamics in order to build fairer classifiers. Experimental results on real-world problems from physiological sensor data demonstrate the potential of the proposal.  Download manuscript    

 Is Boredom an Indicator on the way to Singularity of Artificial Intelligence? Hypotheses as Thought-Provoking Impulse   
  Martin Bogdan  
  https://doi.org/10.14428/esann/2023.ES2023-89  Abstract:   
  In the past, the question regarding the point of singularity in artificial intelligence - when machines become more intelligent than humans - has been raised again and again. In this publication, a crucial point of human intelligence and the impact on this discussion will be postulated in the form of 3 hypotheses as thought-provoking impulse based on the basic hypothesis, that only systems which can be bored are intelligent. First, boredom is discussed from the perspective of psychology with its influence on human intelligence before deductions are drawn from this to artificial intelligence resp. machine learning. Finally, the hypotheses are formulated and the resulting future investigations are outlined.  Download manuscript    

 Adversarial Auditing of Machine Learning Models under Compound Shift   
  Karan Bhanot, Dennis Wei, Ioana Baldini, Kristin Bennett  
  https://doi.org/10.14428/esann/2023.ES2023-182  Abstract:   
  Machine learning (ML) models often perform differently under distribution shifts, in terms of utility, fairness, and other dimensions. We propose the Adversarial Auditor for measuring the utility and fairness performance of ML models under compound shifts of outcome and protected attributes. We use Multi-Objective Bayesian Optimization (MOBO) to account for multiple metrics and identify shifts where model performance is extreme, both good and bad. Using two case studies, we show that MOBO performed better than random and grid-based approaches in identifying scenarios by adversarially optimizing objectives, highlighting the value of such an auditor for developing fair, accurate and shift-robust models.  Download manuscript    

 Language Modeling in Logistics: Customer Calling Prediction   
  Xi Chen, Giacomo Anerdi, Daniel Tan, Stefano Bromuri  
  https://doi.org/10.14428/esann/2023.ES2023-78  Abstract:   
  Customer centers in logistics companies deal with many customer calls and requests daily. One of the most common calls is related to requesting an update on the shipment status. Proactively sending message updates to customers can reduce the number of calls. However, naively sending updates to everyone can cause unnecessary anxiety to people who do not want it, thus leading to customer dissatisfaction or even more calls. If a machine learning model could predict shipments leading to a customer call based on its journey, it could be possible to proactively send message updates only to customers likely to make a call. Therefore, reducing the workload in the customer center while increasing customer satisfaction. In large logistic companies where the volume of calls can reach a million calls per month, even 10\% of the reduction of calls could already significantly reduce the additional expenses and workload associated with tracing a shipment. In this paper, we formulate the shipment journey as a variant of a language model. Specifically, we treat checkpoints (station, facility, time, event code) as tokens and predict the next checkpoint(station, facility, time delta, event code). Our core insight is that shipment checkpoints follow a set of rules that dictate the possible sequence of checkpoints. This is similar to how grammar rules dictate which words can follow another. Despite remaining a difficult problem, our experiments show that features learned by modeling shipment checkpoints as a language model can improve customer calling prediction.  Download manuscript    

 Combining Stochastic Explainers and Subgraph Neural Networks can Increase Expressivity and Interpretability   
  Indro Spinelli, Michele Guerra, Filippo Maria Bianchi, Simone Scardapane  
  https://doi.org/10.14428/esann/2023.ES2023-13  Abstract:   
  Subgraph-enhanced graph neural networks (SGNN) can increase the expressive power of the standard message-passing framework. This model family represents each graph as a collection of subgraphs, generally extracted by random sampling or with hand-crafted heuristics. Our key observation is that by selecting "meaningful" subgraphs, besides improving the expressivity of a GNN, it is also possible to obtain interpretable results. For this purpose, we introduce a novel framework that jointly predicts the class of the graph and a set of explanatory sparse subgraphs, which can be analyzed to understand the decision process of the classifier. The subgraphs produced by our framework allow to achieve comparable performance in terms of accuracy, with the additional benefit of providing explanations.  Download manuscript    

  Quantum Artificial Intelligence  
  Quantum Artificial Intelligence: A tutorial   
  José D. Martín-Guerrero, Lucas Lamata, Thomas Villmann  
  https://doi.org/10.14428/esann/2023.ES2023-2  Abstract:   
  Artificial Intelligence (AI), a discipline with decades of history, is living its golden era due to striking developments that solve problems that were unthinkable just a few years ago, like generative models of text, images and video. The broad range of AI applications has also arrived to Physics, providing solutions to bottleneck situations, e.g., numerical methods that could not solve certain problems or took an extremely long time, optimization of quantum experimentation, or qubit control. Besides, Quantum Computing has become extremely popular for speeding up AI calculations, especially in the case of data-driven AI, i.e., Machine Learning (ML). The term Quantum ML is already known and deals with learning in quantum computers or quantum annealers, quantum versions of classical ML models and different learning approaches for quantum measurement and control. Quantum AI (QAI) tries to take a step forward in order to come up with disruptive concepts, such as, human-quantum-computer interfaces, sentiment analysis in quantum computers or explainability of quantum computing calculations, to name a few. This special session includes five high-quality papers on relevant topics, like quantum reinforcement learning, parallelization of quantum calculations, quantum feature selection and quantum vector quantization, thus capturing the richness and variability of approaches within QAI.  Download manuscript    

 Quantum Feature Selection with Variance Estimation   
  Alessandro Poggiali, Anna Bernasconi, Alessandro Berti, Gianna Del Corso, Riccardo Guidotti  
  https://doi.org/10.14428/esann/2023.ES2023-99  Abstract:   
  The promise of quantum computation to achieve a speedup over classical computation led to a surge of interest in exploring new quantum algorithms for data analysis problems. Feature Selection, a technique that selects the most relevant features from a dataset, is a critical step in data analysis. With several Quantum Feature Selection techniques proposed in the literature, this study exhibits the potential of quantum algorithms to enhance Feature Selection and other tasks that leverage the variance. This study proposes a novel quantum algorithm for estimating the variance over a set of real data. Importantly, after state preparation, the algorithm’s complexity exhibits logarithmic characteristics in both its width and depth. The quantum algorithm applies to the Feature Selection problem by designing a Hybrid Quantum Feature Selection (HQFS) algorithm. This work showcases an implementation of HQFS and assesses it on two synthetic datasets and a real dataset.  Download manuscript    

 Logarithmic Quantum Forking   
  Alessandro Berti  
  https://doi.org/10.14428/esann/2023.ES2023-93  Abstract:   
  Quantum algorithms evolve an initial quantum state into another during computation to obtain meaningful results. However, this evolution introduces the cost of re-preparing the same initial quantum state for different tasks. Unfortunately, since quantum memory is not yet available, this cost cannot be ignored in Quantum Artificial Intelligence (QAI), where the initial quantum state typically coincides with a quantum dataset. Redundant state preparations for different tasks on the same dataset can reduce the advantages of quantum computation. To address this issue, this work proposes a new technique: the Logarithmic Quantum Forking (LQF). LQF performs state preparation for an initial quantum state once and employs additional qubits to compute an exponential number of tasks over the initial quantum state. LQF enables more efficient use of quantum computation in QAI by amortizing the cost of preparing the initial quantum state.  Download manuscript    

 Quantum-ready vector quantization: Prototype learning as a binary optimization problem   
  Alexander Engelsberger, Thomas Villmann  
  https://doi.org/10.14428/esann/2023.ES2023-108  Abstract:   
  Quantum Computing Research proposed strategies to solve binary optimization problems. Application on current and near-term generation Hardware is possible. Even if computational benefits of the strategies are yet to be shown, we want to explore connections to prototype learning schemes. We examine cost functions for vector quantization based on data point selection and how they can be transformed into a common quadratic unconstrained binary optimization formulation (QUBO). There are different approaches for solving QUBO problems using quantum computer or quantum annealer hardware. We look at their current limits and how they might change.  Download manuscript    

 Potential analysis of a Quantum RL controller in the context of autonomous driving   
  M. Lautaro Hickmann, Arne Raulf, Frank Köster, Friedhelm Schwenker, Hans-Martin Rieser  
  https://doi.org/10.14428/esann/2023.ES2023-22  Abstract:   
  The potential of quantum enhanced Q-learning with a focus on its applicability to a lane change manoeuvre is investigated. In this context we solve multiple simple reinforcement learning environments using variational quantum circuits. The achieved results were similar to or even better than those of a simple constrained classical agent. We could observe promising behaviour on the more complex lane change manoeuvre task, which has an environment with an observation vector size twice larger than commonly used ones. For the Frozen Lake environment we found indications of possible quantum advantages in convergence rate.  Download manuscript    

  Green Machine Learning  
  Green Machine Learning   
  Verónica Bolón-Canedo, Laura Morán-Fernández, Brais Cancela, Amparo Alonso-Betanzos  
  https://doi.org/10.14428/esann/2023.ES2023-3  Abstract:   
  Green machine learning refers to research that is more environmentally friendly and inclusive, not only by producing novel results without increasing the computational cost, but also by ensuring that any researcher with a laptop has the opportunity to perform high-quality research without the need to use expensive cloud servers. Efficient machine learning approaches (especially deep learning) are starting to receive some attention in the research community. This tutorial is concerned with the development of machine learning algorithms that optimize efficiency rather than only accuracy. We provide an overview of this recent field, together with a review of the novel contributions to the ESANN 2023 special session on Green Machine Learning.  Download manuscript    

 Logarithmic division for green feature selection: an information-theoretic approach   
  Samuel Suárez-Marcote, Laura Morán-Fernández, Verónica Bolón-Canedo  
  https://doi.org/10.14428/esann/2023.ES2023-77  Abstract:   
  Feature selection is a popular preprocessing step to reduce the dimensionality of the data while preserving the important information. In this paper we propose an efficient and green feature selection method based on information theory, with the novelty of using the logarithmic division and resort to fixed-point precision. The results of experiments conducted on several datasets indicate the potential of our proposal, as it does not incur in significant information loss compared to the standard method, both in the features selected and in the subsequent classification step. This finding opens up possibilities for a new family of green feature selection methods, which would help to minimize energy consumption and carbon emissions.  Download manuscript    

 Efficient feature selection for domain adaptation using Mutual Information Maximization   
  Guillermo Castillo García, Laura Morán-Fernández, Verónica Bolón-Canedo  
  https://doi.org/10.14428/esann/2023.ES2023-61  Abstract:   
  Green AI, an emerging research field, focuses on improving the efficiency of machine learning models. In this paper, we introduce a novel and efficient method for feature selection in domain adaptation, a type of transfer learning where the source and target domains share the feature space and task but differ in their distributions. Instead of using evolutionary algorithms, a typical approach in this field, we propose the use of filter methods, which do not require an iterative search process and are less computationally expensive. Our proposed method is Mutual Information Maximization, and our experiments show that it outperforms Particle Swarm Optimization in terms of efficiency, speed, and the ability to select a reduced subset of features while achieving competitive classification accuracy results.  Download manuscript    

 Automated green machine learning for condition-based maintenance   
  Afonso Lourenco, Carolina Ferraz, Jorge Meira, Goreti Marreiros, Verónica Bolón-Canedo, Amparo Alonso-Betanzos  
  https://doi.org/10.14428/esann/2023.ES2023-85  Abstract:   
  Within the big data paradigm, there is an increasing demand for machine learning with automatic configuration of hyperparameters. Although several algorithms have been proposed for automatically learning time-changing concepts, they generally do not scale well to very large databases. In this context, this paper presents an automated green machine learning approach applied to condition-based maintenance with automatic data fusion and density-based anomaly detection based on locality sensitivity hashing. Experiments on numerical simulations of train-track dynamic interactions demonstrate the utility of the approach to detect railway wheel out-of-roundness. This unlocks the full potential of scalable machine learning, paving the way for environment-friendly systems and automated decision-making.  Download manuscript    

 Multispectral Texture Classification in Agriculture   
  Mariya Shumska, Kerstin Bunte  
  https://doi.org/10.14428/esann/2023.ES2023-110  Abstract:   
  Texture classification plays an important role in different domains including agricultural applications, where unmanned vehicles such as drones equipped with multispectral sensors are gaining more attention. Hence, a solution which does not require substantial computational resources is desired for real-time monitoring. In this contribution, we propose an efficient and interpretable Generalized Matrix Learning Vector Quantization based framework to classify multispectral images. We demonstrate the performance of different model designs and compare them to other benchmarks for the classification of a soil data set. Our framework yields comparable accuracy while providing interpretable results.  Download manuscript    

  Reinforcement learning and Evolutionary computation  
  DEFENDER: DTW-Based Episode Filtering Using Demonstrations for Enhancing RL Safety   
  André Correia, Luís Alexandre  
  https://doi.org/10.14428/esann/2023.ES2023-97  Abstract:   
  Deploying reinforcement learning agents in the real world can be challenging due to the risks associated with learning through trial and error. We propose a task-agnostic method that leverages small sets of safe and unsafe demonstrations to improve the safety of RL agents during learning. The method compares the current trajectory of the agent with both sets of demonstrations at every step, and filters the trajectory if it resembles the unsafe demonstrations. We perform ablation studies on different filtering strategies and investigate the impact of the number of demonstrations on performance. Our method is compatible with any stand-alone RL algorithm and can be applied to any task. We evaluate our method on three tasks from OpenAI Gym's Mujoco benchmark and two state-of-the-art RL algorithms. The results demonstrate that our method significantly reduces the crash rate of the agent while converging to, and in most cases even improving, the performance of the stand-alone agent.  Download manuscript    

 Automatic Trade-off Adaptation in Offline RL   
  Phillip Swazinna, Steffen Udluft, Thomas Runkler  
  https://doi.org/10.14428/esann/2023.ES2023-46  Abstract:   
  Recently, offline RL algorithms have been proposed that remain adaptive at runtime. For example, the LION algorithm [1] provides the user with an interface to set the trade-off between behavior cloning and optimality w.r.t. the estimated return at runtime. Experts can then use this interface to adapt the policy behavior according to their preferences and find a good trade-off between conservatism and performance optimization. Since expert time is precious, we extend the methodology with an autopilot that automatically finds the best parameterization of the trade-off, yielding a new algorithm which we term AutoLION.  Download manuscript    

 Enhancing Evolution Strategies with Evolution Path Bias   
  Oliver Kramer  
  https://doi.org/10.14428/esann/2023.ES2023-15  Abstract:   
  Evolution Strategies (ES) have emerged as a powerful and effective method for optimization and reinforcement learning tasks, largely due to their simplicity and scalability. However, current ES techniques can be limited in their capacity to quickly converge on the optimal solution. In this paper, we propose a novel approach to enhance ES by incorporating an evolution path-informed bias in the Gaussian mutation operator. This bias is designed to facilitate faster descent on decreasing functions. Our method leverages the evolution path, which represents the historical search directions, to intelligently bias the Gaussian mutation. By doing so, it enables the algorithm to be more sensitive to the underlying function's structure and adaptively exploit this information for more efficient exploration. We validate our approach through experiments on three benchmark functions: a linear function, we call Downhill function here, a Parabolic ridge, and a Sphere function. The results demonstrate that our evolution path-informed bias significantly accelerates convergence on in most of the cases.  Download manuscript    

 Multi-Fidelity Reinforcement Learning with Control Variates   
  Sami Khairy, Prasanna Balaprakash  
  https://doi.org/10.14428/esann/2023.ES2023-181  Abstract:   
  In this paper, we investigate reinforcement learning (RL) in multi-fidelity environments and enhance agent performance using cross-correlated data. We introduce a multifidelity estimator based on control variates to reduce variance in state-action value function estimation. By employing this estimator, we develop a multifidelity Monte Carlo RL (MFMCRL) algorithm that boosts agent learning in high-fidelity settings. Our experiments show that, given a finite high-fidelity sample budget, the MFMCRL agent outperforms an RL agent relying solely on high-fidelity interactions for policy optimization.  Download manuscript    

 Sun Tracking using a Weightless Q-Learning Neural Network   
  Guilherme Souza, Priscila Lima, Felipe França  
  https://doi.org/10.14428/esann/2023.ES2023-100  Abstract:   
  Photovoltaic(PV) systems are one of the leading technologies to address climate change. Tracking systems improve energy generation by moving the surface to follow the sun's position however, these methods do not ensure optimal results in cloudy environments. This article proposes a closed-loop control algorithm for tracking based on reinforcement learning and weightless neural networks, compared to an astrological model. The method was applied in a single PV array on a single-axis tracking system, simulated with PVLib. Results showed that the architecture could improve results in cloudy environments but not in a clear-sky situation, as expected for a first approach.  Download manuscript    

 A model-based approach to meta-Reinforcement Learning: Transformers and tree search   
  Brieuc Pinon, Raphaël Jungers, Jean-Charles Delvenne  
  https://doi.org/10.14428/esann/2023.ES2023-117  Abstract:   
  Meta-learning is a line of research that develops the ability to leverage past experiences to efficiently solve new learning problems. In the context of Reinforcement Learning (RL), meta-RL methods demonstrate a capability to learn behaviors that efficiently acquire and exploit information on a set of related tasks. The Alchemy benchmark has been proposed in [Wang & al. 2021] to test such methods. Alchemy features a rich structured latent space that is challenging for state-of-the-art model-free RL methods. These methods fail to learn to properly explore then exploit. We develop a model-based algorithm. We train a model whose principal block is a Transformer Decoder to fit the symbolic Alchemy environment dynamics. Then we define an online planner with the learned model using a tree search method. This algorithm significantly outperforms previously applied methods on the symbolic Alchemy problem. Our results reveal the relevance of model-based approaches with online planning to perform exploration and exploitation successfully in meta-RL.  Download manuscript    

 Derivative-Free Optimization Approaches for Force Polytopes Prediction   
  Gautier Laisné, Nasser Rezzoug, Jean-Marc Salotti  
  https://doi.org/10.14428/esann/2023.ES2023-122  Abstract:   
  Hand force capacities reflect an individual's ability to generate forces in all directions, considering a given upper-limb posture. These capacities are described as polytopes by means of an upper-limb musculoskeletal model. However, such a model needs to be adapted to an individual for more accuracy. The model parameter space is investigated using derivative-free algorithms which do not require the optimization function to be differentiable: genetic algorithms and SRACOS, a classification-based algorithm. Results demonstrate that employing a genetic algorithm with a reduced representation of force polytopes (26 vertices) yields the most accurate prediction of force capacities in a validation posture.  Download manuscript    

 Policy-Based Reinforcement Learning in the Generalized Rock-Paper-Scissors Game   
  Imre Gergely Mali, Gabriela Czibula  
  https://doi.org/10.14428/esann/2023.ES2023-92  Abstract:   
  The Rock-Paper-Scissors game is a popular zero-sum game of cyclic nature, with a mixed-strategy Nash-equilibrium that has been the subject of a large number of studies and is of particular interest for economy, sociology and artificial intelligence. While there are numerous studies exploring evolutionary dynamics and learning, the overwhelming majority of these consider the game in its classical form, and two important axes with potential relevance remain unexplored. First, studies with policy-based reinforcement algorithms are lacking, and second, few existing investigations attempted to study such cyclic games with more than two players. The present work aims to address both of these matters.  Download manuscript    

  Classification  
  Performance Evaluation of Activation Functions in Extreme Learning Machine   
  Karol Struniawski, Aleksandra Konopka, Ryszard Kozera  
  https://doi.org/10.14428/esann/2023.ES2023-31  Abstract:   
  This study investigates the performance of 36 different activation functions applied in Extreme Learning Machine on 10 distinct datasets. Results show that Mish and Sexp activation functions exhibit outstanding generalization abilities and consistently perform well across most datasets, while other functions are more dependent on the characteristics of the task at hand. The selection of an activation function is intricately linked to the applied dataset and novel activation functions may possess superior generalization capabilities comparing to commonly employed alternatives. This study provides valuable insight for researchers and practitioners seeking to optimize Extreme Learning Machine performance for solving classification tasks.  Download manuscript    

 Evaluating Curriculum Learning Strategies for Pancreatic Cancer Prediction   
  Eduardo Mosqueira-Rey, David Vázquez-Lema, Elena Hernández-Pereira  
  https://doi.org/10.14428/esann/2023.ES2023-141  Abstract:   
  In this work we applied Curriculum Learning (CL) to evaluate the performance of a machine learning (ML) model for pancreatic cancer prediction. As the dataset required it, we applied missing value imputation and data augmentation techniques. We compare different curriculum configurations in terms of pacing functions and we perform different experiments concluding that CL helps to train the ML model. Nevertheless, not all the configurations behave in the same way, and the best results were obtained when organizing the curriculum in increasing levels of difficulty following exponential pacing.  Download manuscript    

 Improving the DRASiW performance by exploiting its own "Mental Images"   
  Gianluca Coda, Massimo De Gregorio, Antonio Sorgente, Paolo Vanacore  
  https://doi.org/10.14428/esann/2023.ES2023-25  Abstract:   
  Several improvements have been proposed in the literature for the Weightless Neural Networks (WNNs), in particular the DRASiW extension of the WiSARD model with the introduction of mental imagery and bleaching procedure. We propose a new bleaching procedure called Dynamic Adaptive Bleaching (DAB) and its variant, refined Dynamic Adaptive Bleaching (rDAB), to improve the WNNs performance in terms of computational time and classification capabilities.  Download manuscript    

 Efficient Knowledge Aggregation Methods for Weightless Neural Networks   
  Otávio Napoli, Ana Maria de Almeida, José Miguel Sales Dias, Luís Brás Rosário, Edson Borin, Mauricio Breternitz Jr.  
  https://doi.org/10.14428/esann/2023.ES2023-123  Abstract:   
  Weightless Neural Networks (WNN) are good candidates for Federated Learning scenarios due to their robustness and computational lightness. In this work, we show that it is possible to aggregate the knowledge of multiple WNNs using more compact data structures, such as Bloom Filters, to reduce the amount of data transferred between devices. Finally, we explore variations of Bloom Filters and found that a particular data-structure, the Count-Min Sketch (CMS), is a good candidate for aggregation. Costing at most 3% of accuracy, CMS can be up to 3x smaller when compared to previous approaches, specially for large datasets.  Download manuscript    

 Learning Vector Quantization in Context of Information Bottleneck Theory   
  Mehrdad Mohannazadeh Bakhtiari, Daniel Staps, Thomas Villmann  
  https://doi.org/10.14428/esann/2023.ES2023-95  Abstract:   
  This paper is an effort to parameterize Information Bottle-neck Theory to become a supervised classifier. We introduce a parametrization by means of Learning Vector Quantization. With this new approach, one can find suitable components that are necessary for an accurate, yet efficient, classification. A balance between compression and representation is made by means of a specially designed objective function.  Download manuscript    

 SOM-based Classification and a Novel Stopping Criterion for Astroparticle Applications   
  Luis Sanchez, Erzsébet Merényi, Christopher Tunnell  
  https://doi.org/10.14428/esann/2023.ES2023-177  Abstract:   
  Classification of detector signals is vital in particle physics experiments. However, the intricate spatiotemporal nature of the data and instrumentation effects make accurate classification challenging. In this study, we apply a Conscious Self-Organizing Map to data from the XENONnT experiment to identify clusters in the data. We evaluate the resulting clusters for physics interpretation, label them, and demonstrate an improvement in signal classification compared to the current method using the cluster labels. We also introduce a stopping criterion based on map quality that can help shorten long SOM training sessions.  Download manuscript    

 WiSARD-based Ensemble Learning   
  Leopoldo Lusquino Filho, Felipe França, Priscila Lima  
  https://doi.org/10.14428/esann/2023.ES2023-76  Abstract:   
  Weightless neural networks are recognized for their online learning capacity and competitive performance with the state-of-the-art in different scenarios. Despite this, the literature has not adequately explored the potential of classification ensembles based on these models and their unique characteristics. This study introduces three types of ensembles based on the WiSARD weightless model and evaluates their effectiveness. The results show that these ensembles significantly improve accuracy compared to the WiSARD model and its ClusWiSARD extension, with a reasonable increase in computational cost. Furthermore, using ensembles eliminates the need for time-consuming tie-break policies of traditional WiSARD models.  Download manuscript    

  Deep learning and Computer vision  
  Entropy Based Regularization Improves Performance in the Forward-Forward Algorithm   
  Matteo Pardi, Domenico Tortorella, Alessio Micheli  
  https://doi.org/10.14428/esann/2023.ES2023-79  Abstract:   
  The forward-forward algorithm (FFA) is a recently proposed alternative to end-to-end backpropagation in deep neural networks. FFA builds networks greedily layer by layer, thus being of particular interest in applications where memory and computational constraints are important. In order to boost layers' ability to transfer useful information to subsequent layers, in this paper we propose a novel regularization term for the layer-wise loss function that is based on Renyi's quadratic entropy. Preliminary experiments show accuracy is generally significantly improved across all network architectures. In particular, smaller architectures become more effective in addressing our classification tasks compared to the original FFA.  Download manuscript    

 On the number of latent representations in deep neural networks for tabular data   
  Edouard Couplet, Pierre Lambert, Michel Verleysen, Lee John, Cyril de Bodt  
  https://doi.org/10.14428/esann/2023.ES2023-156  Abstract:   
  Most recent deep neural network architectures for tabular data operate at the feature level and process multiple latent representations simultaneously. While the dimension of these representations is set through hyper-parameter tuning, their number is typically fixed and equal to the number of features in the original data. In this paper, we explore the impact of varying the number of latent representations on model performance. Our results suggest that increasing the number of representations beyond the number of features can help capture more complex interactions, whereas reducing their number can improve performance in cases where there are many uninformative features.  Download manuscript    

 CRE: Circle relationship embedding of patches in vision transformer   
  Zhengyang Yu, Jochen Triesch  
  https://doi.org/10.14428/esann/2023.ES2023-75  Abstract:   
  The vision transformer (ViT) utilizes a learnable position embedding (PE) to encode the location of an image patch. However, it is unclear if this learnable PE is vital and what its benefits are. This paper explores an alternative way of encoding patch locations that exploits prior knowledge about their spatial arrangement called circle relationship embedding (CRE). CRE considers the central patch as the center of a circle and measures the distance of remaining image patches from the center based on the four-neighborhood. Our experiments show that combining CRE with PE achieves better performance than using PE alone.  Download manuscript    

 Introducing Convolutional Channel-wise Goodness in Forward-Forward Learning   
  Andreas Papachristodoulou, Christos Kyrkou, Stelios Timotheou, Theocharis Theocharides  
  https://doi.org/10.14428/esann/2023.ES2023-121  Abstract:   
  This paper introduces a Channel-wise Goodness Function (CWG) that enhances the Forward-Forward through the use of Convolutional Neural Networks. The CWG function facilitates simultaneous feature extraction and separation, eliminating the requirement for constructing negative data and leading to faster convergence rates. The approach employs a two-component loss function that maximizes positive goodness and minimizes negative goodness. This enables the model to learn class-specific features to outperform recent non-backpropagation approaches on basic image classification datasets and shorten the gap with the well-established backpropagation methods.  Download manuscript    

 An Alternating Minimization Algorithm with Trajectory for Direct Exoplanet Detection   
  Hazan Daglayan, Simon Vary, Pierre-Antoine Absil  
  https://doi.org/10.14428/esann/2023.ES2023-137  Abstract:   
  Effective image post-processing algorithms are vital for the successful direct imaging of exoplanets. Existing algorithms use techniques based on a low-rank approximation to separate the rotating planet signal from the quasi-static speckles. In this paper, we present a novel approach that iteratively finds the planet’s flux and the low-rank approximation of quasi-static signals, strengthening the existing model based on low-rank approximations. We implement the algorithm with two different norms and test it on data, showing improvement over classical low-rank approaches. Our results highlight the benefits of iterative refinement of low-rank approximation to enhance planet detection.  Download manuscript    

 On Transformer Autoregressive Decoding for Multivariate Time Series Forecasting   
  Mohammed Aldosari, John Miller  
  https://doi.org/10.14428/esann/2023.ES2023-171  Abstract:   
  The success of the Transformer model has promoted recent advances in time series forecasting. This adoption sparked an interest in developing efficient Transformer models that scale well for forecasting long sequences. This involves maintaining non-autoregressive one-time decoding. However, the role of autoregressive decoding is less explored. To address this gap, we revisit an essential idea of the vanilla Transformer model and show that autoregressive decoding works well compared to non-autoregressive decoding using teacher forcing. It also becomes vital for critical forecasting tasks, such as pandemic forecasting, where the stakes are high. Our code and data are publicly available at https://github.com/maldosari1/ar_transformer_tf.  Download manuscript    

 Don’t waste SAM   
  Nermeen Abou Baker, Uwe Handmann  
  https://doi.org/10.14428/esann/2023.ES2023-116  Abstract:   
  Meta AI has recently released the Segment Anything Model (SAM), which demonstrates exceptional zero-shot image segmentation performance across various tasks with remarkable accuracy. Despite its inability to provide accurate segmentation across multiple research fields, SAM still serves as a valuable starting point for supporting the segmentation pipeline process, particularly for tasks that require extensive and senior skills annotations. This study aims to evaluate the generalization of SAM and fine-tuning SAM models using three waste segmentation datasets. Although they are captured from real scenes as SAM was pretrained on, these datasets present several challenges, including occlusions, deformable objects, transparency, and objects easily confused with backgrounds. In our findings, the fine-tuned SAM-ViT-H model outperforms the state-of-the-art Zerowaste, and TACO datasets with a significant increase of +30 in IoU, and it closely approaches performance levels of TrashCan 1.0, with only a -1.44 difference. After evaluating these popular waste datasets, it became evident that fine-tuning SAM as a foundational model is a crucial step for providing better generalization for downstream waste segmentation tasks. Therefore, SAM should not be disregarded or wasted.  Download manuscript    

 Layered Neural Networks with GELU Activation, a Statistical Mechanics Analysis   
  Frederieke Richert, Michiel Straat, Elisa Oostwal, Michael Biehl  
  https://doi.org/10.14428/esann/2023.ES2023-72  Abstract:   
  Understanding the influence of activation functions on the learning behaviour of neural networks is of great practical interest. The GELU, being similar to swish and ReLU, is analysed for soft committee machines in the statistical physics framework of off-line learning. We find phase transitions with respect to the relative training set size, which are always continuous. This result rules out the hypothesis that convex activation functions cause continuous phase transitions, as e.g. for the ReLU. Moreover, we show that even a small contribution of a sigmoidal function like erf in combination with GELU leads to a discontinuous transition.  Download manuscript    

 Real-time Detection of Evoked Potentials by Deep Learning: a Case Study   
  Leonardo Amato, Marta Maschietto, Alessandro Leparulo, Mattia Tambaro, Stefano Vassanelli, Alessandro Sperduti  
  https://doi.org/10.14428/esann/2023.ES2023-101  Abstract:   
  In Local Field Potential (LFP) recordings it is hard to distinguish Evoked Potentials (EPs) from spontaneous activity. Automatic real-time detection of all EPs in a recording would enable the deployment of neuromorphic prostheses. In this paper, we present a case study involving EPs induced by stimulation of a whisker in rats. We compare the detection performance of three deep learning models: a Temporal Convolutional Network, a Recurrent Neural Network, and a Mixed model. A data augmentation technique for LFP data and a technique to learn the delay of causal models are proposed. Experimental results show that the three deep learning models are capable of detecting most EPs with few false positives, a delay of less than 100ms, and for a pruned TCN, using only 1,282 parameters.  Download manuscript    

 Coordinate descent on the Stiefel manifold for deep neural network training   
  Estelle Massart, Vinayak Abrol  
  https://doi.org/10.14428/esann/2023.ES2023-143  Abstract:   
  To alleviate the cost incurred by orthogonality constraints in optimization and model training, we propose a stochastic coordinate descent algorithm on the Stiefel manifold. We compute expressions for geodesics on the Stiefel manifold with initial velocity aligned with coordinates of the tangent space and show that, analogously to the orthogonal group, iterate updates of coordinate descent methods can be efficiently implemented in terms of multiplications by Givens matrices. We illustrate our proposed algorithm on deep neural network training  Download manuscript    

 Action-Based ADHD Diagnosis in Video   
  Yichun Li, Yuxing Yang, Rajesh Nair, Mohsen Naqvi  
  https://doi.org/10.14428/esann/2023.ES2023-17  Abstract:   
  Attention Deficit Hyperactivity Disorder (ADHD) causes significant impairment in various domains. Early diagnosis of ADHD and treatment could significantly improve the quality of life and functioning. Recently, machine learning methods have improved the accuracy and efficiency of the ADHD diagnosis process. However, the cost of the equipment and trained staff required by the existing methods are generally huge. Therefore, we introduce the video-based frame-level action recognition network to ADHD diagnosis for the first time. We also record a real multi-modal ADHD dataset and extract three action classes from the video modality for ADHD diagnosis. The whole process data have been reported to CNTW-NHS Foundation Trust, which would be reviewed by medical consultants/professionals and will be made public in due course.  Download manuscript    

 Hierarchical priors for Hyperspherical Prototypical Networks   
  Samuele Fonio, Lorenzo Paletto, Mattia Cerrato, Dino Ienco, Roberto Esposito  
  https://doi.org/10.14428/esann/2023.ES2023-65  Abstract:   
  In this paper, we explore the usage of hierarchical priors to improve learning in contexts where the number of available examples is extremely low. Specifically, we consider a Prototype Learning setting where deep neural networks are used to embed data in hyperspherical geometries. In this scenario, we propose an innovative way to learn the prototypes by combining class separation and hierarchical information. In addition, we introduce a contrastive loss function capable of balancing the exploitation of prototypes through a prototype pruning mechanism. We compare the proposed method with state-of-the-art approaches on two public datasets.  Download manuscript    

 Segmentation and Analysis of Lumbar Spine MRI Scans for Vertebral Body Measurements   
  Helen Schneider, David Biesner, Akash Ashokan, Maximilian Broß, Rebecca Kador, Sandra Halscheidt, Gabor Bagyo, Peter Dankerl, Haissam Ragab, Jin Yamamura, Christoph Labisch, Rafet Sifa  
  https://doi.org/10.14428/esann/2023.ES2023-88  Abstract:   
  This paper investigates a data- and knowledge-driven approach to auto- matically analyze lumbar MRI scans. The dataset used is an in-house dataset of 142 sagital lumbar spine images from German radiology prac- tices of the evidia GmbH. We implement state-of-the-art deep learning methods to segment the individual vertebral bodies. Overall, a very accu- rate segmentation performance of 97% Dice Score was achieved. Based on this segmentation, pathologically relevant distances are calculated using rule-based computer vision methods. We focus on the anterior, posterior and middle height of a vertebra and the anterior and posterior distances between two lumbar vertebrae. We demonstrate the clinical value of this approach through a quantitative and qualitative result analysis.  Download manuscript    

 Retinal blood vessel segmentation from high resolution fundus image using deep learning architecture   
  henda boudegga, Yaroub Elloumi, Asma Ben Abdallah, Rostom Kachouri, Mouhamed hédi Bedoui  
  https://doi.org/10.14428/esann/2023.ES2023-180  Abstract:   
  The Retinal Vascular Tree (RVT) segmentation is required to diagnose various ocular pathologies. Recently, fundus images are acquired with higher resolution, which allows representing a large range of vessel thickness. However, standard Deep Learning (DL) architectures with static and small convolution size have failed to achieve higher segmentation performance. In this paper, we propose a novel DL architecture for RVT segmentation dedicated for high resolution fundus images. The idea consists at extending the U-net architecture by increasing (e.g. decreasing) convolution kernel size through convolution blocs, in correlation with downscale (e.g. upscale) of feature map dimensions. The proposed architecture is validated on HRF database, where average sensitivity is increased from 56% to 84%.  Download manuscript    

 Graph for Transformer Feature: A New Approach for Face Anti-Spoofing   
  Quoc-Huy Trinh, Hieu Nguyen, Van Nguyen, Xuan-Mao Nguyen, Hai-Dang Nguyen  
  https://doi.org/10.14428/esann/2023.ES2023-14  Abstract:   
  Face recognition is popular nowadays, however, Face anti-spoofing (FAS) poses a significant challenge for recognition systems due to the threat of external attacks. While many deep learning methods have been proposed to address this issue, they often face challenges in industry settings. Experiments found that patch extraction modules, such as the Vision Transformer and Swin Transformer, are effective for FAS in single images and perform well in industrial environments. From this point, we propose a model that leverages Transformer features and Graph Neural Networks to learn global information and identify correlations between patch features, which are critical for FAS.  Download manuscript    

 Temporal Ensembling-based Deep k-Nearest Neighbours for Learning with Noisy Labels   
  Alexandra-Ioana Albu  
  https://doi.org/10.14428/esann/2023.ES2023-144  Abstract:   
  Label noise can significantly affect the generalization of deep neural networks. Nevertheless, it is omnipresent in real world applications. This paper introduces an approach for identifying the samples from a dataset which are likely to have correct annotations. The proposed method computes the agreement of a sample with its nearest neighbours retrieved from the feature space provided by a neural network. We introduce a temporal ensembling strategy which takes into account the agreement scores obtained by a sample during previous training epochs. The superiority of our approach over several baselines is shown on image classification datasets.  Download manuscript    

 Evaluation of Contrastive Learning for Electronic Component Detection   
  Leandro Silva, Agostinho Junior, Bruno Fernandes, George Azevedo, Sérgio Oliveira  
  https://doi.org/10.14428/esann/2023.ES2023-167  Abstract:   
  The rapid growth of electronic waste (e-waste) has led to an urgent need for efficient recycling processes to recover valuable materials and reduce environmental impact. Waste Printed Circuit Boards (WPCBs) constitute significant e-waste and contain valuable components and precious metals. Computer vision systems can automate the classification, disassembly, and recycling of WPCBs. However, obtaining large annotated datasets for machine learning in this domain is costly and often unavailable. This paper investigates using few-shot and supervised contrastive learning in electronic component detection. We propose a model incorporating contrastive learning components for detecting electronic components in scenarios with limited training data or annotated labels. Our experimental results show that, in limited-data scenarios, contrastive learning outperforms the original versions of Faster R-CNN object detector. This study contributes to developing efficient recycling solutions for e-waste management and resource recovery.  Download manuscript    

  Sequential data, and Meta-learning  
  Revisiting the Mark Conditional Independence Assumption in Neural Marked Temporal Point Processes   
  Tanguy Bosser, Souhaib Ben Taieb  
  https://doi.org/10.14428/esann/2023.ES2023-64  Abstract:   
  Learning marked temporal point process (TPP) models involves modeling both the event arrival times as well as their associated labels, referred to as marks. The recent introduction of deep learning techniques to the field led to better modeling of event sequences thanks to more flexible neural TPP models. However, some of these models make the assumption that event marks are independent of event times given the history of the process, which may not be valid in many applications. We relax this assumption and explicitly parametrize the mark distribution as a function of the current event time. We show that our approach achieves improved performance in predicting future marks compared to baselines on multiple real-world event sequence datasets, without affecting the performance on event time prediction.  Download manuscript    

 A Protocol for Continual Explanation of SHAP   
  Andrea Cossu, Francesco Spinnato, Riccardo Guidotti, Davide Bacciu  
  https://doi.org/10.14428/esann/2023.ES2023-41  Abstract:   
  Continual Learning trains a model on a stream of data, with the aim of learning new information without forgetting previous knowledge. We study the behavior of SHAP values explanations in Continual Learning and propose an evaluation protocol to robustly assess the change of explanations in Class-Incremental scenarios. We observed that, while Replay strategies enforce the stability of SHAP values in feedforward/convolutional models, they are not able to do the same with fully-trained recurrent models. We show that alternative approaches, like randomized recurrent models, are more effective in keeping the explanations stable over time.  Download manuscript    

 Residual Reservoir Computing Neural Networks for Time-series Classification   
  Claudio Gallicchio, Andrea Ceni  
  https://doi.org/10.14428/esann/2023.ES2023-112  Abstract:   
  We introduce a novel class of Reservoir Computing (RC) models, a family of efficiently trainable Recurrent Neural Networks based on untrained connections. Aiming to improve the forward propagation of input information through time, we augment standard Echo State Networks (ESNs) with linear reservoir-skip connections modulated by an untrained orthogonal weight matrix. We analyze the mathematical properties of the resulting reservoir systems and show that the dynamical regime of the proposed class of models is controllably close to the edge of stability. Experiments on several time-series classification tasks highlight the striking performance advantage of the proposed approach over standard ESNs.  Download manuscript    

 Probabilistic Adaptation for Meta-Learning   
  Tameem Adel  
  https://doi.org/10.14428/esann/2023.ES2023-48  Abstract:   
  Meta-learning models learn to generalise to unseen tasks at test time. We introduce a meta-learning algorithm which balances (global) generalisation with a (local) adaptive mechanism allowing the meta-learner to deal with potentially substantial heterogeneity in the task distribution. The proposed meta-learner flexibly consolidates shared components (responsible for generalisation) with task-specific components. The latter components are adapted, in a data-driven manner, based on estimating the similarity between the meta-test task in hand and the training tasks. Experiments demonstrate improved performance on few-shot learning benchmarks, both general and others involving a more heterogeneous set of tasks.  Download manuscript    

 A hidden Markov model with Hawkes process-derived contextual variables to improve time series prediction. Case study in medical simulation.   
  Fatoumata Dama, Christine Sinoquet, Corinne Lejus-Bourdeau  
  https://doi.org/10.14428/esann/2023.ES2023-57  Abstract:   
  So far, models that take advantage of sequences of events to refine time series prediction have only been designed for specific applications. In this paper, we introduce the Non-Homogeneous Markov Chain AutoRegressive (NHMC-AR) model. In our model, the innovation arises from the synchronization of a multivariate Hawkes temporal point process with an autoregressive first-order hidden Markov model, through contextual variables. Experiments on anaesthesia data demonstrate that NHMC-AR has substantially better predictive performance compared to two competing methods.  Download manuscript    

 Deep dynamic co-clustering of streams of count data: a new online Zip-dLBM   
  Giulia Marchello, Marco Corneli, Charles Bouveyron  
  https://doi.org/10.14428/esann/2023.ES2023-86  Abstract:   
  Co-clustering is a technique used to analyze complex and high-dimensional data in various fields. However, traditional co-clustering methods are usually limited to dense data sets and require massive amount of memory, which can be limiting in some applications. To address this issue, we propose an online co-clustering model that processes the data incrementally and introduces a novel latent block model for sparse data matrices. The proposed model employs a LSTM neural network and a time and block dependent mixture of zero-inflated distributions to model sparsity and aims to detect real-time changes in dynamics through Bayesian online change point detection. An original variational procedure is proposed for inference. Simulations demonstrate the effectiveness of the methodology for count data.  Download manuscript    

 Communication-Efficient Ridge Regression in Federated Echo State Networks   
  Valerio De Caro, Antonio Di Mauro, Davide Bacciu, Claudio Gallicchio  
  https://doi.org/10.14428/esann/2023.ES2023-87  Abstract:   
  Federated Echo State Networks represent an efficient methodology for learning in pervasive environments with private temporal data due to the low computational cost required by the learning phase. In this paper, we propose Partial Federated Ridge Regression (pFedRR), an approximate, communication-efficient version of the exact method for learning the readout in a federated setting. Each client compresses the local statistics to be exchanged with the server via an importance-based method, which selects the most relevant neurons with respect to the local distribution. We evaluate the methodology on two Human State Monitoring benchmarks, in comparison with the exact method and a communication-efficient method that randomly selects the information to exchange. Results show that the importance-based selection of the information significantly reduces the communication cost, and fosters the generalization capabilities in the face of statistical heterogeneity across clients.  Download manuscript    

 Simultaneous failures classification in a predictive maintenance case   
  Antoine Hubermont, elio tuci, Nicola De Quattro  
  https://doi.org/10.14428/esann/2023.ES2023-129  Abstract:   
  In industry 4.0, Machine Learning coupled with sensors monitoring leverages new ways to optimise maintenance strategies. In a predictive maintenance case, failure diagnoses are an excellent way to prevent any breakdowns. Up to now, failure diagnoses are focused on the classification of only one failure among many (multi-label classification), even if multiple failures can occur simultaneously. This study proposes an extension to classify simultaneous failures with the most popular classification methods such as random forests or artificial neural networks. Validated on a public predictive maintenance dataset, our methodology achieved classification with equal or best accuracy compared to multi-label classification.  Download manuscript    

 Hybrid modelling of dynamic anaerobic digestion process in full-scale with LSTM NN and BMP measurements   
  Alberto Meola, Sören Weinrich  
  https://doi.org/10.14428/esann/2023.ES2023-133  Abstract:   
  Machine learning algorithms allow an accurate description of the anaerobic digestion process, but they are not applied in full-scale reactors due to the lack of physicochemical reliabilty. A hybrid model combining biomethane potential (BMP) tests data and a long short-term memory (LSTM) neural network was developed for providing previous knowledge to the neural network and improving performances. Results show that the best model configuration can predict the methane yield with a 6-hours resolution 1 day in advance with a Root Mean Square Scaled Error (RMSSE) of 36%, compared to an RMSSE of 41% obtained by the pure LSTM model configuration  Download manuscript    

 Wind Power Prediction with ETSformer   
  Oliver Kramer, Jill Baumann  
  https://doi.org/10.14428/esann/2023.ES2023-173  Abstract:   
  With growing environmental awareness, power generation from wind and other renewable sources is becoming increasingly important. Accurate short-term predictions of wind turbine power are needed to keep the grid stable and secure. This paper investigates the use of ETSformer, a new deep learning method based on a time series transformer architecture, for wind power prediction. ETSformer incorporates exponential smoothing principles and introduces mechanisms such as exponential smoothing attention and frequency attention to improve accuracy, efficiency and interpretability. This study compares ETSformer and LSTM on a sample dataset of a wind farm and its surrounding sites within a three kilometer radius from the Wind Integration National Dataset Toolkit with five minute interval measurements. The investigation shows promising results and improvements of ETSformer in ultra-short and short-term wind power prediction.  Download manuscript    

 Is One Epoch All You Need For Multi-Fidelity Hyperparameter Optimization?   
  Romain Egele, Isabelle Guyon, Yixuan Sun, Prasanna Balaprakash  
  https://doi.org/10.14428/esann/2023.ES2023-84  Abstract:   
  Hyperparameter optimization (HPO) is essential to adjust machine learning models. However, it can be computationally expensive. To reduce costs, Multi-fidelity HPO (MF-HPO) uses intermediate accuracy and discards low-performing models. Numerous methods have been proposed, but determining the most effective one remains unclear. In this study, we compared popular methods against a simple baseline of training for 1-Epoch using different benchmarks. Surprisingly, the baseline demonstrated unexpectedly good performance, achieving similar accuracy with approximately ten times fewer training epochs. Analysis of the learning curves from these benchmarks suggests the need to increase the diversity of MF-HPO benchmarks to include cases of "short-term horizon bias".  Download manuscript    

  Machine Learning Applied to Sign Language  
  Trends and Challenges for Sign Language Recognition with Machine Learning   
  Jérôme Fink, Mathieu De Coster, Joni Dambre, Benoit Frénay  
  https://doi.org/10.14428/esann/2023.ES2023-7  Abstract:   
  Research in natural language processing has led to the creation of powerful tools for individuals, companies... However, these successes for written languages have not yet affected signed languages (SLs) to the same extent. The creation of similar tools for signed languages would benefit deaf, hard of hearing, and hearing people by making SL content, learning, and communication more accessible for everyone. SL recognition and translation are related to AI, but require collaboration with linguists and stakeholders. This paper describes related challenges from an AI researcher's point of view and summarizes the state of the art in these domains.  Download manuscript    

 Multimodal Recognition of Valence, Arousal and Dominance via Late-Fusion of Text, Audio and Facial Expressions   
  Fabrizio Nunnari, Annette Rios, Uwe Reichel, Chirag Bhuvaneshwara, Panagiotis Filntisis, Petros Maragos, Felix Burkhardt, Florian Eyben, Björn Schuller, Sarah Ebling  
  https://doi.org/10.14428/esann/2023.ES2023-128  Abstract:   
  We present an approach for the prediction of valence, arousal, and dominance of people communicating via text/audio/video streams for a translation from and to sign languages. The approach consists of the fusion of the output of three CNN-based models dedicated to the analysis of text, audio, and facial expressions. Our experiments show that any combination of two or three modalities increases prediction performance for valence and arousal.  Download manuscript    

 Exploring Strategies for Modeling Sign Language Phonology   
  Lee Kezar, Tejas Srinivasan, Riley Carlin, Jesse Thomason, Zed Sevcikova Sehyr, Naomi Caselli  
  https://doi.org/10.14428/esann/2023.ES2023-83  Abstract:   
  Like speech, signs are composed of discrete, recombinable features called phonemes. Prior work shows that models which can recognize phonemes are better at sign recognition, motivating deeper exploration into strategies for modeling sign language phonemes. In this work, we learn graph convolution networks to recognize the sixteen phoneme “types” found in ASL-LEX 2.0. Specifically, we explore how learning strategies like multi-task and curriculum learning can leverage mutually useful information between phoneme types to facilitate better modeling of sign language phonemes. Results on the Sem-Lex Benchmark show that curriculum learning yields an average accuracy of 87% across all phoneme types, outperforming fine-tuning and multi-task strategies for most phoneme types.  Download manuscript    

 Exploring the Importance of Sign Language Phonology for a Deep Neural Network   
  Javier Martinez Rodriguez, Martha Larson, Louis ten Bosch  
  https://doi.org/10.14428/esann/2023.ES2023-138  Abstract:   
  We conduct an initial investigation to gain insight into whether a deep neural network learns phonological aspects of sign language when classifying video recordings of isolated signs from a continuous signing scenario. We train a series of neural networks to distinguish pairs of signs in Dutch Sign Language, controlling the phonological difference between the signs in each pair. Our results suggest that the intrinsic dimension of the final hidden layer of a network is surprisingly insensitive to the phonological difference between the signs in a pair. However, the ability of the network to discriminate two signs shows a clear trend towards increasing with increasing phonological distinctiveness.  Download manuscript    

 Large-scale dataset and benchmarking for hand and face detection focused on sign language   
  Alvaro Leandro Cavalcante Carneiro, Denis Henrique Pinheiro Salvadeo, Lucas Brito Silva  
  https://doi.org/10.14428/esann/2023.ES2023-185  Abstract:   
  Object detection is an important preprocessing technique for sign language recognition, allowing focus on the most important parts of the image. This paper introduces a new large-scale dataset for hand and face detection in sign language context, mitigating the lack of data for this problem. We evaluated different object detection architectures to find the best trade-off between computational cost and mean Average Precision (mAP). The proposed dataset contains 477,480 annotated images. The most accurate detector (CenterNet) achieved an mAP of 96.7%. Furthermore, the optimizations made to the models reduced the inference time up to 74% in the best scenario.  Download manuscript    

 Disambiguating Signs: Deep Learning-based Gloss-level Classification for German Sign Language by Utilizing Mouth Actions   
  Dinh Nam Pham, Vera Czehmann, Eleftherios Avramidis  
  https://doi.org/10.14428/esann/2023.ES2023-168  Abstract:   
  Despite the importance of mouth actions in Sign Languages, previous work on Automatic Sign Language Recognition (ASLR) has limited use of the mouth area. Disambiguation of homonyms is one of the functions of mouth actions, making them essential for tasks involving ambiguous hand signs. To measure their importance for ASLR, we trained a classifier to recognize ambiguous hand signs. We compared three models which use the upper body/hands area, the mouth, and both combined as input. We found that the addition of the mouth area in the model resulted in the best accuracy, giving an improvement of 7.2% and 4.7% on the validation and test set, while allowing disambiguation of the hand signs for most of the cases. In cases where the disambiguation failed, it was observed that the signers in the video samples occasionally didn’t perform mouthings. In a few cases, the mouthing was enough to achieve full disambiguation of the signs. We conclude that further investigation on the modelling of the mouth region can be beneficial of future ASLR systems.  Download manuscript    

  Efficient Learning in Spiking Neural Networks  
  Efficient Learning in Spiking Models   
  Alex Rast, Mario Antoine Aoun, Eleni Elia, Nigel Crook  
  https://doi.org/10.14428/esann/2023.ES2023-1  Abstract:   
  Spiking neural networks (SNNs) form a large class of neural models distinct from ‘classical’ continuous-valued networks such as multi layer perceptrons (MLPs). With event-driven dynamics and a continuous-time model, in contrast to the discrete-time model of their classical counterparts, they offer interesting advantages in representational capacity and energy consumption. However, developing models of learning for SNNs has historically proven challenging: as continuous-time systems, their dynamics are much more complex and they cannot benefit from the strong theoretical developments in MLPs such as convergence proofs and optimal gradient descent. Nor do they gain automatically from algorithmic improvements that have produced efficient matrix inversion and batch training methods. Research has focussed largely on the most extensively studied learning mechanisms in SNNs: spike-timing-dependent plasticity (STDP). Although there has been progress here, there are also notable pathologies that have often been solved with a variety of ad-hoc techniques. A relatively recent interesting development is attempts to map classical convolutional neural networks to spiking implementations, but these may not leverage all the claimed advantages of spiking. This tutorial overview looks at existing techniques for learning in SNNs and offers some thoughts for future directions.  Download manuscript    

 Spiking neural networks with Hebbian plasticity for unsupervised representation learning   
  Naresh Balaji Ravichandran, Anders Lansner, Pawel Herman  
  https://doi.org/10.14428/esann/2023.ES2023-169  Abstract:   
  We introduce a novel spiking neural network model for learning distributed internal representations from data in an unsupervised procedure. We achieved this by transforming the non-spiking feedforward Bayesian Confidence Propagation Neural Network (BCPNN) model, employing an online correlation-based Hebbian-Bayesian learning and rewiring mechanism, shown previously to perform representation learning, into a spiking neural network with Poisson statistics and low firing rate comparable to in vivo cortical pyramidal neurons. We evaluated the representations learned by our spiking model using a linear classifier and show performance close to the non-spiking BCPNN, and competitive with other Hebbian-based spiking networks when trained on MNIST and F-MNIST machine learning benchmarks.  Download manuscript    

 Functional Resonant Synaptic Clusters for Decoding Time-Structured Spike Trains   
  Nigel Crook, Alex Rast, Eleni Elia, Mario Antoine Aoun  
  https://doi.org/10.14428/esann/2023.ES2023-142  Abstract:   
  Biological neurons communicate with each other using two broad categories of spike event coding: rate-based and temporal. Rate-based coding communicates analog information on a continuous scale through the intensity of bursts of spikes while temporal coding relies on the timing of spike events. It has been shown that temporal coding has higher information capacity than rate based coding, but is much more challenging to model due to difficulties estimating spike-time statistics. In this paper we demonstrate how historically dependent NMDA-modulated ‘resonant’ synapses organised in ‘functional synaptic clusters’ provide a robust mechanism for decoding temporally structured spike trains.  Download manuscript    

 Pattern Recognition Spiking Neural Network for Classification of Chinese Characters   
  Nicola Russo, Wan Yuzhong, Thomas Madsen, Konstantin Nikolic  
  https://doi.org/10.14428/esann/2023.ES2023-174  Abstract:   
  The Spiking Neural Networks (SNNs) are biologically more realistic than other types of Artificial Neural Networks (ANNs), but they have been much less utilised in applications. When comparing the two types of NNs, the SNNs are considered to be of lower latency, more hardware-friendly and energy-efficient, and suitable for running on portable devices with weak computing performance. In this paper we aim to use an SNN for the task of classifying Chinese character images, and test its performance. The network utilises inhibitory synapses for the purpose of using unsupervised learning. The learning algorithm is a derivative of the traditional Spike-timing-dependent Plasticity (STDP) learning rule. The input images are first pre-processed by traditional methods (OpenCV). Different hyperparameters configurations are tested reaching an optimal configuration and a classification accuracy rate of 93%.  Download manuscript    

 Energy-efficient detection of a spike sequence   
  Louis LE COEUR, Nick Riedman, Saarthak Sarup, Kwabena Boahen  
  https://doi.org/10.14428/esann/2023.ES2023-179  Abstract:   
  We present a novel 3D spike sorting network (3DSS) that detects a spike sequence efficiently and memorizes it upon a single presentation without configuration. We analyze the wiring and switches of alternatives and show that 3DSS reduces energy per spike quadratically compared to existing 2D networks. Applications include large-scale document retrieval and self-configuring hardware.  Download manuscript    

  Anomaly Detection, and Learning Algorithms  
  Anomaly detection in irregular image sequences for concentrated solar power plants   
  Sukanya Patra, Thi Khanh Hien Le, Souhaib Ben Taieb  
  https://doi.org/10.14428/esann/2023.ES2023-178  Abstract:   
  Operations at extremely high temperatures can lead to various malfunctions in Concentrated Solar Power (CSP) plants, emphasizing the need for predictive maintenance (PdM). We study PdM as an anomaly detection (AD) problem from irregular image sequences, which represent the minute-by-minute solar receiver’s surface temperature from a CSP plant. Contrary to standard benchmark image datasets in AD research, our data shows distinct characteristics such as non-stationarity, temporal dependence, and irregular sampling, which are unaddressed by current image-based AD techniques. Therefore, we introduce a forecast-based AD method to address these characteristics, drawing inspiration from irregular sequence modelling. The results show that the proposed method outperforms classical image-based AD methods on our dataset.  Download manuscript    

 Knowledge Distillation for Anomaly Detection   
  Adrian Alan Pol, Ekaterina Govorkova, Sonja Gronroos, Nadezda Chernyavskaya, Philip Harris, Maurizio Pierini, Isobel Ojalvo, Peter Elmer  
  https://doi.org/10.14428/esann/2023.ES2023-159  Abstract:   
  Unsupervised deep learning techniques are widely used to identify anomalous behaviour. The performance of such methods is a product of the amount of training data and the model size. However, the size is often a limiting factor for the deployment on resource-constrained devices. We present a novel procedure based on knowledge distillation for compressing an unsupervised anomaly detection model into a supervised deployable one and we suggest a set of techniques to improve the detection sensitivity. Compressed models perform comparably to their larger counterparts while significantly reducing the size and memory footprint.  Download manuscript    

 Comparative study of the synfire chain and ring attractor model for timing in the premotor nucleus in male Zebra Finches   
  Fjola Hyseni, Nicolas Rougier, Arthur Leblois  
  https://doi.org/10.14428/esann/2023.ES2023-120  Abstract:   
  Timing is crucial for the generation of a wide range of sensorimotor tasks. However, the underlying mechanisms remain unclear. In the order of milliseconds, premotor nucleus HVC in male zebra finches is an outstanding model in studying the sequential neuronal activity encoding action timing. Current computational models of HV C rely on the synfire chains, which are not robust to noise and function for a narrow range of weights. An alternative with robust functional properties are attractors. Here, we compare the two models and show that not only the ring attractor is more robust, but can also reproduce the brief activity bursts of HV C neurons.  Download manuscript    

 Don't skip the skips: autoencoder skip connections improve latent representation discrepancy for anomaly detection   
  Anne-Sophie Collin, Cyril de Bodt, Dounia Mulders, Christophe De Vleeschouwer  
  https://doi.org/10.14428/esann/2023.ES2023-139  Abstract:   
  Reconstruction-based anomaly detection typically relies on the reconstruction of a defect-free output from an input image. Such reconstruction can be obtained by training an autoencoder to reconstruct clean images from inputs corrupted with a synthetic defect. Previous works have shown that adopting an autoencoder with skip connections improves reconstruction sharpness. However, it remains unclear how skip connections affect the latent representations learned during training. Here, we compare internal representations of autoencoders with and without skip connections. Experiments over the MVTec AD dataset reveal that skip connections enable the autoencoder latent representations to intrinsically discriminate between clean and defective images.  Download manuscript    

 Variants of Neural Gas for Regression Learning   
  Thomas Villmann, Ronny Schubert, Marika Kaden  
  https://doi.org/10.14428/esann/2023.ES2023-94  Abstract:   
  Approximation problems, and thus regression problems, have been widely considered as machine learning problems. A popular model to tackle such tasks are radial-basis-function networks (RBFN) and variants thereof. However, due to the global approximation scheme, RBFN, when trained in a supervised manner without additional constraints, may lack local representation. To this end, we propose approaches that aim to preserve locality in terms of the regression problem by using the Neural Gas algorithm. The models are tested on different data sets and compared to the supervised RBFN approach.  Download manuscript    

 Hybrid Deep Learning-Based Air and Water Quality Prediction Model   
  Jungeun Yoon, Dasong Yu, youngjae lee  
  https://doi.org/10.14428/esann/2023.ES2023-44  Abstract:   
  This paper analyzes the impact of surrounding data on predicting air and water pollution levels by incorporating relevant features and examining their influence. By doing so, we can confirm the relationship between air and water pollution. A hybrid deep learning-based model is trained and various datasets and models are compared and analyzed. The proposed GCN-GRU model achieved the best results not only for PM2.5 but also for Dissolved Oxygen. The hybrid model takes into account the spatial and temporal effects of data characteristics and provides more accurate environmental prediction information through correlation analysis.  Download manuscript    

 Sleep analysis in a CLIS patient using soft-clustering: a case study   
  Sophie Adama, Martin Bogdan  
  https://doi.org/10.14428/esann/2023.ES2023-52  Abstract:   
  The paper deals with the analysis of the sleep patterns of a patient with Completely Locked-In Syndrome (CLIS). The analysis was performed using an approach initially designed to detect consciousness in Disorders of Consciousness (DoC) and CLIS patients. The method extracts different features based on spectral, complexity and connectivity measures and performs soft-clustering analyses to determine the consciousness state. The results showed that it was able to discriminate between the (Non)-Rapid Eye Movement (NREM) and the Rapid Eye Movement (REM) sleep stages. Detecting normal SWS and REM phases indicates better communication abilities for the patient.  Download manuscript    

 FairBayRank: A Fair Personalized Bayesian Ranker   
  Armielle Noulapeu Ngaffo, Julien Albert, Benoit Frénay, Gilles Perrouin  
  https://doi.org/10.14428/esann/2023.ES2023-81  Abstract:   
  Recommender systems are data-driven models that successfully provide users with personalized rankings of items (movies, books...). Meanwhile, for user minority groups, those systems can be unfair in predicting users’ expectations due to biased data. Consequently, fairness remains an open challenge in the ranking prediction task. To address this issue, we propose in this paper FairBayRank, a fair Bayesian personalized ranking algorithm that deals with both fairness and ranking performance requirements. FairBayRank evaluation on real-world datasets shows that it efficiently alleviates unfairness issues while ensuring high prediction performances.  Download manuscript    

 Robust and Cheap Safety Measure for Exoskeletal Learning Control with Estimated Uniform PAC (EUPAC)   
  Felix Weiske, Jens Jäkel  
  https://doi.org/10.14428/esann/2023.ES2023-40  Abstract:   
  Although safe reinforcement learning control for exoskeletons shows great potential, established real-world applications seem rare. There is a dilemma: the safe RL agent is either robustly safe and computationally demanding or not robustly safe but computationally cheap. We propose Estimated Uniform PAC (EUPAC) as a new safety heuristic. We show that our EUPAC algorithm differentiates safe from unsafe system behaviour with high significance ($p<0.001$) while having a linear worst time complexity.  Download manuscript    

 Copyright © ESANN, 2019

35. ECML PKDD_2 conference:
Multiple Category Search!  
 Narrow down your search results by selecting more than one category (e.g. a specific type of "Degree" in a specific "Country")  
 Select KMedu opportunities by...   
       » …Availability  In-house KMedu  Public KMedu     
 » …Country  Afghanistan (AFG)  Algeria (DZ)  Angola (ANG)  Argentina (RA)  Armenia (AM)  Australia (AUS)  Austria (A)  Bahrain (BRN)  Bangladesh (BD)  Belarus (BY)  Belgium (B)  Belize (BZ)  Benin (DY)  Bolivia (BOL)  Bosnia and Herzegovina (BIH)  Botswana (RB)  Brazil (BR)  Brunei (BRU)  Bulgaria (BG)  Burkina Faso (BF)  Burundi (RU)  Cambodia (K)  Cameroon (CAM)  Canada (CDN)  Cape Verde (CV)  Chile (RCH)  China (CN)  Colombia (CO)  Congo. Democratic Republic (CGO)  Congo. Republic (RCB)  Costa Rica (CR)  Côte d’Ivoire (CI)  Croatia (HR)  Cuba (C)  Cyprus (CY)  Czech Republic (CZ)  Denmark (DK)  Djibouti (DJI)  Dominican Republic (DOM)  Ecuador (EC)  Egypt (ET)  El Salvador (ES)  Eritrea (ER)  Estonia (EST)  eSwatini (SD)  Ethiopia (ETH)  Faeroe Islands (FO)  Fiji (FJI)  Finland (FIN)  France (F)  Gambia (WAG)  Germany (D)  Ghana (GH)  Greece (GR)  Guatemala (GCA)  Guinea (RG)  Guinea-Bissau (GUB)  Honduras (HN)  Hong Kong (HK)  Hungary (H)  Iceland (IS)  India (IND)  Indonesia (RI)  Iran (IR)  Iraq (IRQ)  Ireland (IRL)  Israel (IL)  Italy (I)  Japan (J)  Jordan (HKJ)  Kazakhstan (KZ)  Kenya (EAK)  Korea, South (ROK)  Kuwait (KWT)  Kyrgyzstan (KS)  Laos (LAO)  Latvia (LV)  Lebanon (RL)  Lesotho (LS)  Liberia (LB)  Libya (LAR)  Lithuania (LT)  Luxembourg (L)  Macedonia (MK)  Madagascar (RM)  Malawi (MW)  Malaysia (MAL)  Mali (RMM)  Malta (M)  Mauritania (RIM)  Mauritius (MS)  Mexico (MEX)  Morocco (MA)  Mozambique (MOC)  Myanmar (MYA)  Namibia (NAM)  Nepal (NEP)  Netherlands (NL)  New Zealand (NZ)  Nicaragua (NIC)  Niger (RN)  Nigeria (NG)  Norway (N)  Oman (OM)  Pakistan (PK)  Panama (PA)  Paraguay (PY)  Peru (PE)  Philippines (RP)  Poland (PL)  Portugal (P)  Puerto Rico (PR)  Qatar (Q)  Romania (RO)  Russia (RUS)  Rwanda (RWA)  Saudi Arabia (SA)  Senegal (SN)  Seychelles (SY)  Sierra Leone (WAL)  Singapore (SGP)  Slovakia (SK)  Slovenia (SLO)  Somalia (SO)  South Africa (ZA)  Spain (E)  Sri Lanka (CL)  Sudan (SUD)  Sudan. South (SSD)  Sweden (S)  Switzerland (CH)  Taiwan (RC)  Tanzania (EAT)  Thailand (T)  Togo (TG)  Trinidad and Tobago (TT)  Tunisia (TN)  Turkey (TR)  Uganda (EAU)  Ukraine (UA)  United Arab Emirates (UAE)  United Kingdom (GB)  United States of America (USA)  Uruguay (ROU)  Uzbekistan (UZ)  Venezuela (YV)  Viet Nam (VN)  Zambia (Z)  Zimbabwe (ZW)     
 » …Degree  Non-degree KMedu  Training Providers: Certificates  Training Providers: Certifications  Universities: Bachelor degrees  Universities: Certifications  Universities: Diplomas & Certificates  Universities: Doctorate degrees  Universities: Master degrees     
 » …Delivery Format  Blended Learning KMedu  Face-to-face KMedu  Online KMedu  PC KMedu     
 » …Duration  1-… years  1-11 hours  1-11 months  1-3 weeks  1-6 days     
 » …Event Type  KM Conferences  KM Training Events  KMedu Award Ceremonies  KMedu Orientation Sessions  Online KM Events  University KMedu Events     
 » …Language  Arabic language  Bulgarian language  Chinese language  Croatian language  Danish language  Dutch language  English language  Filipino language  Finnish language  French language  German language  Hebrew language  Hungarian language  Indonesian language  Italian language  Japanese language  Korean language  Norwegian language  Persian language  Polish language  Portuguese language  Romanian language  Russian language  Slovak language  Spanish language  Swedish language  Thai language  Turkish language  Vietnamese language     
 » …Price Range (USD)  0 USD / 4Free  1-99 USD  100-999 USD  1000-9999 USD  more than 10000 USD  more than 25000 USD     
 » …Provider Type  Offers from Communities  Offers from Conference Providers  Offers from Job Providers  Offers from Training Providers  Offers from Universities/Colleges     
 » …Study Options  Full-Time  Part-Time     

 Search     
  Search     

  Close search     

 Skip to content      
   
 The Knowledge Management Education Hub  

 Providers | World Map (Overview) 
  African Providers 
  Asian Providers 
  European Providers 
  Latin American Providers 
  Northern American Providers 
  Oceanian Providers 
  eLearning Providers 
  Conferences | World Map (Overview) 
  African Conferences 
  Asian Conferences 
  European Conferences 
  Latin American Conferences 
  Northern American Conferences 
  Oceanian Conferences 
  Online Conferences 
  Past Conferences 
  More… | Events 
  Jobs 
  Resources 
  Latest 
  About | The Hub 
  Community 
  Partner 
  Contact & Legal 
  Subscribe | Updates & News 
  GET LISTED! 
  » MY HUB « 

 Providers | World Map (Overview) 
  African Providers 
  Asian Providers 
  European Providers 
  Latin American Providers 
  Northern American Providers 
  Oceanian Providers 
  eLearning Providers 
  Conferences | World Map (Overview) 
  African Conferences 
  Asian Conferences 
  European Conferences 
  Latin American Conferences 
  Northern American Conferences 
  Oceanian Conferences 
  Online Conferences 
  Past Conferences 
  More… | Events 
  Jobs 
  Resources 
  Latest 
  About | The Hub 
  Community 
  Partner 
  Contact & Legal 
  Subscribe | Updates & News 
  GET LISTED! 
  » MY HUB « 
  Multiple Category Search!  
 Narrow down your search results by selecting more than one category (e.g. a specific type of "Degree" in a specific "Country")  
 Select KMedu opportunities by...        » …Availability  In-house KMedu  Public KMedu    » …Country  Afghanistan (AFG)  Algeria (DZ)  Angola (ANG)  Argentina (RA)  Armenia (AM)  Australia (AUS)  Austria (A)  Bahrain (BRN)  Bangladesh (BD)  Belarus (BY)  Belgium (B)  Belize (BZ)  Benin (DY)  Bolivia (BOL)  Bosnia and Herzegovina (BIH)  Botswana (RB)  Brazil (BR)  Brunei (BRU)  Bulgaria (BG)  Burkina Faso (BF)  Burundi (RU)  Cambodia (K)  Cameroon (CAM)  Canada (CDN)  Cape Verde (CV)  Chile (RCH)  China (CN)  Colombia (CO)  Congo. Democratic Republic (CGO)  Congo. Republic (RCB)  Costa Rica (CR)  Côte d’Ivoire (CI)  Croatia (HR)  Cuba (C)  Cyprus (CY)  Czech Republic (CZ)  Denmark (DK)  Djibouti (DJI)  Dominican Republic (DOM)  Ecuador (EC)  Egypt (ET)  El Salvador (ES)  Eritrea (ER)  Estonia (EST)  eSwatini (SD)  Ethiopia (ETH)  Faeroe Islands (FO)  Fiji (FJI)  Finland (FIN)  France (F)  Gambia (WAG)  Germany (D)  Ghana (GH)  Greece (GR)  Guatemala (GCA)  Guinea (RG)  Guinea-Bissau (GUB)  Honduras (HN)  Hong Kong (HK)  Hungary (H)  Iceland (IS)  India (IND)  Indonesia (RI)  Iran (IR)  Iraq (IRQ)  Ireland (IRL)  Israel (IL)  Italy (I)  Japan (J)  Jordan (HKJ)  Kazakhstan (KZ)  Kenya (EAK)  Korea, South (ROK)  Kuwait (KWT)  Kyrgyzstan (KS)  Laos (LAO)  Latvia (LV)  Lebanon (RL)  Lesotho (LS)  Liberia (LB)  Libya (LAR)  Lithuania (LT)  Luxembourg (L)  Macedonia (MK)  Madagascar (RM)  Malawi (MW)  Malaysia (MAL)  Mali (RMM)  Malta (M)  Mauritania (RIM)  Mauritius (MS)  Mexico (MEX)  Morocco (MA)  Mozambique (MOC)  Myanmar (MYA)  Namibia (NAM)  Nepal (NEP)  Netherlands (NL)  New Zealand (NZ)  Nicaragua (NIC)  Niger (RN)  Nigeria (NG)  Norway (N)  Oman (OM)  Pakistan (PK)  Panama (PA)  Paraguay (PY)  Peru (PE)  Philippines (RP)  Poland (PL)  Portugal (P)  Puerto Rico (PR)  Qatar (Q)  Romania (RO)  Russia (RUS)  Rwanda (RWA)  Saudi Arabia (SA)  Senegal (SN)  Seychelles (SY)  Sierra Leone (WAL)  Singapore (SGP)  Slovakia (SK)  Slovenia (SLO)  Somalia (SO)  South Africa (ZA)  Spain (E)  Sri Lanka (CL)  Sudan (SUD)  Sudan. South (SSD)  Sweden (S)  Switzerland (CH)  Taiwan (RC)  Tanzania (EAT)  Thailand (T)  Togo (TG)  Trinidad and Tobago (TT)  Tunisia (TN)  Turkey (TR)  Uganda (EAU)  Ukraine (UA)  United Arab Emirates (UAE)  United Kingdom (GB)  United States of America (USA)  Uruguay (ROU)  Uzbekistan (UZ)  Venezuela (YV)  Viet Nam (VN)  Zambia (Z)  Zimbabwe (ZW)    » …Degree  Non-degree KMedu  Training Providers: Certificates  Training Providers: Certifications  Universities: Bachelor degrees  Universities: Certifications  Universities: Diplomas & Certificates  Universities: Doctorate degrees  Universities: Master degrees    » …Delivery Format  Blended Learning KMedu  Face-to-face KMedu  Online KMedu  PC KMedu    » …Duration  1-… years  1-11 hours  1-11 months  1-3 weeks  1-6 days    » …Event Type  KM Conferences  KM Training Events  KMedu Award Ceremonies  KMedu Orientation Sessions  Online KM Events  University KMedu Events    » …Language  Arabic language  Bulgarian language  Chinese language  Croatian language  Danish language  Dutch language  English language  Filipino language  Finnish language  French language  German language  Hebrew language  Hungarian language  Indonesian language  Italian language  Japanese language  Korean language  Norwegian language  Persian language  Polish language  Portuguese language  Romanian language  Russian language  Slovak language  Spanish language  Swedish language  Thai language  Turkish language  Vietnamese language    » …Price Range (USD)  0 USD / 4Free  1-99 USD  100-999 USD  1000-9999 USD  more than 10000 USD  more than 25000 USD    » …Provider Type  Offers from Communities  Offers from Conference Providers  Offers from Job Providers  Offers from Training Providers  Offers from Universities/Colleges    » …Study Options  Full-Time  Part-Time | Search     Search 

 European Conference on Machine Learning and Principles and Practice of Knowledge Discovery in Databases (ECML-PKDD)*  
 Sep 15, 2025 - Sep 19, 2025, Porto, Portugal   
 Conference Page  Read On!   Favorite     

 KMers, Contribute!!!   
   Call for Participation: Peace!   
 Posted: February 28, 2022   
 “Peace does not mean an absence of conflicts; differences will always be there. Peace means solving these differences through peaceful means; through dialogue, education, knowledge; and through humane ways.” – Dalai Lama XIV  
   
 6 comments    

 European Conference on Machine Learning and Principles and Practice of Knowledge Discovery in Databases (ECML-PKDD)*  
 Sep 15, 2025 - Sep 19, 2025  Porto, Portugal  Est. 2008 (1986, 1997)  Leave a comment      

 This is no official page!   
  
  No warranty for correctness & completeness!   
  This site will be updated with no ads and linked to its KMedu opportunities  
  as soon as the provider subscribes  to this service!  
  (sample pages: training  , university  , community  , conference  )  
 Monthly Featured   

 The European Conference on Machine Learning and Principles and Practice of Knowledge Discovery in Databases (ECML-PKDD)  is among the premier scientific forums in machine learning and data mining. It builds upon a series of ECML and PKDD conferences, which have been jointly organized since 2001. 1)   
 PhD Forum/Consortium, Paper tracks, Workshops and Tutorials, Discovery Challenge  
 Conference History:  
 ECML PKDD 2025, September 15-19, 2025, Porto, Portugal  
 (Host: Department of Computer Science, Faculty of Science, University of Porto)  
 Conference workshops and tutorials TBD  
 ECML PKDD 2024, September 9-13, 2024, Vilnius, Lithuania  
 (Host: Software Engineering Department, University of Vilnius)  
 Pre-/Post-conference Workshops:  
  Explainable AI for Time Series and Data Streams Tutorial-Workshop (TempXAI 2024)  
  21st International Workshop on Mining and Learning with Graphs  
  Advances in Interpretable Machine Learning and Artificial Intelligence (AIMLAI 2024)  
  11th Workshop on Machine Learning and Data Mining for Sports Analytics  
  Machine Learning for Chemistry and Chemical Engineering (ML4CCE 2024)  
  9th Workshop on Data Science for Social Good (SoGood 2024)  
  2nd International Workshop on Deep Learning meets Neuromorphic Hardware  
  2nd Workshop on Hybrid Human-Machine Learning and Decision Making (HLDM 2024)  
  ​15th International Workshop on Machine Learning and Music (MML 2024)  
  8th International Workshop & Tutorial on Interactive Adaptive Learning (IAL 2024)  
  International workshop on AI for Human Resources and Public Employment Services (AI4HR & PES)  
  IoT, Edge, and Mobile for Embedded Machine (ITEM Workshop 2024)  
  6th Workshop on Machine Learning for CyberSecurity (MLCS 2024)  
  Machine Learning for Sustainable Power Systems (ML4SPS 2024)  
  9th Workshop on Advanced Analytics and Learning on Temporal Data (AALTD 2024)  
  Tutorial and workshop on Explainable and Robust AI for Industry 4.0 & 5.0 (X-RAI 2024)  
  4th Workshop on Bias and Fairness in AI (BIAS 2024)  
  Workshop on eXplainable Knowledge Discovery in Data Mining (XKDD 2024)  
  3rd International Workshop on Machine Learning for Irregular Time Series (ML4ITS 2024)  
  Workshop on Machine Learning for Earth Observation (MACLEAN 2024)  
  2nd Workshop on Advancements in Federated Learning (WAFL 2024)  
  9th Workshop on MIning DAta for financial applicationS (MIDAS)  
  12th Workshop on New Frontiers in Mining Complex Patterns (NFMCP 2024)  
  Learning to Quantify: Methods and Applications (LQ 2024)  
  1st Workshop on Mining and Learning Real-world Dynamics via High-order Networks (MLH 2024)  
  1st International Workshop and Tutorial on Data-Centric Artificial Intelligence (DEARING 2024)  
  2nd International Tutorial and Workshop on Responsible Knowledge Discovery in Education (RKDE 2024)  
 Pre-/Post-conference Tutorials:  
  Uncertainty Estimation in Neural Networks  
  An Introduction to Machine Learning from Time Series  
  Navigating Complex Machine Learning Challenges in Streaming Data: A Hands-On Tutorial  
  Sustainable Deep Learning for Time-series: Reservoir Computing  
  Team Sports Analytics  
  Trustworthy Machine Learning under Imperfect Data  
  Causal Inference & Machine Learning for Online Controlled Experiments in Industry: A Hands-on Tutorial  
  Training and Using an Open-Source LLM  
  Synthetic Networked Data: Modeling Social-Graph Theories, and Applications  
 Discovery Challenges:  
  Seismic Monitoring and Analysis Challenge (SMAC)  
  Diving Deep: Forecasting Sea Surface Temperatures and Anomalies  
  Developing a Data driven Model for Predicting Failure Risk Levels for a Component of Volvo Heavy-duty Trucks  
 Keynotes:  
  The Dynamics of Memorization and Unlearning  
  The Emerging Science of Benchmarks  
  Enhancing User Experience with AI-Powered Search and Recommendations at Spotify  
  Resource-Aware Machine Learning — a User-Oriented Approach  
  How to Utilize (and Generate) Player Tracking Data in Sport  
  
 ECML PKDD 2023, September 18-22, 2023, Turin, Italy  
 (Host: Department of Automation and Computer Science, Polytechnic of Turin; Center for Artificial Intelligence)  
 Pre-/Post-conference Workshops:  
  10th Workshop on Machine Learning and Data Mining for Sports Analytics (MLSA)  
  Workshop on Advancements in Federated Learning  
  LIMBO – LearnIng and Mining for BlOckchains  
  Simplification, Compression, Efficiency and Frugality for Artificial intelligence  
  MACLEAN: MAChine Learning for EArth ObservatioN  
  Deep learning meets Neuromorphic Hardware  
  RKDE 2023: 1st International Tutorial and Workshop on Responsible Knowledge Discovery in Education  
  XAI-TS: Explainable AI for Time Series: Advances and Applications  
  Adapting to Change: Reliable Multimodal Learning Across Domains  
  Neuro-symbolic Metalearning and AutoML  
  New Frontiers in Mining Complex Patterns  
  Learning to Quantify  
  AI4HR&PES: International workshop on AI for Human Resources and Public Employment Services  
  Challenges and Opportunities of Large Language Models in Real-World Machine Learning Applications  
  5th International Workshop on Learning with Imbalanced Domains: Theory and Applications  
  8th Workshop on Advanced Analytics and Learning on Temporal Data (AALTD) at ECML-PKDD 2023  
  ITEM: IoT, Edge, and Mobile for Embedded Machine Learning  
  6th Workshop on AI in Aging, Rehabilitation and Intelligent Assisted Living (ARIAL)  
  XKDD 2023: 5th International Workshop on eXplainable Knowledge Discovery in Data Mining  
  SoGood 2023 – The 8th Workshop on Data Science for Social Good  
  Deep Learning and Multimedia Forensics. Combating fake media and misinformation  
  Advances in Interpretable Machine Learning and Artificial Intelligence — Joint Workshop and Tutorial  
  ML4ITS2023 – 2nd Workshop on Machine Learning for Irregular Time Series: Advances in Generative Models, Global Models and Self-Supervised Learning  
  Deep Learning for Sustainable Precision Agriculture  
  Knowledge Guided Machine Learning  
  Pervasive AI  
  Uplift Modeling and Causal Machine Learning for Operational Decision Making  
  Workshop on Advancements in Federated Learning  
  AI4M: AI for Manufacturing  
  7th Interactive Adaptive Learning Tutorial-Workshop  
  Towards Hybrid Human-Machine Learning and Decision Making (HLDM)  
  MIDAS – The 8th Workshop on MIning DAta for financial applicationS  
  Explainable Artificial Intelligence: From Static to Dynamic  
  Machine Learning for Cybersecurity (MLCS 2023)  
  ML, Law and Society  
  BIAS 2023 – 3rd Workshop on Bias and Fairness in AI  
  Biased Data in Conversational Agents  
  Uncertainty meets explainability in machine learning  
  MLG: Mining and Learning with Graphs  
  MARBLE: Machine Learning and Artificial Intelligence for Biologics Engineering  
  PharML, Machine Learning for Pharma and Healthcare Applications  
  Neuro-Explicit AI and Expert-informed Machine Learning for Engineering and Physical Sciences  
 Pre-/Post-conference Tutorials:  
  Revolutionizing Anomaly Detection: Approaches and Guidelines  
  Time Series Forecasting with Deep Probabilistic Approaches  
  RKDE 2023: 1st International Tutorial and Workshop on Responsible Knowledge Discovery in Education  
  Tutorial on Machine Learning and Predictive Diplomacy  
  Learning to Quantify  
  Advances in Interpretable Machine Learning and Artificial Intelligence — Joint Workshop and Tutorial  
  Sustainable Deep Learning for Time-series: Reservoir Computing  
  Graph-based Processing of Spatiotemporal Time Series: Forecasting, Reconstruction and Analysis  
  Opportunities and Challenges for Online Deep Learning  
  Pervasive AI  
  7th Interactive Adaptive Learning Tutorial-Workshop  
  Uncertainty meets explainability in machine learning  
  Deep Learning for Graphs: a generative, dynamic and reasoning perspective  
  Neuro-Explicit AI and Expert-informed Machine Learning for Engineering and Physical Sciences  
 Discovery Challenges:  
  Human Activity Segmentation Challenge  
  Ariel Space Mission Data Challenge  
  ChaBuD: Change detection for Burned area Delineation  
 Keynotes:  
  Neural Wave Representations  
  Physics-inspired Graph Neural Networks  
  Mapping Generative AI  
  
 ECML PKDD 2022, September 19-23, 2022, Grenoble, France / Virtual venue  
 (Host: Grenoble INP – UGA Institut d’ingénierie et de management, Graduate schools of engineering and management, University of Genoble Alpes)  
 Pre-/Post-conference Workshops:  
  Machine Learning and Data Mining for Sports Analytics  
  MACLEAN: MAChine Learning for EArth Observation  
  Machine Learning for Cybersecurity (MLCS)  
  4th. Int. Workshop on eXplainable Knowledge Discovery in Data Mining (XKDD)  
  3rd PharML, Machine Learning for Pharma and Healthcare Applications  
  Quantum Machine Learning: Theory, Algorithms and Applications  
  Multi-Label Learning: Current Trends and Open Challenges  
  IoT, Edge, and Mobile for Embedded Machine Learning  
  Semantic Data Mining (SEDAMI)  
  7th Int. Workshop on Advanced Analytics and Learning on Temporal Data  
  SoGood 2022 – 7th Int. Workshop on Data Science for Social Good  
  6th Int. Workshop on Interactive Adaptive Learning  
  2nd Int. Workshop on Fair, Effective, and Sustainable Talent management using data science  
  MLG: Mining and Learning with Graphs  
  Teaching Machine Learning  
  KDID 2022: 20th anniversary of KDID Workshop  
  NeFrontiers in Mining Complex Patterns  
  MIDAS 2022 – The 7th Workshop on MIning DAta for financial applicationS  
  Data and Model Quality for Mining and Learning with Graphs: Methods and Open Challenges (Graph Quality)  
  Learning to Quantify: Methods and Applications  
  DALS: Data Analysis in Life Sciences  
  Machine Learning for Buildings Energy Management (MLBEM)  
  Machine Learning for Microbial Genomics  
 Pre-/Post-conference Tutorials:  
  Graph Embedding for Web-Scale Recommender Systems  
  Reward-Optimizing Recommendation using Deep Learning and Fast Inner Product Search  
  Validity, Reliability, and Significance: a Tutorial on Statistical Methods for Reproducible Machine Learning  
  Sparse Neural Networks Training  
  Graph Mining and Multi-Relational Learning: Tools and Application  
  Hyperbolic Graph Representation Learning: A Tutorial  
  What if rewards are Unknown? Battle of Bandits: Online learning from Preference Feedback, Beyond Rewards  
 Pre-/Post-conference Combined Workshops and Tutorials:  
  (Meta-)Knowledge Transfer/Communication in Different Systems  
 Discovery Challenges:  
  Lung Cancer Survival Prediction Challenge  
  PRINCE Out-of-distribution Generalization Challenge  
  Expedia Group Cross-brand Lodging Recommendation  
 Keynotes:  
  Information theory with kernel methods  
  Mining & Learning [Compact] Representations for Structured Data  
  Explainable Machine Learning for Trustworthy AI  
  From Machine Learning to Autonomous Intelligence  
  
 ECML PKDD 2021, September 13-17, 2021, Bilbao, Basque Country (Spain)  Virtual venue  
 (Host: Basque Center for Applied Mathematics, University of the Basque Country)  
 Pre-/Post-conference Workshops:  
  MACLEAN: MAChine Learning for EArth ObservatioN  
  5th Interactive Adaptive Learning Workshop  
  ITEM: IoT, Edge, and Mobile for Embedded Machine Learning  
  SoGood 2021 – Sixth Workshop on Data Science for Social Good  
  Advanced Analytics and Learning on Temporal Data Workshop (AALTD)  
  Machine Learning for Cybersecurity (MLCS 2021)  
  New Trends in Representation Learning with Knowledge Graphs  
  8th Workshop on Sports Analytics: Machine Learning and Data Mining for Sports Analytics (MLSA)  
  MIDAS – The 6th Workshop on MIning Data for financial applications  
  Machine Learning for Irregular Time-series (ML4ITS)  
  Machine Learning in Software Engineering (MLiSE 2021)  
  Teaching Machine Learning  
  Machine Learning for Pharma and Healthcare Applications (PharML)  
  Automating Data Science  
  Parallel, Distributed, and Federated Learning  
  FEAST: International Workshop on Fair, Effective, and Sustainable Talent management using data science  
  AIMLAI: Advances in Interpretable Machine Learning and Artificial Intelligence  
  Machine Learning for Buildings Energy Management (MLBEM 2021)  
  Learning with Imbalanced Domains: Theory and Applications  
 Pre-/Post-conference Tutorials:  
  Machine Learning Meets Internet of Things: From Theory to Practice  
  Adversarial Robustness of Deep Learning: Theory, Algorithms, and Applications  
  Data Shift in Machine Learning: What is it, and what are potential remedies  
  Automated Machine Learning: Methods, Tools and Challenges  
  FAIR multi-label classification  
  Machine Learning and Reasoning for Drug Discovery  
  Uncertainty-aware classification: From rejection to set-valued prediction  
 Pre-/Post-conference Combined Workshops & Tutorials:  
  XKDD 2021: 3rd International Workshop and Tutorial on eXplainable Knowledge Discovery in Data Mining  
  GEM: Graph Embedding and Mining  
 Discovery Challenges:  
  Farfetch Fashion Recommendations Challenge  
  Finding the planet in the noise: De-trending exoplanet lightcurves from non-linear noise  
  Discover the mysteries of the Maya  
 Keynotes:  
  WuDao: Pretrain the World  
  The Value of Data for Personalization  
  AI fairness in practice  
  Safety and robustness for deep learning with provable guarantees  
  
 ECML PKDD 2020, September 14-18, 2020, Ghent, Belgium  Virtual venue  
 (Host: Department of Electronics and Information Systems, Ghent University)  
 Pre-/Post-conference Workshops:  
  4th Workshop on Interactive Adaptive Learning; Machine Learning for Cybersecurity (MLCS); 2nd Workshop on Deep Continuous-Discrete Machine Learning (DeCoDeML 2020); Machine Learning for Pharma and Healthcare Applications; 2nd Workshop on Evaluation and Experimental Design in Data Mining and Machine Learning (EDML 2020); XKDD – Int Workshop on eXplainable Knowledge Discovery in Data Mining; 6th Workshop on Data Integration and Applications (DINA); Parallel, Distributed, and Federated Learning; ITEM – IoT, Edge, and Mobile for Embedded Machine Learning; Teaching Machine Learning and Artificial Intelligence; Advanced Analytics and Learning on Temporal Data; Machine Learning and Data Mining for Sports Analytics (MLSA20); MACLEAN – MAChine Learning for EArth ObservatioN; MIDAS – The 5th Workshop on MIning DAta for financial applicationS; MML 2020 – 13th Int. Workshop on Machine Learning and Music; SoGood 2020 – 5th Workshop on Data Science for Social Good; GEM – Graph Embedding and Mining; Uncertainty in Machine Learning;  
 Pre-/Post-conference Tutorials:  
  Probabilistic Circuits – Representations, Inference, Learning and Applications; Topological Data Analysis for Machine Learning; Learning with Imbalanced Domains and Rare Event Detection; Explainable AI for Deep Networks – Basics and Extensions; Graph Representation Learning and Applications; What and How of Machine Learning Transparency – Building Bespoke Explainability Tools with Interoperable Algorithmic Components; Put Deep Learning to work – Accelerate Deep Learning through AWS EC2 and ML Services  
 Pre-/Post-conference Combined Workshops & Tutorials:  
  Uncertainty in Machine Learning  
 Discovery Challenges:  
  Chat Analytics for Twitch (ChAT)  
 Keynotes:  
  Interpretability for everyone  
  Building Knowledge For AI Agents With Reinforcement Learning  
  Algorithmic Auditing: how to open the black-box of ML  
  Amortized and Neural Augmented Inference  
  Can you trust your GNN? — Certifiable Robustness of Machine Learning Models for Graphs  
  
 ECML PKDD 2019, September 16-20, 2019, Würzburg, Germany  
 (Host: Data Mining and Information Retrieval Research Group, University of Würzburg)  
 Pre-/Post-conference Workshops:  
  MML 2019: 12th International Workshop on Machine Learning and Music; MIDAS – The 4th Workshop on MIning DAta for financial applicationS; Second International Workshop on Knowledge Discovery and User Modeling for Smart Cities; New Frontiers in Mining Complex Patterns; New Trends in Representation Learning with Knowledge Graphs; HummeL: Humanities meets Learning – Challenges for Computational Literary Studies (Cancelled); Second International Workshop on Energy Efficient Scalable Data Mining and Machine Learning. Green Data Mining; Workshop on Deep Continuous-Discrete Machine Learning (DeCoDeML 2019); Decentralized Machine Learning at the Edge; Applications of Topological Data Analysis; GEM: Graph Embedding and Mining; Interactive Adaptive Learning; Machine Learning for Cybersecurity (MLCS); BioASQ: Large-scale biomedical semantic indexing and question answering; 6th Workshop on Sports Analytics: Machine Learning and Data Mining for Sports Analytics (MLSA); 4th workshop on Advanced Analytics and Learning on Temporal Data; MACLEAN: MAChine Learning for EArth ObservatioN; Automating Data Science; The Fourth Workshop on Data Science for Social Good; Advances in managing and mining large evolving graphs (third edition); Data and Machine Learning Advances with Multiple Views; Workshop on Data Integration and Applications  
 Pre-/Post-conference Tutorials:  
  Constraint Learning; Machines Who Imagine: Going Beyond Data Science; Data Mining and Machine Learning using Constraint Programming Languages – An Overview and Future Directions; On Ordered Sets in Pattern Mining; Machine Learning for Automatic Word Problem Solving; Scalable Deep Learning: from theory to practice  
 Pre-/Post-conference Combined Workshops & Tutorials:  
  XKDD Tutorial and XKDD – AIMLAI Workshop  
  
 ECML PKDD 2018, September 10-14, 2018, Dublin, Ireland  
 (Host: Insight Centre for Data Analytics, University College Dublin)  
 Pre-/Post-conference Workshops:  
  Machine Learning and Data Mining for Sports Analytics (MLSA); New Frontiers in Mining Complex Patterns; DARE: Data Analytics for Renewable Energy Integration; Interactive Adaptive Learning; KnowMe 2018: 2nd International Workshop on Knowledge Discovery from Mobility and Transportation Systems; Data Science for Human Capital Management; Advanced Analytics and Learning on Temporal Data; SoGood 2018, The Third Workshop on Data Science for Social Good; Urban Reasoning from Complex Challenges in Cities; Green Data Mining, International Workshop on Energy Efficient Data Mining and Knowledge Discovery; The 3rd Workshop on MIning DAta for financial applicationS; Decentralized Machine Learning on the Edge  
 Pre-/Post-conference Tutorials:  
  Mining Subjectively Interesting Patterns in Data; Efficiency/ Effectiveness Trade-ofs in Learning to Rank; Deep Learning for Graphs; Deep Learning for Natural Language Sentiment and Affect  
 Pre-/Post-conference Combined Workshops with Tutorials:  
  Learning with Imbalanced Domains: Theory and Applications; IoT Large Scale Machine Learning from Data Streams; Nemesis’18: Recent advances in adversarial machine learning  
  
 ECML PKDD 2017, 18-22 September 2017, Skopje, Macedonia  
 (Organizers: Univeristy of Bari; Ss. Cyril and Methodius University of Skopje; Jožef Stefan Institute)  
 Pre-/Post-conference Workshops:  
  MLSA 2017 – Machine Learning and Data Mining for Sports Analytics; SoGood 2017 – Data Science for Social Good; SURL – Scaling-Up Reinforcement Learning; MIDAS – 2nd Workshop on MIning DAta for financial applicationS; TDLSG – Advances in Mining Large-Scale Time-Dependent Graphs; NFMCP 2017 – The 6th International Workshop on New Frontiers in Mining Complex Patterns; LIDTA 2017 – Learning with Imbalanced Domains: Theory and Applications; DLPM 2017 – Deep Learning for Precision Medicine; DMNLP 2017 – 4th Workshop on Interactions between Data Mining and Natural Language Processing; DMSC – Data Mining with Secure Computation; KnowMe – 1st International Workshop on Knowledge Discovery from Mobility and Transportation Systems; DARE 2017 – 5th International Workshop on Data Analytics for Renewable Energy Integration  
 Pre-/Post-conference Tutorials:  
  Machine learning with fossil data: analyzing environmental and climate change; Deep Learning for Computer Vision Applications: Robotics and Driving  
 Pre-/Post-conference Combined Workshops with Tutorials:  
  IoT Large Scale Learning from Data Streams; Interactive Adaptive Learning; AutoML – Automatic selection, configuration, and composition of machine learning algorithms  
  
 ECML PKDD 2016, September 19–23, 2016, Riva del Garda, Italy  
 (Organizers: University of Trento, Università degli Studi di Firenze, Istituto di Calcolo e Reti ad Alte Prestazioni)  
 Pre-/Post-conference Workshops:  
  MLSA Machine Learning and Data Mining for Sports Analytics; AALTD 2nd ECML/PKDD Workshop on Advanced Analytics and Learning on Temporal Data; MIDAS The First Workshop on MIning DAta for financial applicationS; NFmcp 5th International Workshop on New Frontiers in Mining Complex Patterns; SDDM The 2nd ECML/PKDD 2016 workshop on Statistically Sound Data Mining; SoGood Data Science for Social Good; DLPM Deep Learning for Precision Medicine; MML International Workshop on Music and Machine Learning; DMNLP 3rd Edition of the Workshop on Interactions between Data Mining and Natural Language Processing; DARE 4th International Workshop on Data Analytics for Renewable Energy Integration; MLLS 4th Workshop on Machine Learning in Life Sciences; DADA 1st International Workshop on Domain Adaptation for Dialog Agents; STREAMEVOLV-2016 Learning from Data Streams in Large-Scale Evolving Environments: Challenges, Methods and Applications  
 Pre-/Post-conference Tutorials:  
  Preference-based Pattern Mining; Machine Learning Meets Philosophy: From Epistemology to Ethics; Context-Aware Knowledge Discovery: Opportunities, Techniques and Applications; Learning from Hospital Data and Learning from Cohorts; Large-scale Learning from Data Streams in Evolving Environments; The data scientist’s guide for writing papers; An Introduction to Redescription Mining; Probabilistic logics in machine learning; Learning Bayesian Networks for Complex Relational Data  
  
 ECML PKDD 2015, September 7-11, 2015, Porto, Portugal  
 (Host: INESC TEC / SIGARRA, University of Porto)  
 Pre-/Post-conference Workshops:  
  WK1: MetaSel – Meta-learning & Algorithm Selection; WK2: Parallel and Distributed Computing for Knowledge Discovery in Databases; WK3: DMNLP’15: Second Edition of the Workshop on Interactions between Data Mining and Natural Language Processing; WK4: New Frontiers in Mining Complex Pattern; WK5: 6th International Workshop on Mining Ubiquitous and Social Environments (MUSE 2015); WK6: Advanced Analytics and Learning on Temporal Data; WK7: 2nd International Workshop on Learning Models over Multiple Contexts; WK8: LD4KD2015- 2nd workshop on Linked Data for Knowledge Discovery; WK11: DARE: Data Analytics for Renewable Energy Integration; WK12: Workshop on Machine Learning in Life Sciences  
 Pre-/Post-conference Tutorials:  
  T1: Similarity and Distance Metric Learning with Applications to Computer Vision; T2: Scalable learning of graphical models; T3: Meta-learning & Algorithm Selection; T5: VC-Dimension and Rademacher Averages: From Statistical Learning Theory to Sampling Algorithms; T6: Making Sense of (Multi-)Relational Data; T10: The Space of Online Learning Problems  
 Co-located Events:  
  Summer School on Data Science for Big Data – Resource Aware Data Mining, 2-5 Sep  
  
 ECML PKDD 2014, September 15-19, 2014, Nancy, France  
 (Host: Lorraine Research Laboratory in Computer Science and its Applications, University of Lorraine)  
 Pre-/Post-conference Workshops:  
  Dynamic Networks and Knowledge Discovery (DyNaK II); Interactions between Data Mining and Natural Language Processing (DMNLP); Mining Ubiquitous and Social Environments (MUSE); Statistically Sound Data Mining; Machine Learning for Urban Sensor Data (SenseML 2014); Representation Learning (RL 2014); Data Analytics for Renewable Energy Integration (DARE’14); Linked Data for Knowledge Discovery (LD4KD); New Frontiers in Mining Complex Patterns (NFmcp 2014); Experimental Economics and Machine Learning (EEML 2014) (Cancelled); Learning with Multiple Views: Applications to Computer Vision and Multimedia Mining (LEMA 2014); Generalization and reuse of machine learning models over multiple contexts (LMCE 2014)  
 Pre-/Post-conference Tutorials:  
  T1: Medical Mining for Clinical Knowledge Discovery; T2: Patterns in Noisy and Multidimensional Relations and Graphs; T3: The Pervasiveness of Machine Learning in Omics Science; T4: Conformal Predictions for Reliable Machine Learning; T5: The Lunch is Never Free: How Information Theory, MDL, and Statistics are Connected; T6: Information Theoretic Methods in Data Mining; T7: Machine Learning with Analogical Proportions; T8: Preference Learning Problems; T9: Deep Learning  
  
 ECML PKDD 2013, September 23-27, 2013, Prague, Czech Republic  
 (Host: Department of Computer Science, Czech Technical University in Prague)  
 Pre-/Post-conference Workshops:  
  Music and Machine Learning; Reinforcement Learning with Generalized Feedback; Languages for Data Mining and Machine Learning; Data Mining on Linked Data; Mining Ubiquitous and Social Environments; Data Analytics for Renewable Energy Integration; Discovery Challenge Workshop; Tensor Methods in Machine Learning; Solving Complex Machine Learning Problems with Ensemble Methods; New Frontiers in Mining Complex Patterns; Real-World Challenges for Data Stream Mining  
 Pre-/Post-conference Tutorials:  
  Multi-Agent Reinforcement Learning; Second order learning; Algorithmic techniques for modeling and mining large graphs; Web Scale Information Extraction; Mining and learning with network-structured data; Performance Evaluation of Machine Learning Algorithms; Discovering Roles and Anomalies in Graphs: Theory and Applications; Statistically sound pattern discovery  
  
 ECML PKDD 2012, September 24-28, 2012, University of Bristol, Bristol, UK  
 (Host: Intelligent Systems Laboratory, Department of Computer Science, University of Bristol)  
 Pre-/Post-conference Workshops:  
  MUSE: Mining Ubiquitous and Social Environments; NFMCP: New Frontiers in Mining Complex Patterns; Silver: The Silver Lining – learning from unexpected results; IID: Instant Interactive Data Mining; LDSSB: Learning and Discovery in Symbolic Systems Biology; SDAD: Sentiment Discovery from Affective Data; ALRA: Active Learning in Real-world Applications; I-Pat: Mining and exploiting interpretable local patterns; COMMPER: Community Mining and People Recommenders; CoLISD: Collective Learning and Inference on Structured Data  
 Pre-/Post-conference Tutorials:  
  Session Advanced Topics on Data Stream Mining; Advanced Topics in Ensemble Learning; Decomposing Binary Matrices: Where Linear Algebra Meets Combinatorial Data Mining; Mining Deep Web Repositories; PAC-Bayesian Analysis in Supervised, Unsupervised, and Reinforcement Learning; Random Projections for Machine Learning and Data Mining: Theory and Applications; Understanding and Managing Cascades on Large Graphs  
  
 ECML PKDD 2011, September 5-9, 2011, Athens, Greece  
 (Host: Data Science Lab, University of Piraeus)  
 Pre-/Post-conference Workshops:  
  2nd MultiClust Workshop on Discovering, Summarizing and Using Multiple Clusterings; Workshop on Data Mining in Functional Genomics and Proteomics: Current Trends and Future Directions; Workshop Mining Ubiquitous and Social Environments (MUSE 2011); Joint ECML/PKDD – PASCAL Workshop on Large-Scale Hierarchical Classification; Workshop on Planning to Learn and Service-Oriented Knowledge Discovery (PlanSoKD-11); Workshop on Machine Learning and Data Mining in and around Games; Workshop on Collective Learning and Inference on Structured Data (CoLISD); Workshop on Knowledge Discovery in Health Care and Medicine (KD-HCM); Workshop on Mining Complex Entities from Network and Biomedical Data (MIND 2011)  
 Pre-/Post-conference Tutorials:  
  Privacy Challenges and Solutions for Medical Data Sharing; Mining complex dynamic data; Introduction to causal discovery: A Bayesian Networks approach; Mining Complex Entities from Heterogeneous Information Networks; Semantic Data Mining  
  
 ECML PKDD 2010, September 20-24, 2010, Barcelona, Spain  
 (Host: Department of Computer Science, Universitat Politècnica de Catalunya)  
 Pre-/Post-conference Workshops:  
  Analysis of Complex Networks; Mining Ubiquitous and Social Environments; Privacy and Security issues in Data Mining and Machine Learning; hird Generation Data Mining: Towards Service-Oriented Knowledge Discovery; Handling Concept Drift in Adaptive Information Systems: Importance, Challenges and Solutions; Preference Learning; Dynamic Networks and Knowledge Discovery  
 Pre-/Post-conference Tutorials:  
  Robot skill Learning; Mining Sets of Patterns; Algorithms for Predicting Structured Data; A Bayesian Look at Statistical Machine Learning (Cancelled); Preference Learning; Learning from Evolving Data  
  
 ECML PKDD 2009, September 7-11, 2009, Bled, Slovenia  
 (Host: Jozef Stefan Institute)  
 Pre-/Post-conference Workshops:  
  Learning from Multi-Label Data; Learning and data Mining for Robotics; Learning from non-IID Data: Theory, Algorithms and Practice; Learning Monotone Models from Data; Music and Machine Learning; Service-oriented Knowledge Discovery; Explorative Analytics of Information Networks; Preference Learning  
 Pre-/Post-conference Tutorials:  
  Learning from Multi-label Data; Methods for Large Network Analysis; Evaluation in Machine Learning; Transfer Learning for Reinforcement Learning Domains  
  
 ECML PKDD 2008, September 15-19, 2008, University of Antwerp, Antwerp, Belgium  
 (Host: Advanced Database Research and Modeling (ADReM) Lab / Centre for Computational Linguistics and Psycholinguistics (CLiPS), University of Antwerp)  
 Pre-/Post-conference Workshops:  
  New Challenges for Feature Selection in Data Mining and Knowledge Discovery; Third Generation Data Mining: Towards Service-oriented Knowledge Discovery; Wikis, Blogs, Bookmarking Tools – Mining the Web 2.0; Statistical and Relational Learning in Bioinformatics; Ubiquitous Knowledge Discovery; Mining Multidimensional Data; Preference Learning; High-level Information Extraction  
 Pre-/Post-conference Tutorials:  
  Applied Text Mining; Mobility, Data Mining and Privacy; Embedded Machine Learning: Using Support Vector Machines in Wireless Sensor Networks using TinyOS and Lego Mindstorms NXT; Knowledge Discovery from Evolving Data; Text Mining and Link Analysis for Web and Semantic Web; Logical and Relational Learning: A New Synthesis; Web Mining; Data Mining for Anomaly Detection; The Regularization Frontier in Machine Learning  
  
 18th ECML/11th PKDD 2007, September 17-21, 2007, Warsaw University, Warsaw, Poland  
 (Host: Institute of Computer Science, Polish Academy of Sciences)  
 Pre-/Post-conference Workshops:  
  Data Mining in Functional Genomics and Proteomics: Current Trends and Future Directions; Knowledge Discovery from Ubiquitous Data Streams; Planning to Learn; Multi-Relational Data Mining; Prior Conceptual Knowledge in Machine Learning and Knowledge Discovery ; Web Mining 2.0; International Workshop on Constraint-Based Mining and Learning; Rough Sets in Knowledge Discovery: Foundations and Applications; Mining Complex Data  
 Pre-/Post-conference Tutorials:  
  State-of-the-Art in Data Stream Mining; Exploring the Power of Links in Data Mining; The Challenges of the Semantic Web to Machine Learning and Data Mining; Discovering and Tracking User Communities  
  
 17th ECML/10th PKDD 2006, September 18-22, 2006, Humboldt-Universität zu Berlin, Berlin, Germany  
 (Host: Knowledge Management Group, School of Computer Science, Humboldt-Universität zu Berlin)  
 Pre-/Post-conference Workshops:  
  Knowledge Discovery in Inductive Databases; Data and Text Mining for Integrative Biology; Knowledge Discovery from Data Streams; Parallel Data Mining; Ubiquitous Knowledge Discovery for Users; Practical Data Mining: Applications, Experiences and Challenges; Autonomic Computing: A New Challenge for Machine Learning  
 Pre-/Post-conference Tutorials:  
  An easy statistical theory for highly scalable learning algorithms; Agent Intelligence Through Data Mining; Machine Learning of Natural Language; Cryptographic techniques in privacy-preserving data-mining; Randomization Based Privacy Preserving Data Mining; Autonomic Computing: A New Challenge for Machine Learning  
 Associated Events:  
  Summer School: Knowledge Discovery for Ubiquitous Computing, Dortmund, Germany, Sep 14-16  
  
 16th ECML/9th PKDD 2005, October 3-7, 2005, Porto, Portugal  
 (Host: Artificial Intelligence and Computer Science Laboratory, University of Porto)  
 Pre-/Post-conference Workshops:  
  n.a.  
 Pre-/Post-conference Tutorials:  
  n.a.  
  
 15th ECML/8th PKDDECML/PKDD 2004, September 20-24, 2004, Pisa, Italy  
 (Host: Istituto di Scienza e Tecnologie dell’Informazione “A. Faedo”)  
 Pre-/Post-conference Workshops:  
  Statistical Approaches to Web Mining (SAWM); Knowledge Discovery and Ontologies; Symbolic and Spatial Data Analysis: Mining Complex Data Structures; Mining Graphs, Trees and Sequences (MGTS’04); Third International Workshop on Knowledge Discovery in Inductive Databases (KDID); Advances in Inductive Rule Learning; Data Mining and Adaptive Modelling Methods for Economics and Management (IWAMEM-04); Data Mining and Text Mining for Bioinformatics; Privacy and Security Issues in Data Mining; Knowledge Discovery in Data Streams  
 Pre-/Post-conference Tutorials:  
  Evaluation in Web Mining; Distributed Data Mining for Sensor Networks; Symbolic Data Analysis; Statistical Approaches used in Machine Learning; Rule-based Data Mining Methods for Classification Problems in the Biomedical Domain; Mining Unstructured Data  
  
 14th ECML/7th PKDDECML/PKDD 2003, September 22-26, 2003, Cavtat/Dubrovnik, Croatia  
 (Host: Ruder Boskovic Institute)  
 Pre-conference Workshops:  
  W1: First European Web Mining Forum; W2: Multimedia Discovery and Mining; Data Mining and Text Mining in Bioinformatics ;W4: Knowledge Discovery in Inductive Databases; W5: Graph, Tree and Sequence Mining; Probabilistic Graphical Models for Classification; Parallel and Distributed Computing for Machine Learning  
 Pre-conference Tutorials:  
  T1: KD Standards; Data Mining and Machine Learning in Time Series Databases; Exploratory Analysis of Spatial Data and Decision Making using Interactive Maps and Linked Dynamic Displays; Music Data Mining  
 Pre-conference Tutorial/Workshop combinations:  
  TW1: Learning Context-Free Grammars; TW2: Adaptive Text Extraction and Mining  
  
 13th ECML/6th PKDD 2002, August 19-23, 2002, University of Helsinki, Helsinki, Finland  
 (Host: Department of Computer Science, University of Helsinki)  
 Pre-conference Workshops:  
  WS1: IDDM – Integration and Collaboration Aspects of Data Mining, Decision Support and Meta-Learning; WS2: VDM – Visual Data Mining; WS3: SdR – Le Salon des Refusés – When Learning and Mining Efforts Do Not Meet Success; WS4: SWM – Semantic Web Mining; WS5: MOD – Mining Official Data; WS6: KDID – Knowledge Discovery in Inductive Databases  
 Pre-conference Tutorials:  
  T1: Text Mining and Internet Content Filtering; T3: Web Usage Mining for E-business Applications; T4: Inductive Databases and Constraint-based Mining; T5: An Introduction to Quality Assessment in Data Mining; T6: Privacy, Security, and Data Mining  
  
 12th ECML/5th PKDD 2001, September 3-7, 2001, Freiburg, Germany  
 (Host: Lab for Machine Learning, University of Freiburg)  
 Workshops:  
  (W01) Semantic Web Mining; (W02) Machine Learning as Experimental Philosphy of Science; (W03) Visual Data Mining; (W04) Integrating Aspects of Data Mining, Decision Support and Meta-Learning; (W05) Active Learning, Database Sampling, Experiment Design: Views on Instance Selection; (W06) Multi-Relational Data Mining; (W09) Database Support for KDD; (W10) Data Mining for Marketing Applications; (W11) Ubiquitous Data Mining: Technology for Mobile and Distributed KDD  
 Tutorials:  
  Development and Applications of Ontologies; Co-training and learning from labeled data and unlabeled data; KDD for Personalization; Text Mining: What if your data is made of words?; Visual Data Mining and Exploration of Large Databases  
  
 European Conference on Principles and Practice of Knowledge Discovery in Databases (PKDD)  
  (European Symposium on Principles of Knowledge Discovery and Data Mining (PKDD), 1997-98)   
 4th PKDD 2000, September 13-16, 2000, Lyon, France  
 3rd PKDD 1999, September 15-18, 1999, Prague, Czech Republic  
 2nd PKDD 1998, September 23-26, 1998, Nantes, France  
 1st PKDD 1997, June 24-27, 1997, Trondheim, Norway  
 European Conference on Machine Learning (ECML)  
  (European Working Session on Learning (EWSL), 1986-91)   
 11th ECML 2000, May 30-June 2, 2000, Barcelona, Spain  
 10th ECML 1998, April 21-24, 1998, Chemnitz, Germany  
 9th ECML 1997, Prague, Czech Republic, April 23-26, 1997  
 8th ECML 1995, April 25-27, 1995, Heraclion, Crete, Greece  
 7th ECML 1994, April 6-8, 1994, Catania, Italy  
 6th ECML 1993, April 5-7, 1993, Vienna, Austria  
 5th EWSL 1991, March 6-8, 1991, Porto, Portugal  
 4th EWSL 1989, December 4-6, 1989, Montpellier, France  
 3rd EWSL 1988, October 3-5, 1988, Glasgow, Scotland, UK  
 2nd EWSL 1987, May 13-15, 1987, Bled, Yugoslavia  
 1st EWSL 1986, February 3-4, 1986, Orsay, France  
  Favorite    
  
 Notes:   
  1) ECML, the European Conference on Machine Learning, and PKDD, the European Conference on Principles and Practice of Knowledge Discovery in Databases, are co-located since 2001, they merged into one conference in 2008; ECML was the European Working Session on Learning (EWSL) from 1986 until 1991, PKDD was the European Symposium on Principles of Data Mining and Knowledge Discovery from Databases (PKDD) in 1997 and 1998  
    
 KM Conferences  , Portugal (P)   adaptive learning  , Albert-Ludwigs-Universität Freiburg  , artificial intelligence  , bayesian networks  , bookmarking tools  , Center for Artificial Intelligence (CENTAI)  , classification  , collective learning  , complex data  , complex network analysis  , conceptual knowledge  , constraint learning  , Czech Technical University in Prague (CTU)  , dat integration  , data analysis  , data mining  , data science  , data streams  , databases  , decision support  , deep learning  , deep web  , distributed learning  , ECML-PKDD community  , epistemology  , ethics  , federated learning  , games  , Ghent University  , human capital management  , Humboldt-Universität zu Berlin (HU Berlin)  , information extraction  , information networks  , information theory  , internet of things  , Istituto di Scienza e Tecnologie dell’Informazione “A. Faedo”  , Jozef Stefan Institute Ljubljana  , Julius-Maximilians-Universität Würzburg (JMU)  , knowledge discovery  , knowledge graph  , labeled data  , large-scale learning  , learning algorithm  , logical learning  , machine learning  , meta-learning  , natural language processing  , networks  , ontology  , parallel learning  , pattern discovery  , pattern mining  , Polish Academy of Sciences  , Politecnico di Torino (POLITO)  , preference learning  , reinforcement learning  , representation learning  , Ruder Boskovic Institute  , semantic web  , sentiment discovery affective data  , smart cities  , social good  , temporal data  , text mining  , Universidad del País Vasco/ Euskal Herriko Unibertsitatea (UPV/EHU)*  , Universidade do Porto (UP)  , Universita degli Studi di Firenze  , Università degli Studi di Trento  , Universitat Politecnica de Catalunya (UPC)  , Université de Lorraine (UL)  , Université Grenoble Alpes (UGA)  , Universiteit Antwerpen  , University College Dublin (UCD)  , University of Bristol  , University of Helsinki  , University of Piraeus  , unlabeled data  , unstructured data  , Vilnius University  , Web 2.0  , web mining  , weblogs  , wikis   Conferences | Africa 
  Asia 
  Europe 
  L-America 
  N-America 
  Oceania 
  Online 

 Home  » Opportunities  » Events     

 Leave a Reply Cancel reply    
 Your email address will not be published.  Required fields are marked *    
 Comment *      
 Name *     
 Email *     
 Website    
  By using this form and subscribing to comments you agree with the storage and handling of your data by the KMedu Hub. (see Data Privacy Policy  > 'User posts, comments, and ratings' & 'Follow-up comments') *    

 Popular 
  Recent 
  International Conference on Knowledge, Culture and Change in Organisations*  February 5, 2016  July 1, 2024 
  Call for Participation: Peace!  February 28, 2022  April 14, 2024 
  International Conference on Organizational Learning, Knowledge and Capabilities (OLKC)**  February 5, 2016  November 4, 2024 
  Strategic Management Society Conference (SMS Conference)*  February 17, 2016  October 16, 2024 
  Skills for Knowledge Managers?  May 18, 2015  December 20, 2019 
    
 International Conference on Artificial Intelligence and Knowledge Processing (AIKP)*  November 26, 2024  November 26, 2024 
  University Knowledge Management Education in South Africa  November 19, 2024 
  Wissenstransfer  November 13, 2024  November 13, 2024 
  Knowledge management librarians @ International Islamic University Malaysia (IIUM)  November 12, 2024 
  Knowledge & Information Management, Research & Analysis (KIMRA)*  November 6, 2024 

 Community  

 Multimedia  
 YouTube | (Video) 
  vimeo | (Video) 

 Sponsors & Coops  
 jaegerWM - KM & Social Media consulting 
  Become a Sponsor/Cooperation Partner » 

 Legend:  * Provider does no longer offer any KMedu / This is a recurring conference; ** This recurring conference / KMedu offer is discontinued   
   
 Multiple Category Search!  
 Narrow down your search results by selecting more than one category (e.g. a specific type of "Degree" in a specific "Country")  
 Select KMedu opportunities by...   
       » …Availability  In-house KMedu  Public KMedu     
 » …Country  Afghanistan (AFG)  Algeria (DZ)  Angola (ANG)  Argentina (RA)  Armenia (AM)  Australia (AUS)  Austria (A)  Bahrain (BRN)  Bangladesh (BD)  Belarus (BY)  Belgium (B)  Belize (BZ)  Benin (DY)  Bolivia (BOL)  Bosnia and Herzegovina (BIH)  Botswana (RB)  Brazil (BR)  Brunei (BRU)  Bulgaria (BG)  Burkina Faso (BF)  Burundi (RU)  Cambodia (K)  Cameroon (CAM)  Canada (CDN)  Cape Verde (CV)  Chile (RCH)  China (CN)  Colombia (CO)  Congo. Democratic Republic (CGO)  Congo. Republic (RCB)  Costa Rica (CR)  Côte d’Ivoire (CI)  Croatia (HR)  Cuba (C)  Cyprus (CY)  Czech Republic (CZ)  Denmark (DK)  Djibouti (DJI)  Dominican Republic (DOM)  Ecuador (EC)  Egypt (ET)  El Salvador (ES)  Eritrea (ER)  Estonia (EST)  eSwatini (SD)  Ethiopia (ETH)  Faeroe Islands (FO)  Fiji (FJI)  Finland (FIN)  France (F)  Gambia (WAG)  Germany (D)  Ghana (GH)  Greece (GR)  Guatemala (GCA)  Guinea (RG)  Guinea-Bissau (GUB)  Honduras (HN)  Hong Kong (HK)  Hungary (H)  Iceland (IS)  India (IND)  Indonesia (RI)  Iran (IR)  Iraq (IRQ)  Ireland (IRL)  Israel (IL)  Italy (I)  Japan (J)  Jordan (HKJ)  Kazakhstan (KZ)  Kenya (EAK)  Korea, South (ROK)  Kuwait (KWT)  Kyrgyzstan (KS)  Laos (LAO)  Latvia (LV)  Lebanon (RL)  Lesotho (LS)  Liberia (LB)  Libya (LAR)  Lithuania (LT)  Luxembourg (L)  Macedonia (MK)  Madagascar (RM)  Malawi (MW)  Malaysia (MAL)  Mali (RMM)  Malta (M)  Mauritania (RIM)  Mauritius (MS)  Mexico (MEX)  Morocco (MA)  Mozambique (MOC)  Myanmar (MYA)  Namibia (NAM)  Nepal (NEP)  Netherlands (NL)  New Zealand (NZ)  Nicaragua (NIC)  Niger (RN)  Nigeria (NG)  Norway (N)  Oman (OM)  Pakistan (PK)  Panama (PA)  Paraguay (PY)  Peru (PE)  Philippines (RP)  Poland (PL)  Portugal (P)  Puerto Rico (PR)  Qatar (Q)  Romania (RO)  Russia (RUS)  Rwanda (RWA)  Saudi Arabia (SA)  Senegal (SN)  Seychelles (SY)  Sierra Leone (WAL)  Singapore (SGP)  Slovakia (SK)  Slovenia (SLO)  Somalia (SO)  South Africa (ZA)  Spain (E)  Sri Lanka (CL)  Sudan (SUD)  Sudan. South (SSD)  Sweden (S)  Switzerland (CH)  Taiwan (RC)  Tanzania (EAT)  Thailand (T)  Togo (TG)  Trinidad and Tobago (TT)  Tunisia (TN)  Turkey (TR)  Uganda (EAU)  Ukraine (UA)  United Arab Emirates (UAE)  United Kingdom (GB)  United States of America (USA)  Uruguay (ROU)  Uzbekistan (UZ)  Venezuela (YV)  Viet Nam (VN)  Zambia (Z)  Zimbabwe (ZW)     
 » …Degree  Non-degree KMedu  Training Providers: Certificates  Training Providers: Certifications  Universities: Bachelor degrees  Universities: Certifications  Universities: Diplomas & Certificates  Universities: Doctorate degrees  Universities: Master degrees     
 » …Delivery Format  Blended Learning KMedu  Face-to-face KMedu  Online KMedu  PC KMedu     
 » …Duration  1-… years  1-11 hours  1-11 months  1-3 weeks  1-6 days     
 » …Event Type  KM Conferences  KM Training Events  KMedu Award Ceremonies  KMedu Orientation Sessions  Online KM Events  University KMedu Events     
 » …Language  Arabic language  Bulgarian language  Chinese language  Croatian language  Danish language  Dutch language  English language  Filipino language  Finnish language  French language  German language  Hebrew language  Hungarian language  Indonesian language  Italian language  Japanese language  Korean language  Norwegian language  Persian language  Polish language  Portuguese language  Romanian language  Russian language  Slovak language  Spanish language  Swedish language  Thai language  Turkish language  Vietnamese language     
 » …Price Range (USD)  0 USD / 4Free  1-99 USD  100-999 USD  1000-9999 USD  more than 10000 USD  more than 25000 USD     
 » …Provider Type  Offers from Communities  Offers from Conference Providers  Offers from Job Providers  Offers from Training Providers  Offers from Universities/Colleges     
 » …Study Options  Full-Time  Part-Time     

 Search     
  Search     

 KMedu Hub's Top 10  
 Teaching Knowledge Management in postgraduate LIS education at Edith Cowan University 
  Francisco (Spain) about the Knowledge Management MSc at Cranfield University 
  Knowledge Management Education Forum (KMEF)* 
  SIKM Leaders Community 
  Gurteen Knowledge 
  Information and knowledge management research of post-graduates in South African LIS schools 
  Knowledge Management Modules: An Analysis of Coursework 
  Knowledge Management Education Forum (KMEF) – SMR International Special Report 
  London Knowledge & Innovation Network (LKIN)* 
  Panel: Schools which teach knowledge management 
    
  KMedu Hub's Modified Content  
 Knowledge Manager as Supply Chain Manager for Knowledge 
  Enterprise Digital Workplace Summit** 
  Digital Work Forum* 
  International Atomic Energy Agency (IAEA) 
  International Conference on the Principles of Knowledge Representation & Reasoning (KR)* 
  Information and Knowledge Forum* 
  Knowledge Architecture (KA) 
  Artificial Intelligence x Data & Knowledge Engineering (AIxDKE)* 
  SIKM Leaders Community 
  Kongress Media 

 Site Notice  | Privacy  | Disclaimer     

  Scroll to top   © jaegerWM  - Knowledge Management & Social Media   
 Updates 
  Advertise 
  MyHub 
  About

36. ESANN_1 conference:
Log In 

 ESANN 2025     

 Menu      Home | Latest news 
  Submit a paper | Call for papers 
  Special sessions 
  Author guidelines 
  Ethics 
  Submissions 
  Program 
  Participate | Format of the conference 
  Registration 
  Information for speakers 
  The event | Venue 
  About Bruges 
  Hotels 
  Conference commitees 
  Sponsors 
  Contacts 
  Past ESANN | ESANN conferences 
  Proceedings 
  My ESANN 

 close  ×  Call Us  +1 (777) 123 45 67    
 close  ×  Search     

 European Symposium on Artificial Neural Networks, Computational Intelligence and Machine Learning   
 Bruges (Belgium) and Online  
  23-25 April 2025   

  The Conference  
   
 The 33th European Symposium on Artificial Neural Networks, Computational Intelligence and Machine Learning will be organized in hybrid mode, from Wednesday 23 to Friday 25 April 2025. Both in-person and online participation will be possible.  
 The deadlines  
   
 Extended submission deadline  
 27.11.2024    

 Decisions  
 24.01.2025  

 Conference  
 23.04.2025 - 25.04.2025  

 The location  
   
 Bruges (Belgium)  
  and online event  
    
 Contact: d-side conferences  
  esann@uclouvain.be   

 All posts   The latest news  
   
 Michel Verleysen 16.11.2024, 16:23 | Due to numerous requests the deadline to submit papers to the ESANN 2024 conference has been extended to 27 November 2024. Please 
  Michel Verleysen 13.10.2024, 18:01 | Nobel Laureate Geoffrey Hinton published at ESANN in 2008, 2009 and 2011! Congratulations to him and to John Hopfield! 
  Michel Verleysen 13.10.2024, 17:16 | We are pleased to announce the ESANN 2024 best student paper award, delivered to Mr. Daniel Fernández-Sánchez, for his 

 The factsheet  
   
 100+ speakers  
   
 3 full days  

 Single track  
   
 33th edition  

 Top event sponsors  

 Copyright © ESANN, 2019

37. ESANN_2 conference:
Log In 

 ESANN 2025     

 Menu      Home | Latest news 
  Submit a paper | Call for papers 
  Special sessions 
  Author guidelines 
  Ethics 
  Submissions 
  Program 
  Participate | Format of the conference 
  Registration 
  Information for speakers 
  The event | Venue 
  About Bruges 
  Hotels 
  Conference commitees 
  Sponsors 
  Contacts 
  Past ESANN | ESANN conferences 
  Proceedings 
  My ESANN 

 close  ×  Call Us  +1 (777) 123 45 67    
 close  ×  Search     

 Program  

 Copyright © ESANN, 2019

38. ESOP_0 conference:
ETAPS 2025 | Call for Papers 
  Important Dates 
  Satellite Events 
  Programme 
  Invited Speakers 
  ESOP 2025 
  FASE 2025 
  FoSSaCS 2025 
  TACAS 2025 
  Industry Day 
  Organizers 
  About | About ETAPS 
  ETAPS Association 
  Steering Committee 
  Sustainability 
  ETAPS-F 
  FoPSS Schools 
  Anti-Harassment Policy 
  DEI Policy 
  Disclaimer 
  Conferences | ESOP 
  FASE 
  FoSSaCS 
  TACAS 
  Proceedings 
  Awards | Best Paper 
  Test of Time 
  Doctoral Dissertation 
  Test-of-Time Tool 
  Lifetime 
  Past Editions 
  ETAPS Blog 
  Future Editions | ETAPS 2026 
  Log in | Join us 
   
 Log in | Join us      

 ESOP  European Symposium On Programming  

 Scope  
   
 The ESOP conference is a premier European venue devoted to fundamental issues in the specification, design, analysis and implementation of programming languages and systems. Covered areas include: Programming paradigms and styles; Methods and tools to write and specify programs and languages; Methods and tools for reasoning about programs; Programming systems design and implementation.  

 History  
   
 The first ESOP conference was held in 1986 in Saabrücken, Germany, co-chaired by Bernard Robinet and Reinhard Wilhelm with proceeding published as Springer-Verlag LNCS 213. After first six biannual editions, ESOP joined ETAPS in 1998 as one of its founding conferences.  

 25 Anniversary Celebration  
 In 2022, ESOP celebrated its 25 anniversary. Watch the talk of Peter Müller about the conference history!  
   
  Sorry, your browser does not support the video tag.    
   
 Links  
   
 ESOP Website 

 Steering Committee  
   
 Luis Caires, Instituto Superior Técnico, Universidade de Lisboa, Portugal (Chair) 
  Brigitte Pientka, McGill University 
  Ilya Sergey, National University of Singapore 
  Stephanie Weirich, University of Pennsylvania 
  Thomas Wies, New York University 
  Nobuko Yoshida, Oxford University 

   ETAPS International Joint Conferences On Theory & Practice Of Software  
   
 ETAPS Association     
   
 Internal     
   
 Responsible for these web pages:  
   
  Jan Kofroň  
  Faculty of Mathematics and Physics  
  Charles University, Czech Republic  
  E-mail: firstname.lastname [at] d3s.mff.cuni.cz  
  Phone: +420 951 554 285  

 ETAPS Policies  |  Disclaimer    
 © 2022–2024 ETAPS Association. All rights reserved.

39. ESANN_3 conference:
Log In 

 ESANN 2025     

 Menu      Home | Latest news 
  Submit a paper | Call for papers 
  Special sessions 
  Author guidelines 
  Ethics 
  Submissions 
  Program 
  Participate | Format of the conference 
  Registration 
  Information for speakers 
  The event | Venue 
  About Bruges 
  Hotels 
  Conference commitees 
  Sponsors 
  Contacts 
  Past ESANN | ESANN conferences 
  Proceedings 
  My ESANN 

 close  ×  Call Us  +1 (777) 123 45 67    
 close  ×  Search     

 My ESANN  

  Welcome to the my ESANN hub page. You will find here all the widgets available for your convenience.  

 You have to log in  to view this content. Please register  if you don't have an account yet.   

 Copyright © ESANN, 2019

40. ESOP_1 conference:
researchr 
   explore | Tags 
  Journals 
  Conferences 
  Authors 
  Profiles 
  Groups 
  calendar | New Conferences 
  Events 
  Deadlines 
  search  search 
    
   You are not signed in 
  Sign in 
  Sign up 
     External Links  
 DOI 
  DBLP 
   Google 
  Google Scholar 
  MSAS 
   Cite Key  
 esop-2023 
    Statistics  
 References: 0 
  Cited by: 0 
  Reviews: 0 
  Bibliographies: 0 
       
  PDF  
 [Upload PDF for personal use] 
      
    Researchr  
 Researchr is a web site for finding, collecting, sharing, and reviewing scientific publications, for researchers by researchers.  
 Sign up  for an account to create a profile with publication list, tag and review your related work, and share bibliographies with your co-authors.  

    Programming Languages and Systems - 32nd European Symposium on Programming, ESOP 2023, Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2023, Paris, France, April 22-27, 2023, Proceedings  
 Thomas Wies     , editor,  Programming Languages and Systems - 32nd European Symposium on Programming, ESOP 2023, Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2023, Paris, France, April 22-27, 2023, Proceedings    .   Volume 13990 of Lecture Notes in Computer Science  , Springer, 2023.    [doi]     
 Conference: ESOP2023     
  Abstract 
   Authors 
   BibTeX 
   References 
   Bibliographies 
   Reviews 
   Related 
         
  Abstract  
 Abstract is missing.  
  
  Table of Contents  
 Logics for Extensional, Locally Complete Analysis via Domain Refinements | Flavio Ascari    , Roberto Bruni    , Roberta Gori     . | 1-27 | [doi] 
   Clustered Relational Thread-Modular Abstract Interpretation with Local Traces | Michael Schwarz 0007    , Simmo Saan    , Helmut Seidl    , Julian Erhard    , Vesal Vojdani     . | 28-58 | [doi] 
   Adversarial Reachability for Program-level Security Analysis | Soline Ducousso    , Sébastien Bardin    , Marie-Laure Potet     . | 59-89 | [doi] 
   Automated Grading of Regular Expressions | Su-Hyeon Kim    , Youngwook Kim    , Yo-Sub Han    , Hyeonseung Im    , Sang-Ki Ko     . | 90-112 | [doi] 
   Builtin Types Viewed as Inductive Families | Guillaume Allais     . | 113-139 | [doi] 
   Pragmatic Gradual Polymorphism with References | Wenjia Ye    , Bruno C. D. S. Oliveira     . | 140-167 | [doi] 
   Modal Crash Types for Intermittent Computing | Farzaneh Derakhshan    , Myra Dotzel    , Milijana Surbatovich    , Limin Jia 0001     . | 168-196 | [doi] 
   Gradual Tensor Shape Checking | Momoko Hattori    , Naoki Kobayashi 0001    , Ryosuke Sato 0001     . | 197-224 | [doi] 
   A Type System for Effect Handlers and Dynamic Labels | Paulo Emílio de Vilhena    , François Pottier     . | 225-252 | [doi] 
   Interpreting Knowledge-based Programs | Alexander Knapp    , Heribert Mühlberger    , Bernhard Reus     . | 253-280 | [doi] 
   Contextual Modal Type Theory with Polymorphic Contexts | Yuito Murase    , Yuichi Nishiwaki    , Atsushi Igarashi     . | 281-308 | [doi] 
   A Complete Inference System for Skip-free Guarded Kleene Algebra with Tests | Todd Schmid    , Tobias Kappé    , Alexandra Silva 0001     . | 309-336 | [doi] 
   Quorum Tree Abstractions of Consensus Protocols | Berk Çirisci    , Constantin Enea    , Suha Orhun Mutluergil     . | 337-362 | [doi] 
   MAGπ: Types for Failure-Prone Communication | Matthew Alan Le Brun    , Ornela Dardha     . | 363-391 | [doi] 
   ømega with Context-free Session Types | Diogo Poças    , Diana Costa 0001    , Andreia Mordido    , Vasco T. Vasconcelos     . | 392-420 | [doi] 
   Safe Session-Based Concurrency with Shared Linear State | Pedro Rocha    , Luís Caires     . | 421-450 | [doi] 
   Bunched Fuzz: Sensitivity for Vector Metrics | june wunder    , Arthur Azevedo de Amorim    , Patrick Baillot    , Marco Gaboardi     . | 451-478 | [doi] 
   Fast and Correct Gradient-Based Optimisation for Probabilistic Programming via Smoothing | Basim Khajwal    , C.-H. Luke Ong    , Dominik Wagner     . | 479-506 | [doi] 
   Type-safe Quantum Programming in Idris | Liliane-Joy Dandy    , Emmanuel Jeandel    , Vladimir Zamdzhiev     . | 507-534 | [doi] 
   Automatic Alignment in Higher-Order Probabilistic Programming Languages | Daniel Lundén    , Gizem Çaylak    , Fredrik Ronquist    , David Broman     . | 535-563 | [doi] 

 About 
  Contact 
  Credits 
  Help 
  Web Service API 
  Blog 
  FAQ 
  Feedback 
    
 runs on Web  DSL

41. ESOP_2 conference:
EAPLS Topics | What is EAPLS 
  News 
  Ph.D. Dissertation Award 
  Best Paper Award 
  Board 
  Statutes 
  Best Paper Awards Guidelines 
  Sponsored conferences 
  Artifact Badges 
  Workshop sponsorship 
  Research | Conferences 
  Workshops 
  Other Events 
  Publications | Special Issues 
  Books 
  Software Tools 
  Jobs | Vacancies 
    
 Login | Login 
  Recover account 
  Join EAPLS 

 EAPLS  »  Research »  Conferences  »  ESOP 2023 - Call for Papers   
 ESOP 2023 - Call for Papers  
  by Thomas Wies, Sept. 6, 2022   
   
 ESOP is an annual conference devoted to fundamental issues in the specification, design, analysis, and implementation of programming languages and systems. ESOP seeks contributions on all aspects of programming language research including, but not limited to, the following areas: programming paradigms and styles, methods and tools to specify and reason about programs and languages, programming language foundations, methods and tools for implementation, concurrency and distribution, applications and emerging topics.  
 Contributions bridging the gap between theory and practice are particularly welcome.  
   
 *******************************************************************************  
  CALL FOR PAPERS  
 32nd European Symposium on Programming  
 ESOP 2023  
 organized within  
   
  ETAPS 2023  
 Paris, France, 22-27 April 2023  
 http://www.etaps.org/2023  
  *******************************************************************************  
 Scope   
  ESOP is an annual conference devoted to fundamental issues in the specification, design, analysis, and implementation of programming languages and systems. ESOP seeks contributions on all aspects of programming language research including, but not limited to, the following areas: programming paradigms and styles, methods and tools to specify and reason about programs and languages, programming language foundations, methods and tools for implementation, concurrency and distribution, applications and emerging topics.  
 Contributions bridging the gap between theory and practice are particularly welcome.  
 Important Dates AoE (UTC-12)  
   - Paper submission: October 13, 2022  
  - Rebuttal: Tuesday 6 December - Thursday 8 December, 2022  
  - Paper notification: December 22, 2022  
  - Artifact submission: January 5, 2023  
  - Paper final version: January 26, 2023  
  - Artifact notification: February 9, 2023  
 Conference Submission Link  
  https://easychair.org/conferences/?conf=esop2023  
 Submissions and Review Process  
   ESOP 2023 has just one paper category: regular research papers of maximal 25 pages (excluding bibliography). Submissions are required to follow Springer's LNCS format. Formatting style files and further guidelines for formatting can be found at the Springer website:  
  https://www.springer.com/gp/computer-science/lncs/conference-proceedings-guidelines.  
 Additional material intended for reviewers but not for publication in the final version - for example, details of proofs - may be placed in a clearly marked appendix that is not included in the page limit. Reviewers are at liberty to ignore appendices and papers must be understandable without them.  
 The review process is double-blind, with a rebuttal phase. In your submission, omit your names and institutions; refer to your prior work in the third person, just as you refer to prior work by others; do not include acknowledgements that might identify you.  
 Submission link: https://easychair.org/conferences/?conf=esop2023  
  Accepted papers will be published in Springer's Lecture Notes in Computer Science series.  
 Artifacts   
  ESOP 2023 will have a post-paper-acceptance voluntary artifact evaluation. Authors will be welcome to submit artifacts for evaluation after paper notification. The outcome will not alter the paper acceptance decision.  
 Program Chair   
  Thomas Wies (New York University)  
 Program Committee   
  - Parosh Abdulla (Uppsala University)  
  - Elvira Albert (University of Madrid)  
  - Timos Antonopoulos (Yale University)  
  - Suguman Bansal (University of Pennsylvania)  
  - Josh Berdine (Meta Research)  
  - Annette Bieniusa (Technical University of Kaiserslautern)  
  - Sandrine Blazy (University of Rennes 1)  
  - Johannes Borgström (Uppsala University)  
  - Georgiana Caltais (Konstanz University)  
  - Ankush Das (AWS)  
  - Cezara Drăgoi (INRIA, ENS)  
  - Michael Emmi (AWS)  
  - Simon Gay (University of Glasgow)  
  - Silvia Ghilezan (University of Novi Sad)  
  - Jan Hoffman (CMU)  
  - Shachar Itzhaky (Technion)  
  - Benjamin Kaminski (University College London)  
  - Robbert Krebbers (Radboud University Nijmegen)  
  - Viktor Kuncak (EPFL)  
  - Roland Meyer (TU Braunschweig)  
  - David Monniaux (VERIMAG)  
  - Jorge Pérez (University of Groningen)  
  - Andrei Popescu (The University of Sheffield)  
  - Jonathan Protzenko (Microsoft Research)  
  - Graeme Smith (University of Queensland)  
  - Ana Sokolova (University of Salzburg)  
  - Alexander Summers (UBC)  
  - Tachio Terauchi (Waseda University)  
  - Caterina Urban (INRIA)  
  - Niki Vazou (IMDEA Software Institute)  
 Artifact Evaluation Chairs  
   - Niccolò Veltri (Tallinn University of Technology)  
  - Sebastian Wolff (New York University)  
 Steering Committee   
  - Amal Ahmed (Northeastern University)  
  - Luis Caires (Universidade Nova de Lisboa)  
  - Peter Mueller (ETH Zurich)  
  - Brigitte Pientka (McGill University)  
  - Ilya Sergey (National University of Singapore)  
  - Thomas Wies (New York University)  
  - Nobuko Yoshida (Imperial College London)  

 EAPLS Topics | What is EAPLS 
  News 
  Ph.D. Dissertation Award 
  Best Paper Award 
  Board 
  Statutes 
  Best Paper Awards Guidelines 
  Sponsored conferences 
  Artifact Badges 
  Workshop sponsorship 
  Research | Conferences 
  Workshops 
  Other Events 
  Publications | Special Issues 
  Books 
  Software Tools 
  Jobs | Vacancies 
  Links | Related sites 
  Organizations 
  Journals 

 © European Association for Programming Languages and Systems (EAPLS) – webmaster

42. ESOP_3 conference:
ETAPS 2023 | Call for Papers 
  Conferences 
  Programme 
  Proceedings 
  Satellite Events 
  Invited Speakers 
  Social Events 
  Registration 
  Attending 
  Organizers 
  About | About ETAPS 
  ETAPS Association 
  Steering Committee 
  Sustainability 
  ETAPS-F 
  FoPSS Schools 
  Anti-Harassment Policy 
  DEI Policy 
  Disclaimer 
  Conferences | ESOP 
  FASE 
  FoSSaCS 
  TACAS 
  Proceedings 
  Awards | Best Paper 
  Test of Time 
  Doctoral Dissertation 
  Test-of-Time Tool 
  Lifetime 
  Past Editions 
  ETAPS Blog 
  Future Editions | ETAPS 2026 
  Log in | Join us 
   
 Log in | Join us      

 About  ETAPS Conferences  
 ETAPS is a confederation of several conferences, each with its own Programme Committee and Steering Committee. ETAPS is the most important and visible annual European event related to software sciences. Altogether, more than 500 researchers participate in this event every year. The confederated conferences cover various aspects of software systems, ranging from theoretical foundations to programming language developments, compiler advancements, analysis tools, formal approaches to software engineering, and security. In 2023, ETAPS consists of four conferences: ESOP, FASE, FoSSaCS, and TACAS. Further, the SPIN Symposion is co-located with ETAPS. Details are available below.  

 ESOP – 32nd European Symposium on Programming   
 more  less     
   
 General information  
 ESOP is an annual conference devoted to fundamental issues in the specification, design, analysis, and implementation of programming languages and systems. ESOP seeks contributions on all aspects of programming language research including but not limited to, the following areas:  
 programming paradigms and styles: functional programming; object-oriented programming; probabilistic programming; logic programming; constraint programming; extensible programming languages; programming languages for systems code; novel programming paradigms; 
  methods and tools to specify and reason about programs and languages: programming techniques; meta-programming; domain-specific languages; proof assistants; type systems; dependent types; program logics, static and dynamic program analysis; language-based security; model checking; testing; 
  programming language foundations: formal semantics; type theory; logical foundations; category theory; automata; effects; monads and comonads; recursion and corecursion; continuations and effect handlers; program verification; memory models; abstract interpretation; 
  methods and tools for implementation: compilers; program transformations; rewriting systems; partial evaluation; virtual machines; refactoring; intermediate languages; run-time environments; garbage collection and memory management; tracing; profiling; build systems; program synthesis; 
  concurrency and distribution: process algebras; concurrency theory; session types; parallel programming; service-oriented computing; distributed and mobile computing; actor-based languages; verification and testing of concurrent and distributed systems; 
  applications and emerging topics: programming languages and PL methods in education, security, privacy, database systems, computational biology, signal processing, graphics, human-computer interaction, computer-aided design artificial intelligence and machine learning; case studies in program analysis and verification. 
  Contributions bridging the gap between theory and practice are particularly welcome.  
 Important dates, paper submission and review  
 See the ETAPS 2023 joint call for papers  .  
 Submit your paper via the ESOP 2023 author interface  of EasyChair.  
 The review process of ESOP 2023 is double-blind  , with a rebuttal phase  . In your submission, omit your names and institutions; refer to your prior work in the third person, just as you refer to prior work by others; do not include acknowledgements that might identify you.  
 ESOP 2023 has just one paper category: regular research papers  of maximal 25 pages  using llncs.cls ( excluding bibliography  ).  
 Additional material intended for reviewers but not for publication in the final version - for example, details of proofs - may be placed in a clearly marked appendix that is not included in the page limit. Reviewers are at liberty to ignore appendices and papers must be understandable without them.  
 For the important dates, please check the important dates  .  
 Artifact submission and evaluation  
 ESOP 2023 and FoSSaCS 2023 will have a joint post-paper-acceptance voluntary artifact evaluation. Authors will be welcome to submit artifacts for evaluation after paper notification. The outcome will not alter the paper acceptance decision.  
 The details of the Artifact Evaluation are available here  .  
 Programme chair  
 Thomas Wies | (New York University) 
  Programme committee  
 Parosh Abdulla | (Uppsala University) 
  Elvira Albert | (University of Madrid) 
  Timos Antonopoulos | (Yale University) 
  Suguman Bansal | (Rice University) 
  Josh Berdine | (Facebook) 
  Annette Bieniusa | (Technical University of Kaiserslautern) 
  Sandrine Blazy | (University of Rennes 1) 
  Johannes Borgström | (Uppsala University) 
  Georgiana Caltais | (University of Twente) 
  Ankush Das | (AWS) 
  Cezara Drăgoi | (INRIA, ENS) 
  Michael Emmi | (AWS) 
  Simon Gay | (University of Glasgow) 
  Silvia Ghilezan | (University of Novi Sad) 
  Jan Hoffman | (CMU) 
  Shachar Itzhaky | (Technion) 
  Benjamin Kaminski | (Saarland University) 
  Robbert Krebbers | (Radboud University Nijmegen) 
  Viktor Kuncak | (EPFL) 
  Roland Meyer | (TU Braunschweig) 
  David Monniaux | (VERIMAG) 
  Jorge Pérez | (University of Groningen) 
  Andrei Popescu | (The University of Sheffield) 
  Jonathan Protzenko | (Microsoft Research) 
  Graeme Smith | (University of Queensland) 
  Ana Sokolova | (University of Salzburg) 
  Alexander Summers | (UBC) 
  Tachio Terauchi | (Waseda University) 
  Caterina Urban | (INRIA) 
  Niki Vazou | (IMDEA Software Institute) 

 FASE – 26th International Conference on Fundamental Approaches to Software Engineering   
 more  less     
   
 General information  
 FASE is concerned with the foundations on which software engineering is built. Submissions should make novel contributions to making software engineering a more mature and soundly-based discipline. Contributions should be supported by appropriate arguments and validation. Contributions that combine the development of conceptual and methodological advances with their formal foundations and tool support are particularly encouraged. We welcome contributions to all such fundamental approaches, including:  
 software engineering as an engineering discipline, including its interaction with and impact on society and economics; 
  requirements engineering: capture, consistency, and change management of software requirements; 
  software architectures: description and analysis of the architecture, e.g., SOA, microservice architectures, model-driven architectures, or software product lines; 
  specification, design, and implementation of particular classes of systems: (self-)adaptive, autonomous, collaborative, intelligent, embedded, distributed, mobile, pervasive, cyber-physical, data-centric, or service-oriented applications; 
  applications of AI to software engineering, including search-based and learning-based approaches; 
  software engineering foundations for AI-based systems; 
  software quality: (static or run-time) validation and verification of functional and non-functional software properties (including security and data privacy) using techniques such as theorem proving, model checking, testing, analysis, simulation, refinement methods, metrics or visualization techniques; 
  model-driven engineering: model transformation, meta-modelling, design and semantics of domain-specific languages, consistency and synchronization of models, generative architectures; 
  software processes: support for iterative, agile, and open source development; 
  software evolution: refactoring, reverse and re-engineering, configuration management and architectural change. 
  Keynote speaker  
 We are pleased to announce Sven Apel (Saarland University, Germany) as keynote speaker.  
 Important dates, paper submission and review  
 The ETAPS 2023 joint call for papers is available here  .  
 The review process of FASE 2023 is double-blind, without a rebuttal phase  . In your submission, omit your names and institutions; refer to your prior work in the third person, just as you refer to prior work by others; do not include acknowledgements that might identify you.  
 Paper categories  
 FASE 2023 solicits four types of submissions: research papers, empirical evaluation papers, new ideas and emerging results (NIER) papers and tool demonstration papers. Submissions must follow the formatting guidelines of Springer’s LNCS (use the llncs.cls class) and be submitted electronically in pdf through the Easychair author interface  .  
 Research papers  clearly identify and justify a principled advance to the fundamentals of software engineering. Research papers should clearly articulate their contribution, and provide sufficient evidence for the soundness and applicability of the proposed approach. Research papers are expected to be 15-18 pp (excluding bibliography). Additional material intended for reviewers but not for publication in the final version may be included in a clearly marked appendix.  
 Empirical evaluation papers  evaluate existing software challenges or critically validate current proposed solutions with scientific means, i.e., by empirical studies, controlled experiments, rigorous case studies, simulations, etc. Scientific reflection on problems and practices in the software industry also falls into this category. Empirical evaluation papers can be 15-18 pp (excluding bibliography). Additional material intended for reviewers but not for publication in the final version may be included in a clearly marked appendix.  
 New Ideas and Emerging Results (NIER) papers  seek to disrupt the status quo with forward-looking, thought-provoking, innovative research on the foundations of software engineering, as well as lessons learned from the past. Our aim is to accelerate the exposure of the ETAPS community to early yet potentially ground-breaking research results, and to techniques and perspectives that challenge the status quo. To broadly capture this goal, the NIER track at FASE 2023 will publish the following types of papers:  
 Innovative or groundbreaking new ideas | at early stages of research, supported by promising initial results and intuitions; 
  Visions of new directions | : synergies with other fields or foundational approaches to problems that currently lack foundations in software engineering; 
  Lessons from the past | : thoughtful observations on past or current research directions that may be somehow misguided or that let us see current research directions from a new perspective. 
  NIER papers are expected to be 6-8 pp (excluding bibliography). NIER papers will be assessed primarily on their level of originality, relevance, and potential for impact on the field in terms of promoting innovative thinking. Hence, inadequacies in the state-of-the-art and the pertinence, correctness, and impact of the idea/vision/lesson must be described clearly. A full evaluation is not required for FASE NIER papers, but preliminary evaluation results may help the reviewers understand the scope of the work better.  
 Tool demonstration papers  present a new tool, a new tool component, or novel extensions to an existing tool. They should provide a short description of the theoretical foundations and emphasize the design and implementation concerns, including software architecture. The paper should give a clear account of the tool’s functionality and discuss the tool’s practical capabilities with reference to the type and size of problems it can handle. Authors are strongly encouraged to make their tools publicly available, preferably on the web. Experimental evaluation is not required, however, a motivation as to why the tool is interesting and significant should be provided. Tool demonstration papers can have a maximum of 6 pp (excluding bibliography). They should have an appendix  of up to 6 additional pages with details on the actual demonstration.  
 Artifact submission and evaluation  
 After notification, authors of accepted papers may optionally submit an artifact for evaluation  by the artifact evaluation committee (AEC).  
 During artifact evaluation the AEC assesses the quality of submitted artifacts while being constructive and helping authors to improve their submitted artifacts. The AEC evaluates artifacts independently of the paper according to the following criteria:  
 consistent with the paper 
  as complete as possible 
  well-documented 
  easy to (re)use 
  publicly and persistently available. 
  The result of the artifact evaluation will not alter the already made paper acceptance decision. However, papers whose artifacts are successfully evaluated will be awarded one or two artifact badges. In particular, FASE awards the Artifacts Available and Artifacts Evaluated badges from the EAPLS badging scheme  .  
 Please check the detailed artifact submission and evaluation guidelines  .  
 Special issue  
 Selected regular papers as well as software artefacts will be invited by June 2023 to submit to a special issue of FASE 23 in Science of Computer Programming  .  
 Competition on Software Testing (Test-Comp)  
 FASE 2023 hosts the 5th edition of the Competition on Software Testing (Test-Comp 2023)  .  
 Programme chairs  
 Leen Lambers | (BTU Cottbus-Senftenberg) 
  Sebastián Uchitel | (University of Buenos Aires) 
  Programme committee  
 Erika Abraham | (RWTH Aachen) 
  Rui Abreu | (University of Porto) 
  Domenico Bianculli | (University of Luxembourg) 
  Einar Broch Johnsen | (University of Oslo) 
  Ana Cavalcanti | (University of York) 
  Sigrid Eldh | (Mälardalen University) 
  Carlo Furia | (USI Università della Svizzera italiana) 
  Alessandra Gorla | (IMDEA) 
  Stijn de Gouw | (Open Universiteit) 
  Axel Legay | (Ecole Polytechnique de Louvain ) 
  Antinisca di Marco | (University of l’Aquila) 
  Lina Marsso | (University of Toronto) 
  Marjan Mernik | (University of Maribor) 
  Fabrizio Pastore | (University of Luxembourg) 
  Leila Ribeiro | (Universidade Federal do Rio Grande do Sul) 
  Gwen Salaun | (Université Grenoble Alpes) 
  Paola Spoletini | (Kennesaw State Univervisty) 
  Daniel Strüber | (Chalmers University of Technology, University of Gothenburg) 
  Silvia Lizeth Tapia Tarifa | (University of Oslo) 
  Rachel Tzoref | (IBM Research) 
  Dániel Varró | (McGill University) 
  Anna Maria Vollmer | (Fraunhofer ) 
  Manuel Wimmer | (JKU Linz) 
  Artifact evaluation committee chairs  
 Marie-Christine Jakobs | (Technische Universität Darmstadt) 
  Carlos Diego Nascimento Damasceno | (Radboud University) 
  Competition chair  
 Dirk Beyer | (Ludwig-Maximilians-Universität München, Germany) 
  Steering committee chair  
 Andrzej Wasowski | (IT University of Copenhagen) 
  Steering committee  
 Einar Broch Johnsen | (University of Oslo) 
  Reiner Hähnle | (Technische Universität Darmstadt) 
  Reiko Heckel | (University of Leicester) 
  Leen Lambers | (BTU Cottbus-Senftenberg) 
  Tiziana Margaria | (University of Limerick) 
  Perdita Stevens | (University of Edinburgh) 
  Gabriele Taentzer | (Philipps-Universität Marburg) 
  Sebastián Uchitel | (University of Buenos Aires) 
  Heike Wehrheim | (Carl von Ossietzky Universität Oldenburg) 
  Manuel Wimmer | (JKU Linz) 

 FoSSaCS – 26th International Conference on Foundations of Software Science and Computation Structures   
 more  less     
   
 General information  
 FoSSaCS seeks original papers on foundational research with a clear significance for software science. The conference invites submissions on theories and methods to support the analysis, integration, synthesis, transformation, and verification of programs and software systems. The specific topics covered by the conference include, but are not limited to, the following:  
 categorical models and logics; 
  language theory, automata, and games; 
  modal, spatial, and temporal logics; 
  type theory and proof theory; 
  concurrency theory and process calculi; 
  rewriting theory; 
  semantics of programming languages; 
  program analysis, correctness, transformation, and verification; 
  logics of programming; 
  software specification and refinement; 
  models of concurrent, reactive, stochastic, distributed, hybrid, and mobile systems; 
  emerging models of computation; 
  logical aspects of computational complexity; 
  models of software security; 
  logical foundations of data bases 
  Important dates, paper submission and review  
 For the important dates, please check the joint call for papers  .  
 Artifact submission and evaluation  
 ESOP 2023 and FoSSaCS 2023 will have a joint post-paper-acceptance voluntary artifact evaluation. Authors will be welcome to submit artifacts for evaluation after paper notification. The outcome will not alter the paper acceptance decision.  
 The details of the Artifact Evaluation are available here  .  
 Programme chairs  
 Pawel Sobocinski (Tallinn University of Technology) 
  Orna Kupferman (Hebrew University of Jerusalem) 
  Programme committee  
 Ugo Dal Lago (Università di Bologna and INRIA Sophia Antipolis) 
  Alwen Tiu (The Australian National University) 
  Marco Carbone (IT University of Copenhagen) 
  Shahar Maoz (Tel Aviv University) 
  Marco Gaboardi (Boston University) 
  Patrick Baillot (CNRS and Lille) 
  Frank Valencia (LIX, Ecole Polytechnique) 
  Kuldeep S. Meel (National University of Singapore) 
  Emmanuel Filiot (Université Libre de Bruxelles) 
  Joel Ouaknine (Max Planck Institute for Software Systems (MPI-SWS)) 
  Filip Murlak (University of Warsaw) 
  Alexandra Silva (University College London) 
  Lars Birkedal (Aarhus University) 
  Stefan Milius (FAU Erlangen) 
  Koko Muroya (RIMS, Kyoto University) 
  Barbara König (University of Duisburg-Essen) 
  Thomas Colcombet (Cnrs) 
  Bartek Klin (University of Warsaw) 
  Bart Jacobs (Radboud University) 
  Assia Mahboubi (INRIA) 
  Sam Staton (University of Oxford) 
  Parosh Aziz Abdulla (Uppsala University) 
  Daniele Varacca 
  Giovanni Bacci (Dept. of Computer Science, Aalborg University, Denmark) 
  Véronique Bruyère (University of Mons) 
  Nathalie Bertrand (INRIA) 

 TACAS – 29th International Conference on Tools and Algorithms for the Construction and Analysis of Systems   
 more  less     
   
 General information  
 TACAS is a forum for researchers, developers and users interested in rigorously based tools and algorithms for the construction and analysis of systems. The conference aims to bridge the gaps between different communities with this common interest and to support them in their quest to improve the utility, reliability, flexibility and efficiency of tools and algorithms for building systems.  
 Theoretical papers with clear relevance for tool construction and analysis as well as tool descriptions and case studies with a conceptual message are all encouraged. The topics covered by the conference include, but are not limited to:  
 specification and verification techniques; 
  software and hardware verification; 
  analytical techniques for real-time, hybrid, or stochastic systems; 
  analytical techniques for safety, security, or dependability; 
  SAT and SMT solving; 
  theorem proving; 
  model checking; 
  static and dynamic program analysis; 
  testing; 
  abstraction techniques for modeling and verification; 
  compositional and refinement-based methodologies; 
  system construction and transformation techniques; 
  machine-learning techniques for synthesis and verification; 
  tool environments and tool architectures; 
  applications and case studies. 
  Important dates, paper submission and review  
 The details about paper submission and important dates can be found in the ETAPS joint Call for Papers  .  
 For the important dates, please check the important dates  .  
 Competition on software verification  
 TACAS 2023 will host the next, 12th instance of the Competition on Software Verification, SV-COMP 2023  .  
 Programme chairs  
 Natasha Sharygina (University of Lugano, Switzerland) 
  Sriram Sankaranarayanan (University of Colorado, Boulder, CO) 
  Programme committee  
 Christel Baier (TU Dresden) 
  Haniel Barbosa (Universidade Federal de Minas Gerais) 
  Ezio Bartocci (TU Wien) 
  Dirk Beyer (LMU Munich, Germany) 
  Armin Biere (Freiburg) 
  Nikolaj Bjørner (Microsoft) 
  Roderick Bloem (Graz University of Technology) 
  Ahmed Bouajjani (IRIF, University Paris Diderot) 
  Hana Chockler (King’s College London) 
  Alessandro Cimatti (Fondazione Bruno Kessler) 
  Rance Cleaveland (University of Maryland) 
  Javier Esparza (Technical University of Munich) 
  Chuchu Fan (MIT) 
  Bernd Finkbeiner (CISPA Helmholtz Center for Information Security) 
  Martin Fränzle (Carl von Ossietzky Universität Oldenburg) 
  Khalil Ghorbal (INRIA) 
  Laure Gonnord (Grenoble-INP / LCIS) 
  Orna Grumberg (Technion - Israel Institute of Technology) 
  Kim Guldstrand Larsen (Computer Science, Aalborg University) 
  Arie Gurfinkel (University of Waterloo) 
  Ranjit Jhala (University of California San Diego) 
  Bettina Könighofer (technical university of graz) 
  Laura Kovacs (Vienna University of Technology) 
  Alexander Kulikov (St. Petersburg Department of Steklov Institute of Mathematics) 
  Wenchao Li (Boston University) 
  Peter Müller (ETH Zurich) 
  Kedar Namjoshi (Nokia Bell Labs) 
  Aina Niemetz (Stanford University) 
  Corina Pasareanu (CMU, NASA, KBR) 
  Nir Piterman (University of Gothenburg) 
  Philipp Ruemmer (University of Regensburg) 
  Krishna Shankara Narayanan (IIT Bombay) 
  Cesar Sanchez (IMDEA Software Institute) 
  Sharon Shoham (Tel Aviv University) 
  Fabio Somenzi (University of Colorado, Boulder, CO) 
  Cesare Tinelli (The University of Iowa) 
  Stavros Tripakis (Northeastern University) 
  Frits Vaandrager (Radboud University) 
  Yakir Vizel (The Technion) 
  Tomas Vojnar (Brno University of Technology) 
  Naijun Zhan (Institute of Software, Chinese Academy of Sciences) 
  Lijun Zhang (Institute of Software, Chinese Academy of Sciences) 
  Florian Zuleger (Vienna University of Technology) 
  Tools and Artifact Evaluation Committee Chairs  
 Grigory Fedyukovich (Florida State University) 
  Sergio Mover (Ecole Polytechnique) 
  Competition chair  
 Dirk Beyer | (Ludwig-Maximilians-Universität München, Germany) 

 SPIN – 29th International Symposium on Model Checking of Software   
 more  less     
   
 Co-located with ETAPS 2023 is the 29th International SPIN Symposium on Model Checking of Software  (SPIN 2023).  
 SPIN 2023 will be held on 26 and 27 April 2023. SPIN 2023 is the latest in a successful series of workshops and symposia for practitioners and researchers interested in automated tool-based techniques to analyze and model software for the purpose of verification and validation. We invite submissions presenting theoretical results, novel algorithms, tool development, and empirical evaluation.  
 The deadline for submission of scientific papers is 16 January 2023.  
 The conference website is located here  .  

   ETAPS International Joint Conferences On Theory & Practice Of Software  
   
 ETAPS Association     
   
 Internal     
   
 Responsible for these web pages:  
   
  Jan Kofroň  
  Faculty of Mathematics and Physics  
  Charles University, Czech Republic  
  E-mail: firstname.lastname [at] d3s.mff.cuni.cz  
  Phone: +420 951 554 285  

 ETAPS Policies  |  Disclaimer    
 © 2022–2024 ETAPS Association. All rights reserved.

43. EuroCG_0 conference:
Skip to the content    EuroCG'23    
 39th European Workshop on Computational Geometry   
   
    Menu      
 Call for Contributions 
  Accepted papers 
  Program 
  Invited speakers 
  Committees 
  Registration 
  Practical Information | Conference Venue 
  Accommodation 
  Travel Info 
  Social Activities 
  Tradition 

 Close Menu     Call for Contributions 
  Accepted papers 
  Program 
  Invited speakers 
  Committees 
  Registration 
  Practical Information  Show sub menu | Conference Venue 
  Accommodation 
  Travel Info 
  Social Activities 
  Tradition 

 39th European Workshop on Computational Geometry  

 March 29-31 2023, Barcelona, Spain  
  Photo  by Nabil Murshed  used under CC BY 2.0  / Cropped from original    The 39th European Workshop on Computational Geometry (EuroCG 2023) will be held March 29-31, 2023 at the Universitat Politècnica de Catalunya  (Spain). EuroCG is an annual workshop that combines a strong scientific tradition with a friendly and informal atmosphere. The workshop is a forum where established researchers and students can meet, discuss their work, present their results, and establish scientific collaborations.  

  News  
 18 April, 2023:  The booklet of abstracts  is now available for download.  
 31 March, 2023  : EuroCG’23 was a great success! Thanks to all 117 registered participants! Congratulations to the winner of the Best Student Presentation Award  , Max van Mulken, for his talk Density Approximation for Kinetic Groups  .  
 27 March, 2023  : The location of the Reception can be found here  . The location of conference rooms can be found here  .  
 15 March, 2023  : A preliminary program  is now online.  
 1 March, 2023  : The outline of the conference program  is online.  
 18 February, 2023  : The list of accepted papers  is online.  
 15 February, 2023  : Early registration open until February 23! See registration page  .  
 16 January, 2023  : There are still a few rooms available at the Penyafort-Montserrat residence. See accommodation page  .  
 14 December, 2022  : The submission server  is open.  
 10 November, 2022  : The Call for Contributions  is online.  
  Gold sponsor  
   Contributors  

  Contact  
 If you have any question, please contact us at: eurocg.2023@event.upc.edu   

 © 2024 EuroCG'23   
 Powered by WordPress   
   
 To the top ↑   Up ↑      

  Except where otherwise noted, the content on this site is licensed under a Creative Commons Attribution-ShareAlike 4.0 International  License.

44. EuroCG_1 conference:
European Workshop on Computational Geometry   
 The European Workshop on Computational Geometry  
 About EuroCG  If you have any information about previous EuroCG workshops which is not displayed below, please contact me: eurocg@eurocg.org  .  
 Upcoming workshops  
 41st EuroCG, 2025 | , Liblice, Czech Republic, April 9-11, 2025. 
  Past workshops  
 40th EuroCG, 2024 | , Ioannina, Greece, March 13-15, 2024. 
  39th EuroCG, 2023 | , Barcelona, Spain, March 29-31, 2023. 
  38th EuroCG, 2022 | , Perugia, Italy, March 14-16, 2022 ( | presentation | ) 
  37th EuroCG, 2021 | , Saint Petersburg, Russia, April 7-9, 2021 ( | presentation | ) 
  36th EuroCG, 2020 | , Würzburg, Germany, March 16-18, 2020 
  35th EuroCG, 2019 | , Utrecht, The Netherlands, March 18-20, 2019 
  34th EuroCG, 2018 | , Berlin, Germany, March 21-23, 2018. 
  33rd EuroCG, 2017 | , Malmö, Sweden, April 5-7, 2017. 
  32nd EuroCG, 2016 | , Lugano, Switzerland, March 30-April 1, 2016. 
  31st EuroCG, 2015 | , Ljubljana, Slovenia, March 15-18, 2015. 
  30th EuroCG, 2014 | , Dead Sea, Israel, March 3-5, 2014. 
  29th EuroCG, 2013 | , Braunschweig, Germany, March 17-20, 2013. 
  28th EuroCG, 2012 | , Assisi, Italy, March 19-21, 2012. 
  27th EuroCG, 2011 | , Morschach, Switzerland, March 28-30, 2011 
  26th EuroCG, 2010 | , Dortmund, Germany, March 22-24, 2010 ( | archive | ) 
  25th EuroCG, 2009 | , Brussels, Belgium, March 16-18, 2009 | Special issue in | CGTA | , | Volume 46, Issue 7 | , Pages 817-908 (October 2013). 
  24th EuroCG, 2008 | , Nancy, France, March 18-20, 2008 ( | archive | ) | Special issue in | CGTA | , Volume 43, Issue 2, Pages 67-232 (February 2010). 
  23rd EuroCG, 2007 | , Graz, Austria, March 19-21, 2007 ( | archive | : | program | , | abstracts[.pdf] | ) | Special issue in | CGTA | , Volume 42, Issue 8, Pages 723-814 (October 2009). 
  22nd EuroCG, 2006 | , Delphi, Greece, March 27-29, 2006 ( | archive | : | program+abstracts | ) | Special issue in | CGTA | , Volume 41, Issue 1-2, Pages 1-110 (October 2008). 
  21st EuroCG, 2005 | , Eindhoven, The Netherlands, March 9-11, 2005 ( | archive | : | program+abstracts | ) | Special issue in | CGTA | , Volume 36, Issue 1 (January 2007). 
  20th EuroCG, 2004 | , Seville, Spain, March 24-26, 2004 ( | archive | : | program+abstracts | ) | Special issue in | CGTA | , Volume 37, Issue 3 (August 2007). 
  19th EuroCG, 2003 | , Bonn, Germany, March 24-26, 2003 ( | archive | : | CFP | , | program | ). | Special issue in | CGTA | , Volume 30, Issue 2 (February 2005). 
  18th EuroCG, 2002 | , Warsaw, Poland, April 10-12, 2002 ( | archive | : | CFP | , | program | ). | Special issue in | CGTA | , Volume 27, Issue 1 (January 2004). 
  17th EuroCG, 2001 | , Berlin, Germany, March 26-28, 2001 ( | archive | : | CFP | , | poster | , | program | ). | Special issue in | CGTA | , Volume 25, Issues 1-2 (May 2003). 
  16th EuroCG, 2000 | , Eilat, Israel, March 13-15, 2000 ( | archive | : | program | , | abstracts | ). | Special issue in | CGTA | , Volume 21, Issues 1-2 (January 2002). 
  15th EuroCG, 1999 | , Antibes, France, March 15-17, 1999 ( | archive | : | CFP | , | accepted | ) 
  14th EuroCG, 1998 | , Barcelona, Spain, March 26-27, 1998 ( | archive | : | program | ) | Special issue in | Discrete Applied Mathematics | , Volume 109, Issues 1-2, Pages 1-196 (15 April 2001). 
  13th EuroCG, 1997 | , Wuerzburg, Germany, March 20-21, 1997 ( | archive | : | program+abstracts | ) | Special issue in | Discrete Applied Mathematics | , Volume 93, Issue 1, Pages 1-140 (15 April 1999). 
  12th EuroCG, 1996 | , Münster, Germany, March 28-29, 1996 ( | archive | : | CFP | , | program | ) 
  11th EuroCG, 1995, Linz, Austria 
  10th EuroCG, 1994, Santander, Spain, March 17-18, 1994. 
  9th EuroCG, 1993 | , Hagen, Germany, March 18-19, 1993 ( | archive | ). 
  8th EuroCG, 1992, Utrecht, The Netherlands, March 12-13, 1992 ( | abstracts | in one big pdf) 
  7th EuroCG, 1991, Bern, Switzerland, March 21-22, 1991. | LNCS volume 553 
  6th EuroCG, 1990, Siegen, Germany, March 22-23, 1990. 
  5th EuroCG, 1989, Freiburg, Germany 
  4th EuroCG, 1988, Würzburg, Germany, March 24-25, 1988. | LNCS volume 333 
  3rd EuroCG, 1985, Karlsruhe, Germany 
  2nd EuroCG, 1984, Bern, Switzerland 
  1st EuroCG, 1983, Zürich, Switzerland

45. EuroCG_2 conference:
Skip to the content    EuroCG'23    
 39th European Workshop on Computational Geometry   
   
    Menu      
 Call for Contributions 
  Accepted papers 
  Program 
  Invited speakers 
  Committees 
  Registration 
  Practical Information | Conference Venue 
  Accommodation 
  Travel Info 
  Social Activities 
  Tradition 

 Close Menu     Call for Contributions 
  Accepted papers 
  Program 
  Invited speakers 
  Committees 
  Registration 
  Practical Information  Show sub menu | Conference Venue 
  Accommodation 
  Travel Info 
  Social Activities 
  Tradition 

 Call for Contributions  

 EuroCG 2023 will be held March 29-31, 2023 in Barcelona, Spain. EuroCG is an annual workshop that combines a strong scientific tradition with a friendly and informal atmosphere. The workshop is a forum where established researchers and students can meet, discuss their work, present their results, and establish scientific collaborations.  
 Important dates  
 Submission Deadline: January 10, 2023   
  Acceptance Notification: February 17, 2023   
  Early Registration ends: February 23, 2023   
  Camera-ready version: March 3, 2023   
  EuroCG 2023: March 29–31, 2023  
  All deadlines are 23:59 AoE.  
  Invited speakers  
 Sergio Cabello | (University of Ljubljana, Slovenia) 
  Alberto Márquez | (Universidad de Sevilla, Spain) 
  Evanthia Papadopoulou | (Università della Svizzera italiana, Switzerland) 
   Topics of interest  
 Topics of interest cover all aspects of computational geometry, including but not limited to the following:  
 discrete and combinatorial geometry and topology, 
  design and analysis of geometric algorithms and data structures, 
  implementation and experimental evaluation of geometric algorithms, 
  numerical and algebraic issues arising from implementations, 
  analysis of geometric configurations, 
  geometric modeling, visualization and simulation, 
  combinatorial optimization, 
  graph drawing, 
  structural molecular biology, 
  geometric puzzle analysis, 
  geographic information systems, 
  robotics and virtual worlds, and 
  computer-aided design and manufacturing. 
   Submission  
 We invite authors to submit extended abstracts of their original research. Submissions must be formatted in LaTeX using a supplied class file, and not be longer than 175 lines of text. Submissions will be handled through EasyChair.   
 Authors must use the LaTeX class files eurocg23  and eurocg23-submission  , which are based on the LIPICS class file. These class files should automatically count all lines containing text, excluding title and references, and excluding figures. Authors are expected to make reasonable effort to make sure all lines that contain text are counted: the class file should be considered an aid, and the responsibility of correctly counting lines remains with the authors. A zip file containing an example of how to use the class file can be found here  .  
 Your submission should provide a clear statement of your results including proofs. The main (175 line) body of your submission should be self-contained and contain a clear and succinct description of your results. Content that does not fit in the main body due to space restrictions must be placed into a clearly marked appendix, which will only be read at the discretion of the program committee.  
  Acceptance policy  
 EuroCG is a non-competitive forum. We will accept all submissions which are original, correct, well-presented, non-trivial, and in scope. The program committee judges submissions on these five criteria, each of which can lead to rejection. If a submission satisfies all criteria, then it will be accepted: there is no competition against other submissions.  
 Originality: If a submission does not contain original research by the authors, or if there is good reason to believe this is the case, this is a reason for rejection. We do not accept submissions which have already been accepted for publication elsewhere. However, we do explicitly allow submissions that are under review at another conference or journal (at the time of submission to EuroCG). 
  Correctness. If the main / a major result of a submission is not correct, this is a reason for rejection. If an attentive reviewer cannot establish correctness of the results from the content of the submission, this is a reason for rejection. However, an acceptance at EuroCG is no correctness guarantee. 
  Presentation. If a submission is written in a way that makes it unreadable, or it does not follow the submission guidelines as listed in the call for contributions, this is a reason for rejection. 
  Technical Depth. If a submission is trivial, this is a reason for rejection. However, there is no “minimum level” of technical depth required. 
  Scope. If a submission is out of scope, this is a reason for rejection. However, we wish to be inclusive in our interpretation of scope, which includes but is not limited to the list of topics in the call for contributions. 
   Proceedings  
 EuroCG does not have formally reviewed proceedings. A booklet of abstracts, without ISBN, will be accessible online on the website for the benefit of the community and must be regarded as a collection of preprints rather than a formally reviewed selection of papers. Results presented at EuroCG are expected to appear in other conferences with formal proceedings and/or in journals. In particular, papers that have been submitted to other formally reviewed conferences are eligible for presentation at EuroCG, assuming they have not been presented at a conference or published in a journal by the time of the conference. Authors of selected papers will be invited to submit extended versions to a special issue of the Computing in Geometry and Topology (CGT)  journal.  
   
  Authors of accepted submissions are expected to present their work at the conference (in-person). Failure to do so may result in removal of the contribution from the abstract booklet and conference website.  
 There will also be a voting for the Best Student Presentation.  

 © 2024 EuroCG'23   
 Powered by WordPress   
   
 To the top ↑   Up ↑      

  Except where otherwise noted, the content on this site is licensed under a Creative Commons Attribution-ShareAlike 4.0 International  License.

46. EuroCG_3 conference:
Computational Geometry  
   
 Home 
  CG Week 
  EuroCG 
  CG Society 
  → Old CG Pages 
   About 

 The European Workshop on Computational Geometry  (EuroCG) is an annual, informal workshop that combines a strong scientific tradition with a friendly and informal atmosphere. The workshop is a forum where established researchers and students can meet, discuss their work, present their results, and establish scientific collaborations. The goal is to present recent results and to identify and explore directions for future research. EuroCG does not have proceedings; the abstracts of accepted presentations are available on the website of the corresponding year, and should be regarded as preprints.  
 EuroCG does not have any formal organizational structure. Decisions about the venues for future years or about changes to the established processes are taken via votes at the business meeting. At EuroCG 2024, the task force preparing the CG Society presented the plans for the Society and the possibilities for EuroCG  at the business meeting. On Thursday, March 14, 2024 a vote was held by secret ballot on the question “Does EuroCG want to be organized as an event of the CG Society?” The results were 63 votes in favor, 10 votes against, and 1 blank vote. Correspondingly, starting in 2025, EuroCG will be organized as an event of the CG Society.  
   
 © 2024 CG Society. Maintained by the IT Committee  . Hosting sponsored by conova  .

47. ECSQARU_0 conference:
Select your cookie preferences  
  
 We use cookies and similar tools that are necessary to enable you to make purchases, to enhance your shopping experiences and to provide our services, as detailed in our Cookie notice  . We also use these cookies to understand how customers use our services (for example, by measuring site visits) so we can make improvements.  
 If you agree, we'll also use cookies to complement your shopping experience across the Amazon stores as described in our Cookie notice  . Your choice applies to using first-party and third-party advertising cookies on this service. Cookies store or access standard device information such as a unique identifier. The 96 third parties  who use cookies on this service do so for their purposes of displaying and measuring personalized ads, generating audience insights, and developing and improving products. Click "Decline" to reject, or "Customise" to make more detailed advertising choices, or learn more. You can change your choices at any time by visiting Cookie preferences  , as described in the Cookie notice. To learn more about how and for what purposes Amazon uses personal information (such as Amazon Store order history), please visit our Privacy notice  .  
  
  Sorry, there was a problem saving your preferences. Try again.   

  Accept    Decline    Customise    
   
      Skip to main content    .co.uk     
   
 Deliver to  Vietnam    

 Books     
 Select the department you want to search in  All Departments  Black Friday Week  Alexa Skills  Amazon Devices  Amazon Global Store  Amazon Resale  Apps & Games  Audible Audiobooks  Baby  Beauty  Books  Car & Motorbike  CDs & Vinyl  Classical Music  Computers & Accessories  Deals  Digital Music  DIY & Tools  DVD & Blu-ray  Electronics & Photo  Fashion  Women  Men  Girls  Boys  Baby  Garden & Outdoors  Gift Cards  Grocery  Handmade  Health & Personal Care  Home & Business Services  Home & Kitchen  Industrial & Scientific  Kindle Store  Large Appliances  Lighting  Luggage and travel gear  Luxury Stores  Musical Instruments & DJ Equipment  PC & Video Games  Pet Supplies  Premium Beauty  Prime Video  Software  Sports & Outdoors  Stationery & Office Supplies  Subscribe & Save  Toys & Games     

 Search Amazon.co.uk     

       Hello, sign in    
 Account & Lists    Returns  & Orders    0     
  Basket     

  All     
   
 Black Friday Week  Best Sellers  New Releases  Books  Home & Garden  Gift Cards & Top Up  Electronics  Toys & Games  Fashion  Beauty  PC & Video Games  PC  Health & Personal Care  Pet Supplies  Car & Motorbike  Subscribe & Save  Baby  Shopper Toolkit  Sell on Amazon  Gift Ideas  Sports & Outdoors  Customer Service  Disability Customer Support    

 Books   Advanced Search   Best Sellers & more   Top New Releases   Deals in Books   School Books   Textbooks   Books Outlet   Children's Books   Calendars & Diaries   Audible Audiobooks   Amazon Editors' Choice     

     Symbolic and Quantitative Approaches to Reasoning with Uncertainty: 17th European Conference, ECSQARU 2023, Arras, France, September 19–22, 2023, ... (Lecture Notes in Computer Science, 14294): Amazon.co.uk: Bouraoui, Zied, Vesic, Srdjan: 9783031456077: Books                                  

 Computing & Internet 
  › 
  Programming 
  › 
  Software Design, Testing & Engineering 

 Kindle Edition   
   £75.99    
  Available instantly    
        
 Paperback   
   £79.99    

 Other Used and New from  £67.04     Paperback from  £67.04      

 £79.99   £  79 .   99       

 £23.78 delivery 4 - 25 December     

 Deliver to  Vietnam    

 In stock   

  Quantity:  1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30   Quantity:  1         

    £  £79.99   79 .   99      (  )  Includes selected options.  Includes initial monthly payment and selected options.  Details    Price   (  £  79 .   99  x  )      
   £  79 .   99      

  Subtotal    
 £  £79.99   79 .   99        

 Subtotal    

  Initial payment breakdown    

 Delivery cost, delivery date and order total (including tax) shown at checkout.   

   Add to Basket       

    Buy Now      

 Dispatches from    
   
 Amazon    
   
 Dispatches from    
 Amazon    

 Sold by    
   
 Amazon    
   
 Sold by    
 Amazon    

 Returns    
   
 Returnable until Jan 31, 2025    Returnable until Jan 31, 2025    
 For the 2024 holiday season, this item if purchased between November 1 and December 25, 2024 can be returned until January 31, 2025 or within 30 days from receipt (whichever is later).   
 Read full Amazon return policy    

 Returns    
 Returnable until Jan 31, 2025    
 For the 2024 holiday season, this item if purchased between November 1 and December 25, 2024 can be returned until January 31, 2025 or within 30 days from receipt (whichever is later).    
 Read full Amazon return policy     

 Payment    
   
 Secure transaction    Your transaction is secure    
 We work hard to protect your security and privacy. Our payment security system encrypts your information during transmission. We don’t share your credit card details with third-party sellers, and we don’t sell your information to others. Learn more     

 Payment    
 Secure transaction    
 We work hard to protect your security and privacy. Our payment security system encrypts your information during transmission. We don’t share your credit card details with third-party sellers, and we don’t sell your information to others.  Learn more     

  Details     

  See more     

   Add gift options     

  Add to List      

  Added to    

  Unable to add item to List. Please try again.    

 Sorry, there was a problem.  
 There was an error retrieving your Wish Lists. Please try again.    

 Sorry, there was a problem.  
 List unavailable.    

  Other sellers on Amazon    
  New (3) from   £79.99  £  79 .   99         

 Download the free Kindle app and start reading Kindle books instantly on your smartphone, tablet or computer – no Kindle device required  .  
 Read instantly on your browser with Kindle for Web.  

  Using your mobile phone camera - scan the code below and download the Kindle app.  

 Image Unavailable  
  Image not available for  
  Colour:     

    To view this video download Flash Player 

 VIDEOS 
  360° VIEW 
  IMAGES 

 Read sample     

 Symbolic and Quantitative Approaches to Reasoning with Uncertainty: 17th European Conference, ECSQARU 2023, Arras, France, September 19–22, 2023, ... (Lecture Notes in Computer Science, 14294)  Paperback – 19 Nov. 2023   

 by Zied Bouraoui  (Editor),    Srdjan Vesic  (Editor)      

 See all formats and editions    

  Sorry, there was a problem loading this page.Try again.   

 {"desktop_buybox_group_1":[{"displayPrice":"£79.99","priceAmount":79.99,"currencySymbol":"£","integerValue":"79","decimalSeparator":".","fractionalValue":"99","symbolPosition":"left","hasSpace":false,"showFractionalPartIfEmpty":true,"offerListingId":"cI3qIZXU9%2Bx6xCEdexbnr%2BbO4H3tpSHrFb8IJc6ocgc4UIyeZustuOMKjtq5mubfxwiLCRXxrxynwy2WKiEQbuND8Jad7g%2B9vI7peOJ%2BWNHVT8YQW8nGuBHbSvVjArqD","locale":"en-GB","buyingOptionType":"NEW","aapiBuyingOptionIndex":0}]}   
 Purchase options and add-ons  

 This book constitutes the refereed proceedings of the 17th European Conference on Symbolic and Quantitative Approaches to Reasoning with Uncertainty, ECSQARU 2023, held in Arras, France, in September 2023.  
  The 35 full papers presented in this volume were carefully reviewed and selected from 46 submissions. The papers are organized in topical sections about Complexity and Database Theory; Formal Concept Analysis: Theoretical Advances; Formal Concept Analysis: Applications; Modelling and Explanation; Semantic Web and Graphs; Posters.   

  Read more     

  Report an issue with this product    

   Previous slide of product details       
 ISBN-10     3031456076 
  ISBN-13     978-3031456077 
  Edition     1st ed. 2024 
  Publisher     Springer 
  Publication date     19 Nov. 2023 
  Language     English 
  Dimensions     15.5 x 2.84 x 23.5 cm 
  Print length     496 pages 
  See all details 

 Next slide of product details       

  Product details  
 Publisher ‏ : ‎  Springer; 1st ed. 2024 edition (19 Nov. 2023) 
  Language ‏ : ‎  English 
  Paperback ‏ : ‎  496 pages 
  ISBN-10 ‏ : ‎  3031456076 
  ISBN-13 ‏ : ‎  978-3031456077 
  Dimensions ‏ : ‎  15.5 x 2.84 x 23.5 cm 

     Customer reviews  
   
 5 star  4 star  3 star  2 star  1 star  5 star     0%  0%  0%  0%  0%  0% 
  5 star  4 star  3 star  2 star  1 star  4 star     0%  0%  0%  0%  0%  0% 
  5 star  4 star  3 star  2 star  1 star  3 star     0%  0%  0%  0%  0%  0% 
  5 star  4 star  3 star  2 star  1 star  2 star     0%  0%  0%  0%  0%  0% 
  5 star  4 star  3 star  2 star  1 star  1 star     0%  0%  0%  0%  0%  0% 

  How customer reviews and ratings work   Customer Reviews, including Product Star Ratings, help customers to learn more about the product and decide whether it is the right product for them.  
 To calculate the overall star rating and percentage breakdown by star, we don’t use a simple average. Instead, our system considers things like how recent a review is and if the reviewer bought the item on Amazon. It also analyses reviews to verify trustworthiness.  
 Learn more how customers reviews work on Amazon    

 View Image Gallery     

 Amazon Customer    
    
 5.0 out of 5 stars     
     
  Images in this review    

 No customer reviews   

 Your recently viewed items and featured recommendations   
 ›   
 View or edit your browsing history    
   
 After viewing product detail pages, look here to find an easy way to navigate back to pages you are interested in.    

  Your recently viewed items and featured recommendations   
 ›   
 View or edit your browsing history    
   
 After viewing product detail pages, look here to find an easy way to navigate back to pages you are interested in.    

 Back to top    
  Get to Know Us   
 Careers 
  About Us 
  UK Modern Slavery Statement 
  Amazon Science 

 Make Money with Us   
 Sell on Amazon 
  Sell on Amazon Business 
  Sell on Amazon Handmade 
  Associates Programme 
  Fulfilment by Amazon 
  Seller Fulfilled Prime 
  Advertise Your Products 
  Independently Publish with Us 
  Amazon Pay 
  Host an Amazon Hub 
  › | See More Make Money with Us 

 Amazon Payment Methods   
 The Amazon Barclaycard 
  Credit Card 
  Amazon Money Store 
  Gift Cards 
  Amazon Currency Converter 
  Payment Methods Help 
  Shop with Points 
  Top Up Your Account 
  Top Up Your Account in Store 

 Let Us Help You   
 COVID-19 and Amazon 
  Track Packages or View Orders 
  Delivery Rates & Policies 
  Returns & Replacements 
  Recycling 
  Manage Your Content and Devices 
  Amazon Mobile App 
  Customer Service 
  Accessibility 

  £  GBP - Pounds    United Kingdom     

 Amazon Music  
  Stream millions  
  of songs | AbeBooks  
  Books, art  
  & collectables | ACX  
  Audiobook Publishing  
  Made Easy | Veeqo  
  Shipping Software  
  Inventory Management 
 Amazon Web Services  
  Scalable Cloud  
  Computing Services | Audible  
  Download Audiobooks | Goodreads  
  Book reviews  
  & recommendations | Amazon Home Services  
  Experienced pros  
  Happiness Guarantee 
 IMDb  
  Movies, TV  
  & Celebrities | Kindle Direct Publishing  
  Indie Digital & Print Publishing  
  Made Easy | Shopbop  
  Designer  
  Fashion Brands | Amazon Resale  
  Great Deals on  
  Quality Used Products 
 Amazon Business  
  Service for  
  business customers |  

 Conditions of Use & Sale 
  Privacy Notice 
  Cookies Notice 
  Interest-Based Ads Notice 
  © 1996-2024, Amazon.com, Inc. or its affiliates

48. ECSQARU_1 conference:
Science Direct                  Journals & Books 
   
 ScienceDirect help 

 !  There was a problem providing the content you requested  
 Please contact us via our support center  for more information and provide the details below.  
 Reference Number: 8ea891156b1784f4  
 IP Address: 183.80.111.110  
 User Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/131.0.0.0 Safari/537.36 Edg/131.0.0.0  
 Timestamp: 2024-11-30 05:51:12 UTC  
   
 ::CLOUDFLARE_ERROR_1000S_BOX::   

 Elsevier             About ScienceDirect    Shopping cart    Contact and support    Terms and conditions    Privacy policy    
 We use cookies to help provide and enhance our service and tailor content and ads. By continuing you agree to the use of cookies   .  
 Copyright © 2020 Elsevier B.V. or its licensors or contributors. ScienceDirect ® is a registered trademark of Elsevier B.V.  
   
 RELX Group

49. ECSQARU_2 conference:


50. EDCC_0 conference:
20th European Dependable Computing Conference  
  8-11 April 2025   
  Lisbon, Portugal   
   
 Home >   
     
 Technical information   
  Important Dates >   
  Call For Papers >   
  Workshops >   
  Call for Posters >   
  Student Forum >   
  Fast Abstracts >   
  Keynotes >   
  Technical Program >   
  Info for Presenters >   
     
 General Information   
  Venue and Travel >   
  Social Programme >   
  Local Information >   
  Registration >   
  Accommodation >   
  Committees >   
  Past Editions >   
  Call For Sponsorships >   
  Sponsors >   
  Diversity-Equity Conduct >   

 Welcome to EDCC 2025!  
 Overview  
  The European Dependable Computing Conference is a leading venue for presenting and discussing the latest research, industrial practice and innovations in dependable and secure computing with a long tradition started in 1994 and reaching the 20 th  edition.  
 Lisbon, the vibrant capital of Portugal, is a city that effortlessly blends history, culture and modernity. Situated in coast of Portugal, where the Tagus river meets the Atlantic Ocean, it boasts a rich cultural heritage, from the medieval quarters to the iconic landmarks like the Castle of St. George and the Tower of Belém.  
   
 Latest news from EDCC    

  Lisbon is the home of the University of Lisbon (ULisboa), the largest and most prestigious university in Portugal and is one of Europe’s leading universities. Since its begin, ULisboa had a turbulent beginnings. In the words of A. Moreira Sá: "The Portuguese University was founded by King Dinis on March 1, 1290, and was transferred to Coimbra in 1308; thirty years later it was transferred back to Lisbon and then, in 1354, it was moved once again to Coimbra. However King Fernando ordered, on June 3, 1377, its transferal back to Lisbon, where it stayed for 160 years without interruption - more precisely during the Discoveries, a period which greatly benefitted from the contributions of several of its students and teachers (among many others, the sailor Gil Eanes and two key scientific figures: Pedro Nunes and Garcia de Orta)."  
 With more seven centuries, ULisboa brings together various areas of knowledge and has a privileged position for facilitating the contemporary evolution of science, technology, arts and humanities. The quality of teaching, research innovation and culture of ULisboa is attracting an ever increasing amount of talent from around the world.  
 We will host you in the Faculty of Sciences of the University of Lisbon (FCUL), an integral and founding unit of ULisboa, created by Decree in 1911, which takes on the historical, cultural and scientific heritage of its ancestors: Noviciado da Cotovia (1619-1759), Real Colégio dos Nobres (1761-1837), and Escola Politécnica (1837-1911).  
 The FCUL’s motto is What we do not know today, we will know tomorrow (Garcia de Orta, 1563).   
 FCUL integrates the Department of Informatics and LASIGE research unit, characterized by the excellence of its research international visibility, and close connection to society. LASIGE performs cutting-edge investigation in seven Research Lines of Excellence related to Computer Science. The Dependable and Secure Decentralised Systems and Cyber-Physical Systems research lines play an essential role in the generation of new knowledge in data privacy security for software systems, network and distributed systems.  
 Please mark your calendars and don’t hesitate to contact us at ivmedeiros@fc.ul.pt  !  
 Ibéria Medeiros, general chair EDCC2025  
  Supporters:  
  
 This project was supported by Fundação para a Ciências e a Tecnologia (FCT) under LASIGE Strategic Project UIDB/00308/2020 and UIDP/00408/2022. |

51. EDCC_1 conference:
Conference Partner   Home 
  Conferences 
  Journals 
  Proofreading 
  Login 

  中文  |  English  |  Español  |  日本語     

 Conference Partner  » Conferences  » EDCC    
  Conference Information   
   
 EDCC 2024: European Dependable Computing Conference  
 https://edcc2024.esat.kuleuven.be/   
   
 Submission Date: | 2023-09-29 
 Notification Date: | 2023-12-15 
 Conference Date: | 2024-04-08 
 Location: | Leuven, Belgium 
 Years: | 19 
  
 QUALIS: b2  Viewed: 13730  Tracked: 1  Attend: 0    

  Call For Papers   
   
 Overview The European Dependable Computing Conference is a unique forum for researchers and practitioners to present and discuss their latest research results on theory, techniques, systems, and tools for the design, validation, operation and evaluation of dependable and secure computing systems. In addition to original research papers, EDCC welcomes contributions on dependability in practice: industrial applications, experience in introducing dependability in industry, use of new or mature dependability approaches to new challenging problems or domains, etc. It will also provide a natural meeting place for the large number of projects in dependability and security, to present their state of advancement and innovative results. The conference program will be enriched by workshops, a students forum, posters, fast abstracts, and an industry track. The conference proceedings will be published by IEEE Conference Publishing Services (CPS) and will be available at IEEEXplore. The leaflet for the call for papers is now available for download on our website. To access the leaflet, simply click on the Download CFP. Topics The conference covers a broad perspective on dependability and security, which includes, but is not limited to: Hardware and software architecture of dependable systems; Fault-tolerant networks, protocols and systems; Time-sensitive networks and ultra-reliable low-latency communication; Mixed-criticality systems design and evaluation; Dependability modelling and tools; Testing and validation methods; Dependability and security of: Artificial Intelligence; Critical infrastructures, e.g. smart energy grids, intelligent vehicles, smart cities; Cyber-physical systems; (industrial) Internet of Things; Cloud, fog, and edge computing systems; Data analytics application; Databases and distributed ledgers (incl. blockchains); Safety-critical system design and analysis; Data protection and data privacy;  Last updated by Dou Sun  in 2023-06-23   

  Related Conferences   

 CCF | CORE | QUALIS | Short | Full Name | Submission | Notification | Conference 
 HCI-Europe | International Conferences in Central Europe on Human Computer Interfaces | 2015-06-20 | 2015-07-10 | 2015-09-14 
 KST | International Conference on Knowledge and Smart Technology | 2024-12-10 | 2025-01-20 | 2025-02-26 
 c | b | a2 | AVI | International Conference on Advanced Visual Interfaces | 2024-01-17 | 2024-06-03 
 b4 | IGSC | International Green and Sustainable Computing Conference | 2024-08-05 | 2024-09-13 | 2024-11-02 
 CooIDC | USENIX Workshop on Cool Topics in Sustainable Data Centers | 2015-12-22 | 2016-02-02 | 2016-03-19 
 b | a | a1 | HPDC | International ACM Symposium on High-Performance Parallel and Distributed Computing | 2025-01-23 | 2025-03-24 | 2025-07-20 
 a | a* | a1 | AAAI | AAAI Conference on Artificial Intelligence | 2024-08-07 | 2024-12-09 | 2025-02-25 
 b | a | a2 | ESORICS | European Symposium on Research in Computer Security | 2024-04-19 | 2024-06-14 | 2024-09-16 
 ICBIS | International Conference on Business Information Systems | 2020-08-05 | 2020-08-20 | 2020-09-18 
 c | ICEC | International Conference on Entertainment Computing | 2018-05-21 | 2018-06-05 | 2018-09-17 
  
 1665  2034  1493  80  1826  332  408  72  3152  44    

 Short | Full Name | Submission | Conference 
 HCI-Europe | International Conferences in Central Europe on Human Computer Interfaces | 2015-06-20 | 2015-09-14 
 KST | International Conference on Knowledge and Smart Technology | 2024-12-10 | 2025-02-26 
 AVI | International Conference on Advanced Visual Interfaces | 2024-01-17 | 2024-06-03 
 IGSC | International Green and Sustainable Computing Conference | 2024-08-05 | 2024-11-02 
 CooIDC | USENIX Workshop on Cool Topics in Sustainable Data Centers | 2015-12-22 | 2016-03-19 
 HPDC | International ACM Symposium on High-Performance Parallel and Distributed Computing | 2025-01-23 | 2025-07-20 
 AAAI | AAAI Conference on Artificial Intelligence | 2024-08-07 | 2025-02-25 
 ESORICS | European Symposium on Research in Computer Security | 2024-04-19 | 2024-09-16 
 ICBIS | International Conference on Business Information Systems | 2020-08-05 | 2020-09-18 
 ICEC | International Conference on Entertainment Computing | 2018-05-21 | 2018-09-17 
  
 1665  2034  1493  80  1826  332  408  72  3152  44    

  Related Journals   

 CCF | Full Name | Impact Factor | Publisher | ISSN 
 IEEE Transactions on Power Delivery | 3.800 | IEEE | 0885-8977 
 Journal of Computer and Systems Sciences International | 0.500 | Springer | 1064-2307 
 Entropy | 2.100 | MDPI | 1099-4300 
 Ethics and Information Technology | 3.400 | Springer | 1388-1957 
 International Journal of IT/Business Alignment and Governance | IGI Global | 1947-9611 
 Journal of Machine Engineering | Wroclaw Board of Scientific Technical | 1895-7595 
 Journal of Electrical And Electronics Engineering | 2.300 | IJRDO | 2456-6055 
 a | IEEE Transactions on Dependable and Secure Computing | 7.000 | IEEE | 1545-5971 
 c | Journal of Network and Computer Applications | 7.700 | Elsevier | 1084-8045 
 International Journal of Advances in Intelligent Informatics | Universitas Ahmad Dahlan | 2442-6571 
  
 1128  501  1068  478  310  990  708  9  45  1026    

 Full Name | Impact Factor | Publisher 
 IEEE Transactions on Power Delivery | 3.800 | IEEE 
 Journal of Computer and Systems Sciences International | 0.500 | Springer 
 Entropy | 2.100 | MDPI 
 Ethics and Information Technology | 3.400 | Springer 
 International Journal of IT/Business Alignment and Governance | IGI Global 
 Journal of Machine Engineering | Wroclaw Board of Scientific Technical 
 Journal of Electrical And Electronics Engineering | 2.300 | IJRDO 
 IEEE Transactions on Dependable and Secure Computing | 7.000 | IEEE 
 Journal of Network and Computer Applications | 7.700 | Elsevier 
 International Journal of Advances in Intelligent Informatics | Universitas Ahmad Dahlan 
  
 1128  501  1068  478  310  990  708  9  45  1026    

  Recommendation   

 Track It 1 
  Attend It 0 
  Edit CFP 

 Tracker 
 Liu Shijin (377) 
  
 50393    
   
  Advertisment   

  4,945  Conferences | 1,179  Journals | 69,526  Researchers | 383,485,911 PV  
  Copyright © 2011-2024 myhuiban.com. All Rights Reserved. About Us  | Facebook  | X  | Post CFP or Contact Us  | Promotion

52. EuroSys_0 conference:
Menu   Calls | Call for Papers 
  Call for Shadow PC 
  Call for Artifacts 
  Call for Workshops 
  Call for Posters 
  Committees | Organization committee 
  program committee 
  Shadow PC committee 
  Workshops 
  Program | Program 
  EuroSys 2023 Awards 
  Accepted Papers 
  Accepted Posters 
  Information to authors 
  Grants 
  Registration 
  Location | Venue 
  Accomodation 
  Banquet 
  Welcome Reception 
  Sponsors 
  About 

 EuroSys 2023   
 Rome   
 May 8th-12th 2023   

 Overview  
  Welcome to the 18th edition of EuroSys!  
  EuroSys  is a premier conference on various aspects of systems software research and development, including its ramifications for hardware and applications. Topics of interest for the conference include: operating systems, database systems, real-time systems, networked systems, storage systems, middleware, distributed, parallel, and embedded computing systems.  
 EuroSys 2023 will be a five-day event. The first day is devoted to workshops, to allow junior and senior researchers to interact in a friendly environment on cutting-edge ideas. The other four days are dedicated to the main conference track.  
 The 18th edition of EuroSys will follow the pattern established by the previous EuroSys conferences, by seeking high-quality papers on all aspects of computer systems.  
 Link to ACM Proceedings    
 Link to EuroSys 2023 Awards    
 The Conference Manual is available at the following link  .   
 The program is available at the program page  , for the location of each workshop see the workshops page  .   
 Important dates  
  Spring deadline  
 Camera-ready format at https://eurosys23.hotcrp.com/    
 Paper titles and abstracts due: Wednesday, May 11, 2022 
  Full paper submissions due: Wednesday, May 18, 2022 
  Notification to authors: Wednesday, Aug 10, 2022 
  Camera-ready deadline: Wednesday, Oct 5, 2022 
  Fall deadline  
 Now open for submissions at https://eurosys23-fall.hotcrp.com/    
 Paper titles and abstracts due: Wednesday, October 12, 2022 
  Full paper submissions due: Wednesday, October 19, 2022 
  Notification to authors: Wednesday, January 18, 2023 
  Camera-ready deadline: Wednesday, March 15, 2023 
   
  Organization  

 Sponsors  
  Platinum  

 Silver  

 Bronze  

  Supported by  

 Copyright © EuroSys 2023

53. EJC_0 conference:
Skip to content      

 EJC 2023   
 European – Japanese Conference on Information Modelling and Knowledge Bases   
   
     About | Participants section 
  Local Proceedings 
  Programme | Programme 
  Keynote speakers 
  Summer School Speakers 
  Call for Papers | Call for Papers 
  Important Dates 
  Contact 
  Venue | Travel info 
  Accommodation 
  Registration 

 33rd International Conference on Information Modelling and Knowledge Bases EJC 2023  
   
 33rd International Conference on Information Modelling and Knowledge Bases EJC 2023   
 admin   October 28, 2022     
  
 Maribor, Slovenia, June 5 – June 9, 2023   
                
 The next conference will be organised by the University of Maribor, Slovenia.  
 Important dates:   
 Submission Deadline: | 15  January 2023 | 31 January 2023 (Extended) 
  Notification of Acceptance: | 30 | March 2023 
  Final paper for inclusion in the conference proceedings: | April 2023 
  IOS Press version of Papers: | 10 September 2023 
  Submission details and paper submission: http://ejc.komazawa-u.ac.jp/ejc2023review/   
  Motivation   
 Information modelling is becoming increasingly important for researchers, designers, and users of information systems. The amount and complexity of information, the number of abstraction levels, and the size of databases and knowledge bases are continuously growing. Conceptual modelling is one of the sub-areas of information modelling. The aim of this conference is to bring together experts from different areas of computer science and other disciplines who have a common interest in understanding and solving problems on information modelling and knowledge bases, as well as applying the results of research to practice. We also aim to recognise and study new areas of modelling and knowledge bases to which more attention should be paid. Therefore philosophy and logic, cognitive science, knowledge management, linguistics and management science are relevant areas, too. The conference will have three categories of presentations, i.e. full papers, short papers and position papers.  
 Background   
 The series of European – Japanese Conferences on Information Modelling and Knowledge Bases (EJC) originally started as a cooperation initiative between Japan and Finland in 1988 as a continuum to the series of Scandinavian conferences since 1982. The practical operations were then organised by professor Ohsuga in Japan and professors Hannu and Hannu Jaakkola in Finland. The geographical scope was expanded to cover first Europe and further other countries.  
 Working principles   
 Facilitates discussion, allows enough presentation time, and limits the number of participants (50) and papers (30).  
 Suggested topics include, but are not limited to:  
 1. Conceptual modelling  : Modelling and speciﬁcation languages; Domain-speciﬁc conceptual modelling; Concepts, concept theories and ontologies; Conceptual modelling of large and heterogeneous systems; Conceptual modelling of spatial, temporal and biological data; Methods for developing, validating and communicating conceptual models.  
 2. Knowledge and information modelling and discovery  : Knowledge discovery, knowledge representation and knowledge management; Advanced data mining and analysis methods; Conceptions of knowledge and information; Modelling information requirements; Intelligent information systems; Information recognition and information modelling.  
 3. Linguistic modelling  : Models of HCI; Information delivery to users; Intelligent informal querying; Linguistic foundation of information and knowledge; Fuzzy linguistic models; Philosophical and linguistic foundations of conceptual models.  
 4. Cross-cultural communication and social computing  : Cross-cultural support systems; Integration, evolution and migration of systems; Collaborative societies; Multicultural web-based software systems; Intercultural collaboration and support systems; Social computing, behavioural modelling and prediction.  
 5. Environmental modelling and engineering  : Environmental information systems (architecture); Spatial, temporal and observational information systems; Large-scale environmental systems; Collaborative knowledge base systems; Agent concepts and conceptualisation; Hazard prediction, prevention and steering systems.  
 6. Multimedia data modelling and systems  : Modelling multimedia information and knowledge; Content-based multimedia data management; Content-based multimedia retrieval; Privacy and context enhancing technologies; Semantics and pragmatics of multimedia data; Metadata for multimedia information systems.  
 The total number of participants is limited to 50 (30 papers). We want to provide enough time for the presentations and discussions. The conference is an excellent forum for networking with the active research community on this important topic. The authors must present their paper at the conference.  
 All papers (full/short/position) accepted and presented in the conference are published in the conference preprint (e-book having ISSN / ISBN) by the local organisers (distributed in the conference) and after the conference in the final journal-paper publication.  
 After the conference, authors have the opportunity to improve their papers based on the feedback at the conference. The final publication is published in the Series “Frontiers in Artificial Intelligence” by IOS Press (Amsterdam). The books “Information Modelling and Knowledge Bases Vol. n” are edited by the Editing Committee. It has the right to propose obligatory improvements as a precondition to the publication. It has the right to withdraw papers that do not follow the given guidelines and technical style.  
 In all editorial issues, please contact the editing committee.  
   
 News     

 Organising institution  

 © 2024 EJC 2023  | Designed by: Theme Freesia  | Powered by: WordPress    

  Top

54. EuroSys_1 conference:
Menu   Calls | Call for Papers 
  Call for Shadow PC 
  Call for Artifacts 
  Call for Workshops 
  Call for Posters 
  Committees | Organization committee 
  program committee 
  Shadow PC committee 
  Workshops 
  Program | Program 
  EuroSys 2023 Awards 
  Accepted Papers 
  Accepted Posters 
  Information to authors 
  Grants 
  Registration 
  Location | Venue 
  Accomodation 
  Banquet 
  Welcome Reception 
  Sponsors 
  About 

 EuroSys 2023   
 Rome   
 May 8th-12th 2023   

 Conference Program  
 All times are in Central Europe Summer Time (CEST)   
 Note that the welcome reception will be held in a different venue ( Chiostro - San Pietro in Vincoli  ) than the main venue and satellite venue of the workshops.   
 Please head to the Auditorium Antonianum for EuroSys 2023 registration; collect your badge and conference kit exclusively at this location. All participants are expected to visit the Auditorium Antonianum for a smooth registration process, attendee registered for the full conference can join the welcome reception before collecting the badge. Lunch will be exclusively served at the Auditorium, while coffee breaks will be available at both locations during the workshop day. The main conference is entirely held at the Auditorium Antonianum.  
  
 Link to ACM Proceedings    
 Link to EuroSys 2023 Awards    
 Link to Accepted Papers page    
  
 Mon, 8 May | Tue, 9 May | Wed, 10 May | Thu, 11 May | Fri, 12 May 
 8:30 | Registration  
  ( Auditorium  ) | Registration | Registration | Registration |  
 9:00 | Workshops | Opening Remarks | Machine Learning 1 | Security | Key-Value Stores 
 9:10 
 9:20 | Debugging 1 
 9:30 
 9:40 
 9:50 
 10:00 
 10:10 
 10:20 
 10:30 | Coffee Break  
  ( Auditorium and DIAG  ) | Coffee Break | Coffee Break | Coffee Break | Coffee Break 
 11:00 | Workshops | Edge | Memory | Misc 2 | Machine Learning 2 
 11:10 
 11:20 
 11:30 
 11:40 
 11:50 
 12:00 
 12:10 | Debugging 2 | Misc 1 | Networking 
 12:20 
 12:30 | Closing Session 
 12:40 
 12:50 |  
 13:00 | Lunch  
  ( Auditorium  ) 
 13:10 
 13:20 | Lunch | Lunch | Lunch 
 14:20 
 14:30 | Workshops 
 14:40 
 14:50 | Graph | Serverless | Transactions 
 15:00 
 15:10 
 15:20 
 15:30 
 15:40 
 15:50 
 16:00 | Coffee Break  
  ( Auditorium and DIAG  ) | Coffee Break | Coffee Break | Coffee Break 
 16:30 | Workshops | Sponsored Talk | Cloud Computing | Persistence 
 16:40 
 16:50 | Poster Session 
 17:00 
 17:10 
 17:20 
 17:30 
 17:40 
 17:50 
 18:00 | General Assembly |  
 18:10 
 18:20 |  
 18:30 | Welcome Reception  
  (Chiostro - San Pietro in Vincoli) 
 19:00 |  
 19:30 |  
 20:00 | Banquet  
  (Chiostro del Bramante) 

 Monday 08/05/2023 
 Workshop | Location 
 PaPoC | Auditorium, first floor, Aula A 
 EdgeSys | Auditorium, first floor, Aula B 
 CHEOPS | Auditorium, ground floor, San Francesco 
 EUROSEC | Auditorium, ground floor, San Bernardino 
 EuroMLSys | DIAG, first floor, Aula Magna 
 SysTEX | DIAG  , ground floor, A2 
 SESAME | DIAG  , ground floor, A3 
 EuroDW | DIAG  , ground floor, A4 

 Tuesday 09/05/2023 
 Begin-End | Subject 
 8:30-9:00 | Registration 
 9:00-9:20 | Opening Remarks 
 9:20-10:30 | Debugging 1  
  (Session Chair: Natacha Crooks)  Effective Performance Issue Diagnosis with Value-Assisted Cost Profiling | Lingmei Weng (Columbia University), Yigong Hu (Johns Hopkins University), Peng Huang (University of Michigan), Jason Nieh (Columbia University), Junfeng Yang (Columbia University) 
  Foxhound: Server-Grade Observability for Network-Augmented Applications | Lucas Castanheira (Carnegie Mellon University), Alberto Schaeffer-Filho (Federal University of Rio Grande do Sul (UFRGS)), Theophilus A. Benson (Brown University) 
  OFence: Pairing Barriers to Find Concurrency Bugs in the Linux Kernel | (BEST PAPER AWARD) | Baptiste Lepers (Université de Neuchâtel), Josselin Giet (ENS), Willy Zwaenepoel (The University of Sydney), Julia Lawall (Inria) 
 10:30-11:00 | Coffee Break 
 11:00-12:10 | Edge  
  (Session Chair: Edouard Bugnion)  Pocket: ML Serving from the Edge | Misun Park (Georgia Institute of Technology), Ketan Bhardwaj (Georgia Institute of Technology), Ada Gavrilovska (Georgia Institute of Technology) 
  Efficient and Safe I/O Operations for Intermittent Systems | Eren Yildiz (Ege University), Saad Ahmed (Georgia Institute of Technology), Bashima Islam (Worcester Polytechnic Institute), Josiah Hester (Georgia Institute of Technology), Kasim Sinan Yildirim (University of Trento) 
  ICE: Collaborating Memory and Process Management for User Experience on Resource-limited Mobile Devices | Changlong Li (East China Normal University), Yu Liang (City University of Hong Kong), Rachata Ausavarungnirun (King Mongkut's University of Technology North Bangkok), Zongwei Zhu (University of Science and Technology of China), Liang Shi (East China Normal University), Chuan Jason Xue (City University of Hong Kong) 
 12:10-13:20 | Debugging 2  
  (Session Chair: Baptiste Lepers)  Diagnosing Kernel Concurrency Failures with AITIA | Dae R. Jeong (KAIST), Minkyu Jung (KAIST), Yoochan Lee (Seoul National University), Byoungyoung Lee (Seoul National University), Insik Shin (KAIST), Youngjin Kwon (KAIST) 
  WAFFLE: Exposing Memory Ordering Bugs Efficiently with Active Delay Injection | Bogdan Alexandru Stoica (University of Chicago), Shan Lu (University of Chicago), Madanlal Musuvathi (Microsoft Research), Suman Nath (Microsoft Research) 
  Model Checking Guided Testing for Distributed Systems | Dong Wang (Institute of Software Chinese Academy of Sciences), Wensheng Dou (Institute of Software Chinese Academy of Sciences), Yu Gao (Institute of Software Chinese Academy of Sciences), Chenao Wu (Institute of Software Chinese Academy of Sciences), Jun Wei (Institute of Software Chinese Academy of Sciences), Tao Huang (Institute of Software Chinese Academy of Sciences) 
 13:20-14:50 | Lunch 
 14:50-16:00 | Graph  
  (Session Chair: Peter Pietzuch)  MariusGNN: Resource-Efficient Out-of-Core Training of Graph Neural Networks | Roger Waleffe (University of Wisconsin-Madison), Jason Mohoney (University of Wisconsin-Madison), Theodoros Rekatsinas (ETH Zurich), Shivaram Venkataraman (University of Wisconsin-Madison) 
  Accelerating Graph Mining Systems with Subgraph Morphing | Kasra Jamshidi (Simon Fraser University), Harry Xu (UCLA), Keval Vora (Simon Fraser University) 
  TEA: A General-Purpose Temporal Graph Random Walk Engine | Chengying Huan (Tsinghua University and Baihai Technology Inc.), Shuaiwen Leon Song (University of Sydney), Santosh Pandey (Stevens Institute of Technology), Hang Liu (Stevens Institute of Technology), Yongchao Liu (Ant Group), Baptiste Lepers (Université de Neuchâtel), Changhua He (Ant Group), Kang Chen (Tsinghua University), Jinlei Jiang (Tsinghua University), Yongwei Wu (Tsinghua University) 
 16:00-16:30 | Coffee Break 
 16:30-16:50 | Sponsored Talk  Challenges in Computing Industry | Dr. Tingyao Wu (European Research Institute, Huawei Technologies) 
 16:50-18:20 | Poster Session 

 Wednesday 10/05/2023 
 Begin-End | Subject 
 8:30-9:00 | Registration 
 9:00-10:30 | Machine Learning 1  
  (Session Chair: Y. Charlie Hu)  ALT: Breaking the Wall between Data Layout and Loop Optimizations for Deep Learning Compilation | Zhiying Xu (Nanjing University), Jiafan Xu (Nanjing University), Hongding Peng (Nanjing University), Wei Wang (Nanjing University), Xiaoliang Wang (Nanjing University), Haoran Wan (Nanjing University), Haipeng Dai (Nanjing University), Yixu Xu (Huawei Technologies), Hao Cheng (Huawei Technologies), Kun Wang (University of California, Los Angeles), Guihai Chen (Nanjing University) 
  REFL: Resource-Efficient Federated Learning | Ahmed M. Abdelmoniem (Queen Mary University of London), Atal Narayan Sahu (KAUST), Marco Canini (KAUST), Suhaib A. Fahmy (KAUST) 
  Tabi: An Efficient Multi-Level Inference System for Large Language Models | Yiding Wang (Hong Kong University of Science and Technology), Kai Chen (Hong Kong University of Science and Technology), Haisheng Tan (University of Science and Technology of China), Kun Guo (Fuzhou University) 
  Fast and Efficient Model Serving Using Multi-GPUs with Direct-Host-Access | Jinwoo Jeong (Ajou University), Seungsu Baek (Ajou University), Jeongseob Ahn (Ajou University) 
 10:30-11:00 | Coffee Break 
 11:00-12:10 | Memory  
  (Session Chair: Sam H Noh)  DiLOS: Do Not Trade Compatibility for Performance in Memory Disaggregation | Wonsup Yoon (KAIST), Jisu Ok (KAIST), Jinyoung Oh (KAIST), Sue Moon (KAIST), Youngjin Kwon (KAIST) 
  vTMM: Tiered Memory Management for Virtual Machines | Sai Sha (Peking University), Chuandong Li (Peking University), Yingwei Luo (Peking University), Xiaolin Wang (Peking University), Zhenlin Wang (Michigan Technological University) 
  Making Dynamic Page Coalescing Effective on Virtualized Clouds | Weiwei Jia (The University of Rhode Island), Jiyuan Zhang (New Jersey Institute of Technology), Jianchen Shan (Hofstra University), Xiaoning Ding (New Jersey Institute of Technology) 
 12:10-13:20 | Misc 1  
  (Session Chair: Pedro Fonseca)  Omni-Paxos: Breaking the Barriers of Partial Connectivity | Harald Ng (KTH Royal Institute of Technology), Seif Haridi (KTH Royal Institute of Technology, RISE Research Institutes of Sweden), Paris Carbone (KTH Royal Institute of Technology, RISE Research Institutes of Sweden) 
  CFS: Scaling Metadata Service for Distributed File System via Pruned Scope of Critical Sections | Yiduo Wang (University of Science and Technology of China; Baidu (China) Co., Ltd), Yufei Wu (University of Science and Technology of China), Cheng Li (University of Science and Technology of China Anhui Province Key Laboratory of High Performance Computing), Pengfei Zheng (Baidu (China) Co., Ltd), Biao Cao (Baidu (China) Co., Ltd), Yan Sun (Baidu (China) Co., Ltd), Fei Zhou (Baidu (China) Co., Ltd), Yinlong Xu (University of Science and Technology of China; Anhui Province Key Laboratory of High Performance Computing), Yao Wang (Baidu (China) Co., Ltd), Guangjun Xie (Baidu (China) Co., Ltd) 
  OLPart: Online Learning based Resource Partitioning for Colocating Multiple Latency-Critical Jobs on Commodity Computers | Ruobing Chen (Nankai university), Haosen Shi (Nankai university, NTU), Yusen Li (Nankai university, NTU), Xiaoguang Liu (Nankai University), Gang Wang (Nankai University) 
 13:20-14:50 | Lunch 
 14:50-16:00 | Serverless  
  (Session Chair: Ana Klimovic)  Palette Load Balancing: Locality Hints for Serverless Functions | Mania Abdi (Northeastern University), Samuel Ginzburg (Princeton), Xiayue Charles Lin (Anyscale), Jose Faleiro (Unaffiliated), Gohar Irfan Chaudhry (Azure Systems Research), Inigo Goiri (Azure Systems Research), Ricardo Bianchini (Azure Systems Research), Daniel S. Berger (Azure Systems Research), Rodrigo Fonseca (Azure Systems Research) 
  With Great Freedom Comes Great Opportunity: Rethinking Resource Allocation for Serverless Functions | Muhammad Bilal (Instituto Superior Técnico (ULisboa), INESC-ID, UCLouvain), Marco Canini (KAUST), Rodrigo Fonseca (Azure Systems Research), Rodrigo Rodrigues (Instituto Superior Técnico (ULisboa), INESC-ID) 
  Groundhog: Efficient Request Isolation in FaaS | Mohamed Alzayat (Max Planck Institute for Software Systems (MPI-SWS)), Jonathan Mace (Max Planck Institute for Software Systems (MPI-SWS)), Peter Druschel (Max Planck Institute for Software Systems (MPI-SWS)), Deepak Garg (Max Planck Institute for Software Systems (MPI-SWS)) 
 16:00-16:30 | Coffee Break 
 16:30-18:00 | Cloud Computing  
  (Session Chair: Xiaosong Ma)  Aggregate VM: Why Reduce or Evict VM’s Resources When You Can Borrow Them From Other Nodes? | Ho-Ren Chuang (Virginia Tech), Karim Manaouil (The University of Edinburgh), Tong Xing (The University of Edinburgh), Antonio Barbalace (The University of Edinburgh), Pierre Olivier (The University of Manchester), Balvansh Heerekar (Virginia Tech), Binoy Ravindran (Virginia Tech) 
  Understanding and Optimizing Workloads for Unified Resource Management in Large Cloud Platforms | Chengzhi Lu (Shenzhen Institute of Advanced Technology, CAS, University of Macau), Huanle Xu (University of Macau, Macau SAR), Kejiang Ye (Shenzhen Institute of Advanced Technology, CAS), Guoyao Xu (Alibaba Group), Liping Zhang (Alibaba Group), Guodong Yang (Alibaba Group), ChengZhong Xu (University of Macau, Macau SAR) 
  Fail through the Cracks: Cross-System Interaction Failures in Modern Cloud Systems | Lilia Tang (University of Illinois Urbana-Champaign), Chaitanya Bhandari (University of Illinois Urbana-Champaign), Yongle Zhang (Purdue University), Anna Karanika (University of Illinois Urbana-Champaign), Shuyang Ji (University of Illinois Urbana-Champaign), Indranil Gupta (University of Illinois Urbana-Champaign), Tianyin Xu (University of Illinois Urbana-Champaign) 
  LogGrep: Fast and Cheap Cloud Log Storage by Exploiting both Static and Runtime Patterns | Junyu Wei (Tsinghua University), Guangyan Zhang (Tsinghua University), Junchao Chen (Tsinghua University), Yang Wang (The Ohio State University), Weimin Zheng (Tsinghua University), Tingtao Sun (Alibaba Group), Jiesheng Wu (Alibaba Group), Jiangwei Jiang (Alibaba Group) 
 18:00-19:00 | General Assembly 

 Thursday 11/05/2023 
 Begin-End | Subject 
 8:30-9:00 | Registration 
 9:00-10:30 | Security  
  (Session Chair: Rüdiger Kapitza)  R2C: AOCR-Resilient Diversity with Reactive and Reflective Camouflage | Felix Berlakovich (μCSRL, Research Institute CODE, University of the Bundeswehr Munich), Stefan Brunthaler (μCSRL, Research Institute CODE, University of the Bundeswehr Munich) 
  Safe and Practical GPU Computation in TrustZone | Heejin Park (Apple), Felix Lin (University of Virginia) 
  Dissecting BFT Consensus: In Trusted Components we Trust! | (BEST PAPER AWARD) | Suyash Gupta (UC Berkeley), Sajjad Rahnama (University of California, Davis), Shubham Pandey (University of California, Davis), Natacha Crooks (UC Berkeley), Mohammad Sadoghi (University of California, Davis) 
  Diablo: A Benchmark Suite for Blockchains | Vincent Gramoli (University of Sydney), Rachid Guerraoui (EPFL), Andrei Lebedev (University of Sydney), Chris Natoli (University of Sydney), Gauthier Voron (EPFL) 
 10:30-11:00 | Coffee Break 
 11:00-12:10 | Misc 2  
  (Session Chair: Reto Achermann)  FrozenHot Cache: Rethinking Cache Management for Modern Hardware | Ziyue Qiu (University of Science and Technology of China, Microsoft Research, Carnegie Mellon University), Juncheng Yang (Carnegie Mellon University), Juncheng Zhang (University of Science and Technology of China), Cheng Li (University of Science and Technology of China, Anhui Province Key Laboratory of High Performance Computing), Xiaosong Ma (Qatar Computing Research Institute, HBKU), Qi Chen (Microsoft Research), Mao Yang (Microsoft Research), Yinlong Xu (University of Science and Technology of China, Anhui Province Key Laboratory of High Performance Computing) 
  Nephele: Extending Virtualization Environments for Cloning Unikernel-based VMs | Costin Lupu (University POLITEHNICA of Bucharest), Andrei Albișoru (University POLITEHNICA of Bucharest), Radu Nichita (University POLITEHNICA of Bucharest), Doru-Florin Blânzeanu (University POLITEHNICA of Bucharest), Mihai Pogonaru (University POLITEHNICA of Bucharest), Răzvan Deaconescu (University POLITEHNICA of Bucharest), Costin Raiciu (University POLITEHNICA of Bucharest) 
  Unikernel Linux (UKL) | Ali Raza (Boston University), Thomas Unger (Boston University), Matthew Boyd (MIT CSAIL); Eric B. Munson (Boston University), Parul Sohal (Boston University), Ulrich Drepper (Red Hat), Richard Jones (Red Hat), Daniel Bristot de Oliveira (Red Hat), Larry Woodman (Red Hat); Renato Mancuso (Boston University), Jonathan Appavoo (Boston University), Orran Krieger (Boston University) 
 12:10-13:20 | Networking  
  (Session Chair: Marios Kogias)  FlexPass: A Case for Flexible Credit-based Transport for Datacenter Networks | Hwijoon Lim (KAIST), Jaehong Kim (KAIST), Inho Cho (MIT CSAIL), Keon Jang (MPI-SWS, Rubrik), Wei Bai (Microsoft Research), Dongsu Han (KAIST) 
  Saba: Rethinking Datacenter Network Allocation from Application’s Perspective | M.R. Siavash Katebzadeh (University of Edinburgh), Paolo Costa (Microsoft Research), Boris Grot (University of Edinburgh) 
  A2TP: Aggregator-aware In-network Aggregation for Multi-tenant Learning | Zhaoyi Li (School of Computer Science and Engineering, Central South University), Jiawei Huang (School of Computer Science and Engineering, Central South University), Yijun Li (School of Computer Science and Engineering, Central South University), Aikun Xu (School of Computer Science and Engineering, Central South University), Shengwen Zhou (School of Computer Science and Engineering, Central South University), Jingling Liu (School of Computer Science and Engineering, Central South University), Jianxin Wang (School of Computer Science and Engineering, Central South University) 
 13:20-14:50 | Lunch 
 14:50-16:00 | Transactions  
  (Session Chair: Marc Shapiro)  Viper: A Fast Snapshot Isolation Checker | Jian Zhang (Northeastern University), Ye Ji (Cockroach Labs), Shuai Mu (Stony Brook University), Cheng Tan (Northeastern University) 
  Integrating Non-Volatile Main Memory in a Deterministic Database | Yu Chen Wang (University of Toronto), Angela Demke Brown (University of Toronto), Ashvin Goel (University of Toronto) 
  Morty: Scaling Concurrency Control with Re-Execution | Matthew Burke (Cornell University), Florian Suri-Payer (Cornell University), Jeffrey Helt (Princeton University), Lorenzo Alvisi (Cornell University), Natacha Crooks (UC Berkeley) 
 16:00-16:30 | Coffee Break 
 16:30-18:00 | Persistence  
  (Session Chair: Valerio Schiavoni)  RIO: Order-Preserving and CPU-Efficient Remote Storage Access | Xiaojian Liao (Tsinghua University), Zhe Yang (Tsinghua University), Jiwu Shu (Tsinghua University) 
  Chipmunk: Investigating Crash-Consistency in Persistent-Memory File Systems | (BEST PAPER AWARD) | Hayley LeBlanc (University of Texas at Austin), Shankara Pailoor (University of Texas at Austin), Om Saran K. R. E. (University of Texas at Austin), Isil Dillig (University of Texas at Austin), James Bornholt (University of Texas at Austin), Vijay Chidambaram (University of Texas at Austin, VMware Research) 
  Mumak: efficient and black-box bug detection for Persistent Memory | João Gonçalves (Instituto Superior Técnico (ULisboa), INESC-ID), Miguel Matos (Instituto Superior Técnico (ULisboa), INESC-ID), Rodrigo Rodrigues (Instituto Superior Técnico (ULisboa), INESC-ID) 
  NearPM: A Near-Data Processing System for Storage-Class Applications | Yasas Seneviratne (University of Virginia), Korakit Seemakhupt (University of Virginia), Sihang Liu (University of Waterloo), Samira Khan (University of Virginia) 
 20:00- | Banquet  
  (Chiostro del Bramante) 

 Friday 12/05/2023 
 Begin-End | Subject 
 9:00-10:30 | Key-Value Stores  
  (Session Chair: Angela Demke Brown)  FlowKV: A Semantic-Aware Store for Large-Scale State Management of Stream Processing Engines | Gyewon Lee (FriendliAI), Jaewoo Maeng (Seoul National University), Jinsol Park (Seoul National University), Jangho Seo (NAVER Corp.), Haeyoon Cho (Qualcomm), Youngseok Yang (Mirny Inc.), Taegeon Um (Samsung Research), Jongsung Lee (Samsung Electronics, Seoul National University), Jae W. Lee (Seoul National University), Byung-Gon Chun (FriendliAI, Seoul National University) 
  All-Flash Array Key-Value Cache for Large Objects | Jinhyung Koo (DGIST), Jinwook Bae (DGIST), Minjeong Yuk (DGIST), Seonggyun Oh (DGIST), Jungwoo Kim (DGIST), Jung-Soo Park (WineSOFT), Eunji Lee (Soongsil University), Bryan S. Kim (Syracuse University), Sungjin Lee (DGIST) 
  DyTIS: A Dynamic Dataset Targeted Index Structure Simultaneously Efficient for Search, Insert, and Scan | Jin Yang (UNIST), Heejin Yoon (UNIST), Gyeongchan Yun (UNIST), Sam H. Noh (Virginia Tech), Young-ri Choi (UNIST) 
  DRAMHiT: A Hash Table Architected for the Speed of DRAM | Vikram Narayanan (University of Utah), David Detweiler (University of California, Irvine), Tianjiao Huang (University of California, Irvine), Anton Burtsev (University of Utah) 
 10:30-11:00 | Coffee Break 
 11:00-12:30 | Machine Learning 2  
  (Session Chair: Thaleia Doudali)  Lyra: Elastic Scheduling for Deep Learning Clusters | Jiamin Li (City University of Hong Kong), Hong Xu (The Chinese University of Hong Kong), Yibo Zhu (Google), Zherui Liu (ByteDance Inc.), Chuanxiong Guo (Unaffiliated), Cong Wang (City University of Hong Kong) 
  Egeria: Efficient DNN Training with Knowledge-Guided Layer Freezing | Yiding Wang (Hong Kong University of Science and Technology), Decang Sun (Hong Kong University of Science and Technology), Kai Chen (Hong Kong University of Science and Technology), Fan Lai (University of Michigan), Mosharaf Chowdhury (University of Michigan) 
  Hi-Speed DNN Training with Espresso: Unleashing the Full Potential of Gradient Compression with Near-Optimal Usage Strategies | Zhuang Wang (Rice University), Haibin Lin (ByteDance Inc.), Yibo Zhu (ByteDance Inc.), T. S. Eugene Ng (Rice University) 
  SiloD: A Co-design of Caching and Scheduling for Deep Learning Clusters | Hanyu Zhao (Peking University), Zhenhua Han (Microsoft Research), Zhi Yang (Peking University), Quanlu Zhang (Microsoft Research), Mingxia Li (USTC), Fan Yang (Microsoft Research), Qianxi Zhang (Microsoft Research), Binyang Li (Microsoft), Yuqing Yang (Microsoft Research), Lili Qiu (Microsoft Research), Lintao Zhang (BaseBit Technologies), Lidong Zhou (Microsoft Research) 
 12:30-12:50 | Closing Session 

 Copyright © EuroSys 2023

55. EDCC_2 conference:
Report an accessibility problem  Skip to main content  Skip to search form  Accessibility Help  Off-Campus Login    
   
 About this region  Scholars Portal  Journals     
 My Articles  0 
     
 Browse 
  Contact 
  Français 
  Off-Campus Login 
    
 My Articles  0 
  Browse 
  Contact 
  Français 
  Off-Campus Login 

 About this region   Search Form  
 Enter search terms     
 Select query limiter  Anywhere  Article Title  Keywords  Abstract  Author  Journal Title  Journal Title (Exact)  ISSN  DOI  ORCID iD  Load Date     

 Date limit:    
 Enter date from as year or year / numerical month     
 Enter date to as year or year / numerical month     

 Enter the date in the correct format. Either year or year / numerical month.   

 Sort by:    
 Relevance  Most Recent  Most Popular     

 Limit to:    
   Limit search to this journal     
  Show only content I can access    
  Peer Reviewed    
  Open Access Articles    

  Limit By Subject     
  Agriculture Sciences 
  Arts and Humanities 
  Business, Economy and Management 
  Chemistry 
  Earth Sciences 
  Engineering 
  Environmental Sciences 
  Health Sciences 
  Information Technology 
  Law 
  Library and Information Sciences 
  Life Sciences 
  Material Science and Metallurgy 
  Mathematical Sciences 
  Medical Sciences 
  Physics 
  Social Sciences 
  Telecommunications Technology 

 Search    
 Advanced options     
   
 Applied search limits  
 No search limits have been applied   
 Current Subject Limits:  

 Article Type Limits:  

 Journal Title Limits:  

 Keyword Limits:  

 About this region     
 Dependable Computing Conference (EDCC), 2024 19th European  
   Published By: IEEE    
 ISSN: 26425610   
 Coverage: 2024 - 2024    

 Skip to issue list  Most Recent Issue: April 2024,  Volume  2024     

 More    

 Issue List  

 Report a problem  
 Report a problem    

 About this region  About    
 Contact    
 Terms of Use    
 Privacy Statement    
 Accessibility Commitment    
 Report an Accessibility Problem    
 Accessibility Help    
  Twitter

56. EuroSys_2 conference:
Menu   Calls | Call for Papers 
  Call for Shadow PC 
  Call for Artifacts 
  Call for Workshops 
  Call for Posters 
  Committees | Organization committee 
  program committee 
  Shadow PC committee 
  Workshops 
  Program | Program 
  EuroSys 2023 Awards 
  Accepted Papers 
  Accepted Posters 
  Information to authors 
  Grants 
  Registration 
  Location | Venue 
  Accomodation 
  Banquet 
  Welcome Reception 
  Sponsors 
  About 

 EuroSys 2023   
 Rome   
 May 8th-12th 2023   

 Accepted Papers  
  
 Title | Authors 
 Effective Performance Issue Diagnosis with Value-Assisted Cost Profiling | Lingmei Weng (Columbia University), Yigong Hu (Johns Hopkins University), Peng Huang (University of Michigan), Jason Nieh (Columbia University), Junfeng Yang (Columbia University) 
 Foxhound: Server-Grade Observability for Network-Augmented Applications | Lucas Castanheira (Carnegie Mellon University), Alberto Schaeffer-Filho (Federal University of Rio Grande do Sul (UFRGS)), Theophilus A. Benson (Brown University) 
 OFence: Pairing Barriers to Find Concurrency Bugs in the Linux Kernel | Baptiste Lepers (Université de Neuchâtel), Josselin Giet (ENS), Willy Zwaenepoel (The University of Sydney), Julia Lawall (Inria) 
 Pocket: ML Serving from the Edge | Misun Park (Georgia Institute of Technology), Ketan Bhardwaj (Georgia Institute of Technology), Ada Gavrilovska (Georgia Institute of Technology) 
 Efficient and Safe I/O Operations for Intermittent Systems | Eren Yildiz (Ege University), Saad Ahmed (Georgia Institute of Technology), Bashima Islam (Worcester Polytechnic Institute), Josiah Hester (Georgia Institute of Technology), Kasim Sinan Yildirim (University of Trento) 
 ICE: Collaborating Memory and Process Management for User Experience on Resource-limited Mobile Devices | Changlong Li (East China Normal University), Yu Liang (City University of Hong Kong), Rachata Ausavarungnirun (King Mongkut's University of Technology North Bangkok), Zongwei Zhu (University of Science and Technology of China), Liang Shi (East China Normal University), Chuan Jason Xue (City University of Hong Kong) 
 Diagnosing Kernel Concurrency Failures with AITIA | Dae R. Jeong (KAIST), Minkyu Jung (KAIST), Yoochan Lee (Seoul National University), Byoungyoung Lee (Seoul National University), Insik Shin (KAIST), Youngjin Kwon (KAIST) 
 WAFFLE: Exposing Memory Ordering Bugs Efficiently with Active Delay Injection | Bogdan Alexandru Stoica (University of Chicago), Shan Lu (University of Chicago), Madanlal Musuvathi (Microsoft Research), Suman Nath (Microsoft Research) 
 Model Checking Guided Testing for Distributed Systems | Dong Wang (Institute of Software Chinese Academy of Sciences), Wensheng Dou (Institute of Software Chinese Academy of Sciences), Yu Gao (Institute of Software Chinese Academy of Sciences), Chenao Wu (Institute of Software Chinese Academy of Sciences), Jun Wei (Institute of Software Chinese Academy of Sciences), Tao Huang (Institute of Software Chinese Academy of Sciences) 
 MariusGNN: Resource-Efficient Out-of-Core Training of Graph Neural Networks | Roger Waleffe (University of Wisconsin-Madison), Jason Mohoney (University of Wisconsin-Madison), Theodoros Rekatsinas (ETH Zurich), Shivaram Venkataraman (University of Wisconsin-Madison) 
 Accelerating Graph Mining Systems with Subgraph Morphing | Kasra Jamshidi (Simon Fraser University), Harry Xu (UCLA), Keval Vora (Simon Fraser University) 
 TEA: A General-Purpose Temporal Graph Random Walk Engine | Chengying Huan (Tsinghua University and Baihai Technology Inc.), Shuaiwen Leon Song (University of Sydney), Santosh Pandey (Stevens Institute of Technology), Hang Liu (Stevens Institute of Technology), Yongchao Liu (Ant Group), Baptiste Lepers (Université de Neuchâtel), Changhua He (Ant Group), Kang Chen (Tsinghua University), Jinlei Jiang (Tsinghua University), Yongwei Wu (Tsinghua University) 
 ALT: Breaking the Wall between Data Layout and Loop Optimizations for Deep Learning Compilation | Zhiying Xu (Nanjing University), Jiafan Xu (Nanjing University), Hongding Peng (Nanjing University), Wei Wang (Nanjing University), Xiaoliang Wang (Nanjing University), Haoran Wan (Nanjing University), Haipeng Dai (Nanjing University), Yixu Xu (Huawei Technologies), Hao Cheng (Huawei Technologies), Kun Wang (University of California, Los Angeles), Guihai Chen (Nanjing University) 
 REFL: Resource-Efficient Federated Learning | Ahmed M. Abdelmoniem (Queen Mary University of London), Atal Narayan Sahu (KAUST), Marco Canini (KAUST), Suhaib A. Fahmy (KAUST) 
 Tabi: An Efficient Multi-Level Inference System for Large Language Models | Yiding Wang (Hong Kong University of Science and Technology), Kai Chen (Hong Kong University of Science and Technology), Haisheng Tan (University of Science and Technology of China), Kun Guo (Fuzhou University) 
 Fast and Efficient Model Serving Using Multi-GPUs with Direct-Host-Access | Jinwoo Jeong (Ajou University), Seungsu Baek (Ajou University), Jeongseob Ahn (Ajou University) 
 DiLOS: Do Not Trade Compatibility for Performance in Memory Disaggregation | Wonsup Yoon (KAIST), Jisu Ok (KAIST), Jinyoung Oh (KAIST), Sue Moon (KAIST), Youngjin Kwon (KAIST) 
 vTMM: Tiered Memory Management for Virtual Machines | Sai Sha (Peking University), Chuandong Li (Peking University), Yingwei Luo (Peking University), Xiaolin Wang (Peking University), Zhenlin Wang (Michigan Technological University) 
 Making Dynamic Page Coalescing Effective on Virtualized Clouds | Weiwei Jia (The University of Rhode Island), Jiyuan Zhang (New Jersey Institute of Technology), Jianchen Shan (Hofstra University), Xiaoning Ding (New Jersey Institute of Technology) 
 Omni-Paxos: Breaking the Barriers of Partial Connectivity | Harald Ng (KTH Royal Institute of Technology), Seif Haridi (KTH Royal Institute of Technology, RISE Research Institutes of Sweden), Paris Carbone (KTH Royal Institute of Technology, RISE Research Institutes of Sweden) 
 CFS: Scaling Metadata Service for Distributed File System via Pruned Scope of Critical Sections | Yiduo Wang (University of Science and Technology of China; Baidu (China) Co., Ltd), Yufei Wu (University of Science and Technology of China), Cheng Li (University of Science and Technology of China Anhui Province Key Laboratory of High Performance Computing), Pengfei Zheng (Baidu (China) Co., Ltd), Biao Cao (Baidu (China) Co., Ltd), Yan Sun (Baidu (China) Co., Ltd), Fei Zhou (Baidu (China) Co., Ltd), Yinlong Xu (University of Science and Technology of China; Anhui Province Key Laboratory of High Performance Computing), Yao Wang (Baidu (China) Co., Ltd), Guangjun Xie (Baidu (China) Co., Ltd) 
 OLPart: Online Learning based Resource Partitioning for Colocating Multiple Latency-Critical Jobs on Commodity Computers | Ruobing Chen (Nankai university), Haosen Shi (Nankai university, NTU), Yusen Li (Nankai university, NTU), Xiaoguang Liu (Nankai University), Gang Wang (Nankai University) 
 Palette Load Balancing: Locality Hints for Serverless Functions | Mania Abdi (Northeastern University), Samuel Ginzburg (Princeton), Xiayue Charles Lin (Anyscale), Jose Faleiro (Unaffiliated), Gohar Irfan Chaudhry (Azure Systems Research), Inigo Goiri (Azure Systems Research), Ricardo Bianchini (Azure Systems Research), Daniel S. Berger (Azure Systems Research), Rodrigo Fonseca (Azure Systems Research) 
 With Great Freedom Comes Great Opportunity: Rethinking Resource Allocation for Serverless Functions | Muhammad Bilal (Instituto Superior Técnico (ULisboa), INESC-ID, UCLouvain), Marco Canini (KAUST), Rodrigo Fonseca (Azure Systems Research), Rodrigo Rodrigues (Instituto Superior Técnico (ULisboa), INESC-ID) 
 Groundhog: Efficient Request Isolation in FaaS | Mohamed Alzayat (Max Planck Institute for Software Systems (MPI-SWS)), Jonathan Mace (Max Planck Institute for Software Systems (MPI-SWS)), Peter Druschel (Max Planck Institute for Software Systems (MPI-SWS)), Deepak Garg (Max Planck Institute for Software Systems (MPI-SWS)) 
 Understanding and Optimizing Workloads for Unified Resource Management in Large Cloud Platforms | Chengzhi Lu (Shenzhen Institute of Advanced Technology, CAS, University of Macau), Huanle Xu (University of Macau, Macau SAR), Kejiang Ye (Shenzhen Institute of Advanced Technology, CAS), Guoyao Xu (Alibaba Group), Liping Zhang (Alibaba Group), Guodong Yang (Alibaba Group), ChengZhong Xu (University of Macau, Macau SAR) 
 Fail through the Cracks: Cross-System Interaction Failures in Modern Cloud Systems | Lilia Tang (University of Illinois Urbana-Champaign), Chaitanya Bhandari (University of Illinois Urbana-Champaign), Yongle Zhang (Purdue University), Anna Karanika (University of Illinois Urbana-Champaign), Shuyang Ji (University of Illinois Urbana-Champaign), Indranil Gupta (University of Illinois Urbana-Champaign), Tianyin Xu (University of Illinois Urbana-Champaign) 
 LogGrep: Fast and Cheap Cloud Log Storage by Exploiting both Static and Runtime Patterns | Junyu Wei (Tsinghua University), Guangyan Zhang (Tsinghua University), Junchao Chen (Tsinghua University), Yang Wang (The Ohio State University), Weimin Zheng (Tsinghua University), Tingtao Sun (Alibaba Group), Jiesheng Wu (Alibaba Group), Jiangwei Jiang (Alibaba Group) 
 Aggregate VM: Why Reduce or Evict VM’s Resources When You Can Borrow Them From Other Nodes? | Ho-Ren Chuang (Virginia Tech), Karim Manaouil (The University of Edinburgh), Tong Xing (The University of Edinburgh), Antonio Barbalace (The University of Edinburgh), Pierre Olivier (The University of Manchester), Balvansh Heerekar (Virginia Tech), Binoy Ravindran (Virginia Tech) 
 R2C: AOCR-Resilient Diversity with Reactive and Reflective Camouflage | Felix Berlakovich (μCSRL, Research Institute CODE, University of the Bundeswehr Munich), Stefan Brunthaler (μCSRL, Research Institute CODE, University of the Bundeswehr Munich) 
 Safe and Practical GPU Computation in TrustZone | Heejin Park (Apple), Felix Lin (University of Virginia) 
 Dissecting BFT Consensus: In Trusted Components we Trust! | Suyash Gupta (UC Berkeley), Sajjad Rahnama (University of California, Davis), Shubham Pandey (University of California, Davis), Natacha Crooks (UC Berkeley), Mohammad Sadoghi (University of California, Davis) 
 Diablo: A Benchmark Suite for Blockchains | Vincent Gramoli (University of Sydney), Rachid Guerraoui (EPFL), Andrei Lebedev (University of Sydney), Chris Natoli (University of Sydney), Gauthier Voron (EPFL) 
 FrozenHot Cache: Rethinking Cache Management for Modern Hardware | Ziyue Qiu (University of Science and Technology of China, Microsoft Research, Carnegie Mellon University), Juncheng Yang (Carnegie Mellon University), Juncheng Zhang (University of Science and Technology of China), Cheng Li (University of Science and Technology of China, Anhui Province Key Laboratory of High Performance Computing), Xiaosong Ma (Qatar Computing Research Institute, HBKU), Qi Chen (Microsoft Research), Mao Yang (Microsoft Research), Yinlong Xu (University of Science and Technology of China, Anhui Province Key Laboratory of High Performance Computing) 
 Nephele: Extending Virtualization Environments for Cloning Unikernel-based VMs | Costin Lupu (University POLITEHNICA of Bucharest), Andrei Albișoru (University POLITEHNICA of Bucharest), Radu Nichita (University POLITEHNICA of Bucharest), Doru-Florin Blânzeanu (University POLITEHNICA of Bucharest), Mihai Pogonaru (University POLITEHNICA of Bucharest), Răzvan Deaconescu (University POLITEHNICA of Bucharest), Costin Raiciu (University POLITEHNICA of Bucharest) 
 Unikernel Linux (UKL) | Ali Raza (Boston University), Thomas Unger (Boston University), Matthew Boyd (MIT CSAIL); Eric B. Munson (Boston University), Parul Sohal (Boston University), Ulrich Drepper (Red Hat), Richard Jones (Red Hat), Daniel Bristot de Oliveira (Red Hat), Larry Woodman (Red Hat); Renato Mancuso (Boston University), Jonathan Appavoo (Boston University), Orran Krieger (Boston University) 
 FlexPass: A Case for Flexible Credit-based Transport for Datacenter Networks | Hwijoon Lim (KAIST), Jaehong Kim (KAIST), Inho Cho (MIT CSAIL), Keon Jang (MPI-SWS, Rubrik), Wei Bai (Microsoft Research), Dongsu Han (KAIST) 
 Saba: Rethinking Datacenter Network Allocation from Application’s Perspective | M.R. Siavash Katebzadeh (University of Edinburgh), Paolo Costa (Microsoft Research), Boris Grot (University of Edinburgh) 
 A2TP: Aggregator-aware In-network Aggregation for Multi-tenant Learning | Zhaoyi Li (School of Computer Science and Engineering, Central South University), Jiawei Huang (School of Computer Science and Engineering, Central South University), Yijun Li (School of Computer Science and Engineering, Central South University), Aikun Xu (School of Computer Science and Engineering, Central South University), Shengwen Zhou (School of Computer Science and Engineering, Central South University), Jingling Liu (School of Computer Science and Engineering, Central South University), Jianxin Wang (School of Computer Science and Engineering, Central South University) 
 Viper: A Fast Snapshot Isolation Checker | Jian Zhang (Northeastern University), Ye Ji (Cockroach Labs), Shuai Mu (Stony Brook University), Cheng Tan (Northeastern University) 
 Integrating Non-Volatile Main Memory in a Deterministic Database | Yu Chen Wang (University of Toronto), Angela Demke Brown (University of Toronto), Ashvin Goel (University of Toronto) 
 Morty: Scaling Concurrency Control with Re-Execution | Matthew Burke (Cornell University), Florian Suri-Payer (Cornell University), Jeffrey Helt (Princeton University), Lorenzo Alvisi (Cornell University), Natacha Crooks (UC Berkeley) 
 RIO: Order-Preserving and CPU-Efficient Remote Storage Access | Xiaojian Liao (Tsinghua University), Zhe Yang (Tsinghua University), Jiwu Shu (Tsinghua University) 
 Chipmunk: Investigating Crash-Consistency in Persistent-Memory File Systems | Hayley LeBlanc (University of Texas at Austin), Shankara Pailoor (University of Texas at Austin), Om Saran K. R. E. (University of Texas at Austin), Isil Dillig (University of Texas at Austin), James Bornholt (University of Texas at Austin), Vijay Chidambaram (University of Texas at Austin, VMware Research) 
 Mumak: Efficient and Black-Box Bug Detection for Persistent Memory | João Gonçalves (Instituto Superior Técnico (ULisboa), INESC-ID), Miguel Matos (Instituto Superior Técnico (ULisboa), INESC-ID), Rodrigo Rodrigues (Instituto Superior Técnico (ULisboa), INESC-ID) 
 NearPM: A Near-Data Processing System for Storage-Class Applications | Yasas Seneviratne (University of Virginia), Korakit Seemakhupt (University of Virginia), Sihang Liu (University of Waterloo), Samira Khan (University of Virginia) 
 FlowKV: A Semantic-Aware Store for Large-Scale State Management of Stream Processing Engines | Gyewon Lee (FriendliAI), Jaewoo Maeng (Seoul National University), Jinsol Park (Seoul National University), Jangho Seo (NAVER Corp.), Haeyoon Cho (Seoul National University), Youngseok Yang (Mirny Inc.), Taegeon Um (Samsung Research), Jongsung Lee (Samsung Electronics, Seoul National University), Jae W. Lee (Seoul National University), Byung-Gon Chun (FriendliAI, Seoul National University) 
 All-Flash Array Key-Value Cache for Large Objects | Jinhyung Koo (DGIST), Jinwook Bae (DGIST), Minjeong Yuk (DGIST), Seonggyun Oh (DGIST), Jungwoo Kim (DGIST), Jung-Soo Park (WineSOFT), Eunji Lee (Soongsil University), Bryan S. Kim (Syracuse University), Sungjin Lee (DGIST) 
 DyTIS: A Dynamic Dataset Targeted Index Structure Simultaneously Efficient for Search, Insert, and Scan | Jin Yang (UNIST), Heejin Yoon (UNIST), Gyeongchan Yun (UNIST), Sam H. Noh (Virginia Tech), Young-ri Choi (UNIST) 
 DRAMHiT: A Hash Table Architected for the Speed of DRAM | Vikram Narayanan (University of Utah), David Detweiler (University of California, Irvine), Tianjiao Huang (University of California, Irvine), Anton Burtsev (University of Utah) 
 Lyra: Elastic Scheduling for Deep Learning Clusters | Jiamin Li (City University of Hong Kong), Hong Xu (The Chinese University of Hong Kong), Yibo Zhu (Google), Zherui Liu (ByteDance Inc.), Chuanxiong Guo (Unaffiliated), Cong Wang (City University of Hong Kong) 
 Egeria: Efficient DNN Training with Knowledge-Guided Layer Freezing | Yiding Wang (Hong Kong University of Science and Technology), Decang Sun (Hong Kong University of Science and Technology), Kai Chen (Hong Kong University of Science and Technology), Fan Lai (University of Michigan), Mosharaf Chowdhury (University of Michigan) 
 Hi-Speed DNN Training with Espresso: Unleashing the Full Potential of Gradient Compression with Near-Optimal Usage Strategies | Zhuang Wang (Rice University), Haibin Lin (ByteDance Inc.), Yibo Zhu (ByteDance Inc.), T. S. Eugene Ng (Rice University) 
 SiloD: A Co-design of Caching and Scheduling for Deep Learning Clusters | Hanyu Zhao (Peking University), Zhenhua Han (Microsoft Research), Zhi Yang (Peking University), Quanlu Zhang (Microsoft Research), Mingxia Li (USTC), Fan Yang (Microsoft Research), Qianxi Zhang (Microsoft Research), Binyang Li (Microsoft), Yuqing Yang (Microsoft Research), Lili Qiu (Microsoft Research), Lintao Zhang (BaseBit Technologies), Lidong Zhou (Microsoft Research) 

 Copyright © EuroSys 2023

57. EJC_1 conference:
European – Japanese Conference on Information Modelling and Knowledge Bases  

 Search   Search     

 Home 
  Author’s instructions 
  Organization 
  Conferences – history 

 Home  
 INTERNATIONAL CONFERENCE ON INFORMATION MODELLING AND KNOWLEDGE BASES  
  EJC   
  EJC 2024: Final (IOS Press) book publishing process is going on.  
 IOS Press version of Papers, submission: September 10th, 2024   
 To prepare the final version of the papers, please check the following details  :  
 Formatting of the paper follows the instructions. 
  No page numbers in the paper. 
  No page headers / footers in the paper. 
  Check the image quality and readability. 
  No tables overfloating page changes 
  No white space at the page ends. 
  References in the text and in the list of references match each other. 
  In the case the paper does not fill the requirements, extra iterations are needed. If finally the paper is not ready for publishing. the editing committee has right to withdraw the paper from the final journal print.  
 All papers must be resubmitted  to the paper management system ( see Author’s Instruction Section  ).  
 Submission details and paper submission  : http://ejc.komazawa-u.ac.jp/ejc2024review/   
  
  EJC 2025  
   35th International Conference on Information Modelling and Knowledge Bases EJC 2025  
 https://ejc2025.vsb.cz/   
 Ostrava, Czech Republic, June 9 – June 13, 2025   
 Important dates:   
 Submission Deadline: | January 17th, 2025 
  Notification of Acceptance: | March | 30th, 2025 
  Final paper for inclusion in the conference proceedings: | April | 25th, 2025 
  IOS Press version of Papers: | September 10th, 2025 
  Call for Papers  : https://ejc2025.vsb.cz/index.html   
  About the Conference  
 Motivation   
 Information modelling is becoming increasingly important for researchers, designers, and users of information systems with artificial intelligence. The amount and complexity of information, the number of abstraction levels, and the size of databases and knowledge bases are continuously growing. Conceptual modelling is one of the sub-areas of information modelling and AI modelling. The aim of this conference is to bring together experts from different areas of computer science, AI and other disciplines who have a common interest in understanding and solving problems on information modelling and knowledge bases, as well as applying the results of research to practice. We also aim to recognize and study new areas of Information modelling, knowledge bases and AI to which more attention should be paid. Philosophy and logic, cognitive science, knowledge management, linguistics and cyber-physical modelling are relevant areas, too. The conference will have three categories of presentations, i.e. full papers, short papers and position papers.  
 Background   
 The series of European – Japanese Conferences on Information Modelling and Knowledge Bases (EJC) originally started as a cooperation initiative between Japan and Finland in 1988 as a continuum to the series of Scandinavian conferences since 1982. The practical operations were then organized by professor Ohsuga in Japan and professors Hannu and Hannu Jaakkola in Finland. The geographical scope was expanded to cover first Europe and further other countries.  
 Working principles   
 Facilitates discussion, allows enough presentation time, and limits the number of participants (50) and papers (30).  
 Suggested topics include, but are not limited to:  
 1. Conceptual modelling:  Modelling and specification languages; Domain-specific conceptual modelling; Concepts, concept theories and ontologies; Conceptual modelling of large and heterogeneous systems; Conceptual modelling of spatial, temporal and semantic data; Methods for developing, validating and communicating conceptual models.  
 2. Knowledge and information modelling and discovery:  Knowledge discovery, knowledge representation and knowledge management; Advanced data mining and analysis methods; Conceptions of knowledge and information; Modelling information requirements; Intelligent information systems; Information recognition and information modelling.  
 3. Linguistic modelling:  Models of HCI; Information delivery to users; Intelligent informal querying; Linguistic foundation of information and knowledge; Fuzzy linguistic models; Philosophical and linguistic foundations of conceptual models.  
 4. Cross-cultural communication and social computing:  Cross-cultural support systems; Integration, evolution and migration of systems; Collaborative societies; Multicultural web-based software systems; Intercultural collaboration and support systems; Social computing, behavior l modelling and prediction.  
 5. Environmental modelling and engineering:  Environmental information systems (architecture); Spatial, temporal and observational information systems; Large-scale environmental systems; Collaborative knowledge base systems; Agent concepts and conceptualization; Hazard prediction, prevention and steering systems.  
 6. Multimedia data modelling and systems:  Modelling multimedia information and knowledge; Content-based multimedia data management; Content-based multimedia retrieval; Privacy and context enhancing technologies; Semantics and pragmatics of multimedia data; Metadata for multimedia information systems.  
 7. AI System Modelling:  Cyber and Physical System Modelling; Image Processing; Natural Language Processing; Computer Vision; Biological Analysis; Responsible AI.  
 The total number of participants is limited to 50 (30 papers). We want to provide enough time for the presentations and discussions. The conference is an excellent forum for networking with the active research community on this important topic. The authors must present their paper at the conference.  
 All papers (full/short/position) accepted and presented in the conference are published in the conference preprint (e-book having ISSN / ISBN) by the local organizers (distributed in the conference) and after the conference in the final journal-paper publication.  
 After the conference, authors have the opportunity to improve their papers based on the feedback at the conference. The final publication is published in the Series “ Frontiers in Artificial Intelligence  ” by IOS Press (Amsterdam)  . The books “Information Modelling and Knowledge Bases Vol. n” are edited by the Editing Committee. It has the right to propose obligatory improvements as a precondition to the publication. It has the right to withdraw papers that do not follow the given guidelines and technical style. In addition to IOS press publication, we have invitation to publish some papers in ECTI-Transactions on Computer and Information Technology (ECTI-CIT)  . The papers are selected by the Editorial Board of the Journal.  
 In all editorial issues, please contact the editing committee.  
  The E-books of EJC Conferences are available in   
 2020: https://ebooks.iospress.nl/volume/information-modelling-and-knowledge-bases-xxxii   
 2021: https://ebooks.iospress.nl/volume/information-modelling-and-knowledge-bases-xxxiii   
 2022: https://ebooks.iospress.nl/volume/information-modelling-and-knowledge-bases-xxxiv   
 2023: https://ebooks.iospress.nl/volume/information-modelling-and-knowledge-bases-xxxv   

 Powered by WordPress  / Academica WordPress Theme by WPZOOM

58. EuroSys_3 conference:
Search this site   

 Skip to main content     

 Skip to navigation     

 European Chapter of ACM SIGOPS   Home 
  Awards | Jochen Liedtke Young Researcher Award 
  Lifetime Achievement Award 
  Roger Needham PhD Award 
  Test-of-Time Award 
  Conferences 
  Job Offers 
  Join or Renew Membership 
  News | In memory of Gilles Muller 
  EuroSys 2024 
  EuroSys 2025 
  Officers and Volunteers 
  Activities 
   
 European Chapter of ACM SIGOPS     
 Home 
  Awards | Jochen Liedtke Young Researcher Award 
  Lifetime Achievement Award 
  Roger Needham PhD Award 
  Test-of-Time Award 
  Conferences 
  Job Offers 
  Join or Renew Membership 
  News | In memory of Gilles Muller 
  EuroSys 2024 
  EuroSys 2025 
  Officers and Volunteers 
  Activities 
  More | Home 
  Awards | Jochen Liedtke Young Researcher Award 
  Lifetime Achievement Award 
  Roger Needham PhD Award 
  Test-of-Time Award 
  Conferences 
  Job Offers 
  Join or Renew Membership 
  News | In memory of Gilles Muller 
  EuroSys 2024 
  EuroSys 2025 
  Officers and Volunteers 
  Activities 

 EuroSys - the European Systems Conference    
  
 EuroSys is a series of Systems conferences located in Europe. It welcomes submissions and attendance from all over the world. EuroSys unifies different areas of Computer Systems, otherwise spread over multiple conferences. EuroSys solicits submissions on all aspects of computer systems, and especially ones that cross the divide between areas. The conference is single track, with an attendance of around 400 participants from academia and industry.   

 Proceedings    
  
 EuroSys XIX   Athens, Greece  , April 2024 
  EuroSys XVIII   Rome, Italy, May 2023 
  EuroSys XVII    Rennes  ,  France, April, 2022 
  EuroSys XVI   Edinburgh, UK (online), April, 2021 
  EuroSys XV   Heraklion, Greece (online), April, 2020 
  EuroSys XIV   Dresden, Germany, March, 2019 
  EuroSys XIII   Porto, Portugal, April 2018 
  EuroSys XII   Belgrade, Serbia, April 2017 
  EuroSys XI   London, United Kingdom, April 2016 
  EuroSys X   Bordeaux, France, April 2015 
  EuroSys IX   Amsterdam, Netherlands, April 2014 
  EuroSys VII   Prague, Czech Republic, April 2013 
  EuroSys VII   Bern, Switzerland, April 2012 
  EuroSys VI   Salzburg, Austria, April 2011 
  EuroSys V   Paris, France, April 2010 
  EuroSys IV   Nuremberg, Germany, April 2009 
  EuroSys III   Glasgow, Scotland, UK, April 2008 
  EuroSys II   Lisboa, Portugal, March 2007 
  EuroSys I    Leuven, Belgium, April 2006 

 EuroSys Conference Chairs    
  
 EuroSys 2024   -  PC Chairs:  Bianca Schroeder, University of Toronto  ; Mark Silberstein, Technion  . General Chairs: Vana Kalogeraki, Athens University of Economics and Business; Spyros Voulgaris, Athens University of Economics and Business. 
  EuroSys 2023    —  PC Chairs: Alexandra Fedorova, University of British Columbia; Dushyanth Narayanan, Microsoft Research. General Chairs: Giuseppe Antonio Di Luna, University of Rome La Sapienza; Leonardo Querzoni, University of Rome La Sapienza. 
  EuroSys 2022   — PC Chairs:  Anne-Marie Kermarrec  ,  EPFL  ;  Christos Kozyrakis  ,  Stanford University  . General Chair:  David Bromberg  ,  University of Rennes 1. 
  EuroSys 2021   — PC Chairs: Lorenzo Alvisi, Cornell University; Cristian Cadar, Imperial College London. General Chairs: Antonio Barbalace, University of Edinburgh; Pramod Bhatotia, TU Munich. 
  EuroSys 2020   — PC Chairs: Dejan Kostic, KTH Royal Institute of Technology; Margo Seltzer, University of British Columbia. General Chairs: Angelos Bilas, Kostas Magoutis, Evangelos Markatos, University of Crete and FORTH-ICS. 
  EuroSys 2019   — PC Chairs: George Candea, EPFL; Robbert Van Renesse, Cornell University. General Chair: Christof Fetzer, TU Dresden. 
  EuroSys 2018   — PC Chairs: Pascal Felber, University of Neuchâtel; Y. Charlie Hu, Purdue University. General Chair: Rui Oliveira, INESC TEC & University of Minho. 
  EuroSys 2017   — PC Chairs: Gustavo Alonso, ETH Zurich; Ricardo Bianchini, Microsoft Research. General Chair: Marko Vukolić, IBM Research - Zurich. 
  EuroSys 2016   — PC Chairs: Kimberly Keeton, HP Labs, USA; Rodrigo Rodrigues, Instituto Superior Técnico (Univ. Lisbon) and INESC-ID, Lisbon, Portugal. General Chairs: Cristian Cadar, Imperial College London, UK; Peter Pietzuch, Imperial College London, UK. 
  EuroSys 2015   — PC Chairs: Tim Harris, Oracle Labs, UK; Maurice Herlihy, Brown University, USA. General Chair: Laurent Réveillère, LaBRI, University of Bordeaux, France. 
  EuroSys 2014   — PC Chairs:  Peter Druschel  , Microsoft Research Cambridge; General Chairs:  Dick Bulterman  , CWI, Amsterdam, Netherlands;  Herbert Bos  , Vrije Universiteit, Amsterdam, Netherlands. 
  EuroSys 2013   — PC Chairs:  Frans Kaashoek  , MIT, USA;  Miguel Castro  , Microsoft Research, Cambridge, UK. General Chairs:  Hermann Haertig  , TU Dresden, Germany;  Zdenek Hanzalek  , Czech Technical University, Prague, Czech Republic. 
  EuroSys 2012   — PC Chairs:  Frank Bellosa  , Karlsruhe Institute of Technology, Germany;  Herbert Bos  , Vrije Universiteit, Amsterdam, The Netherlands. General Chair:  Pascal Felber  , University of Neuchatel, Switzerland. 
  EuroSys 2011   — PC Chair:  Gernot Heiser  , UNSW and NICTA, Sydney, Australia. General Chair:  Christoph Kirsch  , University of Salzburg, Austria. 
  EuroSys 2010   — PC Chair:  Gilles Muller  , Professor, École des Mines de Nantes, France. General Chair:  Christine Morin  , INRIA-IRISA, Rennes, France. 
  EuroSys 2009   — PC Chairs:  John Wilkes  , HP Labs, Palo Alto, USA;  Rebecca Isaacs  , Google, San Francisco. General Chair:  Wolfgang Schröder-Preikschat  , University of Erlangen, Germany. 
  EuroSys 2008   — PC Chair:  Steve Hand  , University of Cambridge, UK. General Chair:  Joe Sventek  , Department of Computing Science, University of Glasgow, UK. 
  EuroSys 2007   — PC Chair:  Thomas Gross  ETHZ, Switzerland. General Chair:  Paulo Ferreira  , INESC-ID & Technical University of Lisbon, Portugal. 
  EuroSys 2006   — PC Chair:  Willy Zwaenepoel  EPFL, Switzerland. General Chair:  Yolande Berbers  Katholieke Universiteit Leuven, Belgium. 

 Contact Information:  contact _at_ eurosys.org    

 Report abuse   

 Page details   

 Page updated     
   
 Report abuse

59. EMMSAD_0 conference:
Search this site   

 Skip to main content     

 Skip to navigation     

 EMMSAD   Home 
  About | Background & Aims 
  Tracks & Topics 
  Submission | Instructions 
  Important Dates 
  Program | Keynote 
  Team | Organization 
  Steering Committee 
  Program Committee 
  Supporters 
  Partners 
  Publications 
  Archive | 2024 | 2024 Program | Keynote 
  2023 | 2023 Program | 2023 Keynote 
  2022 
  2021 
  2020 
  2019 
  2018 
  2017 
  2016 
  2015 
  2014 
  2013 
  2012 
  2011 
  2010 
  2009 
  2008 
  2007 
  2006 
  2005 
   
 EMMSAD     
 Home 
  About | Background & Aims 
  Tracks & Topics 
  Submission | Instructions 
  Important Dates 
  Program | Keynote 
  Team | Organization 
  Steering Committee 
  Program Committee 
  Supporters 
  Partners 
  Publications 
  Archive | 2024 | 2024 Program | Keynote 
  2023 | 2023 Program | 2023 Keynote 
  2022 
  2021 
  2020 
  2019 
  2018 
  2017 
  2016 
  2015 
  2014 
  2013 
  2012 
  2011 
  2010 
  2009 
  2008 
  2007 
  2006 
  2005 
  More | Home 
  About | Background & Aims 
  Tracks & Topics 
  Submission | Instructions 
  Important Dates 
  Program | Keynote 
  Team | Organization 
  Steering Committee 
  Program Committee 
  Supporters 
  Partners 
  Publications 
  Archive | 2024 | 2024 Program | Keynote 
  2023 | 2023 Program | 2023 Keynote 
  2022 
  2021 
  2020 
  2019 
  2018 
  2017 
  2016 
  2015 
  2014 
  2013 
  2012 
  2011 
  2010 
  2009 
  2008 
  2007 
  2006 
  2005 

 EMMSAD 2025   

 EMMSAD is a two-day international working conference on Exploring Modeling Methods for Systems Analysis and Development. The  30th  event of EMMSAD will be held on June 16-17, 2024 co-located with  CAiSE 2025    in Vienna, Austria.   
 EMMSAD aims to provide a forum for researchers and practitioners interested in modeling methods for Systems Analysis and Development to meet and exchange research ideas and results.   
 The best paper will  receive an award  . Furthermore, all  candidates for the best paper award  will also be invited to submit enhanced versions for consideration in a special issue of  Software and System Modelling (SoSyM) journal   . The status of the special issues can be viewed in the  publication section   .   

 EMMSAD Conference    

 Follow us on:    

 Highlights:    
  
 The focus will be on development, evaluation and application of modeling methods for Systems Analysis & Development with 5 major tracks:   
 Foundations of modeling & method engineering 
  Enterprise, business process & capability modeling 
  Information systems & requirements modeling 
  Domain-specific & knowledge modeling 
  Evaluation of models & modeling approaches 

 Google Sites   

 Report abuse   

 Google Sites   
   
 Report abuse

60. EJC_2 conference:
Multiple Category Search!  
 Narrow down your search results by selecting more than one category (e.g. a specific type of "Degree" in a specific "Country")  
 Select KMedu opportunities by...   
       » …Availability  In-house KMedu  Public KMedu     
 » …Country  Afghanistan (AFG)  Algeria (DZ)  Angola (ANG)  Argentina (RA)  Armenia (AM)  Australia (AUS)  Austria (A)  Bahrain (BRN)  Bangladesh (BD)  Belarus (BY)  Belgium (B)  Belize (BZ)  Benin (DY)  Bolivia (BOL)  Bosnia and Herzegovina (BIH)  Botswana (RB)  Brazil (BR)  Brunei (BRU)  Bulgaria (BG)  Burkina Faso (BF)  Burundi (RU)  Cambodia (K)  Cameroon (CAM)  Canada (CDN)  Cape Verde (CV)  Chile (RCH)  China (CN)  Colombia (CO)  Congo. Democratic Republic (CGO)  Congo. Republic (RCB)  Costa Rica (CR)  Côte d’Ivoire (CI)  Croatia (HR)  Cuba (C)  Cyprus (CY)  Czech Republic (CZ)  Denmark (DK)  Djibouti (DJI)  Dominican Republic (DOM)  Ecuador (EC)  Egypt (ET)  El Salvador (ES)  Eritrea (ER)  Estonia (EST)  eSwatini (SD)  Ethiopia (ETH)  Faeroe Islands (FO)  Fiji (FJI)  Finland (FIN)  France (F)  Gambia (WAG)  Germany (D)  Ghana (GH)  Greece (GR)  Guatemala (GCA)  Guinea (RG)  Guinea-Bissau (GUB)  Honduras (HN)  Hong Kong (HK)  Hungary (H)  Iceland (IS)  India (IND)  Indonesia (RI)  Iran (IR)  Iraq (IRQ)  Ireland (IRL)  Israel (IL)  Italy (I)  Japan (J)  Jordan (HKJ)  Kazakhstan (KZ)  Kenya (EAK)  Korea, South (ROK)  Kuwait (KWT)  Kyrgyzstan (KS)  Laos (LAO)  Latvia (LV)  Lebanon (RL)  Lesotho (LS)  Liberia (LB)  Libya (LAR)  Lithuania (LT)  Luxembourg (L)  Macedonia (MK)  Madagascar (RM)  Malawi (MW)  Malaysia (MAL)  Mali (RMM)  Malta (M)  Mauritania (RIM)  Mauritius (MS)  Mexico (MEX)  Morocco (MA)  Mozambique (MOC)  Myanmar (MYA)  Namibia (NAM)  Nepal (NEP)  Netherlands (NL)  New Zealand (NZ)  Nicaragua (NIC)  Niger (RN)  Nigeria (NG)  Norway (N)  Oman (OM)  Pakistan (PK)  Panama (PA)  Paraguay (PY)  Peru (PE)  Philippines (RP)  Poland (PL)  Portugal (P)  Puerto Rico (PR)  Qatar (Q)  Romania (RO)  Russia (RUS)  Rwanda (RWA)  Saudi Arabia (SA)  Senegal (SN)  Seychelles (SY)  Sierra Leone (WAL)  Singapore (SGP)  Slovakia (SK)  Slovenia (SLO)  Somalia (SO)  South Africa (ZA)  Spain (E)  Sri Lanka (CL)  Sudan (SUD)  Sudan. South (SSD)  Sweden (S)  Switzerland (CH)  Taiwan (RC)  Tanzania (EAT)  Thailand (T)  Togo (TG)  Trinidad and Tobago (TT)  Tunisia (TN)  Turkey (TR)  Uganda (EAU)  Ukraine (UA)  United Arab Emirates (UAE)  United Kingdom (GB)  United States of America (USA)  Uruguay (ROU)  Uzbekistan (UZ)  Venezuela (YV)  Viet Nam (VN)  Zambia (Z)  Zimbabwe (ZW)     
 » …Degree  Non-degree KMedu  Training Providers: Certificates  Training Providers: Certifications  Universities: Bachelor degrees  Universities: Certifications  Universities: Diplomas & Certificates  Universities: Doctorate degrees  Universities: Master degrees     
 » …Delivery Format  Blended Learning KMedu  Face-to-face KMedu  Online KMedu  PC KMedu     
 » …Duration  1-… years  1-11 hours  1-11 months  1-3 weeks  1-6 days     
 » …Event Type  KM Conferences  KM Training Events  KMedu Award Ceremonies  KMedu Orientation Sessions  Online KM Events  University KMedu Events     
 » …Language  Arabic language  Bulgarian language  Chinese language  Croatian language  Danish language  Dutch language  English language  Filipino language  Finnish language  French language  German language  Hebrew language  Hungarian language  Indonesian language  Italian language  Japanese language  Korean language  Norwegian language  Persian language  Polish language  Portuguese language  Romanian language  Russian language  Slovak language  Spanish language  Swedish language  Thai language  Turkish language  Vietnamese language     
 » …Price Range (USD)  0 USD / 4Free  1-99 USD  100-999 USD  1000-9999 USD  more than 10000 USD  more than 25000 USD     
 » …Provider Type  Offers from Communities  Offers from Conference Providers  Offers from Job Providers  Offers from Training Providers  Offers from Universities/Colleges     
 » …Study Options  Full-Time  Part-Time     

 Search     
  Search     

  Close search     

 Skip to content      
   
 The Knowledge Management Education Hub  

 Providers | World Map (Overview) 
  African Providers 
  Asian Providers 
  European Providers 
  Latin American Providers 
  Northern American Providers 
  Oceanian Providers 
  eLearning Providers 
  Conferences | World Map (Overview) 
  African Conferences 
  Asian Conferences 
  European Conferences 
  Latin American Conferences 
  Northern American Conferences 
  Oceanian Conferences 
  Online Conferences 
  Past Conferences 
  More… | Events 
  Jobs 
  Resources 
  Latest 
  About | The Hub 
  Community 
  Partner 
  Contact & Legal 
  Subscribe | Updates & News 
  GET LISTED! 
  » MY HUB « 

 Providers | World Map (Overview) 
  African Providers 
  Asian Providers 
  European Providers 
  Latin American Providers 
  Northern American Providers 
  Oceanian Providers 
  eLearning Providers 
  Conferences | World Map (Overview) 
  African Conferences 
  Asian Conferences 
  European Conferences 
  Latin American Conferences 
  Northern American Conferences 
  Oceanian Conferences 
  Online Conferences 
  Past Conferences 
  More… | Events 
  Jobs 
  Resources 
  Latest 
  About | The Hub 
  Community 
  Partner 
  Contact & Legal 
  Subscribe | Updates & News 
  GET LISTED! 
  » MY HUB « 
  Multiple Category Search!  
 Narrow down your search results by selecting more than one category (e.g. a specific type of "Degree" in a specific "Country")  
 Select KMedu opportunities by...        » …Availability  In-house KMedu  Public KMedu    » …Country  Afghanistan (AFG)  Algeria (DZ)  Angola (ANG)  Argentina (RA)  Armenia (AM)  Australia (AUS)  Austria (A)  Bahrain (BRN)  Bangladesh (BD)  Belarus (BY)  Belgium (B)  Belize (BZ)  Benin (DY)  Bolivia (BOL)  Bosnia and Herzegovina (BIH)  Botswana (RB)  Brazil (BR)  Brunei (BRU)  Bulgaria (BG)  Burkina Faso (BF)  Burundi (RU)  Cambodia (K)  Cameroon (CAM)  Canada (CDN)  Cape Verde (CV)  Chile (RCH)  China (CN)  Colombia (CO)  Congo. Democratic Republic (CGO)  Congo. Republic (RCB)  Costa Rica (CR)  Côte d’Ivoire (CI)  Croatia (HR)  Cuba (C)  Cyprus (CY)  Czech Republic (CZ)  Denmark (DK)  Djibouti (DJI)  Dominican Republic (DOM)  Ecuador (EC)  Egypt (ET)  El Salvador (ES)  Eritrea (ER)  Estonia (EST)  eSwatini (SD)  Ethiopia (ETH)  Faeroe Islands (FO)  Fiji (FJI)  Finland (FIN)  France (F)  Gambia (WAG)  Germany (D)  Ghana (GH)  Greece (GR)  Guatemala (GCA)  Guinea (RG)  Guinea-Bissau (GUB)  Honduras (HN)  Hong Kong (HK)  Hungary (H)  Iceland (IS)  India (IND)  Indonesia (RI)  Iran (IR)  Iraq (IRQ)  Ireland (IRL)  Israel (IL)  Italy (I)  Japan (J)  Jordan (HKJ)  Kazakhstan (KZ)  Kenya (EAK)  Korea, South (ROK)  Kuwait (KWT)  Kyrgyzstan (KS)  Laos (LAO)  Latvia (LV)  Lebanon (RL)  Lesotho (LS)  Liberia (LB)  Libya (LAR)  Lithuania (LT)  Luxembourg (L)  Macedonia (MK)  Madagascar (RM)  Malawi (MW)  Malaysia (MAL)  Mali (RMM)  Malta (M)  Mauritania (RIM)  Mauritius (MS)  Mexico (MEX)  Morocco (MA)  Mozambique (MOC)  Myanmar (MYA)  Namibia (NAM)  Nepal (NEP)  Netherlands (NL)  New Zealand (NZ)  Nicaragua (NIC)  Niger (RN)  Nigeria (NG)  Norway (N)  Oman (OM)  Pakistan (PK)  Panama (PA)  Paraguay (PY)  Peru (PE)  Philippines (RP)  Poland (PL)  Portugal (P)  Puerto Rico (PR)  Qatar (Q)  Romania (RO)  Russia (RUS)  Rwanda (RWA)  Saudi Arabia (SA)  Senegal (SN)  Seychelles (SY)  Sierra Leone (WAL)  Singapore (SGP)  Slovakia (SK)  Slovenia (SLO)  Somalia (SO)  South Africa (ZA)  Spain (E)  Sri Lanka (CL)  Sudan (SUD)  Sudan. South (SSD)  Sweden (S)  Switzerland (CH)  Taiwan (RC)  Tanzania (EAT)  Thailand (T)  Togo (TG)  Trinidad and Tobago (TT)  Tunisia (TN)  Turkey (TR)  Uganda (EAU)  Ukraine (UA)  United Arab Emirates (UAE)  United Kingdom (GB)  United States of America (USA)  Uruguay (ROU)  Uzbekistan (UZ)  Venezuela (YV)  Viet Nam (VN)  Zambia (Z)  Zimbabwe (ZW)    » …Degree  Non-degree KMedu  Training Providers: Certificates  Training Providers: Certifications  Universities: Bachelor degrees  Universities: Certifications  Universities: Diplomas & Certificates  Universities: Doctorate degrees  Universities: Master degrees    » …Delivery Format  Blended Learning KMedu  Face-to-face KMedu  Online KMedu  PC KMedu    » …Duration  1-… years  1-11 hours  1-11 months  1-3 weeks  1-6 days    » …Event Type  KM Conferences  KM Training Events  KMedu Award Ceremonies  KMedu Orientation Sessions  Online KM Events  University KMedu Events    » …Language  Arabic language  Bulgarian language  Chinese language  Croatian language  Danish language  Dutch language  English language  Filipino language  Finnish language  French language  German language  Hebrew language  Hungarian language  Indonesian language  Italian language  Japanese language  Korean language  Norwegian language  Persian language  Polish language  Portuguese language  Romanian language  Russian language  Slovak language  Spanish language  Swedish language  Thai language  Turkish language  Vietnamese language    » …Price Range (USD)  0 USD / 4Free  1-99 USD  100-999 USD  1000-9999 USD  more than 10000 USD  more than 25000 USD    » …Provider Type  Offers from Communities  Offers from Conference Providers  Offers from Job Providers  Offers from Training Providers  Offers from Universities/Colleges    » …Study Options  Full-Time  Part-Time | Search     Search 

 International Conference on Information Modelling and Knowledge Bases (EJC)*  
 Jun 9, 2025 - Jun 13, 2025, Ostrava, Czech Republic   
 Conference Page  Read On!   Favorite     

 KMers, Contribute!!!   
   Call for Participation: Peace!   
 Posted: February 28, 2022   
 “Peace does not mean an absence of conflicts; differences will always be there. Peace means solving these differences through peaceful means; through dialogue, education, knowledge; and through humane ways.” – Dalai Lama XIV  
   
 6 comments    

 International Conference on Information Modelling and Knowledge Bases (EJC)*  
 Jun 9, 2025 - Jun 13, 2025  Ostrava, Czech Republic  Est. 2014 (1995, 1991, 1988, 1982)  Leave a comment      

 This is no official page!   
  
  No warranty for correctness & completeness!   
  This site will be updated with no ads and linked to its KMedu opportunities  
  as soon as the provider subscribes  to this service!  
  (sample pages: training  , university  , community  , conference  )  
 Monthly Featured   

 The International Conference on Information Modelling and Knowledge Bases (EJC)  , formerly the European-Japanese Conference/Seminar on Information Modelling and Knowledge Bases, the Joint Scandinavian Japanese Seminar on Information Modelling and Knowledge Bases, and initially the Scandinavian Research Seminar on Information Modelling and Database Management, brings together experts from different areas of computer science and other disciplines, who have a common interest in understanding and solving problems on information modelling and knowledge bases, as well as applying the results of research to practice. It further recognizes and studies new areas on modelling and knowledge bases to which more attention should be paid. Therefore philosophy and logic, cognitive science, knowledge management, linguistics and management science are relevant areas, too.  
 The series of International Conference on Information Modelling and Knowledge Bases originally started as a co-operation initiative between Japan and Finland  in 1982. The practical operations were then organized by professor Ohsuga in Japan and professors Hannu Kangassalo and Hannu Jaakkola in Finland. Geographical scope has expanded to cover Europe ( European Japanese Conference – EJC  ) and also other countries ( International Conference  ). Workshop characteristic – discussion, time enough for presentations and limited number of participants (50) / papers (30) – is typical to the conference.  
 The papers presented in the conference are published in the Series of “Frontiers in Artificial Intelligence” by IOS Press (Amsterdam). The books “Information Modelling and Knowledge Bases Vol. n” are edited by the Editing Committee of the conference.  
 Conference History:  
 35th EJC International Conference 2025, June 9-13, 2025, VSB – Technical University of Ostrava, Ostrava, Czech Republic  
 (Host: Department of Computer Science, Faculty of Electrical Engineering and Computer Science, VSB – Technical University of Ostrava)  
 Conference program TBD  
 Topics:  
  Knowledge and information modelling and discovery: Knowledge discovery, knowledge representation and knowledge management; Advanced data mining and analysis methods; Conceptions of knowledge and information; Modelling information requirements; Intelligent information systems; Information recognition and information modelling  
 Co-located Events:  
  11th Summer School & Panel Discussion Workshop, Jun 9  
  
 34th EJC International Conference 2024, June 10-14, 2024, Tokyo, Japan  
 (Host: Department of Data Science, Faculty of Data Science, Musashino University)  
 Conference Sessions:  
  Information Modelling  
  Spatio-Knowledge Modelling  
 Co-located Events:  
  Asia-Europe Summer School & Panel Discussion Workshop of the AI Consortium & 5D World Map System, Jun 10  
  
 33rd EJC International Conference 2023, June 5-9, 2023, Maribor, Slovenia  
 (Host: Institute of Informatics, Faculty of Electrical Engineering and Computer Science, University of Maribor)  
 Conference Sessions:  
  Data Mining and Data Analysis  
  Communication and Collaboration  
 Pre-conference Events:  
  EJC2023 Summer School – AI Consortium & 5D World Map System  
  
 32nd EJC International Conference 2022, May 30 – June 3, 2022, Hamburg, Germany / Virtual venue  
 (Host: Department of Computer Science, University of Applied Sciences Hamburg)  
 Conference Sessions:  
  Intelligent Support  
 Conference Papers:  
  An Exploratory Research on the Expression of Knowledge and Its Generation Process based on the Concept of “Dark-matter”  
  BigRobot Mk.2 Emulation of Embodied Knowledge of a Walking Giant  
 Co-located Events: (May 30, online)  
  EJC Summerschool: AI Consortium & 5D World Map System Asia-Europe Summer School 2022  
  
 31st EJC International Conference 2021, September 7-9, 2021, Hamburg, Germany  Virtual venue  
 (Host: Department of Computer Science, University of Applied Sciences Hamburg)  
 Note: The on-site conference was originally scheduled for September 6-10, 2021 and June 7-11, 2021   
  
 Conference Sessions:  
  Smart cities  
 Conference Papers:  
  A Knowledge-Model for AI-Driven Tutoring Systems  
  Deep Learning for Knowledge Extraction from UAV images  
  On Semantic Spatiotemporal Space and Knowledge with the Concept of “Dark-matter”  
 Co-located Events: (Sep 6)  
  EJC / Asia-Europe Summer School 2021  
  
 30th EJC International Conference 2020, June 8-9, 2020, Hamburg, Germany  Virtual venue  
 (Host: Department of Computer Science, University of Applied Sciences Hamburg)  
 Note: The on-site conference was originally scheduled for June 8-12, 2020   
  
 Conference Sessions:  
  Titles n.a.  
 Conference Papers:  
  A Natural Logic System for Large Knowledge Bases  
  
 29th EJC International Conference 2019, June 3-7, 2019, Lappeenranta University of Technology, Lappeenranta, Finland & St. Petersburg, Russia   
 (Host: School of Business and Management, Lappeenranta University of Technology)  
 Note: Due to unavoidable circumstances the group tour to St.Petersburg during the conference has been cancelled.   
  
 Conference Sessions:  
  Learning and Linguistics  
  Data and Knowledge Representation  
  Formalization and Reasoning; Machine Learning  
 Conference Papers:  
  Influence of Educational Background on the Effectiveness of Learning Database Fundamentals  
  A Study on an Evolution of a Data Collection System for Knowledge Representation  
  On Logic Calculation with Semantic Space and Machine Learning. Machine Learning Using TIL  
  
 28th EJC International Conference 2018, June 4-8, 2018, Riga, Latvia  
 (Host: Transport and Telecommunication Institute)  
 Conference Sessions:  
  Mathematics and Data Mining  
  Culture and Data Support  
  Environment Science and Knowledge System  
 Conference Papers:  
  A Semantic Orthogonal Mapping Method Through Deep-Learning for Semantic Computing  
  
 27th EJC International Conference 2017, June 5-9, 2017, Krabi, Thailand  
 (Host: Museum of Imaging Technology)  
 Conference program n.a.  
 “Knowledge” Papers:  
  —  
  
 26th EJC International Conference 2016, June 6-10, 2016, Tampere, Finland  
 (Host: Department of Information Technology, Pori School of Technology and Economics, Tampere University of Technology)  
 Conference program n.a.  
 “Knowledge” Papers:  
  Logic of Inferable Knowledge  
  An Ontology-Driven Approach for Expert Knowledge Acquisition in the Medical Field  
  
 25th EJC International Conference 2015, June 8-12, 2015, Maribor, Slovenia  
 (Host: Institute of Informatics, Faculty of Electrical Engineering and Computer Science, University of Maribor)  
 Conference Sessions:  
  Information  
  Analysis and Mining  
  Intelligent Processing  
 Panel Session:  
  Cross-cultural and Environmental Data Analysis in Data Mining Processes for Global Resilient Society  
  
 24th EJC International Conference 2014, June 3-6, 2014, Kiel, Germany  
 (Host: Department of Computer Science, Information Systems Engineering, Christian-Albrechts University Kiel)  
 Note: Name change from “European-Japanese” to “International” Conference…   
  
 Conference program n.a.  
 “Knowledge” Papers:  
  Knowledge Support for Software Processes  
  Visualization of Ontologies on the Basis of Cognitive Frames for Knowledge Transmission  
  
 23rd EJC European-Japanese Conference 2013, June 3-7, 2013, Nara, Japan  
 (Host: Faculty of Environmental Information, Keio University; Department of Computer Science, Tokyo Institute of Technology; Department of Information & Computer Sciences, Kanagawa Institute of Technology)  
 Conference program n.a.  
 “Knowledge” Papers:  
  Knowledge Modeling of Agile Software Processes  
  
 22nd EJC 2012, June, 4-9, 2012, Prague, Czech Republic  
 (Host: Department of Software Engineering, Faculty of Mathematics and Physics, Charles University)  
 Conference program n.a.  
 “Knowledge” Papers:  
  A Knowledge System on an Ontology in the Topic Maps Format  
  Knowledge-base approach to software-process development based on TIL  
  Testing and Evaluating Software in a Social Network Creating Baseline Knowledge  
  Knowledge Mining of Web Service Usage  
  
 21st EJC 2011, June, 6-10, 2011, Tallinn, Estonia  
 (Host: n.a.)  
 Conference program n.a.  
 “Knowledge” Papers:  
  Intelligent Icons for Cross-Cultural Knowledge Searching  
  Cluster Analysis Systematisation for Data, Model and Knowledge Management  
  Knowledge Base Modeling and Design Procedure  
  Infrastructures for Knowledge Systems Environments  
  
 20th EJC 2010, 31 May – 4 June 2010, Jyväskylä, Finland  
 (Host: n.a.)  
 Conference program n.a.  
 “Knowledge” Papers:  
  Future Directions of Knowledge Systems Environments for Web 3.0  
  
 19th EJC 2009, June 1-5, 2009, Maribor, Slovenia  
 (Host: Institute of Informatics, Faculty of Electrical Engineering and Computer Science, University of Maribor)  
 Conference Sessions:  
  Knowledge Analysis  
  Knowledge Bases  
  WWW and Knowledge System Modelling  
  Ontology  
  Information Modelling and Design  
 Panel Discussions:  
  Knowledge Grid Computing and Global Risk Management Applications (Tentative)  
  Cross-Cultural Collaborative Systems  
 “Knowledge” Papers:  
 Detection of Difference between News Articles on the Same Topic Based on Sequential Comparison  
  Context-Based Knowledge Creation and Sharing in Cross-Cultural Collaborative Communities  
  Knowledge management in SOA systems  
 A Context Dependent Dynamic Interconnection Method of Heterogeneous Knowledge Bases by Interrelation Management Function  
  A Fixed-Point Query Language for XML  
 Consistency in the Business System Model  
  Integrating hierarchical data into multi-tier applications  
  JoinSee: A Real-Time and Collaborative Hyper-Media System for Participatory Performances in the Opera of Meaning  
  Adoption of Semantic Web Technologies for Developing Unified Medical Software Systems and Services  
 Ontology Engineering Relationally  
  Rapid Ontology Development  
  Formal system of interactions on biomedical ontology  
  Towards the Process-Ontological Modelling”  
  
 18th EJC 2008, June 2-6, 2008, Tsukuba, Japan  
 (Host: Multi Database and MultiMedia Database Research Group, Multidatabase Laboratory, Keio University)  
 Conference Sessions:  
  Knowledge Bases  
  Information Modelling  
  Knowledge Representation  
  Knowledge Management  
  Temporal and Semantic Databases  
  Knowledge Systems  
  Semantic Computing  
 Panel Discussions:  
  Multi-Agent Knowledge Modelling  
  Discussions on Information Modelling and Knowledge Bases  
 Invited Talks:  
  Opera of meaning: film and music performance with semantic associative search  
  Intelligence and Language – How Was Language Created  
 “Knowledge Management” Session Papers:  
  On Reducing Relationships to Property Ascriptions  
  A Domain Specific Knowledge Space Creation Process for Semantic  
  The Architecture of an Intelligent Agent in MAS  
 “Knowledge” Papers:  
  …  
  
 17th EJC 2007, June 4-8, 2007, Pori, Finland  
 (Host: Department of Information Technology, Pori School of Technology and Economics, Tampere University of Technology)  
 Conference program n.a.  
 “Knowledge” Papers:  
  Semantic knowledge modeling in medical laboratory environment for drug usage: CASE study  
  A System Architecture for the 7C Knowledge Environment  
  Knowledge Cluster Systems for Knowledge Sharing, Analysis and Delivery among Remote Sites  
  Ontology-based Support of Knowledge Evaluation in Higher Education  
  When Cultures Meet: Modelling Cross-Cultural Knowledge Spaces  
  A Personal Web Information/Knowledge Retrieval System  
  Manufacturing Roadmaps as Information Modelling Tools in the Knowledge Economy  
  Information Modelling and Knowledge Bases for Interoperability Solution in Security Area  
  
 16th EJC 2006, May 29 – June 2, 2006, Trojanovice, Czech Republic  
 (Host: Department of Computer Science, Faculty of Electrical Engineering and Computer Science, VSB-Technical University of Ostrava)  
 Conference Sessions:  
  Ontology  
  Content Management  
  Semantics  
  Semantic Computing  
  Time Concept, Fuzzy Logic and Ontology  
  Semantic Search  
 Panel Discussions:  
  Logic & AI for Multi-Agent Systems  
  Discussions on Information Modelling and Knowledge Bases  
 “Knowledge” Papers:  
  —  
  
 15th EJC 2005, May 16-20, 2005, Tallinn, Estonia  
 (Host: n.a.)  
 Conference program n.a.  
 “Knowledge” Papers:  
  Role of Models in Knowledge Transfer during OO Software Development  
  Knowledge Entry Maps: structuring of method knowledge in the IT industry  
  Strong Relevant Logic as the Universal Basis of Various Applied Logics for Knowledge Representation and Reasoning  
  Describing Knowledge Architectures  
  
 14th EJC 2004, May 31 – June 4, 2004, University of Skövde, Skoevde, Sweden  
 (Host: Department of Computer Science, University of Skövde)  
 Conference Sessions:  
  Databases  
  Semantics  
  Information Modelling and Systems  
  Knowledge Management  
 “Knowledge Management” Session Papers:  
  Ontology Driven Conceptual Matchmaking for Online Recruitment Problem,  
  Knowledge Transfer between Networking Organizations – a Case Evaluated and Lessons Learned  
 “Knowledge” Papers:  
  An Empirical Study of Context Knowledge in Engineering Design  
  An Analysis of ISD as Knowledge Work -How is the Body of Systems Development Process Knowledge Used?  
  eTrium: Concepts and Knowledge in Practice  
  
 13th EJC 2003, June 3-6, 2003, Kitakyushu, Japan  
 (Host: Knowledge Engineering Laboratory, Kyushu Institute of Technology)  
 Conference Sessions:  
  Titles n.a.:  
 “Knowledge” Papers:  
  Methodological Tools for Describing Children’s Knowledge Construction  
  Modelling a Process Repository for Enterprise Application Integration Based on Business Knowledge and Semantics  
  
 12th EJC 2002, May 27-30, 2002, Krippen, Germany  
 (Host: Department of Database and Information Systems, Faculty of Computer Science, Brandenburg University of Technology at Cottbus)  
 Conference Sessions:  
  Titles n.a.  
 “Knowledge” Papers:  
  Logic of Relevant Connectives for Knowledge Base Reasoning  
  Intensional Logic as a Medium of Knowledge Representation and Acquisition in the HIT Conceptual Model  
  A Semantic Search Space Integration Method for Metalevel Knowledge Acquisition from Heterogeneous Database  
  Unifying Various Knowledge Discovery Systems in Logic of Discovery  
  
 11th EJC 2001 Maribor, Slovenia  
 (Host: Institute of Informatics, University of Maribor)  
 Conference Sessions:  
  Aspects of Information and Knowledge  
  Ontology Engineering and Usage  
 “Knowledge” Papers:  
  Conceptual Modelling and Knowledge Management for Narrative Multimedia Documents  
  A Practical Approach to Intelligent Multi-Task Systems -Structuring Knowledge Base and Generation of Problem Solving System  
  Medical Knowledge Extraction via Hybrid Decision Trees  
  
 10th EJC 2000, May 8-11, 2000, Saariselkä, Finland  
 (Host: Department of Information Technology, Pori School of Technology and Economics, Tampere University of Technology)  
 Conference Sessions:  
  Reconstruction of Knowledge and a Query Method  
  Domain models, Semantics Models, User Stereotype Modelling  
  Knowledge Management and Knowledge Bases  
  Explorative Learning, String Matching, Data Mining  
  Knowledge Landscapes, Information Retrieval, Knowledge Discovery, Technical Systems Modelling, 3-D Modelling Shape  
  Multilingual Cross-Language Information Retrieval  
 “Knowledge” Papers:  
  Modelling Knowledge Logistics for Knowledge Management  
  Converting Ordinary Rules into Default Rules Based on Contradiction of Knowledge Base  
  Knowledge Landscapes: A VR Interface for Web.Basred Training Knowledge Bases  
  Logic-based Knowledge Discovery in Databases  
  
 9th EJC 1999, May 24-28, 1999, Iwate Prefectural University, Iwate, Japan  
 (Host: Faculty of Software and Information Science, Iwate Prefectural University)  
 Conference program n.a.  
 “Knowledge” Papers:  
  Potential Role of Enterprise Model in Organisational Knowledge Processing  
  Inductive Inference of Regular Term Tree Languages and Its Application to Knowledge Discovery  
  nformation Systems Development as Knowledge Work: The body of systems development process knowledge  
  
 8th EJC 1998, May 26-29, 1998, Vammala, Finland  
 (Host: Department of Information Technology, Pori School of Technology and Economics, Tampere University of Technology)  
 Conference Sessions:  
  Titles n.a.  
 “Knowledge” Papers:  
  Shared engineering knowledge – concepts and framework  
  Knowledge-Based Vision and Scheduling in Autonomous HumanType Service Robot  
  
 7th EJC 1997, May 27- 30, 1997, Toulouse 1 University, Toulouse, France  
 (Host: Centre d’Etudes et de Recherches Informatiques en Sciences Sociales, Université Toulouse 1)  
 Conference program n.a.  
 6th EJC 1996, Hornbaek, Denmark  
 Conference program n.a.  
 5th EJC 1995, Sapporo, Japan  
 Note: Name change from European-Japanese “Seminar” to European-Japanese “Conference”…   
  
 Conference program n.a.  
  
 4th European-Japanese Seminar on Information Modelling and Knowledge Bases 1994, Stockholm, Sweden  
 Conference program n.a.  
 3rd European-Japanese Seminar on Information Modelling and Knowledge Bases 1993, Budapest, Hungary  
 Conference program n.a.  
 2nd European-Japanese Seminar on Information Modelling and Knowledge Bases 1992, Ellivuori , Finland  
 Conference program n.a.  
 1st European-Japanese Seminar on Information Modelling and Knowledge Bases 1991, Fujiyoshida, Japan  
 Conference program n.a.  
  1988-1990:   
  Joint Scandinavian-Japanese Seminar on Information Modelling and Knowledge Bases, Ellivuori, Finland  
  1982-1986:   
  Scandinavian Research Seminar on Information Modelling and Database Management, Tampere University of Technology, Tampere, Finland  
  Favorite    
  
 Czech Republic (CZ)  , KM Conferences   Christian-Albrechts-Universität zu Kiel (CAU)  , data analysis  , data mining  , Hochschule für Angewandte Wissenschaften Hamburg (HAW Hamburg)  , information modeling  , information recognition  , information requirement  , intelligent information system  , Kanagawa Institute of Technology (KAIT)  , Keio University  , knowledge base  , knowledge discovery  , knowledge management  , knowledge modeling  , knowledge representation  , Lappeenranta-Lahti University of Technology (LUT)  , Musashino University  , Tampere University (TAU)  , Tokyo Institute of Technology  , University of Maribor  , VSB - Technical University of Ostrava   Conferences | Africa 
  Asia 
  Europe 
  L-America 
  N-America 
  Oceania 
  Online 

 Home  » Opportunities  » Events     

 Leave a Reply Cancel reply    
 Your email address will not be published.  Required fields are marked *    
 Comment *      
 Name *     
 Email *     
 Website    
  By using this form and subscribing to comments you agree with the storage and handling of your data by the KMedu Hub. (see Data Privacy Policy  > 'User posts, comments, and ratings' & 'Follow-up comments') *    

 Popular 
  Recent 
  International Conference on Knowledge, Culture and Change in Organisations*  February 5, 2016  July 1, 2024 
  Call for Participation: Peace!  February 28, 2022  April 14, 2024 
  International Conference on Organizational Learning, Knowledge and Capabilities (OLKC)**  February 5, 2016  November 4, 2024 
  Strategic Management Society Conference (SMS Conference)*  February 17, 2016  October 16, 2024 
  Skills for Knowledge Managers?  May 18, 2015  December 20, 2019 
    
 International Conference on Artificial Intelligence and Knowledge Processing (AIKP)*  November 26, 2024  November 26, 2024 
  University Knowledge Management Education in South Africa  November 19, 2024 
  Wissenstransfer  November 13, 2024  November 13, 2024 
  Knowledge management librarians @ International Islamic University Malaysia (IIUM)  November 12, 2024 
  Knowledge & Information Management, Research & Analysis (KIMRA)*  November 6, 2024 

 Community  

 Multimedia  
 YouTube | (Video) 
  vimeo | (Video) 

 Sponsors & Coops  
 jaegerWM - KM & Social Media consulting 
  Become a Sponsor/Cooperation Partner » 

 Legend:  * Provider does no longer offer any KMedu / This is a recurring conference; ** This recurring conference / KMedu offer is discontinued   
   
 Multiple Category Search!  
 Narrow down your search results by selecting more than one category (e.g. a specific type of "Degree" in a specific "Country")  
 Select KMedu opportunities by...   
       » …Availability  In-house KMedu  Public KMedu     
 » …Country  Afghanistan (AFG)  Algeria (DZ)  Angola (ANG)  Argentina (RA)  Armenia (AM)  Australia (AUS)  Austria (A)  Bahrain (BRN)  Bangladesh (BD)  Belarus (BY)  Belgium (B)  Belize (BZ)  Benin (DY)  Bolivia (BOL)  Bosnia and Herzegovina (BIH)  Botswana (RB)  Brazil (BR)  Brunei (BRU)  Bulgaria (BG)  Burkina Faso (BF)  Burundi (RU)  Cambodia (K)  Cameroon (CAM)  Canada (CDN)  Cape Verde (CV)  Chile (RCH)  China (CN)  Colombia (CO)  Congo. Democratic Republic (CGO)  Congo. Republic (RCB)  Costa Rica (CR)  Côte d’Ivoire (CI)  Croatia (HR)  Cuba (C)  Cyprus (CY)  Czech Republic (CZ)  Denmark (DK)  Djibouti (DJI)  Dominican Republic (DOM)  Ecuador (EC)  Egypt (ET)  El Salvador (ES)  Eritrea (ER)  Estonia (EST)  eSwatini (SD)  Ethiopia (ETH)  Faeroe Islands (FO)  Fiji (FJI)  Finland (FIN)  France (F)  Gambia (WAG)  Germany (D)  Ghana (GH)  Greece (GR)  Guatemala (GCA)  Guinea (RG)  Guinea-Bissau (GUB)  Honduras (HN)  Hong Kong (HK)  Hungary (H)  Iceland (IS)  India (IND)  Indonesia (RI)  Iran (IR)  Iraq (IRQ)  Ireland (IRL)  Israel (IL)  Italy (I)  Japan (J)  Jordan (HKJ)  Kazakhstan (KZ)  Kenya (EAK)  Korea, South (ROK)  Kuwait (KWT)  Kyrgyzstan (KS)  Laos (LAO)  Latvia (LV)  Lebanon (RL)  Lesotho (LS)  Liberia (LB)  Libya (LAR)  Lithuania (LT)  Luxembourg (L)  Macedonia (MK)  Madagascar (RM)  Malawi (MW)  Malaysia (MAL)  Mali (RMM)  Malta (M)  Mauritania (RIM)  Mauritius (MS)  Mexico (MEX)  Morocco (MA)  Mozambique (MOC)  Myanmar (MYA)  Namibia (NAM)  Nepal (NEP)  Netherlands (NL)  New Zealand (NZ)  Nicaragua (NIC)  Niger (RN)  Nigeria (NG)  Norway (N)  Oman (OM)  Pakistan (PK)  Panama (PA)  Paraguay (PY)  Peru (PE)  Philippines (RP)  Poland (PL)  Portugal (P)  Puerto Rico (PR)  Qatar (Q)  Romania (RO)  Russia (RUS)  Rwanda (RWA)  Saudi Arabia (SA)  Senegal (SN)  Seychelles (SY)  Sierra Leone (WAL)  Singapore (SGP)  Slovakia (SK)  Slovenia (SLO)  Somalia (SO)  South Africa (ZA)  Spain (E)  Sri Lanka (CL)  Sudan (SUD)  Sudan. South (SSD)  Sweden (S)  Switzerland (CH)  Taiwan (RC)  Tanzania (EAT)  Thailand (T)  Togo (TG)  Trinidad and Tobago (TT)  Tunisia (TN)  Turkey (TR)  Uganda (EAU)  Ukraine (UA)  United Arab Emirates (UAE)  United Kingdom (GB)  United States of America (USA)  Uruguay (ROU)  Uzbekistan (UZ)  Venezuela (YV)  Viet Nam (VN)  Zambia (Z)  Zimbabwe (ZW)     
 » …Degree  Non-degree KMedu  Training Providers: Certificates  Training Providers: Certifications  Universities: Bachelor degrees  Universities: Certifications  Universities: Diplomas & Certificates  Universities: Doctorate degrees  Universities: Master degrees     
 » …Delivery Format  Blended Learning KMedu  Face-to-face KMedu  Online KMedu  PC KMedu     
 » …Duration  1-… years  1-11 hours  1-11 months  1-3 weeks  1-6 days     
 » …Event Type  KM Conferences  KM Training Events  KMedu Award Ceremonies  KMedu Orientation Sessions  Online KM Events  University KMedu Events     
 » …Language  Arabic language  Bulgarian language  Chinese language  Croatian language  Danish language  Dutch language  English language  Filipino language  Finnish language  French language  German language  Hebrew language  Hungarian language  Indonesian language  Italian language  Japanese language  Korean language  Norwegian language  Persian language  Polish language  Portuguese language  Romanian language  Russian language  Slovak language  Spanish language  Swedish language  Thai language  Turkish language  Vietnamese language     
 » …Price Range (USD)  0 USD / 4Free  1-99 USD  100-999 USD  1000-9999 USD  more than 10000 USD  more than 25000 USD     
 » …Provider Type  Offers from Communities  Offers from Conference Providers  Offers from Job Providers  Offers from Training Providers  Offers from Universities/Colleges     
 » …Study Options  Full-Time  Part-Time     

 Search     
  Search     

 KMedu Hub's Top 10  
 Teaching Knowledge Management in postgraduate LIS education at Edith Cowan University 
  Francisco (Spain) about the Knowledge Management MSc at Cranfield University 
  Knowledge Management Education Forum (KMEF)* 
  SIKM Leaders Community 
  Gurteen Knowledge 
  Information and knowledge management research of post-graduates in South African LIS schools 
  Knowledge Management Modules: An Analysis of Coursework 
  Knowledge Management Education Forum (KMEF) – SMR International Special Report 
  London Knowledge & Innovation Network (LKIN)* 
  Panel: Schools which teach knowledge management 
    
  KMedu Hub's Modified Content  
 Knowledge Manager as Supply Chain Manager for Knowledge 
  Enterprise Digital Workplace Summit** 
  Digital Work Forum* 
  International Atomic Energy Agency (IAEA) 
  International Conference on the Principles of Knowledge Representation & Reasoning (KR)* 
  Information and Knowledge Forum* 
  Knowledge Architecture (KA) 
  Artificial Intelligence x Data & Knowledge Engineering (AIxDKE)* 
  SIKM Leaders Community 
  Kongress Media 

 Site Notice  | Privacy  | Disclaimer     

  Scroll to top   © jaegerWM  - Knowledge Management & Social Media   
 Updates 
  Advertise 
  MyHub 
  About

61. ESWC_0 conference:
Skip to main content    2023 ESWC-Conferences   
   
 Toggle navigation        
 ESWC 2023 | About 
  History 
  Calls | Call for Contributions ESWC 2023 
  Call for Papers: Research Track 
  Call for Papers: In-use Track 
  Call for Papers: Resources Track 
  Call for Workshops 
  Call for Tutorials 
  Call for Posters and Demos 
  Call for Ph.D. Symposium 
  Call for Papers: Industry Track 
  Call for Papers: The next 20 years 
  Call for Project Networking Session Profiles 
  Program | Program Overview 
  Keynote Speakers 
  Accepted Papers | Research, Resource and In-Use Papers 
  Posters and Demos Papers 
  Industry Papers 
  Workshops & Tutorials | Workshops 
  Tutorials 
  PhD Symposium Program 
  20th Anniversary | Panel 
  The next 20 years – ESWC 2043 papers 
  Project Networking 
  Attending | Registration 
  Student Registration Grant 
  Conference Venue 
  Sponsors and Supporters 
  Organisation | Organising Committee 
  Sponsorship 

 REGISTRATION    

  ESWC 2024 General Chair   
  26. July 2023  25. July 2023     Catia Pesquita      
  
 We are very happy to announce the general chair for ESWC 2024: Albert Meroño Peñuela –  we wish Albert all the best with next years organization and are looking forward to see many people again on Crete at the Aldemar Knossos Royal again next year from 26th until 30th May 2024  !  

  Best Paper Awards   
  26. June 2023  24. June 2023     Catia Pesquita      
  
 We are happy to announce the best paper winners in the different tracks below. Congratulations to all the winners, well deserved!  
 Best Research  Paper Award Winners:  
 A Framework to Include and Exploit Probabilistic Information in SHACL Validation Reports | by Rémi Felin, Catherine Faron and Andrea Tettamanzi 
  Classifying sequences by combining context-free grammars and OWL ontologies | by Nicolas Lazzari, Andrea Poltronieri and Valentina Presutti 
  Best Resource  Paper Award Winner: HHT: an approach for representing temporally-evolving historical territories  by William Charles, Nathalie Hernandez and Nathalie Aussenac-Gilles  
 Best In Use  Paper Award Winner: Prototyping an End-User User Interface for the Solid Application Interoperability Specification under GDPR  by Hadrien Bailly, Anoop Papanna and Rob Brennan  
 Best Poster  Award Winner: RoXi: a Framework for Reactive Reasoning  by Pieter Bonte and Femke Ongenae  
 Best Demo  Award Winner: GLENDA: Querying over RDF Archives with SPARQL  by Olivier Pelgrin, Ruben Taelman, Luis Galárraga and Katja Hose  
 Best PhD Symposium  Paper Award Winner: Formalizing Stream Reasoning for a Decentralized Semantic Web  by Mathijs van Noort  
 Congratulations to everyone!  

  Reviewer Awards at ESWC 2023   
  24. June 2023  24. June 2023     Catia Pesquita      
  
 We want to thank all PC members of all tracks for making this ESWC possible. A program cannot be put together without the help of all reviewers!  
 Additionally, we are happy to announce the Reviewer awards for ESWC 2023 and special thanks for the researchers mentioned below for their contributions during the reviewing process!  
 Research Track:  
 Best PC member: | Hubert Naacke 
  Best SPC members: | Oscar Corcho | and | Michael Cochez 
  Resource Track:  
 Best PC member: | Lionel Medini | (Université Lyon 1) 
  Honorary mention PC member: | Vojtěch Svátek ( | University of Economics (VSE)) 
  Best SPC member: | Irene Celino | (CEFRIEL) 
  In Use Track:  
 Best Reviewer: | Vladimir Alexiev 
  Honerable Mentions: | Edelweis Rohrer | and | Jose Emilio Labra Gayo 
  Special Thanks: | Rita Sousa 
  Posters and Demos Best Reviewers:  
 Sylvie Cazalens 
  Edelweis Rohrer 
  Stefan Schlobach 

  Gala Dinner Location/Time Change   
  31. May 2023  31. May 2023     Catia Pesquita      
  
 The Gala dinner, starting at 19:30  20:00  will take place close to the beach  at the “Snack Bar”  , located directly underneath the restaurant where we usually have lunch. See below for a picture! See you there, no matter the weather!  

 Posts navigation  
 1  2  …  8  Older posts     

 Recent Tweets  
 Tweets by @eswc_conf   
 Sponsors and Supporters  
 Your brand here? Sponsor ESWC2023!    

 Proceedings published by  

 Follow us  
 Twitter 
  Mastodon 

 ESWC 2023 – NEWS  
 ESWC 2024 General Chair   
 26. July 2023 10:30  
 We are very happy to announce the general chair for... 
  Best Paper Awards   
 26. June 2023 10:02  
 We are happy to announce the best paper winners in... 
  Reviewer Awards at ESWC 2023   
 24. June 2023 19:41  
 We want to thank all PC members of all tracks... 

 Extended Semantic Web Conference ESWC  
 The ESWC  is a major venue for discussing the latest scientific results and technology innovations around semantic technologies. Building on its past success, ESWC is seeking to broaden its focus to span other relevant related research areas in which Web semantics plays an important role.  

 Twitter 
  Mastodon 

 Theme by Colorlib  Powered by WordPress    

 This website uses cookies to improve your experience. We'll assume you're ok with this, but you can opt-out if you wish. Accept  Reject   

 Privacy & Cookies Policy    
    Close   Privacy Overview  
 This website uses cookies to improve your experience while you navigate through the website. Out of these cookies, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the website. We also use third-party cookies that help us analyze and understand how you use this website. These cookies will be stored in your browser only with your consent. You also have the option to opt-out of these cookies. But opting out of some of these cookies may have an effect on your browsing experience.   

 Necessary   Necessary    
 Always Enabled    
 Necessary cookies are absolutely essential for the website to function properly. This category only includes cookies that ensures basic functionalities and security features of the website. These cookies do not store any personal information.   

 Non-necessary   Non-necessary     
   
 Any cookies that may not be particularly necessary for the website to function and is used specifically to collect user personal data via analytics, ads, other embedded contents are termed as non-necessary cookies. It is mandatory to procure user consent prior to running these cookies on your website.   

 SAVE & ACCEPT

62. EJC_3 conference:
403 ERROR  
 The request could not be satisfied.  
  Request blocked. We can't connect to the server for this app or website at this time. There might be too much traffic or a configuration error. Try again later, or contact the app or website owner.  
  If you provide content to customers through CloudFront, you can find steps to troubleshoot and help prevent this error by reviewing the CloudFront documentation.  
   Generated by cloudfront (CloudFront) Request ID: V1FtGXUDAvEqPLYMAumzcDHsegOG7aHU8ozi5a9TJYvrYNqdkMgV2g==

63. EMMSAD_1 conference:
Enable JavaScript and cookies to continue

64. ESWC_1 conference:
Skip to main content    
    
   European Semantic Web Conference ESWC   
   
 Main Menu - Block  
 Home 
  Rules 
  Committees 
  Events 
  Local Host Application 

  Mission  
   
 Mission   
  Leveraging the semantics of Web content - enriched with domain theories (ontologies), natural language and multimedia processing, as well as insights into Web usage - will add a qualitatively new level of functionality to the Web. Semantic technologies will weave together a large network of human knowledge and make this knowledge machine-processable as part of novel services and applications. Various automated services, based on reasoning with metadata and ontologies, will help the users to achieve their goals by accessing and processing information in machine-understandable form. This network of knowledge systems will ultimately lead to truly intelligent systems, which will be employed for various complex decision-making tasks. Research about Web semantics can benefit from ideas and cross-fertilization with many other areas: Artificial Intelligence, Natural Language Processing, Database and Information Systems, Information Retrieval, Multimedia, Distributed Systems, Social Networks, Web Engineering, and Web Science.   
 The mission of the ESWC is to bring together researchers and practitioners in all these areas dealing with different aspects of semantics on the Web.  

 Find us on    

 Follow @eswc_conf    

 Brought to you by  

 Contact person in charge  . Imprint  | Copyright © STI International  2004 - 2016. All rights reserved.

65. ESWC_2 conference:
JavaScript required  
 We’re sorry, but WorldCat does not work without JavaScript enabled. Please enable JavaScript on your browser.  

   Items   
    ​      
  ​      

 Pages 
  Home 
  Libraries 
  Topics 
  Lists 
  About 
  For Librarians 

 The Semantic Web: ESWC 2023 satellite events : Hersonissos, Crete, Greece, May 28 - June 1, 2023, proceedings    

 Authors :  Extended Semantic Web Conference   , Catia Pesquita  ( Editor  )   , Hala Skaf-Molli  ( Editor  )   , Vasilis Efthymiou  ( Editor  )   , Sabrina Kirrane  ( Editor  )   , Axel Ngonga  ( Editor  )   , Diego Collarana  ( Editor  )   , Renato Cerqueira  ( Editor  )   , Mehwish Alam  ( Editor  )   , Cassia Trojahn  ( Editor  )   , Sven Hertling  ( Editor  )       
   
 Summary :  This book constitutes the post-conference proceedings of the satellite events held at the 20th Extended Semantic Web Conference, ESWC 2023, held in Hersonissos, Greece, during May 28—June 1, 2023. The 50 full papers included in this book were carefully reviewed and selected from 109 submissions. They were organized in sections as follows: Posters and Demos, Industry, and PhD Symposium     

   eBook  , English  , 2023  Edition :  View all formats and editions     
 Publisher :  Springer , Cham , 2023     
   
 Series :  Lecture notes in computer science  , 13998     
    
 Genre :  proceedings (reports)    
 Physical Description :  1 online resource (xxvii, 342 pages) : illustrations (chiefly color).    
 ISBN :  9783031434587 , 3031434587    
    
 DOI :  10.1007/978-3-031-43458-7      
 OCLC Number / Unique Identifier :  1405612968    
 Subjects :  Actes de congrès    
 Conference papers and proceedings    
 Semantic Web    
 Semantic Web Congresses    
 Web sémantique Congrès    
 proceedings (reports)    

 Contents :  Summary of Workshops and Tutorials at European Semantic Web Conference 2023   
 Posters and Demos   
 Sparnatural: a visual knowledge graph exploration tool   
 Integrating Faceted Search with Data Analytic Tools in the User Interface of ParliamentSampo - Parliament of Finland on the Semantic Web   
 SHACL-ACL: Access Control with SHACL   
 A Hybrid Knowledge Graph and Bayesian Network Approach for Analyzing Supply Chain Resilience   
 More power to SPARQL: From paths to trees   
 Assessing Knowledge Graphs Accountability   
 Reinforcement Learning-based SPARQL Join Ordering Optimizer   
 SAP-KG: Synonym Predicate Analyzer across Multiple Knowledge Graphs   
 Descriptive Comparison of Visual Ontology Change Summarisation Methods   
 AgriNER: An NER Dataset of Agricultural Entities for the Semantic Web   
 ClayBot: Increasing Human-Centricity in Conversational Recommender Systems   
 Mining Symbolic Rules To Explain Lung Cancer Treatments   
 GLENDA: Querying RDF Archives with full SPARQL   
 Piloting topic-aware research impact assessment features in BIP! Services   
 Explanation-based Tool for Helping Data Producers to Reduce Privacy Risks   
 PathWays: entity-focused exploration of heterogeneous data graphs   
 A Geological Case Study on Semantically Triggered Processes   
 A System for Repairing EL Ontologies Using Weakening and Completing   
 A User Interface Model for Digital Humanities Research: Case BookSampo - Finnish Fiction Literature on the Semantic Web   
 Modeling Grammars with Knowledge Representation Methods: Subcategorization as a Test Case   
 TRIC: A Triples Corrupter For Knowledge Graphs   
 ExeKGLib: Knowledge Graphs-Empowered Machine Learning Analytics   
 Hannotate: Flexible Annotation for Text Analytics from Anywhere   
 Study-Buddy: A Knowledge Graph-Powered Learning Companion for School Students   
 On the problem of automatically aligning indicators to SDGs   
 Automating Benchmark Generation for Named Entity Recognition and Entity Linking   
 VRKG-CollaborativeExploration - Thematic Data-driven Discussions via Knowledge Graphs on the Road of the Social Metaverse   
 FOO: An Upper-Level Ontology for the Forest Observatory   
 RoXi: a Framework for Reactive Reasoning   
 SummaryGPT: Leveraging ChatGPT for Summarizing Knowledge Graphs   
 Entity Typing with Triples using Language Models   
 Industry   
 Addressing the Scalability Bottleneck of Semantic Technologies at Bosch   
 Knowledge Injection to Counter Large Language Model (LLM)   
 Towards the deployment of Knowledge Based Systems in Safety Critical Systems Hallucination   
 Towards the deployment of Knowledge Based Systems in Safety Critical Systems   
 A Source-agnostic Platform for Finding and Exploring Ontologies at Bosch   
 Wisdom of the Sellers: Mining Seller Data for eCommerce Knowledge Graph Generation   
 Supplier Optimization at Bosch with Knowledge Graphs and Answer Set Programming   
 Ontologies for Formalizing the Process of Configuring and Deploying Building Management Systems   
 PhD Symposium   
 Metaphor processing in the medical domain via Linked Data and Language Models   
 Knowledge-based Multimodal Music Similarity   
 Semantic Parsing for Knowledge Graph Question Answering with Large Language Models   
 Semantic and Efficient Symbolic Learning over Knowledge Graphs   
 Query answering over the polymorphic web of data   
 Optimisation of Link Traversal Query Processing over Distributed Linked Data through Adaptive Techniques   
 Formalizing Stream Reasoning for a Decentralized Semantic Web   
 A Distributed and Parallel Processing Framework for Knowledge Graph OLAP   
 Ontology-Compliant Knowledge Graphs   
 Evaluating Knowledge Graphs with Hybrid Intelligence   
 Exploiting Semantics for Explaining Link Prediction over Knowledge   
 A Window into the Multiple Views of Linked Data   

 Notes :  International conference proceedings   
 Includes author index   
    
 More Information :  SpringerLink     
 www.vlebooks.com     

 Show more information        

 Buy this Item:  

 Rent this Item:   

 WorldCat is the world’s largest library catalog, helping you find library materials online.  
   
 Language  Čeština  Deutsch  English  Español  Français  Italiano  日本語  한국어  Nederlands  Português  ไทย  简体中文  繁體中文     ​      

 Copyright © 2001-2024 OCLC. All rights reserved.  Terms and Conditions  Help    
   
 © 2024 OCLC Domestic and international trademarks and/or service marks of OCLC, Inc. and its affiliates.  Cookie notice    
   
 Home  Libraries  Topics  Lists    
 About  For Librarians  Help & FAQ  Contact Us    
                    
 Privacy Policy  Accessibility Statement  ISO 27001 Certificate

66. EMMSAD_2 conference:
Toggle navigation      reposiTUm    
    
  ABOUT REPOSITUM 
  HELP 

 Login     
 News 
  Browse by 
  Publication Types 
  Organizations 
  Researchers 
  Projects 
  TU Wien Academic Press 
  Open Access Series 
  Theses 
  Digitised Works 
  Year of Publication 

 Record link:   
 http://hdl.handle.net/20.500.12708/204352    
 -   
   
 Title:   
 Guest editorial for EMMSAD’2023 special section    
 en   
   
 Citation:   
 Bork, D., & Proper, H. A. (2024). Guest editorial for EMMSAD’2023 special section. Software and Systems Modeling  , 23  (5), 1075–1076. https://doi.org/10.1007/s10270-024-01213-w   

 -   
   
 Publisher DOI:   
 10.1007/s10270-024-01213-w    
 -   
   
 Publication Type:   
 Article - Editorial   
 en   
   
 Language:   
 English   
 -   
   
 Authors:   
 Bork, Dominik       
  Proper, Henderik A.        
 -   
   
 Organisational Unit:   
 E194-03 - Forschungsbereich Business Informatics     
 -   
   
 Journal:   
 Software and Systems Modeling     
 -   
   
 ISSN:   
 1619-1366   
 -   
   
 Date (published):   
 26-Sep-2024   
 -   
   
 Number of Pages:   
 2   
 -   
   
 Publisher:   
 SPRINGER HEIDELBERG  
    
 -   
   
 Peer reviewed:   
 No   
 -   
   
 Keywords:   
 Conceptual Modeling; Enterprise Modeling; Systems analysis and design   
 en   
   
 Abstract:   
 The Exploring Modeling Methods for Systems Analysis and Development (EMMSAD) conference series organized 29 events from 1996 to 2024, associated with Conference on Advanced Information Systems Engineering. In 2009, EMMSAD became a two-day working conference. Since 2017, the authors of EMMSAD’s best papers are invited to submit extended versions of their paper, for consideration to be published in the Journal of Software and Systems Modeling. The main topics of the EMMSAD series focus on models and modeling methods for the analysis and development of software information systems of any kind. These are organized into five tracks: (1) Foundations of Modeling and Method Engineering; (2) Enterprise, Business, Process, and Capability Modeling; (3) Information Systems and Requirements Modeling; (4) Domain-Specific and Knowledge Modeling; and (5) Evaluation of Models and Modeling Approaches. The aims, topics, and history of EMMSAD can be also found on its website at http://www.emmsad.org/.   
   
 en   
   
 Research Areas:   
 Information Systems Engineering: 100%   
 -   
   
 Science Branch:   
 1020 - Informatik: 90%  
  5020 - Wirtschaftswissenschaften: 10%   
 -   
   
 Appears in Collections:   
 Article   

  Show full item record    

 Page view(s)  
 34    
 checked on Nov 16, 2024   

 Google Scholar TM   
   
 Check     

 ©  TU Wien   
 Data Protection Declaration   
 Support   
 Policies   
 Legal Notice

67. EDBT_0 conference:
EDBT    
 Organization 
  Test of Time 
  Conferences 
  Summer Schools 
  Statutes 
  Imprint 

  Extending Database Technology   
 Promoting and supporting research and progress in the fields of databases and information systems technology and applications  
   
 Next conference: EDBT 2025 (28th Edition)  

 EDBT/ICDT 2025 Joint Conference  
 28th International Conference on Extending Database Technology  
 Barcelona, Spain  
 25th - 28th March, 2025  
 Local Web site   
 Notice that from 2022 on, the EDBT Conference switched to 3 submission/publication cycles for its papers. Details can be found below.  
 Submission deadlines for 2025 are Feb 2, 2024; June 5, 2024; October 9, 2024.  

 Back to top    
   
 Welcome to the Web site of the EDBT Association (edbt.org)   
 The Association  
 The EDBT Association is a non-political and non-profit organization for promoting and supporting research and progress in the fields of databases and information systems technology and applications. It was formed in 1990 to provide a stable structure to support the continuity of the EDBT Conference series; it changed its legal status in 1995, assuming the current legal form of an association according to Italian laws.  
 Our major activity is the promotion of the International Conference on Extending Database Technology (EDBT), which has been held every two years since 1988. From 2008 on, the Conference is being held annually.  
 The EDBT Association has close relationships with other organizations in the database field, including ACM SIGMOD  , IEEE TC on Data Engineering  , VLDB Endowment  , and the ICDT Council  .  
   
 Conference Proceedings  
 In the beginning, the Conference Proceedings have been published by Springer-Verlag  as part of the LNCS  Series. We have also promoted a series of Summer Schools, started in 1991.  
 From 2008 to 2013, the Conference Proceedings have been published in the ACM Digital Library (part of the ACM International Conference Proceedings Series, AICPS); Open Access copies are located on this EDBT.org server in Germany.  
 In the year 2014, EDBT Proceedings moved to a new, fully Open Access publication platform they started in cooperation with the University of Konstanz Library: OpenProceedings.org  . From this publication site, copies of all papers can be freely (re-)distributed under a Creative Commons License.  
 All EDBT Proceedings are listed in the Computer Science Bibliography at dblp.org  .  

 Back to top    
   
 Organization of the EDBT Association   
 The EDBT Association invites as members the key officers of EDBT Conferences and Summer Schools, for a duration of 5 years.  
 The EDBT Association has an Executive Board (EB), elected by the members. The EB membership term is 4 years. The Association is represented by its President, who is elected by the EB.  
  
 The current Executive Board members are:  
 Angela Bonifati   Lyon 1 University, President   Vassilis Christophides   INRIA Paris  George Fletcher   Eindhoven University of Technology  Giovanna Guerrini   Università Degli Studi di Genova  Maurice van Keulen   Universiteit Twente, Enschede  Marc H. Scholl   Universität Konstanz  Genoveva Vargas-Solar   CNRS, Grenoble  Yannis Velegrakis   Utrecht University  Demetris Zeinalipour   University of Cyprus  Yongluan Zhou   University of Copenhagen  Dan Olteanu   Universität Zürich ( ICDT representative  )     

 Back to top    
   
 In Memoriam  
 2022  
 Joachim W. Schmidt  was a founding member of the EDBT Association and long term member of the Executive Board. He has always given valuable advice for further developping the format, the scientific quality, and the attractiveness of our Conferences and Summer Schools. For many of us, he has been a true friend. Joachim passed away in May 2022. We are missing him.  
 2019  
 Christine Collet  was a senior member of the EDBT community, a long term member of the Executive Board and past President of the EDBT Association. Christine carried out these roles with good humour and enthusiasm, while still making sure that things were done. Christine passed away in early 2019. We are missing her.  

 Back to top    
   
 New Publication Schedule of EDBT Conferences 2022 ff.    
 3 Submit/Review Cycles  
 Starting with the 2022 edition of the EDBT Conference, we switched to a model of multiple review cycles like many other major conferences in our field. In the future, there will be 3 cycles each year. For the 2022 transition period, only 2 of them could be implemented, also the working period of the 2022 PC was extended to also cover the first cycle of the 2023 conference. The 2023 PC will only handle the last two cycles of Volume 26. Accepted papers of early cycles will be published in early numbers of the Proceedings volume.  
 The following picture explains the future scheme for submission/review cycles and the publication of 3 numbers per volume of the EDBT Proceedings.  
    
 12 Month Resubmission Ban  
 EDBT, like other conferences in our field with multiple submit/review cycles, follows a "12 month resubmission ban" model for rejected and withdrawn papers in each of its track formats:  
 EDBT conferences typically have tracks with short and long paper formats. Resubmission of work is not allowed to any track of EDBT if the work - or any work with substantial overlap with the submitted paper and with the same or overlapping sets of authors - was previously rejected from a track of EDBT in the same paper format, within 12 months. A paper withdrawn by the authors after a revision decision will be considered as rejected and the 12-month resubmission ban applies to such papers as well.  

 Back to top    
   
 Test of Time Awards   
 In 2014, EDBT began to give a Test-of-time Award for the paper (or a small number of papers) that has had the most impact in terms of research, methodology, conceptual contribution, or transfer to practice since it appeared in the proceedings of EDBT.  

 Eligible Conferences | Year | Winner 
 EDBT 2004 | 2014 | Charu C. Aggarwal, Philip S. Yu 
  A Condensation Approach to Privacy Preserving Data Mining 
 EDBT 1988 to 1994  
  (4 Conferences) | 2015 | Ralf Hartmut Güting 
  Geo-Relational Algebra: A Model and Query Language for Geometric Database Systems 
  EDBT 1988 
 EDBT 2006 | 2016 | Dr. Fusheng Wang, Shaorong Liu, Peiya Liu, Yijian Bai 
  Bridging Physical and Virtual Worlds: Complex Event Processing for RFID Data Streams 
  EDBT 2006 
 EDBT 1996 to 2002  
  (4 conferences) | 2017 | Ramakrishnan Srikant, Rakesh Agrawal 
  Mining Sequential Patterns: Generalizations and Performance Improvements 
  EDBT 1996 
 EDBT 2008 | 2018 | Koustuv Dasgupta, Rahul Singh, Balaji Viswanathan, Dipanjan Chakraborty, Sougata Mukherjea, Amit A. Nanavati, Anupam Josi 
  Social ties and their relevance to churn in mobile telecom networks 
  EDBT 2008 
 EDBT 2009 | 2019 | Ryan Johnson, Ippokratis Pandis, Nikos Hardavellas, Anastasia Ailamaki, Babak Falsafi 
  Shore-MT: a scalable storage manager for the multicore era 
  EDBT 2009 
 EDBT 2010 | 2020 | Foto Afrati and Jeff Ullman 
  Optimizing joins in a map-reduce environment 
  EDBT 2010 
 EDBT 2011 | 2021 | Zhixian Yan, Dipanjan Chakraborty, Christine Parent, Stefano Spaccapietra, and Karl Aberer 
  SeMiTri: a framework for semantic annotation of heterogeneous trajectories 
  EDBT 2011 
 EDBT 2012 | 2022 | Chi Zhang, Feifei Li, and Jeffrey Jestes 
  Efficient Parallel kNN Joins for Large Data in MapReduce 
  EDBT 2012 
 EDBT 2013 | 2023 | Mauricio A. Hernández, Ryan Wisnesky, Rajasekar Krishnamurthy, Georgia Koutrika, and Lucian Popa 
  HIL: A High-Level Scripting Language for Entity Integration 
  EDBT 2013 
 EDBT 2014 | 2024 | Renê R. Veloso, Loïc Cerf, Wagner Meira Jr, and Mohammed J. Zaki 
  Reachability Queries in Very Large Graphs: A Fast Refined Online Search Approach 
  EDBT 2014 
  
 Decision:  the PC chair appoints a small committee (3 persons max) for the selection of some papers candidates for the award. The EDBT executive board will make the final decision based on this list.  

 Back to top    
   
 Conferences  
  
 Year | Location | Online Proceedings | PC Chair | Invited Speakers 
 2026, March 24-27 | Tampere, Finland | tba | Wolfgang Lehner, Vanessa Braganholo | tba 
 2025, March 25-28 | Barcelona, Spain | tba | Alkis Simitsis, Bettina Kemme | tba 
 2024, March 25-28 | Paestum, Italy | OpenProceedings (EDBT) 
  LIPIcs (ICDT) | Qiong Luo, Letizia Tanca | Anastasia Ailamaki, Sihem Amer-Yahia, H.V. Jagadish, Georgia Koutrika, Sudeepa Roy 
 2023, March 28-31 | Ioannina, Greece | OpenProceedings (EDBT) 
  LIPIcs (ICDT) | Sourav S. Bhowmick, Katja Hose | Leonid Libkin, Jayant Haritsa, Juliana Freire, Gonzalo Navarro, Anil Goel 
 2022, March 29-April 01 | Edinburgh, UK | OpenProceedings (EDBT) 
  LIPIcs (ICDT) | Julia Stoyanovich, Jens Teubner | Peter Boncz, Seung-won Hwang, Marcelo Arenas, Hung Ngo, Moshe Y. Vardi, Nofar Carmeli 
 2021, March 23-26 | Nikosia, Cyprus | OpenProceedings (EDBT) 
  LIPIcs (ICDT) 
  CEUR-WS (Workshops) | Yannis Velegrakis | Katja Hose, Pablo Barceló, Felix Naumann, Julia Stoyanovich 
 2020, March 30-April 02 | Copenhagen, Denmark | OpenProceedings (EDBT) 
  LIPIcs (ICDT) 
  CEUR-WS (Workshops) | Angela Bonifati | Benny Kimelfeld, Ashwin Machanavajjhala, Juan Reutter, Neoklis (Alkis) Polyzotis 
 2019, March 26-29 | Lisbon, Portugal | OpenProceedings (EDBT) 
  LIPIcs (ICDT) 
  CEUR-WS (Workshops) | Melanie Herschel | Dan Olteanu, Ioana Manolescu, Lise Getoor, Wang-Chiew Tan 
 2018, March 26-29 | Vienna, Austria | OpenProceedings (EDBT) 
  LIPIcs (ICDT) 
  CEUR-WS (Workshops) | Michael Böhlen | Chris Jermaine, Virginia Vassilevska Williams, Ke Yi, Thomas Zeume 
 2017, March 21-24 | Venice, Italy | OpenProceedings (EDBT) 
  LIPIcs (ICDT) 
  CEUR-WS (Workshops) | Volker Markl | Carsten Lutz, Tova Milo, Christopher Ré, Shivakumar Vaithyanathan 
 2016, March 15-18 | Bordeaux, France | OpenProceedings (EDBT) 
  LIPIcs (ICDT) 
  CEUR-WS (Workshops) | Evaggelia Pitoura | Gustavo Alonso, Elisa Bertino, Floris Geerts, Yufei Tao 
 2015, March 23-27 | Brussels, Belgium | OpenProceedings (EDBT) 
  LIPIcs (ICDT) 
  CEUR-WS (Workshops) | Gustavo Alonso | Graham Cormode, Christoph Koch, Rasmus Pagh, Wolfgang Lehner 
 2014, March 24-28 | Athens, Greece | OpenProceedings (EDBT) 
  OpenProceedings (ICDT) 
  CEUR-WS (Workshops) | Sihem Amer-Yahia | Frank Neven, Serge Abiteboul, Christopher Ré, Peter Boncz 
 2013, March 18-22 | Genova, Italy | OpenProceedings (EDBT) 
  OpenProceedings (ICDT) 
  ACM DL (EDBT) 
  ACM DL (ICDT) 
  ACM DL (Workshops) | Norman Paton | Daniel Abadi, Jan van den Bussche, C. Mohan, Luc Segoufin 
 2012, March 26-30 | Berlin, Germany | OpenProceedings (EDBT) 
  OpenProceedings (ICDT) 
  ACM DL (EDBT) 
  ACM DL (ICDT) 
  ACM DL (Workshops) | Elke Rundensteiner | Michael Carey, Wenfei Fan, Erich Graedel, Alon Halevy |  
 2011, March 21-25 | Uppsala, Sweden | OpenProceedings (EDBT) 
  OpenProceedings (ICDT) 
  ACM DL (EDBT) 
  ACM DL (ICDT) | Anastasia Ailamaki | Susan B. Davidson, Dan Suciu, Jeff Ullman, Gerhard Weikum 
 2010, March 22-26 | Lausanne, Switzerland | OpenProceedings (EDBT) 
  OpenProceedings (ICDT) 
  ACM DL (EDBT) 
  ACM DL (ICDT) 
  ACM DL (Workshops) | Ioana Manolescu | Amol Deshpande, Val Tannen, Pierre Fraigniaud, Ian Horrocks 
 2009, March 23-27 | St. Petersburg, Russia | OpenProceedings (EDBT) 
  OpenProceedings (ICDT) 
  ACM DL (EDBT) 
  ACM DL (ICDT) 
  ACM DL (Workshops) | Martin Kersten | Victor Vianu, Umeshwar Dayal, Georg Gottlob 
 2008, March 25-30 | Nantes, France | EDBT.org 
  ACM DL | Alfons Kemper | Eric Simon, Dennis Shasha, Donald Kossmann 
 2006, March 26-30 | Munich, Germany | Yannis Ioannidis | Martin Kersten, Alan Smeaton, David Maier 
 2004, March 14-18 | Crete, Greece | Elisa Bertino | Rick Hull, Keith G. Jeffery, Elena Ferrari & Bhavani M. Thuraisingham 
 2002, March 25-27 | Prague, Czech Republic | Christian S. Jensen | Hans-Jörg Schek, Ian Harrocks, Jari Ahola 
 2000, March 27-31 | Konstanz, Germany | Carlo Zaniolo | Ashish Gupta, Stefano Ceri, Andreas Reuter 
 1998, March 23-27 | Valencia, Spain | Hans-Jörg Schek | Gerhard Weikum 
 1996, March 25-29 | Avignon, France | Peter M.G. Apers | Jennifer Widom, Keith van Rijsbergen, Francois Bançilhon 
 1994, March 28-31 | Cambridge, UK | Matthias Jarke | Christopher M. Stone, Andrew Herbert 
 1992, March 23-27 | Vienna, Austria | Alain Pirotte | Francois Bançilhon, Raymond Reiter 
 1990, March 26-30 | Venice, Italy | Francois Bancilhon | Carlo Zaniolo 
 1988, March 14-18 | Venice, Italy | Joachim W. Schmidt | Luca Cardelli 
  
 Most links to older editions are courtesy of the DBLP Server  .  
  Since 2009, EDBT Conferences are held jointly with ICDT   

 Back to top    
   
 Summer Schools  
  
 Year | Location 
 2022 | Bordeaux (France) 
 2019 | Lyon (France) 
 2017 | Genova Nervi (Italy) 
 2015 | Mas Gorgoll, Palamos (Spain) 
 2013 | Center Paul-Langevin, Aussois (France) 
 2011 | Saint Petersburg (Russia) 
 2009 | Presqu'île de Giens (France) 
 2007 | Bozen-Bolzano, Italy 
 2004 | Sardinia, Italy 
 2002 | Cargèse, France 
 1999 | La Baule, France 
 1997 | Capri, Italy 
 1995 | Gubbio, Italy 
 1993 | Leysin, Switzerland 
 1991 | Alghero, Italy 

 Back to top    
   
 x   Statutes  
   
 STATUTES -- with changes as of 26 March 2006 included -- TITLE I - GENERAL DISPOSITIONS Article 1 An association is founded, which is denominated "ASSOCIATION EDBT". The association has its seat in ... [Text removed from original to preserve privacy. Webmaster edbt.org]. Article 2 The association is non-political and does not have any intended use of profit. It makes as its object to promote and favour in Europe the progress and study of the technology and applications concerning the databases. To this end the association will be able to: 1. contribute to the advanced vocational training by promoting training courses and advanced continuity studies of problems, innovations and/or developments in the databases; 2. favour the exchange of experiences, information and data between the specialists of the branch . no matter how they are linked to the databases; 3. promote and coordinate studies and research in the field of the databases either directly in co-operation with the associates or with similar European or international corporations and institutes; 4. spread the knowledge of modern technologies concerning the databases and known problems with their introduction and their application, also by granting scholarships to young researchers, students and scientists; 5. unfold other useful activities with attaining indicated purposes under the condition that they do not represent a commercial activity. Article 3 Always to reach the proper objective the association can promote the institution of a meeting having an international character that is called .International Convention Extending Data Base Technology.. But the association cannot charge itself with organising the convention, what must thus be carried out by natural persons or corporations, in comparison to whom/which the association will maintain the fullest independence. The association will instead occupy itself . also by means of the right own associates . with the obliged scientific aspects at the to-be-provided, to-be-required convention, also at the scientific directorate. Article 4 In order to carry out the appropriate purpose the association will take care of the initial assets made available by the founding members, and also of the voluntary contributions meanwhile effected by the other associates or other corporations interested in the activities of the association. Article 5 The organs of the association are: a) assembly of the associates; b) the Managing Board. TITLE II . THE ASSOCIATES Article 6 The natural persons of the association and the juridical persons, who due to their work activity or study are interested in the activities of the association itself, can participate. The admission to the association at the proposal of the Managing Board will be decided at the discretional procedure of the assembly of the associates. In particular those, who will have covered the positions of General Chairperson, Program Committee Chairperson, Organisation Committee Chairperson in the international convention EDBT, will be invited by the Managing Board to make available their experiences at the end of the meeting by becoming members of the association, if they should not yet have been such associates. Article 7 Associates can resign from the Association by written notice. The Managing Board can exclude associates upon repeated failure to attend the annual meeting or otherwise participate in the association's activities. Exclusion by such a decision needs to be brought to the associate's attention with appropriate notice in advance. Associates are responsible for keeping their contact information up-to-date. Associates who are not reachable due to failure of doing so are not counted on voting quotas and may be excluded from the association TITLE III . MEETING OF THE ASSOCIATES Article 8 The statutory/ordinary meeting of the associates convoked upon deliberate resolution of the Managing Board not less than twenty days before the date fixed for the session reconvenes in the locality to be indicated in the memorandum of convocation, at least once a year, to provide and to deliberate about the financial reporting, about the state of assets and all other arguments of general character entered to the order of the day by initiative of the Managing Board, otherwise upon request of at least five associates. The meeting will stipulate the criteria, to which the executive committee must adhere in promoting the scientific activity of the association and moreover the convention EDBT concerning art. 3. The date and agenda of the meeting are communicated to the associates by registered letter or whatever other means, which the Managing Board will deem to consider appropriate. Article 9 All associates are authorised to intervene in the meeting; each one of the associates will be able to represent one or more other associates provided he is furnished with regular instruction in writing. For the legal convocation of the meeting and for the validity of the resolutions the support operation of at least 50% of the registered associates is required. In lack of the legal number in the second convocation the meeting is valid with any number of associates being present or represented. The date of this session will be fixed in the same notification of convocation as of the first one. The Managing Board can admit the vote for concurrence on determined arguments to the order of the day and on the election of the corporate charges/positions. Two associates nominated by the chairman when opening the assembly will execute the recount of the cast ballots. Article 10 The meeting makes resolutions by a majority of votes of the associates present or represented by means of regular delegation in writing issued to the other associate. The vote for concurrence must arrive at least on the day before the meeting and will be contained in the count of the associates who are present at the end of the legal establishment of the meeting. Article 11 The assembly/meeting elects from the associates who are present a chairman and a secretary at the beginning of each session. The secretary provides to draw up the minutes of the resolutions of the assembly. The minutes must be signed by the chairman of the assembly, by the secretary and by the polling clerks, if here the voting is done. Article 12 Extraordinary and ordinary meetings can be convoked by deliberation of the Managing Board or upon demand of such associates who do represent not less than the tenth part of the inscribed ones. Article 13 The members assembled in the meeting can modify the present statute, but cannot modify the purposes of the association as fixed by the preceding articles 2 and 3. For the validity of the resolutions, as of the preceding passage . no matter whether in the first or second convocation . the presence of at least half of the associates and favourable vote of three fifths of the present, cast or represented votes is required. TITLE IV . THE MANAGING BOARD Article 14 The Managing Board is nominated by the meeting and is composed of not less than three members, the number of the members of the Managing Board will be determined by the assembly itself. For the first time the determination of the number of the members and their assignment will be effected in the constituting act. The Managing Board endures in office for four years. In case of dismissal of councillors before expiry of the mandate the Managing Board will provide for their substitution by co-option. The councillors so nominated remain in office until the successive orderly meeting. If for some reason the number of councillors is reduced to less than two thirds, the whole Managing Board must be renewed. The office of councillor is gratuitous. Article 15 The Managing Board is endowed with every power to decide on initiatives to be assumed and the criteria to be followed for the pursuit and attention of the purposes of the association and for its management and ordinary and extraordinary administration. In particular the board: a) fixes the directives for the execution of the statutory tasks, hence stabilises the terms and responsibilities of execution and verifies the execution itself; b) decides concerning the questions of assets; c) can stabilise the founding of the technical committees and commissions for the studying of various problems that are pertinent to the purposes of the association; d) decides on the activities and initiatives of the association and its collaboration with third persons at the norm of art. 2 and determines the amount of eventual contributions on deficit account to the organisers of the EDBT convention; e) approves the projects of the budget, financial plan and status of assets to be presented to the meeting of the associates. Article 16 The Managing Board nominates from among their members a chairman who stays in office for the whole period of the council. This meeting takes place whenever this is necessary, by initiative of the chairman or at least a quarter of the board members. Article 17 The resolutions of the Managing Board are taken by the majority of votes of the councillors who are present. In case of a parity of votes that of the chairman has prevalence. The decisions of the meeting are valid, if at least half of the councillors take part at the meeting. Article 18 The signature and legal representation of the association as against any judicial and administrative authority and as against third persons are conferred to the chairman of the Managing Board. By statute all powers necessary for the bank activities and financial activities of the association - as there exist at exemplified and not exhaustive title . are attributed to the chairman, the opening and closing of current bank accounts, stock deposit, the faculty of operating also through cheques on same accounts, effecting payments and drawings within the limits of the conceded entrusted documents, collection of sums of any title, issuance of receipts and actuating in general all that would be necessary for the economic and financial management of the association, nothing excluded nor excepted. The chairperson of the Managing Board can delegate parts of his or her responsibility to another member of the Managing Board. Article 18 a) Whenever these Statutes require "written" notice, e.g., for votes or other communication, reliable electronic communication (such as, for example, signed e-mail or secured, authenticated Web-site interaction) is explicitly included. TITLE V . FINAL PROVISIONS Article 19 All charges are gratuitous. Article 20 The duration of the association is an unlimited period of time. Article 21 In case of dissolution of the association after deduction of the charges for managing the association and the liabilities the residual assets will be appropriated in favour of cultural initiatives and research indicated by the Managing Board Article 22 The association can at any time request the acknowledgment only, if all lawful obligations are observed. Article 23 For all that has not been provided expressly, reference is made to the dispositions of the substantive law. JOACHIM WOLFGANG SCHMIDT MICHELE MISSIKOFF STEFANO MARIO SALVATORE CERI LIVIO COLIZZI NOTARY Official translation of the Italian original document. Webmaster edbt.org    
 Close    

 x   Imprint  
   
 Address:   
  Universität Konstanz  
  78457 Konstanz, Germany  
  Tel.: +49 (0)7531 / 88 - 0  
  Fax: +49 (0)7531 / 88 - 3688  
  Posteingang@uni-konstanz.de   
 Verantwortlich im Sinne der §§ 6 TDG, 10 MdStV:   
  As a content provider ("Inhaltsanbieter") according to § 8 Teledienstgesetz University of Konstanz is responsible for own contents ("eigene Informationen") hold ready for utilisation. Even though all contents are carefully reviewed and constantly updated no guarantee can be provided for completeness, accuracy and ultimate up-to-dateness. University of Konstanz is therefore not liable for damages in connection with the usage of these contents. Cross-references ("links") to contents of other providers have to become differentiated from own contents ("eigene Inhalte"). Even if University of Konstanz should arrange through this access for the usage of these contents according to § 9 Tele-dienstgesetz, no responsibility will be taken for this external content ( "fremden Inhalt"). Links are references to dynamic internet appearances of third parties. University of Konstanz has reviewed the content in respect to liabilities according to civil and criminal law at the first time link-up. However University of Konstanz is not obliged to constantly review these in respect to changes which could cause a new liability. In case University of Konstanz should notice that a specific offer to which a link was provided will cause a liability according to civil oder criminal law the link will become canceled.  
   
 Close    

 x   Test of Time Award 2014  
   
 Starting in 2014, EDBT gives a Test-of-time Award for the paper (or a small number of papers) that has had the most impact in terms of research, methodology, conceptual contribution, or transfer to practice since it appeared in the proceedings of EDBT.  
 The EDBT ToT award for 2014 will be presented during the EDBT/ICDT 2014 Joint Conference, March 24-27, 2014 in Athens, Greece ( http://www.edbticdt2014.gr/  ).  
 The EDBT 2014 Test of Time Award committee was formed by Gustavo Alonso, Torsten Grust and Walid Aref, all members of the EDBT 2014 PC and chaired by Sihem Amer-Yahia, the EDBT 2014 PC chair. The committee was charged with selecting a paper or a small number of papers from the EDBT 2004 proceedings that has had the most impact in terms of research, methodology, conceptual contribution, or transfer to practice over the past decade. After careful consideration, the committee has decided to select the following paper as the EDBT ToT Award winner for 2014:  
 Charu C. Aggarwal, Philip S. Yu   
  A Condensation Approach to Privacy Preserving Data Mining   
  EDBT 2004, pp. 183-199 ( electronic edition  )   
 The paper addresses the topic of privacy-preserving data mining and proposes a framework for anonymization in contrast to perturbation approaches that introduce noise. The approach advocated in this paper takes into consideration the correlated nature of multi-dimensional data and also that is not problem-specific, i.e., the framework is generic and many mining operations can be formulated and solved given the same framework.  
 The paper is seminal and covers a topic which has not lost relevance today. It constitutes a prime example of how far a simple idea (in this case condensation: reduce a group of records to a number of carefully selected statistical properties of that group) can carry a whole line of original research. Condensation comes with a naturally built-in "privacy dial" (namely the group size) and is practical (easily implemented, maintainable under updates). It established general techniques that have been taken up by many people in the area and outside the area. The results in this paper can be (and have been) generalized in many ways as they tackled a more general problem of grouping, aggregation, and sampling.  
 According to Google Scholar, the paper has been constantly cited in the period from 2005 until today (2013) with a remarkable peak in 2008 when privacy-preserving data mining and database security in general became research topics of core interest. Since 2009 until today, the number of citations has only gone up. Papers citing this paper are also highly cited, indicating the relevance of the contribution.  
 A number of follow-up papers  by the same authors, quite clearly demonstrate that the proposed condensation approach has interesting aspects:  
  
 2005 | Proc. of the 5th SIAM International Conference on Data Mining, "On variable constraints in privacy preserving data mining" 
 2008 | Data Mining and Knowledge Discovery 16 (3), "A framework for condensation-based anonymization of string data" 
 2008 | ACM Transactions on Database Systems (TODS) 33 (1), 2, "On static and dynamic methods for condensation-based privacy-preserving data mining" 
 2008 | Handbook of Database Security, "Privacy-Preserving Data Mining: A Survey"  . Springer book "Privacy-Preserving Data Mining", edited by Aggarwal and Yu. 
  
 Work on condensation-based privacy in data mining also had an impact on industry and industrial practice  . At least the following US patents (or patent applications) are based on the idea of condensation:  
 US Patent 8,010,541: | "Systems and methods for condensation-based privacy in strings" 
  US Patent 7,885,941: | "Methods and apparatus for privacy preserving data mining using statistical condensing approach" 
  US Patent 7,904,471: | "Method, apparatus and computer program product for preserving privacy in data mining" 
  US Patent App. 12/119,766 | "Method and Apparatus for Variable Privacy Preservation in Data Mining" 
  US Patent 7,305,378 | "System and method for distributed privacy preserving data mining" 
  US Patent 7,302,420 | "Methods and apparatus for privacy preserving data mining using statistical condensing approach" 
  US Patent App. 11/249,647 | "Method and apparatus for variable privacy preservation in data mining" 
    
 Close    

 x   Test of Time Award 2015  
   
 In 2014, EDBT began awarding the EDBT test-of-time (ToT) award, with the goal of recognizing one paper, or a small number of papers presented at EDBT earlier and that have best met the “test of time”, i.e. that has had the most impact in terms of research, methodology conceptual contribution, or transfer to practice over the past decade(s).  
 The EDBT ToT award for 2015 will be presented during the EDBT/ICDT 2015 Joint Conference, March 23-27, in Brussels, Belgium ( http://www.edbticdt2015.be/  ).  
 The EDBT 2015 Test of Time Award committee was formed by Martin Kersten (CWI, The Netherlands), Guido Moerkotte (Uni Mannheim, Germany), Christoph Koch (EPFL, Switzerland), all members of the EDBT 2015 PC and chaired by Gustavo Alonso, the EDBT 2015 PC chair.  
 The committee was charged with selecting a paper or a small number of papers from the proceedings of the following 4 editions: EDBT’88 - Venice, EDBT’90 - Venice, EDBT’92 - Vienna, EDBT’94 - Cambridge. After careful consideration, the committee has decided to select the following paper, as the EDBT ToT Award winner for 2015:  
 Ralf Hartmut Güting   
  Geo-Relational Algebra: A Model and Query Language for Geometric Database Systems   
  EDBT 1988, pp. 506-527 ( electronic edition  )   
 The paper addresses the user’s conceptual model of a database system for geometric data. It proposes to extend relational database management systems by integrating geometry at all levels: At the conceptual level, relational algebra is extended to include geometric data types and operators. At the implementation level, the wealth of algorithms and data structures for geometric problems developed in the past decade in the field of Computational Geometry is exploited. The paper starts from a view of relational algebra as a many-sorted algebra which allows to easily embed geometric data types and operators. A concrete algebra for two-dimensional applications is developed. It can be used as a highly expressive retrieval and data manipulation language for geometric as well as standard data. Also, geo-relational database systems and their implementation strategy are discussed.  
 The committee members unanimously agreed that this paper clearly stands out in terms of relevance, impact, and influence in databases. Of all the papers considered, this is the one that had had the most and longest lasting impact with results that are still relevant today and whose influence can be traced to many real systems and a significant amount of follow up work.  
 The paper pioneered an important application area well before it became mainstream and did it in a systematic and clean way that has been very influential in both research and practice. Modern commercial systems all support geographic data types that are nowadays used in a wide range of applications and use cases (maps locations based services, geographic information systems, mobility etc.).  
 The selection committee also appreciated very much the cleanliness completeness, insights, formalism, and systematic treatment of the problem as well as the approach followed by the author in selecting and solving a research problem.  
   
 Close    

 x   Test of Time Award 2016  
   
 In 2014, EDBT began awarding the EDBT test-of-time (ToT) award, with the goal of recognizing one paper, or a small number of papers presented at EDBT earlier and that have best met the “test of time”, i.e. that has had the most impact in terms of research, methodology conceptual contribution, or transfer to practice over the past decade(s).  
 The EDBT ToT award for 2016 will be presented during the EDBT/ICDT 2016 Joint Conference, March 15-18, 2016 - Bordeaux, France ( http://edbticdt2016.labri.fr/  ).  
 The EDBT 2016 Test of Time Award committee was formed by Sihem Amer-Yahia, CNRS, Laboratoire d"Informatique de Grenoble, France, Yannis Ioannidis, University of Athens, Greece, and Christian S. Jensen, Aalborg University, Denmark all PC chairs of former EDBT conferences including EDBT 2006.  
 The committee was asked to select a paper or a small number of papers from the EDBT 2006 proceedings that has had the most impact in terms of research, methodology, conceptual contribution, or transfer to practice over the past decade. After thorough consideration, the committee came up with some recommendation.  
 After careful consideration, the committee and the EDBT executive board have decided to select the following paper as the EDBT ToT Award winner for 2016:  
 Dr. Fusheng Wang, Shaorong Liu, Peiya Liu, Yijian Bai   
  Bridging Physical and Virtual Worlds: Complex Event Processing for RFID Data Streams   
  EDBT 2006, pp. 588-607 ( electronic edition  )   
 The paper proposes an event-oriented approach to the processing of RFID data which makes it possible to automate the translation of RFID based application semantics through complex event detection. In particular, it demonstrates the ability to process complex events by capturing temporal constraints in an algebra. The resulting declarative event-based approach is shown to simplify RFID data processing and is shown to be scalable. The paper pioneers declarative event-based RFID processing. The simplicity and expressiveness of the proposed framework are admirable. For example, the framework makes it possible to express object tracking on historical data as well as to formulate real-time monitoring.  
 The committee and the EDBT executive board find that this paper stands out in terms of relevance, impact, and influence in databases. It has had substantial impact. In particular, it has impacted real systems, and the engine it proposes has been integrated into Siemens RFID Middleware. It is also the most cited EDBT 2006 paper, has spurred a significant amount of follow-up work, and remains relevant today.  
   
 Close    

 x   Test of Time Award 2017  
   
 In 2014, the Extended Database Technology conference (EDBT) began awarding the EDBT test-of-time (ToT) award, with the goal of recognising papers presented at EDBT Conferences that have had the most impact in terms of research, methodology, conceptual contribution, or transfer to practice.  
 This year, covering the conferences from 1996 to 2002, the award has been given to:  
  
 Ramakrishnan Srikant, Rakesh Agrawal   
  Mining Sequential Patterns: Generalizations and Performance Improvements   
  EDBT 1996, pp. 3-17 ( electronic edition  )   
  
 This paper has made substantial contributions to data mining, and has had great influence on the work of others, as reflected by over 2900 citations on Google Scholar.  
 The paper formalizes a new variant of the problem of mining sequential  patterns and develops and implements GSP, an algorithm to solve this problem. This paper extends the definition of sequence mining that was introduced by the same authors in a previous publication: Mining Sequential Patterns. ICDE 1995. The goal is to discover all sequential patterns with a user-specified minimum support from a database of sequences, where each sequence is a list of transactions ordered by transaction-time, and each transaction is a set of items. The proposed extensions are:  
 Time constraints: the authors generalised their previous definition of sequential patterns to admit max-gap and min-gap time constraints between adjacent elements of a sequential pattern. 
  Sliding windows: the authors relaxed the restriction that all the items in an element of a sequential pattern must come from the same transaction, and allowed a user-specified window-size within which the items can be present. 
  Taxonomies: the sequential patterns may include items across different levels of a taxonomy. 
  GSP guarantees that all rules that have a user-specified minimum support. It is shown to be much faster than the AprioriAll algorithm in the previous publication (on both synthetic and real data). GSP has been implemented as part of the Quest data mining prototype at IBM Research, and is incorporated in the IBM data mining product.  
 The EDBT 2017 Test of Time Award Committee consisted of Peter Triantafillou, Gustavo Alonso, Sihem Amer-Yahia, Ralf Hartmut Güting and Volker Markl.  
 The EDBT ToT award for 2017 will be presented during the EDBT/ICDT 2017 Joint Conference, March 21-24, in Venice, Italy ( http://edbticdt2017.unive.it/  ).  
   
 Close    

 x   Test of Time Award 2018  
   
 Since 2014, the Extended Database Technology (EDBT) Conference awards the EDBT test-of-time award, with the goal of recognizing papers presented at EDBT Conferences that have had the most impact in terms of research, methodology, conceptual contribution, or transfer to practice.  
 This year the award has been given to a paper from the EDBT 2008 Conference in Nantes, France. The award was bestowed upon the paper:  
  
 Koustuv Dasgupta, Rahul Singh, Balaji Viswanathan, Dipanjan Chakraborty, Sougata Mukherjea, Amit A. Nanavati, Anupam Josi   
  Social ties and their relevance to churn in mobile telecom networks   
  EDBT 2008, pp. 668-677 ( electronic edition  )   
  
 This industry track paper reports on an analysis of mobile telecoms data, with a view to predicting which customers will leave. The analysis involves commercial mobile telephony data, in which nodes are customers and edges represent calls. The hypothesis tested is that it is possible to predict who will leave a network based on earlier departures among their connections. The main technique investigated is the use of spreading activation, to predict the heat of nodes based on the heat of connected notes. It is shown how the approach based on connections is more effective than classification techniques based on other properties of the nodes. As a result, the paper provides early and compelling experience on the combination an important real problem (churn in mobile telecom networks) with a powerful technique (social ties) and applies it on large real data (telecom operator network over 4 months). The approach has influenced many subsequent studies, for the same problem, but also for analyses involving different types of network and different hypotheses. Social network analysis continues as an important and active area ten years later, and this paper continues to be widely cited.  
 The EDBT 2018 Test-of-Time Award Committee consisted of Michael Böhlen, Divesh Srivastava and Norman Paton.  
 The EDBT Test-of-Time award for 2018 will be presented during the EDBT/ICDT 2018 Conference, March 26-29, in Vienna, Austria ( http://edbticdt2018.at  ).  
   
 Close    

 x   Test of Time Award 2019  
   
 Established in 2014, the Test-of-Time Award awarded by the Extended Database Technology (EDBT) Confer- ence recognizes papers presented at EDBT Conferences that have had the most impact in terms of research, methodology, conceptual contribution, or transfer to practice over the past ten years.  
 The 2019 Test-of-Time Award committee was formed by Laura Haas (University of Massachusetts, USA), Alon Halevy, and Melanie Herschel, the EDBT 2019 PC chair. The committee was charged with selecting a paper from the EDBT 2009 Proceedings.  
 After careful consideration, the Test-of-Time Award committee decided for the following paper from the 2009 EDBT Conference held in Saint Petersburg, Russia to receive the award:  
  
 Ryan Johnson, Ippokratis Pandis, Nikos Hardavellas, Anastasia Ailamaki, Babak Falsafi   
  Shore-MT: a scalable storage manager for the multicore era   
  EDBT 2009, pp. 24–35 ( electronic edition  )   
  
 The committee members agreed that this paper clearly stands out in terms of methodology, impact, and influ- ence. It has catalyzed and enabled substantial follow-up research and has demonstrated its high relevance to industry.  
 Abstract:   
  Historically, database engines focused on the ability to efficiently overlap many requests over a small number processor cores, with I/O latencies and scalability as the main design driver. However, the advent of increas- ingly multicore hardware circa 2000 brought new challenges because concurrent transactions begin to stress the limits of the storage manager’s thread scalability by accessing its internal structures simultaneously and in large numbers. This EDBT 2009 paper shows the results of experiments running benchmarks on four (then and still) popular open-source storage managers (Shore, BerkeleyDB, MySQL, and PostgreSQL) on a multi- core machine. The results show that all systems suffer from scalability bottlenecks at the storage engine level. From that research emerged Shore-MT, an open-source multithreaded and highly scalable storage manager, built with Shore as a base. We learned that designers should favor scalability over single-thread performance, and we identified several other key principles for architecting scalable storage engines.  
 Ten years later, Shore-MT work has concluded, although the system still serves as a research platform in the space. Meanwhile, research on transaction processing scalability continues to mature, the move to main- memory transaction processing and their higher TPS increased the need for scalable storage managers, while the popular open-source systems, such as MySQL and PostgreSQL, significantly improved their scalability. In particular, a significant amount of research and industrial developments in the ten years since the Shore-MT paper focused on improving the scalability of individual components of a storage manager, such as latches, the logging subsystem and access methods. This research was partly carried out by our research group as follow- on work, but other research groups and database vendors have made important contributions as well. Another significant amount of effort has focused on scalable concurrency control protocols, again both within and outside our research group. The knowledge that we have gained from building Shore-MT has been invaluable in maintaining scalability in this new, multi-dimensional ecosystem.  
 The EDBT Test-of-Time award for 2019 will be presented during the EDBT/ICDT 2019 Conference ( http://edbticdt2019.inesc-id.pt/  ) as part of the Awards session on Wednesday, March 27, 2019, by Anastasia Ailamaki (EPFL, Switzerland).  
   
 Close    

 x   Test of Time Award 2020  
   
 Established in 2014, the Test-of-Time Award awarded by the Extended Database Technology (EDBT) Confer- ence recognizes papers presented at EDBT Conferences that have had the most impact in terms of research, methodology, conceptual contribution, or transfer to practice over the past ten years.  
 The 2020 Test-of-Time Award committee was formed by Anastasia Ailamaki (Ecole Polytechnique Fédérale de Lausanne (EPFL), Switzerland), Tamer Oszu (University of Waterloo, Canada), and Angela Bonifati (Lyon 1 University, France), the EDBT 2020 PC chair. The committee was charged with selecting a paper from the EDBT 2010 Proceedings.  
 After careful consideration, the Test-of-Time Award committee decided for the following paper from the 2010 EDBT Conference held in Lausanne, Switzerland to receive the award:  
  
 Foto Afrati and Jeff Ullman   
  Optimizing joins in a map-reduce environment   
  EDBT 2010, pp. 99-110 ( electronic edition  )   
  
 Abstract:   
  Implementations of map-reduce are being used to perform many operations on very large data. We examine strategies for joining several relations in the map-reduce environment. Our new approach begins by identifying the "map-key," the set of attributes that identify the Reduce process to which a Map process must send a particular tuple. Each attribute of the map-key gets a "share," which is the number of buckets into which its values are hashed, to form a component of the identifier of a Reduce process. Relations have their tuples replicated in limited fashion, the degree of replication depending on the shares for those map-key attributes that are missing from their schema. We study the problem of optimizing the shares, given a fixed number of Reduce processes. An algorithm for detecting and fixing problems where an attribute is "mistakenly" included in the map-key is given. Then, we consider two important special cases: chain joins and star joins. In each case we are able to determine the map-key and determine the shares that yield the least replication. While the method we propose is not always superior to the conventional way of using map-reduce to implement joins, there are some important cases involving large-scale data where our method wins, including: (1) analytic queries in which a very large fact table is joined with smaller dimension tables, and (2) queries involving paths through graphs with high out-degree, such as the Web or a social network.  
 This paper presented optimization strategies for executing multi-way joins in a map-reduce environment. It focused on large-scale data and provided algorithms to choose the number of map-keys and shares in order to minimize the communication cost among the map and reduce processes. The committee members agreed that this paper clearly pioneered the field of join processing in map-reduce environments. It has triggered substantial follow-up research and impact on big data processing in parallel and distributed architectures.  
 The EDBT Test-of-Time award for 2020 will be presented during the EDBT/ICDT 2020 Conference ( https://diku-dk.github.io/edbticdt2020/  ) as part of the Awards session on Tuesdays, March 31, 2020.  
   
 Close    

 x   Test of Time Award 2021  
   
 Established in 2014, the Test-of-Time Award of the Extended Database Technology (EDBT) Conference recognizes papers presented at the EDBT Conferences that have had the most impact in terms of research, methodology, conceptual contribution, or transfer to practice over the past ten years.  
 The EDBT 2021 Test of Time Award committee was formed by Barbara Catania, University of Genova, Italy, Gautam Das, University of Texas at Arlington, USA, Beng Chin OOI, National University of Singapore, Singapore, Themis Palpanas, University of Paris, France, and Yufei Tao, Chinese University of Hong Kong, China.  
 The 2021 Test-of-Time Award committee looked and evaluated the impact of the papers in the EDBT 2011 proceedings, and selected:  
  
 Zhixian Yan, Dipanjan Chakraborty, Christine Parent, Stefano Spaccapietra, and Karl Aberer   
  SeMiTri: a framework for semantic annotation of heterogeneous trajectories   
  EDBT 2011, pp. 259-270 ( electronic edition  )   
  
 because it is one of the earliest papers to propose a general method for enriching moving object trajectories with semantics useful for supporting location-based services, which have been and still are in high demand across several application sectors. Since its publication, SeMiTri has generated significant interest, and follow-up work on semantic processing of mobile data and trajectories.  
 Abstract:   
  GPS devices allow recording the movement track of the moving object they are attached to. This data typically consists of a stream of spatio-temporal (x,y,t) points. For application purposes the stream is transformed into finite subsequences called trajectories. Existing knowledge extraction algorithms defined for trajectories mainly assume a specific context (e.g. vehicle movements) or analyze specific parts of a trajectory (e.g. stops), in association with data from chosen geographic sources (e.g. points-of-interest, road networks). We investigate a more comprehensive semantic annotation framework that allows enriching trajectories with any kind of semantic data provided by multiple 3rd party sources.  
  This paper presents SeMiTri - the framework that enables annotating trajectories for any kind of moving objects. Doing so, the application can benefit from a "semantic trajectory" representation of the physical movement. The framework and its algorithms have been designed to work on trajectories with varying data quality and different structures, with the objective of covering abstraction requirements of a wide range of applications. Performance of SeMiTri has been evaluated using many GPS datasets from multiple sources - including both fast moving objects (e.g. cars, trucks) and people's trajectories (e.g. with smartphones). These two kinds of experiments are reported in this paper.  
 The EDBT Test-of-Time award for 2021 will be presented during the EDBT/ICDT 2021 Conference ( https://edbticdt2021.cs.ucy.ac.cy/  ) in Nicosia, Cyprus, as part of the Awards session on March 24, 2021.  
   
 Close    

 x   Test of Time Award 2022  
   
 Established in 2014, the Test-of-Time Award of the Extended Database Technology (EDBT) Conference recognizes papers presented at the EDBT Conferences that have had the most impact in terms of research, methodology, conceptual contribution, or transfer to practice over the past ten years.  
  
 The 2022 Test-of-Time Award committee looked and evaluated the impact of the papers in the EDBT 2012 proceedings, and selected:  
  
 Chi Zhang, Feifei Li, Jeffrey Jestes   
  Efficient parallel kNN joins for large data in MapReduce   
  EDBT 2012, pp. 38-49 ( electronic edition  )   
  
 The EDBT 2022 Test of Time Award committee was formed by Bill Howe, University of Washington, USA Julia Stoyanovich, New York University, USA Jens Teubner, TU Dortmund, Germany Xiaofang Zhou, Hong Kong University of Science and Technology, Hong Kong.  
 Abstract:   
  In data mining applications and spatial and multimedia databases, a useful tool is the kNN join, which is to produce the k nearest neighbors (NN), from a dataset S, of every point in a dataset R. Since it involves both the join and the NN search, performing kNN joins efficiently is a challenging task. Meanwhile, applications continue to witness a quick (exponential in some cases) increase in the amount of data to be processed. A popular model nowadays for large-scale data processing is the shared-nothing cluster on a number of commodity machines using MapReduce [6]. Hence, how to execute kNN joins efficiently on large data that are stored in a MapReduce cluster is an intriguing problem that meets many practical needs. This work proposes novel (exact and approximate) algorithms in MapReduce to perform efficient parallel kNN joins on large data. We demonstrate our ideas using Hadoop. Extensive experiments in large real and syn- thetic datasets, with tens or hundreds of millions of records in both R and S and up to 30 dimensions, have demonstrated the efficiency, effectiveness, and scalability of our methods.  
 The EDBT Test-of-Time award for 2022 will be presented during the EDBT/ICDT 2022 Conference ( https://conferences.inf.ed.ac.uk/edbticdt2022/  ) in Edinburg, UK, as part of the Awards session on March 31, 2022.  
   
 Close    

 x   Test of Time Award 2023  
   
 Established in 2014, the Test-of-Time Award of the Extended Database Technology (EDBT) Conference recognizes papers presented at the EDBT Conferences that have had the most impact in terms of research, methodology, conceptual contribution, or transfer to practice over the past ten years.  
  
 The 2023 Test-of-Time Award committee looked and evaluated the impact of the papers in the EDBT 2013 proceedings, and selected:  
  
 Mauricio A. Hernández, Ryan Wisnesky, Rajasekar Krishnamurthy, Georgia Koutrika, and Lucian Popa   
  HIL: A High-Level Scripting Language for Entity Integration   
  EDBT 2013, pp. 549-560 ( electronic edition  )   
  
 The EDBT 2023 Test of Time Award committee was formed by Sihem Amer-Yahia Alon Halevy Divesh Srivastava.  
 Abstract:   
  We introduce HIL, a high-level scripting language for entity resolution and integration. HIL aims at providing the core logic for complex data processing flows that aggregate facts from large collections of structured or unstructured data into clean, unified entities. Such flows typically include many stages of processing that start from the outcome of information extraction and continue with entity resolution, mapping and fusion. A HIL program captures the overall integration flow through a combination of SQL-like rules that link, map, fuse and aggregate entities. A salient feature of HIL is the use of logical indexes in its data model to facilitate the modular construction and aggregation of complex entities. Another feature is the presence of a flexible, open type system that allows HIL to handle input data that is irregular, sparse or partially known. As a result, HIL can accurately express complex integration tasks while still being high-level and focused on the logical entities (rather than the physical operations). Compilation algorithms translate the HIL specification into efficient run-time queries that can execute in parallel on Hadoop. We show how our framework is applied to real-world integration of entities in the financial domain, based on public filings archived by the U.S. Securities and Exchange Commission (SEC). Furthermore, we apply HIL on a larger-scale scenario that performs fusion of data from hundreds of millions of Twitter messages into tens of millions of structured entities  
 The EDBT Test-of-Time award for 2023 will be presented during the EDBT/ICDT 2023 Conference ( http://edbticdt2023.cs.uoi.gr/  ) in Ioannina, Greece, as part of the Awards session on March 30, 2023.  
   
 Close    

 x   Test of Time Award 2024  
   
 Established in 2014, the Test-of-Time Award of the Extended Database Technology (EDBT) Conference recognizes papers presented at the EDBT Conferences that have had the most impact in terms of research, methodology, conceptual contribution, or transfer to practice over the past ten years.  
  
 The 2024 Test-of-Time Award committee looked and evaluated the impact of the papers in the EDBT 2014 proceedings, and selected:  
  
 Renê R. Veloso, Loïc Cerf, Wagner Meira Jr, and Mohammed J. Zaki   
  Reachability Queries in Very Large Graphs: A Fast Refined Online Search Approach   
  EDBT 2014, pp. 511-522 ( electronic edition  )   
  
 The EDBT 2024 Test of Time Award committee was formed by Minos Garofalakis Davide Martinenghi Baihua Zheng.  
 Abstract:   
  A key problem in many graph-based applications is the need to know, given a directed graph G and two vertices u, v ∈ G whether there is a path between u and v, i. e., if u reaches v. This problem is particularly challenging in the case of very large real-world graphs. A common approach is the pre- processing of the graphs, in order to produce an efficient index structure, which allows fast access to the reachability information of the vertices. However, the majority of existing methods can not handle very large graphs. We propose in this paper, a novel indexing method called FELINE (Fast rEfined onLINE search), which is inspired by Dominance Graph Drawing. FELINE creates an index from the graph representation in a two-dimensional plane, which provides reachability information in constant time for a significant portion of queries. Experiments demonstrate the efficiency of FELINE compared to state-of-the-art approaches  
 The EDBT Test-of-Time award for 2024 will be presented during the EDBT/ICDT 2024 Conference ( https://dastlab.github.io/edbticdt2024/  ) in Paestum, Italy, as part of the Awards session on March 27, 2024.  
   
 Close    

  Built with  , BaseX  and Bootstrap  on 2024-05-12T12:11:36.019+02:00 · Imprint  · DBIS, University of Konstanz

68. ESWC_3 conference:
Skip to main content  Skip to navigation  Skip to footer    
 de  en    
   
   Institute for Advanced Simulation (IAS)  
  Materials Data Science and Informatics (IAS-9)  

 News and Events | News 
   
   Events 
    
 People 
    
 Research | Materials Theory, Modeling and Simulation 
   
   Data Analysis and Machine Learning 
   
   Concepts and Tools for Research Data Management 
   
   Projects and Collaborations 
   
   Publications 
    
 Teaching | Introduction to Data Mining and Machine Learning 
   
   Materials Data Science and Informatics 
   
   Micro- and Nanomechanics for Simulation Science (old: From Molecular to Continuum Physics I) 
   
   Application of Neural Networks and Machine Learning in Computational Material Modeling / Simulation 
    
 Career 
    
 Contact 

     /   
 News and Events  /   
 Events  /   
 IAS-9 @ Extended Semantic Web Conference (ESWC 2023)   

 IAS-9 @ Extended Semantic Web Conference (ESWC 2023)  
 The Extended Semantic Web Conference is a major venue for discussing the latest scientific results and technology innovations around semantic technologies. Building on its past success, ESWC is seeking to broaden its focus to span other relevant related research areas in which Web semantics plays an important role.  
 Start   
 28th May 2023 06:00 AM    
   
 End   
 1st June 2023 14:00 PM    

 The goal of the Semantic Web is to create a Web of knowledge and services in which the semantics of content is made explicit and content is linked to both other content and services allowing novel applications to combine content from heterogeneous sites in unforeseen ways and support enhanced matching between users needs and content. This network of knowledge-based functionality will weave together a large network of human knowledge, and make this knowledge machine-processable to support intelligent behaviour by machines. Creating such an interlinked Web of knowledge which spans unstructured text, structured data as well as multimedia content and services requires the collaboration of many disciplines, including but not limited to: Artificial Intelligence, Natural Language Processing, Databases and Information Systems, Information Retrieval, Machine Learning, Multimedia, Distributed Systems, Social Networks, Web Engineering, and Web Science. These complementarities are reflected in the outline of the technical program of the ESWC 2023  . ESWC 2023 will present the latest results in research, technologies and applications in its field. Besides the technical program organized over numerous tracks, the conference will feature a workshop and tutorial program, system descriptions and demos, a posters exhibition and a doctoral symposium.  
 Dr. Said Fathalla will be presenting "An Upper Ontology for Modern Science Branches and Related Entities."  
     Save to calendar (ICS)    
   
 Last Modified: 18.11.2024   

     print    
    to the top     

 Forschungszentrum Jülich GmbH  
 Wilhelm-Johnen-Straße  52428 Jülich      
 02461 61-0    
       
 02461 61-8100    
     
 Directions    

 Jülich News  
 The monthly update from Forschungszentrum Jülich  

 © Forschungszentrum Jülich  Legal Notice 
  Data Protection 
  Accessibility

69. EMMSAD_3 conference:
Skip to main navigation 
  Skip to search 
  Skip to main content 
   
 Open Universiteit research portal Home      
   
 Home 
  Profiles 
  Research units 
  Projects 
  Research output 
  Datasets 
  Prizes 
  Activities 
  Press/Media 
  Student theses 
   
 Search by expertise, name or affiliation     

 28th International working conference on Exploring Modeling Methods for Systems Analysis and Development  
 Roelens, B. | (Member of program committee) 
    
 Department of Information Science 
  Research Program Creating, Analyzing and Managing high-quality Information (CAMINO) 
    
 Activity :   Attending or organising an event types ›   Organising an event  ›  Academic   

 Period | 12 Jun 2023  → 13 Jun 2023 
 Event type | Conference 
 Conference number | 28 
 Location | Zaragoza, Spain Show on map 

 Documents & Links  
 https://www.emmsad.org/ 
  https://www.emmsad.org/team/program-committee 

   X 

 Powered by Pure  , Scopus  & Elsevier Fingerprint Engine™   
 All content on this site: Copyright © 2024 Elsevier B.V.  or its licensors and contributors. All rights are reserved, including those for text and data mining, AI training, and similar technologies. For all open access content, the Creative Commons licensing terms apply  
 We use cookies to help provide and enhance our service and tailor content. By continuing you agree to the use of cookies   
   
 Log in to Pure   

 Open Universiteit research portal data protection policy   
 About web accessibility   

 Report vulnerability   
   
 Contact us

70. EDBT_1 conference:
Advances in Database Technology - Volume 26  
  Proceedings 26 th  International Conference on Extending Database Technology ( EDBT 2023 )  
  Ioannina, Greece, March 28 - March 31   
  
 Series ISSN: 2367-2005   
 Number 1 (July 30, 2022)  
 Original publisher:  OpenProceedings.org, ISBN: 978-3-89318-088-2, Electronic Edition    
 Research Track  
     A simplified Architecture for Fast, Adaptive Compilation and Execution of SQL Queries   Immanuel Haffner, Jens Dittrich pp. 1–13   
   
     Efficient Maintenance of Agree-Sets Against Dynamic Datasets   Khalid Belhajjame pp. 14–26   
   
     Joint Source and Schema Evolution: Insights from a Study of 195 FOSS Projects   Panos Vassiliadis, Fation Shehaj, George Kalampokis, Apostolos V. Zarras pp. 27–39   
   
     Blue Elephants Inspecting Pandas: Inspection and Execution of Machine Learning Pipelines in SQL   Maximilian E. Schüle, Luca Scalerandi, Alfons Kemper, Thomas Neumann pp. 40–52   
   
     Workload-Aware Query Recommendation Using Deep Learning   Eugenie Y. Lai, Zainab Zolaktaf, Mostafa Milani, Omar AlOmeir, Jianhao Cao, Rachel Pottinger pp. 53–65   
   
     Relational Memory: Native In-Memory Accesses on Rows and Columns   Shahin Roozkhosh, Denis Hoornaert, Ju Hyoung Mun, Tarikul Islam Papon, Ahmed Sanaullah, Ulrich Drepper, Renato Mancuso, Manos Athanassoulis pp. 66–79   
   
     Progressive Entity Resolution over Incremental Data   Leonardo Gazzarri, Melanie Herschel pp. 80–91   
   
     Supporting Complex Query Time Enrichment For Analytics   Dhrubajyoti Ghosh, Peeyush Gupta, Sharad Mehrotra, Shantanu Sharma pp. 92–104   
   
     Example-Driven Exploratory Analytics over Knowledge Graphs   Matteo Lissandrini, Katja Hose, Torben Bach Pedersen pp. 105–117   
   
     Predictive Price-Performance Optimization for Serverless Query Processing   Rathijit Sen, Abhishek Roy, Alekh Jindal pp. 118–130   
   
     bloomRF: On Performing Range-Queries in Bloom-Filters with Piecewise-Monotone Hash Functions and Prefix Hashing   Bernhard Mößner, Christian Riegger, Arthur Bernhardt, Ilia Petrov pp. 131–143   
   
     Spatial Structure-Aware Road Network Embedding via Graph Contrastive Learning   Yanchuan Chang, Egemen Tanin, Xin Cao, Jianzhong Qi pp. 144–156   
   
     Maliva: Using Machine Learning to Rewrite Visualization Queries Under Time Constraints   Qiushi Bai, Sadeem Alsudais, Chen Li, Shuang Zhao pp. 157–170   
   
     GAM Forest Explanation   Claudio Lucchese, Salvatore Orlando, Raffaele Perego, Alberto Veneri pp. 171–182   
   
     Multi-Dimensional Data Publishing With Local Differential Privacy   Gaoyuan Liu, Peng Tang, Chengyu Hu, Chongshi Jin, Shanqing Guo pp. 183–194   
   
     EGG-SynC: Exact GPU-parallelized Grid-based Clustering by Synchronization   Jakob Rødsgaard Jørgensen, Ira Assent pp. 195–207   
   
     KWIQ: Answering k-core Window Queries in Temporal Networks   Mahdihusain Momin, Raj Kamal, Shantwana Dixit, Sayan Ranu, Amitabha Bagchi pp. 208–220   
   
     GraphTempo: An aggregation framework for evolving graphs   Evangelia Tsoukanara, Georgia Koloniari, Evaggelia Pitoura pp. 221–233   
   
     FLIRT: A Fast Learned Index for Rolling Time frames   Guang Yang, Liang Liang, Ali Hadian, Thomas Heinis pp. 234–246   

 Experiments & Analysis Track  
     Multi-Task Processing in Vertex-Centric Graph Systems: Evaluations and Insights   Siqiang Luo, Zichen Zhu, Xiaokui Xiao, Yin Yang, Chunbo Li, Ben Kao pp. 247–259   
   
     Comprehensive Evaluation of Unrestricted Graph Alignment Algorithms   Konstantinos Skitsas, Karol Orłowski, Judith Hermanns, Davide Mottin, Panagiotis Karras pp. 260–272   

 Number 2 (November 02, 2022)  
 Original publisher:  OpenProceedings.org, ISBN: 978-3-89318-093-6, Electronic Edition    
 Research Track  
     Enhanced Featurization of Queries with Mixed Combinations of Predicates for ML-based Cardinality Estimation   Magnus Müller, Lucas Woltmann, Wolfgang Lehner pp. 273–284   
   
     Data Provenance for SHACL   Thomas Delva, Anastasia Dimou, Maxime Jakubowski, Jan Van den Bussche pp. 285–297   
   
     Streaming Weighted Sampling over Join Queries   Michael Shekelyan, Graham Cormode, Qingzhi Ma, Ali Mohammadi Shanghooshabad, Peter Triantafillou pp. 298–310   
   
     Exploration of Approaches for In-Database ML   Steffen Kläbe, Stefan Hagedorn, Kai-Uwe Sattler pp. 311–323   
   
     Patched Multi-Key Partitioning for Robust Query Performance   Steffen Kläbe, Kai-Uwe Sattler pp. 324–336   
   
     Integration of Skyline Queries into Spark SQL   Lukas Grasmann, Reinhard Pichler, Alexander Selzer pp. 337–350   
   
     Unsupervised Space Partitioning for Nearest Neighbor Search   Abrar Fahim, Mohammed Eunus Ali, Muhammad Aamir Cheema pp. 351–363   
   
     Recommending Unanimously Preferred Items to Groups   Karim Benouaret, Kian-Lee Tan pp. 364–377   
   
     Density-Based Geometry Compression for LiDAR Point Clouds   Xibo Sun, Qiong Luo pp. 378–390   
   
     Subset Approach to Efficient Skyline Computation   Dominique H. Li pp. 391–403   
   
     Interactive Set Discovery   Arif Hasnat, Davood Rafiei pp. 404–416   

 Vision Papers  
     Stitcher: Learned Workload Synthesis from Historical Performance Footprints   Chengcheng Wan, Yiwen Zhu, Joyce Cahoon, Wenjing Wang, Katherine Lin, Sean Liu, Raymond Truong, Neetu Singh, Alexandra M Ciortea, Konstantinos Karanasos, Subru Krishnan pp. 417–423   

 Experiments & Analysis Track  
     An Experimental Analysis of Quantile Sketches over Data Streams   Lasantha Fernando, Harsh Bindra, Khuzaima Daudjee pp. 424–436   
   
     Implementing and Evaluating E2LSH on Storage   Yu Nakanishi, Kazuhiro Hiwada, Yosuke Bando, Tomoya Suzuki, Hirotsugu Kajihara, Shintarou Sano, Tatsuro Endo, Tatsuo Shiozawa pp. 437–449   

 Number 3 (March 20, 2023)  
 Original publisher:  OpenProceedings.org, ISBN: 978-3-89318-092-9, Electronic Edition    
 Research Track  
     Detecting Stale Data in Wikipedia Infoboxes   Malte Barth, Tibor Bleidt, Martin Büßemeyer, Fabian Heseding, Niklas Köhnecke, Tobias Bleifuß, Leon Bornemann, Dmitri V. Kalashnikov, Felix Naumann, Divesh Srivastava pp. 450–456   
   
     Efficient Multi-Model Management   Nils Straßenburg, Dominic Kupfer, Julia Kowal, Tilmann Rabl pp. 457–463   
   
     Offset-value coding in database query processing   Goetz Graefe, Thanh D Do pp. 464–470   
   
     UniCache: Efficient Log Replication through Learning Workload Patterns   Harald Ng, Kun Wu, Paris Carbone pp. 471–477   
   
     A Formal Design Framework for Practical Property Graph Schema Languages   Nimo Beeren, George Fletcher pp. 478–484   
   
     Auditing for Spatial Fairness   Dimitris Sacharidis, Giorgos Giannopoulos, George Papastefanatos, Kostas Stefanidis pp. 485–491   
   
     Learned Accelerator Framework for Angular-Distance-Based High-Dimensional DBSCAN   Yifan Wang, Daisy Zhe Wang pp. 492–498   
   
     REIN: A Comprehensive Benchmark Framework for Data Cleaning Methods in ML Pipelines   Mohamed Abdelaal, Christian Hammacher, Harald Schöning pp. 499–511   
   
     Frequency Estimation of Evolving Data Under Local Differential Privacy   Héber H. Arcolezi, Carlos A Pinzón, Catuscia Palamidessi, Sébastien Gambs pp. 512–525   
   
     WedgeBlock: An Off-Chain Secure Logging Platform for Blockchain Applications   Abhishek A Singh, YINAN ZHOU, Mohammad Sadoghi, Sharad Mehrotra, Shantanu Sharma, Faisal Nawab pp. 526–539   
   
     SonicJoin: Fast, Robust and Worst-case Optimal   Ahmad Khazaie, Holger Pirk pp. 540–551   
   
     Learned Selection Strategy for Lightweight Integer Compression Algorithms   Lucas Woltmann, Patrick Damme, Claudio Hartmann, Dirk Habich, Wolfgang Lehner pp. 552–564   
   
     Detecting Robustness against MVRC for Transaction Programs with Predicate Reads   Brecht Vandevoort, Bas Ketsman, Christoph Koch, Frank Neven pp. 565–577   
   
     E2-NVM: A Memory-Aware Write Scheme to Improve Energy Efficiency and Write Endurance of NVMs using Variational Autoencoders   Saeed Kargar, Binbin Gu, Sangeetha Abdu Jyothi, Faisal Nawab pp. 578–590   
   
     Efficiently Archiving Photos under Storage Constraints   Susan B Davidson, Shay Gershtein, Tova Milo, Slava Novgorodov, May Shoshan pp. 591–603   
   
     Incremental Stream Query Merging   Ankit Chaudhary, Steffen Zeuch, Volker Markl, Jeyhun Karimov pp. 604–617   
   
     Desis: Efficient Window Aggregation in Decentralized Networks   Wang Yue, Lawrence Benson, Tilmann Rabl pp. 618–631   
   
     An Efficient Approach for Indoor Facility Location Selection   Yeasir Rayhan, Tanzima Hashem, Muhammad Aamir Cheema, Hua Lu, Mohammed Eunus Ali pp. 632–644   
   
     An Intrinsically Interpretable Entity Matching System   Andrea Baraldi, Francesco Del Buono, Francesco Guerra, Matteo Paganelli, Maurizio Vincini pp. 645–657   
   
     User Customizable and Robust Geo-Indistinguishability for Location Privacy   Primal Pappachan, Chenxi Qiu, Anna Cinzia Squicciarini, Vishnu Sharma Hunsur Manjunath pp. 658–670   
   
     FELIP: A local Differentially Private approach to frequency estimation on multidimensional datasets   José Serafim da Costa Filho, Javam C Machado pp. 671–683   
   
     TransEdge: Supporting Efficient Read Queries Across Untrusted Edge Nodes   Abhishek A Singh, Aasim Khan, Sharad Mehrotra, Faisal Nawab pp. 684–696   
   
     Wrapper Methods for Multi-Objective Feature Selection   Uchechukwu F Njoku, Besim Bilalli, Alberto Abelló, Gianluca Bontempi pp. 697–709   
   
     Evaluating Hybrid Graph Pattern Queries Using Runtime Index Graphs   Xiaoying Wu, Dimitri Theodoratos, Nikos Mamoulis, Michael Lan pp. 710–722   
   
     Fast and Efficient Update Handling for Graph H2TAP   Muhammad Attahir Jibril, Hani Al-Sayeh, Alexander Baumstark, Kai-Uwe Sattler pp. 723–736   
   
     Consent Management in Data Workflows: A Graph Problem   Dorota Filipczuk, Enrico H Gerding, George Konstantinidis pp. 737–748   

 Industrial & Applications Track  
     ExtremeEarth: Managing Water Availability for Crops Using Earth Observation and Machine Learning   Florian Appel, Heike Bach, Silke Migdall, Manolis Koubarakis, George Stamoulis, Dimitris Bilidas, Despina-Athanasia Pantazi, Lorenzo Bruzzone, Claudia Paris, Giulio Weikmann pp. 749–756   
   
     COVIDKG.ORG - a Web-scale COVID-19 Interactive, Trustworthy Knowledge Graph, Constructed and Interrogated for Bias using Deep-Learning   Bhimesh Kandibedala, Anna Pyayt, Nickolas Piraino, Chris Caballero, Michael Gubanov pp. 757–764   
   
     Adaptive Real-time Virtualization of Legacy ETL Pipelines in Cloud Data Warehouses   Ehab Abdelhamid, Nikos Tsikoudis, Michael Duller, Marc Sugiyama, Nicholas E. Marino, Florian M. Waas pp. 765–772   
   
     Smart Derivative Contracts in DatalogMTL   Andrea Colombo, Luigi Bellomarini, Stefano Ceri, Eleonora Laurenza pp. 773–781   
   
     Reasoning over Financial Scenarios with the Vadalog System   Teodoro Baldazzi, Luigi Bellomarini, Emanuel Sallinger pp. 782–791   
   
     On Handling Catastrophic Forgetting for Incremental Learning of Human Physical Activity on the Edge   Jingwei Zuo, George Arvanitakis, Hakim Hacid pp. 792–798   

 Demonstration Track  
     Understanding crowd energy consumption behaviors   Xiufeng Liu, Xu Cheng, Yanyang Yang, Huan Huo, Yongping Liu, Per Nielsen pp. 799–802   
   
     Describing and Assessing Cubes Through Intentional Analytics   Matteo Francia, Matteo Golfarelli, Stefano Rizzi pp. 803–806   
   
     RDF-Analytics: Interactive Analytics over RDF Knowledge Graphs   Maria-Evaggelia Papadaki, Yannis Tzitzikas pp. 807–810   
   
     Demonstrating Interactive SPARQL Formulation through Positive and Negative Examples and Feedback   Akritas Akritidis, Yannis Tzitzikas pp. 811–814   
   
     VOYAGER: Automatic Computation of Visual Complexity and Aesthetics of Graph Query Interfaces   Duy Pham, Sourav S Bhowmick pp. 815–818   
   
     Topio Marketplace: Search and Discovery of Geospatial Data   Andra Ionescu, Alexandra Alexandridou, Leonidas Ikonomou, Kyriakos Psarakis, Kostas Patroumpas, Georgios Chatzigeorgakidis, Dimitrios Skoutas, Spiros Athanasiou, Rihan Hai, Asterios Katsifodimos pp. 819–822   
   
     REQUIRED: A Tool to Relax Queries through Relaxed Functional Dependencies   Loredana Caruccio, Stefano Cirillo, Vincenzo Deufemia, Giuseppe Polese, Roberto Stanzione pp. 823–826   
   
     Tagger: A Tool for the Discovery of Tagged Unions in JSON Schema Extraction   Stefan Klessinger, Michael Fruth, Valentin Gittinger, Meike Klettke, Uta Störl, Stefanie Scherzinger pp. 827–830   
   
     MM-quecat: A Tool for Unified Querying of Multi-Model Data   Pavel Koupil, Daniel Crha, Irena Holubova pp. 831–834   
   
     Pushing Edge Computing one Step Further: Resilient and Privacy-Preserving Processing on Personal Devices   Ludovic Javet, Nicolas Anciaux, Luc Bouganim, Léo Lamoureux, Philippe Pucheral pp. 835–838   
   
     Tuning the Utility-Privacy Trade-Off in Trajectory Data   Maja Schneider, Peter Christen, Erhard Rahm, Jonathan Schneider, Lea Löffelmann pp. 839–842   
   
     TempoGRAPHer: A Tool for Aggregating and Exploring Evolving Graphs   Evangelia Tsoukanara, Georgia Koloniari, Evaggelia Pitoura pp. 843–846   

 Tutorial Track  
     New Trends in Time Series Anomaly Detection   Paul Boniol, John Paparrizos, Themis Palpanas pp. 847–850   
   
     Mining Structures from Massive Texts by Exploring the Power of Pre-trained Language Models   Yu Zhang, Yunyi Zhang, Jiawei Han pp. 851–854   
   
     Data Narration for the People: Challenges and Opportunities   Sihem Amer-Yahia, Patrick Marcel, Veronika Peralta pp. 855–858   

   Except where otherwise noted, content on this site is licensed under a Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License  .    

 Menu   
 Home 
  Contact 
  Code of Ethics 
  Scientific Advisory Board 
  Imprint 
  Current Publications   
 EDBT (2025) 
  EDBT (2024) 
  INOC (2024) 
  Previous Publications   
 26. EDBT (2023) 
  25. EDBT (2022) 
  24. EDBT (2021) 
  23. EDBT (2020) 
  22. EDBT (2019) 
  21. EDBT (2018) 
  20. EDBT (2017) 
  19. EDBT (2016) 
  18. EDBT (2015) 
  17. EDBT (2014) 
  16. EDBT (2013) 
  15. EDBT (2012) 
  14. EDBT (2011) 
  13. EDBT (2010) 
  12. EDBT (2009) 
  11. EDBT (2008) 
  10. EDBT (2006) 
  9. EDBT (2004) 
  8. EDBT (2002) 
  7. EDBT (2000) 
  6. EDBT (1998) 
  5. EDBT (1996) 
  4. EDBT (1994) 
  3. EDBT (1992) 
  2. EDBT (1990) 
  1. EDBT (1988) 
  17. ICDT (2014) 
  16. ICDT (2013) 
  15. ICDT (2012) 
  14. ICDT (2011) 
  13. ICDT (2010) 
  12. ICDT (2009) 
  11. ICDT (2007) 
  10. ICDT (2005) 
  9. ICDT (2003) 
  8. ICDT (2001) 
  7. ICDT (1999) 
  6. ICDT (1997) 
  5. ICDT (1995) 
  4. ICDT (1992) 
  3. ICDT (1990) 
  2. ICDT (1988) 
  1. ICDT (1986) 
  9. INOC (2022) 
  9. INOC (2019) 

 Related links   
 EDBT 
  ICDT 
  University of Konstanz 
  dblp 
  Open Access 
  Creative Commons

71. ETRA_0 conference:
❮  ❯    

 University of Tübingen (Hybrid) - May 30-June 2, 2023  

 The 2023 ACM Symposium of Eye Tracking Research & Applications (ETRA) will be a fully hybrid conference held in Tübingen, Germany, and online from May 30 to June 2, 2023. The aim of ETRA is to bring together researchers and practitioners from across fields with the common goal of advancing eye tracking research. Join us in Tübingen or attend ETRA online to see the newest cutting-edge eye-tracking research, participate in co-located workshops, and contribute to exciting discussions about the current controversies and the future potential of eye tracking.   
 General Chairs  
   
 Enkelejda Kasneci   
 Technical University Munich, Germany  
    
 Frederick Shic   
 University of Washington, USA  

 Important Dates  
 (Time Zone AoE/Anywhere on Earth)   
  
 Full Paper | Short Paper | Workshop | Tutorials | Late-Breaking Work 
 Abstract submission (mandatory) | Oct 28, 2022 | Jan 9, 2023 | - | - | - 
 Paper submission | Nov 4, 2022 | Jan 16, 2023 | Dec 5, 2022 | Dec 20, 2022 | Mar 15, 2023 
 First round reviews and notifications | Jan 12, 2023 | Mar 13, 2023 | Dec 9, 2022 | - | Mar 25, 2023 
 Revisions due | Feb 23, 2023 | - | - | - | - 
 Second round reviews and notifications | Mar 18, 2023 | - | - | - | - 
 Camera-ready deadline | Apr 5, 2023 | Apr 5, 2023 | Dec 15th, 2022 | - | Apr 5, 2023 
 Conference date | May 29 - June 3, 2023 |

72. FPL_0 conference:
Search this site   

 Skip to main content     

 Skip to navigation     

   Home 
  Call for Contributions | Regular Track and Journal Track 
  PhD Forum and Demo Night 
  FPL Events 
  Workshops and Tutorials 
  Author Resources | Submission Information 
  Program | Agenda 
  Keynotes 
  Workshops and Tutorials 
  Best Paper Awards 
  Social Events 
  Attend | Venue 
  Registration 
  Visa Application Support 
  Sponsorship | Sponsors 
  Call for Sponsorships 
  Committees | Organizing Committee 
  Program Committee 
  Steering Committee 
  Prior Editions 

 Home 
  Call for Contributions | Regular Track and Journal Track 
  PhD Forum and Demo Night 
  FPL Events 
  Workshops and Tutorials 
  Author Resources | Submission Information 
  Program | Agenda 
  Keynotes 
  Workshops and Tutorials 
  Best Paper Awards 
  Social Events 
  Attend | Venue 
  Registration 
  Visa Application Support 
  Sponsorship | Sponsors 
  Call for Sponsorships 
  Committees | Organizing Committee 
  Program Committee 
  Steering Committee 
  Prior Editions 
  More | Home 
  Call for Contributions | Regular Track and Journal Track 
  PhD Forum and Demo Night 
  FPL Events 
  Workshops and Tutorials 
  Author Resources | Submission Information 
  Program | Agenda 
  Keynotes 
  Workshops and Tutorials 
  Best Paper Awards 
  Social Events 
  Attend | Venue 
  Registration 
  Visa Application Support 
  Sponsorship | Sponsors 
  Call for Sponsorships 
  Committees | Organizing Committee 
  Program Committee 
  Steering Committee 
  Prior Editions 

 FPL 2023   
 33rd International Conference on Field-Programmable Logic and Applications   
  
  4 - 8  SEPTEMBER 2023   
 GOTHENBURG, SWEDEN   

 The International Conference on Field-Programmable Logic and Applications (FPL) was the first and remains the largest conference covering the rapidly growing area of field-programmable logic and reconfigurable computing. During the past 32 years, many of the advances in reconfigurable system architectures, applications, embedded processors, design automation methods and tools were first published in the proceedings of the FPL conference series. The conference objective is to bring together researchers and practitioners from both academia and industry and from around the world.   
 The 33rd edition of International Conference on Field-Programmable Logic and Applications (FPL 2023) will be held in Gothenburg  from 4th to 8th  September 2023. The 2023 edition of the conference is organized by Chalmers University of Technology, Gothenburg, Sweden.   

 Announcements      
  
 ➣  11   Jan  202  4    FPL 202  4  website is  online   !   
 ➣  20  Oct 2023    The  photos  from  FPL2023  are available  here   .   
 ➣  02   Oct  2023    The slides from the  Keynotes   are available  online  .   
 ➣  1  8  Sep 2023    The slides from the  Research Projects Event  are available  online   .   
 ➣  08  Sep 2023    Thank you all attendees for contributing to this amazing edition of #FPL2023. We hope you enjoyed the experience. See you in Torino for #FPL2024!  👋   
 ➣  08  Sep 2023    FPL Community Award    announced. Congratulations to  Stefan and Cong!   
 ➣  07   Sep  2023    Best paper awards    announced  . Congratulations to all the authors of the winning papers.   
 ➣  30  Aug 2023    Welcome letters send out to all attendees.  Free 3-day  transportation  pass  for the Conference attendees  can be  picked up at the registration desk. Read more   here   .   
 ➣  24  Aug 2023    Social Events   updated.   
 ➣  17  Aug 2023    Best paper  award nominees    announced    
   ➣  15   Aug  2023    Social links updated.  Follow us on  Twitter   and  LinkedIn   for updates.   
 ➣  11  Jul 2023    Keynotes   updated.   
 ➣  01   Jul  2023    Research Projects Event   updated.   
 ➣  27   Jun  2023    Workshops and Tutorials    updated.   
 ➣  23   Jun  2023    Early bird registration    d  eadline  EXTENDED  .   
 ➣  09   Jun  2023    The list of accepted  Workshops and Tutorials   updated  .   
 ➣  31  May 2023    Conference  Program   updated.   
 ➣  26  May 2023    Registration   for FPL2023 is OPEN!   
 ➣  26   May  202  3    Keynote Speakers   updated—more details to follow soon.   
 ➣  24   May  2023    Submission Deadline for  Contributions to the PhD Forum and Demo Night    EXTENDED  .   
 ➣  22   May  2023    Please note that the  workshops and tutorials are scheduled on the 4th and 5th Sep 2023, and the main conference is from the 6th to the 8th Sep 2023.   
 ➣  12 Apr  2023    Call for Participation to the FPL  Industrial  Event    updated.   
 ➣  06   Apr  2023    Call for  Contributions to the   PhD Forum and Demo Night    updated.   
 ➣  30  Mar 2023    Call for  Workshop and Tutorial Proposals    updated.   
 ➣  24   Mar  202  3    Call for Participation to the FPL Research Projects Event    updated.   
 ➣  10   Mar  2023    Abstract  and Paper Submission  Deadline for  Regular  Track  EXTENDED  .   
 ➣  14  Feb 2023    Submission Deadline for Journal Track  EXTENDED  .   
 ➣  07   Feb  202  3    Submission   site is now OPEN!   
 ➣  22   Dec  2022    Call for Papers   (Regular Track and Journal Track) updated.   
 ➣  20  Oct 2022    FPL 2023 website is online!               

 © 2022-2023 33rd  International Conference on Field-Programmable Logic and Applications    
   For site issues, contact  support   .    

 Google Sites   

 Report abuse   

 Page details   

 Page updated     
   
 Google Sites   
   
 Report abuse

73. FPL_1 conference:
The requested URL was rejected. Please consult with your administrator.  
   
  Your support ID is: < 8203162004106018259>  
   
  [Go Back]

74. ETRA_1 conference:
Home 
  Organization | Past ETRA 
  Steering Committee 
  Awards 
  Contact 
  Past ETRA 

 ETRA    
 ACM Symposium on Eye Tracking Research & Applications    

 ETRA 2025  
   
 ETRA 2025  , Tokyo, Japan.  
 Past ETRA  
   
 ETRA 2024 | . June 4-June 7, Glasgow, United Kingdom, ( | proceedings | ) 
  ETRA 2023 | . May 30-June 2, Tübingen, Germany, ( | proceedings | ) 
  ETRA 2022 | . June 8-11, Seattle, Washington, USA, ( | proceedings | , | photos | ) 
  ETRA 2021 | . May 24-27, Virtual Event, ( | proceedings | , | photos | , | Event Documentation by Gavindya Jayawardena | ) 
  ETRA 2020 | . Cancelled due to COVID-19 
  ETRA 2019 | , June 25-28, Denver, Colorado, USA, ( | proceedings | , photos) <-- coming soon 
  ETRA 2018 | , June 14-17, Warsaw, Poland, ( | proceedings | , | photos | ) 
  ETRA 2016 | , March 14-17, Charleston, South Carolina, USA, ( | proceedings | , | photos | ) 
  ETRA 2014 | , March 26-28, Safety Harbor, Florida, USA, ( | proceedings | , | photos | ) 
  ETRA 2012 | , March 28-30, Santa Barbara, California, USA, ( | proceedings | ) 
  ETRA 2010 | , March 22-24, Austin, Texas, USA, ( | proceedings | ) 
  ETRA 2008, March 26-28, Savannah, Georgia, USA, ( | proceedings | , | photos | ) 
  ETRA 2006, March 27-29, San Diego, California, USA, ( | proceedings | , | photos | ) 
  ETRA 2004, March 22-24, San Antonio, Texas, USA, ( | proceedings | , | photos | ) 
  ETRA 2002, March 25-27, New Orleans, Louisiana, USA, ( | proceedings | , | photos | ) 
  ETRA 2000, November 6-8, Palm Beach Gardens, Florida, USA, ( | proceedings | , | photos | ) 
  Steering Committee  

 Chair 
 Bonita Sharif   
  University of Nebraska - Lincoln, USA   
  bsharif@unl.edu 

 Members |  
 Andrew Duchowski   
  Clemson University, USA   
  duchowski@clemson.edu | Krzysztof Krejtz   
  SWPS University, Poland   
  kkrejtz@swps.edu.pl 
 Enkelejda Kasneci   
  Technical University Munich, Germany  
   enkelejda.kasneci@tum.de 

 Awards  
   
 2024  
  
 Best Paper  
 Deep Domain Adaptation: A Sim2Real Neural Approach for Improving Eye-Tracking Systems   
  Viet Dung Nguyen, Reynold Bailey, Gabriel J. Diaz, Chengyi Ma, Alexander Fix, Alexander Ororbia  
 Best Short Paper  
 Saccade Characteristics during Fusional Vergence Tests as a Function of Vergence Demand   
  Cristina Rovira-Gay, Clara Mestre, Marc Argilés, Jaume Pujol  
 Short Paper Honorable Mention  
 How Deep Is Your Gaze? Leveraging Distance in Image-Based Gaze Analysis   
  Maurice Koch, Nelusa Pathmanathan, Daniel Weiskopf, Kuno Kurzhal  
 Best Late Breaking Work  
 Exploring Eye Tracking as a Measure for Cognitive Load Detection in VR Locomotion   
  Hong Gao, Enkelejda Kasneci  
 Best Student Late Breaking Work  
 Eye-Tracking Data Quality: Towards a New Standard   
  Deborah Noemie Jakobi , Daniel G. Krakowczyk , Lena A. Jäger  
 COGAIN Best Paper  
 Between Wearable and Spatial Computing: Exploring Four Interaction Techniques at the Intersection of Smartwatches and Head-mounted Displays   
  Nuno Estalagem, Augusto Esteves  
 COGAIN Honourable Mention  
 A Functional Usability Analysis of Appearance-Based Gaze Tracking for Accessibility   
  Youn Soo Park, Roberto Manduchi  
 2023  
  
 Best Paper  
 A Unified Look at Cultural Heritage: Comparison of Aggregated Scanpaths over Architectural Artifacts   
  Krzysztof Krejtz, Patryk Szczeciński, Aneta Pawłowska, Daria Rutkowska-Siuda, Katarzyna Wisiecka, Piotr Milczarski, Artur Hłobaż, Andrew T. Duchowski, Izabela Krejtz  
 Honorable Mention for Full Paper  
 Classification of Alzheimer's Using Deep-Learning Methods on Webcam-Based Gaze Data   
  Anuj Harisinghani, Harshinee Sriram, Cristina Conati, Giuseppe Carenini, Thalia Field, Hyeju Jang, Gabriel Murray  
 Best Short Paper  
 Bridging the Gap: Gaze Events as Interpretable Concepts to Explain Deep Neural Sequence Models   
  Daniel Krakowczyk, Paul Prasse, David Reich, Sebastian Lapuschkin, Tobias Scheffer, Lena Jäger  
 Honorable Mention for Short Paper  
 The Salient360! Toolbox: Processing, Visualising and Comparing Gaze Data in 3D   
  Erwan David, Jesús Gutiérrez, Melissa Le-Hoa Vo, Antoine Coutrot, Matthieu Perreira da Silva, Patrick Le Callet  
 Best Late Breaking Work  
 The Tiny Eye Movement Transformer   
  Wolfgang Fuhl, Anne Herrmann-Werner, Kay Nieselt  
 Best Poster  
 Navigating Virtual Worlds: Examining Spatial Navigation Using a Graph Theoretical Analysis of Eye Tracking Data Recorded in Virtual Reality   
  Jasmin L. Walter, Vincent Schmidt, Sabine U. König, Peter König  
 COGAIN 2023 Best Paper  
 GazeCast: Using Mobile Devices to Allow Gaze-based Interaction on Public Displays   
  Omar Namnakani, Penpicha Sinrattanavong, Yasmeen Abdrabou, Andreas Bulling, Florian Alt, Mohamed Khamis  
 COGAIN Impact Award  
 A Fitts' Law Study of Click and Dwell Interaction by Gaze, Head and Mouse with a Head-Mounted Display   
  John Paulin Hansen, Vijay Rajanna, Scott MacKenzie, Per Bækgaard  
 2022  
  
 Service Awards:  
  
 Eye on the World Award – For Extraordinary Service to the ACM Symposium for Eye Tracking Research and Applications  
 Stephen Spencer  
 Friend of the Eye Award – In recognition of tremendous support at the 14th Annual ACM Symposium on Eye Tracking Research and Applications  
 Ashley Cozzi  
  Kelsey Dommer  
  Patrick Gateley  
  Grace Gungadee  
  Chelsey Hudson  
  Brittany Richey  
  Jenny Skytta  
 Beyond Scope Awards - In recognition of duties beyond expectations  
 Sarah Fakhoury  
  Ludwig Sidenmark  
  Shreshth Saxena  
  Vijay Rajanna  
  
 Best Paper  
 Pupillary Light Reflex Correction for Robust Pupillometry in Virtual Reality   
  Marie Eckert, Thomas Robotham, Emanuel A. P. Habets, Olli S. Rummukainen  
 Best Short Paper  
 A Holographic Single-Pixel Stereo Camera Eye-Tracking Sensor For Calibration-Free Eye-Tracking in Retinal Projection Augmented Reality Glasses   
  Johannes Meyer, Tobias Wilm, Reinhold Fiess, Thomas Schlebusch, Wilhelm Stork, Enkelejda Kasneci  
 Best Student Short Paper  
 Real-time Head-Based Deep-Learning Model for Gaze Probability Regions in Collaborative VR   
  Riccardo Bovo, Daniele Giunchi, Ludwig Sidenmark, Hans Gellersen, Enrico Costanza, Thomas Heinis  
 Best Technical Abstract  
 An Eye Opener on the Use of Machine Learning in Eye Movement Based Authentication   
  Siyuan Peng and Naser Al Madi  
 Best Paper at COGAIN  
 Attention of Many Observers Visualized by Eye Movements   
  Teresa Hirzle, Marian Sauter, Tobias Wagner, Susanne Hummel, Enrico Rukzio, Anke Huckauf  
 Best Doctoral Symposium Presentation  
 Introducing a Real-Time Advanced Eye Movements Analysis Pipeline   
  Gavindya Jayawardena  
 2021  
  
 Best Paper Award - Full Paper  
 HGaze Typing: Head-Gesture Assisted Gaze Typing   
  Wenxin Feng, Jiangnan Zou, Andrew Kurauchi, Carlos H. Morimoto, Margrit Betke  
 Best Paper Award - Short Paper  
 OpenNEEDS: A Dataset of Gaze, Head, Hand, and Scene Signals During Exploration in Open-Ended VR Environments   
  Kara J Emery, Marina Zannoli, James Warren, Lei Xiao, Sachin S Talathi  
 Honorable Mention Award - Short Paper  
 EyeLogin - Calibration-free Authentication Method For Public Displays Using Eye Gaze   
  Omair Shahzad Bhatti, Michael Barz, Daniel Sonntag  
 2020  
  
 Best Paper Awards - Full Paper  
 Combining Gaze Estimation and Optical Flow for Pursuits Interaction   
  Mihai Bace, Vincent Becker, Chenyang Wang, and Andreas Bulling  
  A MinHash approach for fast scanpath classification   
  David Geisler, Nora Castner, Gjergji Kasneci, and Enkelejda Kasneci  
 Honorable Mention Award - Full Paper  
 BimodalGaze: Seamlessly Refined Pointing with Gaze and Filtered Gestural Head Movement   
  Ludwig Sidenmark, Diako Mardanbegi, Argenis Ramirez Gomez, Christopher Clarke, and Hans Gellerse  
 Best Paper Award - Short Paper  
 Sweet Pursuit: User Acceptance and Performance of a Smooth Pursuit controlled Candy Dispensing Machine in a Public Setting   
  Sarah-Christin Freytag  
 Honorable Mention Award - Short Paper  
 Benefits of temporal information for appearance-based gaze estimation   
  Cristina Palmero Cantariño, Oleg Komogortsev, Sachin S Talathi  
  
 2019  
  
 Best Video Award  
 PrivacEye: Privacy-Preserving Head-Mounted Eye Tracking Using Egocentric Scene Image and Eye Movement Features   
  Julian Steil, Marion Koelle, Wilko Heuten, Susanne Boll, Andreas Bulling  
 Best Paper Award  
 Privacy-Aware Eye Tracking Using Differential Privacy   
  Julian Steil, Inken Hagestedt, Michael Xuelin Huang, Andreas Bulling  
 Full list of awards from 2019 coming soon.  
  
 2018  
  
 Best Paper  
 Error-Aware Gaze-Based Interfaces for Robust Mobile Gaze Interaction   
  Michael Barz, Florian Daiber, Daniel Sonntag, and Andreas Bulling  
 Paper of Note (i.e. second-place Best Paper)  
 Circular Orbits Detection for Gaze Interaction Using 2D Correlation and Profile Matching Algorithms   
  Eduardo Velloso, Flavio Luiz Coutinho, Andrew Kurauchi, and Carlos H. Morimoto  
 Best Note  
 CBF:Circular binary features for robust and real-time pupil center detection   
  Wolfgang Fuhl, David Geisler, Thiago Santini, Tobias Appel, Wolfgang Rosenstiel, and Enkelejda Kasneci  
 Best Early Investigator Paper  
 Cross-subject workload classification using pupil-related measures   
  Tobias Appel, Christian Scharinger, Peter Gerjets, and Enkelejda Kasneci  
 Best Presentation  
 Learning to Find Eye Region Landmarks for Remote Gaze Estimation in Unconstrained Settings   
  Seonwook Park, Xucong Zhang, Andreas Bulling, and Otmar Hilliges  
 Best Poster  
 Useful Approaches to Exploratory Analysis of Gaze Data: Enhanced Heatmaps, Cluster Maps, and Transition Maps   
  Poika Isokoski, Jari Kangas, Päivi Majaranta  
 Best Demo  
 iTrace: Eye Tracking Infrastructure for Development Environments   
  Drew T. Guarnera, Corey A. Bryant, Ashwin Mishra, Jonathan Maletic, and Bonita Sharif  
 Best Video  
 Enhanced Representation of Web Pages for Usability Analysis with Eye Tracking   
  Raphael Menges, Hanadi Tamimi, Chandan Kumar, Tina Walber, Christoph Schaefer, and Steffen Staab  
 Best Doctoral Symposium Paper  
 Virtual Reality as a Proxy for Real-Life Social Attention?   
  Marius Rubo and Matthias Gamer  
 Area Chair Above and Beyond  
 Oleg Špakov  
 Reviewer Above and Beyond  
 Tanja Blascheck  
 2016  
  
 Best Paper  
 Fusing Eye Movements and Observer Narratives for Expert-Driven Image-Region Annotations   
  Preethi Vaidyanathan, Jeff B. Pelz, Emily Prud’hommeaux, Cecilia Ovesdotter Alm, Anne R. Haake  
 2014  
  
 Best Papers  
 Creating a New Dynamic Measure of the Useful Field of View Using Gaze-Contingent Displays   
  Ryan V. Ringer, Aaron P. Johnson, John G. Gaspar, Mark B. Neider, James Crowell, Arthur F. Kramer, Lester C. Loschky  
  Towards Accurate and Robust Cross-Ratio based Gaze Trackers Through Learning From Simulation   
  Jia-Bin Huang, Qin Cai, Zicheng Liu, Narendra Ahuja, Zhengyou Zhang  
 Contact  
   
 This webpage is maintained by Kang-il Park  . Send an email to fix inaccuracies or for any updates. This page was updated for the last time on July 8, 2024.  
 This webpage was maintained by Jenna Wise  (2017-2018), Adrian Pilkington  /Michael Decker (2018-2019), and Bonita Sharif  (2019-2021).  

 Adapted design by FreeCSSTemplates.org   
 Twitter 
  Facebook 
  Youtube 
  Google+

75. EDBT_2 conference:
To path indicator  Subpages of “Publications“  To navigation  To quick access  To footer with other services    
 To content  Databases and Information Systems Group    
   
 Department of Computer Science     
   
 To the home page      
   
  Location & approach   Location & approach  

  Close Meta-Navigation    
  ServicePortal    UniMail    
   
  Search   Search  
 Search   Search      

   People Search      

   Close Meta-Navigation    
  Contrast    Deutsch     
  
 To the home page      
  Contrast    Deutsch     
  
  Search   Search  
 Search   Search      

   People Search      

   Close Meta-Navigation    

  Location & approach   Location & approach  

  Close Meta-Navigation    
  ServicePortal    UniMail     

 To the home page  Databases and Information Systems Group     
 Home 
  Team | Team 
  Prof. Dr. Jens Teubner 
  Prof. Dr. Joachim Biskup 
  Maximilian Berens 
  Roland Kühn 
  Dr. Jan Mühlig 
  Alexandra Seewald | Show submenu for “Team“ 
  Teaching | Teaching 
  Winter 2024/25   Show submenu for “Winter 2024/25“ | Data Processing on Modern Hardware 
  Industrial Data Science 1 
  Summer 2024   Show submenu for “Summer 2024“ | Information Systems 
  Databases in Practice: Data Warehousing 
  Architecture and Implementation of DBMS 
  Winter 2023/24   Show submenu for “Winter 2023/24“ | Industrial Data Science 1 
  Data Processing on Modern Hardware 
  Summer 2023   Show submenu for “Summer 2023“ | Informationssysteme 
  Datenbanken in der Praxis: Data Warehousing 
  Architektur und Implementierung von DBMS 
  Winter 2022/23   Show submenu for “Winter 2022/23“ | Data Processing on Modern Hardware 
  Bachelor's theses and master's theses 
  Information for Data Science students | Show submenu for “Teaching“ 
  Research | Research 
  Projects   Show submenu for “Projects“ | Memory Diplomat 
  MxKernel: A Bare-Metal Runtime System 
  Real-time analysis and storage for high-volume data 
  Algorithmics of learning methods in embedded system 
  Avalanche 
  In-Memory Joins 
  RAPP Center 
  Data Cyclotron 
  Pathfinder: XQuery Compilation 
  Profile | Show submenu for “Research“ 
  Publications | Publications 
  2024   Show submenu for “2024“ | Software Prefetching   Show submenu for “Software Prefetching“ | Reviews (DaMoN 2024) 
  2023   Show submenu for “2023“ | MxTasks: A Novel Processing Model 
  Micro Partitioning   Show submenu for “Micro Partitioning“ | Reviews (DaMoN 2023) 
  Cache Optimization   Show submenu for “Cache Optimization“ | Reviews (DaMoN 2023) 
  EDBT 2023, Proceedings 
  2022   Show submenu for “2022“ | QcLab: A Framework for Query Compilation 
  Low Latency Query Compilation   Show submenu for “Low Latency Query Compilation“ | Reviews (revision) 
  Reviews (initial submission) 
  2021   Show submenu for “2021“ | Low-Latency Compilation of SQL Queries to Machine Code 
  Resource-Efficient Processing of Large Data Volumes 
  Cache Partitioning to Accelerate Concurrent Workloads 
  MxTasks: How to Make Efficient Synchronization and Prefet   Show submenu for “MxTasks: How to Make Efficient Synchronization and Prefet“ | VLDB 2020 Reviews 
  SIGMOD 2021 Reviews 
  OCTO+: Optimized Checkpointing of B+ Trees for Non-Volati   Show submenu for “OCTO+: Optimized Checkpointing of B+ Trees for Non-Volati“ | Reviews 
  2020   Show submenu for “2020“ | Data-Parallel Query Processing on Non-Uniform Data   Show submenu for “Data-Parallel Query Processing on Non-Uniform Data“ | VLDB 2020 Reviews 
  VLDB 2020 Revision Reviews 
  Like Water and Oil   Show submenu for “Like Water and Oil“ | VLDB 2020 Reviews 
  Analyzing Memory Accesses With Modern Processors   Show submenu for “Analyzing Memory Accesses With Modern Processors“ | DaMoN 2020 Reviews 
  Efficient Generation of Machine Code for Query Compilers   Show submenu for “Efficient Generation of Machine Code for Query Compilers“ | DaMoN 2020 Reviews 
  Shared Load(ing)   Show submenu for “Shared Load(ing)“ | CIDR 2020 Reviews 
  Variable Word Length Word-Aligned Hybrid Compression   Show submenu for “Variable Word Length Word-Aligned Hybrid Compression“ | DaMon 2020 Reviews 
  MxKernel 
  2019   Show submenu for “2019“ | Die Arbeitsgruppe Datenbanken und Informationssysteme 
  Execution Strategies for Compute Intensive Queries 
  From the Application to the CPU 
  2018   Show submenu for “2018“ | Generating custom code for efficient query execution 
  Pipelined Query Processing in Coprocessor Environments 
  Efficient Stream Processing of Scientific Data 
  Accelerating Concurrent Workloads 
  2017   Show submenu for “2017“ | Databases on Future Hardware 
  Energy Efficiency in Main-Memory Databases 
  Efficiently Storing and Analyzing Genome Data in Database 
  FPGAs for Data Processing: Current State   Show submenu for “FPGAs for Data Processing: Current State“ | Reviews 
  DeLorean 
  Energy Efficiency in Main-Memory Databases 
  Efficient Storage and Analysis of Genome Data in Database 
  2016   Show submenu for “2016“ | Robust Query Processing 
  Bachelor, Master, Diploma Theses   Show submenu for “Bachelor, Master, Diploma Theses“ | 2024 
  2023 
  2022 
  2021 
  2020 
  2019 
  2018 
  2017 
  2016 
  2015 
  2014 | Show submenu for “Publications“ 

 Information for  
 Home 
  Team | Main Menu  Team  Prof. Dr. Jens Teubner 
  Prof. Dr. Joachim Biskup 
  Maximilian Berens 
  Roland Kühn 
  Dr. Jan Mühlig 
  Alexandra Seewald 
  Teaching | Main Menu  Teaching  Winter 2024/25   Teaching  Winter 2024/25  Data Processing on Modern Hardware 
  Industrial Data Science 1 
  Summer 2024   Teaching  Summer 2024  Information Systems 
  Databases in Practice: Data Warehousing 
  Architecture and Implementation of DBMS 
  Winter 2023/24   Teaching  Winter 2023/24  Industrial Data Science 1 
  Data Processing on Modern Hardware 
  Summer 2023   Teaching  Summer 2023  Informationssysteme 
  Datenbanken in der Praxis: Data Warehousing 
  Architektur und Implementierung von DBMS 
  Winter 2022/23   Teaching  Winter 2022/23  Data Processing on Modern Hardware 
  Bachelor's theses and master's theses 
  Information for Data Science students 
  Research | Main Menu  Research  Projects   Research  Projects  Memory Diplomat 
  MxKernel: A Bare-Metal Runtime System 
  Real-time analysis and storage for high-volume data 
  Algorithmics of learning methods in embedded system 
  Avalanche 
  In-Memory Joins 
  RAPP Center 
  Data Cyclotron 
  Pathfinder: XQuery Compilation 
  Profile 
  Publications | Main Menu  Publications  2024   Publications  2024  Software Prefetching   2024  Software Prefetching  Reviews (DaMoN 2024) 
  2023   Publications  2023  MxTasks: A Novel Processing Model 
  Micro Partitioning   2023  Micro Partitioning  Reviews (DaMoN 2023) 
  Cache Optimization   2023  Cache Optimization  Reviews (DaMoN 2023) 
  EDBT 2023, Proceedings 
  2022   Publications  2022  QcLab: A Framework for Query Compilation 
  Low Latency Query Compilation   2022  Low Latency Query Compilation  Reviews (revision) 
  Reviews (initial submission) 
  2021   Publications  2021  Low-Latency Compilation of SQL Queries to Machine Code 
  Resource-Efficient Processing of Large Data Volumes 
  Cache Partitioning to Accelerate Concurrent Workloads 
  MxTasks: How to Make Efficient Synchronization and Prefet   2021  MxTasks: How to Make Efficient Synchronization and Prefet  VLDB 2020 Reviews 
  SIGMOD 2021 Reviews 
  OCTO+: Optimized Checkpointing of B+ Trees for Non-Volati   2021  OCTO+: Optimized Checkpointing of B+ Trees for Non-Volati  Reviews 
  2020   Publications  2020  Data-Parallel Query Processing on Non-Uniform Data   2020  Data-Parallel Query Processing on Non-Uniform Data  VLDB 2020 Reviews 
  VLDB 2020 Revision Reviews 
  Like Water and Oil   2020  Like Water and Oil  VLDB 2020 Reviews 
  Analyzing Memory Accesses With Modern Processors   2020  Analyzing Memory Accesses With Modern Processors  DaMoN 2020 Reviews 
  Efficient Generation of Machine Code for Query Compilers   2020  Efficient Generation of Machine Code for Query Compilers  DaMoN 2020 Reviews 
  Shared Load(ing)   2020  Shared Load(ing)  CIDR 2020 Reviews 
  Variable Word Length Word-Aligned Hybrid Compression   2020  Variable Word Length Word-Aligned Hybrid Compression  DaMon 2020 Reviews 
  MxKernel 
  2019   Publications  2019  Die Arbeitsgruppe Datenbanken und Informationssysteme 
  Execution Strategies for Compute Intensive Queries 
  From the Application to the CPU 
  2018   Publications  2018  Generating custom code for efficient query execution 
  Pipelined Query Processing in Coprocessor Environments 
  Efficient Stream Processing of Scientific Data 
  Accelerating Concurrent Workloads 
  2017   Publications  2017  Databases on Future Hardware 
  Energy Efficiency in Main-Memory Databases 
  Efficiently Storing and Analyzing Genome Data in Database 
  FPGAs for Data Processing: Current State   2017  FPGAs for Data Processing: Current State  Reviews 
  DeLorean 
  Energy Efficiency in Main-Memory Databases 
  Efficient Storage and Analysis of Genome Data in Database 
  2016   Publications  2016  Robust Query Processing 
  Bachelor, Master, Diploma Theses   Publications  Bachelor, Master, Diploma Theses  2024 
  2023 
  2022 
  2021 
  2020 
  2019 
  2018 
  2017 
  2016 
  2015 
  2014 
    
 Part of:  
 Department of Computer Science     

      © Nikolas Golsch​/​TU Dortmund     

 Information for: Publications     
 2024 
  2023 | MxTasks: A Novel Processing Model 
  Micro Partitioning 
  Cache Optimization 
  EDBT 2023, Proceedings 
  2022 
  2021 
  2020 
  2019 
  2018 
  2017 
  2016 
  Bachelor, Master, Diploma Theses 

 You are here:  
 DBIS Home 
  Publications 
  2023 
  EDBT 2023, Proceedings 

 Proceedings 26th International Conference on Extending Database Technology (EDBT)  
  
 Title  
 Advances in Database Technology, Volume 26. Proceedings 26th International Conference on Extending Database Technology  
 Editors  
 Julia Stoyanovich, Jens Teubner, Nikos Mamoulis, Evaggelia Pitoura, Jan Mühlig, Katja Hose, Sourav S. Bhowmick, and Matteo Lissandrini  
 Published  
 OpenProceedings.org, Ioannina, Greece, March 28-31, 2023.  
 Details  
 Table of Contents  (via OpenProceedings.org)  
 ISBN  
 978-3-89318-088-2  

  To top of page     

 Contact 
  Arrival 

  Databases and Information Systems Group  
 Department of Computer Science  
 Otto-Hahn-Strasse 14  
  D-44227 Dortmund  

 Home 
  Teaching 
  Research 

 Privacy policy 
  Imprint 
  Accessibility 
  Sitemap 
   
 To top of page

76. FPL_2 conference:


77. ETRA_2 conference:
Photo by Frank Huang  on Unsplash    
 Tokyo - Japan, May 26 - May 29, 2025  
   
 The 2025 ACM Symposium on Eye Tracking Research & Applications (ETRA) will be held in Tokyo, Japan from May 26 to May 29, 2025. The aim of ETRA is to bring together researchers and practitioners from across fields with the common goal of continuing to move eye tracking research forward. Join us in Tokyo for ETRA, attend co-located workshops, and participate in exciting discussions.   
 General Chairs  
 general.etra2025@acm.org    
  Yusuke Sugano  
 The University of Tokyo, Japan  
   
  Mohamed Khamis  
 University of Glasgow , United Kingdom  
   
  Aladine Chetouani  
 University Sorbonne - Paris Nord, France  

 Important Dates  
 (Time Zone AoE/Anywhere on Earth)   
  
 Full Paper | Short Paper | Workshop | Tutorials | Late-Breaking Work | Doctoral Consortium 
 Abstract submission (mandatory) | October 26, 2024 | January 14, 2025 | -- | -- | -- | -- 
 Paper submission | November 1, 2024 | January 21, 2025 | January 6, 2025 | January 6, 2025 | rolling deadline | TBD 
 First round reviews and notifications | January 7, 2025 | March 8, 2025 | January 20, 2025 | January 24, 2025 | -- | -- 
 Revisions due | February 18, 2025 | -- | -- | -- | -- | -- 
 Second round reviews and notifications | March 13, 2025 | -- | -- | -- | -- | -- 
 Camera-ready deadline | March 31, 2025 | March 31, 2025 | January 31, 2025 | February 7, 2025 | -- | -- 
 Conference date | May 26-29, 2025 |

78. FPL_3 conference:
Home 
  FPL 2024 
  Prior Editions 
  More | Home 
  FPL 2024 
  Prior Editions 

 Home 
  FPL 2024 
  Prior Editions 

 FPL.ORG   

 The International Conference on Field-Programmable Logic and Applications (FPL)  was the first and remains the largest conference covering the rapidly growing area of field-programmable logic and reconfigurable computing. Many of the advances in reconfigurable system architectures, applications, embedded processors, design automation methods and tools were first published in the proceedings of the FPL conference series. The conference objective is to bring together researchers and practitioners from both academia and industry and from around the world.   

 The ASAC (Aerospace, Safety and Computing) Lab of Politecnico di Torino will organize the 34th edition of FPL (FPL 2024) in Turin, Italy, from 2nd to 6th September 2024.   
   
 FPL 2024    

 Copyright © 2022-2023 33rd International Conference on Field-Programmable Logic and Applications - All Rights Reserved.   

 This website uses cookies.  
 We use cookies to analyze website traffic and optimize your website experience. By accepting our use of cookies, your data will be aggregated with all other user data.   
   
 Accept

79. ETRA_3 conference:
Home 
  Authors | Call for Submissions 
  Demos/Videos 
  Doctoral Symposium 
  Attend | Registration 
  Accommodation 
  Request Visa Letter 
  Travel Funding 
  Student Volunteer Application 
  Travel 
  Warsaw - Sightseeing 
  Policy 
  Accessibility 
  Venue 
  Program | Overview 
  Talks 
  Demos 
  Videos 
  Doctoral Symposium 
  Posters 
  Keynotes 
  Tutorials 
  Sponsor Workshops 
  Organization | Organizing Committee 
  Steering Committee 
  Area Chairs 
  Reviewers 
  Awards 
  Co-Located Events | EMIP 
  COGAIN 
  PETMEI 
  ETVIS 
  Sponsors 
  --> Past ETRA 
    
 ☰   Home 
  Authors 
  Call for Submissions 
  Demos/Videos 
  Doctoral Symposium 
  Attend 
  Registration 
  Accommodation 
  Request Visa Letter 
  Travel Funding 
  Student Volunteer Application 
  Travel 
  Warsaw - Sightseeing 
  Policy 
  Accessibility 
  Venue 
  Program 
  Talks 
  Accepted Demos 
  Accepted Videos 
  Doctoral Symposium Program 
  Posters 
  Keynotes 
  Tutorials 
  Sponsor Workshops 
  Organizing Committee 
  Steering Committee 
  Area Chairs 
  Reviewers 
  EMIP 
  COGAIN 
  PETMEI 
  ETVIS 
  Sponsors 
  Past ETRA 
    
  By Arletta Szulwic    
   By Arletta Szulwic    
   By Robert Drózd  , CC BY-SA 3.0  , Link    
   By Marcin Białek  - Own work  , CC BY-SA 3.0  , Link    
   By Arletta Szulwic    
   By Wojciech Kryński - Museum of the History of Polish Jews  , CC BY-SA 3.0 pl  , Link    
   By Arletta Szulwic    
   By Arletta Szulwic    
   By Arletta Szulwic    
   By Arletta Szulwic    
   By Arletta Szulwic    
   By VanNouten  - Own work  , Public Domain, Link    
   By Arletta Szulwic    
   By Arletta Szulwic    
   Aug 12, 2016  in KLM  tagged Poland  / Warsaw  by Editor2    
    
   ETRA 2018   
 2018 ACM Symposium on Eye Tracking Research & Applications  
 Warsaw, Poland   
 June 14-17, 2018  

 ETRA 2018  
 2018 ACM Symposium on Eye Tracking Research & Applications    
 The tenth anniversary of the ACM Symposium on Eye Tracking Research & Applications (ETRA 2018) will be held for the first time in Europe! This edition of ETRA will introduce several innovations such as co-located workshops and invited sessions.  
 The goal of ETRA is to bring together computer scientists, engineers and behavioral scientists in support of a common vision of moving eye tracking research and its application forward, and expanding its impact. ETRA 2018 will be held at SWPS University of Social Sciences and Humanities  in Warsaw  , Poland  .  
 Join us in Warsaw to celebrate 20 years of eye tracking research at ETRA!    
 ACM has developed a Policy Against Discrimination and Harassment  that applies to all ACM-related activities, including any conferences  , symposiums, meetings or other events sponsored by SIGCHI. It also applies to communications sent through official communication channels  for any such activity or event, including social media  .  
 Steering Committee Welcome  

 Conference Chairs Welcome  

 Venue  
 Your user agent does not support the HTML5 Video element.    
  By Bogaczewicz Film Studio    

 Important Dates  
 Time zone: AoE     
  
 Papers & Notes 
 Jan 12, 2018 | Authors: Paper Abstracts due 
 Jan 26, 2018 | Authors: Papers & Notes due 
 Feb 25, 2018 | Feedback: Reviews to authors 
 Mar 8, 2018 | Authors: Rebuttals due 
 Mar 26, 2018 | Feedback: Preliminary decisions to authors 
 Apr 13, 2018 | Authors: Camera ready papers due 
 Apr 23, 2018 | Feedback: Final notifications to authors 
 Jun 14-17, 2018 | ETRA Conference @ SWPS University, Warsaw, Poland 
 Demo/Video & Doctoral Symposium (Technical Abstracts) 
 Apr 2, 2018 | Doc Symp Authors: Extended abstracts due 
 Apr 6, 2018 | Demo/Video Authors: Extended abstracts due 
 Apr 16, 2018 | Authors: Camera ready abstracts due 
 Apr 23, 2018 | Feedback: Final notifications to authors 
 Jun 14-17, 2018 | ETRA Conference @ SWPS University, Warsaw, Poland 

 Recent News  

 2018-06-29 | The slides for Tutorial 3: "Gaze Analytics Pipeline" are on the Tutorials page under the Program menu tab. 
 2018-06-27 | The slides for Keynote: "Pervasive Gaze Sensing, Analysis, and Interaction: The New Frontier" are on the Keynotes page under the Program menu tab. 
 2018-06-26 | The slides for Tutorial 4: "Eye-Tracking and Visual Analytics" are on the Tutorials page under the Program menu tab. 
 2018-06-25 | The ETRA 2018 awards can be found on the Program page. 

 More News  
    
 Tweets by @ETRA_conference    

 Sponsors  
   
 Institutional  

 Platinum  

 Gold  

 Silver  

 Adapted design by FreeCSSTemplates.org   
 Twitter 
  Facebook 
  Youtube 
  Google+

80. EDBT_3 conference:
JavaScript is not available.  
 We’ve detected that JavaScript is disabled in this browser. Please enable JavaScript or switch to a supported browser to continue using x.com. You can see a list of supported browsers in our Help Center.  
 Help Center   
 Terms of Service  Privacy Policy  Cookie Policy  Imprint  Ads info  © 2024 X Corp.  

 Something went wrong, but don’t fret — let’s give it another shot.    
  
   Try again    
   Some privacy related extensions may cause issues on x.com. Please disable them and try again.

81. ESORICS_0 conference:
Search  

 HOME 
  PROGRAM | PROCEEDINGS   PLAN   AWARDS   ACCEPTED PAPERS   KEYNOTE TALKS   INDUSTRIAL TRACK   ACCEPTED POSTERS   ACCEPTED WORKSHOPS 
  CALL FOR | PAPERS   WORKSHOPS   POSTERS 
  ORGANIZERS | ORGANIZING TEAM   PC MEMBERS 
  SPONSORSHIP | CALL   SPONSORS 
  ATTEND | REGISTRATION   VENUE   HOTELS   TRAVEL   SOCIAL EVENT 

 28th European Symposium on  
  Research in Computer Security  
 The Hague, The Netherlands  
 September 25-29, 2023  

  Registration is open now and the registraion can be done online     

 Welcome to ESORICS 2023!  
  Computer security is concerned with the protection of information in environments where there is a possibility of intrusion or malicious action. The aim of ESORICS is to further the progress of research and development in computer security by establishing a European community for bringing together academia and industry in this area. Progressively organized in a series of European countries, the symposium is confirmed as one of the biggest European conferences in computer security. Nowadays, the symposium has also explored the R&D directions on AI, machine learning, privacy-enhancing technology, network security, software, and hardware security, blockchain, smart contract, and real-world applied cryptography.  
 After the recent successful hosts in Fraunhofer (Germany, 2021) and DTU (Denmark, 2022), the 28th European Symposium on Research in Computer Security (ESORICS) 2023 will be hosted by TU Delft in the Hague, the Netherlands.  

   Conference Location  
   
    The Hague Conference Centre New Babylon | Anna van Buerenplein 29 | 2595 DA The Hague | The Netherlands 

 Contacts  
   
 Address:   
 Van Mourik Broekmanweg, 5  
  2628 XE Delft  
  The Netherlands  
 You can contact the organizing team   

 Sponsors  
   
 Gold  

 Silver  

 Bronze  

 Other  

 © 2022-2024 Delft University of Technology  
 Published with Wowchemy  — the free, open source  website builder that empowers creators.  

 Cite  
 ×     
     
  Copy   Download

82. FlAIRS_0 conference:
Search this site   

 Skip to main content     

 Skip to navigation     

   FLAIRS   Home 
  Conferences | Future Conferences 
  Past Conferences 
  Paper Style Files 
  Special Track Proposal Template 
  Presentation & Session Instructions 
  Use of AI for Authoring 
  Code of Conduct 
  Proceedings 
  DDD II Award 
  Conference Management 
  Corporate 
   
  FLAIRS     
 Home 
  Conferences | Future Conferences 
  Past Conferences 
  Paper Style Files 
  Special Track Proposal Template 
  Presentation & Session Instructions 
  Use of AI for Authoring 
  Code of Conduct 
  Proceedings 
  DDD II Award 
  Conference Management 
  Corporate 
  More | Home 
  Conferences | Future Conferences 
  Past Conferences 
  Paper Style Files 
  Special Track Proposal Template 
  Presentation & Session Instructions 
  Use of AI for Authoring 
  Code of Conduct 
  Proceedings 
  DDD II Award 
  Conference Management 
  Corporate 

 The Florida    
 Artificial Intelligence    
 Research Society    

 The Florida AI Research Society was founded in 1987 to promote and advance Artificial Intelligence within the State of Florida, including interaction between researchers at the various colleges, universities, and industry. Membership is open to all (Florida residents and non-residents) that attend the yearly conference.   
 From its inception, one major goal of the society has been to promote AI through a conference. These conferences have been held yearly since the spring of 1988. During the first two years, participation was restricted to State of Florida residents. Since 1990, the conference has been open to all. In 1995 the conference title was changed to "The International FLAIRS Conference" to recognize the contribution of the international participants within the conference. The last several years has seen a fairly even split of conference participants between Floridians, North Americans, and Internationals.   
 Devoted to the promotion of Artificial Intelligence in the State of Florida.    

 Google Sites   

 Report abuse   

 Page details   

 Page updated     
   
 Google Sites   
   
 Report abuse

83. ESORICS_1 conference:
Login    Lost password ?  Create account 

 Main menu   
 Home     
 Call for ▼      
 Papers     
 Workshops     
   
 Organization ▼      
 Organizing Team     
 PC Members     
 Past conferences     
   
 Sponsorship     
 Attendance ▼      
 Venue     
 How to get there ?     
 Toulouse     
 Hotels     
 Travel     
 Social events     
 ESORICS Code of Conduct     
   
 Program ▼      
 Accepted papers     
 Keynote talks     
   
 Workshops     

 HELP   
 @ Contact | Home  
    
 Computer security is concerned with the protection of information in environments where there is a possibility of intrusion or malicious action   .   Th  e aim of ESORICS is to further the progress of research in computer security by fostering a European community that bridges academia and industry in this realm. Sequentially hosted across various European nations, the symposium has solidified its position as one of Europe's most prominent conferences on computer security. Currently, the symposium delves into research and developmental avenues encompassing AI, machine learning, technologies that enhance privacy, network safeguards, software and hardware protection in practical scenarios.    
 After successful events at Fraunhofer (Germany, 2021), DTU (Denmark, 2022), TU Delft (The Netherlands, 2023) and Bydgoszcz University   ( Poland, 2024),   the 30th European Symposium on Research in Computer Security (ESORICS) 2025  will be held at U niversité Toulouse III - Paul Sabatier  in Toulouse, France  .    
    
 Let's meet from 22 to 26 September 2025 (22-24 Main Conference, 25-26 Workshops).     
     
 Find more general information about ESORICS at https://conf.laas.fr/esorics/ 

 Online user: 1 | Privacy |  

   Loading...

84. FlAIRS_1 conference:
FLAIRS-23  
  The 23rd International FLAIRS  Conference   
 May 19-21, 2010   
 Daytona Beach, Florida, USA   
 Schedule updated with final program.   
 The 23rd Florida Artificial Intelligence Research Society Conference (FLAIRS-23) will be held May 19-21, 2010 at The Shores Resort & Spa  in Daytona Beach, Florida, USA. FLAIRS-23 continues a tradition of presenting and discussing artificial intelligence research in a convivial atmosphere within a beautiful setting. Events will include invited speakers, special tracks, discussion panels, and presentations of papers and posters. FLAIRS encourages student authors to submit papers. In addition to a Best Paper award, there will be a Best Student Paper award for the best paper written primarily by students.  
 Daytona Beach, on Florida's Atlantic coast, is famous for its sparkling white beaches, up to 500 feet wide, with blue-green waters. Juan Ponce de León landed near here in 1513, naming the land La Florida for its verdant landscape, while legendarily searching for the Fountain of Youth. The fine, hard-packed sand was used in the early 20th century for automobile racing and land speed records. With natural beauty, sites of historical interest, and a vibrant nightlife, Daytona Beach has become a favorite U.S. vacation destination.  
  In cooperation with:  Association for the Advancement of Artificial Intelligence    
   
 News   
 Apr 05, 2010 - Schedule, FLAIRS Golf, Attendee Message Board posted.  
 Feb 22, 2010 - Special student room rates posted.  
 Feb 15, 2010 - Accommodation, location, travel details posted. Clarification on registration details for authors.  
 Feb 8, 2010 - Registration details and online registration posted.  
 Nov 24, 2009 - Submission deadline extended.  
 Nov 17, 2009 - Updated program with special track invited speakers.  
 Sep 15, 2009 - Updated program, added detail on paper formatting instructions.  
 July 30, 2009 - Updated Special Tracks Listing, General Conference PC.  
 May 19, 2009 - FLAIRS-23 site goes live.  
   
 Dates   
  
 Proposals for special tracks. | June 22, 2009 
 Acceptance of special tracks. | July 17, 2009 
 Submission of papers. | December 1, 2009 November 23, 2009 
 Notification of acceptance. | January 22, 2010 
 Camera-ready versions due. | February 22, 2010 
 FLAIRS-23 conference held. | May 19-21, 2010 

 Call for Papers   
 General Conference   
 Submission of papers for presentation at the conference is now invited. Topics of interest are in all areas of artificial intelligence, including:  
  
 Foundations  Knowledge representation 
  Cognitive modeling 
  Perception 
  Reasoning and programming 
  Search 
  Learning | Applications  Aviation and aerospace 
  Education 
  Entertainment 
  Medicine 
  Management and manufacturing 
  World Wide Web 
 Architectures  Agents and distributed AI 
  Intelligent user interfaces 
  Natural language systems 
  Information retrieval 
  Robotics | Implications  Philosophical foundations 
  Social impact and ethics 
  Evaluation of AI systems 
  Teaching AI 
  
 Special Tracks   
 A number of special tracks that focus on particular topics within AI are held in parallel with the general conference. These provide researchers in specific areas the opportunity to meet and present their work, and offer a forum for interaction among the broader community of artificial intelligence researchers. Authors are requested to consider submitting their paper directly to a special track if one exists that closely matches the topic of their paper. A list of all special tracks is provided in the “Special Tracks” section of the conference site. For additional details on a particular special track, authors should contact the track chair(s) directly.  
 Special tracks are typically proposed and selected by late summer as part of a Call for Special Tracks. If you are interested in proposing a special track, please check the “Special Tracks” section of the conference site for details on the Call for Special Tracks.  
 Submission Instructions   
 Submitted papers must be original, and not submitted concurrently to a journal or another conference. Double-blind reviewing will be provided, so submitted papers must use fake author names and affiliations. Full papers may be up to 6 pages, and poster papers up to 2 pages. Papers must be in AAAI format and must use the latest AAAI Press Word template or LaTeX macro package  .  
  
 Papers must be submitted in PDF format via the EasyChair conference management site for FLAIRS-23  . (N.B. Do not use a fake name for your EasyChair login -- your EasyChair account information is hidden from reviewers.) The proceedings of FLAIRS will be published by the AAAI. Authors of accepted papers will be required to sign a form transferring copyright of their contribution to AAAI. An author of each accepted paper is required to register, attend, and present the paper at FLAIRS.  
 Dates   
 Submission of papers. November 23, 2009  
  Notification of acceptance. January 22, 2010  
  Camera-ready versions due. February 22, 2010  
  FLAIRS-23 conference held. May 19-21, 2010  

 Special Tracks   
 Special Tracks Listing   
  
 Data Mining | Track Chairs: William Eberle and David Bisant 
  Case-Based Reasoning | Track Chairs: Belen Diaz-Agudo and Steven A. Bogaerts 
  Artificial Intelligence Education | Track Chairs: Todd Neller and Jim Marshall 
  AI, Cognitive Semantics and Computational Linguistics: New Perspectives | Track Chairs: Ismail Biskri, Susan Haller, Florence Le Priol, Anca Pascu and James Pustejovsky 
  Uncertain Reasoning (UR) | Track Chairs: Luis Enrique Sucar and Laurent Perrussel 
  Applied Natural Language Processing | Track Chairs: Philip M. McCarthy and Chutima Boonthum 
  Games & Entertainment (GE) | Track Chairs: G. Michael Youngblood and Klaus Jantke 
  AI Planning and Scheduling | Track Chairs: Roman Barták and Hana Rudová 
  Cognition and AI: Capturing Cognitive Plausibility and Informing Psychological Processes | Track Chairs: Nicholas Duran, Sidney D'Mello and Rick Dale 
  AI and Second Language Learning | Track Chairs: Charles Hall and Philip McCarthy 
  Learning in Intelligent Systems | Track Chair: Andrew Olney 
  Intelligent Tutoring Systems | Track Chairs: G. Tanner Jackson and Robert Hausmann 
  Spatio-Temporal Reasoning | Track Chair: Carl Schultz 
   
 Call for Special Tracks (CLOSED)   
 Special tracks, held in parallel with the general conference, are an integral part of the conference. They provide researchers in focused areas the opportunity to meet and present their work, and offer a forum for interaction among the broader community of artificial intelligence researchers. Their papers are required to meet the same standards and are published in the conference proceedings.  
 Topics of interest are in all areas related to artificial intelligence. For example, last year's special tracks included: AI Education; AI Planning and Scheduling; Applied Natural Language Processing; Case-Based Reasoning; Data Mining; Design, Evaluation, and Refinement of Intelligent Systems (DERIS); Games and Entertainment; Intelligent Tutoring Systems; Semantics, Ontologies, and Computational Linguistics; and Uncertain Reasoning.  
 We encourage proposals for topics that have run previously. Even special tracks that have run for a number of years may need or benefit from new leadership support and perspective, so please do not hesitate to indicate interest in an area, or to contact the Special Tracks Coordinator if you have questions about proposing on a particular topic. We are also particularly interested in fresh tracks in areas such as Machine Learning or AI in English as a Second Language, but all proposals for tracks are very much encouraged.  
 Submission of proposals for special tracks is now invited. Proposals must be submitted via the EasyChair conference management site for FLAIRS-23  . Special track chairs may submit to their own tracks. Those papers will be reviewed by two members of the special track's program committee and two members of the general conference program committee, and acceptance decisions will be made by the conference program co-chairs. Proposals must include the following information:  
 Title of the special track. 
  Anticipated numbers of submissions and accepted papers. A track may have up to 4 sessions, with 3 papers per session. Special tracks that fail to attract sufficient papers will be merged into the general conference. 
  Names and contact information for the special track chair(s) and those who have agreed to serve on the special track's program committee. The program committee should be large enough for each paper to be reviewed by 4 reviewers. 
  Promotional plans and materials, including a draft call for papers, specific plans for publicizing the special track, and the names of any speakers you are considering inviting. (FLAIRS cannot guarantee any form of financial support for special track invited speakers at this stage.) 
  Summary of any special tracks you have organized for FLAIRS over the last two years. In particular, what track(s) have you organized, how many submissions were received, and how many papers were accepted? 

 People   
 Organizers   
  
 Conference Chair: | David C. Wilson  , University of North Carolina at Charlotte, USA 
 Program Co-Chairs: | Chas Murray  , Carnegie Learning, USA  
  Hans Guesgen  , Massey University, New Zealand 
 Special Tracks Coordinator: | Philip McCarthy  , University of Memphis, USA 

  General Conference Program Committee   
 John Anderson  , University of Manitoba, Canada  
  Tiffany Barnes  , University of North Carolina at Charlotte, USA  
  Valerie Barr  , Union College, USA  
  Roman Bartak  , Charles University, Czech Republic  
  Ralph Bergmann  , Universität Trier, Germany  
  Debra Burhans  , Canisius College, USA  
  Soon Chun  , City University of New York, USA  
  Bill Clancey  , NASA/Ames Research Center, USA  
  Diane Cook  , Washington State University, USA  
  Doug Dankel  , University of Florida, USA  
  William Eberle  , Tennessee Technological University, USA  
  Mark Fenner  , Norwich University, USA  
  Charles Fox  , Oxford University, United Kingdom  
  Susan Fox  , Macalester College, USA  
  Reva Freedman  , Northern Illinois University, USA  
  James Geller  , New Jersey Institute of Technology, USA  
  Ali Ghorbani  , University of New Bunswick, Canada  
  Michael Glass  , Valparaiso University, USA  
  Ashok Goel  , Georgia Tech, USA  
  Avelino Gonzalez  , University of Central Florida, USA  
  Jesus Gonzalez  , National Institute of Astrophysics Optics and Electronics, Mexico  
  Art Graesser  , University of Memphis, USA  
  Christian Hempelman  , RiverGlass, Inc., USA  
  Larry Holder  , Washington State University, USA  
  Manfred Huber  , University of Texas at Arlington, USA  
  Amruth Kumar  , Ramapo College of New Jersey, USA  
  Tao Li  , Florida International University, USA  
  Chun-wai Liew  , Lafayette College, USA  
  Christine Lisetti  , Florida International University, USA  
  Ramon Lopez de Mantaras  , Spanish Council for Scientific Research, Spain  
  Zdravko Markov  , Central Connecticut State University, USA  
  Noboru Matsuda  , Carnegie Mellon University, USA  
  Lorraine McGinty  , University College Dublin, Ireland  
  Bob Morris, NASA Ames Research Center, USA  
  Hien Nguyen  , University of Wisconsin-Whitewater, USA  
  Barry O'Sullivan  , University College Cork, Ireland  
  Dympna O'Sullivan  , Aston University, United Kingdom  
  Paolo Petta  , Medical University of Vienna, Austria  
  David Pynadeth  , USC Institute for Creative Technologies, USA  
  Hana Rudova  , Masaryk University, Czech Republic  
  Vasile Rus  , University of Memphis, USA  
  Eugene Santos  , Dartmouth College, USA  
  Stephan Schulz  , Technische Universität München, Germany  
  Mei-Ling Shyu  , University of Miami, USA  
  Candy Sidner  , BAE Systems, USA  
  Raja Sooriamurthi  , Carnegie Mellon University, USA  
  Brian Stensrud  , Soar Technology, Inc., USA  
  Dan Tamir  , Texas State University, USA  
  Colleen van Lent  , California State University Long Beach, USA  
  Rene Venegas  , Pontificia Universidad Católica de Valparaíso, Chile  
  Ubbo Visser  , University of Miami, USA  
  Rosina Weber  , Drexel University, USA  
  Jan Wiebe  , University of Pittsburgh, USA  
  Wayne Wobcke  , University of New South Wales, USA   
   
 Conference Invited Speakers  
 Conference invited speakers will address the entire FLAIRS audience in plenary sessions.  
  Eugene Charniak   Eugene Charniak is University Professor of Computer Science and Cognitive Science at Brown University and past chair of the Department of Computer Science. He received his A.B. degree in Physics from University of Chicago, and a Ph.D. from M.I.T. in Computer Science. He has published four books, the most recent being Statistical Language Learning. He is a Fellow of the American Association of Artificial Intelligence and was previously a Councilor of the organization. His research has always been in the area of language understanding or technologies which relate to it. Over the last 18 years years he has been interested in statistical techniques for many areas of language processing including parsing and, most recently, discourse.  

   Janet Kolodner   Janet Kolodner is a Regents' Professor in the School of Interactive Computing at Georgia Institute of Technology. Her research, for the past 30 years, has addressed a wide variety of issues in learning, memory, and problem solving, both in computers and in people. During the 1980's, she pioneered the computer method called case-based reasoning, which allows a computer to reason and learn from its experiences. The first case-based design aids (CBDA'S) came from her lab. Archie-2, for example, helped architecture students with conceptual design. During the early 1990's, she used the cognitive model implied by case-based reasoning to address issues in creative design. JULIA planned meals, Creative JULIA figured out what to do with leftover rice, IMPROVISOR did simple mechanical design, and ALEC simulated Alexander Graham Bell in his invention of the telephone. Later in the 1990's, she used the cognitive model in case-based reasoning to guide design of science curriculum for middle school. Learning by Design (TM) is a design-based learning approach and an inquiry-oriented project-based approach to science learning that has children learn science in the context of design experiences. The sequencing of activities in the classroom encourages students to reflect on their design and science experiences in ways that CBR says are appropriate for integrating them well into memory. LBD curriculum units and the sequencing structures in LBD provide the backbone for a full 3-year middle-school science curriculum called Project-Based Inquiry Science (PBIS), published by It's About Time, Inc. More recently, Kolodner's research uses what she learned in designing LBD to create informal learning environments to help middle schoolers come to think of themselves as competent scientific reasoners. In Kitchen Science Investigators, fifth and sixth graders learn science in the context of cooking. In Hovering Around, they learn about motion and forces, about airflow, and how to explain in the context of designing hovercraft. Kolodner is founding Editor in Chief of the Journal of the Learning Sciences and a founder and first Executive Officer of the International Society for the Learning Sciences. She has headed up the Cognitive Science Program at Georgia Tech and headed an organization called EduTech in the mid-90's whose mission was to use what we know about cognition to design educational software and integrate it appropriately into educational environments.  

   Herbert H. Clark   Herbert H. Clark is Professor of Psychology at Stanford University. He is the author of several books on language and language use, including Psychology and Language (a textbook co-authored with Eve V. Clark), Arenas of Language Use, and Using Language. He is also author of over one hundred research articles and chapters. His research is concerned with speaking and understanding in interactive communication, especially conversation. Clark was a John Simon Guggenheim Fellow and a fellow at the Center for Advanced Study in the Behavioral Sciences. He was elected to the American Academy of Arts and Sciences and to the Royal Dutch Academy of Arts and Sciences.  

  Special Track Invited Speakers  
 Special track invited speakers will address the participants and audience members of the designated track.  
  David Poole   (Special Track on Uncertain Reasoning) David Poole is a Professor of Computer Science at the University of British Columbia. He has a Ph.D. from the Australian National University. He is known for his work on assumption-based reasoning, diagnosis, relational probabilistic models, combining logic and probability, algorithms for probabilistic inference, representations for automated decision making, probabilistic reasoning with ontologies and semantic science. He is a co-author of a new AI textbook, Artificial Intelligence: Foundations of Computational Agents (Cambridge University Press, 2010), co-author of an older AI textbook, Computational Intelligence: A Logical Approach (Oxford University Press, 1998), co-chair of AAAI-10 (twenty-Fourth AAAI Conference on Artificial Intelligence) and co-editor of the Proceedings of the Tenth Conference in Uncertainty in Artificial Intelligence (Morgan Kaufmann, 1994). He is a former associate editor of the Journal of AI Research, is an associate editor of AI Journal and is on the editorial board of AI Magazine. He is the secretary of the Association for Uncertainty in Artificial Intelligence, is a Fellow of the Association for the Advancement Artificial Intelligence (AAAI) and has an entry in the International Directory of Logicians: Who's Who in Logic (2009).  
   
  Anthony Cohn   (Special Track on Spatio-Temporal Reasoning) Tony Cohn holds a Personal Chair at the University of Leeds, where he is Professor of Automated Reasoning and served a term as Head of the School of Computing August 1999 - July 2004. He is presently Director of the Institute for Artificial Intelligence and Biological Systems. He holds BSc and PhD degrees from the University of Essex where he studied under Pat Hayes. He spent 10 years at the University of Warwick before moving to Leeds in 1990. He now leads a research group working on Knowledge Representation and Reasoning with a particular focus on qualitative spatial/spatio-temporal reasoning, the best known being the well cited Region Connection Calculus (RCC). His current research interests range from theoretical work on spatial calculi and spatial ontologies, to cognitive vision, modelling spatial information in the hippocampus, and integrating utility data recording the location of underground assets. He has received substantial funding from a variety of sources including EPSRC, the DTI, the European Union and various industrial sources. Work from the Cogvis project won the British Computer Society Machine Intelligence prize in 2004. He has been Chairman/President of the UK AI Society SSAISB, the European Coordinating Committee on AI (ECCAI), KR inc, the IJCAI Board of Trustees and is Editor-in-Chief of the AAAI Press, Spatial Cognition and Computation, and Artificial Intelligence. He was elected a founding Fellow of ECCAI, and is also a Fellow of AAAI, AISB, the BCS, and the IET (formerly the IEE).  
   
  Jorge Ramirez   (Special Track on Data Mining) Dr. Jorge C. G. Ramirez is currently a Senior Scientist working in the Data Mining Group of Worldwide Business Intelligence for Apple, Inc. Dr. Ramirez has over 25 years of research, development and leadership experience in software engineering, data mining and intelligent systems. He has led domestic and international development projects in academia and companies ranging from startups to the Fortune 500. To accomplish these projects, he integrates business, information technology and extra-ordinary analytics with his leadership abilities to align business processes with business goals. After spending 12 years in academia, and now 10 years back in the private sector, he stays in touch with the research community by serving on the program committee for and attending various AAAI affiliated conferences. His philanthropic efforts include being President of MaleSurvivor ( malesurvivor.org  ) for 2010-2011.  

 FLAIRS-23 Registration   
 Registration processing for FLAIRS-23 is handled by our Conference Administrator, Jeanni Gerber. Questions regarding registration can be addressed to Jeanni at jwgerber(at)earthlink(dot)net  (+1 407-927-4919), or to the conference General Chair, David C. Wilson  .  
 Registration   
 In order to attend and participate in the conference program, you must formally register for the conference.  
 Author Registration Requirement for Including Accepted Papers in the Program   
 Each accepted paper or poster must have at least one author registered with a regular registration  by 22nd February  in order for the paper or poster to be included in the conference. If the only author registering for the conference is a student, the registration must be a full regular registration. Additional authors can register as regular or student. If you are the author of more than one paper, you need to register as an author only once.  
 Registration Categories   
  
 Authors, please note the registration requirement for paper inclusion by February 22 
  Early Registration (By March 22) | Regular - $450 
  Student - $255 (Students must provide documentation of student status with payment) 
  Standard Registration (By May 14) | Regular - $475 
  Student - $280 (Students must provide documentation of student status with payment) 
  On-Site Registration | Regular - $500 
  Student - $295 (Students must provide documentation of student status with payment) 
  Additional Dining Tickets - Regular / student registration includes all social events. Extra social event tickets (for family, partners, etc.) are available. You can make a separate payment for these if you wish. | Extra Lunch Ticket (one day) - $30 
  Extra Opening Reception Ticket - $65 
   
 Payment Instructions   
 Payment can be made via credit card, bank transfer, or check drawn on a US bank. Paying for multiple registrations in a single payment is possible. In all cases you'll receive an email confirming when payment has been processed. If you do not receive an email within two weeks of sending your payment, please email our Conference Administrator at jwgerber(at)earthlink(dot)net  .  
 For Student Registrations,  Students must provide proof of student status. Documentation should be provided via email or fax to the FLAIRS-23 Conference Administrator, Jeanni Gerber - jwgerber(at)earthlink(dot)net  . Documents attached to email should be in PDF format. Please include FLAIRS-23 and a brief description in the subject line. For faxing documentation, please email Jeanni to notify and send the fax to: +1 407-275-8723.  
 Your registration is not complete until your payment has been processed and confirmed.   
 Payment Methods   
 Registration processing for FLAIRS-23 is handled by our Conference Administrator, Jeanni Gerber. For registration processing and inquiries, please contact Jeanni at jwgerber(at)earthlink(dot)net  . Please include FLAIRS-23 and a brief description in the subject line.  
 Credit Card | Online, using Google Checkout - see the FLAIRS-23 'Online Registration' section of the web site. 
  Fax, please fill in the | FLAIRS-23 Registration Payment Form | and send to our Conference Administrator. You can email a PDF scan of the signed form to Jeanni. If you would prefer to fax the form, please email Jeanni to notify and send the fax to: +1 407-275-8723. 
  Bank Transfer | - please fill in the | FLAIRS-23 Registration Payment Form | and send to our Conference Administrator. You can email a PDF scan of the signed form to Jeanni. If you would prefer to fax the form, please email Jeanni to notify and send the fax to: +1 407-275-8723. Jeanni will then be able to provide FLAIRS-23 bank account details for the transfer. | There will be an additional $50 processing fee for bank transfers. | Bank transfer processing must be complete, not simply initiated, by the registration deadline. Since this can take several weeks, you must allow enough time for processing to complete. 
  Check from US Bank | - Please make the check out to "FLAIRS," fill in the | FLAIRS-23 Registration Payment Form | , and send both check and payment form together to the following address. | FLAIRS-23, c/o J.W. Gerber | 11409 Swift Water Circle | Orlando, Florida 32817 | USA 

 FLAIRS-23 Online Registration   
 Online credit-card registration for FLAIRS-23 uses Google Checkout  for order processing. Google Checkout provides an introduction for buyers.  You can add several individual registrations to one cart by changing the details. You can also order extra opening reception and daily lunch tickets in the same cart. Please note that registration details in the drop-down cart are not sorted. Google Checkout requires you to establish an account to use the service. Offline registration methods are also available, please consult the FLAIRS-23 web site 'Registration Details' section.  
 For Author Registrations,  Each accepted paper or poster must have at least one author registered with a regular registration  by 22nd February  in order for the paper or poster to be included in the conference. If the only author registering for the conference is a student, the registration must be a full regular registration. Additional authors can register as regular or student. If you are the author of more than one paper, you need to register as an author only once.  
 For Student Registrations,  Students must provide proof of student status. Documentation should be provided via email or fax to the FLAIRS-23 Conference Administrator, Jeanni Gerber - jwgerber(at)earthlink(dot)net  . Documents attached to email should be in PDF format. Please include FLAIRS-23 and a brief description in the subject line. For faxing documentation, please email Jeanni to notify and send the fax to: +1 407-275-8723.  
 Questions regarding registration can be addressed to our conference administrator, Jeanni, at jwgerber(at)earthlink(dot)net  , or to the conference General Chair, David C. Wilson  . Please report any problems with the online registration system to the conference General Chair, David C. Wilson  .  
 FLAIRS-23 Registration   
  
 FLAIRS Registration  - $500.00  reg  <span style="font-weight:bold">FLAIRS-23 Registration - </span> An initial authorization of your registration charge is made by Google Checkout when you place your order. This holds your registration amount, but does not actually charge the card until your order is verified. You should receive an initial email that your order has been submitted for processing. Your order details will be confirmed by our Conference Administrator as soon as possible. If everything is correct, FLAIRS staff will complete the charge to finalize payment. A followup email should confirm your registration within a week. If not, please email our administrator: jwgerber@earthlink.net.<br/><br/><span style="color:red">Your registration is not complete until your payment has been confirmed by FLAIRS-23 conference staff.</span><br/><br/>&lt;a href="http://www.flairs-23.info"&gt;FLAIRS-23 Conference Page&lt;/a&gt; (opens new window). 
 Registration Type: | Regular (On-site - $500)  
   Student (On-site - $295) 
 Students must send proof of student status - details above. 
 Please provide your title, name, affiliation, and country, as you would  
  like them to appear on your name tag. *  fields are required. 
 Title: |  
 *  Given/First Name: |  
 *  Family/Last Name: |  
 *  Registrant Email: |  
 Affiliation: |  
 City, State/Region, Country: |  
 Authors Only - Paper ID Number(s) - Comma Separated for Multiple 
 Paper Number(s): |  
 Additional details (dietary requirements, etc) 
 Extra Information: |  
  
 FLAIRS-23 Extra Lunch / Reception Tickets   
 Registration includes all social events. Extra social event tickets (for family, partners, etc.) are available. You can make a separate payment for these if you wish.  
  
 Extra Lunch Ticket (one day)  - $30.00  <span style="font-weight:bold">FLAIRS-23 Extra Extra Lunch Ticket - </span> An initial authorization of your registration charge is made by Google Checkout when you place your order. This holds your registration amount, but does not actually charge the card until your order is verified. You should receive an initial email that your order has been submitted for processing. Your order details will be confirmed by our Conference Administrator as soon as possible. If everything is correct, FLAIRS staff will complete the charge to finalize payment. A followup email should confirm your registration within a week. If not, please email our administrator: jwgerber@earthlink.net.<br/><br/><span style="color:red">Your registration is not complete until your payment has been confirmed by FLAIRS-23 conference staff.</span><br/><br/>&lt;a href="http://www.flairs-23.info"&gt;FLAIRS-23 Conference Page&lt;/a&gt; (opens new window). 
 How Many? 

 Extra Opening Reception Ticket  - $65.00  <span style="font-weight:bold">FLAIRS-23 Extra Opening Reception Ticket - </span> An initial authorization of your registration charge is made by Google Checkout when you place your order. This holds your registration amount, but does not actually charge the card until your order is verified. You should receive an initial email that your order has been submitted for processing. Your order details will be confirmed by our Conference Administrator as soon as possible. If everything is correct, FLAIRS staff will complete the charge to finalize payment. A followup email should confirm your registration within a week. If not, please email our administrator: jwgerber@earthlink.net.<br/><br/><span style="color:red">Your registration is not complete until your payment has been confirmed by FLAIRS-23 conference staff.</span><br/><br/>&lt;a href="http://www.flairs-23.info"&gt;FLAIRS-23 Conference Page&lt;/a&gt; (opens new window). 
 How Many? 

 FLAIRS-23 Accommodation, Location, Travel   
 Accommodation   
 FLAIRS room blocks closed.  Conference room blocks at the resort were only available until April 28. You can still book with the resort, but the conference rates will not be available. You can also find accommodation resources in the links under the Location, Travel section below.  
 The 23rd Florida Artificial Intelligence Research Society Conference (FLAIRS-23) will be held May 19-21, 2010 at The Shores Resort & Spa  in Daytona Beach, Florida, USA. FLAIRS-23 has arranged conference rates for a block of rooms with the resort, as follows. Conference blocked rooms in a particular category are available on a first-come, first-served basis until that category of the block is filled. Conference blocked rooms will be available until either the block is full or until April 28, 2010. Conference attendees can phone in reservation requests to the following number: +1 866 934-7467.  
 FLAIRS-23 attendees should identify themselves as an attendee of FLAIRS (Florida Artificial Intelligence Research Society 2010 Conference). At the time reservations are made, The Resort will require a one night deposit of room and tax in the form of a credit card authorization or by mailing in a payment within 5 days of making the reservation. Rooms are not considered confirmed without an advance deposit. Any requests for special room arrangements must be made at the time of reservation.  
 If you book a room at The Shores outside of the conference block (e.g., conference block full, third party consolidator booking), please ensure that you still identify yourself to the resort as a FLAIRS attendee. This helps you, as the resort fee (above the room rate) is waived for FLAIRS-23 attendees, and it counts that booking for FLAIRS toward event contract requirements.  
 Student Room Rates  - Student Room Block is Full, Rates No Longer Available  - FLAIRS-23 has arranged with the conference resort for a very limited number of student rooms. Please note that these rooms have either a limited outside view, or possibly no view at all. The resort has extended these rates in recognition of student need, and they are not available to non-students. In order to qualify for the student room rate, students must provide proof of student status to our Conference Administrator (not to the resort). Documentation should be provided via email or fax to the FLAIRS-23 Conference Administrator, Jeanni Gerber - jwgerber(at)earthlink(dot)net  . Documents attached to email should be in PDF format. Please include FLAIRS-23 and a brief description in the subject line. For faxing documentation, please email Jeanni to notify and send the fax to: +1 407-275-8723. Note that it may take a few days for student confirmation to be processed and added to the checklist at the resort. Student room rates are available to students that have made a full regular registration as a presenting author, but documentation of student status must be provided for the room rate.  
  
 Room Type | Rate 
 Student Room Block is Full, Rates No Longer Available |  
 Student (single) - documented students only  , see above | $89 
 Student (double) - documented students only  , see above | $99 
 Riverview (single/double) | $119 
 Oceanview (single/double) | $135 
 Oceanfront (single/double) | $149 
  
 Room rates quoted above are subject to tax, which is currently 12.5%, to be charged to each guestroom per night. Room rates include 24 hour wireless internet access, all local access and 1-800 calls, in room coffee, in room DVD player and complimentary movie rentals, pool towels, fitness center open 6:00am - 10:00pm, and complimentary self parking.  
 Group rates will be honored for attendees three (3) days before and three (3) days after the formal conference dates, based on availability.  
 FLAIRS-23 has also arranged the following consideration for attendees.  
 Resort fee waiver on room charges. Normally, The Shores charges a resort fee in addition to the room rate. This fee has been waived for FLAIRS-23 attendees, whether or not your room is booked within the conference block. 
  10% discount in Azure (restaurant) & Tiki Bar for breakfast, lunch & dinner. This applies both to registered attendees and to accompanying persons. Please note that this does not apply to room service. 
  A discounted specialty drink price at the Tiki Bar. 
  Resort Fee Clarification  - Some attendees have found discounted resort rates via 3rd party consolidators, such as Expedia and Hotels.com. If you consider such, please ensure that you understand the precise terms and conditions in the fine print. These often trade off significant flexibility (e.g., pre-paid, no cancellation or changes) for the lower rate.  
 In particular, though, we have had a question and clarification about the resort fee in this context. As part of our contract with the resort, the normal resort fee is waived for FLAIRS attendees. This is true, even if the room itself has been booked via a 3rd party, but only if the resort has control over the fee payment. Thus for 3rd party transactions, if the resort fee is already bundled into the consolidator's price, you would be opting-in to that bundled fee as part of the contract with the consolidator. In that case, the resort does not have control over the bundled fee, and the fee can not be retroactively removed by the resort from what was paid to the 3rd party. If the resort fee was not bundled as part of the 3rd party booking, then the resort fee should be waived for FLAIRS attendees, and the resort should not ask for payment of the fee above what was paid for the 3rd party booking.  
 In essence, for 3rd party bookings: if you paid a bundled resort fee to a 3rd party, it can not be removed; if the resort itself is asking you to pay the resort fee above and beyond your 3rd party room booking, then it should be waived for FLAIRS attendees.  

 Location, Travel   
 Daytona Beach, on Florida's Atlantic coast, is famous for its sparkling white beaches, up to 500 feet wide, with blue-green waters. Juan Ponce de León landed near here in 1513, naming the land La Florida for its verdant landscape, while legendarily searching for the Fountain of Youth. The fine, hard-packed sand was used in the early 20th century for automobile racing and land speed records. With natural beauty, sites of historical interest, and a vibrant nightlife, Daytona Beach has become a favorite U.S. vacation destination.  
 Google Map of Conference Location   
 Details on transportation, alternative accommodation, and Daytona Beach activities are available via the Daytona Beach Convention and Visitor's Bureau  , as well as the Daytona Beach Meeting Planners Site  . Highlights include:  
 Getting to Daytona Beach | - Orlando International Airport is located an hour's drive from Daytona Beach, and it is one of the nation's major airports, serviced by many domestic and international carriers. Daytona Beach itself has an international airport, and other options include Jacksonville International and Orlando Sanford. | General Transportation 
  Arriving by Air 
  Driving Directions 
  Shuttle service between Orlando International Airport and Daytona Beach - | DOTS | , | DoShuttle 
  What's On in Daytona Beach | Dining 
  Nightlife 
  Sporting 
  Daytona Beach Hotels | Google Map 
  Daytona Beach Hotels 
  Daytona Beach Hotel Listing Brochure (pdf) 
  Daytona Beach Hotel Map Brochure (pdf) 

 FLAIRS-23 Golf  
 This year's FLAIRS golf outing will be held at the Daytona Beach Beach Golf club  . The course has 36 holes, reasonable rates, inexpensive rentals, and is close to the conference hotel. We hope you can join us!  
 Additional details may be available on Chad Lane's FLAIRS-23 Golf page  .  
 We'll plan to play before and after the conference as close to the following times as possible:  
 Tuesday May 18, 1pm (a morning round on Tuesday is also possible - just indicate your interest) 
  Saturday, May 22, 8am 
  As of 3/30/10, the cost for 18 holes (riding or walking) is $35  and the cost for rentals ranges from $20-$55  . See rates  .  
 Please contact Chad Lane (lane AT ict.usc.edu) as soon as possible if you would like to play.  
 NASCAR Racing Events  
 We did not receive enough stated interest from attendees to contract this as a formal FLAIRS-23 group event. If you are interested in the NASCAR experience, it may be possible for you to make individual arrangements. The ride-along (or even full driving) folk are on-track every Friday/Saturday in May, so the weekend before or just at the end of the conference are both options. Individual reservations can be made via The Richard Petty Driving Experience  (make sure to verify for the Daytona International Speedway, as they do similar experiences at different raceways).  
 The Daytona International Speedway  also has regular tours and attractions, such as the Daytona 500 Experience  .  
 Potential FLAIRS-23 NASCAR Racing Event  - "Experience real life racing thrills by riding shotgun in a 2-seat NASCAR-style stock car driven by a professional instructor for a 3-lap qualifying run." There would be an additional expense for this outing of $135.  We would need a commitment from a block of at least 10-20 attendees in order to make the arrangements. If there is enough interest, we would then make a payment option for the event available on the conference online registration page. If you are interested in a NASCAR racing outing as part of FLAIRS-23, please respond by the end of this week (April 23) to the FLAIRS-23 NASCAR Doodle poll  . Enter at least your proper last name as per your registration, check the times that you would be able to participate, and click the save button, so that we can contact you about the event.   
   
 Instructions for Paper Presenters  
 Each paper presentation room will have an an LCD projector and a laptop running Windows, with PowerPoint and Adobe Acrobat Reader installed. Presenters may use the laptop provided or they may use their own laptop. Presenters who use a conference laptop must bring their presentation in electronic form on either a USB drive or a CDROM.  
 Presenters should arrive at their session early, introduce themselves to the session chair, and verify that their presentation displays correctly. Each presentation is scheduled for 25 minutes, with 20 minutes for speaking and 5 minutes for questions. Session chairs will monitor the time and keep the sessions strictly on schedule.  
 The following link provides guidance on giving a presentation:  
 How to Present a Paper, a Speaker's Guide 
  Instructions for Poster Presenters  
 The Poster Session will be held on Wednesday, May 19, from 10:30am to 12:10pm in the River Room  at the resort's Cloud Level.  
 Please follow these instructions for preparing your posters.  
 Poster preparation will be in the | River Room | from 3:00pm to 9:00pm on Tuesday evening, May 18, and from 8:00am to 10:00am on Wednesday morning, May 19. Please note that FLAIRS personnel will check in periodically, but will not be present in this space continuously during setup times. If issues arise, please contact FLAIRS staff at the registration desk, or leave a message with resort staff to the attention of FLAIRS personnel. 
  Each poster presenter will be provided with a poster board, 4 feet wide by 3 feet high ... | just like this | . Push-pins, glue sticks, and tape will be available to construct your poster prior to the poster session. If you have any needs beyond this, please email David Wilson (davils AT uncc DOT edu) and we'll do our best to accomodate you. 
  Poster presenters are expected to have their posters displayed by the beginning of the session and to be available to discuss their poster for the duration of the session. 
  After the Poster Session  
 After the Poster Session, you may elect to move your poster to the | France Foyer | at the resort's Lobby Level for continued display during the remainder of the conference. Please note that there is limited space, and foyer display will be on a first-come, first served basis. Also note that this space will remain open and generally accessible after conference hours. 
  If you want to keep your poster, you must take it with you, either at the end of the poster session (if not being displayed in the France Foyer) or before the end of the conference (if being displayed in the France Foyer). Any posters remaining in the River Room after the end of the poster session on in the France Foyer after the end of the conference will be discarded. You cannot take the poster boards with you. 
  The following links provide guidance on preparing a poster:  
 Poster Design Guide 
  Effective Scientific Posters 

   Welcome 
  Schedule 
  Presenter Instructions 
  News 
  Dates 
  Invited Speakers 
  Call for Papers 
  Special Tracks 
  People 
  Registration Details 
  Online Registration 
  Accommodation, Location, Travel 
  FLAIRS Golf / Events 
  Attendee Message Board

85. FlAIRS_2 conference:
Enable JavaScript and cookies to continue

86. ESORICS_2 conference:
Computer Security – ESORICS 2023 | springerprofessional.de  Skip to main content    Menü   Fachgebiete Chevron down icon     Chevron up icon        Automobil + Motoren    Bauwesen + Immobilien    Business IT + Informatik    Elektrotechnik + Elektronik    Energie + Nachhaltigkeit    Finance + Banking    Management + Führung    Marketing + Vertrieb    Maschinenbau + Werkstoffe    Versicherung + Risiko      
   
 DE     
 EN      
   
 Bücher       
   
 Zeitschriften       
   
 Themenseiten Chevron down icon     Chevron up icon        Organisationspsychologie    Projektmanagement    Marketing    Smart Manufacturing      

 Weitere Formate Chevron down icon     Chevron up icon        Podcasts    Webinare Technik    Webinare Wirtschaft    Kongresse    Veranstaltungskalender    Awards    MyNewsletter    Firmensuche      

 Jetzt Einzelzugang starten       
   
 Zugang für Unternehmen       
   
 Referenzkunden       
   
 Sustainability in Automotive       

 Gesamtlebenszyklus wird immer wichtiger  
 In der Digitalkonferenz am 5. Dezember 2024 geht es um die wachsende Bedeutung der Kreislaufwirtschaft in der Automobilindustrie und wie nachhaltige Werkstoffe sowie wiederverwendbare Komponenten dazu beitragen können.  

 Springer Professional     
   
   Suche   Suchbegriffe eingeben       Suchen     
  
 Erweiterte Suche      

  Anmelden      

 Springer Professional  

 JAVASCRIPT BENÖTIGT    
 Bitte aktivieren Sie Java-Script in Ihrem Browser, damit Sie alle Vorteile und Funktionen dieser Website nutzen können.   

  INTERNET EXPLORER WIRD NICHT MEHR UNTERSTÜZT    
 Der Internet Explorer wird als Browser seitens Microsoft nicht mehr unterstützt. Für Ihr optimales Nutzungserlebnis wählen Sie bitte Microsoft Edge, Safari, Chrome oder Firefox als Browser.   

 nach oben    

 2024 | Buch  

 Kapitel lesen  Erstes Kapitel lesen     
   
 Computer Security – ESORICS 2023  
 28th European Symposium on Research in Computer Security, The Hague, The Netherlands, September 25–29, 2023, Proceedings, Part IV  
 herausgegeben von: Gene Tsudik, Mauro Conti, Kaitai Liang, Georgios Smaragdakis   
   
 Verlag: Springer Nature Switzerland    
 Buchreihe : Lecture Notes in Computer Science    
 Enthalten in: Springer Professional "Wirtschaft+Technik"  ,   Springer Professional "Technik"  ,   Springer Professional "Wirtschaft"    
   
 Inhaltsverzeichnis    

      Suchen      
 insite    
 SUCHEN    

 Über dieses Buch  
 The four-volume set LNCS 14344-14347 constitutes the refereed proceedings of the 28th European Symposium on Research in Computer Security, ESORICS 2023, which took place in The Hague, The Netherlands, during September 25-29, 2023.  
 The 93 full papers presented in these proceedings were carefully reviewed and selected from 478 submissions. They were organized in topical sections as follows:  
 Part I: Crypto.  
 Part II: Network, web and internet; privacy; and remote.  
 Part III: Attacks; blockchain; and miscellaneous.  
 Part IV: Machine learning; software and systems security.  

 MyTopic Alert   
  Loggen Sie sich ein, um Ihre Alerts zu aktualisieren und Neue anzulegen.  

 Anzeige   

 Inhaltsverzeichnis  
 Frontmatter  
  
 Machine Learning  
 Frontmatter  
  
 Reinforcement Learning Approach to Generate Zero-Dynamics Attacks on Control Systems Without State Space Models  
  Abstract   
 Stealthy attacks on control systems are bound to go unnoticed, which makes them a severe threat to critical infrastructure such as power systems, smart grids, and vehicular networks. This paper investigates a subset of stealthy attacks known as zero-dynamics-based stealthy attacks. While previous works on zero-dynamics attacks have highlighted the necessity of highly accurate knowledge of the system’s state space for generating attack signals, our study requires none. We propose a deep reinforcement learning based attacker to generate attack signals without prior knowledge of the system’s state space. We develop several attackers and detectors iteratively until the attacker and detectors no longer improve. In addition, we also show that the reinforcement learning based attacker successfully executes an attack in the same manner as the theoretical attacker described in previous literature.   
   
 Bipin Paudel, George Amariucai   

 Secure Split Learning Against Property Inference, Data Reconstruction, and Feature Space Hijacking Attacks  
  Abstract   
 Split learning of deep neural networks (SplitNN) has provided a promising solution to learning jointly for the mutual interest of a guest and a host, which may come from different backgrounds, holding features partitioned vertically. However, SplitNN creates a new attack surface for the adversarial participant. By investigating the adversarial effects of highly threatening attacks, including property inference, data reconstruction, and feature hijacking attacks, we identify the underlying vulnerability of SplitNN. To protect SplitNN, we design a privacy-preserving tunnel for information exchange. The intuition is to perturb the propagation of knowledge in each direction with a controllable unified solution. To this end, we propose a new activation function named R 3  eLU, transferring private smashed data and partial loss into randomized responses. We give the first attempt to secure split learning against three threatening attacks and present a fine-grained privacy budget allocation scheme. The analysis proves that our privacy-preserving SplitNN solution provides a tight privacy budget, while the experimental results show that our solution performs better than existing solutions in most cases and achieves a good tradeoff between defense and model usability.   
   
 Yunlong Mao, Zexi Xin, Zhenyu Li, Jue Hong, Qingyou Yang, Sheng Zhong   

 The Power of MEME: Adversarial Malware Creation with Model-Based Reinforcement Learning  
  Abstract   
 Due to the proliferation of malware, defenders are increasingly turning to automation and machine learning as part of the malware detection toolchain. However, machine learning models are susceptible to adversarial attacks, requiring the testing of model and product robustness. Meanwhile, attackers also seek to automate malware generation and evasion of antivirus systems, and defenders try to gain insight into their methods. This work proposes a new algorithm that combines Malware Evasion and Model Extraction (MEME) attacks. MEME uses model-based reinforcement learning to adversarially modify Windows executable binary samples while simultaneously training a surrogate model with a high agreement with the target model to evade. To evaluate this method, we compare it with two state-of-the-art attacks in adversarial malware creation, using three well-known published models and one antivirus product as targets. Results show that MEME outperforms the state-of-the-art methods in terms of evasion capabilities in almost all cases, producing evasive malware with an evasion rate in the range of 32–73%. It also produces surrogate models with a prediction label agreement with the respective target models between 97–99%. The surrogate could be used to fine-tune and improve the evasion rate in the future.   
   
 Maria Rigaki, Sebastian Garcia   

 FLGuard: Byzantine-Robust Federated Learning via Ensemble of Contrastive Models  
  Abstract   
 Federated Learning (FL) thrives in training a global model with numerous clients by only sharing the parameters of their local models trained with their private training datasets. Therefore, without revealing the private dataset, the clients can obtain a deep learning (DL) model with high performance. However, recent research proposed poisoning attacks that cause a catastrophic loss in the accuracy of the global model when adversaries, posed as benign clients, are present in a group of clients. Therefore, recent studies suggested byzantine-robust FL methods that allow the server to train an accurate global model even with the adversaries present in the system. However, many existing methods require the knowledge of the number of malicious clients or the auxiliary (clean) dataset or the effectiveness reportedly decreased hugely when the private dataset was non-independently and identically distributed (non-IID). In this work, we propose FLGuard, a novel byzantine-robust FL method that detects malicious clients and discards malicious local updates by utilizing the contrastive learning technique, which showed a tremendous improvement as a self-supervised learning method. With contrastive models, we design FLGuard as an ensemble scheme to maximize the defensive capability. We evaluate FLGuard extensively under various poisoning attacks and compare the accuracy of the global model with existing byzantine-robust FL methods. FLGuard outperforms the state-of-the-art defense methods in most cases and shows drastic improvement, especially in non-IID settings. https://​github.​com/​201younghanlee/​FLGuard    .   
   
 Younghan Lee, Yungi Cho, Woorim Han, Ho Bae, Yunheung Paek   

 Machine Learning for SAST: A Lightweight and Adaptable Approach  
  Abstract   
 In this paper, we summarize a novel method for machine learning-based static application security testing (SAST), which was devised as part of a larger study funded by Germany’s Federal Office for Information Security (BSI). SAST describes the practice of applying static analysis techniques to program code on the premise of detecting security-critical software defects early during the development process. In the past, this was done by using rule-based approaches, where the program code is checked against a set of rules that define some pattern, representative of a defect. Recently, an increasing influx of publications can be observed that discuss the application of machine learning methods to this problem. Our method poses a lightweight approach to this concept, comprising two main contributions: Firstly, we present a novel control-flow based embedding method for program code. Embedding the code into a metric space is a necessity in order to apply machine learning techniques to the problem of SAST. Secondly, we describe how this method can be applied to generate expressive, yet simple, models of some unwanted behavior. We have implemented these methods in a prototype for the C and C++ programming languages. Using tenfold cross-validation, we show that our prototype is capable of effectively predicting the location and type of software defects in previously unseen code.   
   
 Lorenz Hüther, Karsten Sohr, Bernhard J. Berger, Hendrik Rothe, Stefan Edelkamp   

 Two Models are Better Than One: Federated Learning is Not Private for Google GBoard Next Word Prediction  
  Abstract   
 In this paper we present new attacks against federated learning when used to train natural language text models. We illustrate the effectiveness of the attacks against the next word prediction model used in Google’s GBoard app, a widely used mobile keyboard app that has been an early adopter of federated learning for production use. We demonstrate that the words a user types on their mobile handset, e.g. when sending text messages, can be recovered with high accuracy under a wide range of conditions and that counter-measures such a use of mini-batches and adding local noise are ineffective. We also show that the word order (and so the actual sentences typed) can be reconstructed with high fidelity. This raises obvious privacy concerns, particularly since GBoard is in production use.   
   
 Mohamed Suliman, Douglas Leith   

 Privacy-Preserving Split Learning via Pareto Optimal Search  
  Abstract   
 With the rapid development of deep learning, it has become a trend for clients to perform split learning with an untrusted cloud server. The models are split into the client-end and server-end with features transmitted in between. However, features are typically vulnerable to attribute inference attacks to the input data. Most existing schemes target protecting data privacy at the inference, but not at the training stage. It remains a significant challenge to remove private information from the features while accomplishing the learning task with high utility.   
 We found the fundamental issue is that utility and privacy are mostly conflicting tasks, which are hardly handled by the linear scalarization commonly used in previous works. Thus we resort to the multi-objective optimization (MOO) paradigm, seeking a Pareto optimal solution according to the utility and privacy objectives. The privacy objective is formulated by the mutual information between feature and sensitive attributes and is approximated by Gaussian models. In each training iteration, we select a direction that balances the dual goal of moving toward the Pareto Front and toward the users’ preference while keeping the privacy loss under the preset threshold. With a theoretical guarantee, the privacy of sensitive attributes is well preserved throughout training and at convergence. Experimental results on image and tabular datasets reveal our method is superior to the state-of-the-art in terms of utility and privacy.   
   
 Xi Yu, Liyao Xiang, Shiming Wang, Chengnian Long   

 Security of NVMe Offloaded Data in Large-Scale Machine Learning  
  Abstract   
 Large-scale machine learning (LSML) models, such as the GPT-3.5 that powers the well-known ChatGPT chatbot, have revolutionized our perception of AI by enabling more natural, context-aware, and interactive experiences. Yet, training such large models nowadays requires multiple months of computation on expensive hardware, including GPUs, orchestrated by specialized software, so-called LSML frameworks. Due to the model size, neither the on-device memory of GPUs nor the RAM is capable of holding all parameters simultaneously during training. Therefore, LSML frameworks dynamically offload data to NVMe storage and reload the information just in time.   
 In this paper, we investigate the security of NVMe offloaded data in LSML against poisoning attacks and present NVMevade  , the first untargeted  poisoning attack on NVMe offloads. NVMevade allows the attacker to reduce the model performance, as well as slow down or even stall the training process. For instance, we demonstrate that an attacker can achieve a stealthy increase of 182% in training time, thus, inflating costs for model training. To address this vulnerability, we develop NVMensure  , the first defense that guarantees the integrity and freshness of NVMe offloaded data in LSML. By conducting a large-scale study, we demonstrate the robustness of NVMensure against poisoning attacks and explore runtime efficiency and security trade-offs it can provide. We tested 22 different NVMensure configurations and report an overhead between 9.8% and 64.2%, depending on the selected security level. We also note that NVMensure is going to be effective against targeted  poisoning attacks which do not exist yet but might be developed in the future.   
   
 Torsten Krauß, Raphael Götz, Alexandra Dmitrienko   

 PassGPT: Password Modeling and (Guided) Generation with Large Language Models  
  Abstract   
 Large language models (LLMs) successfully model natural language from vast amounts of text without the need for explicit supervision. In this paper, we investigate the efficacy of LLMs in modeling passwords. We present PassGPT  , an LLM trained on password leaks for password generation. PassGPT outperforms existing methods based on generative adversarial networks (GAN) by guessing twice as many previously unseen  passwords. Furthermore, we introduce the concept of guided password generation  , where we leverage PassGPT sampling procedure to generate passwords matching arbitrary constraints, a feat lacking in current GAN-based strategies. Lastly, we conduct an in-depth analysis of the entropy and probability distribution that PassGPT defines over passwords and discuss their use in enhancing existing password strength estimators.   
   
 Javier Rando, Fernando Perez-Cruz, Briland Hitaj   

 Learning Type Inference for Enhanced Dataflow Analysis  
  Abstract   
 Statically analyzing dynamically-typed code is a challenging endeavor, as even seemingly trivial tasks such as determining the targets of procedure calls are non-trivial without knowing the types of objects at compile time. Addressing this challenge, gradual typing  is increasingly added to dynamically-typed languages, a prominent example being TypeScript that introduces static typing to JavaScript. Gradual typing improves the developer’s ability to verify program behavior, contributing to robust, secure and debuggable programs. In practice, however, users only sparsely annotate types directly. At the same time, conventional type inference faces performance-related challenges as program size grows. Statistical techniques based on machine learning offer faster inference, but although recent approaches demonstrate overall improved accuracy, they still perform significantly worse on user-defined types than on the most common built-in types. Limiting their real-world usefulness even more, they rarely integrate with user-facing applications.   
 We propose CodeTIDAL5, a Transformer-based model trained to reliably predict type annotations. For effective result retrieval and re-integration, we extract usage slices from a program’s code property graph. Comparing our approach against recent neural type inference systems, our model outperforms the current state-of-the-art by 7.85% on the ManyTypes4TypeScript benchmark, achieving 71.27% accuracy overall. Furthermore, we present JoernTI, an integration of our approach into Joern, an open source static analysis tool, and demonstrate that the analysis benefits from the additional type information. As our model allows for fast inference times even on commodity CPUs, making our system available through Joern leads to high accessibility and facilitates security research.   
   
 Lukas Seidel, Sedick David Baker Effendi, Xavier Pinho, Konrad Rieck, Brink van der Merwe, Fabian Yamaguchi   

 Efficient Pruning for Machine Learning Under Homomorphic Encryption  
  Abstract   
 Privacy-preserving machine learning (PPML) solutions are gaining widespread popularity. Among these, many rely on homomorphic encryption (HE) that offers confidentiality of the model and the data, but at the cost of large latency and memory requirements. Pruning neural network (NN) parameters improves latency and memory in plaintext ML but has little impact if directly applied to HE-based PPML.   
 We introduce a framework called HE-PEx  that comprises new pruning methods, on top of a packing technique called tile tensors, for reducing the latency and memory of PPML inference. HE-PEx uses permutations  to prune additional ciphertexts, and expansion  to recover inference loss. We demonstrate the effectiveness of our methods for pruning fully-connected and convolutional layers in NNs on PPML tasks, namely, image compression, denoising, and classification, with autoencoders, multilayer perceptrons (MLPs) and convolutional neural networks (CNNs).   
 We implement and deploy our networks atop a framework called HElayers, which shows a 10–35%  improvement in inference speed and a 17–35%  decrease in memory requirement over the unpruned network, corresponding to 33–65%  fewer ciphertexts, within a 2.5  % degradation in inference accuracy over the unpruned network. Compared to the state-of-the-art pruning technique for PPML, our techniques generate networks with 70  % fewer ciphertexts, on average, for the same degradation limit.   
   
 Ehud Aharoni, Moran Baruch, Pradip Bose, Alper Buyuktosunoglu, Nir Drucker, Subhankar Pal, Tomer Pelleg, Kanthi Sarpatwar, Hayim Shaul, Omri Soceanu, Roman Vaculin   

 Software and Systems Security  
 Frontmatter  
  
 SoK: A Tale of Reduction, Security, and Correctness - Evaluating Program Debloating Paradigms and Their Compositions  
  Abstract   
 Automated software debloating of program source or binary code has tremendous potential to improve both application performance and security. Unfortunately, measuring and comparing the effectiveness of various debloating methods is challenging due to the absence of a universal benchmarking platform that can accommodate diverse approaches. In this paper, we first present \({\textsc {DebloatBench}}_{\textrm{A}}\)  ( Debloat  ing bench  mark for a  pplications), an extensible and sustainable benchmarking platform that enables comparison of different research techniques. Then, we perform a holistic comparison of the techniques to assess the current progress.   
 In the current version, we integrated four software debloating research tools: Chisel  , Occam  , Razor  , and Piece-wise  . Each tool is representative of a different class of debloaters: program source, compiler intermediate representation, executable binary, and external library. Our evaluation revealed interesting insights (i.e., hidden and explicit tradeoffs) about existing techniques, which might inspire future research. For example, all the binaries produced by Occam  and Piece-Wise  were correct, while Chisel  significantly outperformed others in binary size and Gadget class reductions. In a first-of-its-kind composition, we also combined multiple debloaters to debloat a single binary. Our performance evaluation showed that, in both ASLR-proof and Turing-complete gadget expressively cases, several compositions (e.g., Chisel  - Occam  , Chisel  - Occam  - Razor  ) significantly outperformed the best-performing single tool (i.e., Chisel  ).   
   
 Muaz Ali, Muhammad Muzammil, Faraz Karim, Ayesha Naeem, Rukhshan Haroon, Muhammad Haris, Huzaifah Nadeem, Waseem Sabir, Fahad Shaon, Fareed Zaffar, Vinod Yegneswaran, Ashish Gehani, Sazzadur Rahaman   

 On the (In)Security of Manufacturer-Provided Remote Attestation Frameworks in Android  
  Abstract   
 To provide a tamper-proof mechanism for mobile apps to check the integrity of the device and their own code/data, Android phone manufacturers have introduced Manufacturer-provided Android Remote Attestation (MARA) frameworks. The MARA framework helps an app conduct a series of integrity checks, signs the check results, and sends them to remote servers for a remote attestation. Nonetheless, we observe that real-world MARA frameworks often adopt two implementations of integrity check (hardware-based and software-based) for compatibility consideration, and this allows an attacker to easily conduct a downgrade attack to force the app to utilize the software-based integrity check and forge checking results, even if the Android device is able to employ hardware-supported remote attestation securely. We demonstrate our MARA bypass approach against MARA frameworks (i.e., Google SafetyNet  and Huawei SafetyDetect  ) on real Android devices, and design an automated measurement pipeline to analyze 35,245 popular Android apps, successfully attacking all 104 apps that use these MARA services, including well-known apps and games such as TikTok Lite  , Huawei Wallet  , and Pokémon GO  . Our study reveals the significant risks against MARA frameworks in use.   
   
 Ziyi Zhou, Xuangan Xiao, Tianxiao Hou, Yikun Hu, Dawu Gu   

 DScope: To Reliably and Securely Acquire Live Data from Kernel-Compromised ARM Devices  
  Abstract   
 Live data acquisition from a mobile device controlled by a corrupted kernel is challenging as the adversary can block data reporting from the inside and also sabotage external I/O interactions. This paper proposes DScope  as a reliable live data acquisition system for ARM devices without trusting their kernels. It ensures that a device user can always launch DScope  to securely extract the needed virtual memory data when the device is under attack. Besides its reliability, DScope  also preserves kernel semantic and support user-customized acquisition routines. We have built a prototype of DScope  on a Raspberry Pi 4 development board and have also tested DScope  ’s reliability against various forms of denial of service attacks. Our experiments show that a user can dynamically import data acquisition routines to the device to extract kernel objects and runtime stacks from an attack scene or a kernel crashing site.   
   
 Zhe Chen, Haiqing Qiu, Xuhua Ding   

 SplITS: Split Input-to-State Mapping for Effective Firmware Fuzzing  
  Abstract   
 Ability to test firmware on embedded devices is critical to discovering vulnerabilities prior to their adversarial exploitation. State-of-the-art automated testing methods rehost firmware in emulators and attempt to facilitate inputs from a diversity of methods (interrupt driven, status polling) and a plethora of devices (such as modems and GPS units). Despite recent progress to tackle peripheral input generation challenges in rehosting, a firmware’s expectation of multi-byte magic values supplied from peripheral inputs for string operations still pose a significant roadblock. We solve the impediment posed by multi-byte magic strings in monolithic firmware. We propose feedback mechanisms  for input-to-state mapping and retaining seeds for targeted replacement mutations with an efficient method to solve multi-byte comparisons. The feedback allows an efficient  search over a combinatorial solution-space  . We evaluate our prototype implementation, SplITS  , with a diverse set of 21 real-world monolithic firmware binaries used in prior works, and 3 new  binaries from popular open source projects. SplITS  automatically solves 497% more multi-byte magic strings guarding further execution to uncover new code and bugs compared to state-of-the-art. In 11 of the 12 real-world firmware binaries with string comparisons, including those extensively  analyzed by prior works, SplITS  outperformed, statistically significantly. We observed up to 161% increase in blocks covered and discovered 6 new bugs  that remained guarded  by string comparisons. Significantly, deep and difficult to reproduce bugs guarded by comparisons, identified in prior work, were found consistently.   
   
 Guy Farrelly, Paul Quirk, Salil S. Kanhere, Seyit Camtepe, Damith C. Ranasinghe   

 IPS: Software-Based Intrusion Prevention for Bare-Metal Embedded Systems  
  Abstract   
 Many embedded systems are low-cost bare-metal systems where the firmware executes directly on hardware without an OS. Bare-metal systems typically lack many security primitives, including the well-known Address Space Layout Randomization (ASLR) and Data Execution Prevention (DEP), and their integrity can be compromised using a single vulnerability. Proposed defenses have not yet been deployed due to their requirements for firmware source code availability or hardware modifications. We present \(\mu \)  IPS, the first Intrusion Prevention System (IPS) for bare-metal systems that requires no modification to the hardware and can be applied to stripped binaries without access to the source code. \(\mu \)  IPS enforces fine-grained control-flow protection targeting both forward and backward edges. To achieve that, \(\mu \)  IPS introduces a novel Trusted Execution Environment (TEE) to provide memory isolation at runtime while handling the hardware limitations of bare-metal systems. \(\mu \)  IPS also provides Remote Integrity Check (RIC) mechanism to validate the integrity of control-flow protection policies and the TEE code, and secure Over-The-Air (OTA) update mechanism to deploy the updated policies. We evaluate \(\mu \)  IPS against ten  real-world representative firmware. \(\mu \)  IPS imposes a \(31\%\)  execution overhead on average on binary instrumented firmware. \(\mu \)  IPS reduces exposure to Return-Oriented Programming (ROP) attacks by \(99\%\)  .   
   
 Luca Degani, Majid Salehi, Fabio Martinelli, Bruno Crispo   

 Aion: Secure Transaction Ordering Using TEEs  
  Abstract   
 In state machine replication (SMR), preventing reordering attacks by ensuring a high degree of fairness when ordering commands requires that clients broadcast their commands to all processes. This is impractical due to the impact on scalability, and thus it discourages the adoption of a fair ordering of commands. Alternative approaches to order-fairness allow clients do send their commands to only one process, but provide a weaker notion of order-fairness. In particular, they disadvantage isolated processes. In this paper, we introduce Aion, a set of order-fair protocols for SMR. We first leverage trusted execution environments (TEEs) to enable processes to compute the times when commands are broadcast by their issuers. We then integrate this information into existing consensus protocols to devise order-fair SMR protocols that are both leader-based and leaderless. To realize order-fairness, Aion only requires that a client sends its commands to a single process, while at the same time enabling precise ordering during synchronous periods.   
   
 Pouriya Zarbafian, Vincent Gramoli   

 Towards a Privacy-Preserving Attestation for Virtualized Networks  
  Abstract   
 TPM remote attestation allows to verify the integrity of the boot sequence of a remote device. Deep Attestation  extends that concept to virtualized platforms by allowing to attest virtual components, the hypervisor, and the link between them. In multi-tenant environments, deep attestation solution offer security and/or efficiency, but no privacy.   
 In this paper, we propose a privacy preserving TPM-based deep attestation solution in multi-tenant environments, which provably guarantees: (i) Inter-tenant privacy  : a tenant is cannot know whether other VMs outside its own are hosted on the same machine; (ii) Configuration hiding  : the hypervisor’s configuration, used during attestation, remains hidden from the tenants; and (iii) Layer linking  : tenants can link hypervisors with the VMs, thus obtaining a guarantee that the VMs are running on specific hardware. We also implement our scheme and show that it is efficient despite the use of complex cryptographic tools.   
   
 Ghada Arfaoui, Thibaut Jacques, Marc Lacoste, Cristina Onete, Léo Robert   

 An Empirical Study of the Imbalance Issue in Software Vulnerability Detection  
  Abstract   
 Vulnerability detection is crucial to protect software security. Nowadays, deep learning (DL) is the most promising technique to automate this detection task, leveraging its superior ability to extract patterns and representations within extensive code volumes. Despite its promise, DL-based vulnerability detection remains in its early stages, with model performance exhibiting variability across datasets. Drawing insights from other well-explored application areas like computer vision, we conjecture that the imbalance issue (the number of vulnerable code is extremely small) is at the core of the phenomenon. To validate this, we conduct a comprehensive empirical study involving nine open-source datasets and two state-of-the-art DL models. The results confirm our conjecture. We also obtain insightful findings on how existing imbalance solutions perform in vulnerability detection. It turns out that these solutions perform differently as well across datasets and evaluation metrics. Specifically: 1) Focal loss  is more suitable to improve the precision, 2) mean false error  and class-balanced loss  encourages the recall, and 3) random over-sampling  facilitates the F1-measure. However, none of them excels across all metrics. To delve deeper, we explore external influences on these solutions and offer insights for developing new solutions.   
   
 Yuejun Guo, Qiang Hu, Qiang Tang, Yves Le Traon   

 AttnCall: Refining Indirect Call Targets in Binaries with Attention  
  Abstract   
 Accurate Control Flow Graphs are crucial for effective binary program analysis, while solving indirect function call targets is its major challenge. Existing static analysis methods heavily rely on domain-specific patterns, resulting in an abundance of false positive edges due to limited expert knowledge. Concurrently, learning-based approaches often depend on heuristic analysis during the code representation stage, which prevents the model from fully comprehending program semantics.   
 To address these limitations, this paper presents AttnCall, a novel neural network learning framework that leverages the attention mechanism to automatically learn the matching relationship between function callsites and callees’ context semantics. AttnCall refines the identification of indirect call targets through the learned matching patterns, eliminating the drawbacks of existing techniques. Additionally, we propose an end-to-end code representation scheme that effectively embeds the semantics of callsites and callees without relying on heuristic rules.   
 The evaluation of AttnCall focuses on the task of predicting indirect function call targets. The results demonstrate that AttnCall surpasses state-of-the-art approaches, achieving 31.4% higher precision and 5% higher recall. Moreover, AttnCall enhances model interpretability, allowing for a better understanding of the underlying analysis process.   
   
 Rui Sun, Yinggang Guo, Zicheng Wang, Qingkai Zeng   

 Acumen: Analysing the Impact of Organisational Change on Users’ Access Entitlements  
  Abstract   
 Planned organisational changes are frequent occurrences in large enterprises due to the dynamicity of employees’ roles, evolution of teams, units and divisions as a result of mergers, demergers, and general restructuring. To safeguard system security and employees’ productivity, it is paramount for system administrators to keep track and remediate all users’ changing access needs. This paper studies the impact of (planned) organisational changes on the access privileges of employees in line with access control policies. Our solution, Acumen  , uses binary decision diagrams (BDDs) to encode XACML policies via a Boolean function conversion, and performs semantic interpretation of organisational changes for analysis over the BDDs. The BDD structure is versatile, enabling succinct representation as well as effective and efficient symbolic operations and visualisation. We demonstrate the efficacy of Acumen  with two data sets via a series of case studies on: a) a commonly used benchmark access control policy data in the literature; and b) a proprietary data set containing planned organisational changes in a large real-world financial institution with a dynamic business environment. The empirically results show Acumen  to be effective and efficient.   
   
 Selasi Kwashie, Wei Kang, Sandeep Santhosh Kumar, Geoff Jarrad, Seyit Camtepe, Surya Nepal   

 Backmatter  

 Metadaten   

 Titel  Computer Security – ESORICS 2023    
 herausgegeben von  Gene Tsudik  
  Mauro Conti  
  Kaitai Liang  
  Georgios Smaragdakis  
     
 Copyright-Jahr  2024    
 Verlag  Springer Nature Switzerland     
   
 Electronic ISBN  978-3-031-51482-1    
 Print ISBN  978-3-031-51481-4    
 DOI  https://doi.org/10.1007/978-3-031-51482-1     

 Premium Partner  

 » zur Fachgebietsseite Business IT + Informatik 

 Bildnachweise  Rittal/© Rittal, NTT Data/© NTT Data, Wildix/© Wildix, Ceyoniq Technology GmbH/© Ceyoniq Technology GmbH, arvato Systems GmbH/© arvato Systems GmbH, Ninox Software GmbH/© Ninox Software GmbH, Everyday Software S.L./© Everyday Software S.L., Redgate/© Redgate, CELONIS Labs GmbH, DC-Datacenter-Group GmbH/© DC-Datacenter-Group GmbH, all for one/© all for one, G Data CyberDefense/© G Data CyberDefense, FAST LTA/© FAST LTA   

 Weitere Formate | Podcasts 
  Webinare Technik 
  Webinare Wirtschaft 
  Kongresse 
  Veranstaltungskalender 
  Awards 
  MyNewsletter 
  Firmensuche 
  Fachgebiete | Automobil + Motoren 
  Bauwesen + Immobilien 
  Business IT + Informatik 
  Elektrotechnik + Elektronik 
  Energie + Nachhaltigkeit 
  Finance + Banking 
  Management + Führung 
  Marketing + Vertrieb 
  Maschinenbau + Werkstoffe 
  Versicherung + Risiko 
  Bücher 
  Zeitschriften 
  Themenseiten | Organisationspsychologie 
  Projektmanagement 
  Marketing 
  Smart Manufacturing 
  Jetzt Einzelzugang starten 
  Zugang für Unternehmen 
  Referenzkunden 
  Sustainability in Automotive 
   MyNewsletter 
  Firmensuche 

  Über uns:     
  
 In eigener Sache    Das Team    Redaktionelles Leitbild    Hilfe    Referenzen      
 Unsere Produkte:     
  
 Einzelzugang    Zugang für Unternehmen    PatentFit    MyAlerts    Professional Book Archive    MyNewsletter    Carl Hanser Verlag - Bücher    KI-gestützte Suche      
 Rechtliche Informationen:     
  
 Impressum    AGB    Datenschutzerklärung    Cookies    Cookies verwalten    Verträge hier kündigen    Zahlungsarten      
 Weiterführende Links:     
  
 RSS-Feeds    Social Media    Mediadaten    Corporate Solutions    Whitepaper    Gabler Wirtschaftslexikon    Gabler Banklexikon    Versicherungsmagazin      
   
 Springer Nature Logo    © Springer Fachmedien Wiesbaden GmbH  
   
 Version: 0.3944.0

87. FlAIRS_3 conference:
Skip to main content 
  Skip to primary sidebar 
    AAAI  
 Association for the Advancement of Artificial Intelligence  
   
  Menu  AAAI  
 Association for the Advancement of Artificial Intelligence 

  Menu   About AAAI | News 
  Officers and Committees 
  Staff 
  Bylaws 
  Awards | Fellows Program 
  Classic Paper Award 
  Dissertation Award 
  Distinguished Service Award 
  Allen Newell Award 
  Outstanding Paper Award 
  Award for Artificial Intelligence for the Benefit of Humanity 
  Feigenbaum Prize 
  Patrick Henry Winston Outstanding Educator Award 
  Engelmore Award 
  AAAI ISEF Awards 
  Senior Member Status 
  Conference Awards 
  Partnerships 
  Resources 
  Mailing Lists 
  Past Presidential Addresses 
  Presidential Panel on Long-Term AI Futures 
  Past Policy Reports | The Role of Intelligent Systems in the National Information Infrastructure (1995) 
  A Report to ARPA on Twenty-First Century Intelligent Systems (1994) 
  Logos 
  Ethics & Diversity 
  Conferences & Symposia | AAAI Conference 
  AIES AAAI/ACM 
  AIIDE 
  EAAI 
  HCOMP 
  IAAI 
  ICWSM 
  Spring Symposia 
  Summer Symposia 
  Fall Symposia 
  Code of Conduct for Conferences and Events 
  Publications | AI Magazine 
  Conference Proceedings 
  AAAI Publication Policies & Guidelines 
  Request to Reproduce Copyrighted Materials 
  Contribute 
  Order Proceedings 
  AI Magazine 
  Membership | Member Login 
  Chapters 
   AI Jobs 
  AITopics 
  Contact 
   Twitter 
  Facebook 
  LinkedIn 

 Home  > Proceedings  / Proceedings of the Twenty- Seventh International Florida Artificial Intelligence Research Society Conference (FLAIRS 2014)  > All Papers    
 Florida AI Research Society  
  June 30, 2023   
  
 Authors  
 William Eberle  
 Chutima Boonthum-Denecke  

 Track:  
 General Conference  

 Downloads:  
 Download PDF    

 Topics: FLAIRS    

 Primary Sidebar  

 We use cookies on our website to give you the most relevant experience by remembering your preferences and repeat visits. By clicking “Accept All”, you consent to the use of ALL the cookies. However, you may visit "Cookie Settings" to provide a controlled consent.   
 Cookie Settings  Accept All    

 Manage consent    
    Close   Privacy Overview  
 This website uses cookies to improve your experience while you navigate through the website. Out of these, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the website. We also use third-party cookies that help us analyze and understand how you use this website. These cookies will be stored in your browser only with your consent. You also have the option to opt-out of these cookies. But opting out of some of these cookies may affect your browsing experience.   

 Necessary   Necessary    
 Always Enabled    
 Necessary cookies are absolutely essential for the website to function properly. These cookies ensure basic functionalities and security features of the website, anonymously.  
 Cookie | Duration | Description 
 cookielawinfo-checkbox-analytics | 11 months | This cookie is set by GDPR Cookie Consent plugin. The cookie is used to store the user consent for the cookies in the category "Analytics". 
 cookielawinfo-checkbox-functional | 11 months | The cookie is set by GDPR cookie consent to record the user consent for the cookies in the category "Functional". 
 cookielawinfo-checkbox-necessary | 11 months | This cookie is set by GDPR Cookie Consent plugin. The cookies is used to store the user consent for the cookies in the category "Necessary". 
 cookielawinfo-checkbox-others | 11 months | This cookie is set by GDPR Cookie Consent plugin. The cookie is used to store the user consent for the cookies in the category "Other. 
 cookielawinfo-checkbox-performance | 11 months | This cookie is set by GDPR Cookie Consent plugin. The cookie is used to store the user consent for the cookies in the category "Performance". 
 viewed_cookie_policy | 11 months | The cookie is set by the GDPR Cookie Consent plugin and is used to store whether or not user has consented to the use of cookies. It does not store any personal data. 

 Functional   Functional     
   
 Functional cookies help to perform certain functionalities like sharing the content of the website on social media platforms, collect feedbacks, and other third-party features.   

 Performance   Performance     
   
 Performance cookies are used to understand and analyze the key performance indexes of the website which helps in delivering a better user experience for the visitors.   

 Analytics   Analytics     
   
 Analytical cookies are used to understand how visitors interact with the website. These cookies help provide information on metrics the number of visitors, bounce rate, traffic source, etc.   

 Advertisement   Advertisement     
   
 Advertisement cookies are used to provide visitors with relevant ads and marketing campaigns. These cookies track visitors across websites and collect information to provide customized ads.   

 Others   Others     
   
 Other uncategorized cookies are those that are being analyzed and have not been classified into a category as yet.   

 SAVE & ACCEPT

88. FMCAD_0 conference:
Formal Methods in  
  Computer-Aided Design  
  October 23-27, 2023   
  Ames, Iowa, USA    
   
 Home  Important Dates  Call for Papers  Registration   Invited Talks and Tutorials  Program Committee  Organizing Committee  Venue, Travel & Accommodation  Program   Accepted Papers   Awards  Proceedings  Student Forum  Sponsors  FMCAD.org  Contact   

 Formal Methods in Computer-Aided Design 2023  
 FMCAD 2023 will be held in Ames, Iowa, USA, from October 23 to October 27, 2023.  
 Chairs:  
 Kristin Y. Rozier | , Iowa State University 
  Alexander Nadel | , Intel Corporation and Technion 
  Important Dates  
  
 Abstract Submission:   
 May 15, 2023  ( extended   from May 8, 2023)  
  Paper Submission:   
 May 22, 2023  ( extended   from May 15, 2023)  
  Author Response:   
 June 29 - July 2, 2023  ( postponed   from June 22 - June 25, 2023)  
  Author Notification:   
 July 8, 2023  ( postponed   from July 1, 2023 )  
  Camera-Ready Version:   
 August 14, 2023  
  Early Registration Deadline:   
 September 28, 2023  
  Registration Deadline:   
 October 10, 2023  
  Conference Dates:   
 October 23 - October 27, 2023  
   
 All deadlines are 11:59 pm AoE (Anywhere on Earth)  
 VSTTE Dates:   
 Regular Program:   
 October 23, 2023  
  FMCAD/VSTTE Tutorial Day:   
 October 24, 2023  
   
 FMCAD Dates:   
  
 FMCAD/VSTTE Tutorial Day:   
 October 24, 2023  
  Regular Program:   
 October 25 - October 27, 2023  
   
 FMCAD will go all day on Friday - October 27, participants should not plan to leave until Saturday - October 28.  
 Call for Papers  
 https://fmcad.org/FMCAD23/cfp/   
 Co-located Events  
 VSTTE 2023 | – 15th Working Conference on Verified Software: Theories, Tools, and Experiments, October 23–24, 2023 
  Student Forum  
 Continuing the tradition of the previous years, FMCAD 2023 is hosting a Student Forum  that provides a platform for graduate students at any career stage to introduce their research to the wider Formal Methods community, and solicit feedback.  
 About FMCAD  
 FMCAD 2023 is the twenty-third in a series of conferences on the theory and applications of formal methods in hardware and system verification. FMCAD provides a leading forum to researchers in academia and industry for presenting and discussing groundbreaking methods, technologies, theoretical results, and tools for reasoning formally about computing systems. FMCAD covers formal aspects of computer-aided system design including verification, specification, synthesis, and testing.  
 FMCAD was first held in 1996, and was a bi-annual conference until 2006, when the FMCAD and CHARME conferences merged into a single annual conference. Before merging, FMCAD was held in the United States on even years and its sister conference, CHARME, was held in Europe on odd years. Since 2006, the FMCAD conference has been held annually at various international venues.  
 IEEE  is a technical co-sponsor of FMCAD 2023.  

 back to top

89. FDL_0 conference:
The requested URL was rejected. Please consult with your administrator.  
   
  Your support ID is: < 8203162004125776850>  
   
  [Go Back]

90. FMCAD_1 conference:
FMCAD (Formal Methods in Computer-Aided Design) is an annual conference on the theory and applications of formal methods in hardware and system verification. FMCAD provides a leading forum to researchers in academia and industry for presenting and discussing groundbreaking methods technologies, theoretical results, and tools for reasoning formally about computing systems. FMCAD covers formal aspects of computer-aided system design including verification, specification synthesis, and testing.  
 FMCAD is supported and organized by the FMCAD Association  .  
 Sign up to the FMCAD Mailing List  for regular updates and CfPs.  
 Upcoming and past FMCAD conferences:  

 Conference | Location | Chairs 
 FMCAD'25 | Menlo Park, California, USA | Daniela Kaufmann  and Ahmed Irfan 
 FMCAD'24 | Prague, Czechia | Nina Narodytska  and Philipp Rümmer 
 FMCAD'23 | Ames, Iowa | Kristin Y. Rozier  and Alexander Nadel 
 FMCAD'22 | Trento, Italy | Alberto Griggio  and Neha Rungta 
 FMCAD'21 | Yale University, USA | Ruzica Piskac  and Michael Whalen 
 FMCAD'20 | Haifa, Israel (online) | Ofer Strichman  and Alexander Ivrii 
 FMCAD'19 | San Jose, California, USA | Clark Barrett  and Jin Yang 
 FMCAD'18 | Austin, Texas, USA | Arie Gurfinkel  and Nikolaj Bjorner 
 FMCAD'17 | Vienna, Austria | Georg Weissenbacher  and Daryl Stewart 
 FMCAD'16 | Mountain View, CA, USA | Ruzica Piskac  and Muralidhar Talupur 
 FMCAD'15 | Austin, Texas, USA | Roope Kaivola and Thomas Wahl 
 FMCAD'14 | Lausanne, Switzerland | Koen Claessen  and Viktor Kuncak 
 FMCAD'13 | Portland, OR, USA | Barbara Jobstman  and Sandip Ray 
 FMCAD'12 | Cambridge, UK | Gianpiero Cabodi  and Satnam Singh 
 FMCAD'11 | Austin, Texas, USA | Per Bjesse  and Anna Slobodova 
 FMCAD'10 | Lugano, Switzerland | Roderick Bloem  and Natasha Sharygina 
 FMCAD'09 | Austin, Texas, USA | Armin Biere  and Carl Pixley 
 FMCAD'08 | Portland, Oregon, USA | Alessandro Cimatti  and Robert Jones 
 FMCAD'07 | Austin, Texas, USA | Jason Baumgartner and Mary Sheeran 
 FMCAD'06 | San Jose, California, USA | Aarti Gupta  and Panagiotis Manolios 
 FMCAD'04 | Austin, Texas, USA | Alan J. Hu  and Andrew K. Martin 
 FMCAD'02 | Portland, Oregon, USA | Mark Aagaard  and John W. O'Leary 
 FMCAD 2000 | Austin, Texas, USA | Warren A. Hunt, Jr.  and Steven D. Johnson 
 FMCAD'98 | Palo Alto, California, USA | Ganesh Gopalakrishnan  and Phillip J. Windley 
 FMCAD'96 | Palo Alto, California, USA | Mandayam K. Srivas and Albert John Camilleri 
  
 FMCAD arose from the TPCD (Theorem Provers in Circuit Design) conference and merged with the CHARME (Correct Hardware Design and Verification Methods) conference in 2006. FMCAD was supported by FMCAD Inc. (run by Warren A. Hunt, Jr.) until 2020. Past TPCD and CHARME events are listed here  .  
 FMCAD Committees  
 Steering Committee:  
 Clark Barrett 
  Armin Biere 
  Ruzica Piskac 
  Anna Slobodova 
  Georg Weissenbacher 
   
 Board of the FMCAD Association  :  
 Armin Biere 
  Roderick Bloem 
  Georg Weissenbacher 
  Florian Zuleger 
   
 Past members of the Steering Committee:  
   
 Jason Baumgartner 
  Aarti Gupta 
  Alan J. Hu 
  Warren A. Hunt, Jr. | (chairman until 2020) 
  Steven Johnson 
  Panagiotis Manolios 
  Vigyan Singhal 
  Mary Sheeran

91. FDL_1 conference:
Home 
  Organization | Organizing Committee  Program Committee  Steering Committee 
  Call for Papers | Submission and Author Guidelines  Ph.D. Forum Extended Abstracts 
  Important Deadlines 
  Program | Technical Program  Keynotes  Special Session and Tutorial  Social Program  Ph.D. Forum 
    Registration 
  Venue | Conference location  Transportation  Hotels 
  Summer School | School Details  School Program  School Venue 
  Previous FDLs 
  Contacts 

 FDL 2024   
 Forum on specification   
  & Design Languages   
 @Stockholm, Sweden   
 September 4-6, 2024   

 © Photo by Henrik Trygg  

  Previous FDL Conferences  

  FDL proceedings available on IEEEXplore  .   
   
  FDL conference on DBLP  .   
   
  Previous FDL Proceedings  

 FDL | IEEE Proceedings | Informal conference papers and documents 
 2024 | Link | Link 
 2023 | Link | Link 
 2022 | Link | Link 
 2021 | Link | Link 
 2020 | Link | Link 
 2019 | Link | Link 
 2018 | Link | Link 
 2017 | Link | Link 
 2016 | Link | Link 
 2015 | Link | Link 
 2014 | Link | Link 
 2013 | Link | Link 
 2012 | Link | Link 
 2011 | Link | Link 
 2010 | - | - 
 2009 | Link | Link 
 2008 | Link | Link 

  FDL  is in  ,    
   
  Previous    Next     
  
  © Photo by Henrik Trygg  

  FDL TBA  - TBA  , TBA   
   
 Contact: General chair  
   
 Contact: Program chair  

  © FDL TBA  | All Right Reserved

92. FMCAD_2 conference:
Forbidden  
 You don't have permission to access this resource.

93. FDL_2 conference:
Home 
  Organization | Organizing Committee  Program Committee  Steering Committee 
  Call for Papers | Submission and Author Guidelines  Ph.D. Forum Extended Abstracts 
  Important Deadlines 
  Program | Technical Program  Keynotes  Special Session and Tutorial  Social Program  Ph.D. Forum 
    Registration 
  Venue | Conference location  Transportation  Hotels 
  Summer School | School Details  School Program  School Venue 
  Previous FDLs 
  Contacts 

 FDL 2024   
 Forum on specification   
  & Design Languages   
 @Stockholm, Sweden   
 September 4-6, 2024   

 © Photo by Henrik Trygg  

  Ph.D. Forum  

  The Ph.D. Forum at FDL 2024 will be a poster session giving Ph.D. students the opportunity to present their ongoing research to various experts from industry and academia operating in languages, tools, and techniques for hardware and software system development. During the poster session, a panel of senior faculties and researchers from the industry will provide the selected student with valuable feedback about their ongoing research. The forum can also help the students establish contacts with second reviewers or to enter the job market. Application to the Ph.D. Forum is open to students at any stage of their doctoral studies and researchers (e.g., postdocs) who recently completed their Ph.D. Students wishing to participate in the Ph.D. Forum must submit a two-page extended abstract describing their ongoing research. The abstract should also include the name and affiliation. The submission should be authored by the student alone. That is, supervisors of the student may give feedback, but it should be a single-author submission. A scientific committee will evaluate the abstracts. The main criteria for assessing the abstracts will be the adherence of the presented research to the conference's topics to provide presenters with high-quality feedback.  
   
  Submission deadline | : | 19 July 2024 
  Submission link | : | https://easychair.org/conferences/?conf=fdl24 
  Notification of Acceptance | : 2 August 2024 
   
  Accepted extended abstracts will not be part of the formal IEEE proceedings but all abstracts will be distributed electronically to the conference participants during the conference. Hence, the extended abstract is not counted as a formal publication and can later be submitted to another conference or journal. The authors are expected to present a poster at the Ph.D. Forum session at FDL 2024.   

  FDL  is in  ,    
   
  Previous    Next     
  
  © Photo by Henrik Trygg  

  FDL TBA  - TBA  , TBA   
   
 Contact: General chair  
   
 Contact: Program chair  

  © FDL TBA  | All Right Reserved

94. FOGA_0 conference:
Toggle navigation        
 Home 
  Paper Submission 
  Registration 
  Content 
  Local Info 
  Organizers 
  ThRaSH Day 
  History 

 Skip to content  FOGA 2023    
 Home 
  Paper Submission 
  Registration 
  Content 
  Local Info 
  Organizers 
  ThRaSH Day 
  History 

 Search for:               
 Toggle sidebar & navigation        

 FOGA 2023   
 17th ACM/SIGEVO Conference on Foundations of Genetic Algorithms (FOGA XVII)  

 Scroll down to content    
   
 FOGA 2023  

 FOGA 2023 is a conference organized by ACM/SIGEVO  and hosted by the Hasso Plattner Institute in Potsdam, Germany. The first FOGA conference was held in 1990 in Boston, USA. The conference will this year take place on three days (Wed – Fri)  
 30.8.-1.9.2023.  
 tl;dr  : - "at-conference" proceedings (not "post-conference") via ACM - all presentations will be poster presentations - double blind reviewing - submission deadline: May 4  , 2023 (anywhere on earth) - page limit is 12 in a double column format, references included - ORCID required for camera-ready submission for all authors   Call for Papers  
  
  The FOGA series aims at advancing our understanding of the working principles behind evolutionary algorithms and related randomized search heuristics, such as local search algorithms, differential evolution, ant colony optimization, particle swarm optimization, artificial immune systems, simulated annealing, and other Monte Carlo methods for search and optimization. Connections to related areas, such as Bayesian optimization and direct search, are of interest as well.  
  FOGA is the premier event to discuss advances on the theoretical foundations of these algorithms, tools needed to analyze them, and different aspects of comparing algorithms’ performance. Topics of interest include, but are not limited to:  
 Run time analysis 
  Mathematical tools suitable for the analysis of search heuristics 
  Fitness landscapes and problem difficulty 
  (On- and offline) configuration and selection of algorithms, heuristics, operators, and parameters 
  Stochastic and dynamic environments, noisy evaluations 
  Constrained optimization 
  Problem representation 
  Complexity theory for search heuristics 
  Multi-objective optimization 
  Benchmarking aspects, including performance measures, the selection of meaningful benchmark problems, and statistical aspects 
  Connection between black-box optimization and machine learning 
  Submissions covering the entire spectrum of work, ranging from rigorously derived mathematical results to carefully crafted empirical studies, are invited.  
 List of important dates (all times are “Anywhere on Earth”):  
 Submission | : | May 4 | , 2023 
  Author rebuttal | : June 9-16, 2023 
  Acceptance notification | : June 30, 2023 
  Camera ready | : July 13, 2023 
  Early registration | : July 27, 2023 
  Conference | : Aug 30 – Sep 1 
  By submitting your article to an ACM Publication, you are hereby acknowledging that you and your co-authors are subject to all ACM Publications Policies  , including ACM’s new Publications Policy on Research Involving Human Participants and Subjects  . Alleged violations of this policy or any ACM Publications Policy will be investigated by ACM and may result in a full retraction of your paper, in addition to other potential penalties, as per ACM Publications Policy.”  
 Please ensure that you and your co-authors obtain an ORCID ID  , so you can complete the publishing process for your accepted paper. ACM has been involved in ORCID from the start and we have recently made a commitment to collect ORCID IDs from all of our published authors  . The collection process has started and will roll out as a requirement throughout 2022. We are committed to improve author discoverability, ensure proper attribution and contribute to ongoing community efforts around name normalization; your ORCID ID will help in these efforts.  

 Imprint   

 Data Privacy   

 Powered by WordPress   Inspiro WordPress Theme by WPZOOM

95. FDL_3 conference:
Home 
  Organization | Organizing Committee  Program Committee  Steering Committee 
  Call for Papers | Submission and Author Guidelines  Ph.D. Forum Extended Abstracts 
  Important Deadlines 
  Program | Technical Program  Keynotes  Special Session and Tutorial  Social Program  Ph.D. Forum 
    Registration 
  Venue | Conference location  Transportation  Hotels 
  Summer School | School Details  School Program  School Venue 
  Previous FDLs 
  Contacts 

 FDL 2024   
 Forum on specification   
  & Design Languages   
 @Stockholm, Sweden   
 September 4-6, 2024   

 © Photo by Henrik Trygg  

  Ph.D. Forum Program  

 Author | Title 
 Luigi Capogrosso | Advancing Split Computing and Anomaly Detection for On-Edge and Interpretable Industry 4.0 
 Francesco Tosoni | Faulty Behaviors Simulation in Industrial Cyber-Physical Systems for Safety Analysis 
 Prachi Kashikar | Model Compression by Exponent Sharing 
 Gizem Caylak | Automated Inference Optimizations in Probabilistic Programming Languages 
 Mario Libro | Enhancing Trustworthiness and Cooperation in the Construction Industry: The BuildTrust Approach 
 Muhammad Anas Uddin | Data-Driven Digital Twin For Data Management And Decision Making In Digital Factory 
 John Wikman | Extended Abstract: Reinforcement Learning for Cyber-Physical Systems by Exploiting Prior Information 
 Daniele Nicoletti | Assertion mining and modeling of Cyber-physical Systems 
 Edward Wang | Work-in-Progress: An SMT-Based, Correct-by-Construction Place-and-Route Framework 
 Mehran Shoushtari Moghadam | Improved Data Encoding for Emerging Computing Models: From Stochastic Computing to Hyperdimensional Computing 
 Francesco Biondani | The Future of Aircraft Maintenance: Goals and Challenges of Digital Twins for In-flight Operations 
 Lucas Klemmer | Versatile Hardware Analysis Techniques - From Waveform-based Analysis to Formal Verification 
 Rui Chen | Shallowly Embedded, Quantitatively Typed DSL for Synchronous System Design 

  FDL  is in  ,    
   
  Previous    Next     
  
  © Photo by Henrik Trygg  

  FDL TBA  - TBA  , TBA   
   
 Contact: General chair  
   
 Contact: Program chair  

  © FDL TBA  | All Right Reserved

96. FOGA_1 conference:
FOGA '23: Proceedings of the 17th ACM/SIGEVO Conference on Foundations of Genetic Algorithms  
  Full Citation in the ACM Digital Library    
 SESSION: Keynote  
 Analyzing the Fourier Representation of Permutation-Based Combinatorial Optimization Problems   
 José A. Lozano 
  Combinatorial optimization seeks to uncover efficient algorithms for solving complex problem instances. While achieving the ultimate goal of universal optimization remains a challenge, progress in this direction yields valuable insights for the field. A critical initial step involves taxonomizing problems and instances through a common representation. In this presentation, we employ the Fourier transform framework to investigate permutation-based combinatorial optimization problems. Specifically, we examine the Fourier coefficients of various special cases of the quadratic assignment problem, revealing their inherent characteristics. Leveraging this decomposition, we explore the transition of the linear ordering problem from being tractable (P) to becoming NP-hard, shedding light on the intricacies of this transformation. Through this analysis, we advance our understanding of permutation-based combinatorial optimization, paving the way for potential algorithmic breakthroughs.  

 Bridging Theory and Practice in Evolutionary Computation?   
 Carola Doerr 
  Evolutionary computation methods are successfully applied to solve a broad range of industrial and academic optimization problems. Most of these problems are far too complex to be analyzed analytically. Runtime analysis, a central topic in the theory of evolutionary computation, is therefore typically restricted to structurally simple artificial optimization tasks. In this presentation, I will discuss various ways in which we can nevertheless "bridge the gap" between theory and practice in evolutionary computation.  

 SESSION: Paper  
 Rigorous Runtime Analysis of Diversity Optimization with GSEMO on OneMinMax   
 Denis Antipov 
  Aneta Neumann 
  Frank Neumann 
  The evolutionary diversity optimization aims at finding a diverse set of solutions which satisfy some constraint on their fitness. In the context of multi-objective optimization this constraint can require solutions to be Pareto-optimal. In this paper we study how the GSEMO algorithm with additional diversity-enhancing heuristic optimizes a diversity of its population on a bi-objective benchmark problem OneMinMax, for which all solutions are Pareto-optimal. We provide a rigorous runtime analysis of the last step of the optimization, when the algorithm starts with a population with a second-best diversity, and prove that it finds a population with optimal diversity in expected time O(n2), when the problem size n is odd. For reaching our goal, we analyse the random walk of the population, which reflects the frequency of changes in the population and their outcomes.  

 Curing ill-Conditionality via Representation-Agnostic Distance-Driven Perturbations   
 Kirill Antonov 
  Anna V. Kononova 
  Thomas Bäck 
  Niki van Stein 
  The objective value of an ill-conditioned function may significantly change with a minor shift of the argument in the search space. Ill-conditioned functions do not have at all or exhibit very few hints towards better solutions and, thus, they are usually difficult to optimize with randomized search heuristics. However, problems that emerge in practical applications are likely to be formulated as ill-conditioned functions, as often Euclidean metric is used to measure distance in the search space. At the same time, it may be possible to use domain-specific knowledge to define such a metric in the search space so that the function stops being ill-conditioned. We consider finite search spaces and propose two mutation operators that leverage such metric to optimize the function more efficiently. The first operator assumes prior knowledge about the distance, the second operator uses the distance as a black box. Those operators apply an estimation of distribution algorithm to find the best mutant according to the defined function, which employs the given metric. For pseudo-Boolean and integer optimization problems, we experimentally show that both mutation operators speed up the search on most of the functions when applied in considered evolutionary algorithms and random local search. Moreover, those operators can be applied in any randomized search heuristic which uses perturbations. However, our mutation operators increase wall-clock time and so are helpful in practice when distance is (much) cheaper to compute than the real objective function.  

 Finding Antimagic Labelings of Trees by Evolutionary Search   
 Luke Branson 
  Andrew M. Sutton 
  Xiankun Yan 
  Randomized search heuristics can sometimes be effective verifiers for combinatorial conjectures. In this paper, we demonstrate how a simple evolutionary algorithm can be used to confirm the antimagic tree conjecture for all trees up to order 25. This conjecture, which has been open for over thirty years, is that every tree except K2 has an antimagic labeling: a bijective edge labeling such that the sum of labels assigned to edges incident to a vertex v is unique for all vertices v ϵ V. Moreover, we formally prove that that simple evolutionary algorithms are guaranteed to find antimagic labelings in expected polynomial time on trees of any order for certain restricted classes (paths, combs, uniform caterpillars, uniform spiders and perfect binary trees).  

 Using Automated Algorithm Configuration for Parameter Control   
 Deyao Chen 
  Maxim Buzdalov 
  Carola Doerr 
  Nguyen Dang 
  Dynamic Algorithm Configuration (DAC) tackles the question of how to automatically learn policies to control parameters of algorithms in a data-driven fashion. This question has received considerable attention from the evolutionary community in recent years. Having a good benchmark collection to gain structural understanding on the effectiveness and limitations of different solution methods for DAC is therefore strongly desirable. Following recent work on proposing DAC benchmarks with well-understood theoretical properties and ground truth information, in this work, we suggest as a new DAC benchmark the controlling of the key parameter λ in the (1 + (λ, λ)) Genetic Algorithm for solving OneMax problems. We conduct a study on how to solve the DAC problem via the use of (static) automated algorithm configuration on the benchmark, and propose techniques to significantly improve the performance of the approach. Our approach is able to consistently outperform the default parameter control policy of the benchmark derived from previous theoretical work on sufficiently large problem sizes. We also present new findings on the landscape of the parameter-control search policies and propose methods to compute stronger baselines for the benchmark via numerical approximations of the true optimal policies.  

 Weighted Mutation of Connections To Mitigate Search Space Limitations in Cartesian Genetic Programming   
 Henning Cui 
  David Pätzel 
  Andreas Margraf 
  Jörg Hähner 
  This work presents and evaluates a novel modification to existing mutation operators for Cartesian Genetic Programming (CGP). We discuss and highlight a so far unresearched limitation of how CGP explores its search space which is caused by certain nodes being inactive for long periods of time. Our new mutation operator is intended to avoid this by associating each node with a dynamically changing weight. When mutating a connection between nodes, those weights are then used to bias the probability distribution in favour of inactive nodes. This way, inactive nodes have a higher probability of becoming active again. We include our mutation operator into two variants of CGP and benchmark both versions on four Boolean learning tasks. We analyse the average numbers of iterations a node is inactive and show that our modification has the intended effect on node activity. The influence of our modification on the number of iterations until a solution is reached is ambiguous if the same number of nodes is used as in the baseline without our modification. However, our results show that our new mutation operator leads to fewer nodes being required for the same performance; this saves CPU time in each iteration.  

 First Steps Towards a Runtime Analysis of Neuroevolution   
 Paul Fischer 
  Emil Lundt Larsen 
  Carsten Witt 
  We consider a simple setting in neuroevolution where an evolutionary algorithm optimizes the weights and activation functions of a simple artificial neural network. We then define simple example functions to be learned by the network and conduct rigorous runtime analyses for networks with a single neuron and for a more advanced structure with several neurons and two layers. Our results show that the proposed algorithm is generally efficient on two example problems designed for one neuron and efficient with at least constant probability on the example problem for a two-layer network. In particular, the so-called harmonic mutation operator choosing steps of size j with probability proportional to 1/j turns out as a good choice for the underlying search space. However, for the case of one neuron, we also identify situations with hard-to-overcome local optima. Experimental investigations of our neu-roevolutionary algorithm and a state-of-the-art CMA-ES support the theoretical findings.  

 Runtime Analysis of a Co-Evolutionary Algorithm: Overcoming Negative Drift in Maximin-Optimisation   
 Mario Alejandro Hevia Fajardo 
  Per Kristian Lehre 
  Shishen Lin 
  Co-evolutionary algorithms have found several applications in game-theoretic applications and optimisation problems with an adversary, particularly where the strategy space is discrete and exponentially large, and where classical game-theoretic methods fail. However, the application of co-evolutionary algorithms is difficult because they often display pathological behaviour, such as cyclic behaviour and evolutionary forgetting. These challenges have prevented the broad application of co-evolutionary algorithms.  
 We derive, via rigorous mathematical methods, bounds on the expected time of a simple co-evolutionary algorithm until it discovers a Maximin-solution on the pseudo-Boolean Bilinear problem. Despite the intransitive nature of the problem leading to a cyclic behaviour of the algorithm, we prove that the algorithm obtains the Maximin-solution in expected O(n1.5) time.  
 However, we also show that the algorithm quickly forgets the Maximin-solution and moves away from it. These results in a large total regret of Θ(Tn1.5) after T iterations. Finally, we show that using a simple archive solves this problem reducing the total regret significantly.  
 Along the way, we present new mathematical tools to compute the expected time for co-evolutionary algorithms to obtain a Maximin-solution. We are confident that these tools can help further advance runtime analysis in both co-evolutionary and evolutionary algorithms.  

 General Boolean Function Benchmark Suite   
 Roman Kalkreuth 
  Zdeněk Vašíček 
  Jakub Husa 
  Diederick Vermetten 
  Furong Ye 
  Thomas Bäck 
  Just over a decade ago, the first comprehensive review on the state of benchmarking in Genetic Programming (GP) analyzed the mismatch between the problems that are used to test the performance of GP systems and real-world problems. Since then, several benchmark suites in major GP problem domains have been proposed over time, filling some of the major gaps. In the framework of the first review about the state of benchmarking in GP, logic synthesis (LS) was classified as one of the major GP problem domains. However, a diverse and accessible benchmark suite for LS is still missing. In this work, we propose a benchmark suite for LS that covers different types of Boolean functions that are commonly used in the field of GP. We analyze the complexity of the proposed benchmark by using popular complexity measures that are commonly used to classify and characterize Boolean functions and digital circuits.  

 Fixed-Parameter Tractability of the (1 + 1) Evolutionary Algorithm on Random Planted Vertex Covers   
 Jack Kearney 
  Frank Neumann 
  Andrew M. Sutton 
  We present the first parameterized analysis of a standard (1+1) Evolutionary Algorithm on a distribution of vertex cover problems. We show that if the planted cover is at most logarithmic, restarting the (1+1) EA every O(n log n) steps will find a cover at least as small as the planted cover in polynomial time for sufficiently dense random graphs p > 0.71. For superlogarithmic planted covers, we prove that the (1+1) EA finds a solution in fixed-parameter tractable time in expectation.  
 We complement these theoretical investigations with a number of computational experiments that highlight the interplay between planted cover size, graph density and runtime.  

 Self-adaptation Can Improve the Noise-tolerance of Evolutionary Algorithms   
 Per Kristian Lehre 
  Xiaoyu Qin 
  Real-world optimisation often involves uncertainty. Previous studies proved that evolutionary algorithms (EAs) can be robust to noise when using proper parameter settings, including the mutation rate. However, finding the appropriate mutation rate is challenging if the occurrence of noise (or noise level) is unknown. Self-adaptation is a parameter control mechanism which adjusts mutation rates by encoding mutation rates in the genomes of individuals and evolving them. It has been proven to be effective in optimising unknown-structure and multi-modal problems. Despite this, a rigorous study of self-adaptation in noisy optimisation is missing. This paper mathematically analyses the runtimes of 2-tournament EAs with self-adapting two mutation rates, fixed mutation rates and uniformly chosen mutation rate from two given rates on LeadingOnes with and without symmetric noise. Results show that using self-adaptation achieves the lowest runtime regardless of the presence of symmetric noise. In supplemental experiments, we extend analyses to other types of noise, i.e., one-bit and bit-wise noise. We also consider another self-adaptation mechanism, which adapts the mutation rate from a given interval. Self-adaptive EAs adapt their mutation rate to the noise level and outperform static EAs in these experiments. Overall, self-adaptation can improve the noise-tolerance of EAs in the noise-models studied here.  

 Convergence Properties of the (μ/μI, λ)-ES on the Rastrigin Function   
 Amir Omeradzic 
  Hans-Georg Beyer 
  The highly multimodal Rastrigin test function is analyzed by deriving a new aggregated progress rate measure. It is derived as a function of the residual distance to the optimizer by assuming normally distributed positional coordinates around the global optimizer. This assumption is justified for successful ES-runs operating with sufficiently slow step-size adaptation. The measure enables the investigation of further convergence properties. For moderately large mutation strengths a characteristic distance-dependent Rastrigin noise floor is derived. For small mutation strengths local attraction is analyzed and an escape condition is established. Both mutation strength regimes combined pose a major challenge optimizing the Rastrigin function, which can be counteracted by increasing the population size. Hence, a population scaling relation to achieve high global convergence rates is derived which shows good agreement with experimental data.  

 Neural Networks as Black-Box Benchmark Functions Optimized for Exploratory Landscape Features   
 Raphael Patrick Prager 
  Konstantin Dietrich 
  Lennart Schneider 
  Lennart Schäpermeier 
  Bernd Bischl 
  Pascal Kerschke 
  Heike Trautmann 
  Olaf Mersmann 
  Artificial benchmark functions are commonly used in optimization research because of their ability to rapidly evaluate potential solutions, making them a preferred substitute for real-world problems. However, these benchmark functions have faced criticism for their limited resemblance to real-world problems. In response, recent research has focused on automatically generating new benchmark functions for areas where established test suites are inadequate. These approaches have limitations, such as the difficulty of generating new benchmark functions that exhibit exploratory landscape analysis (ELA) features beyond those of existing benchmarks.  
 The objective of this work is to develop a method for generating benchmark functions for single-objective continuous optimization with user-specified structural properties. Specifically, we aim to demonstrate a proof of concept for a method that uses an ELA feature vector to specify these properties in advance. To achieve this, we begin by generating a random sample of decision space variables and objective values. We then adjust the objective values using CMA-ES until the corresponding features of our new problem match the predefined ELA features within a specified threshold. By iteratively transforming the landscape in this way, we ensure that the resulting function exhibits the desired properties. To create the final function, we use the resulting point cloud as training data for a simple neural network that produces a function exhibiting the target ELA features. We demonstrate the effectiveness of this approach by replicating the existing functions of the well-known BBOB suite and creating new functions with ELA feature values that are not present in BBOB.  

 First Complexity Results for Evolutionary Knowledge Transfer   
 Eric O. Scott 
  Kenneth A. De Jong 
  The field of evolutionary knowledge transfer (EKT) has recently begun to systematically develop algorithms that exploit a number of related problem instances to accelerate problem solving on difficult optimization tasks. EKT has the potential to have a major impact on evolutionary computation practice, comparable to the role that neural network pretraining has had on machine learning. But the community has only scratched the surface of the theoretical hurdles that the knowledge-transfer workflow raises. We introduce a three-part collect-select-exploit framework for understanding EKT, which we use to highlight the need for better evaluation and benchmarking approaches for transfer. We then present some of the first analytical results for EKT, proving no-free-lunch theorems for transfer, and proving what is (to our knowledge) the first asymptotic runtime result for transfer optimization. These results can serve as the basis for future research into the strengths and limitations of knowledge transfer as an optimization paradigm, and they serve to emphasize the need for more comprehensive benchmarks to hone progress in the field.  

 Partition Crossover can Linearize Local Optima Lattices of k-bounded Pseudo-Boolean Functions   
 Darrell Whitley 
  Gabriela Ochoa 
  Francisco Chicano 
  When Partition Crossover is used to recombine two parents which are local optima, the offspring are all local optima in the smallest hyperplane subspace that contains the two parents. The offspring can also be organized into a non-planar hypercube "lattice." Furthermore, all of the offspring can be evaluated using a simple linear equation. When a child of Partition Crossover is a local optimum in the full search space, the linear equation exactly determines its evaluation. When a child of Partition Crossover can be improved by local search, the linear equation is an upper bound on the evaluation of the associated local optimum when minimizing. This theoretical result holds for all k-bounded Pseudo-Boolean optimization problems, including MAX-kSAT, QUBO problems, as well as random and adjacent NK landscapes. These linear equations provide a stronger explanation as to why the "Big Valley" distribution of local optima exists. We fully enumerate a sample of NK landscapes to collect frequency information to complement our theoretical results. We also introduce new algorithmic contributions that can 1) expand smaller lattices in order to find larger lattices that contain additional local optima, and 2) introduce an efficient method to find new improving moves in lattices using score vectors.

97. FOSSACS_0 conference:
Forbidden  
 You don't have permission to access this resource.

98. FOGA_2 conference:
Toggle navigation        
 Home 
  Paper Submission 
  Registration 
  Content 
  Local Info 
  Organizers 
  ThRaSH Day 
  History 

 Skip to content  FOGA 2023    
 Home 
  Paper Submission 
  Registration 
  Content 
  Local Info 
  Organizers 
  ThRaSH Day 
  History 

 Search for:               
 Toggle sidebar & navigation        

 Paper Submission  

 Submission  
 This year, FOGA will use the “linklings” submission management system. This system is also used by GECCO, but note that a separate account will be required to submit papers to FOGA.  
 Link to the Linklings submission page: Linklings   
 Paper Format  
 Authors should submit their papers consistent with the alternate 2-column ACM SIG style file “sigconf”  (see www.acm.org/publications/proceedings-template  to obtain the class file and see templates) by the submission deadline (May 4, 2023). Authors are required to submit their electronic papers in PDF format. The maximum number of pages is 12, including references, but we encourage authors to make a concise and significant contribution in fewer pages. Over-length papers will be rejected without review. On the other hand, you are welcome to provide supplementary material, for instance, full proofs, additional figures or examples. Note, however, that reviewers won’t be required to look at this supplemental material, and that your paper should be self-contained. The proceedings will be published by ACM Press and will be finalized before the conference starts (in contrast to previous years there are “at-conference” instead of “post-conference” proceedings). Instructions for the camera-ready papers (deadline on July 6  July 13, 2023) will be made available in due time.  
 Review Process  
 The review process is double blind  . Therefore, in order to make blind reviewing possible, authors must omit their names and affiliations from the paper and must take measures to ensure that your identity is not easily revealed from the submission itself. Please refer to your prior work in a neutral manner (i.e., instead of saying “We showed” say “XYZ et al. showed”). It is acceptable to submit work that has been presented in public or has appeared on ArXiV, provided the submission itself is anonymized. Similarly, reviewers should not reveal their identities within the paper reviews. Selection criteria include originality of ideas, correctness, clarity, significance of results and quality of presentation. The review process will include a rebuttal opportunity for authors to see the reviews of their papers and to respond to technical questions raised by the reviewers before discussion starts within the Program Committee. The decision of the Program Committee will be final and cannot be appealed.  
 Camera Ready Submission   
 Formatting must comply with the ACM format requirements using the sigconf template, see the latest | ACM Primary Article Template | . 
  Verify that your .tex document includes the following lines, using the precise DOI and ISBN numbers that you received back from ACM after completing the copyright process. Make sure that your PDF shows the correct conference information on the front page (you will receive the exact code after completing the ACM Copyright form): 
  \acmDOI{10.1145/nnnnnnn.nnnnnnn} % To be updated after completing copyright process  
  \acmISBN{978-x-xxxx-xxxx-x/YY/MM} % To be updated after completing copyright process  
  \acmConference[FOGA '23]{Foundations of Genetic Algorithms XVII}{August 30 -- September 1, 2023}{Potsdam, Germany}  
  \acmYear{2023}  
  \copyrightyear{2023}   You MUST use Type 1/TrueType fonts for your submission. All fonts must be embedded. Type 3 fonts are NOT acceptable. For help on obtaining the correct type of fonts and other formatting issues, see: | https://www.acm.org/publications/proceedings-template | . Python’s matplotlib uses Type 3 fonts by default. You need to configure matplotlib to use TrueType fonts with: 
  import matplotlib  
  matplotlib.rcParams['pdf.fonttype'] = 42  
  matplotlib.rcParams['ps.fonttype'] = 42   Distill/Create an ACM compliant PDF. If your submitted PDF file is not ACM Compliant, we may contact you to fix the problems. 
  Upload your PDF file | at the linklings site | . We recommend using a modern, standards-compliant Web browser to upload the necessary files. 
  The sections CCS Concepts (ACM Computing Classification System) and Keywords are mandatory to be included on the first page of your submission. 
  CCS Concepts. Make sure that your selection included on the first page of your paper are also chosen properly on the paper submission page. Click | here | for information on the ACM Computing Classification Scheme. 
  Keywords. The contents of this section is at the author’s discretion. Be sure to pick terms that fit your work well as they will be used to index your work. 

 Imprint   

 Data Privacy   

 Powered by WordPress   Inspiro WordPress Theme by WPZOOM

99. FMCAD_3 conference:
Skip to main content       Communities & Collections     
  All of TSW        
   Statistics     

     English 
  العربية 
  বাংলা 
  Català 
  Čeština 
  Deutsch 
  Ελληνικά 
  Español 
  Suomi 
  Français 
  Gàidhlig 
  हिंदी 
  Magyar 
  Italiano 
  Қазақ 
  Latviešu 
  Nederlands 
  Polski 
  Português 
  Português do Brasil 
  Srpski (lat) 
  Српски 
  Svenska 
  Türkçe 
  Yкраї́нська 
  Tiếng Việt 
    
     Log In   Log in with UT EID      
    Log in   Have you forgotten your password?    

   Repository Home 
  Conference Proceedings and Journals 
  Formal Methods in Computer-Aided Design (FMCAD) 
   
     Formal Methods in Computer-Aided Design (FMCAD)  
     
  Permanent URI for this collection  https://hdl.handle.net/2152/20058   
   FMCAD provides a leading forum to researchers in academia and industry for presenting and discussing groundbreaking methods, technologies, theoretical results, and tools for reasoning formally about computing systems. FMCAD covers formal aspects of computer-aided system design including verification, specification, synthesis, and testing. For more information on FMCAD please visit: http://www.cs.utexas.edu/users/hunt/FMCAD/    

 Browse  
 Recent Submissions  By Issue Date  By Author  By Title  By Subject  By Department    
   
 Recent Submissions  By Issue Date  By Author  By Title  By Subject  By Department     
  
   Recent Submissions  
 Now showing  1 - 19 of 19    

 Loading...               Item           Proceedings of Formal Methods in Computer-Aided Design, FMCAD 2024  ( TU Wien Academic Press  ,  2024  ) Formal Methods in Computer Aided Design      Show more 
  Loading...               Item           Proceedings of Formal Methods in Computer-Aided Design, FMCAD 2023  ( 2023  ) Formal Methods in Computer Aided Design      Show more 
  Loading...               Item           Proceedings of Formal Methods in Computer-Aided Design, FMCAD 2022  ( TU Wien Academic Press  ,  2022  ) Formal Methods in Computer Aided Design  ;   Griggio, Alberto  ;   Rungta, Neha      Show more 
  Loading...               Item           Proceedings of Formal Methods in Computer-Aided Design, FMCAD 2021  ( TU Wien Academic Press  ,  2021  ) Formal Methods in Computer Aided Design  ;   Piskac, Ruzica  ;   Whalen, Michael W.      Show more 
  Loading...               Item           Proceedings of Formal Methods in Computer-Aided Design, FMCAD 2020  ( 2020  ) Formal Methods in Computer Aided Design  ;   Ivrii, Alexander  ;   Strichman, Ofer      Show more 
  Loading...               Item           Proceedings of Formal Methods in Computer-Aided Design, FMCAD 2019  ( IEEE  ,  2019  ) Formal Methods in Computer Aided Design  ;   Barrett, Clark  ;   Yang, Jin      Show more 
  Loading...               Item           Proceedings of Formal Methods in Computer Aided Design, FMCAD 2018  ( IEEE  ,  2018  ) Formal Methods in Computer Aided Design  ;   Bjørner, Nikolaj  ;   Gurfinkel, Arie      Show more 
  Loading...               Item           Proceedings of Formal Methods in Computer Aided Design, FMCAD 2017  ( IEEE  ,  2017  ) Formal Methods in Computer Aided Design  ;   Stewart, Daryl  ;   Weissenbacher, Georg      Show more 
  Loading...               Item           Proceedings of Formal Methods in Computer-Aided Design, FMCAD 2016  ( 2016-10  ) Formal Methods in Computer Aided Design      Show more 
  Loading...               Item           Proceedings of Formal Methods in Computer-Aided Design, FMCAD 2015  ( 2015-09  ) Formal Methods in Computer Aided Design      Show more 
  Loading...               Item           Proceedings of Formal Methods in Computer-Aided Design, FMCAD 2014  ( 2014-10  ) Formal Methods in Computer Aided Design  ;   Claessen, Koen  ;   Kuncak, Viktor      Show more 
  Loading...               Item           Proceedings of Formal Methods in Computer Aided Design, FMCAD 2013  ( IEEE  ,  2013  ) Formal Methods in Computer Aided Design  ;   Jobstmann, Barbara  ;   Ray, Sandip      Show more 
  Loading...               Item           Proceedings of Formal Methods in Computer Aided Design, FMCAD 2012  ( IEEE  ,  2012  ) Formal Methods in Computer Aided Design      Show more 
  Loading...               Item           Proceedings of Formal Methods in Computer Aided Design, FMCAD 2011  ( IEEE  ,  2011  ) Formal Methods in Computer Aided Design  ;   Bjesse, Per  ;   Slobodová, Anna      Show more 
  Loading...               Item           Proceedings of Formal Methods in Computer Aided Design, FMCAD 2010  ( IEEE  ,  2010  ) Formal Methods in Computer Aided Design  ;   Bloem, Roderick  ;   Sharygina, Natasha      Show more 
  Loading...               Item           Proceedings of Formal Methods in Computer Aided Design, FMCAD 2009  ( IEEE  ,  2009  ) Formal Methods in Computer Aided Design  ;   Biere, Armin  ;   Pixley, Carl      Show more 
  Loading...               Item           Proceedings of Formal Methods in Computer Aided Design, FMCAD 2008  ( IEEE  ,  2008  ) Formal Methods in Computer Aided Design  ;   Cimatti, Alessandro  ;   Jones, Robert B.      Show more 
  Loading...               Item           Proceedings of Formal Methods in Computer Aided Design, FMCAD 2007  ( IEEE  ,  2007  ) Formal Methods in Computer Aided Design      Show more 
  Loading...               Item           Proceedings of Formal Methods in Computer Aided Design, FMCAD 2006  ( IEEE  ,  2006  ) Formal Methods in Computer Aided Design      Show more 

 CONTACT US 
  MAPS & DIRECTIONS 
  JOB OPPORTUNITIES 
    
 UT Austin Home 
  Emergency Information 
  Site Policies 
  Web Accessibility Policy 
  Web Privacy Policy 
  Adobe Reader 
    
 Subscribe to our Newsletter  Give to the Libraries  © The University of Texas at Austin 2023

100. FOGA_3 conference:
Find or Create a Group 
   EN | EN 
  DE 
  ES 
  FR 
  IT 
  PT 
  UK 
  Help 
  Log In 
  Sign Up 

 Log In 
  Sign Up 
  Help 
  EN | EN 
  DE 
  ES 
  FR 
  IT 
  PT 
  UK 

  to navigate  to use esc  to dismiss   

 Keyboard Shortcuts  
   
 ctrl  + shift  + ?  :   
 Show all keyboard shortcuts   
   
 ctrl  + g  :   
 Navigate to a group   
   
 ctrl  + shift  + f  :   
 Find   
   
 ctrl  + /  :   
 Quick actions   

 esc  to dismiss   

  Home   Messages    Hashtags     
   
 ctrl  + shift  + ?  for shortcuts   
 About  · Features  · Pricing    
 Updates  · Terms  · Help    
 © 2024 Groups.io   

 ×      
   
 ×      

 ×  Close   Likes  

  Close    

    GeneticProgramming 
  Topics 

 ×  Close   Search  

  Search   Cancel    

 Date    Date    1 - 1 of 1  previous page 
  next page 

 [FOGA 2023] Paper Submission Deadline Extended (May 4, 2023)  
  
 Francisco Chicano    All Messages By This Member 

  #8098      

  (apologies for cross posting)  
   
  17th ACM/SIGEVO Conference on Foundations of Genetic Algorithms (FOGA XVII)  
   
  August 30 to September 1, 2023 – Potsdam, Germany  
   
  All dates of FOGA 2023 concerning the submission and reviewing process have been extended by a week (see also below).  
   
  https://hpi.de/foga2023/   
   
  We invite you to submit your high-quality articles to the seventeenth conference on the foundations of genetic algorithms (FOGA). The FOGA series aims at advancing our understanding of the working principles behind evolutionary algorithms and related randomized search heuristics, such as local search algorithms, differential evolution, ant colony optimization, particle swarm optimization, artificial immune systems, simulated annealing, and other Monte Carlo methods for search and optimization. Connections to related areas, such as Bayesian optimization and direct search, are of interest as well.  
   
  == Scope ==  
   
  Topics of interest, both of theoretical and empirical nature, include but are not limited to:  
   
  – Run time analysis  
  – Mathematical tools suitable for the analysis of search heuristics  
  – Fitness landscapes and problem difficulty  
  – (On- and offline) configuration and selection of algorithms, heuristics, operators, and parameters  
  – Stochastic and dynamic environments, noisy evaluations  
  – Constrained optimization  
  – Problem representation  
  – Complexity theory for search heuristics  
  – Multi-objective optimization  
  – Benchmarking aspects, including performance measures, the selection of meaningful benchmark problems, and statistical aspects  
  – Connection between black-box optimization and machine learning  
   
  == Important Dates ==  
   
  – Submissions due: May 4, AoE  
  – Acceptance notification: June 30  
  – Camera-ready versions due: July 13  
   
  == ThRaSH Day ==  
   
  https://hpi.de/foga2023/?page_id=1008   
   
  This year, co-located with FOGA 2023, on August 29 (the day before FOGA), there is a half-day event organized as part of the ThRaSH seminar series. The event consists of a few technical contributions for which at most conferences there is not enough time. Each contribution is a 30–60 minutes detailed proof discussion, highlighting the tools used in order to derive the result. If you are interested in giving a talk, please contact Timo Kötzing (Timo.Koetzing@...) until June 30. 
  
 ×     

   ×  Close   Verify Delete  
   
 Are you sure you wish to delete this message from the message archives of GeneticProgramming@groups.io? This cannot be undone.    
  Cancel   Yes    

    ×  Close   Verify Repost  
   
 Are you sure you wish to repost this message?   
  Cancel   Yes    

   ×  Close   Report Message  
   
 Reason    Report to Moderators  I think this message isn't appropriate for our group. The Group moderators are responsible for maintaining their community and can address these issues.   Report to Groups.io Support  I think this violates the Terms of Service. This includes: harm to minors, violence or threats, harassment or privacy invasion, impersonation or misrepresentation, fraud or phishing.    
  
 Note:  Your email address is included with the abuse report.   
   
  Cancel   Report    

     ×  Close   Split Topic  
   
 The new topic will begin with this message. Subject of the new topic:  
    
  Cancel   Split Topic    

 1 - 1 of 1  previous page 
  1 
  next page 

  Previous Topic   Next Topic      

  Messages    

  More    

  More Options  More   
    
  Home   Messages    Hashtags    About   Features   Pricing   # Changelog   Terms   Help    

  to navigate  to use esc  to dismiss

