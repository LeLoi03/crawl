1. ACHI_3 conference:
Please enable cookies.   
 Sorry, you have been blocked  
 You are unable to access  research.com  

 Why have I been blocked?  
 This website is using a security service to protect itself from online attacks. The action you just performed triggered the security solution. There are several actions that could trigger this block including submitting a certain word or phrase, a SQL command or malformed data.  
   
 What can I do to resolve this?  
 You can email the site owner to let them know you were blocked. Please include what you were doing when this page came up and the Cloudflare Ray ID found at the bottom of this page.  

 Cloudflare Ray ID: 8ea8a9a79b946008   •  Your IP: Click to reveal  14.237.32.203  •   Performance & security by  Cloudflare

2. ACII_0 conference:
Skip to content       
        Attend | Registration 
  Visa Information 
  Chen Science Writer 
  ACII 2023 Travel Bursary 
  Hotel Information 
  Authors | Presentation Instructions 
  Submission Guidelines 
  Camera Ready Guidelines | Camera-Ready Instructions (Main Conference) 
  Camera-Ready Instructions (Workshop/Demo/Doctoral/LBR) 
  Calls | Call for Demos 
  Call for Papers 
  Call for Tutorials 
  Call for Workshops 
  Call for Doctoral Consortium 
  Call for Late Breaking Results 
  Important Dates 
  Program | Full Program Schedule 
  Keynote Speakers 
  Workshops 
  Tutorials | Introduction to eye and audio behaviour computing for affect analysis in wearable contexts 
  Measurement Validation in Affective Computing 
  The potential impact of the AI Act on affective computing research and development 
  Useful Links 
  Contact Us 
  People | Organizing Committee 
  Senior Program Committee 

 ACII 2023 is now over! See you next year in Glasgow!  
  ACII2023 proceedings will be online with IEEE in approximately 1-2 months.  
  
   In-person Sept. 10–13, at the MIT Media Lab, Cambridge, MA, USA   
   
  Ⓒ Andy Ryan    
 Affective Computing + Intelligent Interaction  
 September 10-13, 2023, in-person at the MIT Media Lab, Cambridge, Ma, usa  
    
 The annual Conference of the Association for the Advancement of Affective Computing ( AAAC  , formerly known as Humaine) is the premier international forum for research on affective and multimodal human-machine interaction and systems.  
   
  ACII 2023 will be held in person at the MIT Media Lab in Cambridge Massachusetts, USA, the birthplace of affective computing. The conference will be co-hosted by the MIT Media Lab, the AAAC  , and other sponsors, to be named below soon.  
   
  Workshops, tutorials, and the doctoral consortium will be held on Sunday September 10, 2023. The main conference will be Monday-Wed Sep 11-13, 2023.  
   
  Stay tuned here for updates on the call for papers, deadlines, and other important program information.  
   
 Registration Deadline  
 The deadline to register is August 18, 2023  . Please be sure to register  before then!  
   
 Useful Links  
  ACII 2023 Submission Portal   
  Submission Guidelines   
  Ethical Statement Instructions   
  SPC/Reviewer Guidelines   
 Important Dates  
  
 Call for workshop-, special track-, and tutorial proposals. | 5 Jan 2023 
 Call for papers for the main conference track | 5 Jan 2023 
 Submission deadline for workshop- and special track proposals | 17 Feb 2023 
 Notification for workshop- and special track proposals | 3 March 2023 
 Submission system opens for *all* tracks | 6 March 2023 
 Call for special track contributions (including special tracks, DC, demo, workshop papers, and LBR) | 6 March 2023 
 Submission deadline for main track papers (no extensions possible) | 14 April 2023 
 Submission deadline for special track papers | 28 April 2023 
 Submission deadline for workshops | 12 May 2023 
 Notifications for main track papers | 2 Jun 2023 
 Notifications for workshop and special track papers | 9 Jun 2023 
 Late Breaking Results (LBR) submission deadline | 16 June 2023 
 Submission deadline for tutorial proposals | 16 June 2023 
 Notification for tutorial proposals | 30 June 2023 
 Demo deadline | 30 June 2023 
 Demo notifications | 11 July 2023 
 LBR notifications | 12 July 2023 
 Early bird registration deadline | 14 July 2023 
 Camera ready deadline for all contributions including LBR | 1 Aug 2023 
 Registration Deadline | 18 Aug 2023 
 Conference | 10-13 Sept 2023 
 Workshops  and tutorials | 10 sept 2023 
 Main conference | 11-13 sept 2023 

  MIT, Media Lab, Cambridge, MA USA. Ⓒ Andy Ryan     
 Technical Sponsors  
 ACII23 is technically co-sponsored by the IEEE Computer Society  

 Platinum Sponsors  
       
 Gold Sponsors  
     
 Silver Sponsors  
       
 Bronze Sponsors  

 Become a Sponsor!  
 If you’d like to become a sponsor for ACII 2023, please contact us  .  

 ACII 2023   
 International Conference on Affective Computing + Intelligent Interaction, In-person Sept. 10–13, at the MIT Media Lab in Cambridge, MA, USA  

 Search   
 Search   Search

3. ACII_1 conference:


4. ACII_2 conference:
User        Login 
  Search        Search 
  Nav        Nav 

 Find People, Projects, etc.  Search        

 Login 
  Register 
    
 Email:     
   
 Password:     

  Work for a Member company and forgot your password?    

 Work for a Member company and need a Member Portal account? Register here with your company email address.  
 Register a Member Account   

 News + Updates 
  Research 
  About 
  Support the Media Lab 
  MAS Graduate Program 
  People 
  Events 
  Videos 
  Member Portal 
  For Press + Media 

 Event   
 Affective Computing + Intelligent Interaction (ACII) 2023  
     Copyright  
 Andy Ryan  

 Andy Ryan  

 People  
 Rosalind W. Picard   Professor of Media Arts and Sciences; Grover M. Hermann Professor in Health Sciences and Technology 
    
 Groups  
    
 Share this event 

 Sunday — Wednesday   
 September 10, 2023 —   
 September 13, 2023   

 MIT Media Lab,  
  Cambridge, MA   

 The Media Lab and the Association for the Advancement of Affective Computing are co-hosting the 11th International Conference on Affective Computing and Intelligent Interaction (ACII) with the theme “Affective Computing: Context and Multimodality."   
 The annual Conference of the Association for the Advancement of Affective Computing (AAAC, formerly known as Humaine) is the premier international forum for research on affective and multimodal human-machine interaction and systems.  
 ACII 2023 will be held in person at the MIT Media Lab in Cambridge Massachusetts, USA, the birthplace of affective computing. The conference will be co-hosted by the MIT Media Lab, the AAAC, and other sponsors, to be named below soon.  
 Workshops, tutorials, and the doctoral consortium will be held on Sunday September 10, 2023. The main conference will be Monday-Wed Sep 11-13, 2023.  
 Stay tuned here for updates on the call for papers, deadlines, and other important program information.  

 Learn more on the conference website    

 Event  Events    
 Social and Affective Intelligence Workshop @ ACII 2023  
 The inaugural Workshop on Social and Affective Intelligence (SAI) at ACII 2023 invites researchers from emotion science, soc…  
   
  Sunday   
 September 10, 2023   

 8:30am —  1:30pm ET     
 Cynthia Breazeal  · Dong Won Lee    

 More Events  
   
 Event  Events    
 MicroPET Exhibition at Stellar Scape  
 MicroPET is an autonomous payload for conducting enzymatic reactions and microbial cultivation experiments in space, featuring programmable…  
   
  Saturday — Sunday   
 June 22, 2024 —   
 January 26, 2025   

 Namur   
 Xin Liu  · Pat Pataranutaporn    

 Event  Events    
 MIT Autonomous Bicycle Project at the Museum of Science  
 Innovation: Earth is an exhibition at the Boston Museum of Science which is part of the Museum's greater year of the EarthShot programming.  
   
  Wednesday — Monday   
 July 17, 2024 —   
 March 31, 2025   

 Boston, MA   
 Kent Larson  · Margaret Church  +1 more   

 Event  Events    
 MIT AI Ventures Demo Day  
 Join us on December 5 for an inspirational day with the MIT Foundations of AI Venture Studio! From 10am to 1pm, we’ll explore groundbreakin…  
   
  Thursday   
 December 5, 2024   

 10:00am —  1:00pm ET     

 Event  Events    
 EVDT Community Meeting - December 2024  
 We invite you to join the December meeting of the Environment-Vulnerability-Decision-Technology (EVDT) Community. The purpose of the E…  
   
  Tuesday   
 December 17, 2024   

 11:00am —  12:00pm ET     

 News + Updates 
  Research 
  About 
  Support the Media Lab 
  MAS Graduate Program 
  People 
  Events 
  Videos 
  Member Portal 
  For Press + Media 

 More ways to explore  
   
 Videos 
  Publications 
  Job Opportunities 
  Contact 

 Massachusetts Institute of Technology   
  School of Architecture + Planning   
 Accessibility   
  Donate to the Lab

5. HPC Asia_2 conference:
Search the site   Go     
    
 Tabor Network:    
 BigDATAwire 
  AIwire 
  HPCwire Japan 
  QCwire 
  HPC & AI Wall Street 

   Toggle navigation     Search the site   Go     

 Since 1987 - Covering the Fastest Computers in the World and the People Who Run Them  
 Since 1987 - Covering the Fastest Computers in the World and the People Who Run Them  
   
 Home 
  Topics | Applications 
  Cloud 
  Developer Tools 
  Interconnects 
  Middleware 
  Networks 
  Processors 
  Quantum 
  Storage 
  Systems 
  Visualization 
  Sectors | Academia & Research 
  Entertainment 
  Financial Services 
  Government 
  Life Sciences 
  Manufacturing 
  Oil & Gas 
  Retail 
  QCwire Home 
  QCwire Subscribe 
  Exascale 
  Specials | 35 HPC Legends 
  HPC Executive Videos 
  LIVEwire Interviews 
  SC | 2024 
  2023 
  2022 
  2021 
  2020 
  2019 
  2018 
  2017 
  2016 
  2015 
  2014 
  2013 
  2012 
  2011 
  2010 
  2009 
  2008 
  ISC | 2024 
  2023 
  2022 
  2021 
  2020 
  2019 
  2018 
  2017 
  2016 
  2015 
  2014 
  2013 
  2012 
  2011 
  2010 
  2009 
  2008 
  People to Watch | 2024 
  2023 
  2022 
  2021 
  2020 
  2019 
  2018 
  2017 
  2016 
  2015 
  2014 
  2013 
  2012 
  2011 
  2010 
  Readers’ Choice Awards | 2024 
  2023 
  2022 
  2021 
  2020 
  2019 
  2018 
  2017 
  2016 
  2015 
  2014 
  2013 
  2012 
  2011 
  2010 
  HPC + AI Wall Street | 2018 
  2009 
  2008 
  Advanced Scale Forum 
  Resource Library 
  Podcast 
  Events | Events 
  Advanced Scale Forum 
  HPC + AI Wall Street | 2022 Digital Event Series 
  Solution Channels | Microsoft Azure & AMD 
  Job Bank 
  About | About HPCwire 
  Organizations and Affiliations 
  HPCwire Editorial Submissions 
  Subscribe 
  HPCwire Custom Reprints 
  Contact Us 
  Subscribe 

  « All Events   
 This event has passed. 
    
 SupercomputingAsia 2023 (SCA23) and HPC Asia 2023  
 February 27, 2023  - March 2, 2023   
   
 Navigation  
 «  Principles and Practice of Parallel Programming (PPoPP) 2023 
  2023 Energy HPC Conference » 

 Co-organised by HPC centres from Singapore, Japan and Australia, SupercomputingAsia (SCA) 2023 is an annual conference that encompasses an umbrella of notable supercomputing and allied events in Asia. The key objective of the SupercomputingAsia conference is to promote a vibrant and relevant HPC ecosystem in Asia. Delegates will be able to gain access to visionary insights from thought leaders in academia and industry, optimum networking opportunities and the Supercomputing community in Asia.  
 The International Conference on High Performance Computing in Asia-Pacific Region (HPC Asia) is an international conference series in the Asia Pacific region on HPC technologies, fostering exchange of ideas, research results and case studies related to all issues of high performance computing. The 6th edition, HPC Asia 2023 will be co-located with SCA23 in Singapore.  
 Register your interest here:  
 https://docs.google.com/forms/d/e/1FAIpQLSdQLm_RHx3D07BskF1dlaK_fOeYTxv0PVV9dcyfkaNfCSCbKA/viewform   

    Add to calendar      
 Google Calendar 
  iCalendar 
  Outlook 365 
  Outlook Live 

 Details  
 Start:  February 27, 2023   End:  March 2, 2023   Event Category:  Conference   Website:  https://www.sc-asia.org/      
 Venue  
  Singapore Expo Convention & Exhibition Centre    Singapore   + Google Map       

 Navigation  
 «  Principles and Practice of Parallel Programming (PPoPP) 2023 
  2023 Energy HPC Conference » 

 Subscribe to HPCwire's Weekly Update!  
 Be the most informed person in the room! Stay ahead of the tech trends with industry updates delivered to you every week!  

 Technologies:  
   
 Applications 
  Cloud 
  Developer Tools 
  Interconnects 
  Middleware 
  Networks 
  Processors 
  Storage 
  Systems 
  Visualization 

 Sectors:  
   
 Academia & Research 
  Business 
  Entertainment 
  Financial Services 
  Government 
  Life Sciences 
  Manufacturing 
  Oil & Gas 
  Retail 

 Exascale 
  Multimedia 
  Events 
  Organizations and Affiliations 
  Editorial Submissions 
  Subscribe 
  About HPCwire 
  Contact Us 
  Sitemap 
  Reprints 

 The Information Nexus of Advanced Computing and Data systems for a High Performance World  
   
 TCI Home 
  Our Publications 
  Solutions 
  Live Events 
  Press 
  Privacy Policy 
  Cookie Policy 
  About Tabor Communications 
  Update Subscription Preferences 
  California Consumers 

 © 2024 HPCwire. All Rights Reserved. A Tabor Communications Publication  
 HPCwire is a registered trademark of Tabor Communications, Inc. Use of this site is governed by our Terms of Use and Privacy Policy.  
 Reproduction in whole or in part in any form or medium without express written permission of Tabor Communications, Inc. is prohibited.  

 HPCwire  This website uses cookies to improve your experience. We'll assume you're ok with this, but you can opt-out if you wish. Accept  Reject  Read More     
 Privacy & Cookies Policy    
    Close   Privacy Overview  
 This website uses cookies to improve your experience while you navigate through the website. Out of these, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities of the website. We also use third-party cookies that help us analyze and understand how you use this website. These cookies will be stored in your browser only with your consent. You also have the option to opt-out of these cookies. But opting out of some of these cookies may affect your browsing experience.   

 Necessary   Necessary    
 Always Enabled    
 Necessary cookies are absolutely essential for the website to function properly. This category only includes cookies that ensures basic functionalities and security features of the website. These cookies do not store any personal information.   

 Non-necessary   Non-necessary     
   
 Any cookies that may not be particularly necessary for the website to function and is used specifically to collect user personal data via analytics, ads, other embedded contents are termed as non-necessary cookies. It is mandatory to procure user consent prior to running these cookies on your website.   

 SAVE & ACCEPT    

 Share  
     
   Blogger     
   Delicious     
   Digg     
   Email     
   Facebook     
   Facebook messenger     
   Flipboard     
   Google     
   Hacker News     
   Line     
   LinkedIn     
   Mastodon     
   Mix     
   Odnoklassniki     
   PDF     
   Pinterest     
   Pocket     
   Print     
   Reddit     
   Renren     
   Short link     
   SMS     
   Skype     
   Telegram     
   Tumblr     
   Twitter     
   VKontakte     
   wechat     
   Weibo     
   WhatsApp     
   X     
   Xing     
   Yahoo! Mail     

 Copy short link  
     
  Copy link

6. ACII_3 conference:
The requested URL was rejected. Please consult with your administrator.  
   
  Your support ID is: < 8203162004115251152>  
   
  [Go Back]

7. HPC Asia_3 conference:
Skip to main content      
  NCI     
   
 Secondary navigation  
 About us 
  News & Events 
  Media 
  Contact 
   
 Search navigation  
 User guides 
  MyNCI 
  Search 
   
 Site search  
  Search    
  Search     

 Mobile  Menu        

 Main navigation  
 Home 
  Our services | Expand Our services  sub menu | Supercomputing     Data Services     Data Collections Management      Virtual Research Environments     Data Storage     Visualisation      HPC Optimisation 
  Our systems | Expand Our systems  sub menu | HPC Systems     Cloud Systems      Storage Systems     Live Status 
  For users | Expand For users  sub menu | NCI Helpdesk     Terms and Conditions of Access      How to Access NCI     Specialised Support      User Training 
  RESEARCH at NCI | Expand RESEARCH at NCI  sub menu | Case Studies     Research Collaborations      Research Highlights     Publications      Humans of NCI 

 Event date   
 27 February - 02 March 2023  9am - 5pm    
   
 Events    
   
 Supercomputing Asia 2023  

  Description  
 The SupercomputingAsia (SCA) conference aims to be a major supercomputing conference in Asia, where top supercomputers in the world are located. Co-organised by supercomputing centres of the region including those in Australia, Japan, Singapore and Thailand and anchored by the National Supercomputing Centre (NSCC) Singapore, it incorporates a number of important supercomputing and allied events that together aim to promote a vibrant and shared high-performance computing (HPC) ecosystem, for both the public and private sectors, in Asia.  
 The International Conference on High Performance Computing in the Asia-Pacific Region (HPC Asia) is an international conference series for the Asia Pacific region on HPC technologies that fosters exchange of ideas, research results and case studies related to all issues of HPC. For the first time ever, HPC Asia 2023 will be co-located with SCA23 in Singapore. The HPC Asia and SCA events synergise the collaborative and collective strengths from two of Asia’s established conferences by bringing together key HPC researchers, academics, technology specialists and industry leaders from across the region and beyond.  
 In addition, Conference on Next Generation Arithmetic (CoNGA), the leading conference on emerging technologies for computer arithmetic, will also be back once again and will be held in conjunction with SCA23. Gain the latest news and updates on the developments of breakthroughs with next generation data formats and their corresponding hardware, tools, applications and services and exchange ideas on what next generation arithmetic should be.  
   
 Next and previous article navigation  
 Previous  
 Symposium on Advanced Materials and Sustainable Technology 2022   

 Next  
 CMIP7 Workshop: updates and new challenges   

 Share this event  
 Share via Twitter 
  Share via LinkedIn 
  Share via Email 

  Back to Events   

 Event details  
 Cost   
  FREE   
   
 Date and time   
  27 February - 02 March 2023  9am - 5pm  Asia/Singapore    

 Google Calendar    
 iCal export    
   
 Event website   
  sc-asia.org    

 Need assistance?  

 General enquiries   
 (02) 6125 9800   

 See our   
 Contact details   

 Visit our   
 Helpdesk   

 Stay up to date  

 NCI E-Newsletter   
 Subscribe   

 Twitter 
  YouTube 
  LinkedIn 

 Footer  
 Privacy 
  Copyright 
  Disclaimer 
  Contact us 
  Acknowledgement of Country 
  Site by Icon Agency 
    
 NCI  Sitemap      

 Sitemap  
 Our Systems | HPC Systems 
  Cloud Systems 
  Storage Systems 
  Live Status 
    
 Our Services | Supercomputing 
  Data Services 
  Data Collections Management 
  Virtual Research Environments 
  Data Storage 
  Visualisation 
  HPC Optimisation 
  R+D Activities 
    
 For Users | NCI Helpdesk 
  Access and Use Policies 
  How to access NCI 
  Specialised Support 
  Training 
  User Guides 
    
 Research at NCI | Research Highlights 
  Case Studies 
  Research Collaborations 
    
 News & Events | News 
  Events 
  Newsletter 
    
 About Us | Who we are 
  Governance 
  NCI Staff 
  History 
  Annual Reports 
  Data Centre 
  Working at NCI 
  Collaborators 
    
 Galleries 
  Contact Us 
  User Guides 
  MyNCI 
    
 Search | Search    Search 

 Need support?  
 Need help from one of our NCI support staff?  
   
 Help desk  

 If you are an existing user, submit a help request at help.nci.org.au    

 help@nci.org.au

8. ICAART_0 conference:
Home  Log In  Contacts  FAQs  INSTICC Portal    
   
 Information  Conference Details  Technical Program  Program Committee  Event Chairs  Keynote Lectures  Best Paper Awards  Satellite Events  Workshops  Special Sessions  Tutorials  Demos  Panels  Doctoral Consortium  Partners  Academic Partners  Industrial Partners  Exhibitors  Institutional Partners  Media Partners  Partner Events  Publication Partners  Previous Conferences  Abstracts  Awards    
  
 Sponsored by:    

 INSTICC is Member of:    

 Logistics:    

 ICAART 2023 will be held in conjunction with ICPRAM 2023    .   
  Registration to ICAART allows free access to the ICPRAM conference (as a non-speaker).  

  Although the conference is back to the normal mode (i.e., in-person) speakers are allowed to present remotely if unable to travel to the venue (hybrid support).    

 The purpose of the International Conference on Agents and Artificial Intelligence is to bring together researchers, engineers and practitioners interested in the theory and applications in the areas of Agents and Artificial Intelligence. Two simultaneous related tracks will be held, covering both applications and current research work. One track focuses on Agents, Multi-Agent Systems and Software Platforms, Distributed Problem Solving and Distributed AI in general. The other track focuses mainly on Artificial Intelligence, Knowledge Representation, Planning, Learning, Scheduling, Perception Reactive AI Systems, and Evolutionary Computing and other topics related to Intelligent Systems and Computational Intelligence.    
 Conference Areas  
 1  .  Agents   
  
  2  .  Artificial Intelligence   

  Conference Chair    
 Jaap van den Herik  ,  Leiden University, Netherlands   

 PROGRAM CO-CHAIRS    
 Ana Paula Rocha  ,  LIACC / FEUP, University of Porto, Portugal   
  Luc Steels  ,  Barcelona Supercomputing Center, Spain   

  Keynote Speakers   
 Philippe Codognet  ,  JFLI - CNRS / Sorbonne University / University of Tokyo, Japan   
  Valentina Presutti  ,  University of Bologna, Italy   
  Michael Spranger  ,  Sony AI, Japan   
  Aldo Gangemi  ,  University of Bologna, Italy   

 Special Sessions   
 Natural Language Processing in Artificial Intelligence - NLPinAI   
  Chair:  Roussanka Loukanova  

 Publications:     
  All papers presented at the conference venue  
  will be available at the SCITEPRESS Digital Library   
  ( consult SCITEPRESS  Ethics of Publication  )  

  A short list of best papers will be invited  
  for a post-conference special issue of the  
  Springer Nature Computer Science Journal   

  It is planned to publish a short list of revised and  
  extended versions of presented papers with Springer  
  in a LNAI Series book   

 Technically co-sponsored by:   

 In Cooperation with:    

 Proceedings will be submitted for evaluation for indexing by:    

  Web of Science/Conference Proceedings Citation Index     

 © 2024  INSTICC  - IEEE Ethics Reporting

9. ICAART_1 conference:
Home  Log In  Contacts  FAQs  INSTICC Portal    
   
 Documents  Actions  On-line Registration  Registration Fees  Deadlines and Policies  Submit Paper  Submit Abstract  Guidelines  Preparing your Presentation  Templates  Glossary  Author's Login  Reviewer's Login  Ethics of Review  Information  Conference Details  Important Dates  Call for Papers  Program Committee  Event Chairs  Keynote Lectures  Best Paper Awards  Satellite Events  Workshops  Special Sessions  Tutorials  Demos  Panels  Doctoral Consortium  Travel and Accommodation  Conference Venue  About the Region  Reaching the City  Visa Information  Hotel Reservation  Partners  Academic Partners  Industrial Partners  Institutional Partners  Media Partners  Partner Events  Publication Partners  Previous Conferences  Websites  Abstracts  Invited Speakers  Awards  Books Published    
  
 Sponsored by:    

 INSTICC is Member of:    

 Logistics:    

 ICAART 2025 will be held in conjunction with ICORES 2025    , PHOTOPTICS 2025    , ICPRAM 2025    and ROBOVIS 2025    .   
  Registration to ICAART allows free access to the ICORES, PHOTOPTICS, ICPRAM and ROBOVIS conferences (as a non-speaker).  

  Although the conference is back to the normal mode (i.e., in-person) speakers are allowed to present remotely if unable to travel to the venue (hybrid support).    

 Upcoming Submission Deadlines  
 Late-Breaking Submission Deadline:  December 16, 2024    
 Abstracts Track Submission:  December 18, 2024    
 Special Session Paper Submission:  December 18, 2024    
 Doctoral Consortium Paper Submission:  December 18, 2024    
  
  (See Important Dates for more information)    
 The purpose of the International Conference on Agents and Artificial Intelligence is to bring together researchers, engineers and practitioners interested in the theory and applications in the areas of Agents and Artificial Intelligence, covering both applications and current research work. On one side it focuses on Agents, Multi-Agent Systems and Software Platforms, and also Distributed Problem Solving. On the other side it focuses on Artificial Intelligence, Knowledge Representation, Planning, Learning, Scheduling, Perception. Applications are in both areas. They are using Natural Language Processing (NLP), Legal Technologies and Quantum Computing.  
   
  The last four years the research emphasis has shifted towards Explainable AI and Interpretable AI with a focus on trustworthiness, fairness, privacy, safety, security and ethical issues. A substantial amount of research work is ongoing in these knowledge areas, in an attempt to discover appropriate theories and paradigms to use in real-world applications.    

 Conference Areas  
 1  .  Agents   
  
  2  .  Artificial Intelligence   

  Conference Chair    
 Jaap van den Herik  ,  Leiden University, Netherlands   

 PROGRAM CO-CHAIRS    
 Ana Paula Rocha  ,  LIACC / FEUP, University of Porto, Portugal   
  Luc Steels  ,  Barcelona Supercomputing Center, Spain   

  Keynote Speakers   
 Paul Nemitz  ,  Principal Adviser European Commission, Belgium   
  Pavan Duggal  ,  Advocate, Supreme Court of India, Chairman, International Commission on Cyber Security Law India, and Chief Executive, Artificial Intelligence Law Hub, India   

 Special Sessions   
 Quantum Artificial Intelligence and Optimization 2025 - QAIO   
  Chairs:  Michael Kölle and Johan F. Hoorn  
   Submission:  December 18, 2024   
  Submit Paper   
   
  Interpretable Artificial Intelligence Through Glass-Box Models - IAI   
  Chair:  Mattias Wahde  
   Submission:  December 18, 2024   
  Submit Paper   
   
  Emotions and Affective Agents - EAA   
  Chairs:  Emilio Vivancos and Joaquin Taverner  
   Submission:  December 18, 2024   
  Submit Paper   

 Publications:     
  All papers presented at the conference venue  
  will be available at the SCITEPRESS Digital Library   
  ( consult SCITEPRESS  Ethics of Publication  )  

  It is planned to publish a short list of revised and  
  extended versions of presented papers with Springer  
  in a LNAI Series book  (final approval pending)  

  A short list of best papers will be invited  
  for a post-conference special issue of the  
  Springer Nature Computer Science Journal   

 In Cooperation with:    

 Proceedings will be submitted for evaluation for indexing by:    

  Web of Science/Conference Proceedings Citation Index     

 © 2024  INSTICC

10. ICAART_2 conference:
Home  Log In  Contacts  FAQs  INSTICC Portal    
   
 Documents  Actions  On-line Registration  Registration Fees  Deadlines and Policies  Submit Paper  Submit Abstract  Guidelines  Preparing your Presentation  Templates  Glossary  Author's Login  Reviewer's Login  Ethics of Review  Information  Conference Details  Important Dates  Call for Papers  Program Committee  Event Chairs  Keynote Lectures  Best Paper Awards  Satellite Events  Workshops  Special Sessions  Tutorials  Demos  Panels  Doctoral Consortium  Travel and Accommodation  Conference Venue  About the Region  Reaching the City  Visa Information  Hotel Reservation  Partners  Academic Partners  Industrial Partners  Institutional Partners  Media Partners  Partner Events  Publication Partners  Previous Conferences  Websites  Abstracts  Invited Speakers  Awards  Books Published    
  
 Sponsored by:    

 INSTICC is Member of:    

 Logistics:    

 Deadlines and Policies  
 Important Deadlines  
  
 Early registrations are accepted until:    
   
 Conference Regular Papers:  December 20, 2024    
  Conference Position Papers:  January 13, 2025    
  Conference Late-Breaking Papers:  January 14, 2025    
  Special Sessions:  January 22, 2025  
   Doctoral Consortium:  January 22, 2025  
   Non-Speakers:  January 22, 2025   
  
 Late registrations are accepted until:   
 Non-Speakers:  February 11, 2025   
  After this date, non-speaker registration is still possible, although conference bags and proceedings are limited to the existing stock.   
   
  Note: All dates refer to AOE  time, i.e. "Anywhere on Earth"   
  
  Guidelines, Benefits and Policies  
  
 Each accepted paper will be published in the proceedings under an ISBN reference, on paper and on digital support, and must be presented at the conference.  
  It is mandatory that the camera-ready, copyright document, registration and payment, are received by the conference by the deadline indicated above as “early registration”.  
  To register a paper, the participant needs to select the "Speaker" registration. This applies to student papers and/or poster presentations.  
    
 1. Cancellation Policy for the Conference:  
 If we receive your written cancellation before January 16, 2025, the registration fees will be refunded, deducted by an administrative fee of 100 EUR. There will be no refunds for cancellations received after January 16, 2025.   
  
  2. Discounts over the registration fee are not cumulative.   
  
  3. Student Benefits:  
 Students must confirm their status by presenting a student card and a signed declaration from the supervisor professor. Students without a paper | are entitled to substantial discounts over the basic registration for non-speakers 
  Registration discounts are available when students are from underprivileged countries 
  Best Student Paper Awards will be given a voucher for a free or reduced registration fee in one event sponsored by INSTICC, valid during a 12 months period, including all conference materials (without the printed proceedings) 
  Free INSTICC Membership valid until the end of 2025, which can be used in this and in subsequent INSTICC conferences and provides extended access to the SCITEPRESS Digital Library. 

 © 2024  INSTICC

11. ICAART_3 conference:
Home  Log In  Contacts  FAQs  INSTICC Portal    
   
 Documents  Actions  On-line Registration  Registration Fees  Deadlines and Policies  Submit Paper  Submit Abstract  Guidelines  Preparing your Presentation  Templates  Glossary  Author's Login  Reviewer's Login  Ethics of Review  Information  Conference Details  Important Dates  Call for Papers  Program Committee  Event Chairs  Keynote Lectures  Best Paper Awards  Satellite Events  Workshops  Special Sessions  Tutorials  Demos  Panels  Doctoral Consortium  Travel and Accommodation  Conference Venue  About the Region  Reaching the City  Visa Information  Hotel Reservation  Partners  Academic Partners  Industrial Partners  Institutional Partners  Media Partners  Partner Events  Publication Partners  Previous Conferences  Websites  Abstracts  Invited Speakers  Awards  Books Published    
  
 Sponsored by:    

 INSTICC is Member of:    

 Logistics:    

 Conference Venue  Reaching the Venue   

   Conference Venue  

 The conference will take place at the Vila Galé Porto hotel.  
 Located in the heart of Porto, a ten-minute walk from the famous shopping street of Rua de Santa Catarina, the Vila Galé Porto hotel was built in 1999 and renovated in 2015. The metro station Campo 24 de Agosto is located just 100 meters from the hotel and it allows you easy and quick access to anywhere in the city and to the airport.  
 Having cinema as its inspiration, this unit’s common areas are decorated with pictures that recall iconic movie scenes, renowned directors or the most talented actors. 
 Address:   
 Vila Galé Porto Hotel  
   
 Av. Fernão de Magalhães, nº 7  
 4300-190 Porto  
  Portugal  
 Telephone number:  
  +351 225 191 800  
 Vila Galé Porto Hotel website |  

 © 2024  INSTICC

12. CIAC_0 conference:
Home 
  Conference | Committees 
  Venue 
  Keynote Speakers 
  Program 
  Social Events 
  Submission of Paper | Submissions 
  Call for Papers 
  Registration 
  Accommodation 
  Local Information | Travel Information 
  About Cyprus 
  About Larnaca 
  Contact 
   
 Select Page     

 13th International Conference on Algorithms and Complexity    
 14 – 16 June, 2023    
 Larnaca, Cyprus    

 Aims and Scope   
 The International Conference on Algorithms and Complexity is intended to provide a forum for researchers working in all aspects of computational complexity and the use, design, analysis and experimentation of efficient algorithms and data structures. The 13th International Conference on Algorithms and Complexity (CIAC 2023) will take place in Larnaca on June 14-16, 2023  .  

 Accepted Papers    
   
 Important Dates   
 Deadline for submissions: | November 16, 2022 | November 30 | , December 09, 2022(AoE) 
  Author notification: | January 16, 2023 January 29, 2023 | February 05, 2023 
  Camera-ready due: | February 6, 2023 | February 16, 2023 

 Latest News   
 Registration is now open 
  The submission deadline is extended to November | 30, 2022. 
  CIAC 2023 website launched: 20 October, 2022 

 Venue   
 Lordos Beach Hotel   

 Read more    
   
 Town   
 Larnaca   

 Read more    
   
 Country   
 Cyprus   

 Read more    

 Organizing Institution   

 Sponsors   

 Special Lufthansa Group airlines fares  for flights to Larnaca or Paphos.  
 Click here   for more information  

 History   

 CIAC 2021   
 10th – 12th May, 2021  
 Online  

 CIAC 2019   
 27th – 29th May, 2019  
 Rome, Italy  

 CIAC 2017   
 24th – 26th May, 2017  
 Athens, Greece  

 CIAC 2015   
 20th – 22nd May, 2015  
 Paris, France  

 CIAC 2013   
 22nd – 24th May, 2013  
 Barcelona, Spain  

 CIAC 2010   
 26th – 28th May, 2010  
 Rome, Italy  

 CIAC 2006   
 29th – 31st May, 2006  
 Rome, Italy  

 CIAC 2003   
 28th – 30th May, 2003  
 Rome, Italy  

 CIAC 2000   
 01st – 03rd March, 2000  
 Rome, Italy  

 CIAC 1997   
 12th – 14th March, 1997  
 Rome, Italy  

 CIAC 1994   
 23rd – 25th February, 1994  
 Rome, Italy  

 All rights reserved |  EasyConferences Ltd.

13. AIST_0 conference:
AIST 2024  Program 
  CFP 
  Committees 
  Venue 
  Sponsors 
  Past events 
  Toggle menu    

 The 12th International Conference on  
  Analysis of Images, Social Networks and Texts  

   Abstract deadline : July 15 (Optional)  
  Submission deadline : August 1  August 8  
  Notification of acceptance : September 1  September 15  
  Camera-ready version : September 20  September 22  
  Conference : October 17 – October 19   
   
  https://zoom.us/j/98896632069?pwd=mrOl9ImmgkCmG5bMPP6wjxU83BLjtr.1   
   
  Register Now    
 Join our telegram chat.   
 News  
 October 8, 2024.  Local guidebook is available  !  
 October 4, 2024.  We are pleased to inform you that one of our partners, the High Technology Park of the Kyrgyz Republic, is offering a discount for conference participants on accommodation at the Bridges Hotel (2GIS). The discounted rate is 6,500 soms for a double room and 5,500 soms for a single room. If you would like to take advantage of this opportunity, please inform the organizers.  
 September 30, 2024.  Registration is now open  !  
 September 30, 2024.  The first keynote speakers are announced  !  
 September 24, 2024.  The venue address is as follows: Bishkek, Djal, Kyrgyz-Turkish Manas University, Ch.Aitmatov Campus. Faculty of Economics, 2nd floor.   
 July 10, 2024.  Deadline is extended until August, 8!  
 July 10, 2024.  Link for paper submission is available  !  
 April 22, 2024.  AIST-2024 will take place in Bishkek, Kyrgyzstan, on October 17-19  
 Older News    
 Welcome!  
 The 12th International Conference — Analysis of Images, Social Networks and Texts — will take place offline from October 17th through October 19th, 2024  .  
 The world of Data Science changes every year. At AIST, we exchange our understanding of the Science state-of-the-art, as well as how it applies to life and business. AIST is regularly held since 2012.  
 The conference will be held offline (Bishkek, Kyrgyzstan). See Venue  page for more information.  
 Publication  
    AIST-2024 proceedings will be published in Springer LNCS  .  
 The companion volume will be published in the satellite series CCIS  .  
 Please follow the Code of Conduct  when you prepare your final publication.  

 Follow: 
  Facebook 
  Instagram 
    
 © 2024 AIST. Powered by Jekyll  & Minimal Mistakes  .

14. CIAC_1 conference:
Home 
  Conference | Committees 
  Venue 
  Keynote Speakers 
  Program 
  Social Events 
  Paper Submission | Submissions 
  Call for Papers 
  Registration 
  Local Information | Travel Information 
  About Italy 
  About Rome 
  Contacts 
   
 Select Page     

 14th International Conference on Algorithms and Complexity    
 10 – 12 June, 2025    
 Rome, Italy    

 Aims and Scope   
 The International Conference on Algorithms and Complexity is intended to provide a forum for researchers working in all aspects of computational complexity and the use, design, analysis and experimentation of efficient algorithms and data structures. The 14th International Conference on Algorithms and Complexity (CIAC 2025) will take place in Rome on June 10-12, 2025  .  

 Important Dates   
 Deadline for submissions: | November 25, 2024 | (AoE) | extended November 22, 2024 
  Author notification: January 31, 2025 
  Camera ready due: February 14, 2025 

 Latest News   
 CIAC 2025 website launched: September 16, 2025 

 Venue   
 LUISS University, Rome   

 Read more    
   
 Town   
 Rome   

 Read more    
   
 Country   
 Italy   

 Read more    

 Organizing Institution   

 Sponsors   

 History   

 CIAC 2023   
 14th – 16th May, 2023  
 Larnaca, Cyprus  

 CIAC 2021   
 10th – 12th May, 2021  
 Online  

 CIAC 2019   
 27th – 29th May, 2019  
 Rome, Italy  

 CIAC 2017   
 24th – 26th May, 2017  
 Athens, Greece  

 CIAC 2015   
 20th – 22nd May, 2015  
 Paris, France  

 CIAC 2013   
 22nd – 24th May, 2013  
 Barcelona, Spain  

 CIAC 2010   
 26th – 28th May, 2010  
 Rome, Italy  

 CIAC 2006   
 29th – 31st May, 2006  
 Rome, Italy  

 CIAC 2003   
 28th – 30th May, 2003  
 Rome, Italy  

 CIAC 2000   
 01st – 03rd March, 2000  
 Rome, Italy  

 CIAC 1997   
 12th – 14th March, 1997  
 Rome, Italy  

 CIAC 1994   
 23rd – 25th February, 1994  
 Rome, Italy  

 All rights reserved |  EasyConferences Ltd.

15. AIST_1 conference:
AIST 2024  Program 
  CFP 
  Committees 
  Venue 
  Sponsors 
  Past events 
  Toggle menu    

 Program Details | Program 
  Keynote speakers 
  Accepted Papers 
  Best Paper Awards 

   Program  
  
 Join via Zoom link   
  Open program in a new tab   

 Follow: 
  Facebook 
  Instagram 
    
 © 2024 AIST. Powered by Jekyll  & Minimal Mistakes  .

16. CIAC_2 conference:
JavaScript must be enabled to use the system

17. AIST_2 conference:
AIST 2020  Program 
  CFP 
  Committees 
  Sponsors 
  Past events 
  Toggle menu    

  On this page  
  
 CALL FOR PAPERS 
  Past Conferences 
  Tracks 
  Important Dates 
  Publication 
  Venue 
  Submission Guidelines 
  Contact Information 

 AIST 2020   
  Online, Russia,  
  October 15-16, 2020.   
 CALL FOR PAPERS  
 We invite you to submit a paper to AIST-2020, a scientific conference on Analysis of Images, Social Networks, and Texts. The conference is intended for researchers and practitioners interested in data science focusing on innovative applications of data mining and machine learning techniques to image processing, analysis of social networks, text processing, and other domains, such as economics or geographic information systems.  
 The previous conferences in 2012-2019 attracted a significant number of students, researchers, academics, and engineers working on the analysis of images, texts, and social networks. The broad scope of AIST makes it an event where researchers from different domains, exploiting various data analysis techniques, can meet and exchange ideas. The conference allows specialists from different fields to meet each other, present their work, and discuss both theoretical and practical aspects of their data analysis problems.  
 Past Conferences  
 Similar to the previous years, the conference proceedings will be published in the Springer’s in Lecture Notes in Computer Science (LNCS) series. You can take a look at the proceedings of the last three years to get an idea about what kind of papers are accepted and what kind of topics are discussed at the conference:  
 AIST 2019: | Springer Lecture Notes in Computer Science (LNCS) vol. 11832 | and | Communications in Computer and Information Science (CCIS) vol. 1086 
  AIST 2018: | Springer Lecture Notes in Computer Science (LNCS) vol. 11179 
  AIST 2017: | Springer Lecture Notes in Computer Science (LNCS) vol. 10716 
  AIST 2016: | Springer Communications in Computer and Information Science (CCIS) vol. 661 
  AIST 2015: | Springer Communications in Computer and Information Science (CCIS) vol. 542 
  AIST 2014: | Springer Communications in Computer and Information Science (CCIS) vol. 436 
  Tracks  
 The conference will feature six tracks:  
 Data Analysis and Machine Learning 
  Natural Language Processing 
  Social Network Analysis 
  Computer Vision 
  Theoretical Machine Learning and Optimization 
  Process Mining 
  The list of topics relevant to these tracks is including but is not limited to:  
 Analysis of images and videos 
  Computational linguistics 
  Core data mining and machine learning techniques 
  Data analysis in geoinformation systems 
  Deep learning applications 
  Discovering and analyzing processes using event data 
  Educational data mining 
  Game analytics 
  Machine learning and data mining for economics and social sciences 
  Natural language processing and applications 
  Optimization problems in complex networks 
  Optimization models in data science 
  Recommender systems and collaborative technologies 
  Semantic web and ontologies 
  Social network analysis 
  Important Dates  
  
 Abstract deadline | July 1  July 8, 2020 
 Submission deadline | July 15  July 22, 2020 
 Notification of acceptance | September 15, 2020 
 Camera-ready papers due | October 1, 2020 
 Conference dates | October 15 – 16, 2020 
  
  All deadlines are 11.59 pm UTC -12h  ("anywhere on Earth").  
 Publication  
 AIST-2020 proceedings will be published in Springer LNCS ( Lecture Notes in Computer Science  ). The companion volume will be published in the satellite series CCIS ( Communications in Computer and Information Science  ).  
 Please pay attention to the publisher’s Editorial Policies  .  
 Venue  
 The conference will be held online with the support of Skolkovo Institute of Science and Technology (Skoltech).  
 Submission Guidelines  
 All papers must be original and not simultaneously submitted to another journal or conference. The following paper categories are welcome:  
 Full papers describing completed research up to 12 pages of content with references. Posters describing ongoing research up to 6 pages of content with references. The papers must be formatted according to the Springer LNCS style  . LaTeX template of the Springer LNCS is available at ShareLaTeX platform  . We encourage you to use the LaTeX template instead of the Word template. For further information please also read “Author instructions”   
 Papers should be submitted through the EasyChair conference management system  . Submitted papers should provide sufficient detail to allow the Program Committee to assess the merits of the paper on the basis of technical quality, relevance to the conference topics, originality, significance, and clarity of presentation. Papers should present original work previously not published or concurrently submitted to another conference or journal. Each paper will be reviewed by at least three PC members. To ensure a fair assessment of the submissions, the review will be double-blind, so you need to make your paper anonymous (remove links to your personal pages, acknowledgements, affiliations, etc.).  
 Contact Information  
 e-mail: | org@aistconf.org 

 Follow: 
  Facebook 
  Instagram 
  VK 
    
 © 2024 AIST. Powered by Jekyll  & Minimal Mistakes  .

18. AIST_3 conference:
AIST 2024  Program 
  CFP 
  Committees 
  Venue 
  Sponsors 
  Past events 
  Toggle menu    

 Committees | Organizing committee 
  Program committee 

   Organizing Committee  
  
 Organizing committee  
 Saltanat Mambaeva, Kyrgyz-Turkish Manas University, Local Committee 
  Aida Kasieva, Kyrgyz-Turkish Manas University, Local Committee 
  Anton Alekseev, St. Petersburg Department of Steklov Mathematical Institute RAS & Kazan Federal University 
  Timur Turatali, The Cramer Project 
  Ulan Abdurazakov, The Cramer Project 
  Irina Nikishina, Universität Hamburg 
  Elena Tutubalina, Kazan Federal University & AIRI 
  Maxim Panov, MBZUAI 
  Dmitry Ignatov, Higher School of Economics 
  Evgenii Tsymbalov, Apptek 
  Alexander Panchenko, Skolkovo Institute of Science and Technology & AIRI 
  Area chairs  
 Natural Language Processing  
 Andrey Kutuzov, University of Oslo 
  Elena Tutubalina, Kazan Federal University & AIRI 
  Natalia Loukachevitch, Research Computing Center of Moscow State University 
  Computer Vision  
 Andrey Savchenko, Higher School of Economics 
  Andrey Kuznetsov, AIRI 
  Data Analysis and Machine Learning  
 Evgenii Tsymbalov, Apptek 
  Maxim Panov, MBZUAI 
  Network Analysis  
 Irina Nikishina, Universität Hamburg 
  Dmitry Gubanov, IPU, Institute of Control Sciences, RAS 
  Theoretical Machine Learning and Optimization  
 M. Yu. D. Khachai, Krasovsky Institute of Mathematics and Mechanics, RAS 
  Rustem Takhanov, Nazarbayev University 
  Panos Pardalos, University of Florida 
  Publication  
 Evgenii Tsymbalov, Apptek 
  Dmitry Ignatov, Higher School of Economics 
  Web site  
 Irina Nikishina, Universität Hamburg 
  Local Scientific board  
 Alpaslan Ceylan, Rector of Kyrgyz-Turkish Manas University 
  Dr. Almaz Ibraev, Vice-Rector of Kyrgyz-Turkish Manas University, Kyrgyzstan 

 Follow: 
  Facebook 
  Instagram 
    
 © 2024 AIST. Powered by Jekyll  & Minimal Mistakes  .

19. CIAC_3 conference:
Anmelden 
  Registrierung 
  Deutsch  English 
  Español 
  Português 
  Français 

     Dom 
  Najlepsze kategorie | CAREER & MONEY 
  PERSONAL GROWTH 
  POLITICS & CURRENT AFFAIRS 
  SCIENCE & TECH 
  HEALTH & FITNESS 
  LIFESTYLE 
  ENTERTAINMENT 
  BIOGRAPHIES & HISTORY 
  FICTION 
  Najlepsze historie 
  Najlepsze historie 
  Dodaj historię 
  Moje historie 

 Home 
  Algorithms and Complexity: 13th International Conference, CIAC 2023, Larnaca, Cyprus, June 13–16, 2023, Proceedings 3031304470, 9783031304477 

 Algorithms and Complexity: 13th International Conference, CIAC 2023, Larnaca, Cyprus, June 13–16, 2023, Proceedings 3031304470, 9783031304477   
 This book constitutes the refereed proceedings of the 13th International Conference on Algorithms and Complexity, CIAC 2   
  486    96    10MB    
  English   Pages 411 [412]   Year 2023    
  Report DMCA / Copyright    
  DOWNLOAD FILE   
   
 Polecaj historie   

 Algorithms and Complexity: 13th International Conference, CIAC 2023, Larnaca, Cyprus, June 13–16, 2023, Proceedings 9783031304484, 9783031304477, 3031304489  
 This book constitutes the refereed proceedings of the 13th International Conference on Algorithms and Complexity, CIAC 2  
  207    96    38MB    Read more   

 Big Data Technologies and Applications: 13th EAI International Conference, BDTA 2023, Edinburgh, UK, August 23-24, 2023, Proceedings 3031522648, 9783031522642  
 This book constitutes the refereed post-conference proceedings of the 13th International Conference on Big Data Technolo  
  138    97    17MB    Read more   

 Integer Programming and Combinatorial Optimization. 24th International Conference, IPCO 2023 Madison, WI, USA, June 21–23, 2023 Proceedings 9783031327254, 9783031327261  
  
  603    82    13MB    Read more   

 Augmented Intelligence and Intelligent Tutoring Systems. 19th International Conference, ITS 2023 Corfu, Greece, June 2–5, 2023 Proceedings 9783031328824, 9783031328831  
  
  835    73    50MB    Read more   

 Combinatorics on Words: 14th International Conference, WORDS 2023, Umeå, Sweden, June 12–16, 2023, Proceedings 3031331796, 9783031331794  
 This book constitutes the refereed proceedings of the 14th International Conference on Combinatorics on Words, WORDS 202  
  135    9    6MB    Read more   

 Developments in Language Theory: 27th International Conference, DLT 2023, Umeå, Sweden, June 12–16, 2023, Proceedings 9783031332647, 9783031332630, 3031332644  
  
  645    58    25MB    Read more   

 Modeling Decisions for Artificial Intelligence. 20th International Conference, MDAI 2023 Umeå, Sweden, June 19–22, 2023 Proceedings 9783031334979, 9783031334986  
  
  537    80    9MB    Read more   

 Artificial General Intelligence: 16th International Conference, AGI 2023, Stockholm, Sweden, June 16–19, 2023, Proceedings 9783031334696, 9783031334689, 3031334698  
 This book constitutes the refereed proceedings of the 16th International Conference on Artificial General Intelligence,  
  368    26    30MB    Read more   

 Modeling Decisions for Artificial Intelligence: 20th International Conference, MDAI 2023, Umeå, Sweden, June 19–22, 2023, Proceedings 9783031334986, 9783031334979, 3031334981  
  
  504    55    24MB    Read more   

 Artificial General Intelligence: 16th International Conference, AGI 2023, Stockholm, Sweden, June 16–19, 2023, Proceedings 303133468X, 9783031334689  
 This book constitutes the refereed proceedings of the 16th International Conference on Artificial General Intelligence,  
  895    164    24MB    Read more   

 Author / Uploaded 
  Marios Mavronicolas 
  Categories 
  Science (general) 
  International Conferences and Symposiums 

 Table of contents :  
  Preface  
  Organization  
  Contents  
  Selected Combinatorial Problems Through the Prism of Random Intersection Graphs Models  
  1 Introduction and Motivation  
  2 Maximum Cliques in Random Intersection Graphs  
  3 Maximum Cut and Discrepancy in Random Set Systems  
  References  
  Unifying Gathering Protocols for Swarms of Mobile Robots  
  1 Introduction  
  2 Robot Formation Protocols  
  3 Continuous Time Gathering  
  3.1 Contracting Protocols  
  3.2 Results  
  3.3 An Exemplary Contracting Protocol  
  4 Discrete Time Gathering  
  4.1 -Contracting Protocols  
  4.2 Results  
  4.3 An Exemplary -Contracting Protocol  
  5 Outlook  
  References  
  The Complexity of Secure RAMs  
  References  
  The Power of the Binary Value Principle  
  1 Introduction  
  2 Preliminaries  
  2.1 Algebraic Proof Systems  
  2.2 A Semialgebraic Proof System  
  3 Circuit and Equational Representations  
  4 Explicit BIT Definition and Basic Lemmas  
  5 Polynomial Simulations  
  6 eBVP Cannot be Used to Prove CNF Lower Bounds  
  7 Further Research  
  References  
  Independent Set Under a Change Constraint from an Initial Solution  
  1 Introduction  
  2 Preliminaries  
  3 NP-Hardness of BD-MaxIS on Bipartite Graphs  
  4 Polynomial-Time Solvable Graph Subclasses of BD-MaxIS  
  4.1 Co-comparability Graphs  
  4.2 Interval Graphs  
  4.3 Convex Bipartite Graphs  
  4.4 Chordal Graphs  
  5 Concluding Remarks  
  References  
  Asynchronous Fully-Decentralized SGD in the Cluster-Based Model  
  1 Introduction  
  2 Preliminaries  
  2.1 Model of Computation  
  2.2 Stochastic Gradient Descent  
  3 Strongly-Convex Cost Functions  
  4 Non-Convex Cost Functions  
  5 Cluster-Based MDAA  
  6 Impossibility of Asynchronous SGD with System Partitions  
  7 Summary  
  References  
  Non-crossing Shortest Paths Lengths in Planar Graphs in Linear Time  
  1 Introduction  
  2 Preliminaries  
  2.1 Definitions and Notations  
  2.2 Paths and Non-crossing Paths  
  2.3 Genealogy Tree  
  3 Shortcuts  
  4 Computing Lengths in Linear Time  
  5 Listing Paths  
  6 Conclusions  
  References  
  How Vulnerable is an Undirected Planar Graph with Respect to Max Flow  
  1 Introduction  
  2 Max Flow in Planar Graphs  
  2.1 Itai and Shiloach's Approach/decomposition  
  3 Preliminary Results  
  3.1 Effects on G* and D of Deleting an Edge or a Vertex of G  
  3.2 Vitality vs. Distances in D  
  4 Slicing Graph D Preserving Approximated Distances  
  5 Computing Edge Vitality  
  6 Conclusions and Open Problems  
  References  
  Maximum Flows in Parametric Graph Templates  
  1 Introduction  
  1.1 Parametric Graph Templates  
  1.2 Related Work  
  1.3 Problem Statement  
  1.4 Our Results  
  2 Preliminaries  
  3 Templates of Parallel Loop Programs  
  3.1 Syntax  
  3.2 Semantics  
  3.3 Applications of Flows and Cuts  
  4 Template Maximum Flows  
  4.1 Edge-Reweighting  
  4.2 Source and Sink Belong to the Root Template  
  4.3 Instance Merging  
  4.4 Maximum All-s-t Flow  
  4.5 Partial Instantiation  
  4.6 Maximum Single-s-t Flow  
  5 Allowing Edges Between Sibling Templates  
  6 Conclusion  
  References  
  Dynamic Coloring on Restricted Graph Classes  
  1 Introduction  
  2 Preliminaries  
  3 Chordal Graphs  
  4 Bipartite Permutation Graphs  
  5 Biconvex Graphs  
  6 Hardness Results on Sub-classes of Bipartite Graphs  
  7 Parameterization by Neighborhood Diversity  
  8 Parameterizations by Twin-Cover and Clique-Width  
  9 Conclusion  
  References  
  Enumeration of Minimal Tropical Connected Sets  
  1 Introduction  
  2 Preliminaries  
  3 General Graphs  
  4 Chordal Graphs  
  5 Interval Graphs  
  References  
  Dynamic Flows with Time-Dependent Capacities  
  1 Introduction  
  2 Preliminaries  
  3 Computational Complexity  
  4 The Complexity of Maximum Flows and Minimum Cuts  
  4.1 Exponentially Complex Flows and Cuts  
  4.2 Complex Flows and Simple Cuts (and Vice Versa)  
  References  
  On One-Sided Testing Affine Subspaces  
  1 Introduction  
  2 Overview of the Testers and the Lower Bounds  
  2.1 The Algorithm for Functions that Describe Linear Subspace  
  2.2 Comparison with Goldreich and Ron Algorithm  
  2.3 The Algorithm for Functions that Describe Affine Subspace  
  2.4 The Algorithm for Functions that Describe Axis-Parallel Affine Subspace  
  2.5 Lower Bound for Testing Classes with Fixed/Bounded Dimension  
  3 Definitions and Preliminary Results  
  4 Three Testers  
  5 A Tester for AS  
  6 Lower Bounds  
  References  
  Stable Scheduling in Transactional Memory  
  1 Introduction  
  2 Technical Preliminaries  
  3 A Lower Bound  
  4 A Centralized Scheduler  
  5 A Distributed Scheduler  
  6 Conclusion  
  References  
  Parameterizing Path Partitions  
  1 Introduction  
  2 Definitions  
  3 NP-Hardness Results  
  4 W[1]-Hardness Results  
  5 XP Algorithms  
  6 Neighborhood Diversity Parameterization  
  7 Duals and Distance to Triviality  
  8 Conclusion  
  References  
  Maintaining Triconnected Components Under Node Expansion  
  1 Introduction  
  2 Preliminaries  
  3 Skeleton Decompositions  
  4 Extended Skeleton Decompositions  
  5 Node Expansion in Extended Skeleton Decompositions  
  5.1 Maintaining Planarity and Vertex Rotations  
  6 Application to Synchronized Planarity  
  References  
  Approximating Power Node-Deletion Problems  
  1 Introduction  
  1.1 Known Results on VC, PartVC, BDD, and FVS  
  1.2 Notation and Definitions  
  2 Power Node-Deletion and Submodular Set Cover  
  2.1 Submodular Set Cover Formulation  
  3 Power (Partial) Vertex Cover  
  4 Power Bounded Degree Deletion  
  4.1 Combination of Greedy and Local Ratio  
  5 Power Feedback Vertex Set  
  References  
  Phase Transition in Count Approximation by Count-Min Sketch with Conservative Updates  
  1 Introduction  
  2 Count-Min and Conservative Update  
  3 Hash Hypergraphs and CU Process  
  4 Phase Transition of the Relative Error  
  4.1 Main Results  
  4.2 Simulations  
  5 Proofs of the Main Results  
  5.1 Sketch of Proof of Theorem 2  
  5.2 Proof of Theorem 3  
  6 Analysis for Some Non-peelable Hypergraphs  
  7 Non-uniform Distributions  
  8 Concluding Remarks  
  References  
  Minimum-Link C-Oriented Paths Visiting a Sequence of Regions in the Plane  
  1 Introduction  
  2 Preliminaries  
  3 The Main Algorithm  
  3.1 Stage I  
  3.2 Stage II  
  4 Analysis  
  5 Extensions  
  References  
  Grouped Domination Parameterized by Vertex Cover, Twin Cover, and Beyond  
  1 Introduction  
  1.1 Definition and Motivation  
  1.2 Related Work  
  1.3 Our Contributions  
  2 Preliminaries  
  2.1 r-Grouped Dominating Set  
  3 Basic Results  
  4 Fast Algorithms Parameterized by Vertex Cover Number and by Twin Cover Number  
  4.1 Algorithms Parameterized by Vertex Cover Number  
  4.2 Algorithms Parameterized by Twin Cover Number  
  5 Beyond Vertex Cover and Twin Cover  
  5.1 Results Based on Algorithmic Meta-theorems and Related Results  
  References  
  Broadcasting in Split Graphs  
  1 Introduction  
  2 An Approximation Algorithm for Broadcasting in Split Graphs  
  2.1 Finding a Proper Star-Matching with Minimum Maxdegree  
  2.2 Broadcasting from a Vertex in the Clique  
  2.3 Broadcasting from a Vertex in the Independent Set  
  2.4 Tightness of Approximation  
  3 Analysis of an Optimal Broadcast Scheme  
  3.1 Split Graphs Achieving the Lower Bound of the Broadcast Time  
  4 Conclusion and Future Work  
  References  
  Partitioning Subclasses of Chordal Graphs with Few Deletions  
  1 Introduction  
  2 Preliminaries  
  3 Sub-exponential FPT Algorithm on Chordal Graphs  
  4 Polynomial Time Algorithmic Results  
  4.1 Interval Graphs  
  4.2 Proper Interval Graphs  
  4.3 Circular-Arc Graphs  
  4.4 Permutation Graphs  
  References  
  Complete Decomposition of Symmetric Tensors in Linear Time and Polylogarithmic Precision  
  1 Introduction  
  1.1 Symmetric Tensor Decomposition  
  1.2 Approximate Tensor Decomposition  
  1.3 Model of Computation  
  1.4 Our Results  
  1.5 Related Work and Discussion  
  1.6 The Algorithm  
  2 Slices After a Change of Basis  
  3 Diagonalisation Algorithm for Diagonalisable Matrices  
  4 Probability Analysis of Condition Numbers and Gap  
  References  
  Improved Deterministic Leader Election in Diameter-Two Networks  
  1 Introduction  
  1.1 Our Results  
  2 Model and Definition  
  3 Related Work  
  4 Deterministic Leader Election in Diameter-Two Networks  
  4.1 Algorithm  
  4.2 Broadcast Tree Formation  
  5 Conclusion and Future Work  
  References  
  Fast Cauchy Sum Algorithms for Polynomial Zeros and Matrix Eigenvalues  
  1 Introduction  
  1.1 The Classical Problem of Univariate Polynomial Root-Finding  
  1.2 Black Box Polynomial Root-Finding: The Problem  
  1.3 Black Box Polynomial Root-Finding: The State of the Art  
  1.4 Our Results  
  1.5 Classical Subdivision  
  1.6 Soft Exclusion/Inclusion Tests  
  1.7 The Known e/i Tests  
  1.8 New Progress  
  1.9 Cauchy-Based e/i Tests: Outline and an Extension  
  1.10 Organization of the Paper  
  2 Definitions and Basic Properties  
  3 The Power Sums of the Roots and Cauchy Sums  
  3.1 The Power Sums of the Roots and Cauchy Sums in the Unit Disc  
  3.2 Approximation Errors and Root-Counting in the Unit Disc  
  3.3 Extension to Any Disc  
  4 Deterministic -Test Under No Isolation Assumption  
  5 Randomized Root-Counting and -Tests  
  5.1 Solution with a Crude Bound on Error Probability  
  5.2 Refining the Bound on Error Probability  
  6 Precision of Computing in Our Root-Finders  
  7 Conclusions  
  References  
  On the Parameterized Complexity of the Structure of Lineal Topologies (Depth-First Spanning Trees) of Finite Graphs: The Number of Leaves  
  1 Introduction  
  1.1 Our Results  
  2 Preliminaries  
  2.1 Lineal Topology  
  2.2 Parameterized Complexity  
  2.3 Problem Definitions  
  2.4 Logic of Graphs  
  3 Complexity Analysis  
  3.1 Hardness Results  
  3.2 MSO Formulations  
  3.3 FPT Algorithms for Dual Min-LLT and Dual Max-LLT  
  4 Conclusion  
  References  
  Efficiently Enumerating All Spanning Trees of a Plane 3-Tree  
  1 Introduction  
  2 Preliminaries  
  3 On Spanning Trees of a Plane 3-Tree  
  4 Inductive Algorithm for Spanning Tree Enumeration  
  5 DP Algorithm for Spanning Tree Enumeration  
  6 Conclusions  
  References  
  Communication-Efficient Distributed Graph Clustering and Sparsification Under Duplication Models  
  1 Introduction  
  2 Definitions and Notations  
  3 Distributed Graph Clustering  
  4 Spanner Constructions in the Blackboard Model  
  5 Conclusions and Future Work  
  References  
  Author Index   
 Citation preview   
  LNCS 13898  
   
  Marios Mavronicolas (Ed.)  
   
  Algorithms and Complexity 13th International Conference, CIAC 2023 Larnaca, Cyprus, June 13–16, 2023 Proceedings  
   
  Lecture Notes in Computer Science Founding Editors Gerhard Goos Juris Hartmanis  
   
  Editorial Board Members Elisa Bertino, Purdue University, West Lafayette, IN, USA Wen Gao, Peking University, Beijing, China Bernhard Steffen , TU Dortmund University, Dortmund, Germany Moti Yung , Columbia University, New York, NY, USA  
   
  13898  
   
  The series Lecture Notes in Computer Science (LNCS), including its subseries Lecture Notes in Artificial Intelligence (LNAI) and Lecture Notes in Bioinformatics (LNBI), has established itself as a medium for the publication of new developments in computer science and information technology research, teaching, and education. LNCS enjoys close cooperation with the computer science R & D community, the series counts many renowned academics among its volume editors and paper authors, and collaborates with prestigious societies. Its mission is to serve this international community by providing an invaluable service, mainly focused on the publication of conference and workshop proceedings and postproceedings. LNCS commenced publication in 1973.  
   
  Marios Mavronicolas Editor  
   
  Algorithms and Complexity 13th International Conference, CIAC 2023 Larnaca, Cyprus, June 13–16, 2023 Proceedings  
   
  Editor Marios Mavronicolas University of Cyprus Nicosia, Cyprus  
   
  ISSN 0302-9743 ISSN 1611-3349 (electronic) Lecture Notes in Computer Science ISBN 978-3-031-30447-7 ISBN 978-3-031-30448-4 (eBook) https://doi.org/10.1007/978-3-031-30448-4 © The Editor(s) (if applicable) and The Author(s), under exclusive license to Springer Nature Switzerland AG 2023 This work is subject to copyright. All rights are reserved by the Publisher, whether the whole or part of the material is concerned, specifically the rights of translation, reprinting, reuse of illustrations, recitation, broadcasting, reproduction on microfilms or in any other physical way, and transmission or information storage and retrieval, electronic adaptation, computer software, or by similar or dissimilar methodology now known or hereafter developed. The use of general descriptive names, registered names, trademarks, service marks, etc. in this publication does not imply, even in the absence of a specific statement, that such names are exempt from the relevant protective laws and regulations and therefore free for general use. The publisher, the authors, and the editors are safe to assume that the advice and information in this book are believed to be true and accurate at the date of publication. Neither the publisher nor the authors or the editors give a warranty, expressed or implied, with respect to the material contained herein or for any errors or omissions that may have been made. The publisher remains neutral with regard to jurisdictional claims in published maps and institutional affiliations. This Springer imprint is published by the registered company Springer Nature Switzerland AG The registered company address is: Gewerbestrasse 11, 6330 Cham, Switzerland  
   
  Preface  
   
  This volume contains the papers presented at the 13th International Symposium on Algorithms and Complexity (CIAC 2023), which was held on June 13–16, 2023, in Larnaca, Cyprus. This event follows the tradition of the biannual CIAC symposium. The purpose of CIAC is to bring together researchers from computer science and mathematics to present and discuss original research on algorithms and complexity. It is intended to cover all important areas of the field, including but not limited to algorithm design and analysis, sequential, parallel and distributed algorithms, data structures, computational and structural complexity, lower bounds and limitations of algorithms, randomized and approximation algorithms, parameterized algorithms and parameterized complexity classes, smoothed analysis of algorithms, alternatives to the worst-case analysis of algorithms (e.g., algorithms with predictions), on-line computation and competitive analysis, streaming algorithms, quantum algorithms and complexity, algorithms in algebra, geometry, number theory and combinatorics, computational geometry, algorithmic game theory and mechanism design, algorithmic economics (including auctions and contests), computational learning theory, computational biology and bioinformatics, algorithmic issues in communication networks, algorithms for discrete optimization (including convex optimization) and algorithm engineering. 49 submissions to CIAC 2023 were received. Each submission was reviewed by at least three Program Committee members. The Program Committee decided to accept 25 papers. The program of CIAC 2023 featured three invited talks by three outstanding researchers in the general field of algorithms and complexity: Friedhelm Meyer auf der Heide, Pino Persiano and Paul Spirakis. We are very grateful to Friedhelm, Pino and Paul for joining us in Larnaca and for their invited talks. The Program Committee of CIAC 2023 awarded a Best Paper Award jointly and equally to the excellent papers “On One-Sided Testing Affine Subspaces,” by Nader Bshouty, and “Approximating Power Node-Deletion Problems,” by Toshihiro Fujito, Kento Mukae and Junya Tsuzuki. These papers received highest scores in the reviewing process. We would like to warmly congratulate their authors for receiving the award. We are extremely thankful to Springer for its generous financial support that made this award possible. Our sincere thanks go to all authors who submitted their research work to CIAC 2023. We would like to thank all Program Committee members, and also the external reviewers who assisted them, for their timely commitment and their thorough reviewing job. We are indebted to Easy Conferences Ltd., and particularly to Petros Stratis and Christos Therapontos, for their meticulous work in organizing CIAC 2023. The designers and the administrators of the Easy Chair conference system, which assisted tremendously the Program Committee in its work, deserve special thanks. We are honored that CIAC 2023  
   
  vi  
   
  Preface  
   
  is embraced under the auspices of the European Association for Theoretical Computer Science (EATCS). June 2023  
   
  Marios Mavronicolas  
   
  Organization  
   
  Program Committee Kristoffer Arnsfelt Hansen Hagit Attiya Vittorio Bilo Costas Busch Amin Coja-Oghlan Gianlorenzo D’Angelo Ioannis Emiris Antonio Fernandez Anta Nicola Galesi Alexandros Hollender Christos Kaklamanis Naoyuki Kamiyama Marios Mavronicolas Hendrik Molter Tobias Momke Leonidas Palios Vicky Papadopoulou Giulio Ermanno Pibiri Thomas Sauerwald Maria Serna Blerina Sinaimeri Shay Solomon Paul Spirakis Daniel Stefankovic Adrian Vladu Peilin Zhong  
   
  Aarhus University, Denmark Technion, Israel University of Salento, Italy Augusta University, USA TU Dortmund, Germany Gran Sasso Science Institute, Italy University of Athens & ATHENA Research Center, Greece IMDEA Networks, Spain Sapienza University of Rome, Italy EPFL, Switzerland University of Patras & CTI, Greece Kyushu University, Japan University of Cyprus, Cyprus Ben-Gurion University of the Negev, Israel University of Augsburg, Germany University of Ioannina, Greece European University Cyprus, Cyprus Ca’ Foscari, University of Venice, Italy University of Cambridge, UK Polytechnic University of Catalonia, Spain LUISS Guido Carli University, Italy Tel Aviv University, Israel University of Liverpool & CTI, UK University of Rochester, USA IRIF, CNRS & University of Paris, France Google Research, USA  
   
  Additional Reviewers Balzotti, Lorenzo Becker, Ruben Bonacina, Ilario Calzavara, Stefano  
   
  Carnevale, Daniele Checa Nualart, Carles Delfaraz, Esmaeil Deligkas, Argyrios  
   
  viii  
   
  Organization  
   
  Disser, Yann Eiben, Eduard Gianinazzi, Lukas Goldreich, Oded Gribling, Sander Hahn-Klimroth, Maximilian Huynh, Tony Ioannakis, George Karanikolas, Nikos Karczmarz, Adam Khadiev, Kamil Klobas, Nina Konstantopoulos, Charalampos Korpas, Georgios Krieg, Lena Lauria, Massimo Levin, Asaf Li, Huan Los, Dimitrios Majumder, Atrayee Mantzaflaris, Angelos Marino, Andrea  
   
  Maystre, Gilbert Melissourgos, Themistoklis Mkrtchyan, Vahan Muñoz, Martín Otachi, Yota Out, Charlotte Psarros, Ioannis Robinson, Peter Rolvien, Maurice Roshany, Aida Rossi, Mirko Ruderer, Michael Scheftelowitsch, Olga Silveira, Rodrigo Skretas, George Speckmann, Bettina Talebanfard, Navid Tong, Qianqian Trehan, Amitabh Wang, Chen Wang, Qisheng Zhang, Tianyi  
   
  Contents  
   
  Selected Combinatorial Problems Through the Prism of Random Intersection Graphs Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Paul G. Spirakis, Sotiris Nikoletseas, and Christoforos Raptopoulos  
   
  1  
   
  Unifying Gathering Protocols for Swarms of Mobile Robots . . . . . . . . . . . . . . . . . Jannik Castenow, Jonas Harbig, and Friedhelm Meyer auf der Heide  
   
  5  
   
  The Complexity of Secure RAMs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Giuseppe Persiano  
   
  17  
   
  The Power of the Binary Value Principle . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Yaroslav Alekseev and Edward A. Hirsch  
   
  21  
   
  Independent Set Under a Change Constraint from an Initial Solution . . . . . . . . . . Yuichi Asahiro, Hiroshi Eto, Kana Korenaga, Guohui Lin, Eiji Miyano, and Reo Nonoue  
   
  37  
   
  Asynchronous Fully-Decentralized SGD in the Cluster-Based Model . . . . . . . . . Hagit Attiya and Noa Schiller  
   
  52  
   
  Non-crossing Shortest Paths Lengths in Planar Graphs in Linear Time . . . . . . . . Lorenzo Balzotti and Paolo G. Franciosa  
   
  67  
   
  How Vulnerable is an Undirected Planar Graph with Respect to Max Flow . . . . . Lorenzo Balzotti and Paolo G. Franciosa  
   
  82  
   
  Maximum Flows in Parametric Graph Templates . . . . . . . . . . . . . . . . . . . . . . . . . . . Tal Ben-Nun, Lukas Gianinazzi, Torsten Hoefler, and Yishai Oltchik  
   
  97  
   
  Dynamic Coloring on Restricted Graph Classes . . . . . . . . . . . . . . . . . . . . . . . . . . . . 112 Sriram Bhyravarapu, Swati Kumari, and I. Vinod Reddy Enumeration of Minimal Tropical Connected Sets . . . . . . . . . . . . . . . . . . . . . . . . . . 127 Ivan Bliznets, Danil Sagunov, and Eugene Tagin Dynamic Flows with Time-Dependent Capacities . . . . . . . . . . . . . . . . . . . . . . . . . . 142 Thomas Bläsius, Adrian Feilhauer, and Jannik Westenfelder On One-Sided Testing Affine Subspaces . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 157 Nader H. Bshouty  
   
  x  
   
  Contents  
   
  Stable Scheduling in Transactional Memory . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 172 Costas Busch, Bogdan S. Chlebus, Dariusz R. Kowalski, and Pavan Poudel Parameterizing Path Partitions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 187 Henning Fernau, Florent Foucaud, Kevin Mann, Utkarsh Padariya, and K. N. Rajath Rao Maintaining Triconnected Components Under Node Expansion . . . . . . . . . . . . . . 202 Simon D. Fink and Ignaz Rutter Approximating Power Node-Deletion Problems . . . . . . . . . . . . . . . . . . . . . . . . . . . . 217 Toshihiro Fujito, Kneto Mukae, and Junya Tsuzuki Phase Transition in Count Approximation by Count-Min Sketch with Conservative Updates . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 232 Éric Fusy and Gregory Kucherov Minimum-Link C-Oriented Paths Visiting a Sequence of Regions in the Plane . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 247 Kerem Geva, Matthew J. Katz, Joseph S. B. Mitchell, and Eli Packer Grouped Domination Parameterized by Vertex Cover, Twin Cover, and Beyond . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 263 Tesshu Hanaka, Hirotaka Ono, Yota Otachi, and Saeki Uda Broadcasting in Split Graphs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 278 Hovhannes A. Harutyunyan and Narek Hovhannisyan Partitioning Subclasses of Chordal Graphs with Few Deletions . . . . . . . . . . . . . . . 293 Satyabrata Jana, Souvik Saha, Abhishek Sahu, Saket Saurabh, and Shaily Verma Complete Decomposition of Symmetric Tensors in Linear Time and Polylogarithmic Precision . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 308 Pascal Koiran and Subhayan Saha Improved Deterministic Leader Election in Diameter-Two Networks . . . . . . . . . . 323 Manish Kumar, Anisur Rahaman Molla, and Sumathi Sivasubramaniam Fast Cauchy Sum Algorithms for Polynomial Zeros and Matrix Eigenvalues . . . 336 Victor Y. Pan, Soo Go, Qi Luan, and Liang Zhao  
   
  Contents  
   
  xi  
   
  On the Parameterized Complexity of the Structure of Lineal Topologies (Depth-First Spanning Trees) of Finite Graphs: The Number of Leaves . . . . . . . . 353 Emmanuel Sam, Michael Fellows, Frances Rosamond, and Petr A. Golovach Efficiently Enumerating All Spanning Trees of a Plane 3-Tree: (Extended Abstract) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 368 Muhammad Nur Yanhaona, Asswad Sarker Nomaan, and Md. Saidur Rahman Communication-Efficient Distributed Graph Clustering and Sparsification Under Duplication Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 383 Chun Jiang Zhu Author Index . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 399  
   
  Selected Combinatorial Problems Through the Prism of Random Intersection Graphs Models Paul G. Spirakis1,2(B) , Sotiris Nikoletseas2,3 , and Christoforos Raptopoulos3 1  
   
  3  
   
  1  
   
  Department of Computer Science, University of Liverpool, Liverpool, UK [email protected]  2 Computer Technology Institute, Patras, Greece [email protected]  Computer Engineering and Informatics Department, University of Patras, Patras, Greece [email protected]   
   
  Introduction and Motivation  
   
  We discuss a simple, yet general family of models, namely Random Intersection Graphs (RIGs), initially introduced by Karo´ nski et al. [4] and Singer-Cohen [10]. In such models there is a universe M of labels and each one of n vertices selects a random subset of M. Two vertices are connected if and only if their corresponding subsets of labels intersect. A formal deﬁnition is given below: Definition 1 (Random Intersection Graph - Gn,m,p [4,10]). Consider a universe M = {1, 2, . . . , m} of labels and a set of n vertices V . Assign independently to each vertex v ∈ V a subset Sv of M, choosing each element i ∈ M independently with probability p and draw an edge between two vertices v = u if and only if Sv ∩ Su = ∅. The resulting graph is an instance Gn,m,p of the random intersection graphs model. In this model we also denote by Li the set of vertices that have chosen label i ∈ M . Given a random instance Gn,m,p of the random intersection graphs model, we will refer to {Li , i ∈ M} as its label representation, and the corresponding matrix R with columns the incidence vectors of label sets assigned to vertices is called the representation matrix. Furthermore, we refer to the bipartite graph with vertex set V ∪ M and edge set {(v, i) : i ∈ Sv } = {(v, i) : v ∈ Li } as the bipartite random graph Bn,m,p associated to Gn,m,p . Notice that the associated bipartite graph is uniquely deﬁned by the label representation. It follows from the deﬁnition of the model that the (unconditioned) probability that a speciﬁc edge exists is 1 − (1 − p2 )m . Therefore, if mp2 goes to inﬁnity with n, then this probability goes to 1. We can thus restrict the range of the parameters to the “interesting” range of values mp2 = O(1) (i.e. the range of values for which the unconditioned probability that an edge exists does not go c The Editor(s) (if applicable) and The Author(s), under exclusive license  to Springer Nature Switzerland AG 2023 M. Mavronicolas (Ed.): CIAC 2023, LNCS 13898, pp. 1–4, 2023. https://doi.org/10.1007/978-3-031-30448-4_28  
   
  2  
   
  P. G. Spirakis et al.  
   
  to 1). Furthermore, as is usual in the literature, we will assume that the number of labels is some power of the number of vertices, i.e. m = nα , for some α > 0. It is worth mentioning that the edges in Gn,m,p are not independent. For example, there is a strictly positive dependence between the existence of two edges that share an endpoint (i.e. Pr(∃{u, v}|∃{u, w}) > P r(∃{u, v})). This dependence is stronger the smaller the number of labels M includes, while it seems to fade away as the number of labels increases. In fact, by using a coupling technique, the authors in [3] proved the equivalence (measured in terms of total variation distance) of uniform random intersection graphs and Erd˝ os-R´enyi random graphs, when m = nα , α > 6. This bound on the number of labels was improved in [5], where it was proved that the total variation distance between the two models tends to 0 when m = nα , α > 4. Furthermore, [9] proved the equivalence of sharp threshold functions among the two models for α ≥ 3. Similarity of the two models has been proved even for smaller values of α (e.g. for any α > 1) in the form of various translation results (see e.g. Theorem 1 in [8]), suggesting that some algorithmic ideas developed for Erd˝ os-R´enyi random graphs also work for random intersection graphs (and also weighted random intersection graphs). These results suggest that random intersection graphs are quite general and that known techniques for random graphs can be used in the analysis of random intersection graphs with a large number of labels. Motivation. Random intersection graphs may model several real-life applications quite accurately. In fact, there are practical situations where each communication agent (e.g. a wireless node) gets access only to some ports (statistically) out of a possible set of communication ports. When another agent also selects a communication port, then a communication link is implicitly established and this gives rise to communication graphs that look like random intersection graphs. RIG modeling is useful in the eﬃcient blind selection of few encryption keys for secure communications over radio channels ( [1]), as well as in k-Secret sharing between swarm mobile devices (see [2]). Furthermore, random intersection graphs are relevant to and capture quite nicely social networking. Indeed, a social network is a structure made of nodes tied by one or more speciﬁc types of interdependency, such as values, visions, ﬁnancial exchange, friends, conﬂicts, web links etc. Other applications may include oblivious resource sharing in a distributed setting, interactions of mobile agents traversing the web, social networking etc. Even epidemiological phenomena (like spread of disease between individuals with common characteristics in a population) tend to be more accurately captured by this “proximity-sensitive” family of random graphs. From an average case analysis algorithmic perspective, the number of labels m may be viewed as a parameter controlling the clique cover size of input graphs. It is worth noting that some combinatorial problems that are considered to be hard when the input is drawn from the Erd˝ os-R´enyi random graphs model are easily solved when the input is drawn from the random intersection graphs model and the representation matrix R is explicitly provided as part of the input (rather than just giving the constructed graph instance as input). One such example is the problem of ﬁnding a maximum clique in Gn,m,p , in the  
   
  Selected Combinatorial Problems  
   
  3  
   
  dense case m = nα , α < 1. Furthermore, there are combinatorial optimization problems that can be naturally described as graph theoretical problems in generalizations of the aforementioned model of random intersection graphs. In this talk, we discuss some structural and algorithmic results regarding random intersection graphs and we present an interesting connection between the problem of discrepancy in random set systems and the problem of Max Cut in weighted random intersection graphs.  
   
  2  
   
  Maximum Cliques in Random Intersection Graphs  
   
  We discuss the Single Label Clique Theorem (SLCT) from [6], which states that when the number of labels is less than the number of vertices, any large enough clique in a random instance of Gn,m,p is formed by a single label. This statement may seem obvious when p is small, but it is hard to  imagine that it still holds  
   
  1 for all “interesting” values for p. Indeed, when p = o nm , it can be proved that Gn,m,p almost surely has no cycle of size k ≥ 3 whose edges are formed by k distinct labels (alternatively, the intersection graph produced by reversing the roles of labels and vertices is a tree). On the other hand, for larger p a random instance of Gn,m,p is far from perfect1 and thus the proof of the SLCT is based on a careful contradiction argument regarding the non-existence of large multi-label cliques.  
   
  3  
   
  Maximum Cut and Discrepancy in Random Set Systems  
   
  A natural weighted version of the random intersection graphs model was introduced in [7], where to each edge {u, v} we assign weight equal to the number of common labels chosen by u and v, namely |Su ∩ Sv |. In particular, the weight matrix of a random instance of the weighted random intersection graphs model G n,m,p is equal to RT R, where the columns of R are the incidence vectors of label sets assigned to vertices; we denote the corresponding random instance by G(V, E, RT R). We initially present some results from [7] regarding the concentration of the weight of a maximum cut of G(V, E, RT R) around its expected value, and then show that, when the number of labels is much smaller than the number of vertices (in particular, m = nα , α < 1), a random partition of the vertices achieves asymptotically optimal cut weight with high probability. Furthermore, in the case n = m and constant average degree (i.e. p = Θ(1) n ), we show that with high probability, a majority type randomized algorithm outputs a cut with weight that is larger than the weight of a random cut by a multiplicative constant strictly larger than 1. 1  
   
  A perfect graph is a graph in which the chromatic number of every induced subgraph equals the size of the largest clique of that subgraph. Consequently, the clique number of a perfect graph is equal to its chromatic number.  
   
  4  
   
  P. G. Spirakis et al.  
   
  Finally, we present a connection between the computational problem of ﬁnding a (weighted) maximum cut in G(V, E, RT R) and the problem of ﬁnding a 2-coloring that achieves minimum discrepancy for a set system Σ with incidence matrix R (i.e. minimum imbalance over all sets in Σ). This connection was exploited in [7] by proposing a (weak) bipartization algorithm for the case that, when it terminates, its output can be used to ﬁnd a m = n, p = Θ(1) n 2-coloring with minimum discrepancy in a set system with incidence matrix R. In fact, with high probability, the latter 2-coloring corresponds to a bipartition with maximum cut-weight in G(V, E, RT R).  
   
  References 1. Dolev, S., Gilbert, S., Guerraoui, R., Newport, C.C.: Secure communication over radio channels. In: Proceedings of the ACM Symposium on Principles of Distributed Computing (PODC), pp. 105–114 (2008) 2. Dolev, S., Lahiani, L., Yung, M.: Secret swarm unitreactive k-secret sharing. In: Proceedings of the 8th International Conference on Cryptology in India (INDOCRYPT), pp. 123–137 (2007) 3. Fill, J., Sheinerman, E., Singer-Cohen, K.: Random intersection graphs when m = ω(n): an equivalence theorem relating the evolution of the G(n, m, p) and G(n, p) models. Random Struct. Algorithms 16(2), 156–176 (2000) 4. Karo´ nski, M., Scheinerman, E.R., Singer-Cohen, K.B.: On random intersection graphs: the subgraph problem. Comb. Probab. Comput. 8, 131–159 (1999) 5. Kim, J.H., Lee, S.J., Na, J.: On the total variation distance between the binomial random graph and the random intersection graph. Random Struct. Algorithms 52(4), 662–679 (2018) 6. Nikoletseas, S.E., Raptopoulos, C.L., Spirakis, P.G.: Maximum cliques in graphs with small intersection number and random intersection graphs. Comput. Sci. Rev. 39, 100353 (2021) 7. Nikoletseas, S., Raptopoulos, C., Spirakis, P.: Max cut in weighted random intersection graphs and discrepancy of sparse random set systems. In: Proceedings of the 32nd International Symposium on Algorithms and Computation (ISAAC), pp. 1–16 (2021) 8. Raptopoulos, C., Spirakis, P.: Simple and eﬃcient greedy algorithms for bamilton cycles in random intersection graphs. In: Proceedings of the 16th International Symposium on Algorithms and Computation (ISAAC), pp. 493–504 (2005) 9. Rybarczyk, K.: Equivalence of a random intersection graph and G(n, p). Random Struct. Algorithms 38(1–2), 205–234 (2011) 10. Singer-Cohen, K.B.: Random intersection graphs, Ph.D. thesis, John Hopkins University (1995)  
   
  Unifying Gathering Protocols for Swarms of Mobile Robots Jannik Castenow , Jonas Harbig , and Friedhelm Meyer auf der Heide(B) Heinz Nixdorf Institute and Computer Science Department, Paderborn University, Paderborn, Germany {jannik.castenow,jonas.harbig,fmadh}@upb.de https://www.hni.uni-paderborn.de/en/alg/  
   
  Abstract. In this paper, we survey recent results regarding the Gathering problem in the research area of distributed computing by mobile robots. We assume a simple, standard model of robots: they are pointshaped, live in a d- dimensional Euclidean space, are disoriented (do not agree on common directions or orientations), and have limited visibility (can only observe other robots up to a constant distance). The goal of Gathering is to gather all robots at a single, not predeﬁned point. Our focus lies on unifying and extending existing work on gathering in the above model. For this, we derive core properties of protocols that guarantee Gathering and prove runtime bounds that improve upon previous work. This paper surveys results presented in [2, 3, 11] in which such core properties are derived in two diﬀerent time models: a discrete, round-based time model and a continuous time model. Keywords: mobile robots  
   
  1  
   
  · gathering · continuous · discrete · runtime  
   
  Introduction  
   
  Model and Scenario. We consider a scenario where a swarm of n robots is distributed in a Euclidean space Rd of dimension d ≥ 1. Each robot on its own has only very limited capabilities. Most crucially, the robots have a limited visibility, i.e., they can observe other robots only up to a constant distance. Throughout this work, we normalize this distance to 1. Moreover, each robot has its own local coordinate system, and the robots are disoriented, i.e., they do not agree on any direction and orientation of their local coordinate systems. The disorientation is even variable, meaning that the local orientation of the coordinate system of a ﬁxed robot might change from time to time. Furthermore, the robots are oblivious (no persistent memory) and silent (no communication capability). We consider two models for time: time can either be discrete (the robots operate in rounds) or continuous (the movement of each robot is deﬁned for each real point in time by a velocity vector). When time is discrete, we consider the robots to be This work was partially supported by the German Research Foundation (DFG) under the project number ME 872/14-1. c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  M. Mavronicolas (Ed.): CIAC 2023, LNCS 13898, pp. 5–16, 2023. https://doi.org/10.1007/978-3-031-30448-4_1  
   
  6  
   
  J. Castenow et al.  
   
  fully synchronized, i.e., all robots simultaneously start a new round (observe the environment, compute a target point, and move there). More details about the time models will be given in Sect. 2. All these robot features are in the literature denoted as the OBLOT model [8]. Typical tasks for such robot swarms are formation problems, where the robots have to move such that their positions form a predeﬁned pattern. The patterns point and Uniform Circle have evolved into the most important benchmark patterns in the literature. This stems from their high symmetry: it is well known that the patterns Point and Uniform circle are the only patterns that might be formed from any initial conﬁguration of the robots as it is only possible to form patterns that have the same or a higher symmetry as the initial conﬁguration (see [13] for a precise deﬁnition of symmetries in this context). The Gathering Problem. In this work, we focus on the pattern point, which is in the literature commonly denoted as the Gathering problem. The Gathering problem is trivial if the robots have unlimited visibility (robots can observe all other robots) and operate fully synchronized. In case the robots operate in rounds, the robots can, for example, all move to the center of the smallest enclosing circle of all robots’ positions and reach that position within one round [4]. If the robots are less synchronized and disoriented, the Gathering problem is generally impossible to solve, even if the robots have unlimited visibility [12]. Considering robots with limited visibility living in the Euclidean plane that operate in fully synchronized rounds, the Go-To-The-Center protocol (GtC protocol), in which robots move toward the center of the smallest enclosing circle of all visible  robots solves the Gathering problem [1]. Later on, a time bound of O n + Δ2 rounds has been proven, where Δ denotes the Euclidean diameter of the initial swarm [6]. The protocol has been generalized to the three-dimensional case with the same time bound in [2]. In this work, we focus on the class of λcontracting protocols, which allows solving Gathering within Θ(Δ2 ) rounds [3]. Notably, also the GtC protocol is λ-contracting. Also, in the continuous time model, Gathering can be solved by disoriented robots with limited visibility. In [9], e.g., the Move-On-Bisector (MoB) protocol has been introduced in which robots that are located on the convex hull of all visible neighbors move with a speed of 1 along the angle bisector of vectors pointing to their neighbors of the convex hull. The MoB protocol gathers in time O(n) [5]. Moreover, the protocol gathers in time O (OP T · log n), where OP T denotes the optimal time a protocol with unlimited visibility needs. Hence, the price of locality, i.e., the additional time caused by the limited visibility, is at most a factor of log n in the continuous time model. In Sect. 3, we describe a class of continuous protocols, the contracting protocols. They perform gathering in time O (n · Delta). Among others, MoB and a continuous version of Go-To-The-Center are contracting. Scope and Outline. We survey recent general results about the Gathering problem of disoriented robots with limited visibility in the OBLOT model, both for the round based and the continuous time model. For both time models, we introduce classes of protocols that solve the Gathering problem eﬃciently. The classes encapsulate the core properties of eﬃcient Gathering protocols.  
   
  Unifying Gathering Protocols for Swarms of Mobile Robots  
   
  7  
   
  Most importantly, the classes of protocols can be applied to robots that live in a Euclidean space of arbitrary dimension d. We start in Sect. 2 with a general notion of robot formation protocols for the discrete and continuous time model. The notion serves as a basis to deﬁne the concrete classes of protocols afterward. Section 3 introduces continuous contracting protocols. For d = 2 and d = 3, the protocols have been introduced an analyzed in [2,11]. The case d > 3 has not been published yet but can be obtained by generalizing the proof technique derived in [2]. The discrete class of protocols denoted as λ-contracting protocols is the topic of Sect. 4. The class of protocols and their analysis have been recently published in [3]. We conclude the paper with open problems in Sect. 5.  
   
  2  
   
  Robot Formation Protocols  
   
  We consider a swarm of n robots r0 , . . . , rn−1 . The robots start their protocol at time t = 0. When time is discrete, we consider time steps t ∈ N0 . Otherwise, time is continuous, and we consider all points in time t ∈ R≥0 . The position of a robot ri at time t is denoted by pi (t) in a global coordinate system (not known to the robots). We collectively call the set of all robots’ positions at time t the conﬁguration. The initial conﬁguration, i.e., the conﬁguration at time t = 0, is assumed to be connected. More formally, at time t = 0, the initial Unit Ball Graph of the robots’ positions is connected. In the Unit Ball Graph at time t, the vertices represent the robots, and two robots are connected via an edge if their distance is at most 1. Next, we describe continuous and discrete robot formation protocols, i.e., a formal way to describe the robots’ behavior in two diﬀerent time models: the continuous time model and the discrete, round-based, LCM model. Continuous Protocols. At every point in time, each robot computes a target point and a speed between 0 and 1 and moves with the given speed towards this point. More formally, we obtain the following notion of continuous protocols. Definition 1. A continuous robot formation protocol P deﬁnes for each robot P ri and each t ∈ R≥0 a target point targetP i (t) and a speed si (t) ∈ [0, 1] describing the robots current movement direction and speed. Together, both deﬁne the   sP (t) velocity vector viP (t) = targetPi(t)−pi (t)2 targetP i (t) − pi (t) . i  
   
  Often, we describe only the velocity vectors; however, typical protocols are designed such that each robot computes a target point and moves with a certain speed toward it. The function pi : R≥0 → Rd is the trajectory of ri . The trajectories are continuous but not necessarily diﬀerentiable. Occasionally, robots can change their direction and speed non-continuously (e.g., when a new robot becomes visible), leading to a non-diﬀerentiable trajectory. Typical protocols have right-diﬀerentiable trajectories. This way, we can interpret the velocity vectors as the (right) derivative of the trajectories, i.e., viP : R≥0 → Rd = p˙i . Discrete Protocols. When time is discrete, robots operate in LCM cycles consisting of the operations Look, Compute, and Move. During Look, each robot takes a snapshot of all visible robots in its local coordinate system; it  
   
  8  
   
  J. Castenow et al.  
   
  computes a target point based on the snapshot during Compute and ﬁnally moves there within the Move operation. We assume a rigid movement, i.e., the robots always reach their target points. The LCM cycles are also denoted as rounds. The timing of the cycles is fully synchronous (Fsync), i.e., each robot is active in every round, and all robots observe their environment and move simultaneously. Analogously to continuous robot formation protocols, we deﬁne discrete robot formation protocols, a convenient way to describe the properties of protocols. Definition 2. A discrete robot formation protocol P deﬁnes for each robot ri and each t ∈ N a target point targetPi (t) such that pi (t + 1) = targetPi (t).  
   
  3  
   
  Continuous Time Gathering  
   
  This section presents the class of contracting protocols for the continuous time model. The class itself is introduced in Sect. 3.1. Afterward, we present time bounds for contracting protocols in Sect. 3.2. We conclude the section with an exemplary contracting protocol in Sect. 3.3. 3.1  
   
  Contracting Protocols  
   
  The main idea of Gathering protocols that consider robots with limited visibility is always to let robots move toward the inside of the swarm. Thereby, the global convex hull of all robots’ positions gets smaller and smaller until the robots ﬁnally gather at a single point. In the continuous time model, we observe that such a simple and elegant criterion is suﬃcient to deﬁne eﬃcient protocols to solve Gathering. More precisely, we deﬁne the class of contracting protocols based on [10,11]. Intuitively, a robot formation protocol is contracting if robots located on the vertices of the global convex hull enclosing all robots’ positions move with a speed of 1 inside the closed global convex hull. See Fig. 1 for a visualization. We denote the global convex hull of all robots’ positions at time t by CH(t). Then, the following Deﬁnition 3 characterizes contracting protocols precisely.  
   
  Fig. 1. A visualization of a (globally) contracting protocol. Robots that are located on the vertices of the global convex hull (marked by solid lines) move with a speed of 1 inside the closed convex hull (the velocity vectors are marked by arrows).  
   
  Unifying Gathering Protocols for Swarms of Mobile Robots  
   
  9  
   
  Definition 3. A continuous robot formation protocol is called (globally) contracting if for every point in time t and every robot ri whose position is a vertex of CH(t), it holds that targetPi (t) ∈ CH(t) and sP i (t) = 1. Observe that Deﬁnition 3 refers to the global convex hull of all robots’ positions. However, due to the limited visibility, robots compute their target points based on their (local) neighborhood. Nevertheless, typical target points such as the center of the smallest enclosing circle of a robot’s neighborhood [1] lie inside the global convex hull and thus fulﬁll – at ﬁrst sight – the criterion of being contracting. Still, the movements of the robots might disconnect the swarm. Consider, for instance, the case that a protocol divides the conﬁguration into two connected components. The robots of the connected components might gather at two diﬀerent points. Afterward, the robots are not aware that robots occupy a second position and remain in their current location. As a result, the protocol is not contracting since the robots do not move anymore, although they have not yet gathered at a single point. With this observation, we see that maintaining connectivity is an essential property of local protocols and deﬁne the following class of locally contracting protocols. The deﬁnition uses CHi (t) to describe the convex hull of all robots’ positions visible by ri at time t. Definition 4. A continuous robot formation protocol is called locally contracting if, for every point in time t, 1. the conﬁguration is connected, 2. for every robot ri whose position is a vertex of CHi (t), targetPi (t) ∈ CHi (t) and sP i (t) = 1. Informally speaking, a locally contracting protocol must maintain the swarm’s connectivity, and robots located on vertices of their local closed convex hull move with a speed of 1 inside. Since local convex hulls are completely contained in the global convex hull, every locally contracting protocol is also (globally) contracting. Lemma 1. Every locally contracting protocol is globally contracting. 3.2  
   
  Results  
   
  For d = 2, contracting protocols have been analyzed in [11]. The authors prove that every contracting protocol gathers the robots in time O (n · Δ), where Δ represents the Euclidean diameter, i.e., the maximum distance of two robots, of the initial conﬁguration. The analysis observes that the length of the boundary  
   
  10  
   
  J. Castenow et al.  
   
  of the convex hull of all robots’ positions is monotonically decreasing at a rate of Ω(1/n). Moreover, there is the Go-To-The-Left protocol that needs a time of Ω(n·Δ) to gather the robots when the robots are initially located on the vertices of a regular polygon with side length 1 (Theorem 1). The protocol assumes that the robots have a common understanding of left and right, and every robot moves with a speed of 1 towards its left neighbor. Thereby, every robot traces out a logarithmic spiral, and the robots ﬁnally gather at the center of the regular polygon. For an illustration, see Fig. 2. Theorem 1. There is a contracting protocol that gathers a connected swarm of n disoriented robots located in R2 with a viewing range of 1 in time Ω (n · Δ), where Δ denotes the Euclidean diameter of the initial conﬁguration. Contracting protocols have been analyzed for d = 3 in [2]. The analysis idea is to project the original three-dimensional conﬁguration onto a two-dimensional projection plane and to analyze the behavior of the robots in the projection. Note that the plane has to be chosen carefully; otherwise, some robots might not move in the projection (in case their velocity vectors are orthogonal to the plane). Hence, the analysis aims to ﬁnd a plane where all robots move  suﬃciently  fast. The authors of [2] prove an upper time bound of O n3/2 · Δ . The lower bound of Ω (n · Δ) from the two-dimensional case still holds. A rigorous generalization of the three-dimensional analysis, i.e., not only projecting once but d − 1 times, allows us to derive a time bound for arbitrary d. Every projection has to be chosen carefully and causes the velocity vectors of most robots to decrease. Hence, the time-bound (obtained by this analysis technique) depends on the dimension. Precisely, the time bound is stated as in the following theorem. Theorem 2. Every contracting protocol gathers a connected swarm of n disoriented robots located in Rd with a viewing range of 1 in time O(nlog(d) · Δ), where Δ denotes the Euclidean diameter of the initial conﬁguration. Notably, for d = 2, there is a contracting protocol known that has a significantly faster runtime. The Move-On-Bisector (MoB) protocol gathers the robots in time O(n). In the following, we introduce a diﬀerent contracting protocol.  
   
  Unifying Gathering Protocols for Swarms of Mobile Robots  
   
  11  
   
  Fig. 2. A visualization of the Go-To-The-Left protocol. Initially, the robots are located on a regular 10-gon (the black dots). Then, all robots move with a speed of 1 towards their left neighbor. As a result, the robots move along logarithmic spirals toward the center of the polygon.  
   
  3.3  
   
  An Exemplary Contracting Protocol  
   
  Next, a continuous version of the Go-To-The-Center (GtC) protocol [1] will be considered a concrete example of a contracting protocol. The two-dimensional version of this protocol was adapted for the continuous-time model by [11]. In the discrete-time version of the GtC protocol, connectivity is maintained with the help of limit circles, i.e., robots sometimes do not move towards the center of the smallest enclosing circle of their neighborhood but stop earlier. Compared to the discrete-time version, no additional measures have to be taken to preserve connectivity in the continuous-time model, as it can be shown that this happens naturally. The protocol is summarized in Algorithm 1. Algorithm 1. Continuous d-GtC 1: 2: 3: 4:  
   
  Ri (t) := {positions of robots visible from ri , including ri at time t} Si (t) := smallest enclosing hypersphere of Ri (t) ci (t) := center of Si (t) Move towards ci (t) with speed 1, or stay on ci (t) if ri is already positioned on it.  
   
  With the same arguments as in [11], it can be seen that d-GtC maintains the connectivity of the swarm. As the center of the smallest enclosing hypersphere is a convex combination of the points it encloses [7], it follows that d-GtC is locally contracting. Theorem 3. The continuous d-GtC protocol is locally contracting and therefore gathers a connected swarm of n disoriented robots located in Rd with a   log(d) ·Δ . viewing range of 1 in time O n  
   
  12  
   
  4  
   
  J. Castenow et al.  
   
  Discrete Time Gathering  
   
  The following section summarizes results recently published in [3]. In Sect. 3, we have seen the class of contracting protocols for the continuous time model. A protocol is contracting if robots that are located on the vertices of the global convex hull (enclosing all robots’ positions) move with a speed of 1 inside the global closed convex hull. The criterion itself is simple, elegant, and easy to verify. When thinking about a class of protocols in a round-based time model, the ﬁrst idea would be to transfer the class of continuous contracting protocols to the discrete setting. A ﬁrst attempt would be to demand that robots that are located on the vertices of the global convex hull move a certain distance inside the global closed convex hull per round. Unfortunately, in the discrete-time model, the target points of the robots have to be chosen much more carefully as otherwise the required time to solve Gathering gets very high, or the robots do not gather at all. Consider for instance the Go-To-The-Left protocol (Sect. 3.2 and Fig. 2). The robots are located on the vertices of a regular polygon with a side length of 1. In the continuous variant, the robots move with a speed of 1 towards their left neighbor. Thereby, the robots move along logarithmic spirals towards the center of the regular polygon (Fig. 2). A discretization might be to demand that robots move to the positions of their left neighbor. This, however, does not work as the robots would move directly to the position of their left neighbor such that the resulting conﬁguration is still the same regular polygon in the next round; the only diﬀerence is that each robot has moved one position to the left. Moreover, the robots must also move a certain minimal distance to obtain reasonable time bounds. We consider again that the robots are located on the vertices of a regular polygon with side length 1. Given this conﬁguration, e.g., the GtC protocol moves robots always to the midpoint between their two visible neighbors. Intuitively, also moving (by a constant factor) smaller distances lead to Gathering in asymptotically the same time (cf. Fig. 3). However, the required time increases as soon as the distance is signiﬁcantly smaller. With these two observations, we have emphasized that the target points must be chosen carefully in the sense that the target points must lie suﬃciently far inside the local convex hulls of the individual robots. In the following section, we formally deﬁne what suﬃciently far means. More precisely, we deﬁne the class of λ-contracting protocols – a class of protocols that solves Gathering eﬃciently.  
   
  Unifying Gathering Protocols for Swarms of Mobile Robots  
   
  13  
   
  Fig. 3. Started on the vertices of a regular polygon, the robots have to move a certain minimal distance inside to guarantee a reasonable runtime.  
   
  4.1  
   
  λ-Contracting Protocols  
   
  Similar to locally contracting (continuous) protocols, we demand that any discrete protocol to solve Gathering must be connectivity preserving, i.e., it always maintains the connectivity of the swarm. Next, we precisely deﬁne the meaning of suﬃciently far inside of local convex hulls, leading to a characterization of valid target points. Definition 5. Let Q be a convex polytope with diameter diam and λ a constant with λ ∈ (0, 1]. A point p ∈ Q is called to be λ-centered if it is the midpoint of a line segment completely contained in Q and has a length of λ · diam.  
   
  Fig. 4. A visualization of λ-centered points for the values of λ = 4/7 (left) and λ = 4/11 (right).  
   
  Two examples of λ-centered points are depicted in Fig. 4. Observe that moving to λ-centered points while maintaining connectivity does not necessarily enforce a ﬁnal gathering of the protocols. Consider, for instance, two robots. A protocol that demands the two robots to move halfway towards the midpoint between themselves would compute 1/4-centered target points. However, the robots would only converge towards the same position. The robots must be guaranteed to eventually compute the same target point to obtain a ﬁnal gathering. In the following, we denote by Ni (t) the set of all visible robots (including itself) of ri at time t. Moreover, Δi (t) is the Euclidean diameter of the robots in Ni (t). We demand that two robots with the same view eventually compute  
   
  14  
   
  J. Castenow et al.  
   
  the same target point by requiring that there is a constant c < 1, such that Ni (t) = Nj (t) and that Δi (t) = Δj (t) ≤ c implies that the robots compute the same target point. Protocols that have this property are called collapsing. Being collapsing is reasonable since λ-centered points are always inside local convex hulls. Hence, the robots’ local diameters are monotonically decreasing in case no further robot enters their neighborhood. Hence, demanding a threshold to enforce moving to the same point is necessary to ensure a ﬁnal gathering. The combination of connectivity preserving, collapsing, and λ-centered points leads to the notion of λ-contracting protocols. Definition 6. A connectivity preserving and collapsing discrete robot formation protocol P is called λ-contracting if targetPi (t) is a λ-centered point of CHi (t) for every robot ri and every t ∈ N0 . 4.2  
   
  Results  
   
  The following theorem summarizes the main result about λ-contracting protocols. Notably, the obtained time bound is (in contrast to continuous contracting protocols) independent of the number of robots n and the dimension of the Euclidean space d. Theorem 4. Every λ-contracting protocol gathers a connected swarm of n disoriented robots located in Rd with a viewing range of 1 in the OBLOT model in O(Δ2 ) rounds. Theorem 4 raises the question of a lower bound for λ-contracting protocols: is the time bound of O(Δ2 ) rounds tight? The answer turns out to be positive. Moreover, we can state a lower bound for an even larger class of natural protocols. Every protocol in which robots compute target points inside their neighborhood’s local convex hulls requires Ω(Δ2 ) rounds to gather all robots. Theorem 5. For every protocol for disoriented robots with a viewing range of 1 in the OBLOT model that computes the target point of a robot always inside of the local convex hull of all visible robots, there exists an initial conﬁguration where the protocol requires Ω(Δ2 ) rounds to gather all robots. 4.3  
   
  An Exemplary λ-Contracting Protocol  
   
  In Sect. 3.3, we have introduced the continuous variant of the GtC protocol as an example of continuous contracting protocols. Now, we introduce the discrete variant (for d = 2 originally introduced in [1] and for d = 3 in [2]). The core idea is the same as in the continuous variant: robots move towards the center of the smallest hypersphere enclosing their neighborhood. However, such a movement might cause a robot to get disconnected from the swarm. To overcome this, robots only move that far towards their target point such that the distance toward their neighbor always is at most one. The behavior is formally described in Sect. 4.3.  
   
  Unifying Gathering Protocols for Swarms of Mobile Robots  
   
  15  
   
  Algorithm 2. d-GtC (view of robot ri ) 1: 2: 3: 4: 5: 6: 7: 8:  
   
  Ci (t) := smallest enclosing hypersphere of Ni (t) ci (t) :=center of Ci (t) ∀rj ∈ Ni (t) : mj := midpoint between ri and rj Dj : hypersphere with radius 12 centered at mj seg :=line segment pi (t), ci (t) A := rj ∈Ni (t) Dj ∩ seg x := point in A closest to ci (t) (t) := x targetGtC i  
   
  That the d-GtC protocol is connectivity preserving follows directly from its deﬁnition. With rigorous analysis, it can be proven that the resulting target √ point is 2/16-contracting, and we obtain the following theorem. √  
   
  Theorem 6. The d-GtC protocol is 2/16-contracting and therefore gathers a d connected  2  swarm of n disoriented robots located in R with a viewing range of 1 in Θ Δ rounds.  
   
  5  
   
  Outlook  
   
    The class of (continuous) contracting protocols gathers in time O nlog(d) · Δ , while a lower bound of Ω(n · Δ) is known. Further research could investigate the gap between the upper and the lower time-bound. We believe the real answer is a time bound of Θ (n · Δ) for every dimension d. Intuitively, the dependence on the dimension d is an artifact from the analysis (d − 2 projections), and the important parameters in the runtime are solely the number of robots and the diameter Δ. Furthermore, the two-dimensional contracting protocol MoB gathers in time O(n) which is in many cases severely faster than the bound of O (n · Δ) [5]. Consequently, a further research question is: what are the properties of continuous robot formation protocols that gather in time O(n)? Is even a bound of O(Δ) achievable? Our research about λ-contracting protocols hints that a dependence only on the diameter mightbe achievable since the class of λ contracting protocols solves Gathering in Θ Δ2 rounds. Also, open questions remain regarding λ-contracting protocols and Gathering of disoriented robots with limited visibility in general. The following major open question remains unanswered: is it possible to solve Gathering of disoriented robots with limited visibility in the OBLOT model in O (Δ) rounds? We could get closer to the answer: If there is such a protocol, it must often compute target points outside of the convex hulls of robots’ neighborhoods.  
   
  References 1. Ando, H., Oasa, Y., Suzuki, I., Yamashita, M.: Distributed memoryless point convergence algorithm for mobile robots with limited visibility. IEEE Trans. Robot. Autom. 15(5), 818–828 (1999)  
   
  16  
   
  J. Castenow et al.  
   
  2. Braun, M., Castenow, J., Meyer auf der Heide, F.: Local gathering of mobile robots in three dimensions. In: Richa, A.W., Scheideler, C. (eds.) SIROCCO 2020. LNCS, vol. 12156, pp. 63–79. Springer, Cham (2020). https://doi.org/10.1007/978-3-03054921-3_4 3. Castenow, J., Harbig, J., Jung, D., Kling, P., Knollmann, T., Meyer auf der Heide, F.: A unifying approach to eﬃcient (near)-gathering of disoriented robots with limited visibility. In: OPODIS. LIPIcs, vol. 253, pp. 15:1–15:25. Schloss Dagstuhl - Leibniz-Zentrum für Informatik (2022) 4. Cohen, R., Peleg, D.: Convergence properties of the gravitational algorithm in asynchronous robot systems. SIAM J. Comput. 34(6), 1516–1528 (2005) 5. Degener, B., Kempkes, B., Kling, P., Meyer auf der Heide, F.: Linear and competitive strategies for continuous robot formation problems. ACM Trans. Parallel Comput. 2(1), 2:1–2:18 (2015) 6. Degener, B., Kempkes, B., Langner, T., Meyer auf der Heide, F., Pietrzyk, P., Wattenhofer, R.: A tight runtime bound for synchronous gathering of autonomous robots with limited visibility. In: SPAA, pp. 139–148. ACM (2011) 7. Elzinga, D.J., Hearn, D.W.: The minimum covering sphere problem. Manage. Sci. 19(1), 96–104 (1972) 8. Flocchini, P., Prencipe, G., Santoro, N.: Moving and computing models: Robots. In: Flocchini, P., Prencipe, G., Santoro, N. (eds.) Distributed Computing by Mobile Entities. Lecture Notes in Computer Science, vol. 11340, pp. 3–14. Springer, Cham (2019). https://doi.org/10.1007/978-3-030-11072-7_1 9. Gordon, N., Wagner, I.A., Bruckstein, A.M.: Gathering multiple robotic a(ge)nts with limited sensing capabilities. In: Dorigo, M., Birattari, M., Blum, C., Gambardella, L.M., Mondada, F., Stützle, T. (eds.) ANTS 2004. LNCS, vol. 3172, pp. 142–153. Springer, Heidelberg (2004). https://doi.org/10.1007/978-3-540-286462_13 10. Kling, P., Meyer auf der Heide, F.: Continuous protocols for swarm robotics. In: Flocchini, P., Prencipe, G., Santoro, N. (eds.) Distributed Computing by Mobile Entities. Lecture Notes in Computer Science, vol. 11340, pp. 317–334. Springer, Cham (2019). https://doi.org/10.1007/978-3-030-11072-7_13 11. Li, S., Markarian, C., Meyer auf der Heide, F., Podlipyan, P.: A continuous strategy for collisionless gathering. Theor. Comput. Sci. 852, 41–60 (2021) 12. Prencipe, G.: Impossibility of gathering by a set of autonomous mobile robots. Theor. Comput. Sci. 384(2–3), 222–231 (2007) 13. Suzuki, I., Yamashita, M.: Distributed anonymous mobile robots: formation of geometric patterns. SIAM J. Comput. 28(4), 1347–1363 (1999)  
   
  The Complexity of Secure RAMs Giuseppe Persiano1,2(B) 1  
   
  Universit` a di Salerno, Fisciano, Italy 2 Google, Mountain View, US [email protected]   
   
  Abstract. In this invited lecture, I survey the recent results on the complexity of Oblivious RAMs and of related cryptographic data structures and highlight the proof techniques employed.  
   
  In recent years, there has been signiﬁcant work in studying data structures that provide privacy for the operations that are executed. These primitives aim to guarantee that observable access patterns to physical memory do not reveal substantial information about the queries and updates executed on the data structure. The concept of an Oblivious RAMs (ORAMs) has been introduced by Goldreich and Ostrovsky [6]. An ORAM can be viewed an a secure implementation of the simplest data structure: an array (or a RAM) whose entries can be read and over-written. The typical setting is that of a client that has limited memory and outsources the storage of the array to a remote server and accesses the data stored in the array over a network. Clearly, to protect the conﬁdentiality of the data, each entry can be encrypted before the upload and decrypted once it is downloaded. Still, the server sees the access pattern and from this deduce the type of algorithm that is being executed which in turn can reveal the interest of the client. An ORAM is a protocol between the client and server that hides the access pattern. The obliviousness guarantee of an Oblivious RAM requires that no adversary that picks two challenge sequences of operations of the same length and observes the access pattern incurred by the execution of one of the sequences still cannot determine which of the two sequences gave rise to the access pattern observed. In recent years, ORAMs have been studied extensively to try and determine the optimal overhead (see [3,6,7,9,11] and references therein) that was reduced from O(log3 n) to O(log n), for a RAM with n entries. Indeed, for b-bit entries on a server with memory cell (word) size of ω = Θ(b) bits, the best known construction obtains logarithmic overhead O(b/ω · log n) [1] and requires only constant client memory. Is this the best we can do? The ﬁrst logarithmic lower bounds were proven by Goldreich and Ostrovsky [6] of the form Ω((b/ω) · (log n/ log c)) where the client has storage of c bits. Boyle and Naor [2] pointed out that these lower bounds assumed the so-called balls-and-bins model with a non-encoding assumption on the underlying blocks. c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  M. Mavronicolas (Ed.): CIAC 2023, LNCS 13898, pp. 17–20, 2023. https://doi.org/10.1007/978-3-031-30448-4_2  
   
  18  
   
  G. Persiano  
   
  Larsen and Nielsen [10] were the ﬁrst to prove lower bounds for the general case; i.e., without making any encoding assumption. They proved that a RAM of n entries each of b bits implemented by a server with a memory consisting of ω-bit words and a client with c bits of local memory requires Ω((b/ω) · log(nb/c)). This bound becomes increasingly weak as ω grows and Komargodski and Lin [8] proved a lower bound of Ω(log(nb/c)/ log(ω/b)) for the case ω > b. In the hope of obtaining faster RAM that would still oﬀer an adequate level of security, researchers have looked at weaker but still meaningful notions of security. In this talk we will overview three attempts and show that indeed any meaningful notion of security for RAMs seems to be as hard as Obliviousness. Differentially Private RAMs. In various practical applications, including the ﬁeld of privacy-preserving data analysis, the notion of Diﬀerential Privacy [5] is considered to oﬀer an adequate level of protection. Diﬀerentially Private RAMs (DPRAMs) aim to provide privacy for individual operations, but may reveal information about a sequence consisting of many operations. In more detail, if an adversary receives two candidate equal-length operational sequences that diﬀer in one operation and the access pattern incurred by the execution of one of the two sequences, the adversary should not be able to guess the identity of the executed sequence with too high probability. Unfortunately, DPRAMs incur in the same overhead as ORAM. Speciﬁcally, the Ω(b/ω · log nb/c) lower bound for DPRAMs by Persiano and Yeo [15] showed that this is impossible when b = Ω(ω) and, recently, this has been extended to Ω(log(nb/c)/ log(ω/b)) which is signiﬁcant for the case ω > b by [16]. Leaky RAMs. A second approach allows the RAM to leak some partial information about the sequence of operations. Currently, all known leaky RAMs with constant overhead reveal if two operations are performed on the same key or not. We denote this as global key−equality pattern. The result of [12] gives strong evidence that the leakage of the global key-equality pattern is inherent for any leaky RAM construction with O(1) eﬃciency. In particular, they consider the slightly smaller leakage of decoupled key-equality pattern where leakage of key-equality between update and query operations is decoupled and the adversary only learns whether two operations of the same type are performed on the same key or not. They show that any leaky RAM with at most decoupled key-equality pattern leakage incurs Ω(b/w · log n) overhead. Snapshot Adversaries. In some applications the server executing the access is not trusted but it could be temporarily compromised by an external adversary. Very recently, Du, Genkin and Grubbs [4] presented an ORAM construction with O(log ) overhead protecting against a snapshot adversary that observes the transcript of  consecutive operations from a single breach. For small values of , this outperforms standard ORAMs. However, if one allows to have 3 breaches, it has been recently proved [14] that we go back to Ω(b/w · log(nb/c)) overhead. Open Problem. The following question is thus still open. Is there a meaningful notion of security for which RAMs require a sub-logarithmic, or maybe even constant, overhead?  
   
  The Complexity of Secure RAMs  
   
  19  
   
  Also, it would be interesting to look at diﬀerent data structures. The research reported in [16] has a general framework to prove lower bounds for more sophisticated data structures. Acknowledgments. Most of the work discussed in this invited lecture is co-authored with Sarvar Patel and Kevin Yeo.  
   
  References 1. Asharov, G., Komargodski, I., Lin, W.-K., Nayak, K., Peserico, E., Shi, E.: OptORAMa: optimal oblivious RAM. In: Canteaut, A., Ishai, Y. (eds.) EUROCRYPT 2020, Part II. LNCS, vol. 12106, pp. 403–432. Springer, Cham (2020). https://doi.org/10.1007/978-3-030-45724-2 14 2. Boyle, E., Naor, M.: Is there an oblivious RAM lower bound?. In: Sudan, M., (ed.) ITCS 2016, pp. 357–368. ACM (2016) 3. Devadas, S., van Dijk, M., Fletcher, C.W., Ren, L., Shi, E., Wichs, D.: Onion ORAM: a constant bandwidth blowup oblivious RAM. In: Kushilevitz, E., Malkin, T. (eds.) TCC 2016, Part II. LNCS, vol. 9563, pp. 145–174. Springer, Heidelberg (2016). https://doi.org/10.1007/978-3-662-49099-0 6 4. Du, Y., Genkin, D., Grubbs, P.: Snapshot-oblivious RAMs: sub-logarithmic eﬃciency for short transcripts. In: Dodis, Y., Shrimpton, T. (eds.) CRYPTO 2022. Lecture Notes in Computer Science, vol. 13510, pp. 152–181. Springer, Cham (2022). https://doi.org/10.1007/978-3-031-15985-5 6 5. Dwork, C., McSherry, F., Nissim, K., Smith, A.: Calibrating noise to sensitivity in private data analysis. In: Halevi, S., Rabin, T. (eds.) TCC 2006. LNCS, vol. 3876, pp. 265–284. Springer, Heidelberg (2006). https://doi.org/10.1007/11681878 14 6. Goldreich, O., Ostrovsky, R.: Software protection and simulation on oblivious RAMs. J. ACM (JACM) 43(3), 431–473 (1996) 7. Goodrich, M.T., Mitzenmacher, M., Ohrimenko, O., Tamassia, R.: Privacypreserving group data access via stateless oblivious RAM simulation. In: Rabani, Y. (ed.), 23rd SODA, pp. 157–167. ACM-SIAM (2012) 8. Komargodski, I., Lin, W.-K.: A logarithmic lower bound for oblivious RAM (for all parameters). In: Malkin, T., Peikert, C. (eds.) CRYPTO 2021, Part IV. LNCS, vol. 12828, pp. 579–609. Springer, Cham (2021). https://doi.org/10.1007/978-3030-84259-8 20 9. Kushilevitz, E., Lu, S., Ostrovsky, R.: On the (in)security of hash-based oblivious RAM and a new balancing scheme. In: Rabani, Y. (ed.), 23rd SODA, pp. 143–156. ACM-SIAM (2012) 10. Larsen, K.G., Nielsen, J.B.: Yes, there is an oblivious RAM lower bound! In: Shacham, H., Boldyreva, A. (eds.) CRYPTO 2018, Part II. LNCS, vol. 10992, pp. 523–542. Springer, Cham (2018). https://doi.org/10.1007/978-3-319-96881-0 18 11. Patel, S., Persiano, G., Raykova, M., Yeo, K.: PanORAMa: oblivious RAM with logarithmic overhead. In: Thorup, M. (ed.) 59th FOCS, pp. 871–882. IEEE Computer Society Press (2018) 12. Patel, S., Persiano, G., Yeo, K.: Lower bounds for encrypted multi-maps and searchable encryption in the leakage cell probe model. In: Micciancio, D., Ristenpart, T. (eds.) CRYPTO 2020, Part I. LNCS, vol. 12170, pp. 433–463. Springer, Cham (2020). https://doi.org/10.1007/978-3-030-56784-2 15  
   
  20  
   
  G. Persiano  
   
  13. Persiano, G., Yeo, K.: Limits of preprocessing for single-server PIR. In: SODA 2022, SIAM, pp. 2522–2548 (2022) 14. Persiano, G., Yeo, K.: Limits of breach-resistant and snapshot-oblivious RAMs. Unpublished manuscript (2023) 15. Persiano, G., Yeo, K.: Lower bounds for diﬀerentially private RAMs. In: Ishai, Y., Rijmen, V. (eds.) EUROCRYPT 2019, Part I. LNCS, vol. 11476, pp. 404–434. Springer, Cham (2019). https://doi.org/10.1007/978-3-030-17653-2 14 16. Persiano, G., Yeo, K.: Lower bound framework for diﬀerentially private and oblivious data structures. EUROCRYPT (2023)  
   
  The Power of the Binary Value Principle Yaroslav Alekseev1,2(B) and Edward A. Hirsch1 1  
   
  2  
   
  Technion—Israel Institute of Technology, Haifa, Israel [email protected]  Steklov Institute of Mathematics, St. Petersburg, Russia  
   
  Abstract. The (extended) Binary Value Principle (eBVP, the equation  n i−1 = −k for k > 0 and in the presence of x2i = xi ) has received i=1 xi 2 a lot of attention recently, several lower bounds have been proved for it [1, 2, 10]. It has been shown [2] that the probabilistically veriﬁable Ideal Proof System (IPS) [8] together with eBVP polynomially simulates a similar semialgebraic proof system. In this paper we consider Polynomial Calculus with the algebraic version of Tseitin’s extension rule (Ext-PC). Contrary to IPS, this is a Cook–Reckhow proof system. We show that in this context eBVP still allows to simulate similar semialgebraic systems. We also prove that it allows to simulate the Square Root Rule [6] in a sharp contrast to the result of [1] that shows an exponential lower bound on the size of Ext-PC derivations of BVP from its square. On the other hand, we demonstrate that eBVP probably does not help in proving exponential lower bounds for Boolean formulas: we show that an Ext-PC (even with the Square Root Rule) derivation of any unsatisﬁable Boolean formula in CNF from eBVP must be of exponential size. Keywords: Proof complexity  
   
  1  
   
  · Polynomial Calculus · Extension Rule  
   
  Introduction  
   
  Tseitin’s extension rule [12] is a powerful concept that turns even very weak propositional proof systems into strong ones: it allows to introduce new variables for arbitrary formulas (it is enough to do this for the disjunction and the negation). In particular, it turns Resolution (a rather weak system for which superpolynomial lower bounds are known since [12]) into the powerful Extended Frege system [5] (a strong system for which we do not even know good enough candidates for superpolynomial lower bounds). Surprisingly, in the context of algebraic proof systems an exponential lower bound for a system that uses Tseitin’s rule was proved recently [1]. This system, Extended Polynomial Calculus (or Ext-PC), combines the algebraic version of the extension rule (so that we can introduce new variables for polynomials) with the Polynomial Calculus (PC) [4] system. While it has more power because it allows to talk about polynomials over any algebraically closed ﬁeld (or, in the The full version is available at https://arxiv.org/abs/2210.17429. c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  M. Mavronicolas (Ed.): CIAC 2023, LNCS 13898, pp. 21–36, 2023. https://doi.org/10.1007/978-3-031-30448-4_3  
   
  22  
   
  Y. Alekseev and E. A. Hirsch  
   
  Boolean setting, even just over a ring, such as Z), the exponential lower bound has been proved for a system of polynomial equations that does not correspond to any Boolean formula (in particular, a formula in conjunctive normal form, as in This system, called “the Binary Value Principle”, is the equation nResolution). i−1 x 2 + 1 = 0 along with the “Boolean axioms” x2i − xi = 0 for every i=1 i variable xi . It has also been used for proving other exponential lower bounds [2,10] and (as the Extended Binary Value Principle, eBVP) for demonstrating a polynomial simulation of polynomial inequalities by polynomial equations [2] for generalized proof systems that require polynomial identity testing for the veriﬁcation (the algebraic system is the Ideal Proof System, IPS, of [8]). Note that polynomial inequalities are considered to be much more powerful than polynomial equations: for example, no exponential size lower bound is known even for the simplest proof system LS (motivated by the optimization procedure by L´aszl´o Lov´ asz and Alexander Schrijver, see [7,11]). Our Results. In this paper, we consider three questions about Ext-PC and eBVP, and prove three results: 1. How powerful is Ext-PC? We prove (Theorem 2) that together with eBVP it polynomially simulates a similar system that uses inequalities (namely, Ext-LS+,∗ that is LS with extension variables, squares, and multiplication). This brings the result of [2] down to conventional proof systems from proof systems that use polynomial identity testing for proof veriﬁcation. It is interesting how far we can weaken the proof systems to keep such simulation (formulas? bounded-depth formulas? sums of monomials?). 2. Grigoriev and Hirsch [6] introduced the square root rule that allows to conclude f = 0 from f 2 = 0. It would be needed for the implicational completeness of PC in the non-Boolean case. It is not needed at all in the Boolean context, however, it could shorten the proofs. It is impossible to simulate it polynomially in Ext-PC ( [1] bit-size-of-coeﬃcients  proves an exponential 2 lower bound on derivations of xi 2i−1 +1 = 0 from ( xi 2i−1  +1) = 0) and PC  ( [9] proves a linear degree lower bound on derivations of xi +1 = 0 from ( xi + 1)2 = 0). We prove (Theorem 3) that eBVP allows one to simulate polynomially the square root rule in the case of Ext-PC. 3. Is it possible to use lower bounds for eBVP for proving lower bounds for formulas in conjunctive normal form? One could imagine deriving the translation of an unsatisﬁable formula in conjunctive normal form (using the extension variables) from eBVP and concluding a lower bound for a formula in CNF. We prove an exponential lower bound (Corollary 2) on the size of derivations of such formulas from eBVP, showing an obstacle to this approach. Our Methods. The divisibility method suggested in [1,2] allows to prove lower bounds on the size of algebraic proofs by analysing the scalars appearing in them. The simplest application of this method substitutes the input variables by the binary representations of all possible integers, and shows that the constant in the ﬁnal contradiction in the proof over the integers divides all of them (if the  
   
  The Power of the Binary Value Principle  
   
  23  
   
  system allows it). In this paper we further develop this method: we prove lower bounds for the derivation of a translation of an unsatisﬁable formula in CNF (and not just a contradiction), so there is no single constant at the end. We show an exponential lower bound over the integers by counting the primes that divide the multiplicative constants in the derivation of every clause and Boolean equation. The lower bound for rationals follows using the translation of [1]. In order to show polynomial simulations we use the general approach suggested in [2]: to use bit arithmetic for proving facts about (semi)algebraic proofs. However, IPS [8] considered in that paper uses polynomial identity testing for proof veriﬁcation, and thus allows to switch between the circuit representations of polynomials at no cost. Our setting is diﬀerent: we need to simulate everything using the extension rule. Therefore, in order to simulate inequalities we derive gradually the facts that the values produced by bit arithmetic equal the values of polynomials in the original proof, and that these values are nonnegative. We also need to deﬁne the circuit representation, in particular for the extension variables, to reason about Ext-LS+,∗ proofs. A somewhat similar approach works for the simulation of the square root rule; however, we need to derive that all individual bits of the zero are zeroes, and then take the square root.  
   
  2  
   
  Preliminaries  
   
  In this paper we work with polynomials over integers or rationals. We deﬁne the size of a polynomial roughly as the total length of the bit representation of its coeﬃcients. Formally, let f be an arbitrary integer or rational polynomial in variables {x1 , . . . , xn }.  – If f ∈ Z[x1 , . . . , xn ] then Size(f ) = (log |ai | + 1), where ai are the coefﬁcients of f .  – If f ∈ Q[x1 , . . . , xn ] then Size(f ) = (log |ai |+log |bi |+1), where ai ∈ Z, bi ∈ N and abii are the coeﬃcients of f . We also use algebraic circuits. Formally, an algebraic circuit is a dag whose vertices (gates) compute binary operations (addition and multiplication), thus gates have in-degree two; the inputs (or variables) and constants (nodes computing integers or rationals) are nodes of in-degree zero. Every gate of an algebraic circuit computes a polynomial in the input variables in a natural way; we sometimes identify a gate with the circuit consisting of all the nodes on which the gate depends (thus this gate is the output gate of such circuit). The size of the circuit is the number of its gates plus the sum of the bit sizes of all constants. We will also be interested in the syntactic length of an algebraic circuit, deﬁned for circuits over Z: it is roughly a trivial upper bound on the number of bits of an integer computed by the circuit. The deﬁnition essentially follows [2], augmenting it with the multiplication.  
   
  24  
   
  Y. Alekseev and E. A. Hirsch  
   
  Definition 1 (syntactic length of algebraic circuit). Consider the gates of an algebraic circuit G1 , . . . , Gk in topological order. We deﬁne the syntactic length inductively: – If Gi is an integer constant, then the syntactic length of Gi is log(|Gi |). – If Gi = Gj + Gk , the syntactic length of Gj is t, and the syntactic length of Gk is s, then the syntactic length of Gi equals max(s, t) + 1. – If Gi = Gj · Gk , the syntactic length of Gj is t, and the syntactic length of Gk is s, then the syntactic length of Gi equals s + t + 3. Note 1. 1. In the latter case the actual number of bits would be s + t; we state s + t + 3 because this is how it is computed in our implementation of the integer multiplication in Sect. 4—however, it does not change much asymptotically, the resulting length changes at most polynomially. 2. Note that the circuit size cannot exceed its syntactic length. 2.1  
   
  Algebraic Proof Systems  
   
  In what follows, R denotes Q or Z. Definition 2 (Polynomial Calculus [4]). Let Γ = {p1 , ..., pm } ⊂ R[x1 , ..., xn ] be a set of polynomials in variables {x1 , . . . , xn } over R such that the system of equations p1 = 0, . . . , pm = 0 has no solution. A Polynomial Calculus (PCR ) refutation of Γ is a sequence of polynomials r1 , . . . , rs where rs = const = 0 and for every l in {1, . . . , s}, either rl ∈ Γ or rl is obtained through one of the following derivation rules for j, k < l: – rl = αrj + βrk , where α, β ∈ R, – rl = xi rk . s The size of the refutation is l=1 Size(rl ), and its degree is maxl deg(rl ). Note 2. 1. In this paper we consider Q or Z as R in PCR above or Ext-PCR below. For both of these rings, we consider the Boolean case, where axioms x2i − xi = 0 are present for every variable xi , and for this case our proof systems are complete. 2. Note that in the case R = Q one can assume rs = 1, while in the case R = Z an arbitrary nonzero constant is needed to maintain the completeness. Tseitin’s extension rule allows to introduce new variables for arbitrary formulas. We use an algebraic version of this rule that allows to denote any polynomial by a new variable [1]. Definition 3 (Extended Polynomial Calculus, Ext-PC). Let Γ = {p1 , . . . , pm } ⊂ R[x1 , . . . , xn ] be a set of polynomials in variables {x1 , . . . , xn } over R such that the system of equations p1 = 0, . . . , pm = 0 has no solution. An Ext-PCR refutation of Γ is a Polynomial Calculus refutation of a set Γ  = {p1 , . . . , pm , y1 −q1 (x1 , . . . , xn ), y2 −q2 (x1 , . . . , xn , y1 ), . . . , ym −qm (x1 , . . . , xn , y1 , . . . , ym−1 )} x, y1 , . . . , yi−1 ] are arbitrary polynomials. where qi ∈ R[¯  
   
  The Power of the Binary Value Principle  
   
  25  
   
  We omit R from the notation of PCR or Ext-PCR when it is clear from the context. The size of the Ext-PC refutation is equal to the size of the Polynomial Calculus refutation of Γ  . The square root rule [6] allows to conclude that f = 0 from f 2 = 0. We can consider it in the context of both PC and Ext-PC. √  
   
  √  
   
  √  
   
  √  
   
  Definition 4 (PC , Ext-PC ). The proofs in PC , Ext-PC follow Deﬁnitions 2, 3 but allow one more derivation rule in terms of Deﬁnition 2: – derive rl , if rl2 = rk (derive a polynomial if its square has been already derived). Note 3. As both Q and Z are domains, if r2 = 0 for some r ∈ R[¯ x], then r = 0. The extended Binary Value Principle (eBVP) says that that the (nonnegative) integer value of a binary vector cannot be negative. To use this fact in the proof, we need to specify that such a polynomial can be replaced by 1 (in particular, if eBVP is present without a multiplier, it produces the contradiction 1 = 0). Definition 5 (Ext-PC+eBVP). Ext-PC+eBVP uses exactly the same derivation rules as Ext-PC and one more rule: – derive rl = g if for some polynomials g, f1 , . . . , ft and integer constant M > 0 we have derived the polynomial rk = g · (M + f1 + 2f2 + . . . + 2t−1 ft ) along with polynomials rk1 = f12 − f1 , . . . , rkt = ft2 − ft , where k, k1 , . . . , kt < l. √  
   
  Note 4. We can deﬁne Ext-PC + eBVP the same way. 2.2  
   
  A Semialgebraic Proof System  
   
  We will consider the following proof system that can be viewed as a generalization of the LS proof system [11] by the algebraic extension rule. Note that we could move the introduction of new variables to the beginning of the proof as we did in the deﬁnition of Ext-PC, however, it does not matter. Definition 6 (Ext-LS+,∗ ). Let Γ = {p1 , . . . , pk } ⊂ R[x1 , . . . , xn ] be a set of polynomials in variables {x1 , . . . , xn } over R such that the system of equations p1 ≥ 0, . . . , pk ≥ 0 has no solution. An Ext-LS+,∗ refutation of Γ is a sequence of polynomial inequalities r1 ≥ 0, . . . , rm ≥ 0 where rm = −M (M > 0 is an integer constant) and each inequality rl is obtained through one of the following inference rules: – rl = pj for some i, or rl = xi , or rl = 1 − xi , or rl = x2i − xi , or rl = xi − x2i . – rl = ri ·rj or rl = ri +rj for i, j < l. (Note that we can infer 1 as xi +(1−xi ), thus we can multiply by any positive constant.)  
   
  26  
   
  Y. Alekseev and E. A. Hirsch  
   
  – If variable y did not occur in polynomials r1 , . . . , rl−1 , then we can derive a pair of polynomials rl = y −f , rl+1 = f −y, where f is one of the basic operations (addition, multiplication, identity) applied to variables not including y, and constants. – rk = z 2 for any variable z, including the input variables xi or the newly introduced variables. Note that the newly mintroduced variables are not necessarily Boolean. The size of the refutation is l=1 Size(rl ). The degree of the refutation is maxl deg(rl ). Note 5. 1. Once again, in the case R = Q we could assume M = 1, while we need an arbitrary positive constant for R = Z in order to maintain completeness. 2. Note that while the deﬁnition of Ext-LS+,∗ is written in a slightly diﬀerent manner compared to Ext-PC, it is not diﬃcult to see that Ext-LS+,∗ polynomially simulates Ext-PC (in particular, conversion of equations to inequalities and of ideal inference to cone inference can be done similarly to [2, Sect. 4.1.1 of the Technical Report version]).  
   
  3  
   
  Circuit and Equational Representations  
   
  We will represent the polynomials of the Ext-LS+,∗ derivation as circuits in the input variables. To do this, we deﬁne circuit representations of axioms and extension variables. Definition 7 (Circuit representation: axioms). For an axiom f ≥ 0, we consider a natural circuit representation of the polynomial f ∈ Z[x]: Zf,1 = x1 , . . . , Zf,n = xn , Zf,n+1 = hf,1 (Zf,r1 , Zf,t1 ), . . . , Zf,n+s = hf,s (Zf,rs , Zf,ts ), where ri , ti < n + i and hf,i is one of the basic operations (addition, multiplication) or a constant. We denote the resulting circuit by Zf (where Zf,n+s is the output gate). Definition 8 (Circuit representation: extension variables). Given a sequence of extension variables y1 , . . . , yk introduced in some derivation by axioms yj = gj (x, y1 , . . . , yj−1 ) (where 1 < j ≤ k), we can deﬁne their values by algebraic circuits computed in a natural way (the axioms are substituted into each other): deﬁne the sequence of circuits Y1 (x), . . . , Yk (x) by – Y1 (x) = g1 (x), – for each 1 < j ≤ k, Yj (x) = gj (x, Y1 (x), . . . , Yj−1 (x)). We call Yi the circuit representation of the extension variable yi . With the circuit representation of the extension variables and axioms, we can deﬁne the circuit representation of an Ext-LS+,∗ proof. Definition 9 (Circuit representation: Ext-LS+,∗ refutation). Given an Ext-LS+,∗ refutation p1 ≥ 0, . . . , −M = pm ≥ 0 of a system in variables xi , we construct the circuit representation P1 , . . . , Pm of its polynomials inductively:  
   
  The Power of the Binary Value Principle  
   
  27  
   
  – If pl is an axiom, Pl is the circuit representation of this axiom. – If pl = xi , or pl = 1 − xi , then Pl is the simple circuit computing pl . – If pl = z 2 for a variable z, then Pl = Q · Q, where Q is the circuit representation of z (note that typically, z is an extension variable). – If pl is obtained using a binary operation ◦ (addition or multiplication) from pi and pj , we put Pl = Pi ◦ Pj . – If pl introduces a new variable, or it is the Boolean axiom x2i −xi (or xi −x2i ), we put Pl = 0. Note that the axioms and the extension variables appear in Pi ’s as subcircuits, and that the inputs of Pi ’s correspond to the original variables of the system. Definition 10 (Equational representation). Any algebraic circuit can be represented by equations (one equation per gate). More precisely, if we have gates G1 , . . . , Gm in topological order, then we can consider variables γ1 , . . . , γm with the corresponding set of polynomial equations: – If Gi = xi or 1 − xi for some input variable, then corresponding polynomial equation for the γi would be γi = xj or γi = 1 − xi . – If Gi = Gk ◦ G , then the corresponding polynomial equation for the γi would be γi = γk ◦ γ . We refer to this set of equations as the equational representation. The following lemma is used in the simulation of Ext-LS+,∗ . The proof is a simple induction, see full version. Lemma 1. Accordingly to Deﬁnitions 9 and 10, consider the circuit and equational representations of an Ext-LS+,∗ proof p1 ≥ 0, . . . , pt ≥ 0. Consider any gate Pi corresponding to the equational representation with the output variable πi . Then there is a polynomial-size (in the size of the original proof ) Ext-PC derivation of πi = pi using only the Boolean axioms and the deﬁnitions of extension variables of the Ext-LS+,∗ proof. The new extension variables needed in the Ext-PC derivation are those appearing in the equational representation. To simulate the square root derivation rule we need to consider a circuit representation √ of an arbitrary polynomial in extension variables, since a derivation in Ext-PC , unlike derivations in Ext-LS+,∗ , does not correspond to an algebraic circuit (algebraic circuits do not use square root gates). Definition 11 (Circuit representation: polynomials). Consider a polynomial g ∈ Z[x, y], where x are the input variables and y are the variables introduced by the extension rule. Deﬁnition 8 deﬁnes the circuit representation Y1 , . . . , Ym for the variables y1 , . . . , ym . Then we can consider any natural circuit G1 , . . . , Gt computing the polynomial g given variables x1 , . . . , xn , variables y1 , . . . , ym , and the constants. Substituting the subcircuits Y1 , . . . , Ym in place of the inputs y1 , . . . , ym of Gi ’s, we get the circuit representation G1 , . . . , Gl of g. The syntactic length of the polynomial g is deﬁned as the syntactic length of the circuit G1 , . . . , Gl .  
   
  28  
   
  Y. Alekseev and E. A. Hirsch  
   
  The following Lemma is proved similarly to Lemma 1, see the full version. Lemma 2. Consider any polynomial g in the extension variables y1 , . . . , yk and the original Boolean variables x1 , . . . , xn , and consider the circuit representation G1 , . . . , Gl of this polynomial g from Deﬁnition 11. Then, if we consider an equational representation π1 , . . . , πl of the circuit G1 , . . . , Gl , then there is a polynomial-size (in the size of g) Ext-PC derivation of the equation g = πl .  
   
  4  
   
  Explicit BIT Definition and Basic Lemmas  
   
  In our Ext-PC simulations in Sect. 5, we argue about individual bits of the values of the polynomials appearing in the Ext-LS+,∗ proof. In this section we construct the circuits corresponding to these bits and prove auxilary statements about our constructions. We basically follow [2] (Theorem 6.1 in the Technical Report version), however, there are important diﬀerences: 1. In the case of Ext-PC proofs, the circuits are used in the meta-language only. In the actual derivation, the bits are represented by extension variables deﬁned through other extension variables, etc. (essentially computing the circuit value). 2. Contrary to [2], we cannot magically switch between diﬀerent representations of polynomials, every step of the derivation has to be done syntactically. The integers are represented in two’s complement form (see the deﬁnition of VAL below). We use the following notation: BITi (F ): if F (x) is a circuit in the variables x, then BITi (F ) is a new variable deﬁned through other extension variables (and x) that computes the i-th bit of the integer computed by F as a function of the input variables x, where the variables x range over 0–1 values. The integer is represented in the two’s complement form, that is, its highest bit is the sign bit. SIGN(F ) is used to denote this sign bit. BIT(F ): a collection of new variables that compute the bit vector of F . Note that BIT(F ) also includes SIGN(F ). VAL(z): the evaluation polynomial that converts bit encoding of an integer z in two’s complement representation to its integer value. Given z0 , . . . , zk−1 , VAL(z) =  
   
  k−2   
   
  2i · zi − 2k−1 · zk−1 .  
   
  i=0  
   
  We construct the representation of BITi (F ) by induction on the size of F . Proof Strategy for the Simulation. Our plan for the simulation of Ext-LS+,∗ in Sect. 5.1 is as follows:  
   
  The Power of the Binary Value Principle  
   
  29  
   
  – Given an Ext-LS+,∗ refutation p1 (x, y) ≥ 0, . . . , pm (x, y) ≥ 0, where pm = −M and M ∈ N, we will consider the circuit representation P1 , . . . , Pm of polynomials p1 , . . . , pm in order to speak about BIT(Pi ), and will introduce more extension variables according to the corresponding equational representation of Pi ’s. – We will show by induction that we can derive the following statements in Ext-PC: 1. VAL(BIT(Pi )) = pi . 2. SIGN(Pi ) = 0. Then given the fact that VAL(BIT(Pm )) = pm = −M , where M ∈ N, and SIGN(Pi ) = 0, we can apply eBVP to derive a contradiction in Ext-PC. Before we accomplish this, we need to deﬁne BIT (using the deﬁnitions for basic arithmetic operation) and prove several useful lemmas about what can we derive in Ext-PC (basic facts about the values, the signs, etc.). These will be also useful for the simulation of the square root rule in Sect. 5.2. Basic Arithmetic Operations. Circuit constructions of the basic operations that we will need for the BIT deﬁnition essentially follows the scheme of [2]. It consists of school-type carry-save addition ADD producing a (k + 2)-bit integer from two (k + 1)-bit integers (including the sign bit), the absolute value ABS producing a (k + 2)-bit integer from a (k + 1)-bit integer, and school-type multiplication “in shifts”, PROD, producing a (k + r + 2)-bit integer from a (k + 1)-bit and an (r + 1)-bit integers. See Section A.2 for details. Deﬁnition of BIT. Following [2] we deﬁne the bit representation of the values of polynomials computed by algebraic circuits. In doing this, we construct another circuit. We identify its nodes with new variables that will appear in our Ext-PC + eBVP proof, and the deﬁning equation for these variables are exactly the operations computed by the gates of the new circuit. Note that the inputs of this circuit are the same as the inputs of the original circuit. Definition 12 (BIT). Let G1 = f1 (x), G2 = f2 (x, G1 ), . . . , Gm = fm (x, G1 , . . . , Gm−1 ) be a topological order of the gates of an algebraic circuit over variables x. For each Gr we deﬁne BITi (Gr ) to be a new extension variable with the corresponding polynomial equation so that BITi (Gr ) computes the i-th bit of Gr : Case 1: Gr = xj for an input xj . Then, BIT0 (Gr ) := xj , BIT1 (Gr ) := 0 (in this case there are just two bits). Case 2: Gr = α, for α ∈ Z. Then, BITi (Gr ) is deﬁned to be the i-th bit of α in two’s complement notation. Case 3: Gr = Gk + Gl . Then BIT(Gr ) := ADD(BIT(Gk ), BIT(Gl )), and BITi (yr ) is deﬁned to be the i-th bit of BIT(yr ). Case 4: Gr = Gk · Gl . Then BIT(Gr ) := PROD(BIT(Gk ), BIT(Gl )), and BITi (Gr ) is deﬁned to be the i-th bit of BIT(Gr ). Recall that in Cases 3, 4 the shorter number is padded to match the length of the longer number by copying the sign bit before applying ADD or PROD.  
   
  30  
   
  Y. Alekseev and E. A. Hirsch  
   
  The Binary Value Lemma. Similarly to [2], one can show that Ext-PC has short derivations of the fact that the BIT(G) circuit that we constructed computes the same binary value as the original circuit G. Moreover, it can be compactly proved in Ext-PC for the equational representation of BIT(G). Lemma 3 (binary value lemma). Let y1 = f1 (x), y2 = f2 (x, y1 ), . . . , ym = fm (x, y1 , . . . , ym−1 ) be the equational representation of the algebraic circuit G1 (x) = f1 (x), . . . , Gm = fm (x, G1 (x), . . . , Gm−1 (x)) over the variables x = {x1 , . . . , xn }, and let t be the syntactic length of G1 , . . . , Gm . Then, there is an Ext-PC proof (using only the Boolean axioms and the equations of the BIT encoding) of yi = VAL(BIT(Gi )) of size poly(t) for each 1 ≤ i ≤ m. Useful Lemmas About the BIT Value. In this section we provide technical lemmas about individual bits in the bit representation. Lemma 4. For any vector of variables r0 , . . . , rk−1 , rk , there is a poly(k)-size Ext-PC + eBVP derivation of r0 = . . . = rk = 0 from r02 − r0 = 0, . . . , rk2 − rk = 0 and r0 + 2r1 + . . . + 2k−1 rk−1 − 2k rk = 0. Proof. Multiply the last equation by rk and replace rk2 by rk . We get (r0 + 2r1 + . . . + 2k−1 rk−1 − 2k )rk = 0, which has (the negation of) an instance of eBVP in the parentheses (for ri = 1 − ri ). It remains to apply the eBVP rule to prove that rk = 0. After that we get r0 + 2r1 + . . . + 2k−1 rk−1 = 0. 2 Again, multiply this by rk−1 and replace rk−1 by rk−1 . We get (r0 + 2r1 + . . . + k−2 k−1 2 rk−2 + 2 )rk−1 = 0 with an instance of eBVP inside. After applying the eBVP rule we get that rk−1 = 0. We can continue in the same way for rk−2 , . . . , r0 getting r0 = . . . = rk = 0.  
   
  Lemma 5 (monotonicity of addition and multiplication). For any two  bit vectors r0 , . . . , rk−1 , rk and r0 , . . . , rk−1 , rk , there is a poly(k)-size Ext-PC derivation of SIGN(PROD(r, r )) = 0 and SIGN(ADD(r, r )) = 0 from 2 r02 − r0 = 0, . . . , rk−1 − rk−1 = 0, rk2 − rk = 0; 2 r0  
   
  2  
   
    − r0 = 0, . . . , rk−1 − rk−1 =  
   
  2 0, rk  
   
  − rk = 0;  
   
  rk = 0; rk = 0.  
   
  Proof. See [2] (Lemma 6.7 in the Technical Report version), as the derivation presented in that paper is literally in Ext-PC.  
   
  Lemma 6. 1. For any vector of variables r0 , . . . , rk−1 , rk , there is a poly(k)-size 2 −rk−1 = Ext-PC derivation of SIGN(PROD(r, r)) = 0 from r02 −r0 = 0, . . . , rk−1 2 0, rk − rk = 0. 2. If additionally PROD(r, r) = 0 is given, there is a poly(k)-size Ext-PC derivation of r0 = 0, . . . , rk = 0.  
   
  The Power of the Binary Value Principle  
   
  31  
   
  Proof (Sketch). The equation SIGN(PROD(r, r)) = 0 is derived straightforwardly from the deﬁnition of PROD. For the second part, we consider the deﬁnition of PROD and show that the bits of BIT(A) are equal to 0 one by one, starting from the least signiﬁcant bit, full proof is given in the full version.  
   
  5  
   
  Polynomial Simulations  
   
  1. Ext-PCZ + eBVP polynomially simulates Ext-LS+,∗,Z . To show it, we gradually apply Lemma 3 to the circuit representation of the Ext-LS+,∗,Z derivation. Theorem 1 (derivation theorem). Suppose we have a system of polynomial equations f1 = 0, . . . , fk = 0, and that there is an Ext-LS+,∗,Z refutation p1 ≥ 0, . . . , pm ≥ 0 of the corresponding system f1 ≥ 0, f1 ≤ 0, . . . , fk ≥ 0, fk ≤ 0. Consider its circuit representation according to Sect. 3. Denote the syntactic length of the circuit P1 , . . . , Pm as t. Then, in terms of Sect. 3 there are poly(t)size Ext-PCZ + eBVP derivations of the facts 1. p1 = VAL(BIT(P1 )), . . . , pm = VAL(BIT(Pm )). 2. Each sign bit in BIT(Pi ) equals 0 (written in the form of polynomial equation si = 0 where si is a variable, corresponding to the sign bit of BIT(Pi )). The axioms used in these derivations are the boolean axioms, the axioms deﬁning extension variables, and (for the second statement) the input axioms. Proof (Sketch). The ﬁrst part of the theorem is an application of Lemmas 3, 1. For the second part, we prove by induction that each sign bit in BIT(Pi ) equals 0. We apply Lemma 6 to prove that the sign bit of a square equals 0, and Lemma 4 proves that the sign bit of the encoding of any axiom is 0. This proves the induction base, and Lemma 5 allows to derive the nonnegativity of all next BIT(Pi )’s by the monotonicity of addition and multiplication. See the full version for the full proof.  
   
  Definition 13 (Syntactic size of a refutation). The syntactic size of an Ext-LS+,∗,Z refutation is the syntactic size of a corresponding circuit representation from Sect. 3. Theorem 2. Consider a system of polynomial equations f1 = 0, . . . , fk = 0. Suppose there is an Ext-LS+,∗,Z refutation for the system f1 ≥ 0, f1 ≤ 0, . . . , fk ≥ 0, fk ≤ 0 of syntactic size S. Then there is an Ext-PCZ + eBVP refutation for the system f1 = 0, . . . , fk = 0 of size at most poly(S). Proof (Sketch). Consider an Ext-LS+,∗ refutation p1 ≥ 0, . . . , −M = pk ≥ 0 of the system f1 ≥ 0, f1 ≤ 0, . . . , fk ≥ 0, fk ≤ 0. From Theorem 1(1) we know that there is a polynomial-size derivation of the equation −M = pk = VAL(BIT(Pk )). From Theorem 1(2) we know that the sign bit of BIT(Pk ) equals 0. These two facts together give us an instance of eBVP. See the full version for the details.  

  32  
   
  Y. Alekseev and E. A. Hirsch √  
   
  2. Ext-PCZ + eBVP polynomially simulates Ext-PCZ + eBVP. Our strategy for the simulation of the square root rule is as follows. – Suppose we want to derive g = 0 from g 2 = 0, for some polynomial g. – We consider the bit representation BIT(G2 ) of g 2 . – Lemma 3 together with Lemma 2 provide a polynomial-size derivation of VAL(BIT(G2 )) = g 2 , thus we have VAL(BIT(G2 )) = 0. – From this, Lemma 4 provides a polynomial-size proof of BIT(G2 ) = 0. Here we make use of eBVP. – Now Lemma 6 provides a polynomial-size proof of BIT(G) = 0. – From this we can derive that g = VAL(BIT(G)) = 0. In the full version we apply this strategy and hence get the following theorem. Theorem 3. Consider a system of polynomial equations f1 = 0, . . . , fk = 0. If √ there is an Ext-PCZ +eBVP refutation for this system, then there is an Ext-PCZ + eBVP refutation for the system f1 = 0, . . . , fk = 0 that is at most polynomially longer wrt syntactic size than the initial refutation.  
   
  6  
   
  eBVP Cannot be Used to Prove CNF Lower Bounds  
   
  Exponential lower bounds on the size of refutations√of eBVP have been demonstrated for several proof systems including Ext-PC [1]. However, they have a caveat: eBVP is not a translation of a Boolean formula in CNF. Is it still possible to use these bounds to prove an exponential lower bound√for a formula in CNF? For example, one could provide a polynomial-size Ext-PC derivation of a translation of an unsatisﬁable Boolean formula in CNF from eBVP: together with the lower bound for eBVP, this would prove a bound for a formula in CNF. One could even introduce extension variables in order to describe such √ a formula. In this section we show that this is not possible: any Ext-PC derivation of an unsatisﬁable CNF from eBVPn should have exponential size in n. We start with proving a lower bound over the integers. Then we extend this result to the rationals. The proof can be viewed as a generalization of the lower bound in [1]; however, the lower bound is proved not for the derivation of M = 0, but for the derivation of an arbitrary unsatisﬁable CNF, possibly in the extension variables. Formally, the derivation of an unsatisﬁable formula in CNF from eBVPn in √ n Ext-PCZ starts with the equation i=1 xi 2i−1 + M = 0, the Boolean equations x2i − xi = 0, and the deﬁnitions of extension variables as axioms, and applies the rules of Polynomial Calculus and the square root rule until it reaches polynomial equations C1 ·p1 = 0, . . . , Cm ·pm = 0 and C1 ·(y12 −y1 ) = 0, . . . , Cv ·(yv2 −yv ) = 0, where each Ci or Cj is a nonzero integer constant and each pi is the translation of a Boolean clause of the unsatisﬁable CNF of the form pi = yj1 · · · yjk · ¬y1 · · · ¬yr for some extension variables yt ’s and the “dual” extension variables ¬yt = 1−yt . Since we work over the integers, we cannot assume that all Ci ’s and Cj ’s equal  
   
  The Power of the Binary Value Principle  
   
  33  
   
  1 (we cannot divide), though if we derive polynomials multiplied by nonzero constants, it may still help in proving a lower bound for a CNF. We start with formally deﬁning how a substitution into the input variables changes polynomials that use extension variables: √  
   
  Definition 14. Suppose that that extension variables y1 , . . . , ym in an Ext-PCZ derivation are introduced as y1 = q1 (x1 , . . . , xn ), y2 = q2 (x1 , . . . , xn , y1 ), . . . , ym = qm (x1 , . . . , xn , y1 , . . . , ym−1 ). Then for any variable yi and any vector of bit values {b1 , . . . , bn } ∈ {0, 1}n , we deﬁne substitution yi |x1 =b1 ,...,xn =bn : – y1 |x1 =b1 ,...,xn =bn := q1 (b1 , . . . , bn ). – For i > 1 we deﬁne yi |x1 =b1 ,...,xn =bn := qi (b1 , . . . , bn , y1 |x1 =b1 ,...,xn =bn , . . . , yi−1 |x1 =b1 ,...,xn =bn ). For any polynomial f (x1 , . . . , xn , y1 , . . . , ym ) ∈ Z[x, y] we deﬁne f |x1 =b1 ,...,xn =bn in the following way: f |x1 =b1 ,...,xn =bn = f (b1 , . . . , bn , y1 |x1 =b1 ,...,xn =bn , . . . , ym |x1 =b1 ,...,xn =bn ). Before proving our bound, we observe a property of Boolean substitutions: Lemma 7. Consider an instance of eBVP: M +x1 +2x2 +. . .+2n−1 xn . Consider any prime number p < 2n and the binary representation b1 , . .√. , bk of any number 0 ≤ t < 2n such that t ≡ −M (mod p). Given an Ext-PCZ derivation of the polynomial equation f = 0 from M + x1 + 2x2 + . . . + 2n−1 xn and the Boolean axioms x2i − xi = 0, the number f |x1 =b1 ,...,xn =bn is divisible by p. Proof. After the substitution, the axioms (including deﬁnitions of new variables) are divisible by p. The statement follows by easy induction, see the full version. Corollary 1. Consider an instance of eBVP of the form M + x1 + 2x2 + . . . + 2n−1 xn , any prime number p < 2n and the binary representation b1 , . . . , bk of any p). Suppose we introduced extension number 0 ≤ t < 2n such that t ≡ −M (mod √ variable yi for which we have an Ext-PCZ derivation of the polynomial equation C  ·(yi2 −yi ) = 0 from M +x1 +2x2 +. . .+2n−1 xn . Then, either the number C  is divisible by p, or yi |x1 =b1 ,...,xn =bn ≡ 1 (mod p), or yi |x1 =b1 ,...,xn =bn ≡ 0 (mod p). Now we are ready to prove an exponential lower bound over the integers: √  
   
  Theorem 4. Given an Ext-PCZ derivation of an unsatisﬁable CNF from M + x1 + . . . + 2n−1 xn = 0 and the Boolean axioms, at least one of the following three conditions holds: – The number of clauses in this CNF is at least 2n/3 . – We have derived a polynomial equation C  · (yj2 − yj ) = 0 and the constant C  is divisible by at least Ω(2n/3 ) diﬀerent prime numbers. – There is a clause C · yj1 · · · yjk · ¬y1 · · · ¬yr such that the constant C is divisible by at least Ω(2n/3 ) diﬀerent prime numbers.  
   
  34  
   
  Y. Alekseev and E. A. Hirsch  
   
  Proof. Let Y be the set of variables occurring in our CNF. Consider the set P of all prime numbers from {1, 2, . . . , 2n −1}. Now consider any prime number p ∈ P. As in Lemma 7, we can take an arbitrary t ∈ Z, 0 ≤ t < 2n , such that t ≡ −M (mod p). Consider the binary representation b1 , . . . , bn of this integer t. Corollary 1 says that for every yi ∈ Y we have derived that Ci · (yi2 − yi ) = 0 and either Ci is divisible by p, or yi |x1 =b1 ,...,xn =bn ≡ 1 (mod p), or yi |x1 =b1 ,...,xn =bn ≡ 0 (mod p). We ﬁx now this particular equation for yi in what follows. Now suppose that for every yi ∈ Y, the constant Ci from equation Ci · (yi2 − yi ) = 0 is not divisible by p. Then we know that every number yi |x1 =b1 ,...,xn =bn is 0/1 modulo p. Thus every number ¬yi |x1 =b1 ,...,xn =bn is also 0/1 modulo p and yi |x1 =b1 ,...,xn =bn ≡ 1 − ¬yi |x1 =b1 ,...,xn =bn (mod p). Then, since our CNF is unsatisﬁable, we know that there is a clause C ·yj1 · · · yjk · ¬y1 · · · ¬yr , such that (yj1 · · · yjk · ¬y1 · · · ¬yr )|x1 =b1 ,...,xn =bn ≡ 1 (mod p). On the other hand, from Lemma 7 we know that C · (yj1 · · · yjk · ¬y1 · · · ¬yr )|x1 =b1 ,...,xn =bn ≡ 0 (mod p). Therefore, C is divisible by p. Summarizing everything, we get that for every prime p ∈ P either we have derived a Boolean equation C  · (y 2 − y) where C  is divisible by p, or there is a clause C · yj1 · · · yjk · ¬y1 · · · ¬yr where the constant C is divisible by p. If the number of clauses in our CNF is at least 2n/3 , the ﬁrst condition of the theorem holds. Suppose we have derived an unsatisﬁable CNF with less then 2n/3 clauses. Then we have less than 2n/3 diﬀerent variables in our CNF since it is unsatisﬁable, and we have derived less than 2n/3 equations of the form Ci · (yi2 − yi ) and less than 2n/3 clauses of the form C · (yj1 · · · yjk · ¬y1 · · · ¬yr ). We showed that for any prime p ∈ P there is either an equation Ci · (yi2 − yi ) such that Ci is divisible by p or a clause C · (yj1 · · · yjk · ¬y1 · · · ¬yr ) such that C is divisible by p. So, since the total number of those equations is less then 2n/3+1 , there is a constant C (maybe C = Ci ) from one of those equations that |P| is divisible by at least 2n/3+1 prime numbers. We know that the size of the set P is at least C  · 2n /n by the Prime Number Theorem for some constant C  . Thus the constant C should be divisible by at 2n prime numbers, which is suﬃcient to satisfy the second or the least C  · 2n/3+1 ·n third condition of the theorem.  
   
  √  
   
  Corollary 2. Any Ext-PCZ derivation of an unsatisﬁable CNF in n variables from eBVPn requires size Ω(2n/3 ). 4 Proof. If the number of clauses in this CNF is less than 2n/3 , then   by Theorem there is a constant C in our derivation divisible by at least Ω 2n/3 diﬀerent prime numbers, hence C has Ω(2n/3 ) bits.  
   
  A similar lower bound over the rationals is proved by translating derivations over rationals into derivations over integers (see the full version).  
   
  The Power of the Binary Value Principle  
   
  7  
   
  35  
   
  Further Research  
   
  A long-standing open question in semialgebraic proof complexity is to prove a superpolynomial lower bound for a rather weak proof system (called LS after Lov´ asz and Schrijver), even for its most basic version [11] (degree two, no squares axioms (f 2 ≥ 0), no extension variables, multiplication by x, 1 − x and nonnegative constants only). Recently lower bounds on very strong proof systems have been proved for systems of polynomial equations (based on eBVP) that do not come from Boolean formulas. Does this generalization help to prove superpolynomial lower bounds for polynomial inequalities, for example, for LS? We have shown a polynomial simulation of Ext-LS+,∗ proofs in Ext-PC augmented by the eBVP rule, which was already known for stronger systems IPS vs CPS [2]. How can we weaken the basic system so that the statement remains true? For example, following [3] we can simulate binary arithmetic in logarithmic depth (by formulas), which, unfortunately, gives only log2 n depth proofs. Is it possible to do better? Acknowledgements. We are grateful to Ilario Bonacina and Dima Grigoriev for fruitful discussions, and to Yuval Filmus for his detailed comments on an earlier draft of this paper. This research has been partially supported by the European Union’s Horizon 2020 research and innovation programme under grant agreement No 802020-ERCHARMONIC. The ﬁrst author is supported by Lady Davys Fellowship.  
   
  References 1. Alekseev, Y.: A lower bound for polynomial calculus with extension rule. In: CCC2021. Leibniz International Proceedings in Informatics (LIPIcs), vol. 200, pp. 21:1– 21:18. Leibniz-Zentrum f¨ ur Informatik, Dagstuhl, Germany (2021) 2. Alekseev, Y., Grigoriev, D., Hirsch, E.A., Tzameret, I.: Semi-algebraic proofs, IPS lower bounds and the τ -conjecture: Can a natural number be negative? In: STOC2020. pp. 54–67 (2020). Technical details can be found in ECCC TR19-142 3. Buss, S.R.: Polynomial size proofs of the propositional pigeonhole principle. J. Symb. Log. 52(4), 916–927 (1987) 4. Clegg, M., Edmonds, J., Impagliazzo, R.: Using the Groebner basis algorithm to ﬁnd proofs of unsatisﬁability. In: Proceedings of the 28th Annual ACM Symposium on the Theory of Computing (Philadelphia, PA, 1996), pp. 174–183. ACM (1996) 5. Cook, S.A., Reckhow, R.A.: The relative eﬃciency of propositional proof systems. J. Symb. Log. 44(1), 36–50 (1979) 6. Grigoriev, D., Hirsch, E.A.: Algebraic proof systems over formulas. Theoret. Comput. Sci. 303(1), 83–102 (2003) 7. Grigoriev, D., Hirsch, E.A., Pasechnik, D.V.: Complexity of semialgebraic proofs. Mosc. Math. J. 2(4), 647–679, 805 (2002) 8. Grochow, J.A., Pitassi, T.: Circuit complexity, proof complexity, and polynomial identity testing: the ideal proof system. J. ACM 65(6), 37:1–37:59 (2018) 9. Part, F., Thapen, N., Tzameret, I.: First-order reasoning and eﬃcient semialgebraic proofs. In: 36th Annual ACM/IEEE Symposium on Logic in Computer Science, LICS 2021, Rome, Italy, 29 June–2 July 2021, pp. 1–13. IEEE (2021)  
   
  36  
   
  Y. Alekseev and E. A. Hirsch  
   
  10. Part, Fedor, Tzameret, Iddo: Resolution with counting: Dag-like lower bounds and diﬀerent moduli. Comput. Complex. 30(1), 1–71 (2021). https://doi.org/10.1007/ s00037-020-00202-x 11. Pudl´ ak, P.: On the complexity of the propositional calculus. In: Sets and Proofs (Leeds 1997). London Mathematical Society Lecture Note Series, vol. 258, pp. 197–218. Cambridge University Press, Cambridge (1999) 12. Tseitin, G.S.: On the complexity of derivation in the propositional calculus. Zapiski nauchnykh seminarov LOMI 8, 234–259 (1968). English translation of this volume: Consultants Bureau, N.Y., 1970, pp. 115–125  
   
  Independent Set Under a Change Constraint from an Initial Solution Yuichi Asahiro1 , Hiroshi Eto2 , Kana Korenaga2 , Guohui Lin3 , Eiji Miyano2(B) , and Reo Nonoue2 1  
   
  Kyushu Sangyo University, Fukuoka, Japan [email protected]  2 Kyushu Institute of Technology, Iizuka, Japan {eto,miyano}@ai.kyutech.ac.jp, {korenaga.kana518,nonoue.reo265}@mail.kyutech.jp 3 University of Alberta, Edmonton, Canada [email protected]   
   
  Abstract. In this paper, we study a type of incremental optimization variant of the Maximum Independent Set problem (MaxIS), called Bounded-Deletion Maximum Independent Set problem (BDMaxIS): Given an unweighted graph G = (V, E), an initial feasible solution (i.e., an independent set) S 0 ⊆ V , and a non-negative integer k, the objective of BD-MaxIS is to find an independent set S ⊆ V such that |S 0 \ S| ≤ k and |S| is maximized. The original MaxIS is generally NPhard, but, it can be solved in polynomial time for perfect graphs (and therefore, comparability, co-comparability, bipartite, chordal, and interval graphs). In this paper, we show that BD-MaxIS is NP-hard even if the input is restricted to bipartite graphs, and hence to comparability graphs. On the other hand, fortunately, BD-MaxIS on co-comparability, interval, convex bipartite, and chordal graphs can be solved in polynomial time. Finally, we study the computational complexity on very similar variants of the Minimum Vertex Cover and the Maximum Clique problems for graph subclasses.  
   
  1  
   
  Introduction  
   
  Background. Motivated by the practice-oriented research on the railroad blocking problem, the following general framework of incremental optimization problems with initial solutions was introduced [20]: Let P be an optimization problem with a starting feasible solution S 0 , and let F be the set of all feasible solutions for P . For a new feasible solution S ∈ F, the increment from S 0 to S is the amount of change given by a function f (S, S 0 ) : F × F → R, which we refer to as the increment function. Suppose that k is a given bound on the total amount of change permitted. We call S an incremental solution if it satisﬁes the inequality f (S, S 0 ) ≤ k. The goal is to ﬁnd an incremental solution S ∗ that results in the maximum improvement in the objective function value. c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  M. Mavronicolas (Ed.): CIAC 2023, LNCS 13898, pp. 37–51, 2023. https://doi.org/10.1007/978-3-031-30448-4_4  
   
  38  
   
  Y. Asahiro et al.  
   
  Fig. 1. Given a graph G, an initial solution {v1 , v4 , v5 }, and k = 2 as input (left), an optimal solution is {v1 , v6 , v7 , v8 }.  
   
  In this paper we study a type of incremental optimization of the Maximum Independent Set problem (MaxIS for short). The original MaxIS is one of the most important and most investigated combinatorial optimization problems in theoretical computer science. The input of MaxIS is an unweighted graph G = (V, E), where V and E are the sets of vertices and edges in G, respectively. An independent set of G is a subset S ⊆ V of vertices such that for every pair u, v ∈ S, the edge {u, v} is not in E. The goal of MaxIS is to ﬁnd an independent set of maximum cardinality. The problem MaxIS is a well-studied algorithmic problem, and actually it is one of the Karp’s 21 fundamental NP-hard problems [14]. Furthermore, it is well known that MaxIS remains NP-hard even for substantial restricted graph classes such as cubic planar graphs [6], trianglefree graphs [19], and graphs with large girth [17]. Fortunately, however, it is also known that the problem can be solved in polynomial time if the input graph is restricted to, for example, graphs with constant treewidth [5] (and therefore, outerplanar, series-parallel, cactus graphs, and so on), perfect graphs [12] (and therefore, chordal [7], comparability [10], co-comparability, bipartite graphs, and so on), circular-arc graphs [8], and many other graph classes. Our Problem and Contributions. Throughout this paper, we let S 0 and S denote an initial solution (i.e., an initial independent set) and a solution obtained by our algorithm. We deﬁne the increment function as f (S, S 0 ) = |S 0 \S|, the number of vertices in S 0 but not in S, which is the number of deleted vertices from the initial solution S 0 . The obtained solution S must satisfy the inequality |S 0 \S| ≤ k. That is, the number of vertices deleted from the initial solution S 0 is bounded by the given bound k. The function f can be seen as a “changeconstraint” function. Now, we can deﬁne our problem as follows: Bounded-Deletion Maximum Independent Set (BD-MaxIS) Input: An unweighted graph G = (V, E), an initial feasible solution (i.e., an independent set) S 0 ⊆ V , and a non-negative integer k. Goal: The goal is to ﬁnd an independent set S ⊆ V such that |S 0 \S| ≤ k and |S| is maximized. See Fig. 1 for an example. If a graph G of eight vertices, an initial solution {v1 , v4 , v5 }, and k = 2 are given as input, then {v1 , v6 , v7 , v8 } is an optimal solution, which is obtained by deleting two vertices {v4 , v5 } and adding three vertices {v6 , v7 , v8 }. If k = 1, then the initial solution {v1 , v4 , v5 } is optimal  
   
  Independent Set Under a Change Constraint from an Initial Solution  
   
  39  
   
  Fig. 2. Computational complexity of BD-MaxIS on graph classes. For example, “perfect → comparability” means that the perfect graph class is a superclass of the comparability graph class.  
   
  since one vertex-deletion does not make it possible to insert two or more new independent vertices. One sees that BD-MaxIS is generally NP-hard since if k ≥ |S 0 |, then we can completely change the solution, and thus BD-MaxIS includes the classical MaxIS as a special case (or simply, MaxIS is the case where S 0 is empty and k = 0). Hence, our work focuses on the computational complexity of BD-MaxIS on polynomial-time solvable graph classes such as perfect, comparability, cocomparability, bipartite, chordal graphs, and so on. Our main results are summarized in the following list and Fig. 2: (1) BD-MaxIS is NP-hard even if the input is restricted to bipartite graphs. Since every bipartite graph is comparability and perfect, BD-MaxIS on comparability graphs, or perfect graphs is also NP-hard. (2) BD-MaxIS can be solved in O(k|V |2 ) time for co-comparability graphs. If the input graph is an interval graph, then there is an O(k|V | + |E|)-time algorithm for BD-MaxIS. (3) BD-MaxIS can be solved in O(k|E|) time for convex bipartite graphs. (4) BD-MaxIS can be solved in O(k 2 (|V | + |E|)2 ) time for chordal graphs. Other well-known graph classes including trapezoid, co-bipartite, permutation, and bipartite permutation are also polynomial-time solvable from the results (2), (3), and (4).  
   
  2  
   
  Preliminaries  
   
  Notation. Let G = (V, E) be a simple (without multiple edge or self-loop edge), unweighted, and undirected graph, where V and E are sets of vertices and edges, respectively. We sometimes denote by V (G) and E(G) the vertex and the edge sets of G, respectively. Unless otherwise described, n and m denote  
   
  40  
   
  Y. Asahiro et al.  
   
  the cardinality of V and the cardinality of E, respectively, for G = (V, E). An edge between vertices u and v is denoted by {u, v}, and in this case vertices u and v are said to be adjacent. The graph G denotes the complement graph of G, i.e., G = (V, E), where {u, v} ∈ E if and only if {u, v} ∈ E. Let S ⊆ V be a set of vertices of G. Then, the cardinality of S is denoted by |S| and the subgraph of G induced by S is denoted by G[S]. The set N (u) = {v ∈ V | {u, v} ∈ E} is called the neighborhood of the vertex u ∈ V in G. Graph subclasses. A k-coloring of the vertices of a graph G = (V, E) is a mapping col : V → {1, . . . , k} such that col(u) = col(v) whenever {u, v} is an edge in G. The chromatic number of G, denoted by χ(G), is the least number k such that G admits a k-coloring. A clique in a graph G is a subset S ⊆ V of vertices such that every two vertices in S are adjacent. The clique number of G, denoted by ω(G), is the number of vertices in a maximum clique of G. An independent set in a graph is a set of vertices no two of which are adjacent. The independence number of G, denoted by α(G), is the size of a largest independent set in G. A graph G is called perfect if χ(H) = ω(H) for every induced subgraph H of G. A graph is called chordal if every cycle of length at least four contains a chord, which is an edge that is not part of the cycle but connects two vertices of the cycle. A graph G is called bipartite if its chromatic number is at most two. Consider a bipartite graph G with the vertex set V ∪ W and its 2-coloring col, where V and W are the disjoint sets of vertices such that col(V ) = 1 and col(W ) = 2. The bipartite graph G is convex if the vertices in W can be ordered in such a way that, for each v ∈ V , the neighborhood N (v) of v are consecutive in W . The ordering of the vertices in W is said to be convex, and G is said to be convex with respect to W . A graph G is called co-bipartite if its complement graph G is bipartite. A graph is called comparability if there exists a partial order min{di (S), di+1 (S)} − δ.  
   
  ∈Lr  
   
  Moreover, if S ⊆ Left1 (resp., S ⊆ Rightz ) then min∈Lr d (S) > d1 (S) − δ (resp., min∈Lr d (S) > dz (S) − δ). Proof. We need the following crucial claim. a) Let i < j ∈ Lr . Let L be a set of vertices in Lefti and let R be set of vertices in Rightj . Then di (L) < dj (L) + δ and dj (R) < di (R) + δ. Proof of a): we prove that di (L) < dj (L) + δ. By symmetry, it also proves that dj (R) < di (R) + δ. Let us assume by contradiction that di (L) ≥ dj (L) + δ. Let α (resp., , μ, ν) be a path from xi (resp., yi , xj , yj ) to zα (resp., z , zμ , zν ) whose length is d(xi , L) (resp. d(yi , L), d(xj , L), d(yj , L)), see Fig. 7 on the  
   
  How Vulnerable is an Undirected Planar Graph with Respect to Max Flow  
   
  93  
   
  left. Being xj , yj ∈ Righti and L ⊆ Lefti , then μ and ν cross pi . Let v be the vertex that appears ﬁrst in pi ∩ μ starting from xj on μ and let u be the vertex that appears ﬁrst in pi ∩ ν starting from yj on ν. An example of these paths is in Fig. 7 on the left. Let ζ = pi [yi , u], θ = pi [u, v], β = pi [xi , v], κ = μ[xj , v], ι = ν[yj , u], η = ν[u, zν ] and γ = μ[v, zμ ], see Fig. 7 on the right. Now w(β)+w(γ) ≥ w(α), otherwise α would not be a shortest path from xi to L. Similarly w(ζ) + w(η) ≥ w( ). Moreover, being w(ζ) + w(θ) + w(β) = di , then w(θ) ≤ di −w(α)+w(γ)−w( )+w(η). Being di (L) ≥ dj (L)+δ, then w(α)+w( ) ≥ w(μ) + w(ν) + δ, this implies w(α) + w( ) ≥ w(κ) + w(γ) + w(ι) + w(η) + δ. It holds that w(θ) + w(κ) + w(ι) ≤ di − w(α) + w(γ) − w( ) + w(η) + w(α) + w( ) − w(γ) − w(η) − δ = di − δ < dj because i, j ∈ Lr imply |di − dj | < δ. Thus κ◦θ◦ι is a path from xj to yj strictly shorter than dj , absurdum. End Proof of a). Being S ⊆ Rightj for all j < i and S ⊆ Leftj  for all j  > i + 1, then the ﬁrst part of the thesis follows from a). The second part follows also from a) by  
   
  observing that if S ⊆ Left1 , then S ⊆ Lefti for all i ∈ Lr .  
   
  Fig. 7. Example of paths and subpaths used in the proof of a).  
   
  Fig. 8. By Lemma 2, it holds that min∈Lr d (S) ≥ min{d3 (S), d4 (S)} − δ.  
   
  To compute distances in D we have to solve some SSSP instances in some Ωi,j ’s subsets. These subsets can share boundary edges, thus the sum of their edges might be O(n2 ). We note that, by the single-touch property, if an edge e belongs to Ωi,j and Ωj, for some i < j <  ∈ [k], then e ∈ pj .  
   
  i,j in the following way: To overcome this problem we introduce subsets Ω  
   
  i,j as for any i < j ∈ [k], if pi ∩ pj is a non-empty path q, then we deﬁne Ω Ωi,j in which we replace path q by an edge with the same length; note that the  
   
  94  
   
  L. Balzotti and P. G. Franciosa  
   
  single-touch property implies that all vertices in q but its extremal have degree  
   
  i,j = Ωi,j . Note that distances between vertices in two. Otherwise, we deﬁne Ω  
   
  Ωi,j are the same as in Ωi,j . It the following lemma we show how to compute  
   
  i,j ’s in O(n) time. some Ω Lemma 3. Let A = (a1 , a2 , . . . , az ) be any increasing sequence of indices of [k].   
   
  a ,a )| = O(n). Moreover, given U , we can compute It holds that i∈[z−1] |E(Ω i i+1  
   
  Ωa ,a , for all i ∈ [z − 1], in O(n) total time. i  
   
  i+1  
   
  Proof. For convenience, we denote by Ωi the set Ωai ,ai+1 , for all i ∈ [z − 1]. We note that if e ∈ Ωi ∩ Ωi+1 , then e ∈ pi+1 . Thus, if e belongs to more than two  
   
  because it is contracted in all other Ωi ’s two Ω’s Ωi ’s, then e belongs to exactly   
   
  i )| = O(n) + O(z) = O(n) because  
   
  by deﬁnition of the Ωi ’s. Thus i∈[z−1] |E(Ω z ≤ k ≤ n.  
   
  i ’s, we compute Uz =  To obtain all Ω a∈A pa in O(n) time by Theorem 5. Then we preprocess all trees in Uz in O(n) time by using Gabow and Tarjan’s result [15] in order to obtain the intersection path pai ∩ pai+1 via lowest common ancestor queries, and its length in O(1) time with a similar approach. Finally,  
   
  i )|), for all i ∈ [z − 1], with a BFS visit of Ωi that excludes  
   
  i in O(|E(Ω we build Ω  
   
  vertices of pai ∩ pai+1 .  
   
  5  
   
  Computing Edge Vitality  
   
  Now we can give our main result about edge vitality stated in Theorem 2. We need the following preliminary lemma that is an easy consequence of Lemma 2 and Lemma 3, it’s proof is in the full version of the paper. Lemma 4. Let r ∈ N, given U , we can compute a value αr (e) ∈ [mini∈Lr {di (e)}, mini∈Lr {di (e)} + δ) for all e ∈ E(D) in O(n) time. Theorem 2 Let G be a planar graph with positive edge capacities. Then for any c, δ > 0, we can compute a value vitδ (e) ∈ (vit(e) − δ, vit(e)] for all e ∈ E(G) i c(e) ≤ c, in O( δc n + n log log n) time. Proof. We compute U in O(n log log n) time by Theorem 5. If di > MF + c(e), then di (eD ) > MF, so we are only interested in computing (approximate) values of di (eD ) for all i ∈ [k] satisfying di < MF + c. By Lemma 4, for each r ∈ {0, 1, . . . ,  δc }, we compute αr (eD ) ∈ [mini∈Lr di (eD ), mini∈Lr di (eD ) + δ), for all eD ∈ E(D), in O(n) time. Then, for each eD ∈ E(D), we compute α(eD ) = minr∈{0,1,..., δc } αr (eD ); it holds that α(eD ) ∈ [mini∈[k] {di (eD )}, mini∈[k] {di (eD )} + δ). Then, by Proposition 2, for each e ∈ E(G) satisfying  
   
  c(e) ≤ c, we compute a value vitδ (e) ∈ (vit(e) − δ, vit(e)] in O(1) time.  
   
  How Vulnerable is an Undirected Planar Graph with Respect to Max Flow  
   
  6  
   
  95  
   
  Conclusions and Open Problems  
   
  We proposed algorithms for computing an additive guaranteed approximation of the vitality of all edges or vertices with bounded capacity with respect to the max ﬂow from s to t in undirected planar graphs. These results are relevant for determining the vulnerability of real world networks, under various capacity distributions. It is still open the problem of computing the exact vitality of all edges of an undirected planar graph within the same time bound as computing the max ﬂow value, as is already known for the st-planar case.  
   
  References 1. Ahuja, R.K., Magnanti, T.L., Orlin, J.B.: Network Flows (1988) 2. Ahuja, R.K., Magnanti, T.L., Orlin, J.B., Reddy, M.: Applications of network optimization. In: Handbooks in Operations Research and Management Science, vol. 7, pp. 1–83 (1995) 3. Alderson, D.L., Brown, G.G., Carlyle, W.M., Cox, L.A., Jr.: Sometimes there is no “most-vital” arc: assessing and improving the operational resilience of systems. Mil. Oper. Res. 18, 21–37 (2013) 4. Altner, D.S., Ergun, Ö., Uhan, N.A.: The maximum ﬂow network interdiction problem: valid inequalities, integrality gaps, and approximability. Oper. Res. Lett. 38, 33–38 (2010) 5. Ausiello, G., Franciosa, P.G., Lari, I., Ribichini, A.: Max ﬂow vitality in general and st-planar graphs. Networks 74, 70–78 (2019) 6. Ausiello, G., Franciosa, P.G., Lari, I., Ribichini, A.: Max-ﬂow vitality in undirected unweighted planar graphs. CoRR, abs/2011.02375 (2020) 7. Balzotti, L., Franciosa, P.G.: Computing lengths of non-crossing shortest paths in planar graphs. CoRR, abs/2011.04047 (2020) 8. Balzotti, L., Franciosa, P.G.: Max ﬂow vitality of edges and vertices in undirected planar graphs. CoRR, abs/2201.13099 (2022) 9. Balzotti, L., Franciosa, P.G.: Non-crossing shortest paths in undirected unweighted planar graphs in linear time. J. Graph Algorithms Appl. 26, 589–606 (2022) 10. Balzotti, L., Franciosa, P.G.: Non-crossing shortest paths in undirected unweighted planar graphs in linear time. In: Kulikov, A.S., Raskhodnikova, S. (eds.) CSR 2022. LNCS, vol. 13296, pp. 77–95. Springer, Cham (2022). https://doi.org/10.1007/9783-031-09574-0_6 11. Balzotti, L., Franciosa, P.G.: Non-crossing shortest paths lengths in planar graphs in linear time. In: Mavronicolas, M. (ed.) CIAC 2023. LNCS, vol. 13898, pp. 67–81. Springer, Cham (2023). https://doi.org/10.1007/978-3-031-30448-4_6 12. Borradaile, G., Klein, P.N.: An O(n log n) algorithm for maximum st-ﬂow in a directed planar graph. J. ACM 56, 9:1–9:30 (2009) 13. Eisenstat, D., Klein, P.N.: Linear-time algorithms for max ﬂow and multiple-source shortest paths in unit-weight planar graphs. In: Symposium on Theory of Computing Conference, STOC 2013, pp. 735–744. ACM (2013) 14. Ford, L.R., Fulkerson, D.R.: Maximal ﬂow through a network. Can. J. Math. 8, 399–404 (1956) 15. Gabow, H.N., Tarjan, R.E.: A linear-time algorithm for a special case of disjoint set union. J. Comput. Syst. Sci. 30, 209–221 (1985)  
   
  96  
   
  L. Balzotti and P. G. Franciosa  
   
  16. Hassin, R.: Maximum ﬂow in (s, t) planar networks. Inf. Process. Lett. 13, 107 (1981) 17. Henzinger, M.R., Klein, P.N., Rao, S., Subramanian, S.: Faster shortest-path algorithms for planar graphs. J. Comput. Syst. Sci. 55, 3–23 (1997) 18. Itai, A., Shiloach, Y.: Maximum ﬂow in planar networks. SIAM J. Comput. 8, 135–150 (1979) 19. Italiano, G.F., Nussbaum, Y., Sankowski, P., Wulﬀ-Nilsen, C.: Improved algorithms for min cut and max ﬂow in undirected planar graphs. In: Proceedings of the 43rd ACM Symposium on Theory of Computing, pp. 313–322. ACM (2011) 20. King, V., Rao, S., Tarjan, R.E.: A faster deterministic maximum ﬂow algorithm. J. Algorithms 17, 447–474 (1994) 21. Koschützki, D., Lehmann, K.A., Peeters, L., Richter, S., Tenfelde-Podehl, D., Zlotowski, O.: Centrality indices. In: Brandes, U., Erlebach, T. (eds.) Network Analysis. LNCS, vol. 3418, pp. 16–61. Springer, Heidelberg (2005). https://doi.org/10. 1007/978-3-540-31955-9_3 22. Kowalik, L., Kurowski, M.: Short path queries in planar graphs in constant time. In: Proceedings of the 35th Annual ACM Symposium on Theory of Computing, pp. 143–148. ACM (2003) 23. Łącki, J., Sankowski, P.: Min-cuts and shortest cycles in planar graphs in O(n log log n) time. In: Demetrescu, C., Halldórsson, M.M. (eds.) ESA 2011. LNCS, vol. 6942, pp. 155–166. Springer, Heidelberg (2011). https://doi.org/10.1007/9783-642-23719-5_14 24. Mattsson, L.-G., Jenelius, E.: Vulnerability and resilience of transport systems–a discussion of recent research. Transp. Res. Part A: Policy Pract. 81, 16–34 (2015) 25. Murray, A.T.: An overview of network vulnerability modeling approaches. GeoJournal 78, 209–221 (2013) 26. Orlin, J.B.: Max ﬂows in O(nm) time, or better. In: Symposium on Theory of Computing Conference, STOC 2013, pp. 765–774. ACM (2013) 27. Phillips, C.A.: The network inhibition problem. In: Proceedings of the Twenty-Fifth Annual ACM Symposium on Theory of Computing, pp. 776–785. ACM (1993) 28. Ratliﬀ, H.D., Sicilia, G.T., Lubore, S.: Finding the n most vital links in ﬂow networks. Manag. Sci. 21, 531–539 (1975) 29. Reif, J.H.: Minimum s-t cut of a planar undirected network in O(n log2 (n)) time. SIAM J. Comput. 12, 71–81 (1983) 30. Wollmer, R.D.: Some Methods for Determining the Most Vital Link in a Railway Network. Rand Corporation (1963) 31. Wood, R.K.: Deterministic network interdiction. Math. Comput. Model. 17, 1–18 (1993)  
   
  Maximum Flows in Parametric Graph Templates Tal Ben-Nun1 , Lukas Gianinazzi1(B) , Torsten Hoeﬂer1 , and Yishai Oltchik2 1  
   
  ETH Zurich, Universit¨ atstrasse 6, Z¨ urich, Switzerland {talbn,glukas,htor}@inf.ethz.ch 2 NVIDIA, Tel-Aviv, Israel [email protected]   
   
  Abstract. Execution graphs of parallel loop programs exhibit a nested, repeating structure. We show how such graphs that are the result of nested repetition can be represented by succinct parametric structures. This parametric graph template representation allows us to reason about the execution graph of a parallel program at a cost that only depends on the program size. We develop structurally-parametric polynomial-time algorithm variants of maximum ﬂows. When the graph models a parallel loop program, the maximum ﬂow provides a bound on the data movement during an execution of the program. By reasoning about the structure of the repeating subgraphs, we avoid explicit construction of the instantiation (e.g., the execution graph), potentially saving an exponential amount of memory and computation. Hence, our approach enables graph-based dataﬂow analysis in previously intractable settings. Keywords: Graph algorithms  
   
  1  
   
  · Graph theory · Maximum ﬂow  
   
  Introduction  
   
  Parallel program analysis approaches to optimize data movement and program transformation commonly rely on graph algorithms [8,24,25,29]. These problems  
   
  Fig. 1. Illustration of the parametric graph template G with templates T0 = {a, b, c, d, e, f, g, i}, T1 = {b}, T2 = {c, d, e}, T3 = {e}; parameters P0 = 1, P1 = 2, P2 = 2, P3 = 3; and h = 2. c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  M. Mavronicolas (Ed.): CIAC 2023, LNCS 13898, pp. 97–111, 2023. https://doi.org/10.1007/978-3-031-30448-4_8  
   
  98  
   
  T. Ben-Nun et al.  
   
  concern an execution graph, where vertices model computation and edges model data movement. Maximum ﬂows provide an algorithmic measure of the overall data movement. Such execution graphs contain highly repetitive substructures. Other application areas also face repeating graph structures, for example, computational biology [19] and network topology [6,23,30]. The naive approach is to directly work on the graphs and apply classic algorithms. However, this is prohibitively slow. For example, execution graphs can have billions of vertices or have a parametric size. Another approach is to design domain-speciﬁc representations and solutions [17,31]. Having a more generalpurpose framework would allow sharing progress across domains. We observe that many application-relevant graphs follow a model of nested repetition, where a small template graph is repeated a parametric number of times [5]. In this work, we propose a representation of such hierarchically repeating graphs, which we call parametric graph templates, and provide algorithms for extensions to the classical graph problem of maximum s-t ﬂow. The main challenge lies in avoiding the naive solution of materializing the full graph (which we call instantiation) and using a classic algorithm, which would negate any time savings. Instead, we carefully study the structural relationship between the template and the potentially exponentially larger instantiated graph. We discover and exploit symmetries in the instantiation process. This allows us to answer graph problems with a runtime that only depends on the size of the succinct representation, enabling asymptotic time and space savings compared to a naive approach that explicitly performs the nested repetition. 1.1  
   
  Parametric Graph Templates  
   
  Next, we introduce our model and give some examples. Our goal is to represent graphs with a hierarchically repeating structure, where the number of repetitions depends on some parameters. This will allows us to represent parallel loop programs and their executions. A parametric graph template with k parameters G = (G, T , P) contains a (potentially weighted) and directed template graph G = (V, E) with n vertices V , m edges E and edge weights w : E → R, a list of templates T = T0 , T2 , . . . , Tk−1 , each with ∅ = Ti ⊆ V , and a list of positive integer parameters P = P0 , . . . , Pk−1 (see Fig. 1a). The templates follow a nested structure, meaning that for every pair of templates they are either disjoint or one of them is strictly contained in the other one (for all i = j, Ti ∩ Tj = ∅ or Ti ⊂ Tj or Tj ⊂ Ti ). In particular, the templates form a laminar set family [7]. We assume that there is a root template T0 = V . Hence, the subset relation on the templates induces a template tree (see Fig. 1b). We denote its height by h. If a template T is contained in another template T  (i.e., T ⊂ T  ), then T is a descendant of T  (and T  is an ancestor of T ). A template T is a parent of T  (and T  is a child of T ) if T  is the direct descendant of T . To create an instantiation of a parametric graph template G, repeatedly rewrite it as follows (see Fig. 1c). As long as there is more than one template, pick a leaf template Ti . For each vertex v in Ti create Pi copies v1 , . . . , vPi called instances of v, replacing v in V . The set of vertices with the same subscript are called an instance of Ti . For each edge e = (u, v) with both endpoints in Ti , create  
   
  Maximum Flows in Parametric Graph Templates  
   
  99  
   
  Pi instances e1 = (u1 , v1 ), . . . , ePi = (uPi , vPi ), replacing e in E. For each edge e = (u, v) with one endpoint u in Ti , create Pi instances e1 = (u1 , v), . . . , ePi = (uPi , v), replacing e in E. Proceed symmetrically for each edge e = (u, v) with one endpoint v in Ti . Then, remove the template Ti and its parameter Pi . In Sect. 3 we will represent nested parallel loop programs as parametric graph templates. In such a representation, cuts and ﬂows correspond to data movement in a parallel execution. 1.2  
   
  Related Work  
   
  Graph Grammars. [4,10,14,15,27] describe a (possibly inﬁnite) language of graphs compactly with a set of construction rules. There is a wide variety of such ways of constructing a graph, diﬀering in expressive power. A classic problem for graph grammars is to decide whether a graph can be constructed from a given grammar (parsing). In contrast to graph grammars, we are not primarily concerned with expressing an inﬁnite set of graphs, but instead with a succinct representation of a graph and algorithmic aspects of solving graph problems eﬃciently on this succinct representation. Hierarchical Graphs. [13] model graphs where edges expand to other, possibly hierarchical graphs. They are a variant of context-free hyperedge replacement grammars that incorporate a notion of hierarchy. The authors consider graph transformations (i.e., replacing subgraphs within other subgraphs). However, their method does not include parametric replication. This makes it unsuitable for modeling variably-sized execution graphs. Nested Graphs. [28] allow “hypernodes” to represent other nested graphs. The authors focus on the case where a node represents a ﬁxed nested graph. This precludes nested graphs from eﬀectively representing graphs of a parametric size. Edge-Weight Parametric Problems. Several graph problems have been generalized to the edge-weight parametric case, where edge weights are functions of one or several parameters µi . This includes maximum s-t ﬂow/minimum s-t cut [3,18,20], (global) minimum cut [2,21] and shortest paths [16,22]. The solution is then a piecewise characterization of the solution space. Usually, only linear (or otherwise heavily restricted) dependency of the edge weights on the parameters have been solved. For edge-weight parametric minimum s-t cuts, the problem can be solved in polynomial time when each edge e has weight min(c(e), µ) for constants c(e) and a single parameter µ [3]. Granot, McCormick, Queyranne, and Tardella explore other tractability conditions [20]. 1.3  
   
  Problem Statement  
   
  We approach parametric graph templates from an algorithmic perspective. The goal is to solve classical graph problems for ﬁxed parameters, but in time that is strongly polynomial in the size of the parametric graph template. We focus on the classic problem of maximum s-t ﬂow, which has an interpretation in terms of data movement for program-derived graphs and operations research [1]. For an  
   
  100  
   
  T. Ben-Nun et al.  
   
  execution graph, a maximum s-t ﬂow corresponds to a upper bound on the data movement between vertices s and t when they are placed on diﬀerent processors. An  every edge e a nonnegative real ﬂow f (e) ≤ w(e). The s-t ﬂow f assigns sum e=(u,v) f (e) − e=(v,w) f (e) is the net ﬂow of the vertex v. A ﬂow has to have net ﬂow 0 for all vertices except s and t. The value of the ﬂow is the net ﬂow of the source. A maximum ﬂow is a ﬂow of maximum value. The maximum s-t ﬂow problem has a natural generalization to parametric graph templates when s and t are vertices in the root template: Instantiate the graph and compute a maximum ﬂow between the only instance of s and the only instance of t. There are multiple possibilities for how to interpret the case when s and t have multiple instances. One interpretation is as a multiple-source and multiple-target ﬂow problem, where all instances of s are treated as sources and all instances of t as sinks. We call this a maximum all-s-t ﬂow. Another interpretation considers the maximum ﬂow between a ﬁxed instance of s and a ﬁxed instance of t. We call this a maximum single-s-t ﬂow. 1.4  
   
  Our Results  
   
  We show how to eﬃciently represent a class of parallel loop programs as parametric graph templates and how properties of data movement in the parallel loop programs relates to cuts and ﬂows in the parametric graph templates. Then, we demonstrate that maximum s-t ﬂow can be solved asymptotically faster than instantiating the parametric graph template. In particular, it is possible to obtain a runtime that is similar to the runtime on the template graph. For maximum all-s-t ﬂow, our algorithms match the runtime of a maximum s-t algorithm such as Orlin’s O(mn) time algorithm [26]. We solve this problem using a technique called Edge Reweighting. It observes that scaling the edge weights in the graph template solves the problem. For maximum single-s-t ﬂow and minimum cuts, there is an overhead proportional to the height h of the template tree. In addition to Edge Reweighting, we use a technique called Partial Instantiation. We observe that a carefully chosen part of the instantiated graph can give suﬃcient information to extrapolate the result to the rest of the graph. How this part is chosen depends on the problem.  
   
  2  
   
  Preliminaries  
   
  We proceed to introduce deﬁnitions, notation, and assumptions that we use throughout this work. Template a Vertex Belongs to. If a vertex v is in a template Ti and v is in no other template that is a descendant of Ti , then v belongs to Ti . We denote the unique template that v belongs to by T (v). Template an Edge Belongs to. If both endpoints of an edge belong to a template Ti , then this edge belongs to template Ti . We denote the number of vertices and edges that belong to a template Ti by ni and mi , respectively.  
   
  Maximum Flows in Parametric Graph Templates  
   
  101  
   
  Cross-Template Edges. An edge (u, v) where u and v belong to diﬀerent templates is cross-template. No Jumping. We assume there are no edges that ‘jump’ layers in the template hierarchy. Speciﬁcally, if (u, v) is a cross-template edge, then T (u) is a parent or child of T (v). This rule ensures that a path in the graph corresponds to a walk in the template tree. It comes without loss of generality for cut and ﬂow problems, as an edge that jumps layers can be split into multiple edges (all of weight ∞ except the edge connected to the vertex that belongs to the deeper template in the template tree). For graphs that model programs, this assumption corresponds to disallowing jumps to arbitrary program locations. Boundary Vertices. Consider a vertex u and v where T (v) is a parent of T (u). If there is an edge from u to v or from v to u in the template graph, then v is a boundary vertex of T (u). Template Graph of a Template. The subgraph of the template graph G induced by a template Ti is called the template graph of Ti . Instance Tree. We extend the nomenclature of templates to instances. The template hierarchy can be transferred onto the instances, where an instance I is a descendant of an instance I  if the template T that instantiated I is a descendant of the template T  that instantiated I  . Similarly, we extend the notions of ancestor, parent, and child to the instances, creating an instance tree. Two instances that have the same parent instance are siblings. If a vertex v is contained in an instance I, but it is not contained in any other descendant of I, the vertex v belongs to the instance I. If bi is an instance of a boundary vertex b of a template T , then bi is a boundary vertex of the instance that bi belongs to. The instance of the root template is the root instance. For a vertex v in the instantiation, we write T (v) for the template of the instance that v belongs to. Isomorphism. Two parametric graph templates G1 and G2 are isomorphic if they instantiate isomorphic graphs. Two isomorphic G1 and G2 can have diﬀerent parameters, templates, and their template graphs need not be isomorphic. Cycles. Acyclic graphs are easier to handle for many algorithmic problems. In parametric graph templates, we consider two diﬀerent notions of what constitutes a cycle. The simplest notion of cycles comes from considering cycles in the template graph. If it does not contain any cycles, then the instantiation does neither (and vice versa). A path p1 , . . . pk in the template graph that contains three vertices pi , pj , pk with i < j < k and T (i) = T (k) but T (i) = T (j) is a template-cycle. We say a parametric graph template is template-acyclic if it does not contain a template-cycle. This notion is incomparable to the notion of acyclic parametric graph templates. There are acyclic parametric graph templates that are not template-acyclic (consider a path whose nodes alternate between belonging to some template and its child). Note that a template-acyclic graph can have cycles (consider a cycle whose vertices belong to the same template).  
   
  102  
   
  3  
   
  T. Ben-Nun et al.  
   
  Templates of Parallel Loop Programs  
   
  We show that a broad class of parallel programs can be modeled as parametric graph templates, such that the parametric graph template corresponds to the source code of the program and an instantiation of the parametric graph template corresponds to an execution of the program. This allows us to analyze properties of the execution of a program by considering a parametric graph template of a size comparable to the source of the program. The parametric graph templates we consider can model nested loop programs, for example Projective Nested Loops [12] and Simple Overlap Access Programs [24]. The program receives a set of multi-dimensional input arrays A1 , . . . , Ak . The goal is to output a multi-dimensional array B. The program can use several multi-dimensional temporary arrays C1 , . . . Ck . For any array D, its size in the i-th dimension is sizei (D). Roughly speaking, we allow any composition of elementary operations and parallel nested loops where the loop bounds only depend on the sizes of the input arrays. We allow parallel reduction to aggregate the results of a loop. We do not allow data-dependent control ﬂow, but we allow the locations of memory accesses to be data-dependent. Examples of algorithms that can be represented this way include matrix multiplication, convolution, and cross-correlation. We call the resulting parametric graph templates parallel loop graph templates. Next, we describe their syntax. Then, we describe a semantic for these parametric graph templates. Finally, we relate the data movement of the parallel loop programs with their templates’ instantiations. 3.1  
   
  Syntax  
   
  The vertices of the template graph are annotated with types corresponding to their function in the program. Each template graph contains the input memory vertices A1 , . . . , Ak , the output memory vertex B, and the temporary memory vertices C1 , . . . , Ck . The memory vertices can have arbitrary in-degree and outdegree and belong to the root template. Other vertices have out-degree 1, except if stated otherwise. The outgoing edge is called the output edge. To disambiguate the inputs to a vertex, the incoming edges are numbered consecutively. We refer to inputs in this input order. We consider the following control ﬂow constructs. These are boundary vertices. Parfor. A Parfor (parallel for loop) vertex has no input edge. Its output edge leads to a vertex in a child template. Reduce(Op), where Op is an associative and commutative operator. Has a single input edge from a vertex in a child template. The output edge leads to a non-memory vertex. Copy. A Copy vertex v has arbitrary outdegree. For each of its output edges (v, u), the template T (u) is not a parent of T (v) and u is not a memory vertex. We consider the following memory constructs, which are boundary vertices.  
   
  Maximum Flows in Parametric Graph Templates  
   
  103  
   
  ‘→’. A (pass-through) → vertex has in-degree and out-degree 1. At most one of the two neighbors can be a memory vertex. Read. A Read vertex has a ﬁrst input edge from a memory vertex or a → vertex and one or more other input edges from a non-memory vertex. Its output edge leads to a non-memory vertex. Write. A Write vertex has two or more input edges from non-memory vertices. Its output edge leads to a memory or → vertex. We consider the following types of operator vertices. They cannot be connected to memory vertices and are not boundary vertices. (Op), for Op ∈ {+, −, ∗, ÷}, which has in-degree 2. [c], for any representable constant c. 3.2  
   
  Semantics  
   
  A well-formed program has an acyclic template graph. For a well-formed program, a serial execution is any topological order of the instantiation of the parametric graph template. Each d-dimensional input array Ai initially contains some current value Ai [j1 ]....[jd ] at each position (j1 , . . . , jd ), where the d-th dimension of Ai has size sized (Ai ). All other arrays contains 0 at each of their positions. The arrays do not alias each other. The semantics of a serial execution is given by applying the following rules to each vertex in the serial execution. Before evaluating the rules, contract all edges which have at least one → vertex neighbor (these exist to transfer values from inside the template hierarchy to the memory vertices in the root template). Parfor. A Parfor vertex with k children outputs one value of the permutation of {0, . . . , k − 1} to each child in an injective way. Copy. Given input x, Copy outputs x to all its children. Reduce(Op), for Op ∈ {+, ∗}. Given the inputs x1 , . . . , xk , Reduce(Op) outputs the result of applying Op repeatedly in an arbitrary order to the inputs. Read. Given inputs Ai , j1 , . . . , jd , if Ai has dimension d and for all jk ∈ {j1 , . . . , jd } we have 0 ≤ jk < sizek (Ai ), a Read vertex outputs the current value of Ai [j1 ]....[jd ]. Otherwise, the result of the serial execution is undeﬁned. Write. Given inputs x, j1 , . . . , jd , a Write vertex outputs x. This has the side eﬀect of updating the current value of the array into which the output edge leads: Say it leads to Ai . Then, if Ai has dimension d and for all jk ∈ {j1 , . . . , jd } we have 0 ≤ jk < sizek (Ai ), the current value of Ai [j1 ]....[jd ] becomes x. Otherwise, the result of the serial execution is undeﬁned. (Op), for Op ∈ {+, −, ∗, ÷}. Given x, y, outputs x Op y. [c] outputs the constant c. In a serial execution, we say that two reads or writes u, v are totally ordered if there is a path from u to v or from v to u in the instantiation. A data race  
   
  104  
   
  T. Ben-Nun et al.  
   
  occurs if there are two writes W1 , W2 with the same right input (i.e., index) that connect to the same memory vertex and W1 and W2 are not totally ordered. The output of a well-formed program is well-deﬁned if none of its serial executions has an undeﬁned result or contains a data race. 3.3  
   
  Applications of Flows and Cuts  
   
  To model dataﬂow in the parallel loop programs, we set the weight of the Parfor edges to 0 and the weight of the other edges to 1. Loop indices can be recomputed and thus do not cause data movement. The parallel loop graph template encodes all the data movement in its edges. However, it cannot resolve the aliasing of array locations. Hence, the weight of the edges going across a partition of the vertices provides an upper bound on the data movement: Observation 1. Consider a partition (V0 , . . . , Vp ) of the vertices in an instantiation of a parallel loop graph template. The value total weight of the edges with endpoints in diﬀerent partitions is an upper bound on the data movement incurred when the partitions are allocated to distinct processors. Note that in our formulation of parallel loop graph templates, vertices corresponding to arrays are placed on a single processor. Thus, to model the distribution of an array across multiple processors, a vertex must be created for each processor that holds its subarray (this subarray can be discontiguous though). Since a maximum s-t ﬂow equals the value of a minimum s-t cut, the maxﬂow provides a partition of the loop program with small data movement: Observation 2. If a parallel loop graph template has a maximum all-s-t ﬂow of value x, then there is a partition of the parallel loop program which incurs at most x data movement and in which all instances of s are executed on a diﬀerent processor as all instances of t. We can get a similar statement for maximum single-s-t ﬂows.  
   
  4  
   
  Template Maximum Flows  
   
  Next, we turn to the ﬁrst algorithmic question on parametric graph templates. Our goal here is to solve the maximum s-t ﬂows problem on a parametric graph template without explicitly instantiating it. Instead, the goal is to get a runtime that is polynomial in the size of the graph template. Our algorithms use a series of observations on the structure of maximum ﬂows in parametric graphs which allow us to produce transformed parametric graph templates, on which the answer can be eﬃciently computed. We will approach the problem by considering the case where s and t are in the root template ﬁrst. Then, we show how to reduce both the maximum all-s-t ﬂow and the maximum single-s-t ﬂow problem to an instance of this simpler problem. Throughout, we assume that all vertices are reachable from s and can reach t, as otherwise they cannot carry ﬂow.  
   
  Maximum Flows in Parametric Graph Templates  
   
  105  
   
  In the template-acyclic case, the maximum single-s-t ﬂow is trivially zero except when s and t are in the same instance of the least common ancestor of T (s) and T (t) in the template tree. Therefore, in the acyclic case it makes sense to restrict our attention to this case where the ﬂow is not trivially zero. In the case where there are template-cycles, it matters which instances of s and t are picked. These can be identiﬁed by numbering the instances they belong to. 4.1  
   
  Edge-Reweighting  
   
  An eﬃcient way to solve a problem on parametric graph templates is to show how it relates to a problem on the template graph with scaled weights. The idea is that an edge that intersects template Ti can be used Pi times and can therefore be used to carry Pi times the amount of ﬂow. We will see that this observation holds as long as s and t are in the root template or if we consider the maximum all-s-t ﬂow problem. We call this approach Edge-Reweighting. Algorithm: Edge-Reweighting. Transform the parametric graph template G = (G, T , P) with edge weights w into a graph G with edge weights w . The reweighted graph G has the same vertex and edge set as the template graph G, but the weights are scaled as follows: Multiply the weight of an edge in the template graph by the product of the parameters of the templates that contain at least one endpoint of the edge. That is, let I(e) be the index set of all templates that  contain at least one of the endpoints of e. Then, the weight of w (e) is w(e) i∈I(e) Pi . To implement this in linear time O(m), precompute in a preorder traversal of the template tree for each template the product of all the ancestors’ parameters. 4.2  
   
  Source and Sink Belong to the Root Template  
   
  Our goal is to show that when the source s and sink t belong to the root template, then a maximum s-t ﬂow in the reweighted graph equals the value of a maximum all-s-t ﬂow. If s and t belong to the root template (which is instantiated once), then a maximum single-s-t ﬂow equals a maximum all-s-t ﬂow and we call it a maximum s-t ﬂow for short. The linear programming dual of a maximum s-t ﬂow is a minimum s-t cut [11]. We will use strong duality [9] in our proof, which means that it suﬃces to identify an s-t ﬂow and a minimum s-t cut of equal value to prove that they are optimal. We argue that Edge Reweighting preserves the value of the dual minimum all-s-t cut. Hence, it also preserves the maximum all-s-t ﬂow value. The following shows us how to construct an s-t cut C  in the transformed graph G from an s-t cut C in G of the same value. Together with the other (easier) direction of the proof, this shows that the transformed graph G has the same maximum s-t ﬂow. Lemma 1. In a parametric graph template G = (G, T , P), if s and t are in the root template, there is a minimum s-t cut of the instantiation of G where every instance of every vertex is on the same side of the cut.  
   
  106  
   
  T. Ben-Nun et al.  
   
  Lemma 2. If a parametric graph template G has a minimum s-t cut of value µ and s and t are in the root template, then the graph G constructed by edge reweighting has a minimum s-t cut of value µ. The proofs of Lemma 1 and Lemma 2 are omitted due to space constraints. 4.3  
   
  Instance Merging  
   
  We show how to merge all instances of a vertex v in a parametric graph template by transforming it into parametric graph template of almost the same size (the overhead is an additive O(nh)). We will use this technique to reduce the general case for maximum all-s-t ﬂow to the case where s and t are in the root. The idea is that merging all instances of a vertex s is akin to moving the vertex from the template T (s) it belongs to into the root template (so that it belongs to the root template). The no jumping rule only allows edges to go from parent templates to children templates (or vice versa), we need to introduce dummy edges and dummy vertices along the way. The dummy edges have ∞ weight. An original edge (u, s) will be transformed into a path u, d1 , . . . , dk , s for dummies d1 , . . . , dk (symmetrically for an edge (s, u)). Algorithm: Instance-Merging. Given a parametric graph template G and a vertex s, repeat the following until s is in the root template: 1. For any cross-template edge (u, s), introduce a dummy vertex d in the template T (s) that s belongs to. Replace the edge (u, s) by two edges e1 = (u, d) and e2 = (d, s). The weight of the edge e1 is the same as the weight of the edge e, but the weight of the edge e2 is set to ∞. Proceed symmetrically for any cross-template edge (s, u). 2. Move the vertex s from the template T (s) to the parent of the template T (s) (i.e., remove s from the set T (s)). 4.4  
   
  Maximum All-s-t Flow  
   
  To solve maximum all s-t Flow, all we would need to do is use Instance Merging on s and then on t to ensure that they are both in the root template. Then, we could use the edge reweighing Lemma 2. This approach would cost O(nm + n2 h) time. We can avoid this overhead by observing that edge reweighting works directly for maximum all-s-t Flow (even when s and t are not in the root template). Lemma 3. Edge reweighting of a parametric graph template G produces a reweighted graph G where the value of the maximum s-t ﬂow of G equals the value of the maximum all-s-t ﬂow of G. Proof. Instance Merge s and then t in G to produce a parametric graph template G  . By deﬁnition, all instances of s (and t respectively) must be on the same side of a minimum all-s-t cut, this parametric graph template G  has the same  
   
  Maximum Flows in Parametric Graph Templates  
   
  107  
   
  minimum all-s-t cut value as the original parametric graph template G. Edge ˆ From Lemma 2 we know that a minimum s-t reweighting G  gives us a graph G. ˆ corresponds to the minimum all-s-t cut of G  (which puts all instances cut of G of the same vertex on the same side of the cut). An ∞-weight edge never crosses a minimum s-t cut and therefore such ˆ can be contracted, dummy edges (introduced by the instance merging) from G yielding a graph G . This graph G is the same graph that we get from edge reweighting the original parametric graph template G. Now, the results follows: Theorem 1. Computing a maximum all-s-t ﬂow in parametric graph template takes O(mn) time. 4.5  
   
  Partial Instantiation  
   
  The technique of partial instantiation revolves around instantiating only part of the parametric graph template, depending on the problem at hand. The goal is to choose the partial instantiation such that the remaining problem is solvable by using the symmetry of the problem (e.g., using edge-reweighting). Partial instantiation can be seen as an example of the more general technique of retemplating. The intuition of retemplating is that in certain cases, it suﬃces to change the representation of the parametric graph template into another isomorphic parametric graph template to signiﬁcantly simplify the problem at hand. Next, show how to move a single vertex s from deep in the template tree to the root, without changing the instantiated graph. This solves the maximum s-t problems when s (or t) belongs to a template that is deep in the template tree (See Sect. 4.6). We call this technique Upwards Partial Instantiation from s. For simplicity, let us start with the special case of template-acyclic graphs. In a template-acyclic parametric graph template, once a path goes from an instance of a template Ti to its parent, it never enters another instance of Ti again. This property implies that, when considering the reachable subgraph from a vertex that is an instance of s, we can simply “merge” T (s) and all the templates that are ancestors of the template T (s) in the template tree. Formally, this corresponds to deleting T (s) and all the templates that are ancestors of T (s) (except the root) from the parametric graph templates’ list of templates. If the parametric graph template has template-cycles, our goal remains to transform the parametric graph template into an equivalent graph where a particular instance of a vertex s is in the root template. Algorithm: Partial Instantiation. Repeat the following until all templates from T (s) to the root have parameter 1: 1. Consider the topmost template T that contains s and has parameter greater than 1. Let Ps be the number of instances of the template T . 2. Instantiate the template T twice. Create a new parametric graph template that has the two instances as templates, where the ﬁrst template has parameter 1 and the second template has parameter Ps − 1. The vertices in the second template are relabeled (s is in the one with parameter 1).  
   
  108  
   
  T. Ben-Nun et al.  
   
  Now, merge T (s) and all the templates that are ancestors of T (s), leaving s in the root template. Because this process performs the same rewriting of the parametric graph template as instantiation, just in a diﬀerent order and stopping early, this process creates an isomorphic parametric graph template. Every iteration adds at most n vertices and m edges and there are at most h iterations. We conclude that: Observation 3. Upwards Partial Instantiation from s produces an isomorphic parametric graph template with at most h additional templates and O(nh) vertices and O(mh) edges in the template graph. 4.6  
   
  Maximum Single-s-t Flow  
   
  We give a partial instantiation and edge reweighting approach to maximum single-s-t ﬂow. For there to be a ﬂow through some instance, it must lie along an s-t path. Hence, we can use Upwards Partial Instantiation twice to ensure that s and t lie in the root template. Then, we use Edge Reweighting. Algorithm: Single-s-t Flow. We solve maximum single-s-t ﬂow as follows: 1. 2. 3. 4.  
   
  Perform upwards partial instantiation from s. Perform upwards partial instantiation from t. Construct an edge-reweighted graph G . Run a maximum s-t ﬂow algorithm on the partially instantiated and reweighted graph G .  
   
  Theorem 2. Computing a maximum single-s-t ﬂow in parametric graph template takes O(mnh) time.  
   
  5  
   
  Allowing Edges Between Sibling Templates  
   
  So far, we have disallowed any edges between instances of the same template. This limits the types of graphs which have a small template graph. For example, a path of length n requires a template graph with n nodes. We can extend the model by allowing an instance to have edges to another instance of the same template. These edges can, for example, more eﬃciently model sequential chains (paths), convolutional networks, and grids. We call these edges sibling edges (because they connect siblings). A sibling edge (u,v) of template Ti connects (in the template graph of Ti ) a vertex u that belongs to template Ti to a vertex v that also belongs to Ti . Every sibling edge e = (u, v) of template Ti is associated with a bijective (and computable) sibling function fe : {0, . . . , Pi −1} → {0, . . . , Pi −1} which tells us that if the head of edge e is in instance j of the template Ti , then the tail of edge e is in instance f (j) of the template Ti . Note that in the model with sibling edges, a path of length n can be represented with two nodes instead of n nodes and a 1-dimensional cross-correlation of two n-dimensional signal can be represented with 2 nodes. The structural Lemma 1 for edge reweighting still holds with sibling edges. Hence, the results on maximum all-s-t ﬂow and maximum single-s-t ﬂow hold analogously in the presence of sibling edges within the same bounds Theorems 1 and 2.  
   
  Maximum Flows in Parametric Graph Templates  
   
  109  
   
  Fig. 2. Graph Templates and their expanded/instiantiated counterparts. An edge e labelled with ±Δ indicates a sibling edge e with sibling function fe (x) = x + Δ  
   
  6  
   
  Conclusion  
   
  In this work, we explored the notion of structural parameterization in graphs. We show how graph templates correspond to the computation graphs of parallel programs. Our model leads to a O(mn) time algorithm for a template version of maximum s-t ﬂow (and hence minimum s-t cuts). These ﬂows provide upper bounds on the data movement of partitions of certain parallel loop programs. Other interesting problems would include partitions into multiple parts and subgraph isomorphism. Moreover, future work could explore lower bounds for parametric graph template algorithms. Acknowledgements. This work received support from the PASC project DaCeMI and from the European Research Council under the European Union’s Horizon 2020 programme (Project PSAP, No. 101002047), as well as funding from EuroHPC-JU under grant DEEP-SEA, No. 955606.  
   
  References 1. Ahuja, R.K., Magnanti, T.L., Orlin, J.B.: Network Flows: Theory, Algorithms, and Applications. Prentice-Hall Inc. (1993) 2. Aissi, H., Mahjoub, A.R., McCormick, S.T., Queyranne, M.: Strongly polynomial bounds for multiobjective and parametric global minimum cuts in graphs and hypergraphs. Math. Program. 154(1-2), 3–28 (2015). https://doi.org/10.1007/ s10107-015-0944-8 3. Aneja, Y.P., Chandrasekaran, R., Nair, K.: Parametric min-cuts analysis in a network. Discret. Appl. Math. 127(3), 679–689 (2003). https://doi.org/10.1016/ S0166-218X(02)00496-1 4. Bauderon, M., Courcelle, B.: Graph expressions and graph rewritings. Math. Syst. Theory 20(2–3), 83–127 (1987). https://doi.org/10.1007/BF01692060 5. Ben-Nun, T., de Fine Licht, J., Ziogas, A.N., Schneider, T., Hoeﬂer, T.: Stateful dataﬂow multigraphs: a data-centric model for performance portability on heterogeneous architectures. In: Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis, SC 2019. Association for Computing Machinery, New York (2019). https://doi.org/10.1145/3295500. 3356173  
   
  110  
   
  T. Ben-Nun et al.  
   
  6. Besta, M., Hoeﬂer, T.: Slim ﬂy: a cost eﬀective low-diameter network topology. In: Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis, SC 2014, pp. 348–359 (2014). https://doi.org/ 10.1109/SC.2014.34 7. Cheriyan, J., Jord´ an, T., Ravi, R.: On 2-coverings and 2-packings of laminar families. In: Neˇsetˇril, J. (ed.) ESA 1999. LNCS, vol. 1643, pp. 510–520. Springer, Heidelberg (1999). https://doi.org/10.1007/3-540-48481-7 44 8. Chu, W.W., Holloway, L.J., Lan, M., Efe, K.: Task allocation in distributed data processing. Computer 13(11), 57–69 (1980). https://doi.org/10.1109/MC.1980. 1653419 9. Chv´ atal, V.: Linear Programming. Series of Books in the Mathematical Sciences. W. H. Freeman (1983) 10. Courcelle, B.: An axiomatic deﬁnition of context-free rewriting and its application to NLC graph grammars. In: Cori, R., Wirsing, M. (eds.) STACS 1988. LNCS, vol. 294, pp. 237–247. Springer, Heidelberg (1988). https://doi.org/10.1007/ BFb0035848 11. Dantzig, G.B., Fulkerson, D.R.: On the Max Flow Min Cut Theorem of Networks. RAND Corporation, Santa Monica (1955) 12. Dinh, G., Demmel, J.: Communication-optimal tilings for projective nested loops with arbitrary bounds. In: Scheideler, C., Spear, M. (eds.) 32nd ACM Symposium on Parallelism in Algorithms and Architectures, SPAA 2020, Virtual Event, USA, 15–17 July 2020, pp. 523–525. ACM (2020). https://doi.org/10.1145/3350755. 3400275 13. Drewes, F., Hoﬀmann, B., Plump, D.: Hierarchical graph transformation. J. Comput. Syst. Sci. 64(2), 249–283 (2002). https://doi.org/10.1006/jcss.2001.1790 14. Ehrig, H., Pfender, M., Schneider, H.J.: Graph-grammars: an algebraic approach. In: 14th Annual Symposium on Switching and Automata Theory, Iowa City, Iowa, USA, 15–17 October 1973, pp. 167–180 (1973). https://doi.org/10.1109/SWAT. 1973.11 15. Engelfriet, J.: Context-free NCE graph grammars. In: Csirik, J., Demetrovics, J., G´ecseg, F. (eds.) FCT 1989. LNCS, vol. 380, pp. 148–161. Springer, Heidelberg (1989). https://doi.org/10.1007/3-540-51498-8 15 16. Erickson, J.: Maximum ﬂows and parametric shortest paths in planar graphs. In: Proceedings of the Twenty-First Annual ACM-SIAM Symposium on Discrete Algorithms, SODA 2010, Austin, Texas, USA, 17–19 January 2010, pp. 794–804 (2010). https://doi.org/10.1137/1.9781611973075.65 17. Feautrier, P.: Some eﬃcient solutions to the aﬃne scheduling problem. I. Onedimensional time. Int. J. Parallel Program. 21(5), 313–347 (1992). https://doi. org/10.1007/BF01407835 18. Gallo, G., Grigoriadis, M.D., Tarjan, R.E.: A fast parametric maximum ﬂow algorithm and applications. SIAM J. Comput. 18(1), 30–55 (1989). https://doi.org/ 10.1137/0218003 19. Ginsburg, A., Ben-Nun, T., Asor, R., Shemesh, A., Ringel, I., Raviv, U.: Reciprocal grids: a hierarchical algorithm for computing solution X-ray scattering curves from supramolecular complexes at high resolution. J. Chem. Inf. Model. 56(8), 1518– 1527 (2016) 20. Granot, F., McCormick, S.T., Queyranne, M., Tardella, F.: Structural and algorithmic properties for parametric minimum cuts. Math. Program. 135(1–2), 337–367 (2012). https://doi.org/10.1007/s10107-011-0463-1  
   
  Maximum Flows in Parametric Graph Templates  
   
  111  
   
  21. Karger, D.R.: Enumerating parametric global minimum cuts by random interleaving. In: Proceedings of the 48th Annual ACM SIGACT Symposium on Theory of Computing, STOC 2016, Cambridge, MA, USA, 18–21 June 2016, pp. 542–555 (2016). https://doi.org/10.1145/2897518.2897578 22. Karp, R.M., Orlin, J.B.: Parametric shortest path algorithms with an application to cyclic staﬃng. Discret. Appl. Math. 3(1), 37–45 (1981). https://doi.org/10.1016/ 0166-218X(81)90026-3 23. Kim, J., Dally, W.J., Scott, S., Abts, D.: Technology-driven, highly-scalable dragonﬂy topology. In: 2008 International Symposium on Computer Architecture, pp. 77–88 (2008). https://doi.org/10.1109/ISCA.2008.19 24. Kwasniewski, G., et al.: Pebbles, graphs, and a pinch of combinatorics: towards tight I/O lower bounds for statically analyzable programs. In: Agrawal, K., Azar, Y. (eds.) 33rd ACM Symposium on Parallelism in Algorithms and Architectures, Virtual Event, USA, 6–8 July 2021, SPAA 2021, pp. 328–339. ACM (2021). https:// doi.org/10.1145/3409964.3461796 25. Lattner, C., Adve, V.: LLVM: a compilation framework for lifelong program analysis transformation. In: International Symposium on Code Generation and Optimization, CGO 2004, pp. 75–86 (2004). https://doi.org/10.1109/CGO.2004. 1281665 26. Orlin, J.B.: Max ﬂows in O(nm) time, or better. In: Symposium on Theory of Computing Conference, STOC 2013, Palo Alto, CA, USA, 1–4 June 2013, pp. 765–774 (2013). https://doi.org/10.1145/2488608.2488705 27. Pavlidis, T.: Linear and context-free graph grammars. J. ACM 19(1), 11–22 (1972). https://doi.org/10.1145/321679.321682 28. Poulovassilis, A., Levene, M.: A nested-graph model for the representation and manipulation of complex objects. ACM Trans. Inf. Syst. 12(1), 35–68 (1994). https://doi.org/10.1145/174608.174610 29. Shen, C., Tsai, W.: A graph matching approach to optimal task assignment in distributed computing systems using a minimax criterion. IEEE Trans. Comput. 34(3), 197–203 (1985). https://doi.org/10.1109/TC.1985.1676563 30. Valadarsky, A., Shahaf, G., Dinitz, M., Schapira, M.: Xpander: towards optimalperformance datacenters. In: Proceedings of the 12th International on Conference on Emerging Networking EXperiments and Technologies, CoNEXT 2016, pp. 205– 219. Association for Computing Machinery, New York (2016). https://doi.org/10. 1145/2999572.2999580 31. Vasilache, N., et al.: Tensor comprehensions: framework-agnostic high-performance machine learning abstractions. CoRR abs/1802.04730 (2018)  
   
  Dynamic Coloring on Restricted Graph Classes Sriram Bhyravarapu1(B) , Swati Kumari2 , and I. Vinod Reddy2(B) 1  
   
  The Institute of Mathematical Sciences, HBNI, Chennai, India [email protected]  2 Department of Electrical Engineering and Computer Science, IIT Bhilai, Raipur, India {swatik,vinod}@iitbhilai.ac.in  
   
  Abstract. A proper k-coloring of a graph is an assignment of colors from the set {1, 2, . . . , k} to the vertices of the graph such that no two adjacent vertices receive the same color. Given a graph G = (V, E), the Dynamic Coloring problem asks to find a proper k-coloring of G such that for every vertex v ∈ V (G) of degree at least two, there exists at least two distinct colors appearing in the neighborhood of v. The minimum integer k such that there is a dynamic coloring of G using k colors is called the dynamic chromatic number of G and is denoted by χd (G). The problem is NP-complete in general, but solvable in polynomial time on several restricted families of graphs. In this paper, we study the problem on restricted classes of graphs. We show that the problem can be solved in polynomial time on chordal graphs and biconvex bipartite graphs. On the other hand, we show that it is NP-complete on star-convex bipartite graphs, comb-convex bipartite graphs and perfect elimination bipartite graphs. Next, we initiate the study on Dynamic Coloring from the parameterized complexity perspective. First, we show that the problem is fixed-parameter tractable when parameterized by neighborhood diversity or twin-cover. Then, we show that the problem is fixedparameter tractable when parameterized by the combined parameters clique-width and the number of colors. Keywords: proper coloring · fixed-parameter tractable · dynamic coloring · neighborhood diversity · twin-cover · bipartite graphs  
   
  1  
   
  Introduction  
   
  A vertex coloring (or proper coloring) of a graph G is an assignment of colors to the vertices of the graph such that no two adjacent vertices are assigned the same color. The minimum number of colors required for a proper coloring of G is called the chromatic number of G denoted by χ(G). Given a graph G = (V, E) and an integer k ∈ N, a proper k-coloring f : V (G) → [k] is called a dynamic coloring, if for every vertex v ∈ V (G) of degree at least 2, there are at least two distinct colors appearing in the neighborhood of v, i.e., |f (N (v))| ≥ 2, where the c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  M. Mavronicolas (Ed.): CIAC 2023, LNCS 13898, pp. 112–126, 2023. https://doi.org/10.1007/978-3-031-30448-4_9  
   
  Dynamic Coloring on Restricted Graph Classes  
   
  113  
   
  set N (v) denotes the neighbors of v in G. The smallest integer k such that there is a dynamic coloring of G using k colors is called the dynamic chromatic number of G and is denoted by χd (G). Note that for any graph G, χd (G) ≥ χ(G). Dynamic coloring was introduced by Montgomery [14] and it is NP-complete on general graphs [13]. The problem has been studied on various restricted graph classes. For example, polynomial time algorithms are obtained for trees [14] and graphs with bounded tree-width [13] while it is NP-hard even for planar bipartite graphs with maximum degree at most three and arbitrarily high girth [16]. Finding upper bounds of χd (G) for planar graphs have been studied in several papers. It was shown in [3] that χd (G) ≤ 5 if G is a planar graph. Later in [10] it was shown that if G is a connected planar graph with G = C5 , then χd (G) ≤ 4. Dynamic coloring of graphs has been studied extensively by several authors, see for instance [1,3,8,14,16]. In this paper, we study the decision version of the Dynamic Coloring problem, which is stated as follows. Dynamic Coloring Input: A graph G = (V, E) and a positive integer k. Question: Does G have a dynamic coloring using at most k colors? In the ﬁrst part of this paper, we study the computational complexity of Dynamic Coloring on restricted families of graphs. We show that the problem can be solved in polynomial time on chordal graphs. As the problem is NP-complete on bipartite graphs [13], we study its complexity on sub-classes of bipartite graphs and close the gap between classes of graphs that are NPcomplete and P time solvable. It is known that χd (G) is unbounded [8] when G is a bipartite graph. We show that χd (G) ≤ 4, when G is a biconvex bipartite graph and give a polynomial time algorithm by exploiting its structural properties. We also show that the problem is NP-complete on several sub-classes of bipartite graphs, a hierarchy of which is illustrated in Fig. 1. In the second part of this paper, we study Dynamic Coloring from the viewpoint of parameterized complexity [4,5]. In parameterized complexity, each problem instance is associated with an integer, say k, called parameter. A parameterized problem is said to be ﬁxed-parameter tractable (FPT) with respect to a parameter k if it can be solved in time f (k)nO(1) , where n is the input size and f is a computable function only depending on the parameter k. There may be many parameterizations for Dynamic Coloring. The most natural parameter to consider is the “solution size”, which in this case is the number of colors. As the problem is NP-complete [13] even when the number of colors is three, we do not expect to have an FPT algorithm with solution size as the parameter. There are parameters which are selected based on the structure of the graph, called “structural parameterizations”. For instance, vertex cover, tree-width, neighborhood diversity, etc. The hierarchy of a few structural graph parameters is illustrated in Fig. 2. We study the parameterized complexity of Dynamic Coloring with respect to several structural graph parameters. Tree-width is one of the most used  
   
  114  
   
  S. Bhyravarapu et al.  
   
  Fig. 1. Hierarchy showing the relationship between sub-classes of bipartite graphs. The graph classes considered in this paper are indicated by ∗.  
   
  structural parameters when dealing with NP-hard graph problems. Li et al. in [16] showed that Dynamic Coloring is FPT when parameterized by treewidth, following its formulation in monadic second order logic. One disadvantage with tree-width is that it is unbounded for dense graphs (e.g., cluster graphs). In this paper, we consider the parameters twin-cover and neighborhood diversity, which also include dense graphs. We show that Dynamic Coloring is ﬁxed-parameter tractable when parameterized by twin-cover or neighborhood diversity. Next, we consider the graph parameter clique-width, which is suitable when dealing with hard graph problems on dense graphs. Clique-width is a generalization of the parameters twin-cover and neighborhood diversity, in the sense that graphs of bounded neighborhood diversity or graphs of bounded twin-cover also have bounded clique-width. We show that Dynamic Coloring is FPT when parameterized by the combined parameters clique-width and the number of colors. Hence studying the parameterized complexity of Dynamic Coloring with respect to the above mentioned parameters reduces the gap between tractability and intractability. We summarize our contribution below. 1. In Sect. 3, we show that Dynamic Coloring can be solved in polynomial time on chordal graphs. 2. In Sect. 4, we show that Dynamic Coloring is polynomial time solvable on bipartite permutation graphs, a sub-class of biconvex graphs. We extend this algorithm to design a polynomial time algorithm for biconvex graphs, in Sect. 5. 3. In Sect. 6, we show NP-completeness results on star-convex bipartite graphs, comb-convex bipartite graphs and perfect elimination bipartite graphs  
   
  Dynamic Coloring on Restricted Graph Classes  
   
  115  
   
  Fig. 2. Hasse diagram of a few structural graph parameters. An edge from a parameter k1 to a parameter k2 means that there is a function f such that for all graphs G, we have k1 (G) ≤ f (k2 (G)). The parameters considered in this paper are indicated by ∗.  
   
  strengthening the NP-completeness result of Dynamic Coloring on bipartite graphs. 4. In Sects. 7 and 8, we show that Dynamic Coloring is FPT when parameterized by neighborhood diversity, twin-cover or the combined parameters clique-width and the number of colors.  
   
  2  
   
  Preliminaries  
   
  For k ∈ N, we use [k] to denote the set {1, 2, . . . , k}. All graphs we consider in this paper are undirected, connected, ﬁnite and simple. For a graph G = (V, E), we denote the vertex set and edge set of G by V (G) and E(G) respectively. We use n to denote the number of vertices and m to denote the number of edges of a graph. An edge between vertices x and y is denoted as xy for simplicity. For a subset X ⊆ V (G), the graph G[X] denotes the subgraph of G induced by the vertices of X. For a vertex set X ⊆ V (G), we denote by G \ X, the graph obtained from G by deleting all vertices of X and their incident edges. For a vertex v ∈ V (G), by N (v), we denote the set {u ∈ V (G) | vu ∈ E(G)} and we use N [v] to denote the set N (v) ∪ {v}. The neighborhood of a vertex set S ⊆ V (G) is N (S) = (∪v∈V (G) N (v))\S. A graph is bipartite if its vertex set can be partitioned into two disjoint sets such that no two vertices in the same set are adjacent. We say a vertex v of degree at least two to have satisﬁed dynamic coloring property if there exist at least two vertices in the neighborhood of v that are colored distinctly. Due to space constraints, the proofs of the Theorems marked () are presented in the full version of the paper.  
   
  116  
   
  3  
   
  S. Bhyravarapu et al.  
   
  Chordal Graphs  
   
  A vertex v of a graph G is called a simplicial vertex if the subgraph of G induced by the vertex set {v} ∪ N (v) is a complete graph. A perfect elimination ordering is a vertex ordering v1 , . . . , vn of V (G) such that each vi is simplicial in G[i], the subgraph induced by the vertices {v1 , . . . , vi }. A graph G is chordal if and only if it has a perfect elimination ordering. Given a graph, a perfect elimination ordering of G can be done in polynomial time [15]. In this section, we show Dynamic Coloring is polynomial time solvable on chordal graphs. Theorem 1. Let G be a chordal graph with at least two edges, then  3 if ω(G) = 2 χd (G) = ω(G) if ω(G) ≥ 3 where ω(G) is the size of a largest clique of G. Proof. Let G = (V, E) be a chordal graph. Hence G is Ck -free, for k ≥ 4. If ω(G) = 2, then G is Ck -free for k ≥ 3. That is, G is a tree, hence from [14] we know χd (G) = 3. We now deal with the case when ω(G) ≥ 3. Let v1 , . . . , vn be a perfect elimination ordering (PEO) of G. That is, each vi is simplicial in G[i]. Let f : V (G) → [ω(G)] be a coloring of G deﬁned as follows: assign f (v1 ) = 1 and f (v2 ) = 2. For each vi , where i ≥ 3, let Di = N (vi ) ∩ {v1 , . . . , vi−1 } be the neighbors of vi in G[i] and Ti be the set of colors used to color the vertices of Di . Then, f (vi ) =  
   
   min{[ω(G)] \ {f (vj ), f (vk )}} min{[ω(G)] \ Ti }  
   
  if Di = {vj } and Dj = {vk }, where k < j < i otherwise  
   
  Clearly, f is a proper coloring as each vi is greedily assigned a color (minimum) not appearing in Ti . Next, we show that f is dynamic coloring. For a vertex vi , if |Di | ≥ 2 then |Ti | ≥ 2 (i.e., |f (N (vi ))| ≥ 2). If |Di | = 1, and let Di = {vj }, then vi has only one neighbor vj in G[i]. If vi has no neighbor in the set {vi+1 , . . . , vn } then the degree of vi in G is one. Suppose, vi has a neighbor in the set {vi+1 , . . . , vn }. Let vp be the ﬁrst neighbor (according to PEO) of vi in the set {vi+1 , . . . , vn }. If |Dp | = 1, then by case 1, f (vp ) = f (vj ), f (vp ) = f (vi ) and f (vi ) = f (vj ), hence vi has at least two neighbors with distinct colors. Else if |Dp | = 2, then Dp = {vj , vi }, again by case 2, the three vertices vj , vi and vp are colored with three distinct colors. Hence vi has at two neighbors with distinct colors. Note that |Dp | cannot be greater than 2 because of the choice of p. It is easy to see that χd (G) ≥ ω(G) as we need at least ω(G) colors to properly color the largest clique of G. Since any vertex vi has  = |Di | many neighbors in G[i], at least one of the colors 1, 2, · · · ,  + 1 is not used in Ti . Hence our algorithm ﬁnds a coloring of G with at most max{|Ti | + 1} colors, which is i  
   
  at most ω(G). Hence χd (G) = ω(G). The time required for the above coloring procedure is  
   
  O(n2 ).  
   
  Dynamic Coloring on Restricted Graph Classes  
   
  4  
   
  117  
   
  Bipartite Permutation Graphs  
   
  In this section, we show that Dynamic Coloring is polynomial time solvable on bipartite permutation graphs. We start the section with some basic deﬁnitions and notations that are needed to describe the algorithm. Definition 1. (Chain Graph [6]). A bipartite graph G = (A ∪ B) is called a chain graph if for every two vertices u1 , u2 ∈ A we have either N (u1 ) ⊆ N (u2 ) or N (u2 ) ⊆ N (u1 ). That is, there is an ordering of the vertices of A, say u1 , u2 , . . . u|A| , such that N (ui ) ⊆ N (ui+1 ), 1 ≤ i < |A|. As a consequence, we can also ﬁnd an ordering of the vertices of B, say v1 , v2 , . . . v|B| , such that N (vi ) ⊆ N (vi+1 ), 1 ≤ i < |B|. We can see that each part of a chain graph can be linearly ordered under the inclusion of their neighborhoods. We say a vertex ordering σ of A is increasing if x 0.3019 then we run the algorithm from Lemma 6 and again   the running time will be bounded by O(1.937n ).  
   
  5  
   
  Interval Graphs  
   
  The main result of this section improves the previous known upper bound on the maximum number of minimal tropical connected sets in an interval graph on n vertices. Kratsch et al. [27] showed that the number is at most O(1.8613n ). Our upper bound is O(1.7142n ). Speciﬁcally, we prove the following: Theorem 5. There is an algorithm with running time O(1.7142n ) that enumerates all minimal tropical connected sets in a given interval graph on n vertices. Hence, the number of minimal tropical connected sets in any interval graph is at most O(1.7142n ).  
   
  138  
   
  I. Bliznets et al.  
   
  Fig. 2. The dependence of exponent on γ for the algorithms from Lemmas 6, 8, 14  
   
  In order to prove the theorem we use the following Lemma 15. Given an interval graph G of order n and a subset of vertices U ⊆ V (G) such that |U | = n we can list all minimal sets Z that connects U in n−n  
   
  time O∗ (3 3 ) (i.e. inclusion-minimal sets Z ⊆ V (G) \ U such that G[Z ∪ U ] is a connected graph). Proof. As our graph is interval we can in polynomial time construct a interval model such that each vertex has a corresponding interval on a line and: – two vertices share an edge if and only if corresponding intervals intersect; – no two intervals share endpoints. Let us construct such model and ﬁx it. Note that if G[U ] is a connected subgraph then the only set Z that satisﬁes the conditions is ∅. Denote by U1 , U2 , . . . , Uq connected components of G[U ]. We enumerate them from left to right i.e. U1 is the leftmost connected component in the interval model and Uq is the rightmost connected component. Denote by (Ui ), r(Ui ) the leftmost and the rightmost point of the connected component Ui on the ﬁxed line model of G. We must add a few vertices/intervals that join connected components U1 , . . . , Uq . Hence, we must add some vertex whose corresponding interval starts to the left of r(U1 ) and ends to the right of r(U1 ) as otherwise the connected component U1 will stay isolated from the other connected components. For a connected subgraph W denote by Nr (W ) vertices whose intervals start before r(W ) and end to the right of it. For any minimal U -connecting set Z we have |Z ∩ Nr (U1 )| ≥ 1. On the other hand |Z ∩ Nr (U1 )| < 2, otherwise there are v1 , v2 ∈ Z ∩ Nr (U1 ). If r(v1 ) is to the left of r(v2 ) then (Z \ v1 ) connects all components U1 , . . . , Uq as Z was doing so. If r(v1 ) is to the right of r(v2 ) then (Z \ v2 ) connects all components U1 , . . . , Uq . In any case, this contradicts to the fact that Z is inclusion-minimal. So it must be the case that |Z ∩ Nr (U1 )| = 1. Based on the above proved facts we suggest the following algorithm: 1. Branch on |Nr (U1 )| possibilities to select a vertex from Nr (U1 ) that belongs to Z and discard from the graph the rest of vertices from Nr (U1 ). Assume that we pick vertex v  at this step.  
   
  Enumeration of Minimal Tropical Connected Sets  
   
  139  
   
  2. Run the whole algorithm recursively on the new graph (G \ Nr (U1 )) ∪ {v  } and with a new subset (that needs to be connected) U ∪ {v  }. The correctness of the presented algorithm follows from the above observations. Since in the recurrence call each time we create i branchings and decrease n−n n by i, we have that the running time of the algorithm is at most O∗ (3 3 ) (as 1   the maximum of i i is achieved when i = 3 in the set of natural numbers). Now we have all needed tools to present proof of Theorem 5: Proof. (Proof of Theorem 5). As before we assume that our graph contains vertices of C = γn diﬀerent colors and the number of vertices colored in the i-th color is exactly ni , i.e. n1 + n2 + · · · + nC = n. Let Vi = {vi1 , . . . , vini } be a set of all vertices of the i-th color. We know that any tropical set must contain a rainbow set. With each Minimal Tropical Connected Set X we associate a rainbow set RX constructed as before (for each i ∈ {1, 2, 3, . . . , C} we put vij in RX if vij ∈ X and for each p < j we have that vij ∈ X). We note that X \ RX is an inclusion-minimal set that connects vertices from RX , otherwise X is not minimal tropical connected set. Now we are ready to describe the algorithm. In the ﬁrst step we list all potential candidates for the role of RX . So, basically, we consider many branchings and each branch deﬁnes a corresponding RX . So in branch in which jC } we assume that RX is part of a minimal tropical conRX = {v1j1 , v2j2 , . . . , vC nected set, while vertices vipi with pi < ji are not, hence in this branch these vertices can be simply deleted from the graph. At this point at each branch we already decided about  = j1 + j2 + · · · + jC vertices whether they belong to a minimal tropical connected set or not. There are n − j1 − j2 − · · · − jC vertices that are left, let us call the set of these vertices W . Now it is enough to list all inclusion-minimal sets Y  ⊆ W such that RX ∪ Y  is connected and discard those sets that are not minimal tropical connected sets. Check whether a set is a minimal tropical connected set can be done in a polynomial time by Lemma 5 |W | and by Lemma 15 we can list all Y  that connect RX in time O∗ (3 3 ). So the running time of the algorithm up to a polynomial factor is bounded by:   n−(j1 +j2 +···+jC ) n− 3 3 ≤ Pn,,C · 3 3 . 1≤j1 ≤n1 ... 1≤jC ≤nC  
   
  C≤≤n  
   
  Taking into account inequalities from Lemma 4 we have that the running time n− n of our algorithm is at most poly(n) · max [min{2 , 3 3 } · 3 3 ]. The maximum n− n of previous expression is achieved when 2 = 3 3 (since 2 3 3 is an increasing n− n function of  when n is ﬁxed and 3 3 3 3 is decreasing). So in the worst case we have  = n3 · log2 3 and the running time of our algorithm is bounded by 1 log 3  
   
  O∗ (31/3·n·(2− 3 · log 2 ) ) = O(1.7142n ).  
   
     
   
  Acknowledgements. We would like to thank Lucas Meijer and anonymous reviewers for comments that helped to improve the paper.  
   
  140  
   
  I. Bliznets et al.  
   
  References 1. Agrawal, A., Fomin, F.V., Lokshtanov, D., Saurabh, S., Tale, P.: Path contraction faster than 2n . SIAM J. Discret. Math. 34(2), 1302–1325 (2020) 2. Betzler, N., Van Bevern, R., Fellows, M.R., Komusiewicz, C., Niedermeier, R.: Parameterized algorithmics for ﬁnding connected motifs in biological networks. IEEE/ACM Trans. Comput. Biol. Bioinf. 8(5), 1296–1308 (2011) 3. Bliznets, I., Fomin, F.V., Pilipczuk, M., Villanger, Y.: Largest chordal and interval subgraphs faster than 2n . Algorithmica 76(2), 569–594 (2016) 4. Bliznets, I., Sagunov, D.: Solving target set selection with bounded thresholds faster than 2n . Algorithmica, 1–22 (2022) 5. Böcker, S., Rasche, F., Steijger, T.: Annotating fragmentation patterns. In: Salzberg, S.L., Warnow, T. (eds.) WABI 2009. LNCS, vol. 5724, pp. 13–24. Springer, Heidelberg (2009). https://doi.org/10.1007/978-3-642-04241-6_2 6. Brandstädt, A., Le, V.B., Spinrad, J.P.: Graph classes: a survey. SIAM (1999) 7. Chapelle, M., Cochefert, M., Kratsch, D., Letourneur, R., Liedloﬀ, M.: Exact exponential algorithms to ﬁnd a tropical connected set of minimum size. In: Cygan, M., Heggernes, P. (eds.) IPEC 2014. LNCS, vol. 8894, pp. 147–158. Springer, Cham (2014). https://doi.org/10.1007/978-3-319-13524-3_13 8. Chapelle, M., Cochefert, M., Kratsch, D., Letourneur, R., Liedloﬀ, M.: Exact exponential algorithms to ﬁnd tropical connected sets of minimum size. Theor. Comput. Sci. 676, 33–41 (2017) 9. Cohen, J., Italiano, G.F., Manoussakis, Y., Thang, N.K., Pham, H.P.: Tropical paths in vertex-colored graphs. J. Comb. Optim. 42(3), 476–498 (2021) 10. Cohen, J., Manoussakis, Y., Phong, H., Tuza, Z.: Tropical matchings in vertexcolored graphs. Electron. Notes Discrete Math. 62, 219–224 (2017) 11. Couturier, J.F., Letourneur, R., Liedloﬀ, M.: On the number of minimal dominating sets on some graph classes. Theoret. Comput. Sci. 562, 634–642 (2015) 12. Cygan, M., et al.: Parameterized Algorithms. Springer, Cham (2015). https://doi. org/10.1007/978-3-319-21275-3 13. Cygan, M., Pilipczuk, M., Pilipczuk, M., Wojtaszczyk, J.O.: Solving the 2-disjoint connected subgraphs problem faster than 2n . Algorithmica 70(2), 195–207 (2014) 14. Cygan, M., Pilipczuk, M., Wojtaszczyk, J.O.: Irredundant set faster than O(2n ). In: Calamoneri, T., Diaz, J. (eds.) CIAC 2010. LNCS, vol. 6078, pp. 288–298. Springer, Heidelberg (2010). https://doi.org/10.1007/978-3-642-13073-1_26 15. Cygan, M., Pilipczuk, M., Wojtaszczyk, J.O.: Capacitated domination faster than o(2n ). Inf. Process. Lett. 111(23–24), 1099–1103 (2011) 16. d’Auriac, J.A.A., et al.: Tropical dominating sets in vertex-coloured graphs. J. Discrete Algorithms 48, 27–41 (2018) 17. d’Auriac, J.A.A., Cohen, N., El Mafthoui, H., Harutyunyan, A., Legay, S., Manoussakis, Y.: Connected tropical subgraphs in vertex-colored graphs. Discrete Math. Theor. Comput. Sci. 17(3), 327–348 (2016) 18. Fomin, F.V., Gaspers, S., Saurabh, S.: Improved exact algorithms for counting 3and 4-colorings. In: Lin, G. (ed.) COCOON 2007. LNCS, vol. 4598, pp. 65–74. Springer, Heidelberg (2007). https://doi.org/10.1007/978-3-540-73545-8_9 19. Fomin, F.V., Giannopoulou, A.C., Pilipczuk, M.: Computing tree-depth faster than 2n . Algorithmica 73(1), 202–216 (2015) 20. Fomin, F.V., Grandoni, F., Kratsch, D.: Solving connected dominating set faster than 2n . Algorithmica 52(2), 153–166 (2008)  
   
  Enumeration of Minimal Tropical Connected Sets  
   
  141  
   
  21. Fomin, F.V., Grandoni, F., Pyatkin, A.V., Stepanov, A.A.: Combinatorial bounds via measure and conquer: bounding minimal dominating sets and applications. ACM Trans. Algorithms (TALG) 5(1), 1–17 (2008) 22. Fomin, F.V., Kratsch, D.: Exact exponential algorithms (2010) 23. Golovach, P.A., Heggernes, P., Kratsch, D., Saei, R.: Enumeration of minimal connected dominating sets for chordal graphs. Discrete Appl. Math. 278, 3–11 (2020). https://doi.org/10.1016/j.dam.2019.07.015 24. Golovach, P.A., Kratsch, D., Liedloﬀ, M., Sayadi, M.Y.: Enumeration and maximum number of minimal dominating sets for chordal graphs. Theor. Comput. Sci. 783, 41–52 (2019). https://doi.org/10.1016/j.tcs.2019.03.017 25. Golumbic, M.C.: Algorithmic Graph Theory and Perfect Graphs. Elsevier, Amsterdam (2004) 26. Heggernes, P.: Minimal triangulations of graphs: a survey. Discret. Math. 306(3), 297–317 (2006) 27. Kratsch, D., Liedloﬀ, M., Sayadi, M.Y.: Enumerating minimal tropical connected sets. In: Steﬀen, B., Baier, C., van den Brand, M., Eder, J., Hinchey, M., Margaria, T. (eds.) SOFSEM 2017. LNCS, vol. 10139, pp. 217–228. Springer, Cham (2017). https://doi.org/10.1007/978-3-319-51963-0_17 28. Krzywkowski, M.: Trees having many minimal dominating sets. Inf. Process. Lett. 113(8), 276–279 (2013) 29. Lacroix, V., Fernandes, C.G., Sagot, M.F.: Motif search in graphs: application to metabolic networks. IEEE/ACM Trans. Comput. Biol. Bioinf. 3(4), 360–368 (2006) 30. Lawer, E.L.: A note on the complexity of the chromatic number problem. Inf. Process. Lett. (1976) 31. Le, H., Highley, T.: Tropical vertex-disjoint cycles of a vertex-colored digraph: barter exchange with multiple items per agent. Discrete Math. Theor. Comput. Sci. 20 (2018) 32. Moon, J.W., Moser, L.: On cliques in graphs. Israel J. Math. 3, 23–28 (1965) 33. Razgon, I.: Computing minimum directed feedback vertex set in o ∗ (1.9977n ). In: Theoretical Computer Science, pp. 70–81. World Scientiﬁc (2007) 34. Telle, J.A., Villanger, Y.: Connecting terminals and 2-disjoint connected subgraphs. In: Brandstädt, A., Jansen, K., Reischuk, R. (eds.) WG 2013. LNCS, vol. 8165, pp. 418–428. Springer, Heidelberg (2013). https://doi.org/10.1007/978-3-642-450433_36 35. Vassilevska Williams, V.: Hardness of easy problems: basing hardness on popular conjectures such as the strong exponential time hypothesis (invited talk). In: 10th International Symposium on Parameterized and Exact Computation (IPEC 2015). Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik (2015)  
   
  Dynamic Flows with Time-Dependent Capacities Thomas Bl¨asius , Adrian Feilhauer(B) , and Jannik Westenfelder Karlsruhe Institute of Technology (KIT), 76131 Karlsruhe, Germany {thomas.blaesius,adrian.feilhauer}@kit.edu Abstract. Dynamic network flows, sometimes called flows over time, extend the notion of network flows to include a transit time for each edge. While Ford and Fulkerson showed that certain dynamic flow problems can be solved via a reduction to static flows, many advanced models considering congestion and time-dependent networks result in NP-hard problems. To increase understanding of these advanced dynamic flow settings we study the structural and computational complexity of the canonical extensions that have time-dependent capacities or time-dependent transit times. If the considered time interval is finite, we show that already a single edge changing capacity or transit time once makes the dynamic flow problem weakly NP-hard. In case of infinite considered time, one change in transit time or two changes in capacity make the problem weakly NP-hard. For just one capacity change, we conjecture that the problem can be solved in polynomial time. Additionally, we show the structural property that dynamic cuts and flows can become exponentially complex in the above settings where the problem is NP-hard. We further show that, despite the duality between cuts and flows, their complexities can be exponentially far apart.  
   
  1  
   
  Introduction  
   
  Network ﬂows are a well established way to model transportation of goods or data through systems representable as graphs. Dynamic ﬂows (sometimes called ﬂows over time) include the temporal component by considering the time to traverse an edge. They were introduced by Ford and Fulkerson [3], who showed that maximum dynamic ﬂows in static networks can be found using temporally repeated flows, which send ﬂow over paths of a static maximum ﬂow as long as possible. Since capacities in real-world networks tend to be more dynamic, several generalizations have been considered in the literature. One category here is congestion modeling networks, where transit times of edges can depend on the ﬂow routed over them [6,7]. Other generalizations model changes in the network independently from the routed ﬂow [4,9,11]. This makes it possible to model known physical changes to the network and allows for situations, where we have estimates of the overall congestion over time that is caused by external entities that are not part of the given ﬂow problem. There are also eﬀorts to include diﬀerent c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  M. Mavronicolas (Ed.): CIAC 2023, LNCS 13898, pp. 142–156, 2023. https://doi.org/10.1007/978-3-031-30448-4_11  
   
  Dynamic Flows with Time-Dependent Capacities  
   
  143  
   
  objectives for the ﬂow, e.g., for evacuation scenarios, it is beneﬁcial for a ﬂow to maximize arrival for all times, not just at the end of the considered time interval [2]. Most problems modeling congestion via ﬂow-dependent transit times are NPhard. If the transit time depends on the current load of the edge, the ﬂow problems become strongly NP-hard and no ε approximation exists unless P = NP [6]. If the transit time of an edge instead only depends on its inﬂow rate while ﬂow that entered the edge earlier is ignored the ﬂow problems are also strongly NPhard [7]. When allowing to store ﬂow at vertices, pseudo-polynomial algorithms are possible if there are time-dependent capacities [4] and if there additionally are time-dependent transit times [9,11]. In the above mentioned evacuation scenario, one aims at ﬁnding the so-called earliest arrival ﬂow (EAF). It is also NP-hard in the sense that it is hard to ﬁnd the average arrival time of such a ﬂow [2]. Moreover, all known algorithms to ﬁnd EAFs have worst case exponential output size for all known encodings [2]. In this paper, we study natural generalizations of dynamic ﬂows that have received little attention so far, allowing time-dependent capacities or timedependent transit times. We prove that ﬁnding dynamic ﬂows with timedependent capacities or time-dependent transit times is weakly NP-hard, even if the graph is acyclic and only a single edge experiences a capacity change at a single point in time. This shows that a single change in capacity already increases the complexity of the – otherwise polynomially solvable – dynamic ﬂow problem. It also implies that the dynamic ﬂow problem with time-dependent capacities is not FTP in the number of capacity changes. The above results hold in the setting where the considered time interval is ﬁnite. If we instead consider inﬁnite time, the results remain the same for time-dependent transit times. For timedependent capacities, two capacity changes make the problem weakly NP-hard. We conjecture that it can be solved in polynomial when there is only one change. Beyond these results on the computational complexity, we provide several structural insights. For static ﬂows, one is usually not only interested in the ﬂow value but wants to output a maximum ﬂow or a minimum cut. The concept of ﬂows translates more or less directly to the dynamic setting [3], we need to consider time-dependent ﬂows and cuts if we have time-dependent capacities or transit times. In this case, instead of having just one ﬂow value per edge, the ﬂow is a function over time. Similarly, in a dynamic cut, the assignment of vertices to one of two partitions changes over time. The cut–ﬂow duality, stating that the capacity of the minimum cut is the same as the value of the maximum ﬂow also holds in this and many related settings [5,8,11]. Note that the output complexity can potentially be large if the ﬂow on an edge or the partition of a vertex in a cut changes often. For dynamic ﬂows on static graphs (no changes in capacities or transit times) vertices start in the target vertices’ partition and at some point change to the source partition, but never the other way [10], which shows that cuts have linear complexity in this setting. In case of time-dependent capacities or transit times, we show that ﬂow and cut complexity are sometimes required to be exponential. Speciﬁcally, for all  
   
  144  
   
  T. Bl¨ asius et al.  
   
  cases where we show weak NP-hardness, we also give instances for which every maximum ﬂow and minimum cut have exponential complexity. Thus, even a single edge changing capacity or transit time once can jump the output complexity from linear to exponential. Moreover, we give examples where the ﬂow complexity is exponential while there exists a cut of low complexity and vice versa. We note that the scenario of time-dependent capacities has been claimed to be strongly NP-complete [9] before. However, we suspect the proof to be ﬂawed as one can see that this scenario can be solved in pseudo-polynomial time. Moreover, the above mentioned results on the solution complexity make it unclear whether the problem is actually in NP. Due to space constraints, many proofs are shortened or omitted here, they can be found in the full version of the paper [1].  
   
  2  
   
  Preliminaries  
   
  We consider dynamic networks G = (V, E) with directed edges and designated source and target vertices s, t ∈ V . Edges e = (v, w) ∈ E have a time-dependent non negative capacity ue : [0, T ] → R+ 0 , specifying how much ﬂow can enter e via v at each time. We allow ue to be non-continuous but only for ﬁnitely many points in time. In addition, each edge e = (v, w) also has a non negative transit time τe ∈ R+ , denoting how much time ﬂow takes to move from v to w when traversing e. Note that the capacity is deﬁned on [0, T ], i.e., time is considered from 0 up to a time horizon T . Let f be a collection of measurable functions fe : [0, T − τe ] → R, one for each edge e ∈ E, assigning every edge a ﬂow value depending on the time. The restriction to the interval [0, T − τe ] has the interpretation that no ﬂow may be sent before time 0 and no ﬂow should arrive after time T in a valid ﬂow. To simplify notation, we allow time values beyond [0, T − τe ] and implicitly assume / [0, T − τe ]. We call f a dynamic flow if it satisﬁes the capacity fe (Θ) = 0 for Θ ∈ constraints fe (Θ) ≤ ue (Θ) for all e ∈ E and Θ ∈ [0, T − τe ], and strong flow conservation, which we deﬁne in the following. The excess flow exf (v, Θ) of a vertex v at time Θ is the diﬀerence between ﬂow sent to v and the ﬂow sent from v up to time Θ, i.e.,  Θ   exf (v, Θ) := fe (ζ − τe ) − fe (ζ) dζ. 0  
   
  e=(u,v)∈E  
   
  e=(v,u)∈E  
   
  We have strong ﬂow conservation if exf (v, Θ) = 0 for all v ∈ V \{s, t} and Θ ∈ [0, T ]. The value of f is deﬁned as the excess of the target vertex at the time horizon |f | := exf (t, T ) = − exf (s, T ). The maximum dynamic flow problem with timedependent capacities is to ﬁnd a ﬂow of maximum value. We refer to its input as dynamic flow network. A cut-ﬂow duality similar to the one of the static maximum ﬂow problem holds for the maximum dynamic ﬂow problem with the following cut deﬁnition.  
   
  Dynamic Flows with Time-Dependent Capacities  
   
  145  
   
  A dynamic cut or cut over time is a partition of the vertices (S, V \ S) for each point in time, where the source vertex s always belongs to S while the target t never belongs to S. Formally, each vertex v ∈ V has a boolean function Sv : [0, T ] → {0, 1} assigning v to S at time Θ if Sv (Θ) = 1. As for the ﬂow, we extend Sv beyond [0, T ] and set Sv (Θ) = 1 for Θ > T for all v ∈ V (including t). The capacity cap(S) of a dynamic cut S is the maximum ﬂow that could be sent on edges from S to V \ S during the considered time interval [0, T ], i.e.,  cap(S) = 0  
   
  T  
   
    
   
  u(v,w) (Θ) dΘ.  
   
  (v,w)∈E Sv (Θ)=1 Sw (Θ+τe )=0  
   
  An edge (v, w) contributes to the cut S at time Θ if it contributes to the above sum, so Sv (Θ) = 1 ∧ Sw (Θ + τe ) = 0. Note that this is similar to the static case, but in the dynamic variant the delay of the transit time needs to be considered. Thus, for the edge e = (v, w) we consider v at time Θ and w at time Θ + τe . Moreover, setting Sv (Θ) = 1 for all vertices v if Θ > T makes sure that no point in time beyond the time horizon contributes to cap(S). Theorem 1 (Min-Cut Max-Flow Theorem [8,11]). For a maximum flow over time f and a minimum cut over time S it holds |f | = cap(S). Proof. The theorem by Philpott [8, Theorem 1] is more general than the setting considered here. They in particular allow for time-dependent storage capacities of vertices. We obtain the here stated theorem by simply setting them to constant zero. The theorem by Tjandra [11, Theorem 3.4] is even more general and thus also covers the setting with time-dependent transit times.   Though the general deﬁnition allows the capacity functions to be arbitrary, for our constructions it suﬃces to use piecewise constant capacities. We note that in this case, there always exists a maximum ﬂow that is also piecewise constant, assigning ﬂow values to a set of intervals of non-zero measure. The property that the intervals have non-zero measure lets us consider an individual point Θ in time and talk about the contribution of an edge to a cut or ﬂow at time Θ, as Θ is guaranteed to be part of a non-empty interval with the same cut or ﬂow. For the remainder of this paper, we assume that all ﬂows have the above property. We deﬁne the following additional useful notation. We use S(Θ) := {v ∈ V | ¯ := {v ∈ V | Sv (Θ) = 0} to denote the cut at time Θ. Sv (Θ) = 1} and S(Θ) Moreover, a vertex v changes its partition at time Θ if Sv (Θ − ε) = Sv (Θ + ε) for Θ ¯ every suﬃciently small ε > 0. We denote a change from S to S¯ with Sv − → Sv Θ ¯ ¯ and a change in the other direction from S to S with Sv − → Sv . We denote the number of partition changes of a vertex v in a cut S with chv (S). Moreover the total number of changes in S is the complexity of the cut S. For a ﬂow f , we deﬁne changes on edges as well as the complexity of f analogously.  
   
  146  
   
  T. Bl¨ asius et al.  
   
  In the above deﬁnition of the maximum dynamic ﬂow problem we allow time-dependent capacities but assume constant transit times. Most of our results translate to the complementary scenario where transit times are time-dependent while capacities are constant. In this setting τe (Θ) denotes how much time ﬂow takes to traverse e, if it enters at time Θ. Similarly to the above deﬁnition, we allow τe to be non-continuous for ﬁnitely many points in time. Additionally we look at the scenarios where inﬁnite time (Θ ∈ (−∞, ∞)) is considered instead of only considering times in [0, T ]. This removes structural eﬀects caused by the boundaries of the considered time interval. Intuitively, because we are working with piecewise constant functions with ﬁnitely many incontinuities, there exists a point in time Θ that is suﬃciently late that all eﬀects of capacity changes no longer play a role. From that time on, one can assume the maximum ﬂow and minimum cut to be constant. The same holds true for a suﬃciently early point in time. Thus, to compare ﬂow values it suﬃces to look at a ﬁnite interval I. Formally, f is a maximum dynamic ﬂow with infinite considered time if it is constant outside of I and maximum on I, such that for any larger interval J ⊃ I there exists a large enough interval K ⊃ J so that a maximum ﬂow with considered time interval K can be f during J. Minimum cuts with inﬁnite considered time are deﬁned analogously. Such maximum ﬂows and minimum cuts always exist as temporally repeated ﬂows provide optimal solutions to dynamic ﬂows and we only allow ﬁnitely many changes to capacity or traversal time. We will need the set of all integers up to k and denote it [k] := {i ∈ N+ |i ≤ k}.  
   
  3  
   
  Computational Complexity  
   
  In this section we study the computational complexity of the dynamic ﬂow problem with time-dependent capacities or transit times. We consider ﬁnite and inﬁnite time. For all cases except for a single capacity change with inﬁnite considered time, we prove NP-hardness. We start by showing hardness in the setting where we have time-dependent capacities with only one edge changing capacity once. Our construction directly translates to the setting of inﬁnite considered time with one edge changing capacity twice. For the case of time-dependent transit times we prove hardness for one change even in the inﬁnite considered time setting. This also implies hardness for one change when we have a ﬁnite time horizon. We reduce from the partition problem, which kis deﬁned as follows. Given a , . . . , b } with set of positive integers S = {b 1 k i=1 bi = 2L, is there a subset  S  ⊂ S such that a∈S  a = L? Theorem 2. The dynamic flow problem with time-dependent capacities is weakly NP-hard, even for acyclic graphs with only one capacity change. Proof. Given an instance of the partition problem, we construct G = (V, E) as shown in Fig. 1 and show that a solution to partition is equivalent to a ﬂow of value 1 in G.  
   
  Dynamic Flows with Time-Dependent Capacities  
   
  147  
   
  Every bi ∈ S corresponds to a vertex xi which can be reached by xi−1 with one edge of transit time bi and one bypass edge of transit time zero. The last of these vertices xk is connected to the target t with an edge only allowing ﬂow to pass during [L + 1, L + 2], where the lower border is ensured by the capacity change of (xk , t) and the upper border is given by the time horizon T = L + 3. 1 , so that the The source s is connected to x0 with an edge of low capacity L+1 single ﬂow unit that can enter this edge in [0, T − 2] can pass (xk , t) during one time unit. Since a solution to the partition problem is equivalent to a path of transit time L through the xi , we additionally provide paths of transit time 0, 1, . . . , L−1 bypassing the bi edges via the yi so that a solution for partition exists, if and only if ﬂow of value 1 can reach t. To provide the bypass paths, we set  ∈ N0 so that L = 2+1 + r, r ∈ N0 , r < 2+1 and deﬁne vertices yi , i ∈ N0 , i ≤ . They create a path of transit time L − 1 where the edges’ transit times are powers of two and one edge of transit time r and all edges can be bypassed by an edge with transit time zero. This allows all integer transit times smaller than L − 1. All edges except for (s, x0 ) have unit capacity when they are active. Given a solution S  to the partition problem, we can route ﬂow leaving s during [0, 1] through the xi along the non zero transit time edges if and only if the corresponding bi is in S  . Flow leaving s in [1, L + 1] can trivially reach xk during [L + 1, L + 2] using the bypass paths, providing a maximum ﬂow of 1. Only one unit of ﬂow can reach x0 until L + 2, considering the time horizon T = L + 3 and the transit time of (xk , t), the ﬂow can have value at most 1. Given a ﬂow that sends one unit of ﬂow to t, we can see that the ﬂow has to route all ﬂow that can pass (s, x0 ) during [0, L + 1] to t. Due to the integrality of transit times, the ﬂow leaving s during [0, 1] has to take exactly time L to traverse from x0 to xk . The bypass paths via y0 are too short for this. As such, this time is the sum of edge transit times taken from the partition instance and zeroes from bypass edges, and there exists a solution S  to the partition problem that consists of the elements corresponding to the non zero transit time edges taken by this ﬂow.    
   
  s  
   
  x0  
   
  1  
   
  b1  
   
  x1  
   
  0  
   
  1 L+1  
   
  r  
   
  0  
   
  x2  
   
  xk  
   
  0  
   
  0 20 y0  
   
  b2  
   
  0  
   
  t  
   
  Θ=L+1  
   
  0 −−−−−→ 1 0  
   
  2  
   
  21 y1  
   
  1  
   
  y2  
   
  y  
   
  Fig. 1. Graph constructed for the reduction of the partition problem to dynamic flow with time-dependent capacities. Flow leaving s at time zero can only reach t if it takes exactly time L to traverse from x0 to xk , such choosing a partition. Black numbers are transit times, blue numbers indicate capacity, all unspecified capacities are 1, time horizon is T = L + 3. (Color figure online)  
   
  148  
   
  T. Bl¨ asius et al.  
   
  Corollary 1. The dynamic flow problem with time-dependent capacities and infinite considered time is weakly NP-hard, even for acyclic graphs with only two capacity changes. Proof. In the proof of Theorem 2, we restricted the ﬂow on the edge from xk to t to have non-zero capacity only at time [L + 1, L + 2]. For Theorem 2, we achieved the lower bound with one capacity change and the upper bound with the time horizon. Here, we can use the same construction but use a second capacity change for the upper bound.   For the case of time-dependent transit times, we use a similar reduction. We start with the case of inﬁnite considered time. Theorem 3. The dynamic flow problem with infinite considered time and timedependent transit times is weakly NP-hard, even for acyclic graphs with only one transit time change. To translate this result to the case of a ﬁnite time horizon, note that we can use the above construction and choose the time horizon suﬃciently large to obtain the following corollary. Corollary 2. The dynamic flow problem with time-dependent transit times is weakly NP-hard, even for acyclic graphs with only one transit time change. This leaves one remaining case: inﬁnite considered time and a single capacity change. For this case, we can show that there always exists a minimum dynamic cut, where each vertex changes partition at most once and all partition changes are of the same direction. Furthermore, for given partitions before and after the changes, a linear program can be used to ﬁnd the optimal transition as long as no vertex changes partition more than once and all partition changes are of the same direction. This motivates the following conjecture. Conjecture 1. The minimum cut problem in a dynamic ﬂow network with only a single change in capacity and inﬁnite considered time can be solved in polynomial time.  
   
  4  
   
  The Complexity of Maximum Flows and Minimum Cuts  
   
  We ﬁrst construct a dynamic ﬂow network such that all maximum ﬂows and minimum cuts have exponential complexity. Afterwards, we show that there are also instances that require exponentially complex ﬂows but allow for cuts of linear size and vice versa. These results are initially proven for a single change in capacity and are then shown to also hold in the setting with time dependent transit times, likewise with only one change in transit time required.  
   
  Dynamic Flows with Time-Dependent Capacities  
   
  4.1  
   
  149  
   
  Exponentially Complex Flows and Cuts  
   
  We initially focus on the complexity of cuts and only later show that it transfers to ﬂows. Before we start the construction, note that the example in Fig. 2 shows how the partition change of two vertices a and b can force a single vertex v to change its partition back and forth. This type of enforced partition change of v is at the core of our construction.  
   
  Θ=0 a  
   
  Θ=1  
   
  v  
   
  b  
   
  Θ=2  
   
  a  
   
  v  
   
  b  
   
  a  
   
  v  
   
  b  
   
  a  
   
  v  
   
  b  
   
  a  
   
  v  
   
  b  
   
  Fig. 2. Example where a changes from S¯ (red) to S (blue) at time 1 and b changes from S to S¯ at time 2. Only edges from S to S¯ contribute to the cut (bold edges). Assuming v starts in S¯ and u(a,v) < u(v,b) as well as τ(a,v) = τ(v,b) = 0, v has to change to S at time 1 and back to S¯ at time 2 in a minimum cut (top row). The bottom row illustrates the alternative (more expensive) behavior of v. (Color figure online)  
   
  More speciﬁcally, we ﬁrst give a structure with which we can force vertices to mimic the partition changes of other vertices, potentially with ﬁxed time delay. The mimicking gadget links two non terminal vertices a, b ∈ V \{s, t} using edges (a, b), (b, t) ∈ E with capacities u(a,b) = α, u(b,t) = β. The following lemma shows what properties α and β need to have such that the mimicking gadget does its name credit, i.e., that b mimics a with delay τ(a,b) . A visualization of the mimicking gadget is shown in Fig. 3.  
   
  a  
   
  α>  
   
  β  
   
  α b  
   
  t  
   
  β>  
   
     
   
  w:(b,w)∈E  
   
  u(b,w)  
   
  w:(w,b)∈E\(a,b)  
   
  u(w,b)  
   
  Fig. 3. Gadget linking the partitions of two vertices a and b, so that b mimics a with a delay of τ(a,b) ; α, β are capacities.  
   
  Lemma 1. Let G be a graph that contains the mimicking gadget as a sub-graph, such that   u(b,w) and β > u(w,b) . α> w|(b,w)∈E  
   
  w|(w,b)∈E\(a,b)  
   
  150  
   
  T. Bl¨ asius et al.  
   
  Then, Sb (Θ) = Sa (Θ−τ(a,b) ) for every minimum cut S and times Θ ∈ (τ(a,b) , T − τ(b,t) ). Proof. We ﬁrst show a ∈ S(Θ − τ(a,b) ) =⇒ b ∈ S(Θ). With the partition of a ﬁxed, we look at possible contribution to S of edges incident to b at time ¯ Θ. For b ∈ S(Θ) the contribution is at least α, because Θ ∈ (τ(a,b) , T − τ(b,t) ) ensures that (a, b) can contribute to S. For b ∈ S(Θ) the contribution is at most  w|(b,w)∈E u(b,w) < α. Because S is a minimum cut, we obtain b ∈ S(Θ). The ¯ − τ(a,b) ) =⇒ b ∈ S(Θ) ¯ other direction a ∈ S(Θ holds for similar reasons. For ¯ b∈ S(Θ) the contribution is at least β. For b ∈ S(Θ) the contribution is at most u < β.   (w,b) w|(w,b)∈E Note that Lemma 1 does not restrict the edges incident to a. Thus, we can use it rather ﬂexibly to transfer partition changes from one vertex to another. To enforce exponentially many partition changes, we next give a gadget that can double the number of partition changes of one vertex. To this end, we assume that, for every integer i ∈ [k], we already have access to vertices ai with period pi := 2i , i.e., ai changes partition every pi units of time. Note that a1 is the vertex with the most changes. With this, we construct the so-called binary counting gadget that produces a vertex v with period p0 = 1, which results in it having twice as many changes as a1 . Roughly speaking, the binary counting gadget, shown in Fig. 5, consists of the above mentioned vertices ai together with additional vertices bi such that bi mimics ai . Between the ai and bi lies the central vertex v with edges from the vertices ai and edges to the bi . Carefully chosen capacities and synchronization between the ai and bi results in v changing partition every step. To iterate this process using v as vertex for the binary counting gadget of the next level, we need to ensure functionality with the additionally attached edges of the mimicking gadget. The binary counting gadget Hk shown in Fig. 5 is formally deﬁned as follows. It contains the above mentioned vertices ai , bi for i ∈ [k] and the vertex v. Additionally, it contains the source s and target t. On this vertex set, we have ﬁve types of edges. All of them have transit time 1 unless explicitly speciﬁed otherwise. The ﬁrst two types are the edges (ai , bi ) and (bi , t) for i ∈ [k], which form a mimicking gadget. We set τ(ai ,bi ) = pi + 1 which makes bi mimic the changes of ai with delay pi + 1. Moreover, we set u(ai ,bi ) = αi := 2i−1 + 2ε and u(bi ,t) = βi := 2i−1 + ε. We will see that these αi and βi satisfy the requirements of the mimicking gadget in Lemma 1. The third and fourth types of edges are (ai , v) and (v, bi ) for i ∈ [k] with capacities u(ai ,v) = u(v,bi ) = 2i−1 . These edges have the purpose to force the partition changes of v, similar to the simple example in Fig. 2. Finally, we have the edge (s, v) with capacity u(s,v) = 1 − ε. It has the purpose to ﬁx the initial partition of v and introduce some asymmetry to ensure functionality even if additional edges are attached to v. Our plan is to prove that the binary counting gadget Hk works as desired by induction over k. We start by deﬁning the desired properties that will serve as induction hypothesis.  
   
  Dynamic Flows with Time-Dependent Capacities  
   
  151  
   
  Definition 1. Let G be a graph. We say that Hk is a valid binary counting gadget in G if Hk is a subgraph of G and every minimum cut S has the following properties. – For i ∈ [k − 1], the vertex ai has period pi . It changes its partition 2k−i times starting with a change from S to S¯ at time 0 and ending with a change at time 2k − 2i . – For i = k, ak changes from S to S¯ at time 0 and additionally back to S at time 2k . Note that in a valid binary counting gadget the ai and v form a binary counter from 0 to 2k − 1 when regarding S¯ as zero and S as 1, with v being the least signiﬁcant bit (shifted back two time steps); see Fig. 4.  
   
  Θ:  
   
  0  
   
  2  
   
  4  
   
  6  
   
  8 10 12 14 16 18  
   
  v a1 a2 a3 a4 Fig. 4. Visualization of the partition change patterns of a valid binary counting gadget ¯ (Color figure online) H4 . In blue sections the vertex is in S and in red sections it is in S.  
   
  1− 0 s − → t 2 t − → s 4 s − → t...  
   
  3 s − → t 5 t − → s 7 s − → t...  
   
  a1  
   
  0 s − → t 4 t − → s...  
   
  s  
   
  a2  
   
  0 s − → t 8 t − → s...  
   
  a3  
   
  1 2 4  
   
  b1  
   
  1 2 v  
   
  4  
   
  5 s − → t 9 t − → s...  
   
  b2  
   
  9 s − → t 17 t − − → s...  
   
  t  
   
  b3  
   
  Fig. 5. Intuitive visualization of the binary counting gadget allowing to double the number of partition changes of a single vertex, ensuring 2k changes of vertex v assuming that vertices ai , i < k are changing partition chai = 2k−i times each, with chak = 2 and correct timing. The shown black numbers are capacities. For improved readability mimicking gadgets are omitted and the partition changes of the ai , bi are denoted in ¯ blue by their terminal, i.e. s for S and t for S.  
   
  152  
   
  T. Bl¨ asius et al.  
   
  Lemma 2. Let G be a graph containing the valid binary counting gadget Hk such that the central vertex v has no additional incoming edges, the sum of the capacities of additional outgoing edges of v is less than 1 − ε, and no additional edges are incident to the bi . Then, for every minimum cut S, the central vertex v has period p0 = 1 and changes 2k times, starting with a change from S to S¯ at time 2 and ending with a change at time 2k + 1. Proof (Proof sketch). The edge (s, v) sets the default partition of v to S. Beyond that, v is inﬂuenced by the edges from ai and to bi . Mimicking gadgets ensure that the bi change partitions with the same frequency as the ai with appropriate delay and in opposite directions. The changes of the bi -side from S to S¯ induce ¯ while changes on the ai -side from S¯ to S induce changes of v from S to S, changes of v back to S. Moreover, the exponentially increasing capacities make sure that later changes essentially supersede earlier ones. We additionally need to ensure that we have some slack for adding additional outgoing edges to v.   Note that Lemma 2 provides the ﬁrst part towards the induction step of constructing a valid Hk+1 from a valid Hk . In the following, we show how to scale periods of the ai such that ai from Hk can serve as the ai+1 from Hk+1 and v can serve as the new a1 . Afterwards, it remains to show two things. First, additional edges to actually build Hk+1 from Hk can be introduced without losing validity. And secondly, we need the initial step of the induction, i.e., the existence of a valid H1 even in the presence of only one capacity change. We say that a minimum dynamic cut S remains optimal under scaling and translation of time if S is a minimum cut on graph G = (V, E) with transit times τe , capacities ue (Θ) and time interval [0, T ] if and only if Sˆ with Sˆv (r · Θ + T0 ) := ˆ = (V, E) with transit times τˆe := r · τe , Sv (Θ) ∀Θ ∈ [0, T ] is a minimum cut on G capacities u ˆe (r · Θ + T0 ) := ue (Θ) and time interval [T0 , r · T + T0 ] for any r ∈ R+ , T0 ∈ R. Lemma 3. Any dynamic cut remains optimal under scaling and translation of time. It also remains optimal under scaling of capacities. With this, we can combine binary counting gadgets of diﬀerent sizes to create a large binary counting gadget H while only requiring a single capacity change. Lemma 4. For every  ∈ N+ , there exists a polynomially sized, acyclic dynamic flow network with only one capacity change that contains a valid binary counting gadget H . Proof (Proof sketch). To create the necessary change patterns for the ai of H , we chain binary counting gadgets of increasing size, beginning with H2 up to H , together, as shown in Fig. 6. The coarse idea is to ensure the behavior of all ak,i by having them mimic the central vertex vk−i of the correct smaller binary counting gadget. We use Lemma 3 to scale and shift the various counting gadgets as necessary. We note that ensuring that all requirements of the mimicking gadget (Lemma 1) and the counting gadget (Lemma 2) remain true in the whole  
   
  Dynamic Flows with Time-Dependent Capacities  
   
  153  
   
  Fig. 6. Construction linking binary counting gadgets to ensure chv = 2 partition changes at v in a minimum cut; purple edges represent mimicking gadgets, numbers are capacities. (Color figure online)  
   
  construction is rather technical but possible. The more interesting part of the proof is starting the construction, i.e., the base case of the induction. For the base case, we need to ensure that there is one vertex v0 that changes twice, ﬁrst from S to S¯ and later to S¯ to S, based on just one capacity change. We achieve this as illustrated in Fig. 7. The edge (v0 , t) changes capacity from 1 to 3 at time Θ = 2 and has transit time T − 3. Note that v0 starts in S as (s, v0 ) 2 → S¯ has capacity 2 and (v0 , t) starts with capacity 1. The partition change S − directly follows from the capacity change of (v0 , t) at time Θ = 2 increasing the 3 → S is a result potential contribution of v0 ∈ S(2). The other partition change S¯ − of the approaching time horizon T , which reduces the potential contribution of   v0 ∈ S(3) to zero.  
   
  Fig. 7. Construction of Hstart , providing the partition changes of v0 needed for G with one capacity change, numbers are capacities, τ(v0 ,t) = T − 3.  
   
  To be able to use the complexity of minimum cuts to show complexity of maximum ﬂows, we need the following lemma.  
   
  154  
   
  T. Bl¨ asius et al.  
   
  Lemma 5. Every edge contributing to the capacity of some minimum cut has to be saturated by every maximum flow during the time where it contributes to a ¯ cut. Moreover, every edge e = (v, w) with v ∈ S(Θ) and w ∈ S(Θ + τe ) for some minimum cut S may not route flow at time Θ for any maximum flow. To obtain the following theorem, it only remains to observe that the structure of the minimum cut in the construction of Lemma 4 also implies exponentially complex maximum ﬂows, using Lemma 5. Further note that discretization of time is possible. Theorem 4. There exist dynamic flow networks with only one capacity change where every minimum cut and maximum flow has exponential complexity. This even holds for acyclic networks and discrete time. Note that the construction from Lemma 4 requires a speciﬁc time horizon T . In the case of inﬁnite considered time, two capacity changes suﬃce to obtain the same result. Corollary 3. Theorem 4 also holds for infinite considered time with two capacity changes. Note that if Conjecture 1 holds, two capacity changes are necessary in this setting. As mentioned in the introduction, the above complexity results transfer to the setting where we have time-dependent transit times instead of time-dependent capacities. The result of Corollary 3 can even be strengthened to only require a single transit time change. Corollary 4. Theorem 4 also holds in the setting of static capacities and timedependent transit times with a single change, with finite time horizon and with infinite considered time. Note that the construction of Theorem 4 causes every minimum cut and every maximum ﬂow to have exponential complexity. In the following we show that exponentially many changes in cut or ﬂow can occur independently. Speciﬁcally, we provide constructions that require exponentially complex ﬂows but allow for cuts of low complexity and vice versa. 4.2  
   
  Complex Flows and Simple Cuts (and Vice Versa)  
   
  All above constructions require all minimum cuts and all maximum ﬂows to have exponential complexity. Here, we show that ﬂows and cuts can be independent in the sense that their required complexity can be exponentially far apart (in both directions). Theorem 5. There exist acyclic dynamic flow networks with only one capacity change where every maximum flow has exponential complexity, while there exists a minimum cut of constant complexity. The same is true for static capacities and time-dependent transit times.  
   
  Dynamic Flows with Time-Dependent Capacities  
   
  155  
   
  Proof. Figure 8 shows a graph with these properties. This is achieved by only allowing ﬂow to enter v0 during [0, 1], but it has to leave vk during [0, 2k ] due to the reduced capacity of (vk , t) for a time horizon T ≥ 2k . Apart from vk all vi are connected to the next vi+1 with a pair of edges, with transit times 2k−i−1 and zero, all these edges have capacity 1. So all 2k paths of diﬀerent transit time through the vi have to be used to route ﬂow for a maximum ﬂow. Every second of those paths has an even transit time, so ﬂow has to traverse the edge with transit time zero between vk−1 and vk every second integer time interval, which results in exponentially many changes in ﬂow over that edge. However assigning all vi to S¯ for all time is a minimum cut without partition changes. This generalizes to time-dependent transit times, as we can block the edge (s, v0 ) at time Θ = 1 by increasing its transit time to T at that time.    
   
  Fig. 8. Example of a graph where any maximum flow contains exponentially many changes, but there is a minimum cut with no changes, black numbers are transit times, blue numbers are capacities, unspecified capacities are 1. (Color figure online)  
   
  Theorem 6. There exist acyclic dynamic flow networks with only one capacity change where every minimum cut has exponential complexity, while there exists a maximum flow of linear complexity. The same is true for static capacities and time-dependent transit times.  
   
  References 1. Bl¨ asius, T., Feilhauer, A., Westenfelder, J.: Dynamic flows with time-dependent capacities (2023). https://doi.org/10.48550/ARXIV.2302.07657, https://arxiv. org/abs/2302.07657 2. Disser, Y., Skutella, M.: The simplex algorithm is NP-mighty. ACM Trans. Algorithms (TALG) 15(1), 1–19 (2018) 3. Ford Jr., L.R., Fulkerson, D.R.: Constructing maximal dynamic flows from static flows. Oper. Res. 6(3), 419–433 (1958) 4. Halpern, J.: A generalized dynamic flows problem. Networks 9(2), 133–167 (1979) 5. Koch, R., Nasrabadi, E., Skutella, M.: Continuous and discrete flows over time. Math. Methods Oper. Res. 73(3), 301 (2011) 6. K¨ ohler, E., Skutella, M.: Flows over time with load-dependent transit times. SIAM J. Optim. 15(4), 1185–1202 (2005) 7. Langkau, K.: Flows over time with flow-dependent transit times (2003) 8. Philpott, A.B.: Continuous-time flows in networks. Math. Oper. Res. 15(4), 640– 661 (1990)  
   
  156  
   
  T. Bl¨ asius et al.  
   
  9. Sha, D., Cai, X., Wong, C.: The maximum flow in a time-varying network. In: Nguyen, V.H., Strodiot, J.J., Tossings, P. (eds.) Optimization. Lecture Notes in Economics and Mathematical Systems, vol. 481, pp. 437–456. Springer, Heidelberg (2000). https://doi.org/10.1007/978-3-642-57014-8 29 10. Skutella, M.: An introduction to network flows over time. In: Cook, W., Lov´ asz, L., Vygen, J. (eds.) Research Trends in Combinatorial Optimization, pp. 451–482. Springer, Heidelberg (2009). https://doi.org/10.1007/978-3-540-76796-1 21 11. Tjandra, S.A.: Dynamic network optimization with application to the evacuation problem (2003)  
   
  On One-Sided Testing Aﬃne Subspaces Nader H. Bshouty(B) Department of Computer Science, Technion, Haifa, Israel [email protected]   
   
  Abstract. We study the query complexity of one-sided -testing the class of Boolean functions f : F n → {0, 1} that describe aﬃne subspaces and Boolean functions that describe axis-parallel aﬃne subspaces, where ˜ F is any ﬁnite ﬁeld. We give a polynomial-time -testers that ask O(1/) ˜ queries. This improves the query complexity O(|F|/) in [11]. We then show that any one-sided -tester with proximity parameter  < 1/|F|d for the class of Boolean functions that describe (n − d)dimensional aﬃne subspaces and Boolean functions that describe axisparallel (n − d)-dimensional aﬃne subspaces must make at least Ω(1/ + |F|d−1 log n) and Ω(1/ + |F|d−1 n) queries, respectively. This improves the lower bound Ω(log n/ log log n) that is proved in [11] for F = GF(2). We also give testers for those classes with query complexity that almost match the lower bounds. (See the deﬁnitions of the classes in the introduction and many other results in Figs. 1 and 2).  
   
  1  
   
  Introduction  
   
  Property testing of Boolean function was ﬁrst considered in the seminal works of Blum, Luby, and Rubinfeld [1] and Rubinfeld and Sudan [15] and has recently become a very active research area. See, for example, the works referenced in the surveys and books [8,10,13,14]. Let F be a ﬁnite ﬁeld. A Boolean function f : F n → {0, 1} describes a (n − d)-dimensional aﬃne subspace if f −1 (1) ⊆ F n is a (n − d)-dimensional aﬃne subspace. We denote the class of all such functions by d-AS. The class AS = ∪k k-AS and (≤ d)-AS = ∪k≤d k-AS. A Boolean function f : F n → {0, 1} describes an axis-parallel (n − d)-dimensional aﬃne subspace if f −1 (1) ⊆ F n is an axis parallel (n − d)-dimensional aﬃne subspace, i.e., there are d entries 1 ≤ i1 < i2 < · · · < id ≤ n and constants λi ∈ F, i ∈ [d], such that f −1 (1) = {a ∈ F n |ai1 = λ1 , . . . , aid = λd }. We denote the class of all such functions by d-APAS. In the same way, we deﬁne the class APAS and (≤ d)-APAS. If in the above deﬁnitions, instead of “aﬃne subspace” we have “linear subspace”, then we get the classes d-LS, LS, (≤ d)-LS, d-APLS, APLS and (≤ d)-APLS. Those classes are studied in [9,11,12]. A related classes of Boolean functions f : {0, 1}n → {0, 1} that are studied in the literature, [2,4–7,9,11,12], are d-Monomial (conjunction of d negated Center for Theoretical Sciences, Guangdong Technion, (GTIIT), China. c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  M. Mavronicolas (Ed.): CIAC 2023, LNCS 13898, pp. 157–171, 2023. https://doi.org/10.1007/978-3-031-30448-4_12  
   
  158  
   
  N. H. Bshouty  
   
  Boolean variables)1 , Monomial (conjunction of negated Boolean variables), (≤ d)-Monomial (conjunction of at most d negated Boolean variables), d-Term (conjunction of d literals2 ), Term (conjunction of literals), (≤ d)-Term (conjunction of at most d literals). Those are equivalent to the two family of classes APLS (for Monomial) and APAS (for Term) over the binary ﬁeld GF(2). In property testing a class C of Boolean functions, a tester for C is a randomized algorithm T that has access to a Boolean function f via a black-box oracle that returns f (x) when a point x is queried. Given a proximity parameter, , if f ∈ C, the tester T accepts with probability at least 2/3, and if f is -far from C (i.e., for every g ∈ C, Prx [f (x) = g(x)] > ) then it rejects with probability at least 2/3. We say that T is a one-sided tester if it always accepts when f ∈ C; otherwise, it is called a two-sided tester. Testing the classes d-AS, AS and (≤ d)-AS correspond to testing functions that describe (n − d )-dimensional aﬃne subspaces where, in the class d-AS, d is known (to the tester) and equal to d, in the class AS, d is unknown, and in the class (≤ d)-AS, d is an upper bound on d . The same applies to the other classes. Testers for the above classes were studied in [2,4,6,7,9,11,12]. In [12], Parnas et al. gave two-sided testers for the above classes that make O(1/) queries. See also [2,9]. The one-sided testers were studied by Goldreich and Ron in [11]. They gave a polynomial-time one-sided testers for the classes AS, APAS, LS, (≤ d)˜ LS, APLS and (≤ d)-APLS that make O(|F|/) queries3 . In this paper, we 4 ˜ queries. give a polynomial-time testers for these classes that make O(1/) For the classes d-AS and d-APAS, Goldreich and Ron gave the lower bound Ω(1/ + log n/ log log n) for the query complexity of any tester when F = GF(2) and  ≤ 2−d . In this paper, we give the lower bounds Ω(1/ + |F|d−1 n) and Ω(1/ + |F|d−1 log n), respectively, for the proximity parameter  < 1/|F|d . We also give testers for those classes with query complexity that almost match the lower bounds. See other results in Figs. 1 and 2.  
   
  2  
   
  Overview of the Testers and the Lower Bounds  
   
  2.1  
   
  The Algorithm for Functions that Describe Linear Subspace  
   
  In this section, we give the one-sided testers for LS and (≤ d)-LS. First, we brieﬂy outline the stages and then give more details. 1  
   
  2 3  
   
  4  
   
  In the literature, this class is deﬁned as conjunction of d (non-negated) variables. Testability of f for this class is equivalent to testability of f (x + 1n ) of d-Monomial as deﬁned in this paper. The same applies to the classes (≤ d)-Monomial and Monomial. A literal is a variable or its negation. They also gave a tester for (≤ d)-AS∪{z(x)} and (≤ d)-APAS∪{z(x)} with the same query complexity where z(x) is the zero function. Goldreich and Ron algorithm and our algorithm run in time linear in the number of queries.  
   
  On One-Sided Testing Aﬃne Subspaces Class  
   
  Upper Bound ˜ AS Ω(1/) O(1/) 0 0 d ˜ ˜ (≤ d)-AS Ω(1/ + |F|d−1 n) )n † O(1/) + O(|F| ˜ Ω(1/) O(1/) + O(1/( − 1/|F|d )) 0 0 d ˜ ˜ O(1/) + O(|F| d-AS Ω(1/ + |F|d−1 n) )n † d ˜ ˜ Ω(1/ + n) )n † O(1/) + O(|F| Ω(1) O(1/( − 1 + |F|−d )) 0 0 ˜ APAS Ω(1/) O(1/) 0 0 ˜ O(1/) + |F|d+o(d) log n (≤ d)-APAS Ω(1/ + |F|d−1 log n) ˜ O(1/) + O(1/( − 1/|F|d )) Ω(1/) 0 0 d-APAS Ω(1/ + |F|d−1 log n) O(1/) + |F|d+o(d) log n Ω (L)‡ O(1/) + |F|d+o(d) log n Ω(1) O(1/( − 1 + |F|−d )) 0 0 ˜ O(1/) LS Ω(1/) 0 0 ˜ (≤ d)-LS Ω(1/) O(1/) 0 0 ˜ O(1/) + O(|F|d n) d-LS Ω(1/ + n) Ω(1) O(1/( − 1 + |F|−d )) 0 0 ˜ O(1/) APLS Ω(1/) 0 0 ˜ O(1/) (≤ d)-APLS Ω(1/) 0 0 d-APLS Ω (L)‡ O (L)‡ Ω(1) O(1/( − |F|−1 + |F|−d ) + log n) Ω(1) O(1/( − 1 + |F|−d )) 0 0  
   
  159  
   
    
   
  Lower Bound  
   
  < 12 > 12 < |F1|d > |F1|d > 12 < |F1|d < 1 − |F1|d > 1 − |F1|d > 1 − |F1|d +† > 12 > 12 < |F1|d > |F1|d > 12 < |F1|d < 1 − |F1|d > 1 − |F1|d > 1 − |F1|d + < 12 > 12 < 12 > 12 < 1 − |F1|d > 1 − |F1|d > 1 − |F1|d +  
   
  > 12 > 12 > 12 > 12 1 < |F | − |F1|d > |F1 | − |F1|d > 1 − |F1|d > 1 − |F1|d +  
   
  Fig. 1. A table of the lower bounds and upper bounds achieved in this paper. Any upper bound (resp. lower bound) for the proximity parameter  is also an upper bound −d for  ≥  (resp.  ≤ ). † Those testers are exponentialtime testers.  |F| + means  
   
  |F|−d + o(|F|−d ). See the full paper.‡ Here L =  
   
  1   
   
  + min  
   
  log(1/) ,d log |F |  
   
  · log nd .  
   
  160  
   
  N. H. Bshouty Class  
   
  Lower Bound  
   
  Upper Bound ˜ Term Ω(1/) O(1/) 0 0 ˜ O(1/) + 2d+o(d) log n (≤ d)-Term Ω(1/ + 2d log n) ˜ Ω(1/) O(1/) + O(1/( − 1/2d )) 0 0 d-Term Ω(1/ + 2d log n) O(1/) + 2d+o(d) log n O(1/) + 2d+o(d) log n Ω(1) O(1/( − 1 + 2−d )) 0 0 ˜ O(1/) Monomial Ω(1/) 0 0 ˜ O(1/) (≤ d)-Monom. Ω(1/) ˜ 2d ) Ω(1/) O(1/) + O(2 0 0 d-Monomial Ω (L)† O (L) Ω(1) O(1/( − 1/2 + 2−d ) + log n) Ω(1) O(1/( − 1 + 2−d )) 0 0  
   
   < 12 > 12 < 21d > 21d > 12 < 21d < 1 − 21d > 1 − 21d > 1 − 21d +‡ < 12 > 12 < 12 < 12 > 12 < 12 − 21d > 12 − 21d > 1 − 21d > 1 − 21d +  
   
  Fig. 2. A table of the lower bounds and upper bounds achieved in this paper for Term and Monomial. † L = 1 + min (log(1/), d) · log nd . ‡ 2−d + means 2−d + o(2−d ).  
   
  High-Level Description of the Tester: We ﬁrst give a tester for the class d-WSLS5 (Well-Structured Linear Space6 ), a subclass of LS that contains functions f that satisfy f −1 (1) = {(a, b)|a ∈ F n−d , b = φ(a)} for some linear function φ : F n−d → F d . In other words, the class of functions f where the generator matrix7 of f −1 (1) is of rank n − d and has full rank in the ﬁrst n − d columns. The tester for d-WSLS is built of three sub-testers that test the following three properties P1 − P3 of f . – P1 (d): For every a ∈ F n−d , there is at most one b ∈ F d such that f (a, b) = 1. – P2 (d): For every a ∈ F n−d , there is at least one b ∈ F d such that f (a, b) = 1. – P3 (d): There is a linear function φ : F n−d → F d such that if f (a, b) = 1 then b = φ(a). Obviously, f ∈ d-WSLS if and only if it satisﬁes the above three properties. We also show that if a function f is -far from d-WSLS, then it is Ω()-far from one of the above three properties. In the second stage, we test LS. Note here that in the above tester, we assume that the tester knows d. Here, the tester does not know d, so it ﬁrst assumes that d = 0. This stage is an iterative one that is rooted in the observation that if 5 6 7  
   
  d is known to the tester. In coding theory for f ∈ d-WSLS, f −1 (1) is called systematic code. The generator matrix of a linear subspace L ⊆ F n , is a matrix with a minimum number of rows where the span of its rows is L.  
   
  On One-Sided Testing Aﬃne Subspaces  
   
  161  
   
  f ∈ d∗ -LS, then for every d ≤ d∗ , we can ﬁnd a non-singular matrix M such that if d < d∗ , then fd (x) = f (xM ) satisﬁes properties P1 (d) and P2 (d) but not P3 (d) and if d = d∗ then fd ∈ d-WSLS. The tester runs the tester of d-WSLS on fd . In this case, either fd satisﬁes P3 (d), in which case it is in d-WSLS, and then the tester accepts8 , or, it is far from property P3 (d), in which case the tester receives a ∈ F n−d such that no b ∈ F d satisﬁes f (a, b) = 1. Then we show how to use M and a to construct a matrix M  such that fd+1 = f (xM  ) satisﬁes properties P1 (d + 1) and P2 (d + 1) but not P3 (d + 1) if d + 1 < d∗ and fd+1 ∈ d∗ -WSLS if d + 1 = d∗ . The tester then moves to the next iteration. The tester accepts if the tester of d-WSLS accepts or d = D := (2 + log(1/)/ log |F|). In the latter case, fd (and therefore f ) is -close to the zero function9 , and therefore it is -close to LS. If f is -far from LS, then it is -far from every d-WSLS. So, with high probability, in one of the iterations, fd is either Ω()-far from10 P1 (d) or P3 (d) and the tester rejects. A Detailed Description of the Tester: We now give a detailed outline of the stages. For testing LS we have two main stages. The ﬁrst is composed of the following three substages that test whether the function describes a well-structured (n−d)dimensional subspace. A function describes a well-structured (n−d)-dimensional subspace if f −1 (1) = {(a, φ(a))|a ∈ F n−d }, where φ : F n−d → F d is a linear function. Then, in the second stage, we show how to test whether a function describes a linear subspace using the ﬁrst three substages. In the ﬁrst substage, we give a tester that tests whether f is a function that describes a well-structured (n − d)-dimensional injective relation (property P1 (d)). That is, it satisﬁes: For every a ∈ F n−d , there is at most one b ∈ F d such that f (a, b) = 1. The class of such functions is denoted by d-R. We show that if f is -far from d-R, then there are α, β < 1 such that αβ = O(/ log(1/)) and Pra∈F n−d [Prb∈F d [f (a, b) = 1] ≥ β] ≥ α. Then with a proper double search, the tester, with high probability, can ﬁnd a, b(1) = b(2) such that f (a, b(1) ) = f (a, b(2) ) and rejects. If f ∈ d-R, then no such a, b(1) = b(2) can be found. Therefore, this is a one-sided tester. The query complexity of this stage 2 ˜ ˜ (1/)/) = O(1/). is O(log In the second substage, we give a tester that tests whether f describes a well-structured (n − d)-dimensional bijection (properties P1 (d) and P2 (d)). That is: For every a ∈ F n−d , there is exactly one b ∈ F d such that f (a, b) = 1. The class of such functions is denoted by d-F. The tester for d-F ﬁrst runs the above tester for d-R with proximity parameter /2 and rejects if it rejects. So, we may assume that f is /2-close to d-R. Deﬁne the function Rf : F n−d → F d ∪ {⊥} 8  
   
  9 10  
   
  It is easy to show that if fd (x) = f (xM ) is -close to d∗ -LS if and only if f (x) is -close to d∗ -LS. If d = D, then by property P1 (d), it follows that f is -close to the zero function. If in every iteration fd is not -far from P1 (d) and P3 (d), then it gets to iteration D, and therefore f is -close to LS. A contradiction.  
   
  162  
   
  N. H. Bshouty  
   
  where Rf (a) is equal to the ﬁrst b ∈ F d (in some total order) that satisﬁes f (a, b) = 1 and ⊥ if no such b exists. We show that if f is /2-close to d-R and -far from d-F then11 Pr[Rf (a) =⊥] ≥ |F|d /2. See details in Sect. 3. Since computing Rf (a) takes |F|d queries, the query complexity of testing whether Pr[Rf (a) =⊥] ≥ |F|d /2 is O(1/). This is also a one-sided tester because when ˜ f ∈ d-F, Pr[Rf (a) =⊥] = 0. The query complexity of this stage is O(1/). In the third substage, we give a tester that tests whether a function f describes a well-structured (n−d)-dimensional linear subspace (properties P1 (d), P2 (d) and P3 (d)). The class of such functions is denoted by d-WSLS. First, the tester runs the tester for d-F with proximity parameter /2 and rejects if it rejects. Now deﬁne a function Ff : F n−d → F d where Ff (a) = Rf (a) if RF (a) =⊥ and f (a, b) = 0d otherwise. We show that if f is -far from d-WSLS and /2-close to d-F, then Ff is (|F|d /2)-far from linear functions. See details in Sect. 3. The tester then uses the testers in [1,15] to test if Ff is (|F|d /2)-far from linear functions. Since computing Ff (a) takes |F|d queries and the testers in [1,15] make O(2/(|F|d ) queries, the query complexity of this test is O(1/). Since the testers in [1,15] are one-sided, this tester is also one-sided. The query ˜ complexity of this tester is O(1/). Now, in the second stage, we give a tester that tests whether f describes a linear subspace. Recall that the class of such functions is denoted by LS. The tester at the (d + 1)-th iteration uses a non-singular n × n matrix M such that fd (x) := f (xM ) satisﬁes 1. If f is -far from LS then fd is -far from LS. 2. If f ∈ LS then fd ∈ LS. 3. If f ∈ LS then fd−1 (1) = {(a, φ(a))|a ∈ L} for some linear subspace L ⊆ F n−d and linear function φ : F n−d → F d (satisﬁes properties P1 (d) and P3 (d). It satisﬁes property P2 (d) if and only if L = F n−d ). Items 1 and 2 are true for any non-singular matrix M . At the (d+1)-th iteration, the tester runs the tester that tests whether fd ∈ d-WSLA with proximity parameter /2 and accepts if it accepts. We show that if fd ∈ LS and the tester rejects, then it is because some a ∈ F n−d has no b ∈ F d , such that fd (a , b) = 1 (property P2 (d) is not true - i.e., L = F n−d ). In that case, the tester does not reject and uses the point a ∈ F n−d and M to construct a new non-singular matrix M  such that fd+1 = f (xM  ) satisﬁes the above items 1–3. Items 1 and 2 hold for fd+1 because M  is non-singular. For item 3, we will have, if f ∈ LS, −1 (1) = {(a, φ (a))|a ∈ L } for some linear subspace L ⊆ F n−d−1 and a then fd+1 linear function φ : F n−d−1 → F d+1 . The tester then continues to the (d + 2)-th iteration if d < (2 + log(1/)/ log |F|); otherwise, it accepts. If f ∈ LS, then at each iteration, the tester either accepts or moves to the next iteration. Also, when d = (2 + log(1/)/ log |F|), the tester accepts. So, this tester is one-sided. 11  
   
  if |F|d  > 2, the tester accepts. This is because any function in d-R is |F|n−d /|F|n ≤ 1/|F|d ≤ /2 close to any function in d-F. Therefore, if f is /2-close to d-R, and |F|d  > 2 then it is -close to d-F.  
   
  On One-Sided Testing Aﬃne Subspaces  
   
  163  
   
  On the other hand, if f is -far from LS, then it is -far from the function h that satisﬁes h−1 (1) = {0n } (which is in LS). Therefore,12 , Pr[f = 0] ≥ /2. Now since for d = 2+log(1/)/ log |F|, every function g in d-R satisﬁes Pr[g(x) = 1] ≤ |F|−d ≤ /4, the tester of d-WSLA, with high probability, rejects when it calls the tester of d-R. ˜ Therefore, this tester is one-sided, and its query complexity is O(1/). This completes the description of the tester of the class LS. The above tester also works for testing the class (≤ k)-LS. The only change is that the tester rejects if d > k. 2.2  
   
  Comparison with Goldreich and Ron Algorithm  
   
  Our method and the method of Goldreich and Ron [11] are rooted in diﬀerent characterization of (n − d)-dimensional subspaces. Our method is based on the existence of a change of basis for the subspace f −1 (1) that makes it “wellstructured”, then moving from linear space of dimension n − i to dimension n − i − 1. In contrast, the method in [11] is based on the existence of a basis for the d-dimensional subspace orthogonal to f −1 (1) and moving from subspace of dimension i to dimension i+1. Both are iterative, but construct and test diﬀerent ˜ subspaces. Our approach improves the query complexity of testing from O(|F|/) ˜ (in [11]) to O(1/). The issue with [11] is that it is centered on the function gH,V , where H is the tested space and V is the basis of the linear subspace that complements H. The value of gH,V (x) identiﬁes the unique coset in which x resides and ⊥ otherwise. That is, gH,V (x) = u if x + uV ∈ H and ⊥ if such value does not exist or is not unique. In the ith iteration, evaluating gH,V requires |F|i queries where i = dim(V ). Also, for the test, their algorithm needs to reach iteration i such that |F|i ≥ 1/. Now, if  is slightly smaller than 1/|F|i , their algorithm enters iteration i + 1 and makes at least |F|/ queries. This is the source of the extra factor of |F| in the query complexity of [11], and it seems that the approach they use cannot get around it. 2.3  
   
  The Algorithm for Functions that Describe Aﬃne Subspace  
   
  Our tester that tests whether a function describes an aﬃne subspace, AS, is built on the reduction of Goldreich and Ron’s [11] that reduces one-sided testing AS to one-sided testing LS and then the above two main stages for testing LS. For completeness, we present Goldreich and Ron’s reduction. They show that testing whether a function f (x) describes an aﬃne subspace (resp. axis-parallel aﬃne subspace) can be randomly reduced to testing whether h(x) = f (x + a) describes a linear subspace (resp. axis-parallel linear subspace) where a ∈ f −1 (1). This follows from the fact that if f −1 (1) = u + L for some 12  
   
  This is true since Pr[f = 0] ≥ Pr[f = h] − Pr[h = 0] ≥  − 1/|F|n . Now we may assume that  ≥ 2/|F|n because, otherwise, we can query f in all the points using O(|F|n ) = O(1/) queries.  
   
  164  
   
  N. H. Bshouty  
   
  linear subspace L ⊆ F n , then for any a ∈ f −1 (1), f −1 (1) = a + L and, therefore, h−1 (1) = L. Thus, in the reduction, the tester accepts if f is evaluated to 0 on uniformly at random O(1/) points13 . Otherwise, let a be a point such that f (a) = 1. Then run the tester for functions that describe linear subspaces to test f (x + a). See more details in [11] Sect. 4. 2.4  
   
  The Algorithm for Functions that Describe Axis-Parallel Aﬃne Subspace  
   
  The class of functions that describe axis-parallel aﬃne subspace and the class of functions that describe axis-parallel linear subspace are denoted by APAS and APLS, respectively. Then d-APAS, d-APLS, (≤ d)-APAS, and (≤ d)APLS are deﬁned similarly to those in the previous subsection. When the ﬁeld is F = GF(2), those classes are equivalent to Term, Monomial, d-Term, dMonomial, (≤ d)-Term, and (≤ d)-Monomial, respectively. We ﬁrst give an overview of the testers for APAS and APLS. As in the previous section, the reduction of Goldreich and Ron reduces the problem of testing whether the function describes an axis-parallel aﬃne subspace (APAS) to testing whether the function describes an axis-parallel linear subspace (APLS). The tester for testing whether the function describes an axis-parallel linear subspace, ﬁrst runs the tester for LS with proximity parameter /100 and rejects if it rejects. Then it draws uniformly at random x, y, z ∈ f −1 (1) and tests if f (wx,y + z) = 1 where for every i ∈ [n], wix,y = 0 if xi = yi = 0 and wix,y ∈ {0, 1} drawn uniformly at random, otherwise. If f (wx,y +z) = 1, then the tester accepts; otherwise, it rejects. We show that if f ∈ APLS, then with probability 1, f (wx,y + z) = 1. This fact is obvious. We also show that if f is -far from APLS and /100-close to LS, then with constant probability f (wx,y + z) = 1. Obviously, this tester is ˜ one-sided and makes O(1/) queries. We provide some intuition for why this is true. Let f be -far from APLS and /100-close to LS. If f −1 (1) is very close to a linear subspace L, then, for a uniformly random x, y, z ∈ f −1 (1), with high probability, x, y, z are in L. Since f −1 (1) is -far from APLS, it follows that L is also Ω()-far from APLS. Assuming x, y ∈ L, with high probability, wx,y is not in L. This is due to the fact that, if L ∈ LS\APLS, then one of the entries in the points in L is a nonzero linear combination of the other entries; therefore this entry is uniformly at random in wx,y . So, whp, wx,y ∈ L, but not necessarily (whp) not in f −1 (1) because wx,y is not a uniformly random point. To add some randomness to wx,y , we add a random z to wx,y . Then, if x, y, z ∈ L, whp, wx,y + z is not L. Because z is almost random uniform in L and wx,y is not in L, whp, wx,y + z is an almost random uniform point in some coset outside L. Then again, since f −1 (1) 13  
   
  If f is -far from AS, then it is -far from the function h(x) that satisﬁes h−1 (1) = {0n }. Therefore, whp, some point a satisﬁes f (a) = 1. This is not true for (≤ d)-AS because h ∈ (≤ d)-AS.  
   
  On One-Sided Testing Aﬃne Subspaces  
   
  165  
   
  is very close to L, it follows that, whp, wx,y + z ∈ f −1 (1). This implies that, whp, f (wx,y + z) = 1. For more details, refer to the full paper. Now for testing the class (≤ d)-APLS, we prove that if f is (/100)-close to APLS and (/100)-close to (≤ d)-LS, then it is -close to (≤ d)-APLS. So we run the tester for APLS and (≤ d)-LS, with proximity parameter /100, and accept if both accept. 2.5  
   
  Lower Bound for Testing Classes with Fixed/Bounded Dimension  
   
  For the class of Boolean functions that describe (n − d)-dimensional aﬃne/linear subspaces (d-AS and d-LS) and Boolean functions that describe axis-parallel (n − d)-dimensional aﬃne/linear subspaces (d-APAS and d-APLS), we give lower bounds that depend on n, the number of variables. See Figs. 1 and 2 and the proofs in Sect. 6. Here we will give the technique used to prove the lower bound for the class d-APLS. For this class, we give the lower bound     log(1/) n 1 + min , d · log Ω  log |F| d for the query complexity. First, the lower bound Ω(1/) follows from [3]. Then any tester for the above classes can distinguish between functions in the class d-APLS and d -APLS for d = min(log(1/)/ log |F|, d) − 1. This is because the distance between any function in d -APLS and a function in d-APLS is at least . Since the tester is one-sided, using Yao’s principle, we show that there is a deterministic algorithm that can distinguish between all the functions in d-APLS and a subclass C ⊆ d APLS of size |C| ≥ (2/3)|d -APLS|. We then show that for any f ∈ C, this algorithm asks queries that eliminate all possible entries in the points of f −1 (1) that are not identically zero, except for at most d entries. Therefore, with d more queries, we get an exact learning algorithm for C. Thus, the number of queries of the tester must be at least the information-theoretic lower bound for learning C minus d, which is log |C| − d. This gives the lower bound.  
   
  3  
   
  Deﬁnitions and Preliminary Results  
   
  Let F be a ﬁnite ﬁeld of q = |F| elements, and B(F) be the set of all Boolean functions f : F n → {0, 1}. We say that f ∈ B(F) describes a well-structured (n − d)-dimensional injective relation if for every a ∈ F n−d , there is at most one element b ∈ F d such that14 f (a, b) = 1. The class of such functions is denoted by d-R. Here F 0 = {()}, so every Boolean function describes a well-structured n-dimensional injective relation. That is 0-R= B(F). 14  
   
  By f (a, b), we mean the following: If a = (a1 , . . . , an−d ) and b = (b1 , . . . , bd ), then f (a, b) = f (a1 , . . . , an−d , b1 , . . . , bd ).  
   
  166  
   
  N. H. Bshouty  
   
  For a class C ⊆ B(F) and functions f, g ∈ B(F) we deﬁne dist(f, g) = Pr[f (x) = g(x)] and dist(f, C) = minh∈C dist(f, h). For any f ∈ B(F) deﬁne the function Rf : F n−d → F d ∪ {⊥}, ⊥∈ F d , where Rf (a) is equal to the minimum b ∈ F d (in some total order over F d ) that satisﬁes f (a, b) = 1 and Rf (a) =⊥ if no such b exists. If d = 0, we have Rf : F n → {(), ⊥}, where Rf (a) = () if f (a) = 1 and Rf (a) =⊥ if f (a) = 0. For any f ∈ B(F) deﬁne fR ∈ B(F) as fR (a, b) = 1 if b = Rf (a) and fR (a, b) = 0 otherwise. In the full paper we show Lemma 1. Let q = |F| and r = max(0, d log q − log(2/)). If f is -far from d-R then there is 0 , r + 1 ≤ 0 ≤ d log q such that for α=  
   
  q d 20 −1 , β = 20 +1 min(d log q − 1, log(1/)) qd  
   
  we have Pra∈F n−d [Prb∈F d [f (a, b) = fR (a, b)] ≥ β] ≥ α. In particular, αβ ≥ /(4 log(1/)). We say that f ∈ B(F) describes a well-structured (n − d)-dimensional bijection, if for every a ∈ F n−d , there is exactly one b ∈ F d such that f (a, b) = 1. This class is denoted by d-F. In particular, f ∈ 0-F if it is the constant 1 function. We deﬁne Ff : F n−d → F d where Ff (a) = Rf (a) if Rf (a) =⊥ and Ff (a) = d 0 otherwise. Deﬁne fF ∈ B(F) as fF (a, b) = 1 if b = Ff (a) and fF (a, b) = 0 otherwise. In the full paper we prove Lemma 2. If f is /2-close to d-R and -far from d-F, then Pr[Rf (a) =⊥] ≥ q d /2. We say that L ⊆ F n is a well-structured (n − d)-dimensional linear subspace if there is a linear function φ : F n−d → F d such that L = {(a, φ(a)) | a ∈ F n−d }. We say that f ∈ B(F) describes a well-structured (n − d)-dimensional linear subspace if f −1 (1) is a well-structured (n − d)-dimensional linear subspace. We denote by d-WSLS the class of Boolean functions that describes a wellstructured (n − d)-dimensional linear subspace. Consider the class Linear of linear functions Λ : F n−d → F d . In the full paper, we prove Lemma 3. If f is -far from d-WSLS and /2-close to d-F, then Ff is (q d /2)far from Linear. In the full paper we prove. Lemma 4. For any function f ∈ B(F) and any nonsinglar n × n-matrix M we have 1. If f ∈ LS and h(x) = f (xM ), then h ∈ LS and dim(h−1 (1)) = dim(f −1 (1)) 2. dist(f (x), LS) = dist(f (xM ), LS) (Fig. 3).  
   
  On One-Sided Testing Aﬃne Subspaces  
   
  167  
   
  Test-d-R(f, ) Input: Oracle that accesses a Boolean function f : F n → {0, 1}. Output: Either “Accept” or “Reject” 1. 2. 3.  
   
  4.  
   
  For  = max(1, d log q − log(1/)) to d log q −1 q d Let α() = 2+1 min(d log , β() = 2 qd q−1,log(1/)) Draw uniformly at random r = 10/α() assignments a(1) , . . . , a(r) ∈ F n−d Draw uniformly at random s = 10/β() assignments b(1) , . . . , b(s) ∈ F d If there is a(i) and two b(j1 ) = b(j2 ) such that f (a(i) , b(j1 ) ) = f (a(i) , b(j2 ) ) = 1 then Reject Accept.  
   
  Fig. 3. A tester for d-R.  
   
  4  
   
  Three Testers  
   
  In this section, we give testers for d-R, d-F and d-WSLS. The proof of the following is in the full paper. Lemma 5. There is a polynomial-time one-sided tester for d-R that makes ˜ O(min(log(1/), d log q)2 /) = O(log2 (1/)/) = O(1/). queries.  
   
  Test-d-F(f, ) Input: Oracle that accesses a Boolean function f : F n → {0, 1}. Output: Either “Accept” or “Reject” with v =“empty” or v ∈ F n−d s.t. Rf (v) =⊥ 1. 2. 3. 4. 5.  
   
  If Test-d-R(f, /2) =Reject then Reject; Return v = “empty”. For i = 1 to 10/(q d ) Draw uniformly at random a ∈ F n−d If Rf (a) =⊥ then Reject: Return v = a Accept  
   
  Fig. 4. A Tester for d-F.  
   
  We now give a tester for d-F. See Fig. 4. Notice that when the tester rejects, it also returns v ∈ {“empty”} ∪ F d . We will use this in the next section. So, we can ignore that for this section. In the full paper we prove.  
   
  168  
   
  N. H. Bshouty  
   
  Lemma 6. There is a polynomial-time one-sided tester for d-F that makes ˜ O(1/) queries.  
   
  Test-d-WSLS(f, ) Input: Oracle that accesses a Boolean function f : F n → {0, 1}. Output: Either “Accept” or “Reject” with v =“empty” or v ∈ F n−d s.t. Rf (v) =⊥ Test-Linear(F, ) tests whether F : F n−d → F d is linear or -far from linear 1. 2.  
   
  3.  
   
  If Test-d-F(f, /2) =Reject then Reject; Return v (that Test-d-F returns). If Test-Linear(Ff , q d /2) =Reject then If for some query a that Test-Linear asks Rf (a) =⊥ then Reject; Return v = a Otherwise, Reject; Return v =“empty”. Accept  
   
  Fig. 5. A Tester for d-WSLS.  
   
  Lemma 7. There is a polynomial-time one-sided tester for d-WSLS that makes ˜ O(1/) queries.  
   
  5  
   
  A Tester for AS  
   
  Test-LS(f, ) Input: Oracle that accesses a Boolean function f : F n → {0, 1}. Output: Either “Accept” or “Reject”. 1. 2. 3. 4. 5. 6. 7.  
   
  8.  
   
  If f (0n ) = 0 then Reject. k ← 0; N = In ; While k ≤ m := log(1/)/ log(q) + 2 do v ← Test-k-WSLS(f (xN ), , δ = 1 − 1/(10m)); If Accept, then Accept. If Reject and v =“empty” then Reject. If Reject and v =“empty” (Rfk (v) =⊥) then Find a non-singular (n − k) × (n − k) matrix M s.t. v = en−k M N ← N · diag(M, Ik ). k ←k+1 Accept  
   
  Fig. 6. A Tester for LS.  
   
  Consider the tester in Fig. 6. In the full paper, we prove. Theorem 1. There are polynomial-time one-sided testers for AS and LS that ˜ make O(1/) queries. Theorem 2. There is a polynomial-time one-sided tester for (≤ d)-LS that ˜ makes O(1/) queries.  
   
  On One-Sided Testing Aﬃne Subspaces  
   
  6  
   
  169  
   
  Lower Bounds  
   
  In this section, we give the lower bound for d-APLS. The other lower bounds are in the full paper. Theorem 3. Any one-sided tester for d-APLS and d-APAS with proximity parameter  ≤ q −1 − q −d must make at least     log(1/) 1 n + min , d · log Ω  log |F| d queries. In particular, Corollary 1. Any one-sided tester for d-Monomial and d-Term with proximity parameter  ≤ 1/2 − 2−d must make at least   1 n Ω + min (log(1/), d) · log  d queries. The following is an information-theoretic lower bound. Lemma 8. Any deterministic algorithm that exactly learns15 a class C of Boolean functions f : F n → {0, 1} must ask at least log |C| black-box queries. The following lemma is proved in the full paper. Lemma 9. Let d < d. Then dist(d-AS, d -AS) = dist(d-APLS, d -APLS) =  q −d − q −d . We are now ready to prove Theorem 3. Proof. The lower bound Ω(1/) follows from [3]. Let T be a tester for d-APLS (resp. d-APAS) with proximity parameter  ≤ 1 − q −d , which makes Q queries. Consider the class d -APLS where d = min( log(1/( + q −d ))/ log q) , d − 1). Then, by Lemma 9, dist(d-APLS, d  APLS) = q −d − q −d ≥  (resp. dist(d-APAS, d -APLS) ≥ ). Therefore 1. If f ∈ d-APLS then T (f ) =Accept. 2. If f ∈ d -APLS then with probability at least 2/3, T (f ) = Reject. Using Yao’s principle16 , there is a deterministic algorithm A that has query complexity Q (as T ) and a class C ⊆ d -APLS such that |C| ≥ (2/3)|d -APLS| and 15  
   
  16  
   
  For f ∈ C and access to a black-box to f , the algorithm returns a function equivalent to f . For a random uniform g ∈ d -APLS, we have Es [Eg [T (g)]] = Eg [Es [T (g)]] ≥ 2/3 where s is the random seed of T . Then there is s0 such that Eg [T (g)] ≥ 2/3.  
   
  170  
   
  N. H. Bshouty  
   
  1. If f ∈ d-APLS then A(f ) = Accept. 2. If f ∈ C then A(f ) = Reject. We will show in the following how to change A to an exact learning algorithm for C that makes Q + d queries, and then, by Lemma 8, the query complexity of T is at least17      2  2 n |d -APLS| − d = log log |C| − d ≥ log −d 3 3 d     log(1/) n , d · log = Ω min . log |F| d It remains to show how to change A to an exact learning algorithm for C that makes Q + d queries. To this end, consider the following algorithm (ei is the point that contains 1 in the i-th coordinate and zero elsewhere) 1. Given access to a black-box for f ∈ C. 2. Let X = [n]. 3. Run A and for every query b that A asks such that f (b) = 1, deﬁne X ← X\{i|bi = 1}. 4. For every i ∈ X if f (ei ) = 1 then remove i from X. 5. Return the function h that satisﬁes h−1 (1) = {a ∈ F n |(∀i ∈ X)ai = 0}. Now, suppose f −1 (1) = {a ∈ F n |ai1 = · · · = aid = 0}. We now show Claim. After step 3, we have |X| ≤ d and {i1 , . . . , id } ⊆ X. Proof. If, on the contrary, some j ∈ [d ], ij ∈ X, there is b such that bij = 1 and f (b) = 1. Then b ∈ f −1 (1) and therefore bij = 0. A contradiction. Suppose, on the contrary, X contains more than d elements. Let id +1 , . . . , id ∈ X be distinct and distinct from i1 , . . . , id . Consider the function g such that g −1 (1) = {a ∈ F b |ai1 = · · · = aid = 0}. Since A accepts g ∈ d-APLS and rejects f ∈ C, there must be a query b that A makes such that g(b) = f (b). Since g −1 (1) ⊂ f −1 (1), we have b ∈ f −1 (1)\h−1 (1), and then for some j > d , we have bij = 1 and f (b) = 1. Therefore, ij ∈ X after step 3. A contradiction. This ﬁnishes the proof of the claim.   By the above claim, step 5 makes at most d queries; therefore, the query complexity of the learning algorithm is Q + d. If, after step 3, i ∈ {i1 , . . . , id }, then f (ei ) = 0, and then i is not removed from X after step 4. If after step 3, i ∈ {i1 , . . . , id } and i ∈ X, then the query ei satisﬁes f (ei ) = 1, and then i is removed from X after step 4. So, after step 4, we have X = {i1 , . . . , id } and hence h = f .   17  
   
  Here, we assume that d n. For large d, we can replace step 4 in the learning algorithm that makes at most d queries with the algorithm in [16] that makes d log(d/d ) − O(d ) queries. This changes log |C| − d to log |C| − d log(d/d ) − O(d ), and we get the lower bound for any d.  
   
  On One-Sided Testing Aﬃne Subspaces  
   
  171  
   
  References 1. Blum, M., Luby, M., Rubinfeld, R.: Self-testing/correcting with applications to numerical problems. J. Comput. Syst. Sci. 47(3), 549–595 (1993) 2. Bshouty, N.H.: Almost optimal testers for concise representations. In: Approximation, Randomization, and Combinatorial Optimization. Algorithms and Techniques, APPROX/RANDOM 2020, 17–19 August 2020, Virtual Conference, pp. 5:1–5:20 (2020) 3. Bshouty, N.H., Goldreich, O.: On properties that are non-trivial to test. In: Electronic Colloquium on Computational Complexity (ECCC), vol. 13 (2022) 4. Chakraborty, S., Garc´ıa-Soriano, D., Matsliah, A.: Eﬃcient sample extractors for juntas with applications. In: Aceto, L., Henzinger, M., Sgall, J. (eds.) ICALP 2011. LNCS, vol. 6755, pp. 545–556. Springer, Heidelberg (2011). https://doi.org/10. 1007/978-3-642-22006-7 46 5. Chen, X., Xie, J.: Tight bounds for the distribution-free testing of monotone conjunctions. In: Proceedings of the Twenty-Seventh Annual ACM-SIAM Symposium on Discrete Algorithms, SODA 2016, Arlington, VA, USA, 10–12 January 2016, pp. 54–71 (2016) 6. Dolev, E., Ron, D.: Distribution-free testing for monomials with a sublinear number of queries. Theory Comput. 7(1), 155–176 (2011) 7. Glasner, D., Servedio, R.A.: Distribution-free testing lower bound for basic Boolean functions. Theory of Comput. 5(1), 191–216 (2009) 8. Goldreich, O. (ed.): Property Testing - Current Research and Surveys. Lecture Notes in Computer Science, vol. 6390. Springer, Heidelberg (2010). https://doi. org/10.1007/978-3-642-16367-8 9. Goldreich, O.: Reducing testing aﬃne spaces to testing linearity. Electron. Colloquium Comput. Complex 80 (2016) 10. Goldreich, O.: Introduction to Property Testing. Cambridge University Press, Cambridge (2017) 11. Goldreich, O., Ron, D.: One-sided error testing of monomials and aﬃne subspaces. Electron. Colloquium Comput. Complex 68 (2020) 12. Parnas, M., Ron, D., Samorodnitsky, A.: Testing basic Boolean formulae. SIAM J. Discrete Math. 16(1), 20–46 (2002) 13. Ron, D.: Property testing: a learning theory perspective. Found. Trends Mach. Learn. 1(3), 307–402 (2008) 14. Ron, D.: Algorithmic and analysis techniques in property testing. Found. Trends Theor. Comput. Sci. 5(2), 73–205 (2009) 15. Rubinfeld, R., Sudan, M.: Robust characterizations of polynomials with applications to program testing. SIAM J. Comput. 25(2), 252–271 (1996) 16. Jun, W., Cheng, Y., Ding-Zhu, D.: An improved zig zag approach for competitive group testing. Discret. Optim. 43, 100687 (2022)  
   
  Stable Scheduling in Transactional Memory Costas Busch1 , Bogdan S. Chlebus1(B) , Dariusz R. Kowalski1 , and Pavan Poudel2 1  
   
  Augusta University, Augusta, GA, USA {kbusch,bchlebus,dkowalski}@augusta.edu 2 ATGWORK, Norcross, GA, USA  
   
  Abstract. We study computer systems with transactions executed on a set of shared objects. Transactions arrive continually subjects to constrains that are framed as an adversarial model and impose limits on the average rate of transaction generation and the number of objects that transactions use. We show that no deterministic distributed scheduler in the queue-free model of transaction autonomy can provide stability for any positive rate of transaction generation. Let a system consist of m shared objects and an adversary be constrained such that each transaction may access at most k shared objects. We prove that no scheduler  2 2 . We , √2m can be stable if a generation rate is greater than max k+1 develop a centralizedscheduler  that is stable if a transaction generation 1 , 4√1m . We design a distributed scheduler in rate is at most max 4k the queue-based model of transaction autonomy, in which a transaction is assigned to an individual processor, that guarantees stability if the  1 , 6√1m . For each rate of transaction generation is less than max 6k of the schedulers we give upper bounds on the queue size and transaction latency in the range of rates of transaction generation for which the scheduler is stable. Keywords: Transactional memory · shared object · dynamic transaction generation · adversarial model · stability · latency  
   
  1  
   
  Introduction  
   
  Threads that execute concurrently need to synchronize access to shared objects to avoid conﬂicts. Traditional low-level thread synchronization mechanisms such as locks and barriers are prone to deadlock and priority inversion, among multiple vulnerabilities. The concept of transactional memory has emerged as a high-level abstraction of the functionality of multiprocessor systems, see Herlihy and Moss [17] and Shavit and Touitou [21]. The idea is to designate blocks of program code as ‘transactions’ to be executed atomically. Transactions are executed speculatively, in the sense that if a transaction aborts due to synchronization conﬂicts or failures, then the transaction’s execution is rolled back to be c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  M. Mavronicolas (Ed.): CIAC 2023, LNCS 13898, pp. 172–186, 2023. https://doi.org/10.1007/978-3-031-30448-4_13  
   
  Stable Scheduling in Transactional Memory  
   
  173  
   
  restarted later. A transaction commits if there are no conﬂicts or failures, and its eﬀects become visible to all processes. If multiple transactions concurrently attempt to access the same object, then this creates a conﬂict for access and could trigger aborting some of the involved transactions. The synchronization conﬂict between the transactions is handled by contention managers, also known as schedulers, see Hendler and Suissa-Peleg [16] and Spear et al. [22]. Schedulers determine an execution schedule for transactions striving to avoid conﬂicts for access to shared objects. The adversarial models of generating transactions that we use are inspired by the adversarial queueing theory, which has been applied to study stability of routing algorithms with packets injected continually. Routing of packets in communication networks is constrained by properties of networks, like their topology and capacities of links or channels. In the case of transactional memory, executing multiple transactions concurrently is constrained by the requirement that a transaction needs to have an exclusive access to each object it wants to interact with in order to be executed succesfully. A computer system includes a ﬁxed set of shared objects. Transactions are spawned continually. The system is synchronous in that an execution of an algorithm scheduling transactions is structured into rounds. It takes one round to execute a transaction successfully. Multiple transactions can be invoked concurrently, but a transaction requires exclusive access to each object that it needs to interact with in order to be executed successfully. If multiple transactions accessing the same object are invoked at a round then all of them are aborted. The arrival of threads with transactions is governed by an adversarial model with parameters bounding the average generation rate and the number of transactions that can be generated at one round. Processed transactions may be additionally constrained by imposing an upper bound on the number of objects a transaction needs to access. The task for such a computer system is to eventually execute each generated transaction, while striving to minimize the number of pending transactions at any round and the time a pending transaction spends waiting for execution. Once a transaction is generated, it may need to wait to be invoked. It is a scheduling algorithm that manages the timings of invocations of pending transactions. We consider both centralized and distributed schedulers. There are two models of generating transactions which specify the autonomy of individual transactions. In the queue-free case, for each transaction there is a corresponding autonomous processor responsible for its execution. A distributed scheduler in the queue-free model is executed by the processors that attempt to invoke transactions on shared objects. In the queue-based model, there is a ﬁxed set of processors, and each thread with a transaction is assigned to a processor. A distributed scheduler in the queue-based model is executed by the processors that communicate through the shared objects by performing transactions on them. A centralized scheduler is not aﬀected by constraints on autonomy of each transaction, since all pending transactions are managed en masse. The schedulers we consider are deterministic, in that they do not resort to randomization.  
   
  174  
   
  C. Busch et al.  
   
  Table 1. A summary of the ranges of rates of transaction generation for which deterministic schedulers are stable. The used notations are as follows: m is the number of shared objects, k is the maximum number of shared objects accessed by a transaction, and ρ is the rate of transaction generation. Upper bounds limit transaction generation rates for which stability is achievable. Lower bounds limit transaction generation rates for which stability is not possible. A lower bound for centralized schedulers holds a priori for distributed queue-based schedulers. Scheduler distributed queue-free  
   
  Lower bound  
   
  Upper bound  
   
  stability impossible   2 1 2 centralized ρ > max k+1 , √2m ρ ≤ max 4k , 1 distributed queue-based ρ < max 6k ,  
   
    
   
  1 √ 4 m  1 √ 6 m  
   
  The Contributions. We show ﬁrst that no deterministic distributed scheduler in the queue-free model of transaction autonomy can provide stability for any positive rate of transaction generation. Let a computer system consist of m shared objects and the adversary be constrained such that each transaction needs to access at most k of the shared objects. We show that no  scheduler can 2 2 . We develop a , √2m be stable if a generation rate is greater than max k+1 centralized scheduler that is stable if the transaction generate rate is at most 1  max 4k , 4√1m . We design a distributed scheduler, in the queue-based model of transaction autonomy in which a transaction is assigned to an individual processor,that guarantees stability if the rate of transaction generation is less  1 , 6√1m . For each of the two schedulers we develop, we give upper than max 6k bounds on the queue size and transaction latency in the range of rates of transaction generation for which the scheduler is stable. Table 1 gives a summary of the ranges of rates of transaction generation for which deterministic schedulers are stable. Related Work. Scheduling transactions has been studied for both shared memory multi-core and distributed systems. Most of the previous work on scheduling transactions considered an oﬄine case where all transactions are known at the outset. Some previous work considered online scheduling where a batch of transactions arrives one by one and the performance of an online scheduler is compared to a scheduler processing the batch oﬄine. No previous work known to the authors of this paper addressed dynamic transaction arrivals with potentially inﬁnitely many transactions to be scheduled in a never-ending execution. Attiya et al. [4] and Sharma and Busch [19,20] considered transaction scheduling in distributed systems with provable performance bounds on communication cost. Transaction scheduling in a distributed system with the goal of minimizing execution time was ﬁrst considered by Zhang et al. [25]. Busch et al. [8] considered minimizing both the execution time and communication cost simultaneously. They showed that it is impossible to simultaneously minimize execution time and communication cost for all the scheduling problem  
   
  Stable Scheduling in Transactional Memory  
   
  175  
   
  instances in arbitrary graphs even in the oﬄine setting. Speciﬁcally, Busch et al. [8] demonstrated a tradeoﬀ between minimizing execution time and communication cost and provided oﬄine algorithms that separately optimizw execution time and communication cost. Busch et al. [9] considered transaction scheduling tailored to speciﬁc popular topologies and provided oﬄine algorithms that minimize simultaneously execution time and communication cost. Distributed directory protocols have been designed by Herlihy and Sun [18], Sharma and Busch [19], and Zhang et al. [25], with the goal to optimize communication cost in scheduling transactions. Zhang and Ravindran [23] provided a distributed dependency-aware model for scheduling transactions in a distributed system that manages dependencies between conﬂicting and uncommitted transactions such that they can commit safely. This model has the inherent tradeoﬀ between concurrency and communication cost. Zhang and Ravindran [24] provided cachecoherence protocols for distributed transactional memory based on a distributed queuing protocol. Attiya et al. [3] and Attiya and Milani [5] studied competitive performance of schedulers compared to the clairvoyant one. Busch et al. [10] studied online algorithms to schedule transactions for distributed transactional memory systems where transactions residing at nodes of a communication graph operate on shared, mobile objects. Adversarial queuing is a methodology to capture stability of processing incoming tasks without any statistical assumptions about task generation. It provides a framework to develop worst-case bounds on performance of deterministic distributed algorithms in a dynamic setting. This approach to study routing algorithms in store-and-forward networks was proposed by Borodin et al. [7], and continued by Andrews et al. [2]. Adversarial queuing has been applied to other dynamic tasks in communication networks. Bender et al. [6] considered broadcasting in multiple-access channels with queue-free stations in the framework of adversarial queuing. Chlebus et al. [13] proposed to investigate deterministic distributed broadcast in multiple access channels performed by stations with queues in the adversarial setting. This direction was continued by Chlebus et al. [12] who studied the maximum throughput in such a setting. Anantharamu et al. [1] considered packet latency of deterministic broadcast algorithms with injection rates less than 1. Chlebus et al. [11] studied adversarial routing in multipleaccess channels subject to energy constraints. Garncarek et al. [14] investigated adversarial stability of memoryless packet scheduling policies in multiple access channels. Garncarek et al. [15] studied adversarial communication through channels with collisions between communicating agents represented as graphs.  
   
  2  
   
  Technical Preliminaries  
   
  A distributed system consists of processors and a ﬁxed set of m shared objects. The system executes an algorithm. An execution of the algorithm is synchronous in that it is partitioned into time steps, which we call rounds. Intuitively, the executed algorithm spawns threads and each thread generates and executes transactions. To simplify the model of transaction generation and scheduling, we assign transactions directly to processors and disregard threads entirely.  
   
  176  
   
  C. Busch et al.  
   
  We consider two frameworks of generating transactions. In the queue-based model, we assume a ﬁxed number of processors in the system, each with a unique name. Each new transaction is generated at a speciﬁc round and assigned to one such a processor. All the transactions at a processor pending at a round make its queue at the round. In a queue-free model of transaction autonomy, each new transaction generated at a round is associated with an anonymous virtual processor that exists only for the purpose to execute this transaction and disappears after the transaction’s successful execution. The type of a transaction is the set of objects it may need to access during execution. To determine the type of a transaction, it suﬃces to read it to list all the mentioned objects. The number of objects in a transaction’s type is the weight of this transaction and also of the type. If the types of two transactions share an object, then we say that this creates a conﬂict for access to this object, and that the transactions involved in a conﬂict for access to an object collide at this object. A set of transactions with the property that no two diﬀerent transactions in the set collide at some shared object is called conﬂict free. Scheduling Transactions. Transactions are managed by a scheduler. This is an algorithm that determines for each round which pending transactions are invoked at this round. A transaction invoked at a round that gets executed successfully is no longer pending, while an aborted transaction stays pending at the next round. Scheduling transactions is constrained by whether this is a queue-free or queue-based model. In the queue-free model, transactions are managed en-masse and only conﬂicts for access to objects determine feasibility of concurrently performing a set of transactions. This means that if a pending transaction invoked at a round is not involved in conﬂict with any object it needs to access, for any of the transactions invoked at this round concurrently, then this transaction is executed successfully. In particular, if a set of transactions is conﬂict-free then all the transactions in this set can be executed together at one round. We assume conservatively that if a pending transaction invoked at a round is involved in conﬂict with some other transaction invoked concurrently, for an object they need to access, then all such transactions get aborted at this round and stay pending at the next round. The queue-based model is more restricted, in that the queue-free model’s constraints on concurrent execution of transactions do apply, but additionally, for each processor, at most one transaction in this processor’s queue can be performed at a round. A centralized scheduler is an sequential algorithm that knows all the transactions pending at a round and receives instantaneous feedback from each object about committing to an invoked transaction or aborting it. Such a scheduler can invoke concurrently any set of pending transactions at a round in the queue-free model, but at most one transaction in the queue of a processor in the queue-based model. A distributed scheduler is a distributed algorithm executed by all the involved processors. The processors communicate among themselves through shared objects. These are the processors that determine the distributed system in the queue-based case, and anonymous processors in queue-free case, one dedicated  
   
  Stable Scheduling in Transactional Memory  
   
  177  
   
  processor per each transaction. If a processor invokes a transaction at a round, it receives an instantaneous feedback from each object of the type of the transaction about committing to an invoked transaction or aborting it. Adversaries Generate Transactions. We consider a setting in which new transactions arrive continually to the system. The process of generating transactions is represented quantitatively by adversarial models. We study two types of adversaries corresponding to the queue-free and queue-based models. In the queue-free model, a transaction generated at a round contributes a unit to the congestion at the round at each object the transaction includes in its type. This is the queuefree adversary. In the queue-based model, a transaction generated at a round at a processor contributes a unit to the congestion at the round at each object the transaction includes in its type and also to the processor the transaction is generated at. This is the queue-based adversary. Quantitative restrictions imposed on adversaries are expressed in terms of bounds on congestion. A queue-free adversary generates transactions with generation rate ρ and burstiness component b if, in each contiguous time interval τ of length t and for each shared object, the amount of congestion created for the object at all the rounds in τ together is at most ρt + b. A queue-based adversary generates transactions with generation rate ρ and burstiness component b if, in each contiguous time interval τ of length t and for each shared object and for each processor, the amount of congestion created for the object at all the rounds in τ together is at most ρt + b and the amount of congestion created for the processor at all the rounds in τ together is at most ρt + b. For these adversarial models, we assume that ρ > 0 is a real number and b > 0 is an integer. Given the parameters ρ and b, such an adversary is said to be of type (ρ, b). The burstiness of an adversary is the maximum number of transactions the adversary can generate in one round. Performance of Scheduling. A scheduler is stable, against a given type of adversary, if the number of pending transactions stays bounded in the course of any execution in which transactions are generated by the adversary of this type. For an object and a round number r, at most r transactions that contributed to congestion at this object can get executed in the ﬁrst r rounds. It follows that no scheduler can be stable if its injection rate is greater than 1. In view of this, we consider only adversaries of types (ρ, b) in which 0 < ρ ≤ 1. A transaction’s delay is the number of rounds between its generation and successful execution. The latency of a scheduler in an execution is the maximum delay of a transaction generated in the execution. Proposition 1. No deterministic distributed scheduler for a system with one shared object can be stable against a queue-free adversary of type (ρ, 2), for any constant ρ > 0. In view of Proposition 1, we will consider a centralized deterministic scheduler for the queue-free model.  
   
  178  
   
  3  
   
  C. Busch et al.  
   
  A Lower Bound  
   
  We show that no scheduler can handle dynamic transactions if a generation rate is suﬃciently high with respect to the number of shared objects m and an upper bound k on the weight of a transaction. If a and b are integers where a ≤ b then let [a, b] denote the set of integers {a, a + 1, . . . , b}. Lemma 1. For an integer n > 0, there is a family of sets A1 , A2 , . . . , An+1 , each a subset of [1, n(n+1) ], such that every set Ai has n elements, any two sets 2 Ai and Aj , for i = j, share an element, and each element of [1, n(n+1) ] belongs 2 to exactly two sets Ai and Aj , for i = j. We give a lower bound on generation rate to keep scheduling stable. Theorem 1. A queue-free adversary of type (ρ, b) generating transactions for a system of m objects such that each transaction is of weight at most k can makea 2 2 . , √2m scheduling algorithm unstable if injection rate ρ satisﬁes ρ > max k+1 Proof. Let the m objects be denoted as o1 , o2 , . . . , om . Suppose ﬁrst that k(k+1) 2 ≤ m. The transactions to be generated will use only the objects o1 , o2 , . . . , os , . Let us take the family of sets A1 , A2 , . . . , Ak+1 as in Lemma 1, where s = k(k+1) 2 in which n is set to k. We will use a ﬁxed set of transactions T1 , T2 , . . . , Tk+1 deﬁned such that transaction Ti uses object oj if and only if j ∈ Ai . In particular, each transaction uses k objects. The adversary generates these transactions listed in order L0 , L1 , L2 , . . ., where Li−1 is the ith transaction generated and Li is a transaction identical to T1+i mod (k+1) . Consider a round r + 1. Let i be the highest index of a transaction Li generated by round r. Then in round r + 1 the adversary generates transactions that make a maximal preﬁx of the sequence Li+1 , Li+2 , . . . such that the total number of transactions generated by round r + 1 satisﬁes the constraints on objects’ congestion of type (ρ, b). The adversary may generate no transaction at a round and it may generate multiple transaction at a round. For example, the adversary generates exactly the transactions L0 , . . . , Lb−1 simultaneously in the ﬁrst round. By Lemma 1, at most one transaction can be executed at a round. The k + 1 transactions T1 , T2 , . . . , Tk+1 require k + 1 rounds to have each one executed, one transaction per round. Discounting for the burstiness of generation, which is possible due to the burstiness component b in the type (ρ, b), these transactions can be generated with a frequency of at most one new transaction generated per round if the execution is to stay stable. The group of transactions T1 , . . . , Tk+1 together contribute 2 to the congestion of each used object, by Lemma 1. If an execution is stable then the inequality 2 on the generation rate of an ρ(k + 1) ≤ 2 holds. This gives a bound ρ ≤ k+1 2 adversary if the execution is stable. In case ρ > k+1 , the adversary can generate at least one transaction at every round, and for each round r it can generate two transactions at some round after r. Such an execution is unstable, because at most one transaction among T1 , . . . , Tk+1 can be executed in one round.  
   
  Stable Scheduling in Transactional Memory  
   
  179  
   
  Next, consider the case k(k+1) > m. Let n be the greatest positive integer 2 n(n+1) such that 2 ≤ m. We use a similar reasoning as in the case k(k+1) ≤ m, with 2 the family of sets A1 , A2 , . . . , An+1 as in Lemma 1. In particular, we use a set of transactions T1 , T2 , . . . , Tn+1 deﬁned such that transaction Ti uses an object oj if and only if j ∈ Ai . The rules of generating new transactions by the adversary are 2 similar. We obtain the inequality ρ ≤ n+1 by the same argument. The inequality √ n(n+1) 1 ≤ m implies n+1 =  2 (1+ 1 + 8m), by algebra. We have the estimates 2 2 2 2 2 √2 = ≤ √2m . If ρ > √2m then also ρ > n+1 . It follows that n+1  1 (1+ 1+8m) 2  
   
  2 , then this adversary if the adversary is of a type (ρ, b) such that ρ > √2m generating transactions at full power can generate at least one transaction at every round, and for each round r it can generate two transactions at some round after r. This makes the queue of transactions grow unbounded.  
   
  4  
   
  A Centralized Scheduler  
   
  We present a scheduling algorithm that processes all transactions pending at a round. The algorithm is centralized in that it is aware of all the pending transactions while selecting the ones to be executed at a round. Throughout this Section we assume the queue-free model of autonomy of individual transactions, and the corresponding queue-free adversarial model of transaction generation. The centralized scheduler identiﬁes a conﬂict-free set of transactions pending execution that is maximal with respect to inclusion among all pending transactions. This is accomplished by ﬁrst ordering all pending transaction on the time of generation and then processing them greedily one by one in this order. The word ‘greedily’ in this context means passing over a transaction only when its type includes an object that belongs to the type of a transaction already selected for execution at the current round. The algorithm is called Centralized-Scheduler, its pseudocode is given in Fig. 1. The variable Pending denotes a list of all pending transactions. At the beginning of a round, all newly generated transactions are appended to the tail of this list. The list is processed in the order from head to tail, which prioritizes transactions on their arrival time, such that those generated earlier get processed before these generated later. The transactions already selected for execution are stored in the set Execute. If a transaction in Pending is processed, it is checked for conﬂicts with transactions already placed in the set Execute. If a processed transaction does not collide with any transaction already in Execute then it is removed from Pending and added to Execute, and otherwise it is passed over. After the whole list Pending have been scanned, all the transactions in Execute get executed concurrently. No invoked transaction is aborted in the resulting execution, because conﬂicts of transactions are avoided by the process to add transactions to the set Execute. To assess the eﬃciency of executing transactions, let us partition an execution of the algorithm Centralized-Scheduler into contiguous milestone intervals of rounds, denoted I1 , I2 , I3 , . . . , such that the length of each interval equals √ 4b · min{k,  m } rounds.  
   
  180  
   
  C. Busch et al.  
   
  Algorithm Centralized-Scheduler initialize Pending ← an empty list for each round do append all transactions generated in the previous round at the tail of list Pending initialize Execute ← an empty set if Pending is nonempty then repeat (a) entry ← first unprocessed list item on Pending, starting from head towards tail (b) if entry is conflict-free with all the transactions in Execute then remove entry from Pending and add it to set Execute until entry points at the tail of list Pending execute all the transactions in Execute  
   
  Fig. 1. A pseudocode of the algorithm scheduling all pending transactions en masse. Transactions pending execution are stored in a list Pending in the order of generation, with the oldest at the head. The set Execute includes transactions to execute at a round. It is selected in a greedy manner, prioritizing older transactions over newer and avoiding conﬂicts for access to shared objects.  
   
  The following invariant holds for all milestone intervals of an execution.  1 , 4√1m , then there are Lemma 2. If a generation rate satisﬁes ρ ≤ max 4k at most 2bm pending transactions at the ﬁrst round of a milestone interval, and all these transactions get executed by the end of the interval. Algorithm Centralized-Scheduler is stable and has bounded transaction latency for suitably low transaction generation rates. Theorem 2. If algorithm Centralized-Scheduler is executed against an adversary of type (ρ, b), such that each generated transaction accesses at most k objects out of  m shared objects available and transaction-generation rate ρ sat 1 , 4√1m , then the number of pending transactions at a round isﬁes ρ ≤ max 4k √ is at most 4bm and transaction latency is at most 8b · min{k,  m }. Proof. To estimate the number of transactions pending at a round, let this round belong to a milestone interval Ik . The number of old transactions at any round of milestone interval Ik is at most 2mb, by the centralized milestone invariant formulated as Lemma 2. During the interval Ik , at most 2mb new transactions can be generated. So 2mb + 2mb = 4mb is an upper bound on the number of pending transactions at the round. To estimate transaction latency, we use the property that a transaction generated in a milestone interval gets executed by the end of the next interval, again by the centralized milestone invariant formulated as Lemma 2. This means that transaction latency the length of a milestone interval, which is √ is at most twice √ 2 · 4b · min{k,  m } = 8b · min{k,  m }.  
   
  Stable Scheduling in Transactional Memory  
   
  5  
   
  181  
   
  A Distributed Scheduler  
   
  We now consider distributed scheduling. Let a distributed system consist of n processors. The processors communicate among themselves through some m shared objects by invoking transactions and receiving instantaneous feedback from each involved object. Every transaction type includes at most k objects. Each generated transaction is assigned to a speciﬁc processor and resides in its local queue while pending execution. This means we consider the queue-based model of autonomy of individual transactions, and the corresponding queuebased adversarial model of transaction generation. We employ a speciﬁc communication mechanism between a pair of processors. One of the processors, say s, is a sender and the other processor, say r, is a receiver. The two processors s and r communicate through a designated object o. Communication occurs at a given round. All the processors are aware that this particular round is a round of communication from s to r. Each of the participants s and r may invoke a transaction involving object o at the round, while at the same time all the remaining processors pause and do not invoke any transactions at this round. Assume ﬁrst that both s and r have pending transactions that access object o. At a round of communication, the recipient processor r invokes a transaction tr that uses object o. If the sender processor s wants to convey bit 1 then s also invokes a transaction ts that uses object o. In this case, both transactions tr and ts get aborted, so that the processor r receives the respective feedback from the system and interprets it as receiving 1. If the sender processor s wants to convey bit 0 then s does not invoke any transactions using object o at this round. In this case, transaction tr gets executed successfully, so that r receives the respective feedback from the system and interprets it as receiving 0. This is how one bit can be transmitted successfully from a sender s to a recipient r. That was an example of a perfect cooperation between a sender and receiver, but alternative scenarios are possible as well. Suppose that the sender s has a pending transaction using object o and wants to communicate with r but the recipient r either does not want to communicate or does not have a pending transaction using object o. What occurs is that s invokes a suitable transaction ts which gets executed but r does not receive any information. Alternatively, suppose that the receiver r has a pending transaction using object o and wants to communicate while the sender s either does not want to communicate or does not have a pending transaction using object o. What occurs is that the receiver r invokes a suitable transaction tr which gets executed, which the receiver r interprets as receiving the bit 0. That communication mechanism can be extended to transmit the whole type of any transaction in the following way. The type identiﬁes a subset of all m objects. Having a ﬁxed ordering of the objects, the type can be represented as a sequence of m bits, in which 1 at position i represents that the ith object belongs to the type, and 0 represents that the ith object does not belong. A processor s can transmit a transaction type to recipient r by transmitting m bits representing the type in m successive rounds while using some designated object o. We say  
   
  182  
   
  C. Busch et al.  
   
  that by this operation processor s sends the transaction type to processor r via object o. This operation works as desired assuming each of the processors has at least m transactions involving object o. If at least one of these processors either does not have m transactions involving object o or does not want to participate, then either no bits are transmitted, or the receiver r possibly receives a sequence of 0s only, which it interprets as no type of transaction successfully transmitted. Pending transactions at a processor are grouped by their types. All pending transactions of the same type at a processor make a block of transactions of this type. The weight of a block is deﬁned to be the weight of its type. If there are suﬃciently many transactions in a block then the block and the type are said to be large. A boundary number deﬁning sizes to be large is denoted by L and equals L = (n − 1)2 n2 m2 . If the number of transactions of some type in a queue at a processor is at least kL but less than (k + 1)L, for a positive integer k, then we treat these transactions as contributing k large blocks. An execution of the scheduling algorithm is partitioned into epochs, and each consecutive epoch consists of three phases, labeled Phase 1, Phase 2, and Phase 3. Each phase is executed the same number of L = (n − 1)2 n2 m2 rounds. The algorithm is called Distributed-Scheduler and its pseudocode is given in Fig. 2. In the beginning of Phase 1, each processor v that has a large block of transactions of some type, selects one such a block, and this type then is active at the processor in the epoch. A processor that starts Phase 1 with an active type is called active in this phase. Processors store large blocks in the order of generation of their last-added transaction. Each processor chooses as active a large block that comes ﬁrst in this order. The purpose of Phase 1 is to spread the information of active types of all the active processors as widely as possible. Each active processor uses transactions of its active type for communication. Such communication involves executing transactions, so a block of transactions of a given type may gradually get smaller. Once a type of a large block becomes active in the beginning of Phase 1, it stays considered as active for the durations of an epoch, even if the number of transactions in the block becomes less than L. Phase 1 assigns segments of (n − 1)n2 m2 rounds for each pair of processors s and r and each object o to spend with s acting as sender to r acting as receiver with communication performed via object o. Phase 2 is spent on executing transactions in some active blocks selected such that they do not create conﬂicts for access to shared objects. In the beginning of Phase 2, each processor computes a selection of active large blocks of transactions to execute in Phase 2 among those learned in Phase 1. This common selection is computed greedily as follows. The active types learned in Phase 1 are ordered by the owners’ names. There is a working set of active types selected for execution, which is initialized empty. The active types are considered one by one. If a processed active type can be added to the working set without creating a conﬂict for access to an object, then the type is added to the set, and otherwise it is passed over. This computation is performed locally by each active processor at the beginning of the ﬁrst round of Phase 2 and each active processor obtains the  
   
  Stable Scheduling in Transactional Memory  
   
  183  
   
  Algorithm Distributed-Scheduler Phase 1 : sharing information about large active blocks during L rounds repeat n − 1 times for each sender processor s and recipient processor r and object o do in a segment of rounds assigned for this selection of s, r, and o: if v is active and this is a round when s = v then act as sender to transmit all relevant information to r via object o elseif v is active and this is a round when r = v then act as recipient to receive information from s via object o Phase 2 : executing large blocks of transactions during L rounds if v is active then select active blocks for execution among those learned in Phase 1 if v is active and its active block got selected then for each among L consecutive rounds do if there is a transaction of the active type in the queue then invoke such a transaction Phase 3 : executing remaining transactions by solo processors in L rounds for L consecutive rounds if this is a round among L/n ones assigned to v then if the queue is nonempty then invoke a transaction  
   
  Fig. 2. A pseudocode of an epoch for a processor v. Pending transactions are dispersed among the processors. Number L = (n − 1)2 n2 m2 is the duration of each phase. In Phase 1, processors s and r use transactions from their active large blocks to implement communication. A sender processor s transmits the active type for each processor it knows about. In Phase 2, large active blocks are selected for execution in a greedy manner, with blocks ordered by the processors’ names. In Phase 3, each processor gets assigned a unique exclusive contiguous segment of L/n rounds, in which to execute up to L/n transactions from its queue in a ﬁrst-in ﬁrst-out manner.  
   
  same output. The rounds of Phase 2 are spent on executing the transactions of the active blocks selected for execution. An active processor whose active large block has been selected executes pending transactions in its selected active block as long as some transactions from the block are still available in the queue or Phase 2 is over, whichever happens earlier. Phase 3 is spent by each processor executing solo its pending transactions, those that have never been included in large blocks. Each processor is assigned a unique exclusive contiguous segment of L/n = (n − 1)2 nm2 rounds to execute such transactions. Transactions are performed in the order of their adding to the queue, with those longest executed before those generated later.   k waiting Let P = i=1 mi be the number of possible diﬀerent transaction types in a system of m shared objects such that a type includes at most k objects. k We will use the estimate P ≤ 2H( m ) m , for k ≤ m 2 , where H(x) is the binary entropy function H(x) = x lg x + (1 − x) lg(1 − x) for 0 < x < 1. An execution of algorithm Distributed-Scheduler is partitioned into contiguous milestone intervals denoted I1 , I2 , . . .. Each milestone interval consists  
   
  184  
   
  C. Busch et al.  
   
  √ of 2bnP · min{k,√ m } epochs. Alternatively, a milestone interval consists of 6bnLP ·min{k,  m } rounds, after translating the lengths of epochs into rounds. The following Lemma 3 gives and invariant that holds for all milestone intervals of an execution of algorithm Distributed-Scheduler.  1 , 6√1m , and assuming the bulk Lemma 3. For a generation rate ρ < max 6k of the system is suﬃciently large with respect to ρ, there are at most bn5 m3 P pending transactions at a ﬁrst round of every milestone interval, and all these transactions get executed by the end of the interval. Algorithm Distributed-Scheduler is stable and has bounded transaction latency for suitably low transaction generation rates. Theorem 3. If algorithm Distributed-Scheduler is executed against an adversary of type (ρ, b), such that each generated transaction accesses at most objects available, and the generation rate ρ satk≤ m 2 objects out of m shared  1 , 6√1m , and the bulk of the system is suﬃciently large with isﬁes ρ < max 6k respect to ρ, then the number of pending transactions at a round √ is at most k k 2bn5 m3 2H( m )m and latency is at most 12bn5 m2 2H( m )m min{k,  m }. Proof. To estimate the number of transactions pending at a round, let this round belong to a milestone interval Ik . The number of old transactions at any round of the interval Ik is at most bn5 m3 P , by the distributed milestone invariant formulated as Lemma 3. During the interval Ik , at most bn5 m3 P new transactions can be generated, again by Lemma 3, because they will become old when the k upper bound on the next interval begins. So 2bn5 m3 P ≤ 2bn5 m3 2H( m )m is an  k k number of pending transactions at any round, since P = i=1 mi ≤ 2H( m )m , for k ≤ m 2. To estimate the transaction latency, we use the property that a transaction generated in an interval gets executed by the end of the next interval, again by the distributed milestone invariant formulated as Lemma 3. This means that transaction latency is at most twice the length of an interval, which is √ 2 · 6bnLP min{k,  m }, where L = (n − 1)2 n2 m2 . We obtain that the latency √ k is at most 12bn5 m2 2H( m )m min{k,  m }.  
   
  6  
   
  Conclusion  
   
  We propose to study transactional memory systems with continual generation of transactions. The critical measure of quality of such systems is stability understood as having the number of pending transactions bounded from above at all times, for a given generation rate. Transactions are modeled as sets of accesses to shared objects, and it is assumed that conﬂicting transactions cannot be executed concurrently. We identify a lower bound on generation rate that makes stability impossible and also develop centralized and distributed optimal scheduling algorithms that handle generation rates asymptotically equal to the lower bound.  
   
  Stable Scheduling in Transactional Memory  
   
  185  
   
  The quality of schedulers, on a range of generation rates that guarantee stability, is further assessed by the queue size and latency. The centralized scheduler has these bounds polynomial in the parameters of the system and the adversary’s type, but the distributed scheduler has the bounds exponential. It is an open question if it is possible to develop distributed scheduling with polynomial queues and latency for the region of generation rates for which stability is feasible. Acknowledgements. This work was partly supported by the National Science Foundation grant No. 2131538.  
   
  References 1. Anantharamu, L., Chlebus, B.S., Kowalski, D.R., Rokicki, M.A.: Packet latency of deterministic broadcasting in adversarial multiple access channels. J. Comput. Syst. Sci. 99, 27–52 (2019) 2. Andrews, M., Awerbuch, B., Fern´ andez, A., Leighton, F.T., Liu, Z., Kleinberg, J.M.: Universal-stability results and performance bounds for greedy contentionresolution protocols. J. ACM 48(1), 39–69 (2001) 3. Attiya, H., Epstein, L., Shachnai, H., Tamir, T.: Transactional contention management as a non-clairvoyant scheduling problem. Algorithmica 57(1), 44–61 (2010) 4. Attiya, H., Gramoli, V., Milani, A.: Directory protocols for distributed transactional memory. In: Guerraoui, R., Romano, P. (eds.) Transactional Memory. Foundations, Algorithms, Tools, and Applications. LNCS, vol. 8913, pp. 367–391. Springer, Cham (2015). https://doi.org/10.1007/978-3-319-14720-8 17 5. Attiya, H., Milani, A.: Transactional scheduling for read-dominated workloads. J. Parallel Distrib. Comput. 72(10), 1386–1396 (2012) 6. Bender, M.A., Farach-Colton, M., He, S., Kuszmaul, B.C., Leiserson, C.E.: Adversarial contention resolution for simple channels. In: Proceedings of the 17th ACM Symposium on Parallel Algorithms and Architectures (SPAA), pp. 325–332 (2005) 7. Borodin, A., Kleinberg, J.M., Raghavan, P., Sudan, M., Williamson, D.P.: Adversarial queuing theory. J. ACM 48(1), 13–38 (2001) 8. Busch, C., Herlihy, M., Popovic, M., Sharma, G.: Time-communication impossibility results for distributed transactional memory. Distrib. Comput. 31(6), 471–487 (2018) 9. Busch, C., Herlihy, M., Popovic, M., Sharma, G.: Fast scheduling in distributed transactional memory. Theory Comput. Syst. 65(2), 296–322 (2021) 10. Busch, C., Herlihy, M., Popovic, M., Sharma, G.: Dynamic scheduling in distributed transactional memory. Distrib. Comput. 35(1), 19–36 (2022) 11. Chlebus, B.S., Hradovich, E., Jurdzi´ nski, T., Klonowski, M., Kowalski, D.R.: Energy eﬃcient adversarial routing in shared channels. In: Proceedings of the 31st ACM Symposium on Parallelism in Algorithms and Architectures (SPAA), pp. 191–200. ACM (2019) 12. Chlebus, B.S., Kowalski, D.R., Rokicki, M.A.: Maximum throughput of multiple access channels in adversarial environments. Distrib. Comput. 22(2), 93–116 (2009) 13. Chlebus, B.S., Kowalski, D.R., Rokicki, M.A.: Adversarial queuing on the multiple access channel. ACM Trans. Algorithms 8(1), 5:1–5:31 (2012) 14. Garncarek, P., Jurdzinski, T., Kowalski, D.R.: Stable memoryless queuing under contention. In: Proceedings of the 33rd International Symposium on Distributed Computing (DISC). LIPIcs, vol. 146, pp. 17:1–17:16. Schloss Dagstuhl - LeibnizZentrum f¨ ur Informatik (2019)  
   
  186  
   
  C. Busch et al.  
   
  15. Garncarek, P., Jurdzinski, T., Kowalski, D.R.: Eﬃcient local medium access. In: Proceedings of the 32nd ACM Symposium on Parallelism in Algorithms and Architectures (SPAA), pp. 247–257. ACM (2020) 16. Hendler, D., Suissa-Peleg, A.: Scheduling-based contention management techniques for transactional memory. In: Guerraoui, R., Romano, P. (eds.) Transactional Memory. Foundations, Algorithms, Tools, and Applications. LNCS, vol. 8913, pp. 213– 227. Springer, Cham (2015). https://doi.org/10.1007/978-3-319-14720-8 10 17. Herlihy, M., Moss, J.E.B.: Transactional memory: architectural support for lockfree data structures. In: Proceedings of the 20th Annual International Symposium on Computer Architecture, pp. 289–300. ACM (1993) 18. Herlihy, M., Sun, Y.: Distributed transactional memory for metric-space networks. Distrib. Comput. 20(3), 195–208 (2007) 19. Sharma, G., Busch, C.: Distributed transactional memory for general networks. Distrib. Comput. 27(5), 329–362 (2014). https://doi.org/10.1007/s00446-0140214-7 20. Sharma, G., Busch, C.: A load balanced directory for distributed shared memory objects. J. Parallel Distrib. Comput. 78, 6–24 (2015) 21. Shavit, N., Touitou, D.: Software transactional memory. Distrib. Comput. 10(2), 99–116 (1997) 22. Spear, M.F., Dalessandro, L., Marathe, V.J., Scott, M.L.: A comprehensive strategy for contention management in software transactional memory. In: Proceedings of the 14th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming (PPOPP), pp. 141–150. ACM (2009) 23. Zhang, B., Ravindran, B.: Brief announcement: On enhancing concurrency in distributed transactional memory. In: Proceedings of the 29th Annual ACM Symposium on Principles of Distributed Computing (PODC), pp. 73–74. ACM (2010) 24. Zhang, B., Ravindran, B.: Brief announcement: queuing or priority queuing? On the design of cache-coherence protocols for distributed transactional memory. In: Proceedings of the 29th Annual ACM Symposium on Principles of Distributed Computing (PODC), pp. 75–76. ACM (2010) 25. Zhang, B., Ravindran, B., Palmieri, R.: Distributed transactional contention management as the traveling salesman problem. In: Halld´ orsson, M.M. (ed.) SIROCCO 2014. LNCS, vol. 8576, pp. 54–67. Springer, Cham (2014). https://doi.org/10.1007/ 978-3-319-09620-9 6  
   
  Parameterizing Path Partitions Henning Fernau1(B) , Florent Foucaud2 , Kevin Mann1 , Utkarsh Padariya3 , and K. N. Rajath Rao3 1  
   
  3  
   
  Universit¨ at Trier, Fachbereich IV, Informatikwissenschaften, Trier, Germany {fernau,mann}@uni-trier.de 2 ´ Universit´e Clermont-Auvergne, CNRS, Mines de Saint-Etienne, Clermont-Auvergne-INP, LIMOS, 63000 Clermont-Ferrand, France [email protected]  International Institute of Information Technology Bangalore, Bengaluru, India {utkarsh.prafulchandra,rajath.rao}@iiitb.ac.in  
   
  Abstract. We study the algorithmic complexity of partitioning the vertex set of a given (di)graph into a small number of paths. The Path Partition problem (PP) has been studied extensively, as it includes Hamiltonian Path as a special case. The natural variants where the paths are required to be either induced (Induced Path Partition, IPP) or shortest (Shortest Path Partition, SPP), have received much less attention. Both problems are known to be NP-complete on undirected graphs; we strengthen this by showing that they remain so even on planar bipartite directed acyclic graphs (DAGs), and that SPP remains NP-hard on undirected bipartite graphs. When parameterized by the natural parameter “number of paths”, both problems are shown to be W[1]-hard on DAGs. We also show that SPP is in XP both for DAGs and undirected graphs for the same parameter (IPP is known to be NP-hard on undirected graphs, even for two paths). On the positive side, we show that for undirected graphs, both problems are in FPT, parameterized by neighborhood diversity. When considering the dual parameterization (graph order minus number of paths), all three variants, IPP, SPP and PP, are shown to be in FPT for undirected graphs. Keywords: Path Partitions · NP-hardness · Parameterized Complexity · Neighborhood Diversity · Vertex Cover Parameterization  
   
  1  
   
  Introduction  
   
  Graph partitioning and graph covering problems are among the most studied problems in graph theory and algorithms. There are several types of graph partitioning and covering problems including covering the vertex set by stars (Dominating Set), covering the vertex set by cliques (Clique Covering), F. Foucaud—Research ﬁnanced by the French government IDEX-ISITE initiative 16IDEX-0001 (CAP 20-25) and by the ANR project GRALMECO (ANR-21-CE48-0004). K. N. R. Rao—Research funded by a DAAD-WISE Scholarship 2022. c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  M. Mavronicolas (Ed.): CIAC 2023, LNCS 13898, pp. 187–201, 2023. https://doi.org/10.1007/978-3-031-30448-4_14  
   
  188  
   
  H. Fernau et al.  
   
  partitioning the vertex set by independent sets (Coloring), and covering the vertex set by paths or cycles [22]. In recent years, partitioning and covering problems by paths have received considerable attention in the literature because of their connections with well-known graph-theoretic theorems and conjectures like the Gallai-Milgram theorem and Berge’s path partition conjecture. Also, these studies are motivated by applications in diverse areas such as code optimization [1], machine learning/AI [32], transportation networks [33], parallel computing [26], and program testing [25]. There are several types of paths that can be considered: unrestricted paths, induced paths, shortest paths, or directed paths (in a directed graph). A path P is an induced path in G if the subgraph induced by the vertices of P is a path. An induced path is also called a chordless path; isometric path and geodesic are other names for shortest path. Various questions related to the complexity of these path problems, even in standard graph classes, remained open for a long time (even though they have uses in various ﬁelds), a good motivation for this project. In this paper, we mainly study the problem of partitioning the vertex set of a graph (undirected or directed) into the minimum number of disjoint paths, focussing on three problems, Path Partition (PP), Induced Path Partition (IPP) and Shortest Path Partition (SPP)—formal deﬁnitions are given in Sect. 2. A path partition (pp) of a graph G is a partitioning of the vertex set into unrestricted paths. The path partition number of G is the smallest size of a pp of G. Similar deﬁnitions apply to ipp and spp. PP is studied extensively under the names of Path Cover and also Hamiltonian Completion on many graph classes [4,6,16]. We give a wide range of results in this paper including complexity (NP- or W[1]-hardness) and algorithms (polynomial time or FPT); see Table 1. The types of graphs we consider are general directed, directed acyclic (DAG), general undirected and bipartite undirected graphs. We also consider some structural parameters like neighborhood diversity and vertex cover number. The three problems considered are all NP-hard. PP can be seen as an extension of Hamiltonian Path and is thus NP-hard, even for one path. IPP is NP-hard, even for two paths [20]. Recently, SPP was proved to be NP-hard [23]. On trees, the three problems are equivalent, and are solvable in polynomial time. For a detailed survey on these types of problems (both partitioning and covering versions), see [22]. The covering version of SPP (where the paths need not necessarily be disjoint) was recently studied, see [8] for an XP algorithm, [2] for NP-hardness on chordal graphs and approximation algorithms for chordal graphs and other classes, and [32] for a log n-factor approximation algorithm. The versions of these problems where covering is not required (and the endpoints of the solution paths are prescribed in the input) are studied as Disjoint Paths (DP) [27], Disjoint Induced Paths (DIP) and Disjoint Shortest Paths (DSP) [21]. DP in particular has been extensively studied, due to its connections to the Graph Minor theorem [27]. Robertson and Seymour showed that DP is in FPT, parameterized by the number of paths [27], contrasting (D)PP. Recently, DSP was shown to have an XP algorithm and to be W[1]-hard when parameterized by the number of paths [21], solving a 40-year-old open problem.  
   
  Parameterizing Path Partitions  
   
  189  
   
  Table 1. Summary of known results concerning path partitioning problems. The abbreviations c. and h. refer to completeness and hardness, respectively. In parentheses, we put further input speciﬁcations, with UG referring to undirected graphs. Our results are highlighted in bold face. parameter  
   
  PP  
   
  SPP  
   
  IPP  
   
  none (UG)  
   
  NP-c. [15]  
   
  NP-c. [23] NP-c. [20]  
   
  none (bipartite UG)  
   
  NP-c. [18, 20]  
   
  NP-c.  
   
  open  
   
  solution size k (UG)  
   
  paraNP-h. [15]  
   
  in XP  
   
  paraNP-h. [20]  
   
  solution size k (DAG)  
   
  polynomial NP-c. [3, Problem 26-2] W[1]-h. in XP  
   
  NP-c. W[1]-h.  
   
  neighborhood diversity (UG) FPT [14]  
   
  FPT  
   
  FPT  
   
  dual n − k (UG)  
   
  FPT  
   
  FPT  
   
  FPT  
   
  Our Contribution. Table 1 summarizes known results about the three problems, with our results are highlighted in bold. We ﬁll in most of the hiterto open questions concerning variations of PP, SPP and IPP, e.g., we show that SPP has a poly-time algorithm for a ﬁxed number of paths (in undirected, DAGs, and planar-directed graphs). This is surprising as both PP and IPP are NP-hard for k = 1 and for k = 2, respectively, see [20]. Many of our results concern our problems restricted to DAGs. Notice that PP has a polynomial time algorithm when restricted to DAGs (using Maximum Matching), but the complexity for IPP and SPP was open for such inputs. We show that IPP and SPP are NPhard even when restricted to planar DAGs whose underlying graph is bipartite. We strengthen this result using a similar construction as in the classic proof of DP being W[1]-hard on DAGs by Slivkins [29], to show that IPP and SPP are W[1]-hard on DAGs. The complexity of these problems has not been studied when parameterized by structural parameters. We show that IPP and SPP both belong to FPT when parameterized by standard structural parameters like vertex cover and neighborhood diversity using ILP-techniques. Moreover, when considering the dual parameterization (graph order minus number of paths), all three variants, IPP, SPP and PP, are shown to be in FPT for undirected graphs. It is interesting to note the diﬀerences in the complexities of the three problems on diﬀerent input classes. For example, SPP can be solved in XP-time on undirected graphs, while this is not possible for the other two problems. For DAGs, PP is polynomial-time solvable, but the other two problems are NP-hard. In a way, IPP can be seen as an intermediate problem between PP and SPP. Thus it is not too surprising that, when the complexity of the three problems diﬀers, IPP sometimes behaves like PP, and sometimes, like SPP. The following combinatorial properties are helpful to connect the problems: (1) Every shortest path is also an induced path. (2) Every induced path of length at most two is also a shortest path. (3) In bipartite graphs, an induced path of length three is a shortest path. (4) If G = (V, E) is a subgraph of H and p is a shortest path in H with only vertices of V , then p is also a shortest path in G. Proofs of statements marked with (∗) are omitted due to space constraints; [10].  
   
  190  
   
  2  
   
  H. Fernau et al.  
   
  Definitions  
   
  We are using standard terminology concerning graphs, classical and parameterized complexity and we will not iterate this standard terminology here. In particular, a path P can be described by a sequence of non-repeated vertices such that there is an edge between vertices that are neighbors in this sequence. Sometimes, it is convenient to consider P as a set of vertices. We are next deﬁning the problems considered in this paper. All problems can be considered on undirected or directed graphs, or also on directed acyclic graphs (DAG). We will specify this by preﬁxing U, D, or DAG to our problem name abbreviations. Disjoint Paths (DP for short) Input: A graph G, pairs of terminal vertices {(s1 , t1 ), . . . , (sk , tk )} Problem: Are there pairwise vertex-disjoint paths P1 , . . . , Pk such that, for 1 ≤ i ≤ k, the end-points of Pi are si and ti ? A path P is an induced path in G if the induced graph G[P ] is a path; here, P is considered as a vertex set. Analogously to DP, we can deﬁne the problem Disjoint Induced Paths or DIP for short. A shortest path is a path with endpoints u, v that is shortest among all paths from u to v. The greatest length of any shortest path in a graph G is also known as its diameter, written as diam(G). Hence, we can deﬁne the problem Disjoint Shortest Paths or DSP for short. Remark 2.1 (∗). The problems DIP and DP are equivalent when the inputs are undirected graphs or DAGs, but not for general directed graphs. Next, we deﬁne the corresponding partition problems. The induced and noninduced versions do no longer coincide as seen above for the set of DP problems. We say that a sub-graph G of G = (V, E) spans G if its vertex set is V . Path Partition (PP for short) Input: A graph G, a non-negative integer k Problem: Are there pairwise vertex-disjoint paths P1 , . . . , Pk , with k  ≤ k, such that, together, these paths span G ? Asking for shortest or induced paths in the partition similarly gives the problems Shortest Path Partition, or SPP, and Induced Path Partition, or IPP, respectively. Contrasting Remark 2.1, the complexities of DAGPP and DAGIPP diﬀer drastically, see Table 1. As also sketched in [12], these problems are tightly linked to Hamiltonian Completion, asking to add at most k (directed) edges to a (di)graph to guarantee the existence of a Hamiltonian path. Omitting the vertex-disjointness condition, we arrive at covers instead: Path Cover (PC for short) Input: A graph G, a non-negative integer k Problem: Are there paths P1 , . . . , Pk , with k  ≤ k, such that, together, these paths span G ?  
   
  Parameterizing Path Partitions  
   
  191  
   
  Similarly, we can deﬁne the problems Shortest Path Cover (SPC) and Induced Path Cover (IPC). The neighborhood diversity [19] of a graph G (or just nd(G)) is the number of equivalency classes of the following equivalence: two vertices u, v ∈ V are equivalent (we also say that they have the same type) if they have the same neighborhoods except for possibly themselves, i.e., if N (v) \ {u} = N (u) \ {v}. The equivalence classes are all cliques, possibly of size one, but one class that collects all isolated vertices.  
   
  3  
   
  NP-Hardness Results  
   
  A well-known result related to PC in DAGs is Dilworth’s theorem: the minimal size of PC equals the maximal cardinality of an anti-chain [7]. Fulkerson [13] gave a constructive proof of this theorem. Hence, the PC problem in DAGs can be reduced to a maximum matching problem in a bipartite graph. Even PP can be solved in polynomial time by reducing it to a matching problem in a bipartite graph [3, Problem 26-2]. We show that DAGSPP, DAGSPC, DAGIPP and DAGIPC are NP-hard even when restricted to planar bipartite DAGs. Theorem 3.1. DAGSPP is NP-hard even when the inputs are restricted to planar bipartite DAGs of maximum degree 3. Proof (sketch). Our reduction is adapted from [24,30]. We reduce from the Planar 3-Dimensional Matching problem, or Planar 3-DM, which is NPcomplete (see [9]), even when each element occurs in either two or three triples. A 3-DM instance consists of three disjoint sets X, Y, Z of equal cardinality p and a set T of triples from X × Y × Z. Let q = |T |. The question is if there are p triples which contain all elements of X, Y and Z. We associate a bipartite graph with this instance. We assume that the four sets T , X, Y and Z are pairwise disjoint. We also assume that each element of X ∪ Y ∪ Z belongs to at most three triples. We have a vertex for each element in X, Y, Z and each triple in T . There is an edge connecting triples to elements if and only if the element belongs to the triple. This graph G is bipartite with vertex bipartition of T, X ∪ Y ∪ Z, and has maximum degree 3. We say the instance is planar if G is planar. Given an instance of Planar 3-DM, G = (T, X ∪ Y ∪ Z, E), and a planar embedding of it, we build an instance G = (V  , E  ) of DAGSPP. Construction: We replace each vi = (x, y, z) ∈ T , where x ∈ X, y ∈ Y , z ∈ Z, i where 1 ≤ j, k ≤ 3 and with a gadget H(vi ) that consists of 9 vertices named ljk with edges as shown in Fig. 1; if the planar embedding has x, y, z in clockwise i i i , x), (l22 , z) and (l32 , y), order seen as neighbors of vi , then we add the arcs (l12 i i i otherwise, we add the arcs (l12 , x), (l22 , y) and (l32 , z). We observe the following two properties of G . Claim 3.2 (∗). G is a planar DAG with maximum degree 3 in which every shortest/induced path is of length at most 3, and the underlying undirected graph of G is bipartite.  
   
  192  
   
  H. Fernau et al.  
   
  i l11  
   
  i l13  
   
  i l23  
   
  i l12  
   
  i l22  
   
  x  
   
  y  
   
  i l33  
   
  i l21  
   
  i l32  
   
  i l31  
   
  z  
   
  Fig. 1. The vertex gadget as deﬁned in the proof of Theorem 3.1 i l13  
   
  i l11  
   
  i l12  
   
  x  
   
  i l23  
   
  i l21  
   
  i l22  
   
  y  
   
  (1)  
   
  i l33  
   
  i l31  
   
  i l32  
   
  z  
   
  i l13  
   
  i l11  
   
  i l12  
   
  x  
   
  i l23  
   
  i l21  
   
  i l22  
   
  y  
   
  i l33  
   
  i l31  
   
  i l32  
   
  z  
   
  (2)  
   
  Fig. 2. Two diﬀerent vertex partitions of a H(vi ) gadget into 3-vertex paths, corresponding to diﬀerent triple selections in the construction of Theorem 3.1.  
   
  Claim 3.3 (∗). The Planar 3-DM instance has a solution if and only if G can be partitioned into p + 3q shortest paths. The intuition behind the proof of Claim 3.3 is that each shortest or induced path in a solution must contain exactly three vertices, and each gadget H(vi ) is partitioned into P3 -paths in one of the two ways shown in Fig. 2.   The proof above can also be adapted to DAGSPC, DAGIPP and DAGIPC. Corollary 3.4. DAGSPC, DAGIPP, and DAGIPC are NP-hard even when restricted to planar bipartite DAGs of maximum degree 3. Next, we prove that SPP is NP-hard even when the input graph is restricted to bipartite 5-degenerate graphs with diameter at most 4. To prove this, we reduce from 4-SPP on bipartite graphs to SPP on bipartite graphs. 4-SPP asks, given G = (V, E), if there exists a partition P of V such that each set in P induces a shortest path of length 3 in G. First, we show that 4-SPP is NPhard on bipartite graphs (Lemma 3.6) by a reduction from 4-IPP (also known as Induced P4 -Partition) on bipartite graphs. 4-IPP asks if there exists a partition P of V such that each set in P induces a path of length 3 in G. Lemma 3.5. [24] 4-IPP is NP-hard for bipartite graphs of maximum degree 3. Lemma 3.6 (∗). 4-SPP is NP-hard for bipartite graphs of maximum degree 3.  
   
  Parameterizing Path Partitions  
   
  193  
   
  Theorem 3.7. SPP is NP-hard, even for bipartite 5-degenerate graphs with diameter 4. Proof. To prove this claim, we use Lemma 3.6. Given an instance of 4-SPP, say, G = (V, E), with bipartition V = A ∪ B and |V | = 4k, as the number of vertices must be divisible by 4, we create an instance G = (V  , E  ) of SPP. Construction: We add 10 new vertices to G, getting V  = V ∪ {x1 , x2 , x3 , x4 , x5 , y1 , y2 , y3 , y4 , y5 } . We add edges from x2 and x4 to all vertices of B ∪ {y2 , y4 }. Also, add edges from y2 and y4 to all vertices of A, add further edges to form paths x1 x2 x3 x4 x5 and y1 y2 y3 y4 y5 . The remaining edges all stem from G. This describes E  of G . We have the following observations, due to the construction of G . Claim 3.8 (∗). G = (V  , E  ) is bipartite and 5-degenerate. We can make the claimed bipartition explicit by writing V  = A ∪ B  , where A = A ∪ {x2 , x4 , y1 , y3 , y5 } and B  = B ∪ {x1 , x3 , x5 , y2 , y4 }. Claim 3.9 (∗). Any shortest path of G , except for x1 x2 x3 x4 x5 , x1 x2 y2 x4 x5 , x1 x2 y4 x4 x5 and y1 y2 y3 y4 y5 , y1 y2 x2 y4 y5 , y1 y2 x4 y4 y5 , contains at most four vertices. Hence, G has a diameter at most 4. The arguments leading to the previous claim also give raise to the following one. Claim 3.10. The only two shortest paths in G that have ﬁve vertices and that can simultaneously exist in a path partition are x1 x2 x3 x4 x5 and y1 y2 y3 y4 y5 . ♦ Notice that Claim 3.8 and Claim 3.9 together guarantee the additional properties of the constructed graph G that have been claimed in Theorem 3.7. Claim 3.11 (∗). Let u, v ∈ V have distance d < 3 in G. Then, they also have distance d in G . Hence, if p is a shortest path on at most three vertices in G, then p is also a shortest path in G . Now, we claim that G is a Yes-instance of 4-SPP if and only if G has a shortest path partitioning of cardinality k  = k + 2, where |V | = 4k. For the forward direction, let D be any solution of 4-SPP for G, containing k shortest paths. To construct a solution D of SPP for the instance (G , k  ), we just need to add the two paths x1 x2 x3 x4 x5 and y1 y2 y3 y4 y5 to D. By Claim 3.11, every path p ∈ D is in fact a shortest path in G . Hence, D is a set of shortest paths with cardinality k  = k + 2 that covers all vertices of G . For the backward direction, assume G has a solution D , where |D | = k  = k + 2. As |V  | = 4k + 10 by construction, we know by Claim 3.9 that D contains k paths of length three and two paths of length four. By Claim 3.10, {x1 x2 x3 x4 x5 , y1 y2 y3 y4 y5 } ⊆ D and the rest of the paths of D are of length three and consists of vertices from V only. Let D = D \ {x1 x2 x3 x4 x5 , y1 y2 y3 y4 y5 }. As the k paths of D are each of length three also in G (by Table 1) and as they cover V completely, D provides a solution to the 4-SPP instance G.    
   
  194  
   
  H. Fernau et al.  
   
  The reduction above can also be used for proving the following result. (A graph is d-degenerate if every induced subgraph has a vertex of degree at most d). Corollary 3.12. SPC is NP-hard, even for bipartite 5-degenerate graphs with diameter 4.  
   
  4  
   
  W[1]-Hardness Results  
   
  The natural or standard parameterization of a parameterized problem stemming from an optimization problem is its solution size. We will study this type of parameterization in this section for path partitioning problems. More technically speaking, we are parameterizing these problems by an upper bound on the number of paths in the partitioning. Unfortunately, our results show that for none of the variations that we consider, we can expect FPT-results. Theorem 4.1. SPP (parameterized by solution size) is W[1]-hard on DAGs. The following reduction is non-trivially adapted from [28]. Proof. We deﬁne a parameterized reduction from Clique to SPP on DAGs (both parameterized by solution size). Let (G, k) be an instance of Clique, where k ∈ N and G = (V, E). We construct an equivalent instance (G , k  ) of the + 3k. Let V = [n]. SPP problem, where G is a DAG and k  = k·(k−1) 2 Overview of the Construction: We create an array of k × n identical gadgets for the construction, with each gadget representing a vertex in the original graph. We can visualize this array as having k rows and n columns. If the SPP instance (G , k  ) is a Yes-instance, then we show that each row has a so-called selector in the solution. Here, a selector is a path that traverses all but one gadget in a row, hence skipping exactly one of the gadgets. The vertices in G corresponding to the skipped gadgets form a clique of size k in G. To ensure that all selected vertices form a clique in G, we have so-called veriﬁers in SPP. Veriﬁers are the paths that are used for each pair of rows to ensure that the vertices corresponding to the selected gadgets in these rows are adjacent in G. This way, we also do not have to check separately that the selected vertices are distinct. Construction Details: The array of gadgets is drawn with row numbers increasing downward and column numbers increasing to the right. Arcs between columns go down and arcs within the same row go to the right. To each row i, with i ∈ [k], we add a start terminal, an arc (si , si ), and an end terminal, an arc (ti , ti ). Next, add arcs starting from si , si to tl and tl , with l > i. Also, for each row, we have k − i column start terminals, arcs (si,j , si,j ) with i < j, and i − 1 column end terminals, arcs (tj,i , tj,i ) with j ∈ [i − 1]. Also, add arcs from vertices si,j and si,j to all vertices tj,p with p < j if j > i, and to tl , tl if l ≥ i. Gadgets are denoted by Gi,u , i ∈ [k], corresponding to u ∈ V . Each gadget Gi,u i,u consists of k − 1 arcs (ai,u r , br ), with r ∈ [k] \ {i}. To each row i ∈ [k], we also i,0 add dummy gadgets Gi,0 and Gi,n+1 . Gi,0 consists of two arcs, (ai,0 1 , a2 ) and i,0 i,0 i,0 i,0 (b1 , b2 ), also add arcs from b1 and b2 to tm , tm and tm,h where m < h and i ≤  
   
  Parameterizing Path Partitions  
   
  195  
   
  h. Gi,n+1 consists of a directed Pk+2 and an arc (bi,n+1 , bi,n+1 ) ; the Pk+2 -vertices 1 2 i,n+1 i,n+1 , with j ∈ [k+2], where ak+2 has out-degree zero. We can speak are named aj i,0 i,n+1 of T i,u := {ai,u | r ∈ [k] \ {i}} ∪ {ai,0 | j ∈ [k + 2]} as being on the r 1 , a2 , aj i,0 i,n+1 i,n+1 i,u i,u , b2 } top level, while the vertices B := {br | r ∈ [k] \ {i}} ∪ {bi,0 1 , b2 , b1 form the bottom level of gadget Gi,u . Due to the natural ordering of the wires within a gadget, we can also speak of the ﬁrst vertex on the top level of a gadget or that last vertex on the bottom level of a gadget. On both levels, the vertices are connected following their natural wire ordering. More technically speaking, this means that within gadget Gi,u , with u ∈ V , there is an arc from the ﬁrst vertex of the upper level to the second vertex of the upper level, from the second vertex of the upper level to the third vertex of the upper level etc., up to an arc from the penultimate vertex of the upper level to the last vertex of the upper level. Moreover, there is an arc from the last vertex of the upper level of Gi,u−1 to the ﬁrst vertex of the upper level of Gi,u and from the last vertex of the upper level of Gi,u to the ﬁrst vertex of the upper level of Gi,u+1 . Analogously, the vertices of the lower level of the gadgets are connected. These notions are illustrated in Fig. 3. In the ﬁgure, we i,u omit the superscripts (ar , br ) = (ai,u r , br ), where r ∈ [k − i].  
   
  si,i+1  
   
  si,k  
   
  aj  
   
  a1  
   
  ak  
   
  Gi,u  
   
  bk  
   
  t1,i  
   
  a1  
   
  a2  
   
  ai−1  
   
  ai+1  
   
  ak  
   
  b1  
   
  b2  
   
  bi−1  
   
  bi+1  
   
  bk  
   
  t2,i  
   
  ti−1,i  
   
  Fig. 3. Gadget Gi,u , 0 < u ≤ n, i ∈ [k]  
   
  b1  
   
  bj Gj,v  
   
  a1 b1  
   
  ai bi  
   
  ak bk  
   
  Fig. 4. Gi,u connected to Gj,v , i < j  
   
  A selector is a path that starts at si , enters its row at the top level, and exits it at the bottom level, ending at ti and skipping exactly one gadget Gi,u , with i ∈ [k] and u ∈ V . In order to implement this, we add the arcs (si , ai,0 1 ) and , ti ) for row i, as well as skipping arcs that allow to skip a gadget Gi,u for (bi,n+1 2 u ∈ V . These connect the top level of the last wire of Gi,u−1 to the bottom level of the ﬁrst wire of Gi,u+1 . A verifier is a path that routes through one of the wires of the skipped gadget and connects column terminals si,j to ti,j . In order to implement this, we add i,u  the arcs (si,j , ai,u j ) and (bi , ti,j ) to every gadget in rows i and j. To connect the gadget in row i and j, for every edge uv in G, we add an arc between the wires j,v (bi,u j , ai ) for each i < j, see Fig. 4.  
   
  196  
   
  H. Fernau et al.  
   
  a1 a2 si  
   
  ak  
   
  a1  
   
  ak  
   
  a1  
   
  ak  
   
  a1  
   
  a1  
   
  ak+2  
   
  si  
   
  ti ti b1 b2  
   
  Gi,0  
   
  bk  
   
  b1  
   
  Gi,1  
   
  bk  
   
  b1  
   
  Gi,2  
   
  bk  
   
  b1  
   
  Gi,3  
   
  b1  
   
  b2  
   
  Gi,n+1  
   
  Fig. 5. The ith row (only the ﬁrst two skipping arcs are shown), the dashed line indi, with j ∈ [k + 2] cates arcs from si , si to ai,n+1 j  
   
  To force the start and end vertices of paths in the spp of G of size k  , we add the following arcs, called shortest paths enforcers. For every row i, from all the vertices of gadget Gj,u , where j < i and 0 ≤ u ≤ n, from every vertex sl and sl of a start terminal and from every vertex sl,m , sl,m of a column start terminal, , with j ∈ [k + 2] (Fig. 5). where l ≤ i and l < m, add arcs to ai,n+1 j We are now going to show a number of properties of our construction. Observe that G is a DAG because all arcs either go from left to right or from top to bottom. Next, using Claim 4.2 and Claim 4.3, we can deduce that, if G has an spp of size k  , then the start vertex of each path in the solution is ﬁxed. Claim 4.2 (∗). G has k  − k vertices with in-degree zero and out-degree zero. Hence, we know k  − k start and end vertices of the solution are ﬁxed. The next claim shows that each row i has one more start vertex of some path, hence ﬁxing all the starting vertex of all the paths in the solution. Claim 4.3 (∗). If a solution P of the created SPP instance G is of size k  then, for each row i ∈ [k], there is a path in P starting from v ∈ T i,u which covers at . least the vertex ai,n+1 1 Hence, if G has an spp of size k  , then the paths in the solution must start i,u and si,j , with i < j. Next, we will show at: for i ∈ [k], si , bi,0 1 , v, v ∈ T observations about these paths’ ending vertices. Claim 4.4 (∗). If G has an spp of size k  , then a path (in this SPP solution) starting at si has to end at ti , with i ∈ [k]. With arguments along similar lines, we can show: Claim 4.5. If G has an spp of size k  , then any path in this partition starting at si,j has to end at ti,j , i < j. Claim 4.6. If G has an spp of size k  , then any path in this partition starting , i ∈ [k]. at v ∈ T i,u has to end at ai,n+1 i  
   
  Parameterizing Path Partitions  
   
  197  
   
  Also, if G has an spp of size k  , then for each row i, with i ∈ [k], any path starting at si has to skip exactly one gadget and end at ti . If we do not skip any gadget, si,j cannot be connected to ti,j , j > i. Once we skip a gadget, we are at the bottom level of the row and hence we cannot skip again. To conclude if G has a shortest path partition of size k  (then in the solution) the path starting at si has to end at ti and this path has to skip exactly one gadget. Through this skipped gadget, si,j is connected to ti,j . The bottom of the row is covered by a path starting from bi,0 and the top of the row is covered by a path starting at v ∈ T i,u after the skipped gadget and ending at ai,n+1 k+2 . Finally, we have the following claim about G that follows by construction. Claim 4.7. There exists a path between si,j and ti,j through two gadgets Gi,u and Gj,v where i > j if and only if there is an edge uv in the graph G. Claim 4.8 (∗). G has a k-clique iﬀ G has a shortest path partition of size k  . As the construction is polynomial-time, W[1]-hardness follows.  
   
  5  
   
     
   
  XP Algorithms  
   
  We now present our XP algorithms to prove the following result. We note that the result for USPP also follows from [8] (with a diﬀerent proof). Proposition 5.1. USPP and DAGSPP are in XP. For our XP algorithms, the following combinatorial result is crucial. Lemma 5.2 (∗). Let G = (V, E) be a directed graph. Then, V can be partitioned into k vertex-disjoint shortest paths if and only if there k vertex-disjoint paths are k between some si and ti , for 1 ≤ i ≤ k, such that i=1 d(si , ti ) = |V | − k. A similar characterization is true for the undirected case. This lemma allows us to prove Proposition 5.1 by cycling through all possible X := {(s1 , t1 ), . . . , (sk , tk )}, resulting in an instance of DP. Now, either apply [11, Theorem 3] for DAGs or [17,27] for undirected graphs to get the XP-result. Notice that these algorithmic results rule out paraNP-hardness results.  
   
  6  
   
  Neighborhood Diversity Parameterization  
   
  One of the standard structural parameters studied within parameterized complexity is the vertex cover number . As graphs with bounded vertex cover number are highly restricted, less restrictive parameters that generalize vertex cover are interesting, as neighborhood diversity is, introduced by Lampis [19]. Crucial to our FPT-results is the following interesting combinatorial fact. Proposition 6.1 (∗). If G is connected, then diam(G) ≤ nd(G).  
   
  198  
   
  H. Fernau et al.  
   
  Similar arguments show that the number of neighborhood diversity equivalence classes that a shortest path P intersects equals its number of vertices if P contains at least four vertices. In shortest paths on two or three vertices, however, their endpoints might have the same type. Now, call two shortest paths Pi and Pj (viewed as sets of vertices) equivalent, denoted by Pi ≡ Pj , in a graph G with d = nd(G) if |Pi ∩ Cl | = |Pj ∩ Cl | for all l with 1 ≤ l ≤ d, where C1 , . . . , Cd denote the nd-equivalence classes. Any two equivalent shortest paths have the same length. Proposition 6.1 and our discussions imply that there are O(2nd(G) ) many equivalence classes of shortest paths (+). Theorem 6.2. USPP is FPT when parameterized by neighborhood diversity. Proof. As we can solve SPP separately on each connected component, we can assume in the following that the input graph is connected. Given that the neighborhood diversity of a graph G = (V, E) is bounded by an integer d, then there exists a partition of V into d nd-classes C1 , . . . , Cd . Hence, each Ci for i ∈ [d] either induces a clique or an independent set. Such a partition can be found in linear time with a fast modular decomposition algorithm [31]. Compute the set of all shortest path equivalence classes; this can be represented by a set P of shortest paths, in which any two shortest paths are not equivalent. By (+), we know that |P| ∈ O(2nd(G) ). Construct and solve the following Integer Linear Program (ILP), with variables zp ≥ 0 corresponding to p ∈ P. Each p ∈ P is characterized by a vector (p1 , . . . , pd ) with pj = |Cj ∩ p|.  zp minimize subject to  
   
    
   
  p∈P  
   
  zp · pj = |Cj | for all j ∈ [d]  
   
  p∈P  
   
  The variable zp encodes how many shortest paths equivalent to p are taken in the solution. Hence, the objective function expresses minimizing the number of shortest paths used in the partition. The constraints ensure the path partitioning. Claim 6.3 (∗). There exists a spp of G with k shortest paths if and only if the objective function attains the value k in the ILP described above. Notice that the number of variables of the ILP is exactly |P|, which is O(2d ), as observed above. Now, we apply [5, Theorem 6.5] to prove our FPT claim.   The arguments leading to Proposition 6.1 and the subsequent discussions are all proofs by contradiction that show shortcuts in shortest paths that are ‘too long’. This also works for induced paths instead of shortest paths, leading to: Proposition 6.4. The length of a longest induced path in a graph G is upperbounded by the neighborhood diversity nd(G). Theorem 6.5. UIPP is FPT when parameterized by neighborhood diversity.  
   
  Parameterizing Path Partitions  
   
  199  
   
  By using results of Lampis [19], we can immediately infer the following. Corollary 6.6. USPP, UIPP are FPT, parameterized by vertex cover number. We have a similar result for UPP, either by a more general approach in [14], or based on a direct reasoning. It is open if one can get a polynomial-size kernel. Proposition 6.7 (∗). UPP is FPT when parameterized by vertex cover number, as it possesses a single-exponential size kernel.   We can also obtain a direct FPT algorithm with running time O∗ vc(G)! · 2vc(G) .  
   
  7  
   
  Duals and Distance to Triviality  
   
  Given a typical graph problem that is (as a standard) parameterized by solution size k, it takes as input a graph G of order n and k, then its dual parameter is kd = n − k. This applies in particular to our problems UPP, UIPP and USPP. As these problems always have as a trivial solution the number n of vertices (i.e., n trivial paths), we can also interpret this dual parameterization as a parameterization led by the idea of distance from triviality. Moreover, all our problems can be algorithmically solved for each connected component separately, so that we can assume, w.l.o.g., that we are dealing with connected graphs. Namely, if (G, k) with G = (V, E) is a graph and C  V describes a connected component, then we can solve (G[C], k  ) and (G−C, k −k  ) independently for all 1 ≤ k  < k. We now prove that our problems, with dual parameterizations, are in FPT by providing a kernelization algorithm. The following claims are crucial. Lemma 7.1 (∗). Let G be a graph of order n. If G has a matching that covers 2k vertices, then (G, n − k) is a Yes-instance of UPP, UIPP and USPP. The preceding lemma has the following interesting consequence. Corollary 7.2 (∗). If G = (V, E) is a graph that possesses some X ⊆ V with |X| ≥ 2k such that deg(v) ≥ 2k for every v ∈ X, then G has a matching of size k and hence (G, n − k) is a Yes-instance of UPP, UIPP and USPP. This consequence, as well as the following combinatorial observation, has no direct bearing on our algorithmic result, but may be of independent interest. Lemma 7.3 (∗). If G is a connected graph with diam(G) > k, then (G, n − k) is a Yes-Instance of UPP, UIPP and USPP. Our combinatorial thoughts, along with Corollary 6.6 and Proposition 6.7, allow us to show the following algorithmic result, the main result of this section. Theorem 7.4 (∗). UPP, UIPP and USPP can be solved in FPT time with dual parameterization.  
   
  200  
   
  8  
   
  H. Fernau et al.  
   
  Conclusion  
   
  We have explored the algorithmic complexity of the three problems PP, IPP and SPP, and as witnessed by Table 1, our results show some interesting algorithmic diﬀerences between these three problems. Many interesting questions remain to be investigated. For example, what is the parameterized complexity of SPP on undirected graphs, parameterized by the number of paths? Is it W[1]-hard, like for DAGs? This was asked in [8], and our W[1]-hardness result for DAGs can be seen as a ﬁrst step towards an answer. We have seen that PP, IPP and SPP admit FPT algorithms when parameterized by neighborhood diversity. Can we obtain such algorithms for other (e.g., more general) parameters (as was done for PP and modular-width in [14])? Moreover, in the light of our FPT algorithms for the dual parameterizations of PP, IPP and SPP, we can ask whether they admit a polynomial kernel.  
   
  References 1. Boesch, F.T., Gimpel, J.F.: Covering points of a digraph with point-disjoint paths and its application to code optimization. J. ACM 24(2), 192–198 (1977) 2. Chakraborty, D., Dailly, A., Das, S., Foucaud, F., Gahlawat, H., Ghosh, S.K.: Complexity and algorithms for isometric path cover on chordal graphs and beyond. In: Proceedings of the 33rd International Symposium on Algorithms and Computation, ISAAC 2022. LIPIcs, vol. 248, pp. 12:1–12:17. Schloss Dagstuhl - Leibniz-Zentrum f¨ ur Informatik (2022) 3. Cormen, T.H., Leiserson, C.E., Rivest, R.L., Stein, C.: Introduction to Algorithms, 3rd edn. The MIT Press, Cambridge (2009) 4. Corneil, D.G., Dalton, B., Habib, M.: LDFS-based certifying algorithm for the minimum path cover problem on cocomparability graphs. SIAM J. Comput. 42(3), 792–807 (2013) 5. Cygan, M., et al.: Parameterized Algorithms. Springer, Cham (2015). https://doi. org/10.1007/978-3-319-21275-3 6. Damaschke, P., Deogun, J.S., Kratsch, D., Steiner, G.: Finding Hamiltonian paths in cocomparability graphs using the bump number algorithm. Order 8(4), 383–391 (1992). https://doi.org/10.1007/BF00571188 7. Dilworth, R.P.: A decomposition theorem for partially ordered sets. In: Gessel, I., Rota, G.C. (eds.) Classic Papers in Combinatorics. Modern Birkh¨ auser Classics, pp. 139–144. Springer, Boston (2009). https://doi.org/10.1007/978-0-8176-4842-8 10 8. Dumas, M., Foucaud, F., Perez, A., Todinca, I.: On graphs coverable by k shortest paths. In: Proceedings of the 33rd International Symposium on Algorithms and Computation, ISAAC 2022. LIPIcs, vol. 248, pp. 40:1–40:15. Schloss Dagstuhl Leibniz-Zentrum f¨ ur Informatik (2022) 9. Dyer, M.E., Frieze, A.M.: Planar 3DM is NP-complete. J. Algorithms 7(2), 174–184 (1986) 10. Fernau, H., Foucaud, F., Mann, K., Padariya, U., Rao, K.N.R.: Parameterizing path partitions. CoRR ArXiv preprint arXiv:2212.11653 (2022) 11. Fortune, S., Hopcroft, J.E., Wyllie, J.: The directed subgraph homeomorphism problem. Theoret. Comput. Sci. 10, 111–121 (1980) 12. Franzblau, D.S., Raychaudhuri, A.: Optimal Hamiltonian completions and path covers for trees, and a reduction to maximum ﬂow. ANZIAM J. 44, 193–204 (2002)  
   
  Parameterizing Path Partitions  
   
  201  
   
  13. Fulkerson, D.R.: Note on Dilworth’s decomposition theorem for partially ordered sets. Proc. AMS 7(4), 701–702 (1956) 14. Gajarsk´ y, J., Lampis, M., Ordyniak, S.: Parameterized algorithms for modularwidth. In: Gutin, G., Szeider, S. (eds.) IPEC 2013. LNCS, vol. 8246, pp. 163–176. Springer, Cham (2013). https://doi.org/10.1007/978-3-319-03898-8 15 15. Garey, M.R., Johnson, D.S.: Computers and Intractability. Freeman, Dallas (1979) 16. Goodman, S., Hedetniemi, S.: On the Hamiltonian completion problem. In: Bari, R.A., Harary, F. (eds.) Graphs and Combinatorics. Lecture Notes in Mathematics, vol. 406, pp. 262–272. Springer, Heidelberg (1974). https://doi.org/10.1007/ BFb0066448 17. Kawarabayashi, K.I., Kobayashi, Y., Reed, B.: The disjoint paths problem in quadratic time. J. Combin. Theory Ser. B 102(2), 424–435 (2012) 18. Krishnamoorthy, M.S.: An NP-hard problem in bipartite graphs. ACM SIGACT News 7(1), 26 (1975) 19. Lampis, M.: Algorithmic meta-theorems for restrictions of treewidth. Algorithmica 64(1), 19–37 (2012). https://doi.org/10.1007/s00453-011-9554-x 20. Le, H.O., Le, V.B., M¨ uller, H.: Splitting a graph into disjoint induced paths or cycles. Discret. Appl. Math. 131(1), 199–212 (2003) 21. Lochet, W.: A polynomial time algorithm for the k-disjoint shortest paths problem. In: Proceedings of the 2021 ACM-SIAM Symposium on Discrete Algorithms (SODA), pp. 169–178. SIAM (2021) 22. Manuel, P.D.: Revisiting path-type covering and partitioning problems. CoRR ArXiv preprint arXiv:1807.10613 (2018) 23. Manuel, P.D.: On the isometric path partition problem. Discuss. Math. Graph Theory 41(4), 1077–1089 (2021) 24. Monnot, J., Toulouse, S.: The path partition problem and related problems in bipartite graphs. Oper. Res. Lett. 35(5), 677–684 (2007) 25. Ntafos, S., Hakimi, S.: On path cover problems in digraphs and applications to program testing. IEEE Trans. Softw. Eng. SE-5(5), 520–529 (1979) 26. Pinter, S.S., Wolfstahl, Y.: On mapping processes to processors in distributed systems. Int. J. Parallel Prog. 16(1), 1–15 (1987). https://doi.org/10.1007/ BF01408172 27. Robertson, N., Seymour, P.: Graph minors XIII. The disjoint paths problem. J. Combin. Theory Ser. B 63(1), 65–110 (1995) 28. Schrijver, A.: Finding k disjoint paths in a directed planar graph. SIAM J. Comput. 23(4), 780–788 (1994) 29. Slivkins, A.: Parameterized tractability of edge-disjoint paths on directed acyclic graphs. SIAM J. Discrete Math. 24(1), 146–157 (2010) 30. Steiner, G.: On the k-path partition of graphs. Theoret. Comput. Sci. 290(3), 2147–2155 (2003) 31. Tedder, M., Corneil, D., Habib, M., Paul, C.: Simpler linear-time modular decomposition via recursive factorizing permutations. In: Aceto, L., Damg˚ ard, I., Goldberg, L.A., Halld´ orsson, M.M., Ing´ olfsd´ ottir, A., Walukiewicz, I. (eds.) ICALP 2008, Part I. LNCS, vol. 5125, pp. 634–645. Springer, Heidelberg (2008). https:// doi.org/10.1007/978-3-540-70575-8 52 32. Thiessen, M., Gaertner, T.: Active learning of convex halfspaces on graphs. In: Ranzato, M., Beygelzimer, A., Dauphin, Y., Liang, P., Vaughan, J.W. (eds.) Proceedings of the 35th Conference on Neural Information Processing Systems, NeurIPS 2021, vol. 34, pp. 23413–23425. Curran Associates, Inc. (2021) 33. Wang, C., et al.: Optimizing cross-line dispatching for minimum electric bus ﬂeet. IEEE Trans. Mob. Comput. 22(4) (2023)  
   
  Maintaining Triconnected Components Under Node Expansion Simon D. Fink(B)  
   
  and Ignaz Rutter  
   
  Faculty of Informatics and Mathematics, University of Passau, Passau, Germany {finksim,rutter}@fim.uni-passau.de  
   
  Abstract. SPQR-trees model the decomposition of a graph into triconnected components. In this paper, we study the problem of dynamically maintaining an SPQR-tree while expanding vertices into arbitrary biconnected graphs. This allows us to eﬃciently merge two SPQR-trees by identifying the edges incident to two vertices with each other. We do this working along an axiomatic deﬁnition lifting the SPQR-tree to a stand-alone data structure that can be modiﬁed independently from the graph it might have been derived from. Making changes to this structure, we can now observe how the graph represented by the SPQR-tree changes, instead of having to reason which updates to the SPQR-tree are necessary after a change to the represented graph. Using eﬃcient expansions and merges allows us to improve the runtime of the Synchronized Planarity algorithm by Bläsius et al. [2] from O(m2 ) to O(m · Δ), where Δ is the maximum pipe degree. This also reduces the time for solving several constrained planarity problems, e.g. for Clustered Planarity from O((n + d)2 ) to O(n + d · Δ), where d is the total number of crossings between cluster borders and edges and Δ is the maximum number of edge crossings on a single cluster border.  
   
  Keywords: SPQR-Tree  
   
  1  
   
  · Dynamic Algorithm · Cluster Planarity  
   
  Introduction  
   
  The SPQR-tree is a data structure that represents the decomposition of a graph at its separation pairs, that is the pairs of vertices whose removal disconnects the graph. The components obtained by this decomposition are called skeletons. SPQR-trees form a central component of many graph visualization techniques and are used for, e.g., planarity testing and variations thereof [6,11] and for computing embeddings and layouts [10,13]. Initially, SPQR-trees were devised by Di Battista and Tamassia for incremental planarity testing [6]. Their use was quickly expanded to other on-line problems [5] and to the fully-dynamic setting, √ that is allowing insertion and deletion of vertices and edges in O( n) time [7], where n is the number of vertices in the graph. Funded by DFG-grant RU-1903/3-1. c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  M. Mavronicolas (Ed.): CIAC 2023, LNCS 13898, pp. 202–216, 2023. https://doi.org/10.1007/978-3-031-30448-4_15  
   
  Maintaining Triconnected Components Under Node Expansion  
   
  203  
   
  In this paper, we consider an incremental setting where we allow a single operation that expands a vertex v into an arbitrary biconnected √graph Gν . The approach of Eppstein et al. [7] allows this in O((deg(v)+|Gν |)· n) time by only representing parts of triconnected components.1 We improve this to O(deg(v)+|Gν |) using an algorithm that is much simpler and explicitly yields full triconnected components, which will become important for our applications later. In addition, our approach also allows to eﬃciently merge two SPQR-trees as follows. Given two biconnected graphs G1 , G2 containing vertices v1 , v2 , respectively, together with a bijection between their incident edges, we construct a new graph G by replacing v1 with G2 −v2 in G1 , identifying edges using the given bijection. Given the SPQR-trees of G1 and G2 , we show that the SPQR-tree of G can be found in O(deg(v1 )) time. More speciﬁcally, we present a data structure that supports the following operations: InsertGraphSPQR expands a single vertex in time linear in the size of the expanded subgraph, MergeSPQR merges two SPQR-trees in time linear in the degree of the replaced vertices, IsPlanar indicates whether the currently represented graph is planar in constant time, and Rotation yields one of the two possible planar rotations of a vertex in a triconnected skeleton in constant time. Furthermore, our data structure can be adapted to yield consistent planar embeddings for all triconnected skeletons and to test for the existence of three distinct paths between two arbitrary vertices with an additional factor of α(n) for all operations, where α is the inverse Ackermann function. The main idea of our approach is that the subtree of the SPQR-tree aﬀected by expanding a vertex v has size linear in the degree of v, but may contain arbitrarily large skeletons. In a “non-normalized” version of an SPQR-tree, the aﬀected cycle (‘S’) skeletons can easily be split to have a constant size, while we develop a custom splitting operation to limit the size of triconnected ‘R’ skeletons. This limits the size of the aﬀected structure to be linear in the degree of v and allows us to perform the expansion eﬃciently. In addition to the description of this data structure, the technical contribution of this paper is twofold: First, we develop an axiomatic deﬁnition of the decomposition at separation pairs, putting the SPQR-tree as “mechanical” data structure into focus instead of relying on and working along a given graph structure. As a result, we can deduce the represented graph from the data structure instead of computing the data structure from the graph. This allows us to make more or less arbitrary changes to the data structure (respecting its consistency criteria) and observe how the graph changes, instead of having to reason which changes to the graph require which updates to the data structure. Second, we explain how our data structure can be used to improve the runtime of the algorithm by Bläsius et al. [2] for solving Synchronized Planarity from O(m2 ) to O(m·Δ), where Δ is the maximum pipe degree (i.e. the maximum degree of a vertex with synchronization constraints that enforce its rotation to be the same as that of another vertex). Synchronized Planarity can be used 1  
   
  Unfortunately, the recent improvements by Holm and Rotenberg are not applicable here, as they maintain triconnectivity in an only incremental setting [12], while maintaining only planarity information in the fully-dynamic setting [11].  
   
  204  
   
  S. D. Fink and I. Rutter  
   
  to model and solve a vast class of diﬀerent kinds of constrained planarity. Among them is the notorious Clustered Planarity, whose complexity was open for 30 years before Fulek and Tóth gave an algorithm with runtime O((n + d)8 ) in 2019 [9], where d is the total number of crossings between cluster borders and edges. Shortly thereafter, Bläsius et al. [2] gave a solution in O((n + d)2 ) time. We improve this to O(n + d · Δ), where Δ is the maximum number of edge crossings on a single cluster border. This work is structured as follows. After preliminaries in Sect. 2, we describe the skeleton decomposition and show how it relates to the SPQR-tree in Sect. 3. Section 4 extends this data structure by the capability of splitting triconnected components. In Sect. 5, we use this to ensure the aﬀected part of the SPQR-tree is small when we replace a vertex with a new graph. Section 6 shows how we reduce the runtime for solving Synchronized and Clustered Planarity. Omitted proofs and more details on Synchronized and Clustered Planarity can be found in the full version [8].  
   
  2  
   
  Preliminaries  
   
  In the context of this work, G = (V, E) is a (usually biconnected and loop-free) multi-graph with n vertices V and m (possibly parallel) edges E. For a vertex v, we denote its open neighborhood (excluding v itself) by N (v). For a bijection or matching φ we call φ(x) the partner of an element x. We use A ∪· B to denote the union of two disjoint sets A, B. A separating k-set is a set of k vertices whose removal increases the number of connected components. Separating 1sets are called cutvertices, while separating 2-sets are called separation pairs. A connected graph is biconnected if it does not have a cutvertex. A biconnected graph is triconnected if it does not have a separation pair. Maximal biconnected subgraphs are called blocks. Each separation pair divides the graph into bridges, the maximal subgraphs which cannot be disconnected by removing or splitting the vertices of the separation pair. A bond is a graph that consists solely of two pole vertices connected by multiple parallel edges, a polygon is a simple cycle, while a rigid is any simple triconnected graph. A wheel is a cycle with an additional central vertex connected to all other vertices. Finally, the expansion that is central to this work is formally deﬁned as follows. Let Gα , Gβ be two graphs where Gα contains a vertex u and Gβ contains |N (u)| marked vertices, together with a bijection φ between the neighbors of u and the marked vertices in Gβ . With Gα [u →φ Gβ ] we denote the graph that is obtained from the disjoint union of Gα , Gβ by identifying each neighbor x of u with its respective marked vertex φ(x) in Gβ and removing u, i.e. the graph Gα where the vertex u was expanded into Gβ ; see Fig. 3 for an example.  
   
  3  
   
  Skeleton Decompositions  
   
  A skeleton structure S = (G, origV, origE, twinE) that represents a graph GS = (V, E) consists of a set G of disjoint skeleton graphs together with three total, surjective mappings twinE, origE, and origV that satisfy the following conditions:  
   
  Maintaining Triconnected Components Under Node Expansion  
   
  205  
   
  – Each skeleton Gμ = (Vμ , Eμreal ∪· Eμvirt ) in G is a multi-graph where each edge is either in Eμreal and thus called real or in Eμvirt and thus called virtual.  – Bijection twinE : E virt → E virt matches all virtual edges E virt = μ Eμvirt such that twinE(e)= e and twinE2 = id. – Surjection origV : μ Vμ → V maps all skeleton vertices to graph vertices.  – Bijection origE : μ Eμreal → E maps all real edges to the graph edge set E. Note that each vertex and each edge of each skeleton is in the domain of exactly one of the three mappings. As the mappings are surjective, V and E are exactly the images of origV and origE. For each vertex v ∈ GS , the skeletons that contain an allocation vertex v  with origV(v  ) = v are called the allocation skeletons of v. Furthermore, let TS be the graph where each node μ corresponds to a skeleton Gμ of G. Two nodes of TS are adjacent if their skeletons contain a pair of virtual edges matched with each other. We call a skeleton structure a skeleton decomposition if it satisﬁes the following conditions: 1 2 3 4  
   
  (bicon) Each skeleton is biconnected. (tree) Graph TS is simple, loop-free, connected and acyclic, i.e., a tree. (orig-inj) For each skeleton Gμ , the restriction origV |Vμ is injective. (orig-real) For each real edge uv, the endpoints of origE(uv) are origV(u) and origV(v). 5 (orig-virt) Let uv and u v  be two virtual edges with uv = twinE(u v  ). For their respective skeletons Gμ and Gμ (where μ and μ are adjacent in TS ), it is origV(Vμ ) ∩ origV(Vμ ) = origV({u, v}) = origV({u , v  }). 6 (subgraph) The allocation skeletons of any vertex of GS form a connected subgraph of TS .  
   
  Figure 1 shows an example of S, GS , and TS . We call a skeleton decomposition with only one skeleton Gμ trivial. In this case, Gμ is isomorphic to GS , and origE and origV are actually bijections between the edges and vertices of both graphs. To model the decomposition into triconnected components, we deﬁne the operations SplitSeparationPair and its converse, JoinSeparationPair, on a skeleton decomposition S = (G, origV, origE, twinE). For SplitSeparationPair, let u, v be a separation pair of skeleton Gμ and let (A, B) be a non-trivial bipartition of the bridges between u and v.2 Applying SplitSeparationPair(S, (u, v), (A, B)) yields skeleton decomposition S  = (G  , origV , origE , twinE ) as follows. In G  , we replace Gμ by two skeletons Gα , Gβ , where Gα is obtained from Gμ [A] by adding a new virtual edge eα between u and v. The same respectively applies to Gβ with Gμ [B] and eβ . We set twinE (eα ) = eβ and twinE (eβ ) = eα . Note that origV maps the endpoints of eα and eβ to the same vertices. All other skeletons and their mappings remain unchanged.  
   
  2  
   
  Note that a bridge might consist out of a single edge between u and v and that each bridge includes the vertices u and v.  
   
  206  
   
  S. D. Fink and I. Rutter  
   
  Fig. 1. Diﬀerent views on the skeleton decomposition S. (a) The graph GS with a vertex u marked in blue. (b) The skeletons of G. Virtual edges are drawn in gray with their matching twinE being shown in orange. The allocation vertices of u are marked in blue. (c) The tree TS . The allocation skeletons of u are marked in blue. (d) The embedding tree of vertex u as described in Sect. 6. P-nodes are shown as white disks, Q-nodes are shown as large rectangles. The leaves of the embedding tree correspond to the edges incident to u.  
   
  For JoinSeparationPair, consider virtual edges eα , eβ with twinE(eα ) = eβ and let Gβ = Gα be their respective skeletons. Applying JoinSeparationPair (S, eα ) yields a skeleton decomposition S  = (G  , origV , origE , twinE ) as follows. In G  , we merge Gα with Gβ to form a new skeleton Gμ by identifying the endpoints of eα and eβ that map to the same vertex of GS . Additionally, we remove eα and eβ . All other skeletons and their mappings remain unchanged. The main feature of both operations is that they leave the graph represented by the skeleton decomposition unaﬀected while splitting a node or contracting and edge in TS , which can be veriﬁed by checking the individual conditions. Lemma 1 (∗). Applying SplitSeparationPair or JoinSeparationPair on a skeleton decomposition S yields a skeleton decomposition S  with an unchanged represented graph GS  = GS . Note that this gives us a second way of ﬁnding the represented graph by exhaustively joining all skeletons until there is only one left, the unique trivial skeleton decomposition. A key point about the skeleton decomposition and especially the operation SplitSeparationPair is that they model the decomposition of a graph at separation pairs. This decomposition was formalized as SPQR-tree by Di Battista and Tamassia [5,6] and is unique for a given graph [10]. Angelini et al. [1] describe a decomposition tree that is conceptually equivalent to our skeleton decomposition. They also present an alternative deﬁnition for the SPQR-tree as a decomposition tree satisfying further properties. We adopt this deﬁnition as follows, not requiring planarity of triconnected components and allowing virtual edges and real edges to appear within one skeleton (i.e., having leaf Q-nodes merged into their parents). Definition 1. A skeleton decomposition S where any skeleton in G is either a polygon, a bond, or triconnected (“rigid”), and two skeletons adjacent in TS are never both polygons or both bonds, is the unique SPQR-tree of GS . The main diﬀerence between the well-known ideas behind decomposition trees and our skeleton decomposition is that the latter allow an axiomatic access  
   
  Maintaining Triconnected Components Under Node Expansion  
   
  207  
   
  to the decomposition at separation pairs. For the skeleton decomposition, we employ a purely functional, “mechanical” data structure instead of relying on and working along a given graph structure. In our case, the represented graph is deduced from the data structure (i.e. SPQR-tree) instead of computing the data structure from the graph.  
   
  4  
   
  Extended Skeleton Decompositions  
   
  Note that most skeletons, especially polygons and bonds, can easily be decomposed into smaller parts. The only exception to this are triconnected skeletons which cannot be split further using the operations we deﬁned up to now. This is a problem when modifying a vertex that occurs in triconnected skeletons that may be much bigger than the direct neighborhood of the vertex. To ﬁx this, we deﬁne a further set of operations which allow us to isolate vertices out of arbitrary triconnected components by replacing them with a (“virtual”) placeholder vertex. This placeholder then points to a smaller component that contains the actual vertex, see Fig. 2. Modiﬁcation of the edges incident to the placeholder is disallowed, which is why we call them “occupied”. Formally, the structures needed to keep track of the components split in this way in an extended skeleton decomposition S = (G, origV, origE, twinE, twinV) are deﬁned as follows. Skeletons now have the form Gμ = (Vμ ∪· Vμvirt , Eμreal ∪· Eμvirt ∪· Eμocc ). Bijection twinV : V virt → V virt matches all virtual vertices  V virt = μ Vμvirt , such that twinV(v) = v, twinV2 = id. The edges incident to virtual vertices are contained in Eμocc and thus considered occupied ; see Fig. 2b. Similar to the virtual edges matched by twinE, any two virtual vertices matched by twinV induce an edge between their skeletons in TS . Condition 2 (tree) also equally applies to those edges induced by twinV, which in particular ensures that there are no parallel twinE and twinV tree edges in TS . Similarly, the connected subgraphs of condition 6 (subgraph) can also contain tree edges induced by twinV. All other conditions remain unchanged, but we add two further conditions to ensure that twinV is consistent: 7 (stars) For each vα , vβ with twinV(vα ) = vβ , it is deg(vα ) = deg(vβ ). All edges incident to vα and vβ are occupied and have distinct endpoints (except for vα and vβ ). Each occupied edge is adjacent to exactly one virtual vertex. 8 (orig-stars) Let vα and vβ again be two virtual vertices matched with each other by twinV. For their respective skeletons Gα and Gβ (where α and β are adjacent in TS ), it is origV(Vα )∩origV(Vβ ) = origV(N (vα )) = origV(N (vβ )). Both conditions together yield a bijection γvα vβ between the neighbors of vα and vβ , as origV is injective when restricted to a single skeleton (condition 3 (orig-inj)) and deg(vα ) = deg(vβ ). Operations SplitSeparationPair and JoinSeparationPair can also be applied to an extended skeleton decomposition, yielding an extended skeleton decomposition without modifying twinV. To ensure that conditions 7 (stars) and 8 (orig-stars) remain unaﬀected by both operations, SplitSeparationPair can only be applied to non-virtual vertices.  
   
  208  
   
  S. D. Fink and I. Rutter  
   
  Fig. 2. (a) A triconnected skeleton Gμ with a highlighted vertex v incident to two gray virtual edges. (b) The result of applying IsolateVertex to isolate v out of the skeleton. The red occupied edges in the old skeleton Gα form a star with center vα , while the red occupied edges in Gβ connect all neighbors of v to form a star with center vβ = v. The centers vα and vβ are virtual and matched with each other. Neighbor u of v was split into vertices uα and uβ . (Color ﬁgure online)  
   
  The operations IsolateVertex and Integrate now allow us to isolate vertices out of triconnected components and integrate them back in, respectively. For IsolateVertex, let v be a non-virtual vertex of skeleton Gμ , such that v has no incident occupied edges. Applying IsolateVertex(S, v) on an extended skeleton decomposition S yields an extended skeleton decomposition S  = (G  , origV , origE , twinE , twinV ) as follows. Each neighbor u of v is split into two non-adjacent vertices uα and uβ , where uβ is incident to all edges connecting u with v, while uα keeps all other edges of u. We set origV (uα ) = origV (uβ ) = origV(u). This creates an independent, star-shaped component with center v, which we move to skeleton Gβ , while we rename skeleton Gμ to Gα . We connect all uα to a single new virtual vertex vα ∈ Vαvirt using occupied edges, and all uβ to a single new virtual vertex vβ ∈ Vβvirt using occupied edges; see Fig. 2. Finally, we set twinV (vα ) = vβ , twinV (vβ ) = vα , and add Gβ to G  . All other mappings and skeletons remain unchanged. For Integrate, consider two virtual vertices vα , vβ with twinV(vα ) = vβ and the bijection γvα vβ between the neighbors of vα and vβ . An application of Integrate(S, (vα , vβ )) yields an extended skeleton decomposition S  = (G  , origV , origE , twinE , twinV ) as follows. We merge both skeletons into a skeleton Gμ (also replacing both in G  ) by identifying the neighbors of vα and vβ according to γvα vβ . Furthermore, we remove vα and vβ together with their incident occupied edges. All other mappings and skeletons remain unchanged. Lemma 2 (∗). Applying IsolateVertex or Integrate on an extended skeleton decomposition S = (G, origV, origE, twinE, twinV) yields an extended skeleton decomposition S  = (G  , origV , origE , twinE , twinV ) with GS  = GS . Furthermore, as Integrate is the converse of IsolateVertex and has no preconditions, any changes made by IsolateVertex can be undone at any time to obtain a (non-extended) skeleton decomposition, and thus possibly the SPQRtree of the represented graph.  
   
  Maintaining Triconnected Components Under Node Expansion  
   
  209  
   
  Fig. 3. Expanding a skeleton vertex v into a graph Gν in the SPQR-tree of Fig. 4b. (a) The single allocation skeleton Gμ of u with the single allocation vertex v of u from Fig. 4b. The neighbors of v are marked in orange. (b) The inserted graph Gν with orange marked vertices. Note that the graph is biconnected when all marked vertices are collapsed into a single vertex. (c) The result of applying InsertGraph(S, u, Gν , φ) followed by an application of Integrate on the generated virtual vertices v and v  .  
   
  5  
   
  Node Expansion in Extended Skeleton Decompositions  
   
  We now introduce the dynamic operation that changes the represented graph by expanding a single vertex u into an arbitrary connected graph Gν . This is done by identifying |N (u)| marked vertices in Gν with the neighbors of u via a bijection φ and then removing u and its incident edges. We use the “occupied stars” from the previous section to model the identiﬁcation of these vertices, allowing us to defer the actual insertion to an application of Integrate. We need to ensure that the inserted graph makes the same “guarantees” to the surrounding graph in terms of connectivity as the vertex it replaces, that is all neighbors of u (i.e. all marked vertices in Gν ) need to be pairwise connected via paths in Gν not using any other neighbor of u (i.e. any other marked vertex). Without this requirement, a single vertex could e.g. also be split into two non-adjacent halves, which could break a triconnected component apart. Thus, we require Gν to be biconnected when all marked vertices are collapsed into a single vertex. Note that this also ensures that the old graph can be restored by contracting the vertices of the inserted graph. For the sake of simplicity, we require vertex u from the represented graph to have a single allocation vertex v ∈ Gμ with origV−1 (u) = {v} so that we only need to change a single allocation skeleton Gμ in the skeleton decomposition. As we will make clear later on, this condition can be satisﬁed easily. Formally, let u ∈ GS be a vertex that only has a single allocation vertex v ∈ Gμ (and thus only a single allocation skeleton Gμ ). Let Gν be an arbitrary, new graph containing |N (u)| marked vertices, together with a bijection φ between the marked vertices in Gν and the neighbors of v in Gμ . We require Gν to be biconnected when all marked vertices are collapsed into a single node. Operation InsertGraph(S, u, Gν , φ) yields an extended skeleton decomposition S  = (G  , origV , origE , twinE , twinV ) as follows, see also Fig. 3. We interpret Gν as skeleton and add it to G  . For each marked vertex x in Gν , we set origV (x) = origV(φ(x)). For all other vertices and edges in Gν , we set origV and origE to point to new vertices and edges forming a copy of Gν in GS  . We connect every marked vertex in Gν to a new virtual vertex v  ∈ Gν using occu-  
   
  210  
   
  S. D. Fink and I. Rutter  
   
  pied edges. We also convert v to a virtual vertex, converting its incident edges to occupied edges while removing parallel edges. Finally, we set twinV (v) = v  and twinV (v  ) = v. Lemma 3 (∗). Applying InsertGraph(S, u, Gν , φ) on an extended skeleton decomposition S yields an extended skeleton decomposition S  with GS  isomorphic to GS [u →φ Gν ]. On its own, this operation is not of much use though, as graph vertices only rarely have a single allocation skeleton. Furthermore, our goal is to dynamically maintain SPQR-trees, while this operation on its own will in most cases not yield an SPQR-tree. To ﬁx this, we introduce the full procedure InsertGraphSPQR (S, u, Gν , φ) that can be applied to any graph vertex u and that, given an SPQR-tree S, yields the SPQR-tree of GS [u →φ Gν ]. It consists of three preparations steps, the insertion of Gν , and two further clean-up steps: 1. We apply SplitSeparationPair to each polygon allocation skeleton of u with more than three vertices, using the neighbors of the allocation vertex of u as separation pair. 2. For each rigid allocation skeleton of u, we move the contained allocation vertex v of u to its own skeleton by applying IsolateVertex(S, v). 3. We exhaustively apply JoinSeparationPair to any pair of allocation skeletons of u that are adjacent in TS . Due to condition 6 (subgraph), this yields a single component Gμ that is the sole allocation skeleton of u with the single allocation vertex v of u. Furthermore, the size of Gμ is linear in deg(u). 4. We apply InsertGraph to insert Gν as skeleton, followed by an application of Integrate to the virtual vertices {v, v  } introduced by the insertion, thus integrating Gν into Gμ . 5. We apply SplitSeparationPair to all separation pairs in Gμ that do not involve a virtual vertex. These pairs can be found in linear time, e.g. by temporarily duplicating all virtual vertices and their incident edges and then computing the SPQR-tree.3 6. Finally, we exhaustively apply Integrate and also apply JoinSeparationPair to any two adjacent polygons and to any two adjacent bonds to obtain the SPQR-tree of the updated graph. The basic idea behind the correctness of this procedure is that splitting the newly inserted component according to its SPQR-tree in step 5 yields biconnected components that are each either a polygon, a bond, or “almost” triconnected. The latter (and only those) might still contain virtual vertices and all their remaining separation pairs, which were not split in step 5, contain one of these virtual vertices. This, together with the fact that there still may be pairs of adjacent skeletons where both are polygons or both are bonds, prevents the instance from being an SPQR-tree. Both issues are resolved in step 6: The adjacent skeletons are obviously ﬁxed by the JoinSeparationPair applications. To show that the virtual vertices are removed by the Integrate applications, making the remaining components triconnected, we need the following lemma. 3  
   
  The wheels replacing virtual vertices in the proof of Theorem 2 also ensure this.  
   
  Maintaining Triconnected Components Under Node Expansion  
   
  211  
   
  Fig. 4. The preprocessing steps of InsertGraphSPQR being applied to the SPQR-tree of Fig. 1b. (a) The state after step 2, after all allocation skeletons of u have been split. (b) The state after step 3, after all allocation skeletons of u have been merged into a single one.  
   
  Lemma 4. Let Gα be a triconnected skeleton containing a virtual vertex vα matched with a virtual vertex vβ of a biconnected skeleton Gβ . Furthermore,   β) be the set of all separation pairs in Gβ . An application of let P ⊆ V (G 2 Integrate(S, (vα , vβ )) yields a biconnected skeleton Gμ with separation pairs / {u, v}}. P  = {{u, v} ∈ P | vβ ∈ Proof. We partition the vertices of Gμ into sets A, B, and N depending on whether the vertex stems from Gα , Gβ , or both, respectively. The set N thus contains the neighbors of vα , which were identiﬁed with the neighbors of vβ . We will show by contradiction that Gμ contains no separation pairs except for those in P  . Thus, consider a separation pair u, v ∈ Gμ not in P  . First, consider the case where u, v ∈ A ∪ N . Observe that removing u, v in this case leaves B connected. Thus, we can contract all vertices of B into a single vertex, reobtain Gα and see that u, v is a separation pair in Gα . This contradicts the precondition that Gα is triconnected. Now consider the case where u, v ∈ B ∪ N . Analogously to above, we ﬁnd that u, v is a separation pair in Gβ that does not contain / P  . Finally, consider the remaining case where, vβ , a contradiction to {u, v} ∈ without loss of generality, u ∈ A, v ∈ B. Since {u, v} is a separation pair, u has two neighbors x, y that lie in diﬀerent connected components of Gμ − {u, v} and therefore also in diﬀerent components of (Gμ − {u, v}) − B which is isomorphic  
   
  to Gα − {u, vα }. This again contradicts Gα being triconnected. Theorem 1. Applying InsertGraphSPQR (S, u, Gν , φ) to an SPQR-tree S yields an SPQR-tree S  in O(|Gν |) time with GS  isomorphic to GS [u →φ Gν ]. Proof. As all applied operations leave the extended skeleton decomposition valid, the ﬁnal extended skeleton decomposition S  is also valid. The purpose of the preprocessing steps 1 to 3 is to ensure that the preconditions of InsertGraph are satisﬁed and the aﬀected component is not too large. All rigids split in step 2 remain structurally unmodiﬁed in the sense that edges only changed their type, but the graph and especially its triconnectedness remains unchanged. Step 4 performs the actual  
   
  212  
   
  S. D. Fink and I. Rutter  
   
  insertion and yields the desired represented graph according to Lemma 3. It thus remains to show that the clean-up steps turn the obtained extended skeleton decomposition into an SPQR-tree. Applying Integrate exhaustively in step 6 ensures that the extended skeleton decomposition is equivalent to a non-extended one. Recall that a non-extended skeleton decomposition is an SPQR-tree if all skeletons are either polygons, bonds or triconnected and two adjacent skeletons are never both polygons or both bonds (Deﬁnition 1). Step 6 ensures that the second half holds, as joining two polygons (or two bonds) with JoinSeparationPair yields a bigger polygon (or bond, respectively). Before step 6, all skeletons that are not an allocation skeleton of u are still unmodiﬁed and thus already have a suitable structure, i.e., they are either polygons, bonds or triconnected. Furthermore, the allocation skeletons of u not containing virtual vertices also have a suitable structure, as their splits were made according to the SPQR-tree in step 5. It remains to show that the remaining skeletons, that is those resulting from the Integrate applications in step 6, are triconnected. Note that in these skeletons, step 5 ensures that every separation pair consists of at least one virtual vertex, as otherwise the computed SPQR-tree would have split the skeleton further. Further note that, for each of these virtual vertices, the matched partner vertex is part of a structurally unmodiﬁed triconnected skeleton that was split in step 2. Lemma 4 shows that applying Integrate does not introduce new separation pairs while removing two virtual vertices if one of the two sides is triconnected. We can thus exhaustively apply Integrate and thereby remove all virtual vertices and thus also all separation pairs, obtaining triconnected components. This shows that the criteria for being an SPQR-tree are satisﬁed and, as InsertGraph expanded u to Gν in the represented graph, we now have the unique SPQR-tree of GS [u →φ Gν ]. All operations we used can be performed in time linear in the degree of the vertices they are applied on. For the bipartition of bridges input to SplitSeparationPair, it is suﬃcient to describe each bridge via its edges incident to the separation pair instead of explicitly enumerating all vertices in the bridge. Thus, the applications of SplitSeparationPair and IsolateVertex in steps 1 and 2 touch every edge incident to u at most once and thus take O(deg(u)) time. Furthermore, they yield skeletons that have a size linear in the degree of their respective allocation vertex of u. As the subtree of u’s allocation skeletons has size at most deg(u), the JoinSeparationPair applications of step 3 also take at most O(deg(u)) time. It follows that the resulting single allocation skeleton of u has size O(deg(u)). The applications of InsertGraph and Integrate in step 4 take time linear in the number of identiﬁed neighbors, which is O(deg(u)). Generating the SPQR-tree of the inserted graph in step 5 (where all virtual vertices where replaced by wheels) can be done in time linear in the size of the inserted graph [10], that is O(|Gν |). Applying SplitSeparationPair according to all separation pairs identiﬁed by this SPQR-tree can also be done in O(|Gν |) time in total. Note that there are at most deg(u) edges between the skeletons that existed before step 4 and those that were created or modiﬁed in steps 4 and 5, and these are the only edges that might now connect two polygons or two bonds.  
   
  Maintaining Triconnected Components Under Node Expansion  
   
  213  
   
  As these tree edges have one endpoint in the single allocation skeleton of u, the applications of Integrate and JoinSeparationPair in step 6 run in O(deg(u)) time in total. Furthermore, they remove all pairs of adjacent polygons and all pairs of adjacent bonds. This shows that all steps take O(deg(u)) time, except for step 5, which takes O(|Gν |) time. As the inserted graph contains at least one  
   
  vertex for each neighbor of u, the total runtime is in O(|Gν |). Corollary 1. Let S1 , S2 be two SPQR-trees together with vertices u1 ∈ GS1 , u2 ∈ GS2 , and let φ be a bijection between the edges incident to u1 and the edges incident to u2 . Operation MergeSPQR (S1 , S2 , u1 , u2 , φ) yields the SPQR-tree of the graph GS1 [u1 →φ GS2 − u2 ], i.e. the union of both graphs where the edges incident to u1 , u2 were identiﬁed according to φ and u1 , u2 removed, in time O(deg(u1 )) = O(deg(u2 )). Proof. Operation MergeSPQR works similar to the more general InsertGraphSPQR , although the running time is better because we already know the SPQR-tree for the graph being inserted. We apply steps 1 to 3 to ensure that both u1 and u2 have sole allocation vertices v1 and v2 , respectively. To properly handle parallel edges, we subdivide all edges incident to u1 , u2 (and thus also the corresponding real edges incident to v1 , v2 ) and then identify the subdivision vertices of each pair of edges matched by φ. By deleting vertices v1 and v2 and suppressing the subdivision vertices (that is, removing them and identifying each pair of incident edges) we obtain a skeleton Gμ that has size O(deg(u1 )) = O(deg(u2 )). Finally, we apply steps 5 and 6 to Gμ to obtain the ﬁnal SPQR-tree. Again, as the partner vertex of every virtual vertex in the allocation skeletons of u is part of a triconnected skeleton, applying Integrate exhaustively in step 6 yields triconnected skeletons. As previously discussed, the preprocessing and clean-up steps run in time linear in degree of the aﬀected vertices, thus the overall runtime  
   
  is O(deg(u1 )) = O(deg(u2 )) in this case. 5.1  
   
  Maintaining Planarity and Vertex Rotations  
   
  Note that expanding a vertex of a planar graph using another planar graph using InsertGraphSPQR (or merging two SPQR-trees of planar graphs using Corollary 1) might actually yield a non-planar graph. This is, e.g., because the rigids of both graphs might require incompatible orders for the neighbors of the replaced vertex. The aim of this section is to eﬃciently detect this case, that is a planar graph turning non-planar. To check a general graph for planarity, it suﬃces to check the rigids in its SPQR-tree for planarity and each rigid allows exactly two planar embeddings, where one is the reverse of the other [6]. Thus, if a graph becomes non-planar through an application of InsertGraphSPQR , this will be noticeable from the triconnected allocation skeletons of the replaced vertex. To be able to immediately report if the instance became non-planar, we need to maintain a rotation, that is a cyclic order of all incident edges, for each vertex in any triconnected skeleton. Note that we do not track the direction of the orders, that is we only store the order up to reversal. As discussed later, the exact orders can also be maintained with a slight overhead.  
   
  214  
   
  S. D. Fink and I. Rutter  
   
  Theorem 2. SPQR-trees support the following operations: – – – –  
   
  InsertGraphSPQR (S, u, Gν , φ): expansion of a single vertex u in time O(|Gν |), MergeSPQR (S1 , S2 , u1 , u2 , φ): merging of two SPQR-trees in time O(deg(u1 )), IsPlanar: queries whether the represented graph is planar in time O(1), and Rotation(u): queries for one of the two possible rotations of vertices u in planar triconnected skeletons in time O(1).  
   
  Proof. Note that the ﬂag IsPlanar together with the Rotation information can be computed in linear time when creating a new SPQR-tree and that expanding a vertex or merging two SPQR-trees cannot turn a non-planar graph planar. We make the following changes to the operations InsertGraphSPQR and MergeSPQR to maintain the new information. After a triconnected component is split in step 2 we now introduce further structure to ensure that the embedding is maintained on both sides. The occupied edges generated around the split-oﬀ vertex v (and those around its copy v  ) are subdivided and connected cyclically according to Rotation(v). Instead of “stars”, we thus now generate occupied “wheels” that encode the edge ordering in the embedding of the triconnected component. When generating the SPQR-tree of the modiﬁed subgraph in step 5, we also generate a planar embedding for all its triconnected skeletons. If no planar embedding can be found for at least one skeleton, we report that the resulting instance is non-planar by setting IsPlanar to false. Otherwise, after performing all splits indicated by the SPQR-tree, we assign Rotation by generating embeddings for all new rigids. Note that for all skeletons with virtual vertices, the generated embedding will be compatible with the one of the neighboring triconnected component, that is, the rotation of each virtual vertex will line up with that of its matched partner vertex, thanks to the inserted wheel. Finally, before applying Integrate in step 6, we contract each occupied wheel into a single vertex to reobtain occupied stars. The creation and contraction of wheels adds an overhead that is at most linear in the degree of the expanded vertex and the generation of embeddings for the rigids can be done in time linear in the size of the rigid. Thus, this does not aﬀect the asymptotic runtime of both operations.  
   
  Corollary 2 (∗). The data structure from Theorem 2 can be adapted to also provide the exact rotations with matching direction for every vertex in a rigid. Furthermore, it can support queries whether two vertices v1 , v2 are connected by at least 3 diﬀerent vertex-disjoint paths via 3Paths(v1 , v2 ) in O((deg(v1 ) + deg(v2 )) · α(n)) time. These adaptions change the runtime of InsertGraphSPQR to O(deg(u) · α(n) + |Gν |), that of MergeSPQR to O(deg(u1 ) · α(n)), and that of Rotation(u) to O(α(n)).  
   
  6  
   
  Application to Synchronized Planarity  
   
  We show how extended skeleton decompositions and their dynamic operation InsertGraphSPQR can be used to improve the runtime of the algorithm for solving Synchronized Planarity by Bläsius et al. [2] from O(m2 ) to O(m · Δ),  
   
  Maintaining Triconnected Components Under Node Expansion  
   
  215  
   
  where Δ is the maximum pipe degree. The algorithm spends a major part of its runtime on computing so-called embedding trees, which describe all possible rotations of a single vertex in a planar graph and are used to communicate embedding restrictions between vertices with synchronized rotation. Once the embedding trees are available, the at most O(m) executed operations run in time linear in the degree of the pipe/vertex they are applied on, that is in O(Δ) [2]. Thus, being able to generate these embedding trees eﬃciently by maintaining the SPQR-trees they are derived from is our main contribution towards the speedup of the Synchronized Planarity algorithm. See the full version [8] for more details on the problems Synchronized and Clustered Planarity. There, we also give a short overview over the operations Bläsius et al. [2] use for solving Synchronized Planarity, which we improve in the proof of Theorem 3. An embedding tree Tv for a vertex v of a biconnected graph G describes the possible cyclic orderings or rotations of the edges incident to v in all planar embeddings of G [4]. The leaves of Tv are the edges incident to v, while its inner nodes are partitioned into two categories: Q-nodes deﬁne an up-to-reversal ﬁxed rotation of their incident tree edges, while P-nodes allow arbitrary rotation; see Fig. 1d. To generate the embedding tree we use the observation about the relationship of SPQR-trees and embedding trees described by Bläsius and Rutter [3, Section 2.5]: there is a bijection between the P- and Q-nodes in the embedding tree of v and the bond and triconnected allocation skeletons of v in the SPQRtree of G, respectively. Note that the detailed constructions for the following statements are given in the respective proofs the full version [8]. Lemma 5 (∗). Let S be an SPQR-tree with a planar represented graph GS . The embedding tree for a vertex v ∈ GS can be found in time O(deg(v)). This can now be used to reduce the runtime of solving Synchronized Planarity by generating an SPQR-tree upfront, maintaining it throughout all applied operations, and deriving any needed embedding tree from the SPQRtree. Theorem 3 (∗). Synchronized Planarity can be solved in time in O(m·Δ), where m is the number of edges and Δ is the maximum degree of a pipe. Proof (Sketch). See the full version [8] for more background on the Synchronized Planarity operations modiﬁed in the following. Operation PropagatePQ expands a vertex into a tree corresponding to the embedding tree of its partner vertex with synchronized rotation. This expansion can also be done in the SPQR-tree without a runtime overhead, while some care needs to be taken when expanding cut-vertices, as diﬀerent parts of the tree need to be expanded in different blocks. Operation EncapsulateAndJoin generates a new bipartite component linear in size to the pipe it removes. Thus, the SPQR-tree for this new component can be computed without a runtime overhead. All other operations do not aﬀect the SPQR-tree and once embedding trees are available, of the at most O(m) applied operations, each takes O(Δ) time [2].  
   
  216  
   
  S. D. Fink and I. Rutter  
   
  Corollary 3 (∗). Clustered Planarity can be solved in time in O(n+d·Δ), where d is the total number of crossings between cluster borders and edges and Δ is the maximum number of edge crossings on a single cluster border.  
   
  References 1. Angelini, P., Bläsius, T., Rutter, I.: Testing mutual duality of planar graphs. Int. J. Comput. Geom. Appl. 24(4), 325–346 (2014). https://doi.org/10.1142/ S0218195914600103 2. Bläsius, T., Fink, S.D., Rutter, I.: Synchronized planarity with applications to constrained planarity problems. In: Proceedings of the 29th Annual European Symposium on Algorithms (ESA’21). LIPIcs, vol. 204, pp. 19:1–19:14 (2021). https:// doi.org/10.4230/LIPIcs.ESA.2021.19 3. Bläsius, T., Rutter, I.: Simultaneous PQ-ordering with applications to constrained embedding problems. ACM Trans. Algorithms 12(2), 16:1–16:46 (2016). https:// doi.org/10.1145/2738054 4. Booth, K.S., Lueker, G.S.: Testing for the consecutive ones property, interval graphs, and graph planarity using PQ-tree algorithms. J. Comput. Syst. Sci. 13(3), 335–379 (1976). https://doi.org/10.1016/s0022-0000(76)80045-1 5. Di Battista, G., Tamassia, R.: On-line maintenance of triconnected components with SPQR-trees. Algorithmica 15(4), 302–318 (1996). https://doi.org/10.1007/ bf01961541 6. Di Battista, G., Tamassia, R.: On-line planarity testing. SIAM J. Comput. 25(5), 956–997 (1996). https://doi.org/10.1137/s0097539794280736 7. Eppstein, D., Galil, Z., Italiano, G.F., Spencer, T.H.: Separator based sparsiﬁcation. J. Comput. Syst. Sci. 52(1), 3–27 (1996). https://doi.org/10.1006/jcss.1996. 0002 8. Fink, S.D., Rutter, I.: Maintaining triconnected components under node expansion (2023). https://arxiv.org/abs/2301.03972 9. Fulek, R., Tóth, C.D.: Atomic embeddability, clustered planarity, and thickenability. J. ACM 69(2), 13:1–13:34 (2022). https://doi.org/10.1145/3502264 10. Gutwenger, C.: Application of SPQR-trees in the planarization approach for drawing graphs. Ph.D. thesis (2010). https://eldorado.tu-dortmund.de/bitstream/ 2003/27430/1/diss_gutwenger.pdf 11. Holm, J., Rotenberg, E.: Fully-dynamic planarity testing in polylogarithmic time. In: Makarychev, K., Makarychev, Y., Tulsiani, M., Kamath, G., Chuzhoy, J. (eds.) Proceedings of the 52nd Annual ACM SIGACT Symposium on Theory of Computing (STOC 2020). vol. abs/1911.03449, pp. 167–180. ACM (2020). https://doi. org/10.1145/3357713.3384249 12. Holm, J., Rotenberg, E.: Worst-case polylog incremental SPQR-trees: embeddings, planarity, and triconnectivity. In: Proceedings of the 31st Annual ACM-SIAM Symposium on Discrete Algorithms (SODA 2020), pp. 2378–2397. SIAM (2020). https://doi.org/10.1137/1.9781611975994.146 13. Weiskircher, R.: New applications of SPQR-trees in graph drawing. Ph.D. thesis, Universität des Saarlandes (2002). https://doi.org/10.22028/D291-25752  
   
  Approximating Power Node-Deletion Problems Toshihiro Fujito(B) , Kneto Mukae, and Junya Tsuzuki Department of Computer Science and Engineering, Toyohashi University of Technology, Toyohashi 441-8580, Japan [email protected]  Abstract. In the Power Vertex Cover (PVC) problem introduced in [1] as a generalization of the well-known Vertex Cover, we are allowed to specify costs for covering edges in a graph individually. Namely, two weights, w(u, v) and w(v, u), are associated with each “edge” {u, v} ∈ E of an input graph G = (V, E), and to cover an edge {u, v}, it is required to assign “power” p ∈ RV on vertices of G s.t. either p(u) ≥ w(u, v) or p(v) ≥ w(v, u). The objective is to minimize the total power assigned on V , v∈V p(v), while covering all the edges of G by p. The node-deletion problem for a graph property π is the problem of computing a vertex subset C ⊆ V of minimum weight, given a graph G = (V, E), s.t. the graph satisﬁes π when all the vertices in C are removed from G. In this paper we consider node-deletion problems extended with the “covering-by-power” condition as in PVC, and present a uniﬁed approach for eﬀectively approximating them. The node-deletion problems considered are Partial Vertex Cover (PartVC), Bounded Degree Deletion (BDD), and Feedback Vertex Set (FVS), each corresponding to graph properties π = “the graph has at most |E| − k edges”, π = “vertex degree of v is no larger than b(v)”, and π = “the graph is acyclic”, respectively. After reducing these problems to the Submodular Set Cover (SSC) problem, we conduct an extended analysis of the approximability of these problems in the new setting of power covering by applying some of the existing techniques for approximating SSC. It will be shown that 1) PPartVC can be approximated within a factor of 2, 2) PBDD for b ∈ ZV+ within max{2, 1 + bmax }, where bmax = maxv∈V b(v), or within 2 + log bmax (for bmax ≥ 1) by a combination of the greedy SSC algorithm and the local ratio method extended for power node-deletion problems, and 3) PFVS within 2, resulting in each of these bounds matching the best one known for the corresponding original problem. Keywords: power cover submodular set cover  
   
  1  
   
  · vertex cover · node-deletion problems ·  
   
  Introduction  
   
  The Vertex Cover (VC) problem is one of the most well-known NP-hard graph problems. Given as an input is an undirected graph G = (V, E), and it Supported in part by JSPS KAKENHI under Grant Number 20K11676. c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  M. Mavronicolas (Ed.): CIAC 2023, LNCS 13898, pp. 217–231, 2023. https://doi.org/10.1007/978-3-031-30448-4_16  
   
  218  
   
  T. Fujito et al.  
   
  is required to compute a minimum vertex subset C ⊆ V s.t. every edge of G is “covered” by some vertex in C. In the “weighted” version, the vertices of G are associated with weights w ∈ RV , and subject to minimize is the sum of weights of vertices in a vertex cover. The decision version is one of Karp’s NP-complete problems [25], and various generalizations have been introduced and subjected for further study, e.g., [12,20,22] just to mention a few. In such a basic model as Vertex Cover, no distinction is made among the edges e ∈ δ(v) ⊆ E all incident to one vertex v ∈ V as far as covering e by v is concerned (Note: δ(v) is the set of edges incident to v); that is, only one of two is possible, whether v covers all in δ(v) (by having v in C) or none (by not having v in C). In a more realistic setting though, the edges in δ(v) may have diﬀerent characteristics so that some are harder to cover from v than others. Power Vertex Cover (PVC) introduced in [1], is such a model reﬂecting more reﬁned conditions: here, each edge {u, v} is a priori associated with a weight w({u, v}), and it can be covered “from u” if and only if u ∈ V has enough power p(u), that is, p(u) ≥ w({u, v}), and can be “from v” if and only if v ∈ V has enough power p(v) of at least w({u, v}). Furthermore, it could be the case that covering {u, v} from u is costlier than doing so from v, or vice versa. To deal with such a more general case, (u, v) and (v, u) for {u, v} ∈ E are distinguished so that it costs w(u, v) to cover {u, v} from u while it costs w(v, u) when covering from v. Power Vertex Cover is such a problem of computing a “power assignment” p : V → R minimizing v∈V p(v), given G = (V, E) and w(u, v), w(v, u) for each {u, v} ∈ E, such that every edge in G is covered by p; that is, either p(u) ≥ w(u, v) or p(v) ≥ w(v, u) holds for all {u, v} ∈ E. It is easy to see that PVC generalizes vertex weighted VC since the latter is a special case of PVC where w(u, v) = “weight of u” for all {u, v} ∈ δ(u). Consider, for instance, setting up surveillance cameras at intersections within a certain district for detecting anomaly throughout all the streets running in the district. In a simplest model we just want to locate a minimum number of intersections for camera installation such that every road segment {u, v} between intersections u and v can be “covered” by at least one camera, set up at one of its end-intersections u and v, and this is the minimum VC problem. In a more realistic model, we use the minimum “weight” VC problem where a vertex weight represents the cost for installing such a camera being able to monitor “all” the road segments incident to the vertex. However, road segments usually have diﬀerent characteristics such as length, width, darkness, straightness, etc.; accordingly, the camera capability required for monitoring them diﬀers from one road segment to another. Thus, while a vertex weight in the minimum weight VC model must represent the cost of a camera capable of monitoring the most demanding road segment among the incident ones so that it can cover “all” the incident road segments at once, a more ﬂexible way of camera installation becomes possible in the power VC model, where the use of low-performance but less expensive cameras covering only some of incident road segments is allowed. It is thus more reasonable and realistic to model the problem by “power” VC  
   
  Approximating Power Node-Deletion Problems  
   
  219  
   
  representing the cost of a camera good enough for monitoring a road segment by the “edge” weight. Angel et al. showed that PVC is approximable within 2 in general and it becomes polynomially solvable when graphs are bipartite [1]. As for the parameterized complexity of PVC, the following algorithms were presented in [2]; O∗ (1.325P )-time algorithm parameterized by the total value P of power, and O∗ (k k )-time algorithm parameterized by the number of vertices k that receive positive power, whereas no nO(t) -time algorithm was shown to exist, unless the ETH is false, when parameterized by the graph’s treewidth t. The node-deletion problem for a graph property π (denoted ND(π)) is a typical graph optimization problem; that is, given a node-weighted graph G, ﬁnd a vertex set of the minimum weight sum whose deletion (along with all the incident edges) from G leaves a subgraph satisfying the property π. A graph property π is hereditary if every subgraph of a graph satisfying π also satisﬁes π. A number of well-studied graph properties are hereditary such as independent set, planar, bipartite, acyclic, degree-constrained, circular-arc, circle graph, chordal, comparability, permutation, perfect. Naturally, many well known graph problems fall into this class of problems when desired graph properties are speciﬁed appropriately. Lewis and Yannakakis proved, however, that ND(π) is NP-hard whenever π is nontrivial and hereditary on induced subgraphs [30], using Vertex Cover as a “core” problem in the class of node-deletion problems. In this paper we consider extending some of the node-deletion problems other than Vertex Cover adopting the “covering-by-power” condition and present a uniﬁed approach for eﬀectively approximating them. The node-deletion problems considered are Partial Vertex Cover (PartVC), Bounded Degree Deletion (BDD), and Feedback Vertex Set (FVS). Partial Vertex Cover is ND(π) for π = “the graph has at most |E| − k edges”, where k can range from 0 to |E|, and it is required to cover only a speciﬁed number k of edges (instead of all) in a given graph. Bounded Degree Deletion with degree bound of b ∈ ZV+ (or b-BDD for short) is ND(π) such that π = “vertex degree of v is no larger than b(v)”. It should be noted that VC is a special case of BDD coinciding with 0-BDD. Feedback Vertex Set (FVS) corresponds to ND(π) for π = “the graph is acyclic”, and all of these are basic graph optimization problems. We call the power cover extension of these problems as Power Partial Vertex Cover (PPartVC), Power Bounded Degree Deletion (PBDD), and Power Feedback Vertex Set (PFVS), respectively, and as Power Node-Deletion for π (PND(π)) in a generic term. ← → ← → Let us introduce the set E of directed edges derived from E s.t. E = {(u, v), (v, u) | {u, v} ∈ E}, to distinguish edge weights w(u, v) from w(v, u) in ← → PND(π), and let w now denote a weight function deﬁned on E . Formally, given ← → in PND(π) is an undirected graph G = (V, E) with edge weights w  : E → R, and it is required to compute a power assignment p ∈ RV minimizing v∈V p(v) s.t. G − E(p) = (V, E − E(p)) satisﬁes π, where E(p) is the set of edges covered by p, i.e., E(p) = {{u, v} ∈ E | either w(u, v) ≤ p(u) or w(v, u) ≤ p(v)}. What we do ﬁrst is to reduce PND(π) to Submodular Set Cover (SSC) and we  
   
  220  
   
  T. Fujito et al.  
   
  call obtained instances of SSC as the SSC formulations of PND(π). By applying some of the existing techniques for approximating SSC we conduct an extended analysis of the approximability of these problems in the new setting of power covering. After observing the factor 2 approximation of Power Vertex Cover as a starter when the current approach is applied, it will be shown that PND(π) can be approximated as good as ND(π) is known to be for those π’s designated above. More speciﬁcally, it will be shown that 1) PPartVC can be approximated within a factor of 2, 2) PBDD for b ∈ ZV+ within max{2, 1 + bmax }, where where bmax = maxv∈V b(v), and 3) PFVS within 2. It will be additionally shown that the approximation bound for PBDD can be further reduced to 2 + log bmax (for bmax ≥ 1) by a combination of the greedy SSC algorithm and the local ratio technique extended for power node-deletion problems. 1.1  
   
  Known Results on VC, PartVC, BDD, and FVS  
   
  It has been long known that Vertex Cover (VC) can be approximated within a factor of 2 (achievable by a simple maximal matching heuristic [21] for the unweighted case), and a better approximation has been a subject of extensive research over the years. Yet the best constant bound has remained the same at 2 while the best known algorithm can accomplish only slightly better, within a   factor of 2 − Θ 1/ log |V | [24]. On the other hand, Vertex Cover, known to be APX-complete, cannot be approximated within 2 −  for any  > 0 [29] if the unique games conjecture [26] holds, and √ it is currently known impossible to approximate it in polynomial time within 2 −  for any  > 0 unless P=NP [13, 27,28]. In Partial Vertex Cover (PartVC) it is required to cover only a speciﬁed number k of edges (instead of all) in a given graph. This “truncated” version of VC was shown to remain approximable with a factor of 2, the best constant bound known for VC, in [8,16]. The time  complexity of these algorithms |V |2 was later improved to O |E||V | log |V | log |E| [23], and then to O(|V |2 ) [5]. Bounded Degree Deletion (BDD) has an application in computational biology [14] as well as in the area of property testing [33], whereas its “dual problem” of ﬁnding maximum s-plexes [35] has applications in social network analysis [4,32]. For b-BDD with b ∈ Z+ , where the degree bound is uniformly equal to b ∈ Z+ over all the vertices, the approximation bound of (b + 2) implied by the hitting set formulation was ﬁrst improved to max{2, b + 1} by the local ratio method [17], and then to max{2, b/2 + 1} [19]. Okun and Barak considered general b-BDD where b ∈ ZV+ is an arbitrary function, and obtained an approximation bound of 2 + log bmax by combination of the local ratio method and the greedy multicovering method [34]. More recently, b-BDD has been extensively studied for its parameterized complexity. It has been shown that, when parameterized by the size k of the deletion set, the problem is W [2]-hard for unbounded b and FPT for each ﬁxed b ≥ 0 [14], whereas, when parameterized by treewidth t, it is FPT with parameters k and t, and W [2]-hard with only parameter t [7]. A linear vertex kernel of b-BDD has been developed by generalizing the Nemhauser-Trotter theorem for Vertex Cover to b-BDD [11,14,37].  
   
  Approximating Power Node-Deletion Problems  
   
  221  
   
  Besides, 2-BDD has been recently highlighted under the name of Co-Path/Cycle Packing [10,11,15], mostly from the viewpoint of parameterized complexity, due to its important applications in bioinformatics. Feedback Vertex Set (FVS), being the problem of hitting all the cycles existent in a given graph, is another fundamental problem in graph theory, and the decision version is one of Karp’s NP-complete problems [25]. It is easy to see that FVS generalizes VC and inherits not only the NP-hardness but also the approximation hardness from it. While it was shown approximable within 2 [3,6] matching the best constant factor for VC, much of the interest has shifted more recently to the parameterized complexity and we now have enormous amount of results on parameterization of FVS. In fact it was even stated in [9] that the number of parameterized algorithms for FVS published then in the literature exceeds the number of parameterized algorithms for any other single problem. 1.2  
   
  Notation and Definitions  
   
  For any graph G let V (G) and E(G) denote the vertex set and the edge set of G, respectively. For an edge subset X ⊆ E of G = (V, E) the subgraph of which edge set limited to X is denoted by G[X] = (V, X) and the one obtained by deleting all the edges in X from G by G − X. The set of edges incident to some vertex in X is denoted by δ(X) and δ(u) means δ({u}). The degree of a vertex u in G is denoted by d(u) = |δ(u)|. The set of neighboring vertices of u, i.e., {v ∈ V | {u, v} ∈ E}, is denoted by Γ (u).  
   
  2  
   
  Power Node-Deletion and Submodular Set Cover  
   
  Let N be a ﬁnite set and f : 2N → R a real valued function deﬁned on the subsets of N . The set-function f is called submodular if the following inequality holds for any two subsets X and Y of N : f (X ∩ Y ) + f (X ∪ Y ) ≤ f (X) + f (Y ). The formal framework of the Submodular Set Cover (SSC) problem is described as follows. A problem instance consists of a ﬁnite set N , a nonnegative cost cj associated with each element j ∈ N , and a nondecreasing submodular function f : 2N → Z+ (for simplicity f is assumed to be nonnegative integer valued). The problem is then that of ﬁnding a spanning set of minimum cost, that is, ⎫ ⎧  
   
  ⎬ ⎨  
   
  cj  
   
  f (S) = f (N ) (SSC) min S⊆N ⎩ ⎭  
   
  j∈S  
   
  222  
   
  T. Fujito et al.  
   
  Algorithm 1. Primal-dual algorithm PD for SSC Initialize S = ∅, y = 0, l = 0 while S is not a solution of SSC (i.e., f (S) < f (N )) do l ←l+1      wj − 1≤k≤l−1 fSk (j)ySk wj − X:j∈X,X=S fX (j)yX = jl ← arg min j∈N −S fS (j) fS (j)  Increase yS until the dual constraint corresponding to j becomes tight for some j ∈ S     wjl − X:jl ∈X,X=S fX (jl )yX wjl − 1≤k≤l−1 fSk (jl )ySk = yS ← fS (jl ) fS (jl ) Add jl into S (and let Sl ← S) for k = l downto 1 do if S − {jk } is a solution of SSC then remove jk from S Output S  
   
  A primal-dual heuristic based on the following IP formulation of SSC is known eﬀective among others for a certain type of SSC: wj xj min j∈N  
   
  (IP)  
   
  subject to:  
   
  fS (j)xj ≥ fS (N − S)  
   
  j∈N −S  
   
  xj ∈ {0, 1}  
   
  S⊆N j∈N  
   
  and the dual of its linear relaxation: max fS (N − S)yS S⊆N  
   
  (D)  
   
  subject to:  
   
  fS (j)yS ≤ wj  
   
  S:j∈S  
   
  yS ≥ 0  
   
  j∈N S⊆N  
   
  where fS is the contraction of f onto N − S for any S ⊆ N , that is the function deﬁned on 2N −S s.t. fS (X) = f (X ∪ S) − f (S). Definition 1. We say that X ⊆ N is a minimal solution for a SSC instance (N, f, c) iﬀ – f (X) = f (N ), i.e., X is a solution for (N, f, c), and – f (X − {x}) < f (N ), ∀x ∈ X. The resulting primal-dual algorithm called PD is given in Algorithm 1, and its performance can be estimated by the following combinatorial bound:  
   
  Approximating Power Node-Deletion Problems  
   
  223  
   
  Theorem 1 ([18]). The algorithm PD  computes a SSC solution for (N, f, c)   j∈X fS ({j}) approximating within a factor of max , where max is taken fS (N − S) over any S ⊆ N and any minimal solution X for (N − S, fS ). 2.1  
   
  Submodular Set Cover Formulation  
   
  Let us consider reducing PND(π) to SSC, starting with a simple observation. Let Wu = {w(u, v) | {u, v} ∈ δ(u)} be the set of weights of edges “out-going” from a vertex u. Then, we may assume w.l.o.g. that p(u) ∈ Wu ∪ {0} for any solution p ∈ RV of PND(π) since an assignment of any other value to p(u) yields some redundancies. This observation allows us to consider power covering of a graph to be the problem of covering edges by the weighted edge subsets of the following form: Deﬁne δw (u, v) ⊆ δ(u) for {u, v} ∈ δ(u) to be the set of edges {u, x} incident to u of which (u, x)-weight w(u, x) is no larger than w(u, v), i.e., δw (u, v) = {{u, x} ∈ δ(u) | w(u, x) ≤ w(u, v)}. ← →  
   
  Extending the edge weight function w ∈ R E to the edge “subset” weight function, the weight w(δw (u, v)) of δw (u, v) is set equal to w(u, v). ← → Proposition 1. For G = (V, E) and w : E → R let N = {δw (u, v) | (u, v) ∈ ← → ← → E } and c(δw (u, v)) = w(δw (u, v)) = w(u, v), ∀(u, v) ∈ E . Suppose we have a nondecreasing submodular function f : 2N → Z s.t.   G − S = (V, E − S) satisﬁes π if and only if f (S) = f (N ).    for any G and S ⊆ N , where S denotes x∈S x = δw (u,v)∈S δw (u, v) for S ⊆ N . Then, PND(π) on an instance of (G, w) is equivalent to SSC on an instance of (N, f, c).  
   
  We say that (N, f, c) thus obtained from a PND(π) instance of (G, w) is a SSC formulation of PND(π). Throughout the paper, N and c will be set as in Proposition 1 from (G, w) regardless of π, whereas f needs to be suitably chosen depending on speciﬁcs of π. Let us consider a SSC formulation (N, f, c) of PND(π) and applying Theorem 1 to it. To do so, we introduce the following “consistency condition” for a submodular system (N, f ): ← → Definition 2. For G = (V, E), N = {δ w (u, v) | (u, v) ∈ E }, S ⊆ N, and X ⊆ the set {x \ S | x ∈ X} and f\S be f deﬁned on N −S, let X\S denote  G− S = (V, E − S) by the same formulation. We say that a SSC formulation (N, f, c) of PND(π) is consistent if fS (X) = f\S (X\S ) for any S ⊆ N and X ⊆ N − S. Corollary 1 (of Theorem 1). If (N, f, c) is a consistent SSCformulation of   j∈X f (j) PND(π), PND(π) can be approximated within a factor of max by f (N ) PD, where max is taken over any graph G and any minimal solution X ⊆ N in (N, f ).  
   
  224  
   
  T. Fujito et al.  
   
  Proof. Due to Theorem 1 we can  say that the  algorithm PD approximates f (j) S j∈X PND(π) within a factor of max , where max is taken over any fS (N − S) graph G, any S ⊆ N and any minimal solution X in (N − S, fS ). Since (N, f ) here is consistent, the SSC system (N −S, fS ) coincides with the SSC formulation ((N − S)\S , f\S ) of G − S = (V, E − S). Hence,     S) j\ S∈X\S f\S (j \ j∈X fS (j) = fS (N − S) f\S ((N − S)\S )     j∈X fS (j) j∈X f (j) and max can be upper bounded by max by takfS (N − S) f (N ) ing the latter max over any graph G and any minimal solution X for (N, f ).  
   
  The minimality of a solution often plays a crucial role in the analysis of the performance of PD, and the next is an easy but useful observation for minimal solutions; any two members of N cannot together belong to any minimal solution if both are subsets of δ(v) for some v ∈ V . Observation 1. Suppose {u, v} and {u, v } are two distinct edges in δ(u). Then, δw (u, v) ∈ X or δw (u, v ) ∈ X if X is a minimal solution for (N, f ) (since either δw (u, v) ⊆ δw (u, v ) or δw (u, v ) ⊆ δw (u, v)). It follows from Observation 1 that a minimal solution X contains at most one subset of δ(u) for each u ∈ V .  
   
  3  
   
  Power (Partial) Vertex Cover  
   
  Let us start with the most basic problem of power node-deletion, Power Vertex Cover (PVC). Angel et al. designed a 2-approximation algorithm for it using the matching techniques [1]. We will show here that the same approxima tion bound follows from the current approach by simply setting f (S) = | S| for S ⊆ N . Since f is clearly a nondecreasing submodular function and  f (S) = f (N ) = |E| iﬀ G − S has no edge in it, (N, f, c) is a SSC formulation of PVC. Moreover, since  
   
     
   
     

  S  
   
  fS (X) = f (X ∪ S) − f (S) = (X ∪ S) − S = X −  for X ⊆ N − S, fS coincides with f on G − S. Theorem 2. PVC can be approximated within 2 by PD. Proof. Since f is consistent, it suﬃces to show, due to Corollary 1, that |x| ≤ 2 · f (N ) = 2 · |E| x∈X  
   
  for any minimal solution X for G = (V, E). Since any edge of E can belong to at most two members of X if X isminimal (see Observation 1), every edge of E can be counted at most twice in x∈X |x|.  

  Approximating Power Node-Deletion Problems  
   
  225  
   
  Consider next the partial vertex cover problem, in which a minimum weight set of vertices covering k edges is soughtfor some speciﬁed integer k. We deﬁne f : N → Z for PPartVC s.t. f (S) = min {| S| , k}. Then, f is clearly nondecreasing and submodular. Besides,  
   
         

  fS (X) = min (X ∪ S) , k − min S , k   0 if | S| ≥ k =    min {| X − S| , k − | S|} otherwise for X ⊆ N − S. So, f is consistent and the problem reduces to SSC on (N, f ).  ← → Lemma 1. Let N = {δw (u, v) | (u, v) ∈ E }, and f (S) = min {| S| , k} for S ⊆ N . Then, x∈X f ({x}) ≤ 2 · f (N ) for any minimal solution X ⊆ N for SSC (N, f, w).  Proof. Since N = E, f (N ) = k. Suppose there exists x ∈ X with |x | ≥ k.  Then, minimal X can contain no other element, and x∈X f (x) = min{|x |, k} = k ≤ 2k. Assuming  that |X| ≥ 2 and f ({x}) = min{|x|, k} = |x|, ∀x ∈ X, let x \ X denote x − (X − x), that is, the set of edges covered only by x.  Since X is a minimal solution, X − x is not a solution for all x ∈ X, and hence, | (X − x)| =  | X| − |x \ X| < k, ∀x ∈ X. Summing over all x’s in X,  
   
      
   
    

  |x \ X|  
   
  X − |x \ X| = |X| X − x∈X  
   
  x∈X  
   
    
   
    

  |x \ X| + (|X| − 1) |x \ X| = |X| X −   
   
  x∈X  
   
  x∈X  
   
  < k|X| Multiplying both sides of the inequality by 2/|X|, we have    
   
   2(|X| − 1)  

  2k > 2 X − |x \ X| + |x \ X| |X| x∈X x∈X    
   
    

  |x \ X| + |x \ X| ≥ 2 X − x∈X  
   
  x∈X  
   
  since |X| ≥ 2. Observe that x \ X and x \ X are disjoint for x, x ∈ X if  and that x∈X (x \ X) is the set of edges covered only once by X while x = x ,  X − x∈X (x \ X) is the set of those covered twice by X. Thus,    
   
    

  f ({x}) = |x| = 2 X − |x \ X| + |x \ X|, x∈X  
   
  and it follows that  
   
    
   
  x∈X  
   
  x∈X  
   
  x∈X  
   
  x∈X f ({x}) ≤ 2k.  
   
  It is immediate that Theorem 3. PPartVC can be approximated within 2 by PD.  

  226  
   
  4  
   
  T. Fujito et al.  
   
  Power Bounded Degree Deletion  
   
  For b-PBDD with π = “the degree of vertex v is bounded by b(v)”, let us deﬁne f : 2N → Z+ s.t. . b(v)} min {d(v; S), d(v) − f (S) = v∈V  
   
    

  d(x; S) = δ(x) ∩ S  
   
    . is the vertex degree of x ∈ V in G[ S] = (V, S),  and x − y =max{x − y, 0}. Easily, every vertex degree is ≤ b(v)  in G −  S = (V, E − . S) if and only if every vertex degree of v ∈ V in G[ S] = (V, S) is ≥ d(v) − b(v), which in turn holds if and only if . b(v)) = f (N ). (d(v) − f (S) = where  
   
  v∈V  
   
    
   
  To show that minS⊆N s∈S w(s) f (S) = f (N ) is actually an instance of SSC for N and f thus deﬁned, it remains to prove that f is a nondecreasing submodular function on 2N .   
   
  Lemma 2. The set function f : 2N → Z+ is nondecreasing and submodular. Proof. It suﬃces to show that d(x; S) at any ﬁxed vertex x ∈ V , when seen as a function on 2N , is nondecreasing and submodular. Clearly, d(x; S) is nondecreasing at any x. To verify submodularity of d(x; S), the following characterization of submodularity is helpful: Proposition 2 (Lov´ asz [31]). Let g be a set-function deﬁned on all subsets of N . Then g is submodular if and only if the derived set-functions ga (X) = g(X ∪ {a}) − g(X)  
   
  (X ⊆ N − {a})  
   
  are monotone decreasing for all a ∈ N .  
   
  ← → Letting a = δw (y, z) for any (y, z) ∈ E and S ⊆ T ⊆ N − {a}, consider fa (S) and fa (T ) for f = d(x; ∗). The values of fa (S) and fa (T ) are increments of the f -value when a is added to S and T , respectively; we may write fa (S) = d(x; S ∪ {δw (y, z)}) − d(x; S)  
   
     
   
    

  S ∪ δw (y, z) − δ(x) ∩ S  
   
  = δ(x) ∩  
   
      

  = δw (y, z) ∩ δ(x) − S  
   
      

  fa (T ) = δw (y, z) ∩ δ(x) − T  
   
    Since S ⊆ T , S ⊆ T , and hence, fa (S) ≥ fa (T ) for all a ∈ N . This shows that d(x; ∗) is submodular at any x ∈ V . and  
   
  Approximating Power Node-Deletion Problems  
   
  227  
   
  Proposition 3 (see, e.g., [31]). Let g and h be submodular set-functions s.t. g − h is nondecreasing (or nonincreasing). Then, min{g, h} is also submodular.  
   
  . b(x)} is submodular since d(x; ∗) is nondeIt follows that min{d(x; ∗), d(x) − . creasing, and so is d(x; ∗) − (d(x) − b(x)). . Finally, f (S) = v∈V min {d(v; S), d(v) − b(v)}, the sum of submodular . min{d(x; ∗), d(x) −b(x)}’s, is submodular since the sum of submodular functions is submodular.  
   
  Therefore, Proposition 4. b-PBDD on (G = (V, E), w) can be reduced to SSC on ← → (N, f : 2N → Z+ , c), where N = {δw (u, v) | (u, v) ∈ E }, c(δw (u, v)) =  ← → . b(v)}, ∀S ⊆ N . w(u, v), ∀(u, v) ∈ E , and f (S) = v∈V min{d(v; S), d(v) −  
   
  To apply Corollary 1 to b-PBDD we need the following lemma: ← → Lemma3. Let N = {δw (u, v) | (u, v) ∈ E }, and deﬁne f : 2N → Z+ s.t. . b(v)} for S ⊆ N . If b min{d(v; S), d(v) − ≥ 1, f (S) = max  
   
  v∈V  

  f ({x}) ≤ (bmax + 1) f (N )  
   
  x∈X  
   
  for any minimal solution X ⊆ N for the SSC instance (N, f, c). Proof. Omitted due to space constraints.  

  Once this key lemma is proven, it is straightforward to obtain the approximation bound of PD for b-PBDD: Theorem 4. b-PBDD can be approximated within max{2, bmax + 1} by PD. Proof. To apply Corollary 1 to b-PBDD, we need to verify that f deﬁned as above is consistent (of which proof is omitted).  The approximation bound guaranteed by Corollary 1 refers to the ratio of j∈X fS ({j}) and fS (N − S), and is a SSC instance corresponding to the b-PBDD instance on the (N − S, fS , c )  subgraph G − S of G. This ratio is no larger than (bmax + 1) on an arbitrary graph according to Lemma 3 as long as bmax ≥ 1. Besides, it can be veriﬁed, by the essentially same analysis as for PVC, that this ratio is no larger than 2 when  
   
  bmax = 0. Hence, the approximation bound of PD for b-PBDD is as claimed. 4.1  
   
  Combination of Greedy and Local Ratio  
   
  It is well-known that the greedy algorithm as given in Algorithm 2 is quite eﬀective for approximating SSC.  
   
  228  
   
  T. Fujito et al.  
   
  Algorithm 2. Greedy algorithm Greedy for SSC Initialize S = ∅ while S is not a solution of SSC (i.e., f(S) < f (N )) do  c(j) to S Add arg min j∈N −S f (S ∪ {j}) − f (S) Output S  
   
  Theorem 5 (Wolsey [36]). When f is integer-valued with f (∅)= 0, the algo rithm Greedy approximates SSC (N, f, w) within a factor of H max f ({j}) , j∈N  
   
  where H(k) =  
   
  k 1 i=1  
   
  i  
   
  for a positive integer k.  
   
  The local ratio method is another standard technique for approximating general ND(π). For a graph G = (V, E) and a vertex u ∈ V , let Su denote the subgraph u-star of G centered at u; that is, Su = (V (Su ), E(Su )) = ({u} ∪ Γ (u), {{u, v} | v ∈ Γ (u)}). If d(u) = |Γ (u)| > b(u) then Su is a forbidden subgraph for π = “degree of every vertex v is bounded by b(v)”. Consider the ← → edge weight function w on E for such a forbidden graph Su , corresponding to the assignment of ⎧ ⎪ ⎨(d(u) − b(u)) if v = u, p(v) =  if v ∈ Γ (u), ⎪ ⎩ 0 otherwise, s.t. w (e) =  
   
  ⎧ ⎪ (d(u) − b(u)) ⎪ ⎪ ⎨   
   
  ⎪ min{, w(v, x)} ⎪ ⎪ ⎩0  
   
  ← → if e = (u, v) ∈ E (Su ), ← → if e = (v, u) ∈ E (Su ), ← → if e = (v, x) ∈ E (Su ), v ∈ Γ (u), otherwise.  
   
  (1)  
   
  where a positive constant  is taken as large as possible without w (e) exceeding ← → w(e) at any e ∈ E . Following the approach of Okun and Barak [34], we apply the local ratio approximation to forbidden u-stars Su , as long as there remains such Su with relatively large d(u) − b(u). When such Su ’s are exhausted, we switch to the greedy method Greedy and complete our approximation. The point at which we switch from the local ratio approximation to the greedy one is where d(u)/b(u) = 1 + 1/ log b(u). In the ﬁrst half where d(u)/b(u) > 1 + 1/ log b(u) at some u-star Su , we apply the local ratio algorithm to Su . Then, in the second half where d(v)/b(u) ≤ 1 + 1/ log b(u) at every vertex v, we initiate running Greedy. While all the details are omitted here due to space constraints, the resulting algorithm Comb as given in Algorithm 3 can be shown to deliver improved approximation: Theorem 6. b-PBDD can be approximated by Comb within 2 + log bmax when bmax > 1, and within 7/3 when bmax = 1.  
   
  Approximating Power Node-Deletion Problems  
   
  229  
   
  Algorithm 3. Combined algorithm Comb for b-PBDD Input: (G = (V, E), w) Initialize: F = ∅ while ∃u ∈ V s.t. (d(u)/b(u) > 1 + 1/ log b(u) with b(u) ≥ 2) or (d(u) > 3 with b(u) = 1) or (d(u) > 0 with b(u) = 0) do  
   
   ← min v∈Γ (u) {w(u, v), w(v, u)} Deﬁne w according to eq. (1) ← → F  ← {(u, v) ∈ E | w (u, v) = w(u, v)} w ← w − w F ← F ∪F E ← E − F while ∃u ∈ V with d(u) > b(u) do Run Greedy  
   
  5  
   
  Power Feedback Vertex Set  
   
  ← → Letting again N = {δw (u, v) | (u, v) ∈ E } for (G = (V, E), w), we now turn to PFVS, that is PND(π) with π = “the graph is acyclic”. Let M (G) = (E, r) be the cycle matroid of G = (V, E) and M d (G) = (E, rd ) be the dual matroid of M (G), where r : 2E → Z+ and rd : 2E → Z+ are the rank functions of M (G) and M d (G), respectively.  Proposition 5. Deﬁne f : 2N → Z+ s.t. f (S) = rd ( S), ∀S ⊆ N . Then, PFVS on (G = (V, E), w) can be formulated by SSC (N, f, c), where c(δw (u, v)) = ← → w(u, v), ∀(u, v) ∈ E .  Proof. Since rd is nondecreasing and submodular, so is f . The set S of  edges d d (G) iﬀ f (S) = r ( S) = covered by S is spanning in the dual matroid M   rd (E) = f (N ), and S is spanning in M d (G) iﬀ E − S is independent  in M (G), the cycle matroid of G, that is, the graph G − S = (V, E − S) is acyclic. Therefore, (N, f, c) is a SSC formulation of PFVS on (G, w) when ← → c(δw (u, v)) = w(u, v), ∀(u, v) ∈ E .  
   
   Lemma 4. Let f (S) = rd ( S) for S ⊆ N . Then,  f ({x}) = rd (δw (u, v)) ≤ 2 · f (N ) = rd ( N ) = rd (E) x∈X  
   
  δw (u,v)∈X  
   
  for any minimal solution X ⊆ N for the SSC instance (N, f, c). Proof. Omitted due to space constraints.  

  Theorem 7. PFVS can be approximated within 2 by PD. Proof. To apply Corollary 1 to PFVS, we need to verify that f deﬁned as above is consistent (of which proof is omitted). It follows from Corollary 1 and Lemma 4 that PFVS can be approximated within 2 by PD.  

  230  
   
  T. Fujito et al.  
   
  References 1. Angel, E., Bampis, E., Chau, V., Kononov, A.: Min-power covering problems. In: Elbassioni, K., Makino, K. (eds.) ISAAC 2015. LNCS, vol. 9472, pp. 367–377. Springer, Heidelberg (2015). https://doi.org/10.1007/978-3-662-48971-0 32 2. Angel, E., Bampis, E., Escoﬃer, B., Lampis, M.: Parameterized power vertex cover. In: Heggernes, P. (ed.) WG 2016. LNCS, vol. 9941, pp. 97–108. Springer, Heidelberg (2016). https://doi.org/10.1007/978-3-662-53536-3 9 3. Bafna, V., Berman, P., Fujito, T.: A 2-approximation algorithm for the undirected feedback vertex set problem. SIAM J. Discrete Math. 12(3), 289–297 (1999) 4. Balasundaram, B., Butenko, S., Hicks, I.V.: Clique relaxations in social network analysis: the maximum k-plex problem. Oper. Res. 59(1), 133–142 (2011) 5. Bar-Yehuda, R.: Using homogeneous weights for approximating the partial cover problem. J. Algorithms 39(2), 137–144 (2001) 6. Becker, A., Geiger, D.: Optimization of Pearl’s method of conditioning and greedylike approximation algorithms for the vertex feedback set problem. Artif. Intell. 83(1), 167–188 (1996) 7. Betzler, N., Bredereck, R., Niedermeier, R., Uhlmann, J.: On bounded-degree vertex deletion parameterized by treewidth. Discrete Appl. Math. 160(1–2), 53–60 (2012) 8. Bshouty, N.H., Burroughs, L.: Massaging a linear programming solution to give a 2-approximation for a generalization of the vertex cover problem. In: Morvan, M., Meinel, C., Krob, D. (eds.) STACS 1998. LNCS, vol. 1373, pp. 298–308. Springer, Heidelberg (1998). https://doi.org/10.1007/BFb0028569 9. Cao, Y.: A naive algorithm for feedback vertex set. In: 1st Symposium on Simplicity in Algorithms, volume 61 of OASIcs Open Access Series Informatics, Article no. 1, p. 9. Schloss Dagstuhl. Leibniz-Zent. Inform., Wadern (2018) 10. Chauve, C., Tannier, E.: A methodological framework for the reconstruction of contiguous regions of ancestral genomes and its application to mammalian genomes. PLoS Comput. Biol. 4(11), e1000234 (2008) 11. Chen, Z.-Z., Fellows, M., Fu, B., Jiang, H., Liu, Y., Wang, L., Zhu, B.: A linear kernel for co-path/cycle packing. In: Chen, B. (ed.) AAIM 2010. LNCS, vol. 6124, pp. 90–102. Springer, Heidelberg (2010). https://doi.org/10.1007/978-3-64214355-7 10 12. Chuzhoy, J., Naor, J.: Covering problems with hard capacities. SIAM J. Comput. 36(2), 498–515 (2006) 13. Dinur, I., Khot, S., Kindler, G., Minzer, D., Safra, M.: Towards a proof of the 2-to1 games conjecture? In: STOC’18–Proceedings of the 50th Annual ACM SIGACT Symposium on Theory of Computing, pp. 376–389. ACM, New York (2018) 14. Fellows, M.R., Guo, J., Moser, H., Niedermeier, R.: A generalization of Nemhauser and Trotter’s local optimization theorem. J. Comput. System Sci. 77(6), 1141–1158 (2011) 15. Feng, Q., Wang, J., Li, S., Chen, J.: Randomized parameterized algorithms for P2 packing and co-path packing problems. J. Comb. Optim. 29(1), 125–140 (2015) 16. Fujito, T.: A uniﬁed local ratio approximation of node-deletion problems. In: Proceedings of the ESA’96, pp. 167–178 (1996) 17. Fujito, T.: A uniﬁed approximation algorithm for node-deletion problems. Discrete Appl. Math. 86(2–3), 213–231 (1998) 18. Fujito, T.: On approximation of the submodular set cover problem. Oper. Res. Lett. 25(4), 169–174 (1999)  
   
  Approximating Power Node-Deletion Problems  
   
  231  
   
  19. Fujito, T.: Approximating bounded degree deletion via matroid matching. In: Fotakis, D., Pagourtzis, A., Paschos, V.T. (eds.) CIAC 2017. LNCS, vol. 10236, pp. 234–246. Springer, Cham (2017). https://doi.org/10.1007/978-3-319-57586-5 20 20. Garey, M.R., Johnson, D.S.: The rectilinear steiner tree problem is NP-complete. SIAM J. Appl. Math. 32(4), 826–834 (1977) 21. Gavril, F.: Cited in [20, page 134] (1974) 22. Hassin, R., Levin, A.: The minimum generalized vertex cover problem. ACM Trans. Algorithms 2(1), 66–78 (2006) 23. Hochbaum, D.S.: Approximating clique and biclique problems. J. Algorithms 29(1), 174–200 (1998) 24. Karakostas, G.: A better approximation ratio for the vertex cover problem. ACM Trans. Algorithms 5(4), 8 (2009) 25. Richard, M.K.: Reducibility among combinatorial problems. In: Complexity of computer computations (Proceeding Symposium, IBM Thomas J. Watson Research Center, Yorktown Heights, New York, 1972), pp. 85–103 (1972) 26. Khot, S.: On the power of unique 2-prover 1-round games. In: Proceedings of the 34th Annual ACM Symposium on Theory of Computing, pp. 767–775. ACM, New York (2002) 27. Khot, S., Minzer, D., Safra,M.: On independent sets, 2-to-2 games, and Grassmann graphs. In STOC’17–Proceedings of the 49th Annual ACM SIGACT Symposium on Theory of Computing, pp. 576–589. ACM, New York (2017) 28. Khot, S., Minzer, D., Safra, M.: Pseudorandom sets in Grassmann graph have nearperfect expansion. In: 59th Annual IEEE Symposium on Foundations of Computer Science–FOCS 2018, pp. 592–601. IEEE Computer Soc., Los Alamitos, CA (2018) 29. Khot, S., Regev, O.: Vertex cover might be hard to approximate to within 2 − . J. Comput. System Sci. 74(3), 335–349 (2008) 30. Lewis, J.M., Yannakakis, M.: The node-deletion problem for hereditary properties is NP-complete. J. Comput. System Sci. 20(2), 219–230 (1980) 31. Lov´ asz, L.: Submodular functions and convexity. In: Bachem, A., Korte, B., Gr¨etschel, M. (eds.) Mathematical Programming: The State of the Art, pp. 235– 257. Springer, Berlin (1983) 32. Moser, H., Niedermeier, R., Sorge, M.: Exact combinatorial algorithms and experiments for ﬁnding maximum k-plexes. J. Comb. Optim. 24(3), 347–373 (2012) 33. Newman, I., Sohler, C.: Every property of hyperﬁnite graphs is testable. SIAM J. Comput. 42(3), 1095–1112 (2013) 34. Okun, M., Barak, A.: A new approach for approximating node deletion problems. Inform. Process. Lett. 88(5), 231–236 (2003) 35. Seidman, S.B., Foster, B.L.: A graph-theoretic generalization of the clique concept. J. Math. Sociol. 6(1), 139–154 (1978) 36. Wolsey, L.A.: An analysis of the greedy algorithm for the submodular set covering problem. Combinatorica 2(4), 385–393 (1982) 37. Xiao, M.: On a generalization of Nemhauser and Trotter’s local optimization theorem. J. Comput. System Sci. 84, 97–106 (2017)  
   
  Phase Transition in Count Approximation by Count-Min Sketch with Conservative Updates ´ Eric Fusy and Gregory Kucherov(B) LIGM, CNRS, Univ. Gustave Eiﬀel, Marne-la-Vall´ee, France {Eric.Fusy,Gregory.Kucherov}@univ-eiffel.fr Abstract. Count-Min sketch is a hashing-based data structure to represent a dynamically changing associative array of counters. We analyse the counting version of Count-Min under a stronger update rule known as conservative update, assuming the uniform distribution of input keys. We show that the accuracy of conservative update strategy undergoes a phase transition, depending on the number of distinct keys in the input as a fraction of the size of the Count-Min array. We prove that below the threshold, the relative error is asymptotically o(1) (as opposed to the regular Count-Min strategy), whereas above the threshold, the relative error is Θ(1). The threshold corresponds to the peelability threshold of random k-uniform hypergraphs. We demonstrate that even for small number of keys, peelability of the underlying hypergraph is a crucial property to ensure the o(1) error. To our knowledge, this relationship has not been observed previously. Finally, we provide experimental data on the behavior of the average error for Zipf’s distribution compared with the uniform one.  
   
  1  
   
  Introduction  
   
  Count-Min sketch is a hash-based data structure to represent a dynamically changing associative array a of counters in an approximate way. The array a can be seen as a mapping from some set K of keys to N, where K is drawn from a (large) universe U . The goal is to support point queries about the (approximate) current value of a(p) for a key p. Count-Min is especially suitable for the streaming framework, when counters associated to keys are updated dynamically. That is, updates are (key,value) pairs (p, ) with the meaning that a(p) is updated to a(p) + . Count-Min sketch was proposed in [13], see e.g. [11] for a survey. A similar data structure was introduced earlier in [10] named Spectral Bloom filter, itself closely related to Counting Bloom filters [20]. The diﬀerence between CountMin sketch and Spectral Bloom ﬁlter is marginal: while a Count-Min sketch requires hash functions to have disjoint codomains (rows of Count-Min matrix), a Spectral Bloom ﬁlter has all hash functions mapping to the same array. This diﬀerence is the same as between partitioned [2] and regular Bloom ﬁlters. In this paper, we will deal with the Spectral Bloom ﬁlter version but will keep the term Count-Min sketch as more common in the literature. c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  M. Mavronicolas (Ed.): CIAC 2023, LNCS 13898, pp. 232–246, 2023. https://doi.org/10.1007/978-3-031-30448-4_17  
   
  Phase Transition in Count-Min Sketch  
   
  233  
   
  Count-Min sketch supports negative update values  provided that at each moment, each counter a(p) remains non-negative (so-called strict turnstile model [27]). When updates are positive, the Count-Min update algorithm can be modiﬁed to a stronger version leading to smaller errors in queries. This modiﬁcation, introduced in [18] as conservative update, is mentioned in [11], without any formal analysis given in those papers. This variant is also discussed in [10] under the name minimal increase, where it is claimed that it decreases the probability of a positive error by a factor of the number of hash functions, but no proof is given. We discuss this claim in the concluding part of this paper. The case of positive updates is widespread in practice. In particular, a very common instance is counting where all update values are 1. This task occurs in diﬀerent scenarios in network traﬃc monitoring, as well as other applications related to data stream mining [18]. In bioinformatics, we may want to maintain, on the ﬂy, multiplicities of ﬁxed-length words occurring in a big sequence dataset [3,29,33]. We refer to [16] for more examples of applications. While it is easily seen that the error in conservative update can only be smaller than in Count-Min, obtaining more precise bounds is a challenging problem. Count-Min guarantees, with high probability, that the additive error can be bounded by εa1 for any ε, where a1 is the L1-norm of a [13]. In the counting setting, a1 is the length of the input stream which can be very large, and therefore this bound provides a weak guarantee in practice, unless the distribution of keys is very skewed and queries are made on frequent keys (heavy hitters) [8,12,27]. It is therefore an important practical question to analyse the improvement provided by the conservative update strategy compared to the original Count-Min sketch. To our knowledge,  ﬁrst attempt towards this goal was made in [7], under  the assumption that all nk counter combinations are equally likely at each step (n size of the Count-Min array, k number of hash functions) which amounts to   assuming uniform distribution on nk input keys, each hashed to a distinct combination of counters. Thus, the number of distinct keys in the input is assumed to be much larger than the sketch size n. It was observed that the behavior of this model with uniformly distributed keys has important implications to nonuniformly distributed input. Another approach to bounding the error proposed in [16] is based on a simulation of spectral Bloom ﬁlters by a hierarchy of ordinary Bloom ﬁlters. However, the bounds provided are not explicit but are expressed via a recursive relation based on false positive rates of involved Bloom ﬁlters. Recent works [5,6] propose formulas for computing error bounds depending on key probabilities assumed independent but not necessarily uniform, in particular leading to an improved precision bounds for detecting heavy hitters. In this paper, we provide a probabilistic analysis of the conservative update scheme for counting under the assumption of uniform distribution of keys in the input. Our main result is a demonstration that the error in count estimates undergoes a phase transition when the number of distinct keys grows relative to the size of the Count-Min array. We show that the phase transition threshold corresponds to the peelability threshold for random k-uniform hypergraphs. For  
   
  234  
   
  ´ Fusy and G. Kucherov E.  
   
  the subcritical regime, when the number of distinct keys is below the threshold, we show that the relative error for a randomly chosen key tends to 0 asymptotically, with high probability. This contrasts with the regular Count-Min algorithm producing a relative error shown to be at least 1 with constant probability. For the supercritical regime, we show that the average relative error is lowerbounded by a constant (depending on the number of distinct keys), with high probability. We prove this result for k = 2 and conjecture that it holds for arbitrary k as well. We provide computer simulations showing the growth of the expected relative error after the threshold, with a distribution showing a peculiar multi-modal shape. In particular, keys with small (or zero) error still occur after the threshold, but their fraction quickly decreases when the number of distinct keys grows. After deﬁning Count-Min sketch and conservative update strategy in Sect. 2 and introducing hash hypergraphs in Sect. 3, we formulate the conservative update algorithm (or regular Count-Min, for that matter) in terms of a hypergraph augmented with counters associated to vertices. In Sect. 4, we state our main results and illustrate them with a series of computer simulations. In Sect. 5 we outline the proof of our main result for the subcritical regime and provide a proof for the supercritical regime. In addition, in Sect. 6, we study a speciﬁc family of 2-regular k-hypergraphs that are sparse but not peelable. For such graphs we show that while the relative error of every key is 1 with the regular Count-Min strategy, it is 1/k + o(1) for conservative update. While this result is mainly of theoretical interest, it illustrates that the peelability property is crucial for the error to be asymptotically vanishing. Finally, in Sect. 7, we turn to non-uniform distributions and provide a brief experimental analysis of the behavior of the average error for Zipf’s distribution compared with the uniform one. Missing full proofs and additional experimental data can be found in [22].  
   
  2  
   
  Count-Min and Conservative Update  
   
  We consider a (counting version of) Count-Min sketch to be an array A of size n of counters initially set to 0, together with hash functions h1 , . . . , hk mapping keys from a given universe to [1..n]. To count key occurrences in a stream of keys, regular Count-Min proceeds as follows. To process a key p, each of the counters A[hi (p)], 1 ≤ i ≤ k, is incremented by 1. Querying the occurrence ˆ CM (p) = min1≤i≤k {A[hi (p)]}. It number a(p) of a key p returns the estimate a ˆ CM (p) ≥ a(p). A bound on the overestimate of a(p) is given is easily seen that a by the following result adapted from [13]. Theorem 1 ([13]). For ε > 0, δ > 0, consider a Count-Min sketch with k = ˆ CM (p) − a(p) ≤ εN with probability at least ln( 1δ ) and size n = k eε . Then a 1 − δ, where N is the size of the input stream. While Theorem 1 is useful in some situations, it has a limited utility as it bounds the error with respect to the stream size which can be very large.  
   
  Phase Transition in Count-Min Sketch  
   
  235  
   
  Conservative update strengthens Count-Min by increasing only the smallest counters among A[hi (p)]. Formally, for 1 ≤ i ≤ k, A[hi (p)] is incremented by 1 if and only if A[hi (p)] = min1≤j≤k {A[hj (p)]} and is left unchanged otherˆ CU (p) = ˆ CU (p), is computed as before: a wise. The estimate of a(p), denoted a ˆ CU (p) ≥ a(p) still holds, and that min1≤i≤k {A[hi (p)]}. It can be seen that a ˆ CU (p) ≤ a ˆ CM (p). The latter follows from the observation that on the same a input, an entry of counter array A under conservative update can never get larger than the same entry under Count-Min.  
   
  3  
   
  Hash Hypergraphs and CU Process  
   
  With a counter array A[1..n] and hash functions h1 , ..., hk we associate a kuniform hash hypergraph H = (V, E) with vertex-set V = {1, ..., n} and edge-set k be the set of k-uniform E = {{h1 (p), ..., hk (p)}} for all distinct keys p. Let Hn,m hypergraphs with n vertices and m edges. We assume that the hash hypergraph k , which we denote by is a uniformly random Erd˝ os-R´enyi hypergraph in Hn,m k Hn,m , where m is the number of distinct keys in the input (for k = 2, we use the 2 ). Even if this property is not granted by hash functions notation Gn,m = Hn,m used in practice, it is a reasonable and commonly used hypothesis to conduct the analysis of sketch algorithms. Below we show that the behavior of a sketching scheme depends on the properties of the associated hash hypergraph. It is well-known that depending on the m/n ratio, many properties of Erd˝ os-R´enyi (hyper)graphs follow a phase transition phenomenon [21]. For example, the emergence of a giant component, of size O(n), occurs with high probability (hereafter, w.h.p.) at the threshold m 1 n = k(k−1) [26]. Particularly relevant to us is the peelability property. Let H = (V, E) be a hypergraph. The peeling process on H is as follows. We deﬁne H0 = H, and iteratively for i ≥ 0, we deﬁne Vi to be the set of leaves (vertices of degree 1) or isolated vertices in Hi , Ei to be the set of edges of Hi incident to vertices in Vi , and Hi+1 to be the hypergraph obtained from Hi by deleting the vertices of Vi and the edges of Ei . A vertex in Vi is said to have peeling level i. The process stabilizes from some step I, and the hypergraph HI is called the core of H, which is the largest induced sub-hypergraph whose vertices all have degree at least 2. If HI is empty, then H is called peelable. It is known [30] that peelability undergoes a phase transition. For k ≥ 3, there k exists a positive constant λk such that, for λ < λk , the random hypergraph Hn,λn k is w.h.p. peelable as n → ∞, while for λ > λk , the core of Hn,λn has w.h.p. a size concentrated around αn for some α > 0 that depends on λ. The ﬁrst peelability thresholds are λ3 ≈ 0.818, λ4 ≈ 0.772, etc., λ3 being the largest. For k = 2, for λ < 1/2, w.h.p. a proportion 1 − o(1) of vertices are in trees of size O(1), (and a proportion o(1) of the vertices are in the core), while for λ > 1/2, the core size is w.h.p. concentrated around αn for α > 0 that depends on λ [32].  
   
  236  
   
  ´ Fusy and G. Kucherov E.  
   
  We note that properties of hash hypergraphs determine the behavior of some other hash-based data structures, such as Cuckoo hash tables [31] and Cuckoo ﬁlters [19], Minimal Perfect Hash Functions and Static Functions [28], Invertible Bloom ﬁlters [24], and others. We refer to [34] for an extended study of relationships between properties of hash hypergraphs and some of those data structures. In particular, peelability is directly relevant to certain constructions of Minimal Perfect Hash Functions as well as to good functioning of Invertible Bloom ﬁlters. However, its relation to Count-Min sketches is less direct and has not been observed earlier. The connection to hash hypergraphs allows us to reformulate the Count-Min algorithm with conservative updates as a process, which we call CU-process, on k , where n, m, k correspond to counter array length, a random hypergraph Hn,m number of distinct keys, and number of hash functions, respectively. Let H = (V, E) be a hypergraph. To each vertex v we associate a counter cv initially set to 0. At each step t ≥ 1, a CU-process on H chooses an edge e = {v1 , . . . , vk } ∈ E in H, and increments by 1 those cvi which verify cvi = min1≤j≤k cvj . For t ≥ 0 and v ∈ V , cv (t) will denote the value of the counter cv after t steps, and oe (t) the number of times edge e ∈ E has been drawn in the ﬁrst t steps. The counter ce (t) of an edge e = {v1 , . . . , vk } is deﬁned as ce (t) = min1≤i≤k cvi (t). Clearly, for each t and each e, oe (t) ≤ ce (t). The relative error of e at time t is deﬁned as e (t) . The following lemma can be easily proved by induction on t. Re (t) = ce (t)−o oe (t) Lemma 1. Let H = (V, E) be a hypergraph on which a CU-process is run. At every step t, for each vertex v, there is at least one edge e incident to v such that ce (t) = cv (t). Observe that, when H is a graph (k = 2), Lemma 1 is equivalent to the property that vertex counters cannot have a strict local maximum, i.e., at every step t, each vertex v has at least one neighbour u such that cu (t) ≥ cv (t).  
   
  4 4.1  
   
  Phase Transition of the Relative Error Main Results  
   
  Let H = (V, E) be a hypergraph, |V | = n, |E| = m. Let N ≥ 1. We consider two closely related models of input to perform the CU-process. In the N -uniform model, the CU process is performed on a random sequence of keys (edges in E) of length N · m, each key being drawn independently and uniformly in E. In the N -balanced model, the CU-process is performed on a random sequence of length N · m, such that each e ∈ E occurs exactly N times, and the order of keys is random. In other words, the input sequence of keys is a random permutation of the multiset made of N copies of each key of E. Clearly, both models are very close, since the number of occurrences of any key in the N √ -uniform model is concentrated around N (with Gaussian ﬂuctuations of order N ) as N gets (N ) large. For both models, we use the notation cv = cv (N m) for the resulting (N ) counter of v ∈ V , oe = oe (N m) for the resulting number of occurrences of  
   
  Phase Transition in Count-Min Sketch (N )  
   
  237  
   
  (N )  
   
  e ∈ E, ce = ce (N m) for the resulting counter of e ∈ E, and Re = Re (N m) = (N ) (N ) (N ) (ce − oe )/oe for the resulting relative error of e. In the N -balanced model, (N ) (N ) since each key e ∈ E occurs N times, we have Re = (ce − N )/N . Our main result is the following. Theorem 2 (subcritical regime). Let k ≥ 2, and let λ < λk , where λ2 = 1/2, and for k ≥ 3, λk is the peelability threshold as defined in Sect. 3. Consider a CUk process on a random hypergraph Hn,λn under either N -uniform or N -balanced (N )  
   
  model, and consider the relative error Re (N ) Re  
   
  k of a random edge in Hn,λn . Then  
   
  = o(1) w.h.p., as both n and N grow1 .  
   
  Note that with the regular Count-Min algorithm (see Sect. 2), in the N (N ) balanced model, the counter value of a node v is c˜v = N · deg(v), and the (N ) ˜ e of an edge e = (v1 , . . . , vk ) is always (whatever N ≥ 1) equal relative error R to min(deg(v1 ), . . . , deg(vk )) − 1, and is thus always a non-negative integer. For k , the probability that all ﬁxed k ≥ 2 and λ > 0, and for a random edge e in Hn,λn k vertices belonging to e have at least one incident edge apart from e converges to a positive constant c(λ, k) = (1 − e−kλ )k . Therefore, R˜e is a nonnegative integer whose probability to be non-zero converges to c(λ, k). Thus, Theorem 2 ensures that, for λ < λk , conservative updates lead to a drastic decrease of the error, from Θ(1) to o(1). For a given hypergraph H = (V, E) with m edges, we deﬁne errN (H) =  (N ) 1 the average error over the edges of H. Formally, Theorem 2 e∈E Re m does not imply that errN (H) is o(1), as it might possibly happen that a small fraction of edges have very large errors, yielding errN (H) larger than o(1). However, we believe that this is not the case. From the previous remark, it follows that the error of an edge e = (v1 , . . . , vk ) is upper-bounded by k min(deg(v1 ), . . . , deg(vk )) − 1. Since the expected maximal degree in Hn,λn grows very slowly with n, one can expect that any set of o(n) edges should have a contribution o(1) w.h.p.. This is also supported by experiments given in the next section. Based on Theorem 2 and the above discussion, we propound that a phase transition occurs for the average error, in the sense that it is o(1) in the subcritical regime λ < λk , and Θ(1) in the supercritical regime λ > λk , w.h.p.. Regarding the supercritical regime, we are able to show that this indeed holds for k = 2 in the N -balanced model. Theorem 3 (supercritical regime, case k = 2). Let λ > 1/2. Then there exists a positive constant f (λ) such that, in the N -balanced model, errN (Gn,λn ) ≥ f (λ) w.h.p., as n grows2 . 1 2  
   
  (N )  
   
  Formally, for any  > 0, there exists M such that P(Re ≤ ) ≥ 1 −  if n ≥ M and N ≥ M. Formally, for any  > 0, there exists M such that P(errN (Gn,m ) ≥ f (λ)) ≥ 1 −  if N ≥ 1 and n ≥ M .  
   
  238  
   
  ´ Fusy and G. Kucherov E.  
   
  k , where λ k is the threshold Our proof of Theorem 3 extends to k ≥ 3 for λ > λ k has w.h.p. more edges than vertices. beyond which the giant component of Hn,λn k exists and is explicitly computable, The analysis given in [4] ensures that λ   λ3 ≈ 0.94, λ4 ≈ 0.98. We believe however that the peelability threshold λk constitutes the right critical value in Theorem 3 for k ≥ 3 as well, which is supported by simulations presented below. Proving this would require a diﬀerent kind of argument than we use in our proof though. 4.2  
   
  Simulations  
   
  Here we provide several experimental results illustrating the phase transition stated in Theorems 2 and 3. Figure 1 shows plots for the average relative error k ) as a function of λ = m/n, for k ∈ {2, 3, 4} for regular Count-Min and errN (Hn,m the conservative update strategies. Experiments were run for n = 1, 000 with the N -uniform model (each edge drawn independently with probability 1/m) and N = 50, 000 (number of steps N · |E|). For each λ, an average is taken over 15 random graphs.  
   
  Fig. 1. Average relative error as a function of λ = m/n for regular Count-Min (orange) and conservative update (blue), for k ∈ {2, 3, 4}. Vertical line shows the peelability threshold. (Color ﬁgure online)  
   
  The phase transitions are clearly seen to correspond to the critical threshold 0.5 for k = 2, and, for k ∈ {3, 4}, to the peelability thresholds λ3 ≈ 0.818, λ4 ≈ 0.772. Observe that the transition looks sharper for k ≥ 3, which may be explained by the fact that the core size undergoes a discontinuous phase transition for k ≥ 3, as shown in [30] (e.g. for k = 3, the fraction of vertices in the core jumps from 0 to about 0.13). For the supercritical regime, we experimentally studied the empirical distribution of individual relative errors, which turns out to have an interesting multimodal shape for intermediate values of λ. Typical distributions for k ∈ {2, 3} are illustrated in Fig. 2 where each point corresponds to an edge, and the edges are randomly ordered along the x-axis. Each plot corresponds to an individual random graph. When λ grows beyond the peelability threshold, a fraction of edges with small errors still remains but vanishes quickly: these include edges incident to at least  
   
  Phase Transition in Count-Min Sketch  
   
  239  
   
  one leaf (these have error 0) and peelable edges (these have error o(1)), as follows from our proof of Theorem 2. For intermediate values of λ, the distribution presents several modes: besides the main mode (largest concentration on plots of Fig. 2), we observe a few other concentration values which are typically integers. While this phenomenon is still to be analysed, we explain it by the presence of certain structural graph motifs that involve disparities in node degrees. Note that the fraction of values concentrated around the main mode is dominant: for example, for k = 3, λ = 3 (Fig. 2d), about 90% of values correspond to the main mode (≈ 3.22). Finally, when λ becomes larger, these “secondary modes” disappear, and the distribution becomes concentrated around a single value. More data about concentration is given in the full version [22].  
   
  Fig. 2. Distribution of relative errors of individual edges shown in a random order along x-axis.  
   
  240  
   
  ´ Fusy and G. Kucherov E.  
   
  Our analysis suggests that a positive average error in the supercritical regime is due to a large core — a non-peelable subgraph with Θ(n) nodes — which exists in this regime. To test this claim (for k = 3), we simulated the CU-process on sparse random non-peelable 3-hypergraphs, namely 2-regular 3-hypergraphs with 2n edges and 3n vertices (n parameter). These are sparsest possible nonpeelable 3-hypergraphs, with degree 2 of each vertex. In a separate experiment, we observed that the average error for such graphs is concentrated around a constant value of ≈ 0.217. While these graphs fall to the subcritical regime (λ = 2/3 < λ3 ≈ 0.818), they still generate an average error bounded away from 0. Along with our results of Sect. 6, this supports that peelability is crucial for the error to be o(1), and the presence of large non-peelable subgraphs results in a Θ(1) error.  
   
  5 5.1  
   
  Proofs of the Main Results Sketch of Proof of Theorem 2  
   
  Here we only provide main steps to show Theorem 2, the full proof is given in [22]. Theorem 2 relies on properties of random hypergraphs. Case k = 2 corresponds to Erd˝ os-R´enyi random graphs Gn,λn [17] which have been extensively studied [21]. In particular, it is well known that when λ < 1/2 and n gets large, Gn,λn is, w.h.p., a union of small connected components most of which are constant-size trees. That is, a random edge in Gn,λn is, w.h.p., in a tree of size O(1). Thus, the proof amounts to showing that, for a ﬁxed tree T and an (N ) edge e ∈ T , we have w.h.p. Re = o(1) (as N gets large), both in the N -uniform and in the N -balanced model (performed on T alone). Let m be the number of (N ) edges in T . We ﬁrst give a proof for the N -uniform model. Since oe follows (N ) a Bin(N m, 1/m) distribution, we have w.h.p. oe /N = 1 + o(1). Hence, it is (N ) enough to prove that, for each vertex v ∈ T , we have w.h.p. cv /N = 1 + o(1). The proof is done by induction on the peeling level i of v. If i = 0, then v (N ) (N ) = oe , hence w.h.p. is a leaf. Letting e be its incident edge, we have cv (N ) cv /N = 1 + o(1). To let the induction work for i ≥ 1, we actually have to carry a stronger property. Namely, we show that for each v ∈ T , there exist absolute positive constants av , bv such that, for any N ≥ 1 and x > 0, we have  √  (1) P maxt∈[0..N m] |cv (t) − t/m| ≥ x N ≤ av exp(−bv x2 ). The proof of (1) for v at level 0 follows from the fact that, for each e ∈ T (in (N ) particular, the one incident to v), oe follows a Bin(N m, 1/m) distribution, so that one can apply Hoeﬀding’s inequality combined with Doob’s maximal martingale inequality. This yields (1) for v at level 0, where av = 2 and bv = 2/m. For v at level i ≥ 1, we have the property that there is an edge e incident to v such that all the other neighbors v1 , . . . , vh of v (i.e., the neighbors not incident to e) have level smaller than i, and thus satisfy (1) by induction. We then have to check that cv (t) stays close to t/m for t ∈ [0..N m] (in the sense of (1)).  
   
  Phase Transition in Count-Min Sketch  
   
  241  
   
  For the lower bound part, we use the fact that cv (t) ≥ oe (t), and that oe (t) stays close to t/m. For the upper bound part we use the following argument. Letting dv (t) = max(cv1 (t), . . . , cvh (t)), we can show that if cv (t0 ) ≥ dv (t0 ) + M at some time t0 , then there exists t ≤ t0 such that |oe (t ) − t /m| ≥ M/4 or |dv (t ) − t /m| ≥ M/4 (the crucial point to establish this property, speciﬁc to the CU-process, is that in the regime where cv (t) > dv (t), any step where cv (t) increases occurs when picking e). Since oe (t) and dv (t) stay close to t/m (for dv (t) we use induction on i, and the union bound), this property ensures that cv (t) is unlikely to exceed t/m. Given the lower bound part, cv (t) hence stays close to t/m (in the sense of (1)). Estimate (1) then guarantees that, in the N -uniform (N ) model, we have |cv /N − 1| ≤ N −1/3 with probability exponentially close to 1. The same holds in the N -balanced model, by noting that the N -balanced model is the N -uniform model conditioned on the event that each edge is chosen N times, which occurs with a probability of order N −m/2 (thus, any event that is almost sure with exponential rate in the N -uniform model is also almost sure with exponential rate in the N -balanced model). The proof for k ≥ 3 is analogous but requires some more ingredients. An k may be in additional diﬃculty is that, for λ < λk , a random edge e in Hn,λn 1 the giant component (if λ ∈ ( k(k−1) , λk )). However, we rely on the fact that the peeling level of e is O(1) w.h.p., and prove that for a vertex v of bounded level, (N ) we have cv /N = 1 + o(1) w.h.p. as N → ∞, where the o(1) term does not depend on the size of the giant component. 5.2  
   
  Proof of Theorem 3  
   
  The excess of a hypergraph H is exc(H) = |E| − |V |. Lemma 2. Let H = (V, E) be a k-uniform hypergraph. Then, for the N -balanced  (N ) model, we have e∈E Re ≥ k1 exc(H). Proof. During the CU process, each time an edge is drawn, the counter of at  (N ) least one of its extremities is increased by 1. Hence v∈V cv ≥ N |E|. Hence,  (N ) (N ) (N ) with the notation Rv := cv /N − 1, we have v∈V Rv ≥ exc(H). Now, by Lemma 1, for each v ∈ V , there exists an edge ev incident to v such that (N ) (N ) cev = cv (if several incident edges have this property, an arbitrary one is  (N ) chosen). Hence, v∈V Rev ≥ exc(H). Note that, in this sum, every edge occurs  (N ) at most k times (since it has k extremities), thus e∈E Re ≥ k1 exc(H).  
   
  For k = 2 and λ > 1/2, it is known [32, Theorem 6] that there is an explicit = (V  , E  ) constant f˜(λ) > 0 such that the excess of the giant component G √ ˜ of Gn,λn is concentrated around f (λ)n, with ﬂuctuations of order n. Thus, exc(G ) ≥ 12 f˜(λ)n w.h.p. as n → ∞. Hence, by Lemma 2, w.h.p. as n → ∞ (and for any N ≥ 1), we have 1  (N ) 1 1 ˜ exc(G ) ≥ f (λ) =: f (λ), errN (Gn,λn ) ≥ Re ≥ λn 2λn 4λ  e∈E  
   
  which implies Theorem 3.  
   
  242  
   
  6  
   
  ´ Fusy and G. Kucherov E.  
   
  Analysis for Some Non-peelable Hypergraphs  
   
  Analysing the asymptotic behaviour of the relative error of the CU-process on arbitrary hypergraphs seems to be a challenging task, even if we restrict ourselves to N -uniform and N -balanced models, as we do in this paper. Based on simulations, we expect that, for a ﬁxed connected k-hypergraph H = (V, E), (N ) and for v ∈ V , we have cv /N = Cv + o(1) w.h.p. as N → ∞, for an explicit constant Cv ∈ [1, deg(v)]. Since the number  of increments at each  step lies in 1 1 C ≤ k, where [1..k], constants Cv must verify 1 ≤ |E| v v∈V v∈V Cv can |E| be seen as the average number of increments at a step. If H is peelable, then Theorem 2 implies that this concentration holds, with Cv = 1. We expect that, if no vertex of H is peelable, and if H is “suﬃciently homogeneous”, then the constants Cv should be all equal to the same constant C > 1, and thus the (N ) relative error Re of every edge is concentrated around C − 1 > 0 w.h.p. as N → ∞. This, in particular, is supported by an experiment reported at the end of Sect. 4.2. In this Section, we show that this is the case for a family of regular hyper|V |) edges) but have a high order (an edge graphs which are very sparse (O( contains O( |V |) vertices). The dual of a hypergraph H is the hypergraph H  where the roles of vertices and edges are interchanged: the vertices of H  are the edges of H, and the edges of H  are the vertices of H so that an edge of H  corresponding to a vertex v of H contains those vertices that correspond to edges incident to v in H. Here we consider the hypergraph Kn dual to the   complete graph Kn . It is a (n − 1)-uniform hypergraph with n edges and n2 vertices, all of degree 2, therefore no vertex is peelable. For a ﬁxed n ≥ 3, we consider a CU-process on Kn , in the N -balanced model. Note that with regular Count-Min, the relative (N ) error of every edge is 1, since all vertices have degree 2 and cv = 2N for every  vertex v of Kn . We prove that with conservative updates, the relative error is reduced to a smaller constant 1/(n − 1). The proof is omitted and can be found in [23]. Theorem 4. For any fixed n ≥ 2, in the N -uniform model (resp. in the N (N ) balanced model), the counter of each vertex v ∈ Kn satisfies cv /N = n/(n − (N ) 1) + o(1) w.h.p. as N → ∞. Hence, the relative error Re of each edge e in Kn (N ) satisfies Re = 1/(n − 1) + o(1) w.h.p. as N → ∞.  
   
  7  
   
  Non-uniform Distributions  
   
  An interesting and natural question is whether the phase transition phenomenon holds for non-uniform distributions as well. This question is of practical importance, as in many practical situations keys are not distributed uniformly. In  
   
  Phase Transition in Count-Min Sketch  
   
  243  
   
  particular, Zipﬁan distributions often occur in various applications and are a common test case for Count-Min sketches [6,7,9,14,16]. We mention a recent learning-based variant of CountMin [25] (learning heavy hitters) and its study under a Zipﬁan distribution [1,15]. In Zipf’s distributions, key probabilities in descending order are proportional to 1/iβ , where i is the rank of the key and β ≥ 0 is the skewness parameter. Note that for β = 0, Zipf’s distribution reduces to the uniform one. It is therefore a natural question whether the phase transition occurs for Zipf’s distributions with β > 0. One may hypothesize that the answer to the question should be positive, as under Zipf’s distribution, frequent keys tend to have no error, as it has been observed in earlier papers [5–7]. On the other hand, keys of the tail of the distribution have fairly similar frequencies, and therefore might show the same behavior as for the uniform case. However, this hypothesis does not hold. Figure 3 shows the behavior of the average error for Zipf’s distributions with β ∈ {0.2, 0.5, 0.7, 0.9} vs. the uniform distribution (β = 0). The average error is deﬁned here as the average error of all  (N ) ce(N ) −oe(N ) 1 = keys weighted by their frequencies3 , i.e. errN (H) = mN (N ) e∈E oe oe  (N ) (N ) 1 − oe ). In other words, errN (H) is the expected error of a rane∈E (ce mN domly drawn key from the entire input stream of length mN (taking into account multiplicities).  
   
  Fig. 3. Average error as a function of λ = m/n, for Zipf’s distributions with β ∈ {0.0, 0.2, 0.5, 0.7, 0.9}. Plots obtained for n = 1000, k = 3, N = 50, 000.  
   
  3  
   
  This deﬁnition is natural for non-uniform distributions, as the error for a frequent key should have a larger contribution. Note that it is consistent with the deﬁnition of Sect. 4.1 in the N -balanced case, and in the N -uniform case it presents a negligible diﬀerence when N gets large.  
   
  244  
   
  ´ Fusy and G. Kucherov E.  
   
  We observe that the phase transition behavior disappears for β > 0. It turns out that even in the subcritical regime, frequent elements, while having no error themselves, heavily aﬀect the error of certain rare elements, which raises the resulting average error. This phenomenon is analysed in more detail in our followup paper [23]. In the supercritical regime (λ > 1 in Fig. 3) the opposite happens: the uniform distribution shows the largest average error. This is because an increasingly large fraction of the keys (those in the core of the associated hypergraph) contribute to the error, while for skewed distributions, frequent keys tend to have no error, and thus the larger β (with frequent keys becoming more predominant) the smaller the average error. Note that this is in accordance with the observation of [7] that the estimates for the uniform distribution majorate the estimates of infrequent keys for skewed distributions.  
   
  8  
   
  Concluding Remarks  
   
  We presented an analysis of conservative update strategy for Count-Min sketch under the assumption of uniform distribution of keys in the input stream. Our results show that the behaviour of the sketch heavily depends on the properties of the underlying hash hypergraph. Assuming that hash functions are fully independent, the error produced by the sketch follows two diﬀerent regimes depending on the density of the underlying hypergraph, that is the number of distinct keys relative to the size of the sketch. When this ratio is below the threshold, the conservative update strategy produces a o(1) relative error when the input stream and the number of distinct keys both grow, while the regular Count-Min produces a positive constant error. This gap formally demonstrates that conservative update achieves a substantial improvement over regular Count-Min. We showed that the above-mentioned threshold corresponds to the peelability threshold for k-uniform random hypergraphs. One practical implication of this is that the best memory usage is obtained with three hash functions, since λ3 is maximum among all λk , and therefore k = 3 leads to the minimum number of counters needed to deal with a given number of distinct keys. In [10] it is claimed, without proof, that the rate of positive errors of conservative update is k times smaller than that of regular Count-Min. This claim does not appear to be true. Note that Count-Min does not err on a key represented in the sketch if and only if the corresponding edge of the hypergraph includes a leaf (vertex of degree 1), while the conservative update can return an exact answer even for an edge without leaves. However, this latter event depends on the relative frequencies of keys and therefore on the speciﬁc distribution of keys and the input length. On the other hand, our experiments with uniformly distributed keys show that this event is relatively rare, and the rate of positive error for Count-Min and conservative update are essentially the same. One important assumption of our analysis is the uniform distribution of keys in the input. We presented an experimental evidence that for skewed distributions, in particular for Zipf’s distribution, the phase transition disappears when the skewness parameter grows. Therefore, the uniform distribution presents the  
   
  Phase Transition in Count-Min Sketch  
   
  245  
   
  smallest error in the subcritical regime. The situation is the opposite in the supercritical regime when the number of distinct keys is large compared to the number of counters: here the uniform distribution presents the largest average error. As mentioned earlier, for Zipf’s distribution, frequent keys have essentially no error, whereas in the supercritical regime, low frequency keys have all similar overestimates. This reveals another type of phase transition in error approximation for Zipf’s distribution, occurring between frequent and infrequent elements, having direct application to accurate detection of heavy hitters in streams. We refer to our follow-up work [23] for further insights regarding this issue. Acknowledgments. We thank Djamal Belazzougui who ﬁrst pointed out to us the conservative update strategy.  
   
  References 1. Aamand, A., Indyk, P., Vakilian, A.: (Learned) frequency estimation algorithms under Zipﬁan distribution. CoRR abs/1908.05198 (2019) 2. Almeida, P.S.: A case for partitioned Bloom ﬁlters. CoRR abs/2009.11789 (2020) 3. Behera, S., Gayen, S., Deogun, J.S., Vinodchandran, N.: Kmerestimate: a streaming algorithm for estimating k-mer counts with optimal space usage. In: Proceedings of the ACM International Conference on Bioinformatics, Computational Biology, and Health Informatics, pp. 438–447 (2018) 4. Behrisch, M., Coja-Oghlan, A., Kang, M.: Local limit theorems for the giant component of random hypergraphs. Comb. Probab. Comput. 23(3), 331–366 (2014) 5. Ben Mazziane, Y., Alouf, S., Neglia, G.: Analyzing count min sketch with conservative updates. Comput. Netw. 217, 109315 (2022) 6. Ben Mazziane, Y., Alouf, S., Neglia, G.: A formal analysis of the count-min sketch with conservative updates. CoRR abs/2203.14549 (2022) 7. Bianchi, G., Duﬀy, K., Leith, D.J., Shneer, V.: Modeling conservative updates in multi-hash approximate count sketches. In: Proceedings of the 24th International Teletraﬃc Congress, ITC 2012, Krak´ ow, Poland, 4–7 September 2012, pp. 1–8. IEEE (2012) 8. Charikar, M., Chen, K., Farach-Colton, M.: Finding frequent items in data streams. Theoret. Comput. Sci. 312(1), 3–15 (2004) 9. Chen, P., Wu, Y., Yang, T., Jiang, J., Liu, Z.: Precise error estimation for sketchbased ﬂow measurement. In: Proceedings of the 21st ACM Internet Measurement Conference, pp. 113–121 (2021) 10. Cohen, S., Matias, Y.: Spectral bloom ﬁlters. In: Halevy, A.Y., Ives, Z.G., Doan, A. (eds.) Proceedings of the 2003 ACM SIGMOD International Conference on Management of Data, pp. 241–252 (2003) ¨ 11. Cormode, G.: Count-min sketch. In: Liu, L., Ozsu, M.T. (eds.) Encyclopedia of Database Systems, 2nd edn. Springer, Cham (2018) 12. Cormode, G., Hadjieleftheriou, M.: Finding frequent items in data streams. Proc. VLDB Endowment 1(2), 1530–1541 (2008) 13. Cormode, G., Muthukrishnan, S.: An improved data stream summary: the countmin sketch and its applications. J. Algorithms 55(1), 58–75 (2005) 14. Cormode, G., Muthukrishnan, S.: Summarizing and mining skewed data streams. In: Proceedings of the 2005 SIAM International Conference on Data Mining, SDM 2005, Newport Beach, CA, USA, 21–23 April 2005, pp. 44–55 (2005)  
   
  246  
   
  ´ Fusy and G. Kucherov E.  
   
  15. Du, E., Wang, F., Mitzenmacher, M.: Putting the “learning” into learningaugmented algorithms for frequency estimation. In: Proceedings of the 38th International Conference on Machine Learning, ICML 2021, vol. 139, pp. 2860–2869 (2021) 16. Einziger, G., Friedman, R.: A formal analysis of conservative update based approximate counting. In: International Conference on Computing, Networking and Communications, ICNC 2015, pp. 255–259 (2015) 17. Erdos, P., R´enyi, A., et al.: On the evolution of random graphs. Publ. Math. Inst. Hung. Acad. Sci 5(1), 17–60 (1960) 18. Estan, C., Varghese, G.: New directions in traﬃc measurement and accounting. In: Mathis, M., Steenkiste, P., Balakrishnan, H., Paxson, V. (eds.) Proceedings of the ACM SIGCOMM 2002 Conference on Applications, Technologies, Architectures, and Protocols for Computer Communication, pp. 323–336. ACM (2002) 19. Fan, B., Andersen, D.G., Kaminsky, M., Mitzenmacher, M.D.: Cuckoo ﬁlter: Practically better than bloom. In: Proceedings of the 10th ACM International on Conference on Emerging Networking Experiments and Technologies, pp. 75–88 (2014) 20. Fan, L., Cao, P., Almeida, J., Broder, A.: Summary cache: a scalable wide-area web cache sharing protocol. IEEE/ACM Trans. Networking 8(3), 281–293 (2000) 21. Frieze, A., Karo´ nski, M.: Introduction to Random Graphs. Cambridge University Press, Cambridge (2015) ´ Kucherov, G.: Phase transition in count approximation by Count-Min 22. Fusy, E., sketch with conservative updates. CoRR abs/2203.15496 (2022) ´ Kucherov, G.: Count-min sketch with variable number of hash functions: 23. Fusy, E., an experimental study. CoRR abs/2302.05245 (2023) 24. Goodrich, M.T., Mitzenmacher, M.: Invertible bloom lookup tables. In: Proceedings of the 49th Annual Allerton Conference on Communication, Control, and Computing (Allerton), pp. 792–799. IEEE (2011) 25. Hsu, C., Indyk, P., Katabi, D., Vakilian, A.: Learning-based frequency estimation algorithms. In: Proceedings of the 7th International Conference on Learning Representations, ICLR 2019 (2019) 26. Karo´ nski, M., L  uczak, T.: The phase transition in a random hypergraph. J. Comput. Appl. Math. 142(1), 125–135 (2002) 27. Liu, H., Lin, Y., Han, J.: Methods for mining frequent items in data streams: an overview. Knowl. Inf. Syst. 26(1), 1–30 (2011) 28. Majewski, B.S., Wormald, N.C., Havas, G., Czech, Z.J.: A family of perfect hashing methods. Comput. J. 39(6), 547–554 (1996) 29. Mohamadi, H., Khan, H., Birol, I.: ntCard: a streaming algorithm for cardinality estimation in genomics data. Bioinformatics 33(9), 1324–1330 (2017) 30. Molloy, M.: Cores in random hypergraphs and boolean formulas. Random Struct. Algorithms 27(1), 124–135 (2005) 31. Pagh, R., Rodler, F.F.: Cuckoo hashing. J. Algorithms 51(2), 122–144 (2004) 32. Pittel, B., Wormald, N.C.: Counting connected graphs inside-out. J. Comb. Theory, Series B 93(2), 127–172 (2005) 33. Shibuya, Y., Kucherov, G.: Set-Min sketch: a probabilistic map for power-law distributions with application to k-mer annotation. bioRxiv (2020). https://www. biorxiv.org/content/10.1101/2020.11.14.382713v1 34. Walzer, S.: Random hypergraphs for hashing-based data structures. Ph.D. thesis, Technische Universit¨ at Ilmenau, Germany (2020)  
   
  Minimum-Link C-Oriented Paths Visiting a Sequence of Regions in the Plane Kerem Geva1 , Matthew J. Katz1(B) , Joseph S. B. Mitchell2 , and Eli Packer3 1  
   
  Ben Gurion University of the Negev, Beer Sheva, Israel [email protected]  , [email protected]  2 Stony Brook University, Stony Brook, NY, USA [email protected]  3 Track160, Tel Aviv-Yafo, Israel [email protected]   
   
  Abstract. Let E = {e1 , . . . , en } be a set of C-oriented disjoint segments in the plane, where C is a given ﬁnite set of orientations that spans the plane, and let s and t be two points. We seek a minimum-link C-oriented tour of E, that is, a polygonal path π from s to t that visits the segments of E in order, such that, the orientations of its edges are in C and their number is minimum. We present an algorithm for computing such a tour in O(|C|2 ·n2 ) time. This problem already captures most of the diﬃculties occurring in the study of the more general problem, in which E is a set of not-necessarily-disjoint C-oriented polygons.  
   
  1  
   
  Introduction  
   
  We consider the problem in which we are given a sequence of regions, R = (R1 , R2 , . . . , Rn ), where each Ri is a subset of an underlying geometric domain, and our goal is to compute a tour (a path or a cycle) within the domain that visits the regions R in the given order and is optimal in some prescribed sense. Optimality might be based on the Euclidean length of the tour, the number of turns in a polygonal tour (or, equivalently, the number of links (edges) in the tour), a weighted cost function, etc. There are also variants of the problem in which it is important to specify exactly what constraints there are on the ordered visitation of the regions, particularly if the regions are not disjoint. The problem arises naturally and is also motivated by applications in curve simpliﬁcation (e.g., [6]), vehicle routing (e.g., the traveling salesperson problem (TSP); see [8]), search and exploration (e.g., [3]), computing structures on imprecise points [7], task sequencing in robotics (see [1,2]), etc. In this paper we focus on the version of the problem in which the regions Ri are disjoint C-oriented line segments (with orientations/slopes from a ﬁnite set C) in the plane, the tour is required to be polygonal and C-oriented, and the optimality criterion is to minimize the number of links (equivalently, the number of turns, or vertices in the polygonal tour). We brieﬂy mention generalizations (deferred to the full paper), including the case in which the regions Ri are more general than disjoint line segments. c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  M. Mavronicolas (Ed.): CIAC 2023, LNCS 13898, pp. 247–262, 2023. https://doi.org/10.1007/978-3-031-30448-4_18  
   
  248  
   
  K. Geva et al.  
   
  More formally, let C be a ﬁnite set of orientations, which can be thought of as points on a unit circle centered at the origin. We assume that (i) C spans the plane, i.e., for any two points p, q in the plane, there exists a two-link (directed) path from p to q (or a one-link path), such that the orientation of the edges in the path belong to C, and (ii) for any orientation ci ∈ C, the orientation ci is also in C, where ci is the opposite orientation of ci . The requirement for paths to be C-oriented arises in some settings (mechanical constraints) but also has advantages in lower/upper bounding of the turn angles, in comparison with polygonal paths having general links, which may form arbitrarily sharp turns. We focus on the following problem: Minimum-link C-oriented tour of a sequence of C-oriented segments: Let E = {e1 , . . . , en } be a set of C-oriented disjoint segments, that is, if we think of e ∈ E as a directed segment, by arbitrarily picking one of the two possible directions, then e’s orientation belongs to C. Let s and t be two points that do not belong to any of the segments in E. A tour of E is a polygonal path π that begins at s and ends at t with the following property: There exists a sequence of points p1 , . . . , pn on π, such that, pi precedes pi+1 , for 1 ≤ i ≤ n − 1, and pi ∈ ei , for 1 ≤ i ≤ n. A tour is Coriented, if the orientation of each of its edges belongs to C. We wish to compute a C-oriented minimum-link tour of E, that is, a C-oriented tour consisting of a minimum number of links (i.e., edges). Our main contribution is an eﬃcient algorithm to compute a minimum-link C-oriented tour of a sequence of n disjoint C-oriented line segments, in time O(|C|2 · n2 ). (The algorithm becomes O(n) in the special case of |C| = 4, e.g., axis-oriented paths). Related Work In the touring polygons problem (TPP), one seeks a tour that is shortest in Euclidean length that visits a sequence of polygons; such a tour is found in polynomial time if the polygons are convex and is NP-hard in general (and has an FPTAS) [3]. Minimization of the link length of a tour visiting a sequence of (possibly overlapping) disks is studied in [6], where the motivation for this “ordered stabbing” problem was curve and map simpliﬁcation (see also [10]). In contrast with our problem speciﬁcation, in [6] the path edges are allowed to be of arbitrary orientation, not required to be C-oriented. This assumption leads to particular eﬃciency, as one can use an extension of linear-time line stabbing methods (see Egyed and Wenger [4]) to execute a greedy algorithm eﬃciently. Computing a minimum-link C-oriented path from start to goal among obstacles has been studied as well, without requiring visitation of a sequence of regions; see [9,11].  
   
  2  
   
  Preliminaries  
   
  Notation. For any 1 ≤ i ≤ n, let l(ei ) be the number of links in a minimumlink path that begins at s and ends at a point on ei . We only consider Coriented paths to ei that visit the segments e1 , . . . , ei , as deﬁned above. We refer  
   
  Minimum-Link C-Oriented Paths  
   
  249  
   
  to the number of links in such a path as its length. We distinguish between paths to ei both by their length and by the orientation of their last link. Let I(ei , cj ) (I + (ei , cj )) be the set of maximal intervals on ei formed by all paths of , whose last link has orientation cj . We set length l(e i ) (l(ei ) + 1) from s to ei I(ei ) = c∈C I(ei , c) and I + (ei ) = c∈C I + (ei , c). For an orientation cj ∈ C, let cj+1 and cj−1 be the orientations in C that immediately succeed cj and precede cj in clockwise order, respectively. We denote by φ(cj , ck ) the set of orientations in C between cj and ck (in clockwise order from cj ), not including cj and ck . Finally, we denote the ray emanating from p in orientation cj by Ray(p, cj ) and the line through p parallel to a segment of orientation cj by Line(p, cj ). Let a be an interval on ei that belongs to one of the sets I(ei ) or I + (ei ). Then a has a length la (which is either l(ei ) or l(ei ) + 1) and an orientation ca ∈ C associated with it. We denote the endpoints of a by a1 and a2 , where a1 is to the left of a2 , when approaching a through a path corresponding to a (i.e., a path starting at s and ending at a point in a, which is of length la and whose last link is of orientation ca ). Next, we use a to deﬁne two regions of the plane, namely, P T (a) and ψ(a, cj ). Let P T (a) denote the semi-slab consisting of all points that can be reached by extending the last link of a path corresponding to a. We refer to such a path as a path that passes through a and continues in the same orientation at which it reached a (i.e., ca ). Thus, the region P T (a) is the semi-slab bounded by the rays Ray(a1 , ca ), Ray(a2 , ca ) and the interval a (see, e.g., the red region in Fig. 1). Similarly, let ψ(a, cj ) be the region of all points that can be reached by a path that passes through a and then, not  necessarily immediately, turns and continues in orientation cj . Thus, ψ(a, cj ) = q∈P T (a) Ray(q, cj ), for example if cj = ca , then ψ(a, cj ) is the slab deﬁned by the lines Line(a1 , ca ) and Line(a2 , ca ) (for additional examples see Fig. 8). Finally, for an interval b ∈ I + (ei ), we set δ(b) = {a ∈ I(ei )|a ⊆ b}. We now show that the sets I(ei ) and I + (ei ) are suﬃcient, in the sense that there exists a minimum-link tour of E whose portion from s to ei corresponds to an interval in I(ei ) ∪ I + (ei ). Assume this is false, and let π be a minimum-link tour of E, such that its portion πi from s to ei does not correspond to an interval in I(ei ) ∪ I + (ei ). Then, the length of πi (denoted |πi |) is at least l(ei ) + 2. Let p be the point on ei where πi ends, and denote the portion of π from p to t by π i . Then |π| ≥ l(ei ) + 2 + |π i |, if π makes a turn at p, or |π| = l(ei ) + 2 + |π i | − 1, otherwise. Consider any path πi from s to ei that corresponds to an interval in I(ei ) and let p be the point on ei where πi ends. Then, the tour obtained by πi , the edge p p and π i is a tour of E of length at most l(ei ) + 1 + |π i | ≤ |π|. We have thus shown that Claim 1. There exists a minimum-link tour of E whose portion from s to ei corresponds to an interval in I(ei ) ∪ I + (ei ), for 1 ≤ i ≤ n. Finally, since our assumptions on the set of orientations C imply that there exists a two-link path from p to q, for any pair of points p, q in the plane, we have  
   
  250  
   
  K. Geva et al.  
   
  Claim 2. l(ei−1 ) ≤ l(ei ) ≤ l(ei−1 ) + 2, for 1 ≤ i ≤ n (where l(e0 ) = 0).  
   
  3  
   
  The Main Algorithm  
   
  In this section, we present an algorithm for computing a minimum-link tour of E. The algorithm consists of two stages. In the ﬁrst stage, it considers the segments of E, one at a time, beginning with e1 , and, at the current segment ei , it computes the sets I(ei ) and I + (ei ) from the sets I(ei−1 ) and I + (ei−1 ), associated with the previous segment. In the second stage, it constructs a minimum-link tour of E, beginning from its last link, by consulting the sets I(·) and I + (·) computed in the ﬁrst stage. We begin with several deﬁnitions that will assist us in the description of the algorithm. Given a set I of intervals on ei , where each interval a ∈ I is associated with some ﬁxed length (link distance) la = l and an orientation ca , and cj ∈ C, we deﬁne the sets of intervals +0-intervals, +1-intervals, +2-intervals on ei+1 with respect to I and cj (the deﬁnition of the ﬁrst set does not depend on cj ). The +0-intervals on ei+1 consist of the intervals on ei+1 formed by passing through the intervals of I, without making any turns. It is constructed by computing the interval b = P T (a) ∩ ei+1 , for each a ∈ I, and including it in the set, setting lb = l and cb = ca , if it is not empty. The +1-intervals on ei+1 associated with orientation cj consist of the intervals on ei+1 formed by passing through the intervals of I and then making a turn in orientation cj . It is constructed by computing the interval b = ψ(a, cj ) ∩ ei+1 , for each a ∈ I, and including it in the set, setting lb = l + 1 and cb = cj . The +2-intervals on ei+1 associated with orientation cj consist of the intervals on ei+1 formed by passing through the intervals of I and then making two turns, where the ﬁrst is in any orientation c = ca and the second is in orientation cj ; see Lemma 3. We construct it as follows. First, we check if there is an interval a ∈ I such / {cj−1 , cj , cj+1 }. If there is such an interval, we include the interval b = that ca ∈ ei+1 , setting lb = l + 2 and cb = cj , and stop; see Lemma 4. Otherwise, for each a ∈ I, we include the intervals b+ = ψ(a, ca+1 )∩ei+1 and b− = ψ(a, ca−1 )∩ei+1 , provided that they are not empty, and set lb+ = lb− = l + 2 and cb+ = cb− = cj ; see paragraph following Lemma 4. 3.1  
   
  Stage I  
   
  We are now ready to describe the ﬁrst stage of the algorithm. It is convenient to treat the points s and t as segments e0 and en+1 , respectively. We set l(e0 ) = 0 and, for each cj ∈ C, we insert the interval a = e0 , after setting la = 0 and ca = cj , into I(e0 , cj ). Similarly, for each cj ∈ C, we insert the interval a = e0 , after setting la = 1 and ca = cj , into I + (e0 , cj ). We iterate over the segments e1 , . . . , en+1 , where in the i’th iteration, 1 ≤ i ≤ n + 1, we compute l(ei ) and the pair of sets I(ei ) and I + (ei ). Assume we have  
   
  Minimum-Link C-Oriented Paths  
   
  251  
   
  already processed the segments e0 , . . . , ei , for some 0 ≤ i ≤ n. We describe the next iteration, in which we compute l(ei+1 ) and the sets I(ei+1 ) and I + (ei+1 ). For each cj ∈ C, we compute the +0-intervals on ei+1 with respect to I(ei , cj ) and store them in I(ei+1 , cj ). If at least one of the sets I(ei+1 , cj ) is non-empty, we set l(ei+1 ) = l(ei ) (otherwise l(ei+1 ) > l(ei )). Next, for each cj ∈ C, we compute the +0-intervals on ei+1 with respect to I + (ei , cj ) and the +1-intervals on ei+1 with respect to I(ei )\I(ei , cj ) (and cj ). We store these intervals (if exist) either in I + (ei+1 , cj ), if l(ei+1 ) = l(ei ), or in I(ei+1 , cj ), if l(ei+1 ) > l(ei ). If we performed the latter option, then we set l(ei+1 ) = l(ei ) + 1. Finally, if we performed one of the two options, then we repeatedly merge overlapping intervals in the set (either I + (ei+1 , cj ) or I(ei+1 , cj )), until there are no such intervals. If l(ei+1 ) > l(ei ), then, for each cj ∈ C, we compute the +2-intervals on ei+1 with respect to I(ei ) and the +1-intervals on ei+1 with respect I + (ei )\I + (ei , cj ). We store these intervals (if exist) either in I + (ei+1 , cj ), if l(ei+1 ) = l(ei ) + 1, or in I(ei+1 , cj ), otherwise (i.e., we still have not ﬁxed l(ei+1 )). If we performed the latter option, then we set l(ei+1 ) = l(ei ) + 2, and, as above, if we performed one of the two options, then we repeatedly merge overlapping intervals in the set, until there are no such intervals. Finally, if l(ei+1 ) = l(ei )+2, then, for each cj ∈ C, we set I + (ei+1 , cj ) = ei+1 ; see Claim 5. 3.2  
   
  Stage II  
   
  In this stage we use the information collected in the ﬁrst stage to construct a minimum-link tour π of E. We construct π incrementally beginning at t and ending at s. That is, in the ﬁrst iteration we add the portion of π from t to en , in the second iteration we add the portion from en to en−1 , etc. Assume that we have already constructed the portion of π from t to ei , where this portion ends at point p of interval a on ei . In the full version of this paper [5], we describe how to compute the portion from ei to ei−1 , which begins at the point p of interval a and ends at a point p of interval b on ei−1 (where b ∈ I(ei−1 ) ∪ I + (ei−1 )) and consists of la − lb + 1 links. Before continuing to the next iteration, we set p = p and a = b. After adding the last portion, which ends at s, we remove all the redundant vertices from π, i.e., vertices at which π does not make a turn.  
   
  4  
   
  Analysis  
   
  In this section, we prove the correctness of our two-stage algorithm and bound its running time, via a sequence of lemmas and claims. Lemma 1. For any interval a ∈ I(ei ) and for any cj ∈ C\{ca }, there exists an interval b ∈ I + (ei , cj ) such that a ⊆ b, for 1 ≤ i ≤ n.  
   
  252  
   
  K. Geva et al.  
   
  Proof. Let p ∈ a, then there is a path πi of length l(ei ) that begins at s, ends at p, and whose last link is of orientation ca . By making a turn at p in orientation cj (without extending πi ), we obtain a path πi of length l(ei ) + 1, whose last link is of orientation cj . Therefore, there is an interval b ∈ I + (ei , cj ) such that p ∈ b, and since (by construction) there are no overlapping intervals in I + (ei , cj ), we conclude that a ⊆ b. Lemma 2. For any 1 ≤ i ≤ n − 1 and cj ∈ C, if there is an interval a ∈ I(ei , cj ) ∪ I + (ei , cj ) such that P T (a) ∩ ei+1 = ∅, then, for any interval b ∈ I(ei , cj ) ∪ I + (ei , cj ), we have that P T (b) ∩ ei+1 = ∅. Proof. If there exist intervals a ∈ I(ei , cj ) ∪ I + (ei , cj ) and b ∈ I(ei , cj ) ∪ I + (ei , cj ), such that ei+1 intersects both P T (a) and P T (b), then ei+1 must intersect ei (see Fig. 1)—contradiction. The following claim bounds the number of intervals with associated length and orientation l(ei ) + 1 and cj , respectively, that are ‘created’ on ei+1 . Claim 3. At most max {|I(ei , cj )|, |I + (ei , cj )|} + 2 intervals with associated length and orientation l(ei ) + 1 and cj , respectively, are ‘created’ on ei+1 , during the execution of the algorithm. Proof. There are two ways to reach a point on ei+1 with a path of length l(ei )+1 whose last link is of orientation cj . The ﬁrst is by passing through one of the intervals in I(ei )\I(ei , cj ) and then making a turn in orientation cj . The second is by passing through one of the intervals in I + (ei , cj ), without making any turn. That is, the intervals on ei+1 with associated length l(ei ) + 1 and associated orientation cj are determined by the intervals in I + (ei , cj ) ∪ (I(ei )\I(ei , cj )). Consider an interval b ∈ I + (ei , cj ) (e.g., the blue interval in Fig. 2), and let c ∈ C be the orientation of ei when directed from b1 to b2 . We divide δ(b)\I(ei , cj ) into four subsets as follows: A = {a ∈ δ(b) | ca ∈ φ(cj , c) ∪ {c}}, B = {a ∈ δ(b) | ca ∈ φ(c, cj )}, C = {a ∈ δ(b) | ca ∈ φ(cj , c)}, and D = {a ∈ δ(b) | ca ∈ φ(c, cj ) ∪ {c}}. We denote by Rb∪A the region of all points that can be reached by a path that passes through b, or passes through a ∈ A and then makes a  turn in orientation cj (i.e., Rb∪A = P T (b) ∪ a∈A ψ(a, cj )). We compute the boundary of Rb∪A from P T (b), by adding the regions ψ(a, cj ), one at a time, for each interval a ∈ A. Let ψ(a, cj ), for some a ∈ A, be the region that is added in the ﬁrst step (see the red interval in Fig. 2). Since (a1 , a2 ) ⊆ (b1 , b2 ) and ca ∈ φ(cj , c) ∪ {c}, Ray(a2 , ca ) and Ray(b2 , cj ) intersect at a point pa (see Fig. 2). By passing through a and then turning before reaching Ray(b2 , cj ) (i.e., at one of the points belonging to P T (a) ∩ P T (b)), we cannot reach any point that is not already in P T (b). However, by turning after crossing Ray(b2 , cj ), we can reach points that are in the area bounded by Ray(pa , cj ) and Ray(pa , ca ) (the shaded area in Fig. 2). Thus, the region Rb∪A at the end of the ﬁrst step, is bounded by Ray(b1 , cj ), (b1 , b2 ), (b2 , pa ) and Ray(pa , ca ), as can be seen in Fig. 2. Notice the semi-inﬁnite convex 2-chain that we obtain at the end of the ﬁrst step, namely,  
   
  Minimum-Link C-Oriented Paths  
   
  a1  
   
  e i+1 b1  
   
  b2  
   
  PT  
   
  (a )  
   
  ei a2  
   
  cj  
   
  Fig. 1. If ei+1 intersects both P T (a) (red) and P T (b) (blue), then ei+1 must intersect ei . (Color ﬁgure online)  
   
  (a )  
   
  ,c  
   
  y(  
   
  a2  
   
  PT  
   
  a)  
   
  ca  
   
  Ra  
   
  P T (b)  
   
  PT  
   
  (b )  
   
  cj  
   
  Ray(b2, cj )  
   
  cj  
   
  253  
   
  pa  
   
  ei  
   
  b1  
   
  a 1 a2  
   
  b2  
   
  Fig. 2. The region Rb∪A at the end of the ﬁrst step.  
   
  the chain consisting of (b2 , pa ) followed by Ray(pa , ca ). It is easy to see that the region Rb∪A at the end of the last step, is bounded by Ray(b1 , cj ), (b1 , b2 ), and a semi-inﬁnite convex chain, denoted lA , consisting of at most |A| + 1 edges (see red chain in Fig. 3c). Finally, if A = ∅, then Rb∪A = P T (b) and we set lA = Ray(b2 , cj ).  Next, we set Rb∪D = P T (b) ∪ a∈D ψ(a, cj ), and compute the convex chain lD , which, together with Ray(b2 , cj ) and (b1 , b2 ), deﬁnes the boundary of Rb∪D . Once again, if D = ∅, we set lD = ray(b1 , cj ). Finally, we compute in a similar manner the convex chainslB , which deﬁnes (together with Ray(b1 , cj )) the boundary of Rb∪B = P T (b) ∪ a∈B ψ(a, cj ) (see purple chain in Fig. 3b), and l C , which deﬁnes (together with Ray(b2 , cj )) the boundary of Rb∪C = P T (b) ∪ a∈C ψ(a, cj ). We now set R = Rb∪A ∪ Rb∪B ∪ Rb∪C ∪ Rb∪D , then R is the region of all points that can be reached by a path that passes through b, or passes through a ∈ δ(b)\I(ei , cj ) and then makes a turn in orientation cj . Therefore, R ∩ ei+1 gives us the intervals on ei+1 with length l(ei ) + 1 and orientation cj , which are created by passing through an interval in {b} ∪ δ(b)\I(ei , cj ). In order to ﬁnd these intervals, we identify the boundary of R in each of the following four cases: – Case A: B = ∅ and C = ∅ (as illustrated in Fig. 3a) In this case, R = Rb∪A ∪ Rb∪D , since Rb∪B = Rb∪C = P T (b) and P T (b) ⊆ Rb∪A , Rb∪D , and R’s boundary is composed of lA , lD and b. – Case B: B = ∅ and C = ∅ (as illustrated in Fig. 3b) In this case, the boundary of R is composed of lB and lD , since Rb∪A ⊆ Rb∪B . – Case C: B = ∅ and C = ∅ (as illustrated in Fig. 3c) In this case, the boundary of R is composed of lA and lC , since Rb∪D ⊆ Rb∪C . – Case D: B = ∅ and C = ∅ (as illustrated in Fig. 3d) in this case, R = Rb∪B ∪ Rb∪C , and its boundary is the convex chain l that is obtained from the chains lB and lC , see Fig. 3d.  
   
  254  
   
  K. Geva et al.  
   
  Fig. 3. The boundary of R.  
   
  We now examine how ei+1 can intersect R, in each of these cases. First, if ei+1 does not intersect the boundary of R, then either R ∩ ei+1 = ei+1 or R ∩ ei+1 = ∅. In the former case, one interval is formed on ei+1 , which contains both its endpoints, and in the latter case, no interval is formed on ei+1 . Next, assume that ei+1 intersects the boundary of R. We distinguish between the case where there is an interval h ∈ I(ei , cj ) such that P T (h) ∩ ei+1 = ∅, and the case where there is no such interval. There is an interval h ∈ I(ei , cj ) such that P T (h) ∩ ei+1 = ∅. Then, by Lemma 2, P T (b) ∩ ei+1 = ∅. If Case A: Clearly, ei+1 cannot intersect both lA and lD , since this would imply P T (b) ∩ ei+1 = ∅ (see Fig. 5a). Therefore, ei+1 intersects exactly one of these chains, either at a single point or at two points. If ei+1 intersects the chain at a single point q, then a single interval is formed on ei+1 , whose endpoints are q and the endpoint of ei+1 that lies in R (see the edge e1i+1 in Fig. 4a). If ei+1 intersects the chain at two points, p and p , then two intervals are formed on ei+1 . The endpoints of these intervals are p and p on one side and the corresponding endpoints of ei+1 on the other side (see the edge e2i+1 in Fig. 4a). If Case B: Unlike Case A, the fact that P T (b) ∩ ei+1 = ∅ does not prevent ei+1 from intersecting both lB and lD . However, ei+1 can intersect these chains in at  
   
  Minimum-Link C-Oriented Paths  
   
  255  
   
  most two points (in total), and as in Case A at most two intervals are formed on ei+1 , where each of them contains an endpoint of ei+1 (see Fig. 5b). If Case C: Since Cases B and C are symmetric, at most two intervals are formed on ei+1 , each of which contains an endpoint of ei+1 . If Case D: If ei+1 intersects l at a single point q, then a single interval is formed on ei+1 , whose endpoints are q and the endpoint of ei+1 that lies in R. If ei+1 intersects l at two points p and p , then R ∩ ei+1 consist of all the points on ei+1 , except for those in the interior of (p, p ). Therefore, two intervals are formed on ei+1 , and their endpoints are p and p on one side and the corresponding endpoints of ei+1 on the other side (see Fig. 4b)  
   
  Fig. 4. ei+1 intersects R’s boundary either at a single point q or at two points p and p .  
   
  We have shown that by passing through an interval in {b} ∪ δ(b)\I(ei , cj ), at most two intervals (with associated length l(ei )+1 and orientation cj ) are formed on ei+1 . Moreover, each of these intervals contains an endpoint of ei+1 . Therefore, the total number  of such intervals that are formed on ei+1 , by passing through an interval in b∈I + (ei ,cj ) {b} ∪ δ(b)\I(ei , cj ) is at most two. (For each endpoint p of ei+1 , we retain only the longest interval with p as one of its endpoints.) Finally, observe that by passing through an interval in I(ei , cj ) and turning backwards in orientation cj , at most one interval is formed on ei+1 , which does not necessarily contain an endpoint of ei+1 . We conclude that at most |I(ei , cj )| + 2 intervals (with associated length l(ei ) + 1 and orientation cj ) are formed on ei+1 during the execution of the algorithm (in the case that there isan interval h ∈ I(ei , cj ) such that P T (h)∩ei+1 = ∅). We have used the equality b∈I + (ei ,cj ) {b} ∪ δ(b) = I + (ei , cj ) ∪ I(ei )\I(ei , cj ), which follows from Lemma 1. We now proceed to the complementary case.  
   
  256  
   
  K. Geva et al.  
   
  For Any Interval h ∈ I(ei , cj ), P T (h) ∩ ei+1 = ∅. We defer the details of this case (which are similar to those of the previous case) to the full version of this paper [5]. These details lead to the conclusion that at most |I + (ei , cj )| + 2 intervals (with associated length l(ei ) + 1 and orientation cj ) are formed on ei+1 during the execution of the algorithm in this case.  
   
  Fig. 5. Cases A and B, where there is no such interval h.  
   
  Since only one of the two cases holds (i.e., either there is such an interval h or there is not), we conclude that at most max {|I(ei , cj )| + 2, |I + (ei , cj )| + 2} = max {|I(ei , cj )|, |I + (ei , cj )|} + 2 intervals with associated length l(ei ) + 1 and orientation cj are formed on ei+1 during the execution of the algorithm. This completes the proof of Claim 3. Lemma 3. For any interval a ∈ I(ei ) and orientation cj ∈ C, we do not need to compute the interval on ei+1 with associated length and orientation l(ei ) + 2 and cj , respectively, which is formed by passing through a and then making two turns, where the first is in orientation ca . Proof. By Claim 2, l(ei ) ≤ l(ei+1 ) ≤ l(ei ) + 2. So, the intervals on ei+1 of length l(ei ) + 2 are only relevant if l(ei+1 ) > l(ei ) (Claim 1). Assume therefore that l(ei+1 ) > l(ei ), and let a ∈ I(ei ) (e.g., the red interval in Fig. 6). Let π be a tour of E that passes through a at a point pi , makes a turn in orientation ca at point p, and makes another turn in orientation cj at point p , such that πi+1 (the portion of π from s to ei+1 ) corresponds to an interval of length l(ei ) + 2.  
   
  Minimum-Link C-Oriented Paths  
   
  257  
   
  We distinguish between two cases. If pp ∩ ei = ∅ (i.e., the second turn is before π crosses ei again), as shown in Fig. 6a, then pp does not intersect ei+1 , since this would imply l(ei ) = l(ei+1 ). Therefore, π reaches ei+1 only after the turn at p , and the tour π  which is obtained from π by deleting the link pp (see Fig. 6b), is a tour of E of length |π|−1, hence π is not a minimum-link tour of E. Since our goal is to ﬁnd a minimum-link tour of E, we do not need to compute the interval on ei+1 formed by paths such as π satisfying the condition above.  
   
  Fig. 6. Proof of Lemma 3. The case where the second turn is before π crosses ei again.  
   
  If pp ∩ ei = ∅ (i.e., the second turn is not before π crosses ei again), let T denote the region of all points that can be reached by such paths, i.e., paths such as π satisfying the condition above (see the orange region in Fig. 7a). Then T ∩ ei+1 is the interval on ei+1 with associated length l(ei ) + 2 and orientation cj , formed by these paths. But, by Lemma 1, there exists b ∈ I + (ei , ca ) such that a ⊆ b (see the blue interval in Fig. 7b), and clearly T ⊆ ψ(b, cj ), implying T ∩ ei+1 ⊆ ψ(b, cj ) ∩ ei+1 . The latter interval, i.e., ψ(b, cj ) ∩ ei+1 is computed by our algorithm, so we do not need to compute T ∩ ei+1 . Lemma 4. For any interval a ∈ I(ei ), any point p ∈ R2 , and any orientation / {ca , ca+1 , ca−1 }, p can be reached by a path that passes through a and then cj ∈ makes a turn in some orientation c = ca and another turn in orientation cj . Proof. Consider any interval a ∈ I(ei ). Recall that ψ(a, ca+1 ) (ψ(a, ca−1 )) denotes the region of all the points that can be reached by a path that passes through a and then makes a turn in orientation ca+1 (ca−1 ) (see Fig. 8). It is easy to see that ψ(a, c) ⊆ ψ(a, ca+1 ) for any c ∈ φ(ca , ca ) and ψ(a, c) ⊆ ψ(a, ca−1 ) for any c ∈ φ(ca , ca ). Therefore, Δa = ψ(a, ca +1 ) ∪ ψ(a, ca −1 ) is the region of all the points that can be reached by a path that passes through a and then makes a turn in some orientation c = ca (see Fig. 8c).  
   
  258  
   
  K. Geva et al.  
   
  Fig. 7. Proof of Lemma 3. The case where the second turn is not before π crosses ei again.  
   
  Consider any point p ∈ R2 and any orientation cj ∈ / {ca , ca+1 , ca−1 }. If p ∈ Δa , then p can be reached by a path that passes through a and then makes a turn in some orientation c = ca . By making an additional turn at p in orientation cj (without extending the path), we obtain a path that reaches p as required. / {ca−1 , ca , ca+1 } (as If p ∈ Δa = R2 \Δa , then Ray(p, cj ) ∩ Δa = ∅, since cj ∈ shown in Fig. 9). Let p be any point on Ray(p, cj ) ∩ Δa , then p can be reached by a path that passes through a and then makes a turn in some orientation c = ca , and by extending this path by adding the link p p, we obtain a path that reaches p as required. Consider the region Δa = ψ(a, ca +1 ) ∪ ψ(a, ca −1 ) deﬁned in the proof of Lemma 4. Then, as mentioned in the proof of Lemma 4, Δa is the region of all the points that can be reached by a path that passes through a and then makes a turn in some orientation c = ca . In addition, we notice that by extending such a path by adding a link in orientation cj , for cj ∈ {ca , ca+1 , ca−1 }, we cannot leave Δa (see Fig. 10), since for any point q ∈ Δa , Ray(q, cj ) ⊆ Δa . The following claim bounds the number of intervals with associated length and orientation l(ei ) + 2 and cj , respectively, that are ‘created’ on ei+1 . Claim 4. At most |I + (ei , cj )|+2 intervals with associated length and orientation l(ei ) + 2 and cj , respectively, are ‘created’ on ei+1 , during the execution of the algorithm. Proof. The proof can be found in the full version of this paper [5]. Here, we only observe that there are two ways to reach a point on ei+1 with a path of length l(ei ) + 2 whose last link is of orientation cj . The ﬁrst is by passing through one of the intervals a ∈ I(ei ) and then making two turns, where the ﬁrst one is in orientation c = ca and the second one is in orientation cj (see Lemma 3). The second way is by passing through one of the intervals in I + (ei )\I + (ei , cj ), and then making a turn in orientation cj . That is, the intervals on ei+1 with associated length l(ei ) + 2 and associated orientation cj are determined by the intervals in I(ei ) ∪ (I + (ei )\I + (ei , cj )).  
   
  Minimum-Link C-Oriented Paths  
   
  259  
   
  Fig. 8. All the points that can be reached by a path that passes through a and then makes a turn in some orientation c = ca .  
   
  The following claim bounds the number of intervals with associated length and orientation l(ei ) + 3 and cj , respectively, that are ‘created’ on ei+1 . Claim 5. For any q ∈ ei+1 and for any cj ∈ C, there exists a path of length l(ei ) + 3 from s to q, whose last link has orientation cj , for 1 ≤ i ≤ n − 1. Proof. Consider any path π from s to ei that corresponds to an interval in I(ei ), and let p be the point on ei where π ends. Since C spans the plane, there exists a two-link path from p to q, and by making a turn at q in orientation cj (without extending the path), we obtain a three-link path πp,q from p to q whose last link has orientation cj . So, the path obtained by concatenating the paths π and πp,q is as desired. Claim 6. For any 0 ≤ i ≤ n+1 and cj ∈ C, |I(ei , cj )| ≤ 2i+1 and |I + (ei , cj )| ≤ 2i + 1. Proof. The proof is by induction on i. For i = 0, the claim is clearly true; |I(e0 , cj )| = |I + (e0 , cj )| = 1. Assume now that the claim is true for i, 0 ≤ i ≤ n, that is, for any cj ∈ C, we have |I(ei , cj )| ≤ 2i + 1 and |I + (ei , cj )| ≤ 2i + 1. We show below that it remains true for i + 1. Recall that l(ei ) ≤ l(ei+1 ) ≤ l(ei ) + 2 (Claim 2). We show that the claim remains true in each of the resulting three cases. – Case A: l(ei+1 ) = l(ei ). In this case I(ei+1 , cj ) stores the +0-intervals on ei+1 with respect to I(ei , cj ). Since, each interval a ∈ I(ei , cj ) ‘creates’ at most one +0-interval on ei+1 , we get that |I(ei+1 , cj )| ≤ |I(ei , cj )| ≤ 2i + 1. Recall that I + (ei+1 , cj ) is the set of maximal intervals on ei+1 formed by all  
   
  260  
   
  K. Geva et al.  
   
  Fig. 9. Lemma 4. If p ∈ Δa , then Ray(p, cj ) ∩ Δa = ∅.  
   
  Fig. 10. For any q ∈ Δa , Ray(q, cj ) ∩ Δa = ∅, for cj ∈ {ca , ca+1 , ca−1 }.  
   
  paths of length l(ei+1 ) + 1 = l(ei ) + 1, whose last link has orientation cj . By Claim 3, |I + (ei+1 , cj )| ≤ max{|I(ei , cj )|, |I + (ei , cj )|} + 2, and therefore |I + (ei+1 , cj )| ≤ max{2i + 1, 2i + 1} + 2 = 2(i + 1) + 1. – Case B: l(ei+1 ) = l(ei )+1. In this case, I(ei+1 , cj ) is the set of maximal intervals on ei+1 formed by all paths of length l(ei+1 ) = l(ei ) + 1, whose last link has orientation cj . By Claim 3, |I(ei+1 , cj )| ≤ max{|I(ei , cj )|, |I + (ei , cj )|}+2, so, |I(ei+1 , cj )| ≤ max{2i + 1, 2i + 1} + 2 = 2(i + 1) + 1. Now, I + (ei+1 , cj ) is the set of maximal intervals on ei+1 formed by all paths of length l(ei+1 )+1 = l(ei )+2, whose last link has orientation cj . By Claim 4, |I + (ei+1 , cj )| ≤ |I + (ei , cj )| + 2, and therefore |I + (ei+1 , cj )| ≤ 2i + 1 + 2 = 2(i + 1) + 1. – Case C: l(ei+1 ) = l(ei ) + 2. In this case, I(ei+1 , cj ) is the set of maximal intervals on ei+1 formed by all paths of length l(ei+1 ) = l(ei ) + 2, whose last link has orientation cj . Thus, by Claim 4, |I(ei+1 , cj )| ≤ |I + (ei , cj )| + 2 ≤ 2(i+1)+1. Moreover, in this case, I + (ei+1 , cj ) = {ei+1 }, so |I + (ei+1 , cj )| = 1. Running Time. We bound the running time of each of the two stages of our algorithm. Consider the i’th iteration of the main loop of Stage I. We need O(|I(ei , cj )| + |I + (ei , cj )|) time to compute the +0-intervals on ei+1 , O(|I(ei )\I(ei , cj )| + |I + (ei )\I + (ei , cj )|) time to compute the +1-intervals, and O(|I(ei )|) time to compute the +2-intervals. Since we perform this calculation for each cj ∈ C, the running time of the i’th iteration is O(|C| · {|I(ei )| + |I + (ei )|}). By Claim 6 we conclude that |I(ei )| = O(|C| · (2i + 1)) and |I + (ei )| = O(|C| · (2i + 1)), for 1 ≤ i ≤ n + 1. Therefore, the running time of Stage I n+1 is i=1 O(|C| · |C| · (2i + 1)) = O(|C|2 · n2 ). In stage 2, we run the algorithm (described in the full version of this paper [5]) for each i from n + 1 to 1. The running time of the algorithm is O(|I(ei−1 )| + |I + (ei−1 )|), and by Claim 6 we get O(|C| · i). Therefore, the running time of n+1 Stage II is i=1 O(|C| · i) = O(|C| · n2 ).  
   
  Minimum-Link C-Oriented Paths  
   
  261  
   
  Thus, the overall running time of the algorithm is O(|C|2 ·n2 ), as summarized: Theorem 1. Given a set E of n disjoint C-oriented segments in the plane and points s and t that do not belong to any of the segments in E, one can compute a minimum-link C-oriented tour of E in O(|C|2 · n2 ) time.  
   
  5  
   
  Extensions  
   
  In the case that |C| = 4 (e.g., axis-parallel paths and segments), the specialization of our analysis shows a constant upper bound on the number of intervals on each segment; this results in overall time O(n). Also, our analysis only required that consecutive segments in E do not intersect each other; they can otherwise intersect. In ongoing and future work we consider more general polygonal regions, possibly overlapping arbitrarily. We also consider query versions of the problem in which we build data structures (shortest path maps) that allow link distance queries on subsequences of the input set of regions, between query points in the plane. Future work might examine problems in 3D. Acknowledgements. M. Katz was partially supported by the US-Israel Binational Science Foundation (BSF project 2019715/NSF CCF-2008551). J. Mitchell was partially supported by the National Science Foundation (CCF-2007275) and the US-Israel Binational Science Foundation (BSF project 2016116).  
   
  References 1. Alatartsev, S., Mersheeva, V., Augustine, M., Ortmeier, F.: On optimizing a sequence of robotic tasks. In: 2013 IEEE/RSJ International Conference on Intelligent Robots and Systems, pp. 217–223. IEEE (2013) 2. Alatartsev, S., Stellmacher, S., Ortmeier, F.: Robotic task sequencing problem: a survey. J. Intell. Robot. Syst. 80, 279–298 (2015) 3. Dror, M., Efrat, A., Lubiw, A., Mitchell, J.S.B.: Touring a sequence of polygons. In: 2003 Proceedings of the 35th Annual ACM Symposium on Theory of Computing, pp. 473–482. ACM (2003) 4. Egyed, P., Wenger, R.: Ordered stabbing of pairwise disjoint convex sets in linear time. Discret. Appl. Math. 31(2), 133–140 (1991) 5. Geva, K., Katz, M.J., Mitchell, J.S.B., Packer, E.: Minimum-link C-oriented paths visiting a sequence of regions in the plane. CoRR, abs/2302.06776 (2023) 6. Guibas, L.J., Hershberger, J., Mitchell, J.S.B., Snoeyink, J.: Approximating polygons and subdivisions with minimum link paths. Int. J. Comput. Geometry Appl. 3(4), 383–415 (1993) 7. L¨ oﬄer, M.: Existence and computation of tours through imprecise points. Int. J. Comput. Geomet. Appl. 21(1), 1–24 (2011) 8. Mitchell, J.S.B.: Shortest paths and networks. In: Goodman, J.E., T´ oth, C., O’Rourke, J. (eds.) Handbook of Discrete and Computational Geometry, 3rd edn., chap. 31, pp. 811–848. Chapman & Hall/CRC, Boca Raton (2017) 9. Mitchell, J.S.B., Polishchuk, V., Sysikaski, M.: Minimum-link paths revisited. Comput. Geomet. 47(6), 651–667 (2014)  
   
  262  
   
  K. Geva et al.  
   
  10. Neyer, G.: Line simpliﬁcation with restricted orientations. In: Dehne, F., Sack, J.-R., Gupta, A., Tamassia, R. (eds.) WADS 1999. LNCS, vol. 1663, pp. 13–24. Springer, Heidelberg (1999). https://doi.org/10.1007/3-540-48447-7 2 11. Speckmann, B., Verbeek, K.: Homotopic C-oriented routing with few links and thick edges. Comput. Geom. 67, 11–28 (2018)  
   
  Grouped Domination Parameterized by Vertex Cover, Twin Cover, and Beyond Tesshu Hanaka1 , Hirotaka Ono2(B) , Yota Otachi2 , and Saeki Uda2 1  
   
  Kyushu University, Fukuoka, Japan [email protected]  2 Nagoya University, Nagoya, Japan {ono,otachi}@nagoya-u.jp, [email protected]  Abstract. A dominating set S of graph G is called an r-grouped dominating set if S can be partitioned into S1 , S2 , . . . , Sk such that the size of each unit Si is r and the subgraph of G induced by Si is connected. The concept of r-grouped dominating sets generalizes several well-studied variants of dominating sets with requirements for connected component sizes, such as the ordinary dominating sets (r = 1), paired dominating sets (r = 2), and connected dominating sets (r is arbitrary and k = 1). In this paper, we investigate the computational complexity of r-Grouped Dominating Set, which is the problem of deciding whether a given graph has an r-grouped dominating set with at most k units. For general r, r-Grouped Dominating Set is hard to solve in various senses because the hardness of the connected dominating set is inherited. We thus focus on the case in which r is a constant or a parameter, but we see that r-Grouped Dominating Set for every ﬁxed r > 0 is still hard to solve. From the observations about the hardness, we consider the parameterized complexity concerning well-studied graph structural parameters. We ﬁrst see that r-Grouped Dominating Set is ﬁxedparameter tractable for r and treewidth, which is derived from the fact that the condition of r-grouped domination for a constant r can be represented as monadic second-order logic (MSO2 ). This ﬁxed-parameter tractability is good news, but the running time is not practical. We then design an O∗ (min{(2τ (r+1))τ , (2τ )2τ })-time algorithm for general r ≥ 2, where τ is the twin cover number, which is a parameter between vertex cover number and clique-width. For paired dominating set and trio dominating set, i.e., r ∈ {2, 3}, we can speed up the algorithm, whose running time becomes O∗ ((r + 1)τ ). We further argue the relationship between FPT results and graph parameters, which draws the parameterized complexity landscape of r-Grouped Dominating Set. Keywords: Dominating Set · Paired Dominating Set Complexity · Graph Structural Parameters  
   
  · Parameterized  
   
  Partially supported by JSPS KAKENHI Grant Numbers JP17H01698, JP17K19960, JP18H04091, JP20H05793, JP20H05967, JP21K11752, JP21H05852, JP21K17707, JP21K19765, and JP22H00513. c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  M. Mavronicolas (Ed.): CIAC 2023, LNCS 13898, pp. 263–277, 2023. https://doi.org/10.1007/978-3-031-30448-4_19  
   
  264  
   
  1 1.1  
   
  T. Hanaka et al.  
   
  Introduction Definition and Motivation  
   
  Given an undirected graph G = (V, E), a vertex set S ⊆ V is called a dominating set if every vertex in V is either in S or adjacent to a vertex in S. The dominating set problem is the problem of ﬁnding a dominating set with the minimum cardinality. Since the deﬁnition of dominating set, i.e., covering all the vertices via edges, is natural, many practical and theoretical problems are modeled as dominating set problems with additional requirements; many variants of dominating set are considered and investigated. Such variants somewhat generalize or extend the ordinary dominating set based on theoretical or applicational motivations. In this paper, we focus on variants that require the dominating set to satisfy speciﬁc connectivity and size constraints. One example considering connectivity is the connected dominating set. A dominating set is called a connected dominating set if the subgraph induced by a dominating set is connected. Another example is the paired dominating set. A paired dominating set is a dominating set of a graph such that the subgraph induced by it admits a perfect matching. This paper introduces the r-grouped dominating set, which generalizes the connected dominating set, the paired dominating set, and some other variants. A dominating set S is called an r-grouped dominating set if S can be partitioned into {S1 , S2 , . . . , Sk } such that each Si is a set of r vertices and G[Si ] is connected. We call each Si a unit. The r-grouped dominating set generalizes both the connecting dominating set and the paired dominating set in the following sense: a connecting dominating set with r vertices is equivalent to an r-grouped dominating set of one unit, and a paired dominating set with k pairs is equivalent to a 2-grouped dominating set with k units. This paper investigates the parameterized complexity of deciding whether a given graph has an r-grouped dominating set with k units. The parameters that we focus on are so-called graph structural parameters, such as vertex cover number and twin-cover number. The results obtained in this paper are summarized in Our Contribution (Sect. 1.3). 1.2  
   
  Related Work  
   
  An enormous number of papers study the dominating set problem, including the ones strongly related to the r-grouped dominating set. The dominating set problem is one of the most important graph optimization problems. Due to its NP-hardness, its tractability is ﬁnely studied from several aspects, such as approximation, solvable graph classes, fast exact exponentialtime solvability, and parameterized complexity. Concerning the parameterized complexity, the dominating set problem is W[2]-complete for solution size k; it is unlikely to be ﬁxed-parameter tractable [12]. On the other hand, since the dominating set can be expressed in MSO1 , it is FPT when parametrized by clique-width or treewidth (see, e.g., [23]).  
   
  Grouped Domination Parameterized by Structural Parameters  
   
  265  
   
  The connected dominating set is a well-studied variant of dominating set. This problem arises in communication and computer networks such as mobile ad hoc networks. It is also W[2]-hard when parameterized by the solution size [12]. Furthermore, the connected dominating set also can be expressed in MSO1 ; it is FPT when parametrized by clique-width and treewidth as in the ordinary dominating set problem. Furthermore, single exponential-time algorithms for connected dominating set parameterized by treewidth can be obtained by the Cut & Count technique [13] or the rank-based approach [2]. The notion of the paired dominating set is introduced in [21,22] by Haynes and Slater as a model of dominating sets with pairwise backup. It is NP-hard on split graphs, bipartite graphs [8], graphs of maximum degree 3 [6], and planar graphs of maximum degree 5 [29], whereas it can be solved in polynomial time on strongly-chordal graphs [7], distance-hereditary graphs [26], and AT-free graphs [29]. There are several graph classes (e.g., strongly orderable graphs [28]) where the paired dominating set problem is tractable, whereas the ordinary dominating set problem remains NP-hard. For other results about the paired dominating set, see a survey [14]. 1.3  
   
  Our Contributions  
   
  This paper provides a uniﬁed view of the parameterized complexity of dominating set problem variants with connectivity and size constraints. As mentioned above, an r-grouped dominating set of G with 1 unit is equivalent to a connected dominating set with size r, which implies that some hardness results of r-Grouped Dominating Set for general r are inherited directly from Connected Dominating Set. From these, we mainly consider the case where r is a constant or a parameter. Unfortunately, r-Grouped Dominating Set for r = 1, 2 is also hard to solve again because 1-Grouped Dominating Set and 2-Grouped Dominating Set are respectively the ordinary dominating set problem and the paired dominating set problem. Thus, it is worth considering whether a larger but constant r enlarges, restricts, or leaves unchanged the graph classes for which similar hardness results hold. A way to classify or characterize graphs of certain classes is to focus on graph-structural parameters. By observing that the condition of r-grouped dominating set can be represented as monadic second-order logic (MSO2 ), we can see that r-Grouped Dominating Set is ﬁxed-parameter tractable for r and treewidth. Recall that the condition of the connected dominating set can be represented as monadic second-order logic (MSO1 ), which implies that there might exist a gap between r = 1 and 2, or between k = 1 and k > 1. Although this FPT result is good news, the running time is not practical. From these, we focus on less generalized graph structural parameters, vertex cover number ν or twin cover number τ as a parameter, and design single exponential ﬁxed-parameter algorithms for r-Grouped Dominating Set. Our algorithm is based on dynamic programming on nested partitions of a vertex cover, and its running time is O∗ (min{(2ν(r + 1))ν , (2ν)2ν }) for general r ≥ 2. For paired dominating set and trio dominating set, i.e., r ∈ {2, 3}, we can  
   
  266  
   
  T. Hanaka et al.  
   
  tailor the algorithm to run in O∗ ((r + 1)ν ) time by observing that the nested partitions of a vertex cover degenerate in some sense. We then turn our attention to a more general parameter, the twin cover number. We show that, given a twin cover, r-Grouped Dominating Set admits an optimal solution in which twin-edges do not contribute to the connectivity of runits. This observation implies that these edges can be removed from the graph, and thus we can focus on the resultant graph of bounded vertex cover number. Hence, we can conclude that our algorithms still work when the parameter ν in the running time is replaced with twin cover number τ . We further argue the relationship between FPT results and graph parameters. The perspective is summarized in Fig. 1, which draws the parameterized complexity landscape of r-Grouped Dominating Set. We omit the proofs of some of the results, which can be found in the full version of this paper [20].  
   
  Fig. 1. The complexity of r-Grouped Dominating Set with respect to structural graph parameters. An edge between two parameters indicates that there is a function in the one above that lower-bounds the one below (e.g., treewidth ≤ pathwidth).  
   
  2  
   
  Preliminaries  
   
  Let G = (V, E) be an undirected graph. For a vertex subset V  ⊆ V , the subgraph induced by V  is denoted by G[V  ]. Let us denote by N (v) and N [v] the open neighborhood and the closed neighborhood of v, respectively. The degree of a vertex v is deﬁned by d(v) = |N (v)|, and Δ denotes the maximum degree of G. A vertex set S is a vertex cover of G if for every edge {u, v} ∈ E, at least one of u, v is in S. The vertex cover number ν of G is deﬁned by the size of a minimum vertex cover of G. A minimum vertex cover of G can be found in O∗ (1.2738ν ) time [5].1 1  
   
  The O∗ notation suppresses the polynomial factors of the input size.  
   
  Grouped Domination Parameterized by Structural Parameters  
   
  267  
   
  Two vertices u and v are (true) twins if N [u] = N [v]. An edge {u, v} ∈ E is a twin edge if u and v are true twins. A vertex set S is a twin cover if for every edge {u, v} ∈ E, either {u, v} is a twin edge, or at least one of u, v is in S. The size τ of a minimum twin cover of G is called the twin cover number of G. A minimum twin cover of G can be found in the same running time as vertex cover, i.e., O∗ (1.2738τ ) [16]. 2.1  
   
  r-Grouped Dominating Set  
   
  An r-grouped dominating set with k units in G is a family D = {D1 , . . . , Dk } of subsets of V such that   Di ’s are mutually disjoint, |Di | = r, G[Di ] is connected for 1 ≤i ≤ k, and D∈D D is a dominating set of G. For simplicity, let D denote D∈D D. We say that D is a minimum r-grouped dominating set if it is an r-grouped dominating set with the minimum number of units. r-Grouped Dominating Set Input: A graph G and positive integers r and k. Question: Is there an r-grouped dominating set with at most k units in G?  
   
  3  
   
  Basic Results  
   
  In this section, we see some preliminary results without proof (see the full version for the proofs). We ﬁrst see that r-Grouped Dominating Set is W[2]-hard but XP when parameterized by k + r. Furthermore, it is NP-hard even on planar bipartite graphs of maximum degree 3. Theorem 3.1. For every fixed r ≥ 1, r-Grouped Dominating Set is W[2]hard when parameterized by k even on split graphs or bipartite graphs. Theorem 3.2. For every fixed k ≥ 1, r-Grouped Dominating Set is W[2]hard when parameterized by r even on split graphs or bipartite graphs. Theorems 3.1 and 3.2 imply that r-Grouped Dominating Set is unlikely to be FPT when parameterized by k or r. On the other hand, we can show that the problem is XP when parameterized by k + r. 2  
   
  Theorem 3.3. r-Grouped Dominating Set can be solved in O∗ (ΔO(kr ) ) time. Corollary 3.4. r-Grouped Dominating Set belongs to XP when parameterized by k + r. Tripathi et al. [29] showed that Paired Dominating Set (equivalently, 2Grouped Dominating Set) is NP-complete for planar graphs with maximum degree 5. We obtain a more potent and broader result, that is, r-Grouped Dominating Set is NP-hard even on planar bipartite graphs of maximum degree 3 for every ﬁxed r ≥ 1.  
   
  268  
   
  T. Hanaka et al.  
   
  Theorem 3.5. For every fixed r ≥ 1, r-Grouped Dominating Set is NPcomplete on planar bipartite graphs of maximum degree 3. Corollary 3.6. For every fixed r ≥ 1, r-Grouped Dominating Set cannot be solved in 2o(n+m) time on bipartite graphs unless ETH fails.  
   
  4  
   
  Fast Algorithms Parameterized by Vertex Cover Number and by Twin Cover Number  
   
  In this section, we present FPT algorithms for r-Grouped Dominating Set parameterized by vertex cover number ν. Our algorithm is based on dynamic programming on nested partitions of a vertex cover, and its running time is O∗ ((2ν(r + 1))ν ) for general r ≥ 2. For the cases of r ∈ {2, 3}, we can tailor the algorithm to run in O∗ ((r + 1)ν ) time by focusing on the fact that the nested partitions of a vertex cover degenerate in some sense. We then turn our attention to a more general parameter twin cover number. We show that, given a twin cover, r-Grouped Dominating Set admits an optimal solution in which twin-edges do not contribute to the connectivity of r-units. This implies that these edges can be removed from the graph, and thus we can focus on the resultant graph of bounded vertex cover number. Hence, we can conclude that our algorithms still work when the parameter ν in the running time is replaced with twin cover number τ . Theorem 4.1. For graphs of twin cover number τ , r-Grouped Dominating Set can be solved in O∗ ((2τ (r + 1))τ ) time. For the cases of r ∈ {2, 3}, it can be solved in O∗ ((r + 1)τ ) time. With a simple observation, Theorem 4.1 implies that r-Grouped Dominating Set parameterized solely by τ is ﬁxed-parameter tractable. Corollary 4.2. For graphs of twin cover number τ , r-Grouped Dominating Set can be solved in O∗ ((2τ )2τ ) time. Proof. If r < 2τ − 1, then the problem can be solved in O∗ ((2τ )2τ ) time by Theorem 4.1. Assume that r ≥ 2τ − 1. Let C be a connected component of the input graph. If |V (C)| < r, then we have a trivial no-instance. Otherwise, we construct a connected dominating set D of C with size exactly r, which works as a unit dominating C. We initialize D with a non-empty twin cover of size at most τ . Note that such a set can be found in O∗ (1.2738τ ) time: if C is a complete graph, then we pick an arbitrary vertex v ∈ V (C) and set D = {v}; otherwise, just ﬁnd a minimum twin cover. Since C is connected, D is a dominating set of C. If C[D] is not connected, we update D with a new element v adjacent to at least two connected components of C[D]. Since |D| ≤ τ at the beginning, we can repeat this update at most τ − 1 times, and after that C[D] becomes connected and |D| ≤ 2τ − 1 ≤ r. We ﬁnally add r − |D| vertices arbitrarily and obtain a desired set.    
   
  Grouped Domination Parameterized by Structural Parameters  
   
  269  
   
  Fig. 2. Partitioning a vertex cover into three parts.  
   
  In the next subsection, we ﬁrst present an algorithm for 2-Grouped Dominating Set parameterized by vertex cover number, which gives a basic scheme of our dynamic programming based algorithms. We then see how we extend the idea to 3-Grouped Dominating Set. As explained above, these algorithms are based on dynamic programming (DP), and they compute certain function values on partitions of a vertex cover. Unfortunately, it is not obvious how to extend the strategy to general r. Instead, we consider nested partitions of a vertex cover for DP tables, which makes the running time a little slower though. In the last subsection, we see how a vertex cover can be replaced with a twin cover in the same running time in terms of order. 4.1  
   
  Algorithms Parameterized by Vertex Cover Number  
   
  Algorithm for 2-Grouped Dominating Set. We ﬁrst present an algorithm for the simplest case r = 2, i.e., the paired dominating set. Let G = (V, E) be a graph and J be a vertex cover of G. Then, I = V \ J is an independent set. The basic scheme of our algorithm follows the algorithm for the dominating set problem by Liedloﬀ [25], which focuses on a partition of a given vertex cover J. For a minimum dominating set D, the vertex cover J is partitioned into three parts: J ∩ D; (J \ D) ∩ N (J ∩ D), that is, the vertices in J \ D that are dominated by J ∩ D; and J \ N [J ∩ D], that is, the remaining vertices. Note that the remaining vertices in J \ N [J ∩ D] are dominated by I ∩ D. Once J ∩ D is ﬁxed, a minimum I ∩ D is found by solving the set cover problem that reﬂects the condition that J \ N [J ∩ D] must be dominated by I ∩ D. The algorithm computes a minimum dominating set by solving set cover problems deﬁned by all candidates of J ∩ D. To adjust the algorithm to 2-Grouped Dominating Set, we need to handle the condition that a dominating set contains a perfect matching. For each subset JD ⊆ J, we ﬁnd a subset ID ⊆ I (if any exists) of the minimum size such that JD ∪ ID can form a 2-grouped dominating set. Let X and Y be disjoint subsets of J, and let I = {v1 , v2 , . . . , v|I| } (see Fig. 2). For j = 0, . . . , |I|, we deﬁne an auxiliary table A[X, Y, j] as the minimum size of I  ⊆ {v1 , v2 , . . . , vj } that satisﬁes the following conditions. 1. Y ⊆ N (I  ), (2) (2) (2) 2. I  ∪ X has a partition D(2) = {D1 , D2 , . . . , Dp } with p ≤ k such that for (2) (2) all i = 1, . . . , p, |Di | = 2 and G[Di ] is connected.  
   
  270  
   
  T. Hanaka et al.  
   
  We set A[X, Y, j] = ∞ if no I  ⊆ {v1 , v2 , . . . , vj } satisﬁes the conditions. We can easily compute A[X, Y, 0] ∈ {0, ∞} as A[X, Y, 0] = 0 if and only if G[X] has a perfect matching and Y = ∅. Now the following recurrence formula computes A:   A[X, Y, j + 1] = min A[X, Y, j], min A[X \ {u}, Y \ N (vj+1 ), j] + 1 . u∈N (vj+1 )∩X  
   
  The recurrence ﬁnds the best way under the condition that we can use vertices from v1 , v2 , . . . , vj , vj+1 in a dominating set: not using vj+1 , or pairing vj+1 with u ∈ N (vj+1 ) ∩ X. We can compute all entries of A in O∗ (3|J| ) time in a DP manner as there are only 3|J| ways for choosing disjoint subsets X and Y of J. Now we compute the minimum number of units in a 2-grouped dominating set of G (if any exists) by looking up some appropriate table entriesof A. Let D   be a 2-grouped dominating set of G with JD = J ∩ D and ID = I ∩ D. Since D is a dominating set with no isolated vertex in G[ D], JD dominates all vertices in I. Let JY = J \N [JD ]. Then the deﬁnition of A implies that A[JD , JY , |I|] = |ID |. Conversely, if X ⊆ J dominates I, Y = J \ N [X], and A[X, Y, |I|] = ∞, then there is a 2-grouped dominating set with (|X| + A[X, Y, |I|])/2 units. Therefore, the minimum number of units in a 2-grouped dominating set of G is min{(|X| + A[X, J \ N [X], |I|])/2 | X ⊆ J and I ⊆ N (X)}, which can be computed in O∗ (2|J| ) time given the table A. Thus the total running time is O∗ (3|J| ). Algorithm for 3-Grouped Dominating Set. Next, we consider the case r = 3, i.e., the trio dominating set. Let G = (V, E) be a graph, J be a vertex cover of G, and I = V \J. The basic idea is the same as the case r = 2 except that we partition the vertex cover into four parts in the DP, and thus the recurrence formula for A is diﬀerent. In the DP, the vertex cover J is partitioned into four parts depending on the partial solution corresponding to each table entry. For each subset JD ⊆ J, we ﬁnd a subset ID ⊆ I (if any exists) of the minimum size such that JD ∪ ID can form a 3-grouped dominating set. Let X, F , and Y be disjoint subsets of J, and let I = {v1 , v2 , . . . , v|I| }. Intuitively, the set F represents partial units that will later be completed to full units. For j = 0, . . . , |I|, we deﬁne A[X, F, Y, j] as the minimum size of I  ⊆ {v1 , v2 , . . . , vj } that satisﬁes the following conditions: 1. Y ⊆ N (I  ), 2. I  can be partitioned into two parts I2 , I3 satisfying the following conditions: (2) (2) (2) – I2 ∪ F has a partition D(2) = {D1 , D2 , . . . , Dp } with p ≤ k such that (2) (2) for all i = 1, . . . , p, |Di | = 2 and G[Di ] is connected. (3) (3) (3) – I3 ∪ X has a partition D(3) = {D1 , D2 , . . . , Dq } with q ≤ k such that (3) (3) for all i = 1, . . . , q, |Di | = 3 and G[Di ] is connected. We set A[X, F, Y, j] = ∞ if no I  ⊆ {v1 , v2 , . . . , vj } satisﬁes the conditions. We can easily compute A[X, F, Y, 0] ∈ {0, ∞} as A[X, F, Y, 0] = 0 if and only if F = Y = ∅ and G[X] admits a partition into connected graphs of 3-vertices.  
   
  Grouped Domination Parameterized by Structural Parameters  
   
  271  
   
  Fig. 3. How vj+1 is used. (The white vertices belong to a dominating set.)  
   
  The last condition can be checked in O(2|J| · |J|3 ) time for all X ⊆ J by recursively considering all possible ways for removing three vertices from X; that is, A[X, ∅, ∅, 0] = min{x,y,z}∈(X ) A[X \ {x, y, z}, ∅, ∅, 0] if |X| ≥ 3. The following 3  
   
  recurrence formula holds: A[X, F, Y, j + 1] = min{f1 , f2 , f3 , f4 }, where f1 = A[X, F, Y, j], min f2 =  
   
  α,β∈X,|E(G[{α,β,vj+1 }])|≥2  
   
  f3 = f4 =  
   
  A[X \ {α, β}, F, Y \ {N ({α, β, vj+1 })}, j] + 1,  
   
  min  
   
  A[X \ {α}, F ∪ {α}, Y \ N (vj+1 ), j] + 1,  
   
  min  
   
  A[X, F \ {β}, Y \ N ({β, vj+1 }), j] + 1.  
   
  α∈X∩N (vj+1 ) β∈F ∩N (vj+1 )  
   
  The four options f1 , f2 , f3 , and f4 assume diﬀerent ways of the role of vj+1 and compute the optimal value under the assumptions (see Fig. 3). Concretely, f1 is the case when vj+1 does not belong to the solution, and f2 is the case when vj+1 belongs to the solution together with two vertices in J in a connected way. In f3 , vj+1 forms a triple in the solution with a vertex in F and a vertex in Ij . In f4 , vj+1 currently forms a pair in J and will form a triple with a vertex in I \ Ij . We can compute all entries of A in O∗ (4|J| ) time. Similarly to the previous case of r = 2, we can compute the minimum number of units in a 3-grouped dominating set as min{(|X| + A[X, ∅, J \ N [X], |I|])/3 | X ⊆ J and I ⊆ N (X)}. Given the table A, this can be done in O∗ (2|J| ) time. Thus the total running time of the algorithm is O∗ (4|J| ). Algorithm for r-Grouped Dominating Set. We now present our algorithm for general r ≥ 4. Let G = (V, E) be a graph, J be a vertex cover of G, and I = V \ J. Our algorithm is still based on a similar framework to the previous cases, though connected components of general r can be built up from smaller  
   
  272  
   
  T. Hanaka et al.  
   
  Fig. 4. A nested partition of a vertex cover.  
   
  fragments of connected components; this yields an essential diﬀerence that worsens the running time. In the DP, J is partitioned into r + 1 parts depending on the partial solution corresponding to each table entry, and then some of the parts in the partition are further partitioned into smaller subsets. In other words, each table entry corresponds to a nested partition of the vertex cover. As in the previous algorithms, for each subset JD ⊆ J, we ﬁnd a subset ID ⊆ I (if any exists) of the minimum size such that JD ∪ ID can form an rgrouped dominating set. Let X, F (r−1) , . . . , F (3) , F (2) , Y be disjoint subsets of J, and let I = {v1 , v2 , . . . , v|I| }. For i = 2, . . . , r − 1, let F (i) be a partition of (i) (i) (i) F (i) , where F (i) = {F1 , F2 , . . . , F|F (i) | }. The number of such nested partitions  
   
  (X, F (r−1) , . . . , F (2) , Y ) is at most (r + 1)|J| |J||J| . For j = 0, . . . , |I|, we deﬁne A[X, F (r−1) , . . . , F (2) , Y, j] as the minimum size of I  ⊆ {v1 , v2 , . . . , vj } that satisﬁes the following conditions:  
   
  1. Y ⊆ N (I  ), 2. I  can be partitioned into r − 1 parts I2 , I3 , . . . , Ir satisfying the following conditions: (i) (i) (i) – for i = 2, . . . , r −1, Ii ∪F (i) has a partition D(i) = {D1 , D2 , . . . , D|F (i) | } (i)  
   
  such that for all p = 1, . . . , |F (i) |, Dp includes at least one vertex of I  (i) (i) (i) and is a superset of Fp , and |Dp | = i and G[Dp ] is connected. (r) (r) (r) – Ir ∪ X has a partition D(r) = {D1 , D2 , . . . , Dq } such that for all (r) (r) i = 1, . . . , q, |Di | = r and G[Di ] is connected. We set A[X, F (r−1) , . . . , F (2) , Y, j] = ∞ if no I  ⊆ {v1 , v2 , . . . , vj } satisﬁes the conditions. We can compute A[X, F (r−1) , . . . , F (2) , Y, 0], which is 0 or ∞, as it is 0 if and only if F (r−1) = · · · = F (2) = Y = ∅ and G[X] admits a partition into connected graphs of r vertices. The last condition can be checked in O(|J||J| ) time for all X ⊆ J by checking all possible partitions of J. Assume that all entries of A with j ≤ c for some c are computed. Since the degree of vc+1 is at most |J|, the number of possible ways of how vc+1 extends a partial solution is at most 2|J| . Thus from each table entry of A with j = c, we obtain at most 2|J| candidates of the table entries with j = c + 1. Thus, we can compute all entries of A in O∗ (2|J| (r + 1)|J| |J||J| ) time.  
   
  Grouped Domination Parameterized by Structural Parameters  
   
  273  
   
  Given A, we can compute the minimum number of units in an r-grouped dominating set as min{(|X| + A[X, ∅, . . . , ∅, J \ N [X], |I|])/r | X ⊆ J and I ⊆ N (X)}. Again this takes only O∗ (2|J| ) time. Thus the total running time of the algorithm is O∗ (2|J| (r + 1)|J| |J||J| ) = O∗ ((2ν(r + 1))ν ). 4.2  
   
  Algorithms Parameterized by Twin Cover Number  
   
  In this subsection, we show that the algorithms presented above still work when the parameter ν in the running time is replaced with twin cover number τ . To show this, we prove the following lemma. It says that twin-edges do not contribute to the connectivity of units for some minimum r-grouped dominating sets and can be removed from the graph. As a result, the vertex cover number can be replaced with the twin cover number. Lemma 4.3. Let G be a graph and K be a twin cover of G. If G has an rgrouped dominating set, then there exists a minimum r-grouped dominating set such that every unit has at least one vertex in K. Proof. Let G = (V, E) be a graph, and K be a twin cover of G. Suppose that a minimum r-grouped dominating set D exists and one of its units D = {v1 , v2 , . . . , vr } has no vertex in K. Since K is a twin cover, N [v1 ] = · · · = N [vr ] holds.  Let KD = K ∩N (v1 ). Then, there is at least one vertex x in KD such that x∈ / D. Suppose  to the contrary that there is no such x, and thus all vertices in KD belong to D. This implies that no vertex is dominated only by D and that D itself is dominated by some vertices in KD . Thus, D \ {D} is an r-grouped dominating set. This contradicts the minimality of D. Let D = D \ {v1 } ∪ {x}, then D = D \ {D} ∪ {D } is also a minimum r-grouped dominating set of G (see Fig. 5). By repeating this process, we can obtain a minimum r-grouped dominating set such that every unit has at least one vertex in K.    
   
  Fig. 5. An example for exchange. White vertices belong to a dominating set.  
   
  5  
   
  Beyond Vertex Cover and Twin Cover  
   
  In this section, we further explore the parameterized complexity of r-Grouped Dominating Set with respect to structural graph parameters that generalize  
   
  274  
   
  T. Hanaka et al.  
   
  vertex cover number and twin cover number. We show that if we do not try to optimize the running time of algorithms, then we can use known algorithmic meta-theorems that automatically give ﬁxed-parameter algorithms parameterized by certain graph parameters. For the sake of brevity, we deﬁne only the parameters for which we need their deﬁnitions. For example, we do not need the deﬁnition of treewidth for applying the meta-theorem described below. On the other hand, to contrast the results here with the ones in the previous sections, it is important to see the picture of the relationships between the parameters. See Fig. 1 for the hierarchy of the graph parameters we deal with. Roughly speaking, the algorithmic meta-theorems we use here say that if a problem can be expressed in a certain logic (e.g., FO, MSO1 , or MSO2 ), then the problem is ﬁxed-parameter tractable parameterized by a certain graph parameter (e.g., twin-width, treewidth, or clique-width). Such theorems are extremely powerful and used widely for designing ﬁxed-parameter algorithms [23]. On the other hand, the generality of the meta-theorems unfortunately comes with very high dependency on the parameters [15]. When our target parameter is vertex cover number, the situation is slightly better, but still a double-exponential Ω(ν) lower bound of the parameter dependency is known under ETH [24]. This 22 implies that our “slightly superexponential” 2O(τ log τ ) algorithm in Sect. 4 cannot be obtained by applications of known meta-theorems. In the rest of this section, we ﬁrst introduce FO, MSO1 , and MSO2 on graphs. We then observe that the problem can be expressed in FO when r and k are part of the parameter and in MSO2 when r is part of the parameter. These observations combined with known meta-theorems immediately imply that rGrouped Dominating Set is ﬁxed-parameter tractable when – parameterized by r + k on nowhere dense graph classes; – parameterized by r + k+twin-width if a contraction sequence of the minimum width is given as part of the input; and – parameterized by r+treewidth. We then consider the parameter k+treewidth and show that this case is intractable. More strongly, we show that r-Grouped Dominating Set is W[1]hard when the parameter is k+ treedepth + feedback vertex set number. We ﬁnally consider the parameter modular-width, a generalization of twin cover number, and show that r-Grouped Dominating Set parameterized by modular-width is ﬁxed-parameter tractable. 5.1  
   
  Results Based on Algorithmic Meta-theorems and Related Results  
   
  The first-order logic on graphs (FO) allows variables representing vertices of the graph under consideration. The atomic formulas are the equality x = y of variables and the adjacency E(x, y) meaning that {x, y} ∈ E. The FO formulas are deﬁned recursively from atomic formulas with the usual Boolean connectives (¬, ∧, ∨, ⇒, ⇔), and quantiﬁcation of variables (∀, ∃). We also use the existential  
   
  Grouped Domination Parameterized by Structural Parameters  
   
  275  
   
  ˙ to quantify distinct objects. For example, ∃a, ˙ b : φ means quantiﬁer with a dot (∃) ∃a, b : (a = b) ∧ φ. We write G |= φ if G satisﬁes (or models) φ. Given a graph G and an FO formula φ, FO Model Checking asks whether G |= φ. It is straightforward to express the property of having an r-grouped dominating set of k units with an FO formula whose length depends only on r + k: ˙ 1 , v2 , . . . , vrk : φr,k = ∃v dominating(v1 , . . . , vrk ) ∧  
   
    
   
  connected(vir+1 , . . . , vir+r ),  
   
  0≤i≤k−1  
   
  where dominating(· · ·) is a subformula expressing that the rk vertices form a dominating set and connected(· · ·) is the one expressing that the r vertices induce a connected subgraph. This implies that r-Grouped Dominating Set parameterized by r+k is ﬁxed-parameter tractable on graph classes on which FO Model Checking parameterized by the formula length |φ| is ﬁxed-parameter tractable. Such graph classes include nowhere dense graph classes [18] and graphs of bounded twin-width (given with so called contraction sequences) [3]. Corollary 5.1. r-Grouped Dominating Set parameterized by r + k is fixedparameter tractable on nowhere dense graph classes. Corollary 5.2. r-Grouped Dominating Set parameterized by r + k+ twinwidth is fixed-parameter tractable if a contraction sequence of the minimum width is given as part of the input. The monadic second-order logic on graphs (MSO1 ) is an extension of FO that additionally allows variables representing vertex sets and the inclusion predicate X(x) meaning that x ∈ X. MSO2 is a further extension of MSO1 that also allows edge variables, edge-set variables, and an atomic formula I(e, x) representing the edge-vertex incidence relation. Given a graph G and an MSO1 (MSO2 , resp.) formula φ(X) with a free set variable X, MSO1 (MSO2 , resp.) Optimization asks to ﬁnd a minimum set S such that G |= φ(S). It is not diﬃcult to express the property of a vertex set being the union of r-units of a r-grouped dominating set with an MSO2 formula whose length depending only on r:2 ψr (X) = dominating(X) ∧ (∃F ⊆ E : span(F, X) ∧ (∀C ⊆ X : cc(F, C) ⇒ sizer (C))) , where dominating(X) is a subformula expressing that X is a dominating set, span(F, X) is the one expressing that X is the set of all endpoints of the edges in F , cc(F, C) expresses that C is the vertex set of a connected component of the subgraph induced by F , and sizer (C) means that C contains exactly r elements. Since MSO2 Optimization parameterized by treewidth is ﬁxedparameter tractable [1,4,9], we have the following result. 2  
   
  Note that there is no equivalent MSO1 formula of length depending only on r. This is because G |= ψ2 (V ) expresses the property of having a perfect matching, for which an MSO1 formula does not exist (see e.g., [10]).  
   
  276  
   
  T. Hanaka et al.  
   
  Corollary 5.3. r-Grouped Dominating Set parameterized by r+ treewidth is fixed-parameter tractable. Now the natural question regarding treewidth and r-Grouped Dominating Set would be the complexity parameterized by k+ treewidth. Unfortunately, this case is W[1]-hard even if treewidth is replaced with a possibly much larger parameter pathwidth + feedback vertex set number and the graphs are restricted to be planar. Furthermore, if the planarity is not required, we can replace pathwidth in the parameter with treedepth. Theorem 5.4. r-Grouped Dominating Set parameterized by k+ pathwidth + feedback vertex set number is W[1]-hard on planar graphs. It is known that on general (not necessarily planar) graphs, Equitable Connected Partition parameterized by k+treedepth + feedback vertex set number is W[1]-hard [17]. Since adding pendants to all vertices increases treedepth by at most 1 (see e.g., [27]), the same reduction shows the following hardness. Theorem 5.5. r-Grouped Dominating Set parameterized by k+treedepth + feedback vertex set number is W[1]-hard. As a parameter between twin-cover number and clique-width, modular-width is well studied. It is known that the modular-width of a graph and a recursive partition certiﬁcating it can be computed in linear time [11,19]. We can show the following theorem. Theorem 5.6. r-Grouped Dominating Set parameterized by modular-width is fixed-parameter tractable.  
   
  References 1. Arnborg, S., Lagergren, J., Seese, D.: Easy problems for tree-decomposable graphs. J. Algorithms 12(2), 308–340 (1991) 2. Bodlaender, H.L., Cygan, M., Kratsch, S., Nederlof, J.: Deterministic single exponential time algorithms for connectivity problems parameterized by treewidth. Inf. Comput. 243, 86–111 (2015) ´ Kim, E.J., Thomass´e, S., Watrigant, R.: Twin-width I: tractable FO 3. Bonnet, E., model checking. J. ACM 69(1), 1–46 (2022) 4. Borie, R.B., Parker, R.G., Tovey, C.A.: Automatic generation of linear-time algorithms from predicate calculus descriptions of problems on recursively constructed graph families. Algorithmica 7(5&6), 555–581 (1992) 5. Chen, J., Kanj, I.A., Xia, G.: Improved upper bounds for vertex cover. Theor. Comput. Sci. 411(40–42), 3736–3756 (2010) 6. Chen, L., Lu, C., Zeng, Z.: Hardness results and approximation algorithms for (weighted) paired-domination in graphs. Theor. Comput. Sci. 410(47), 5063–5071 (2009) 7. Chen, L., Lu, C., Zeng, Z.: A linear-time algorithm for paired-domination problem in strongly chordal graphs. Inf. Process. Lett. 110(1), 20–23 (2009) 8. Chen, L., Lu, C., Zeng, Z.: Labelling algorithms for paired-domination problems in block and interval graphs. J. Comb. Optim. 19(4), 457–470 (2010)  
   
  Grouped Domination Parameterized by Structural Parameters  
   
  277  
   
  9. Courcelle, B.: The monadic second-order logic of graphs. I. recognizable sets of ﬁnite graphs. Inf. Comput. 85(1), 12–75 (1990) 10. Courcelle, B., Engelfriet, J.: Graph Structure and Monadic Second-Order Logic A Language-Theoretic Approach. Cambridge University Press, Cambridge (2012) 11. Cournier, A., Habib, M.: A new linear algorithm for modular decomposition. In: Tison, S. (ed.) CAAP 1994. LNCS, vol. 787, pp. 68–84. Springer, Heidelberg (1994). https://doi.org/10.1007/BFb0017474 12. Cygan, M., et al.: Parameterized Algorithms. Springer, Cham (2015). https://doi. org/10.1007/978-3-319-21275-3 13. Cygan, M., Nederlof, J., Pilipczuk, M., Pilipczuk, M., Van Rooij, J.M.M., Wojtaszczyk, J.O.: Solving connectivity problems parameterized by treewidth in single exponential time. ACM Trans. Algorithms 18(2) (2022) 14. Desormeaux, W.J., Haynes, T.W., Henning, M.A.: Paired domination in graphs. In: Haynes, T.W., Hedetniemi, S.T., Henning, M.A. (eds.) Topics in Domination in Graphs. DM, vol. 64, pp. 31–77. Springer, Cham (2020). https://doi.org/10.1007/ 978-3-030-51117-3 3 15. Frick, M., Grohe, M.: The complexity of ﬁrst-order and monadic second-order logic revisited. Ann. Pure Appl. Log. 130(1–3), 3–31 (2004) 16. Ganian, R.: Improving vertex cover as a graph parameter. Discret. Math. Theor. Comput. Sci. 17(2), 77–100 (2015) 17. Gima, T., Otachi, Y.: Extended MSO model checking via small vertex integrity. In: 33rd International Symposium on Algorithms and Computation (ISAAC 2022). Leibniz International Proceedings in Informatics (LIPIcs), vol. 248, pp. 20:1–20:15. Schloss Dagstuhl - Leibniz-Zentrum f¨ ur Informatik, Dagstuhl, Germany (2022) 18. Grohe, M., Kreutzer, S., Siebertz, S.: Deciding ﬁrst-order properties of nowhere dense graphs. J. ACM 64(3), 1–32 (2017) 19. Habib, M., Paul, C.: A survey of the algorithmic aspects of modular decomposition. Comput. Sci. Rev. 4(1), 41–59 (2010) 20. Hanaka, T., Ono, H., Otachi, Y., Uda, S.: Grouped domination parameterized by vertex cover, twin cover, and beyond. arXiv preprint arXiv:2302.06983 (2023) 21. Haynes, T.W., Slater, P.J.: Paired-domination and the paired-domatic number. Congressus Numerantium 65–72 (1995) 22. Haynes, T.W., Slater, P.J.: Paired-domination in graphs. Networks 32(3), 199–206 (1998) 23. Kreutzer, S.: Algorithmic meta-theorems. In: Esparza, J., Michaux, C., Steinhorn, C. (eds.) Finite and Algorithmic Model Theory, London Mathematical Society Lecture Note Series, vol. 379, pp. 177–270. Cambridge University Press (2011) 24. Lampis, M.: Algorithmic meta-theorems for restrictions of treewidth. Algorithmica 64(1), 19–37 (2012) 25. Liedloﬀ, M.: Finding a dominating set on bipartite graphs. Inf. Process. Lett. 107(5), 154–157 (2008) 26. Lin, C.C., Ku, K.C., Hsu, C.H.: Paired-domination problem on distance-hereditary graphs. Algorithmica 82(10), 2809–2840 (2020) 27. Neˇsetˇril, J., Ossona de Mendez, P.: Sparsity. AC, vol. 28. Springer, Heidelberg (2012). https://doi.org/10.1007/978-3-642-27875-4 28. Pradhan, D., Panda, B.: Computing a minimum paired-dominating set in strongly orderable graphs. Discret. Appl. Math. 253, 37–50 (2019) 29. Tripathi, V., Kloks, T., Pandey, A., Paul, K., Wang, H.-L.: Complexity of paired domination in AT-free and planar graphs. In: Balachandran, N., Inkulu, R. (eds.) CALDAM 2022. LNCS, vol. 13179, pp. 65–77. Springer, Cham (2022). https://doi. org/10.1007/978-3-030-95018-7 6  
   
  Broadcasting in Split Graphs Hovhannes A. Harutyunyan and Narek Hovhannisyan(B) Department of Computer Science and Software Engineering, Concordia University, Montreal, QC H3G 1M8, Canada [email protected]  , [email protected]   
   
  Abstract. Broadcasting is an information dissemination primitive where a message is passed from one node (called originator) to all other nodes in the network. With the increasing interest in interconnection networks, an extensive amount of research was dedicated to broadcasting. Two main research goals of this area are ﬁnding inexpensive network structures that maintain eﬃcient broadcasting and ﬁnding the broadcast time for well-known and widely used network topologies. In the scope of this paper, we will mainly focus on determining the broadcast time and the optimal broadcasting scheme for graphs. Determination of the broadcast time of a node x in an arbitrary network G is known to be NP-hard. Polynomial time solutions are known only for a few classes of networks. There also exist various heuristic and approximation algorithms for diﬀerent network topologies. In this paper, we will consider networks that can be represented as split graphs. We will present a polynomial time 2-approximation algorithm for the broadcast time problem and will introduce an algorithm for generating optimal or near-optimal broadcast schemes in split graphs. Keywords: Interconnection networks · Information dissemination Broadcasting · Approximation algorithms  
   
  1  
   
  ·  
   
  Introduction  
   
  Broadcasting is one of the most important information dissemination processes in an interconnected network. Over the last four decades, a large number of research work has been published concerning broadcasting in networks under diﬀerent models. These models can have diﬀerent numbers of originators, numbers of receivers at each time unit, distances of each call, numbers of destinations, and other characteristics of the network such as the knowledge of the neighborhood available to each node. In the context of this paper, we are going to focus on the classical model of broadcasting. The network is modeled as an undirected connected graph G = (V, E), where V (G) and E(G) denote the vertex set and the edge set of G, respectively. The classical model follows the below-mentioned basic assumptions. c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  M. Mavronicolas (Ed.): CIAC 2023, LNCS 13898, pp. 278–292, 2023. https://doi.org/10.1007/978-3-031-30448-4_20  
   
  Broadcasting in Split Graphs  
   
  279  
   
  (1) The broadcasting process is split into discrete time units. (2) The only vertex that has the message at the ﬁrst time unit is called originator. (3) In each time unit, an informed vertex (sender ) can call at most one of its uninformed neighbors (receiver ). (4) During each unit, all calls are performed in parallel. (5) The process halts as soon as all the vertices in the graph are informed. We can represent each call in this process as an ordered pair of two vertices (u, v), where u is the sender and v is the receiver. The broadcast scheme is the order of calls made by each vertex during a broadcasting process and can be represented as a sequence (C1 , C2 , ..., Ct ), where Ci is the set of calls performed in time unit i. An informed vertex v is idle in time unit t if v does not make any call in time t. Given that every vertex, other than the originator, can be informed by exactly one vertex, the broadcast scheme forms a directed spanning tree (broadcast tree) rooted at the originator. We are also free to omit the direction of each call in the broadcast tree. Definition 1. The broadcast time of a vertex v in a given graph G is the minimum number of time units required to broadcast in G if v is the originator and is denoted by b(v, G). The broadcast time of a given graph G, is the maximum broadcast time from any originator in G, formally b(G) = maxv∈V (G) {b(v, G)}. A broadcast scheme for an originator v that uses b(v, G) time units is called an optimal broadcast scheme. Obviously, by the assumption (3), the number of informed vertices after each time unit can at most be doubled. Meaning, in general, the number of informed vertices after time unit i is upper bounded by 2i . Therefore, it is easy to see that b(v, G) ≥ log n, where n is the number of vertices in G, which implies that b(G) ≥ log n. The general broadcast time decision problem is formally deﬁned as follows. Given a graph G = (V, E) with a speciﬁed set of vertices V0 ⊆ V and a positive integer k, is there a sequence V0 , E1 , V1 , E2 , V2 , . . . , Ek , Vk where Vi ⊆ V , Ei ⊆ / Vi−1 , and Vk = V . Here E(1 ≤ i ≤ k), for every (u, v) ∈ Ei , u ∈ Vi−1 , v ∈ Vi , v ∈ k is the total broadcast time, Vi is the set of informed vertices at round i, and Ei is the set of edges used at round i. It is obvious that when | V0 |= 1 then this problem becomes our broadcast problem of determining b(v, G) for an arbitrary vertex v in an arbitrary graph G. Generally, the broadcast time decision problem in an arbitrary graph is NPcomplete [12,29]. Moreover, the broadcast time problem was proved to be NPcomplete even for some speciﬁc graph classes, such as 3-regular planar graphs [24]. There is a very limited number of graph families, for which an exact algorithm with polynomial time complexity is known for the broadcast time problem. Exact linear time algorithms are available for the broadcast time problem in trees [27,29], in connected graphs with only one cycle (unicyclic graphs) [17,18], in necklace graphs (chain of rings) [15], in fully connected trees [13], and in Hararylike graphs [5,6]. For a more detailed introduction to broadcasting, we refer the reader to [11,16,19,20].  
   
  280  
   
  H. A. Harutyunyan and N. Hovhannisyan  
   
  A split graph is a graph in which the vertices can be partitioned into a clique and an independent set [23]. Split graphs were ﬁrst studied in [9] and independently introduced in [31]. An edge of a graph is a chord of a cycle if it joins two nodes of the cycle but is not itself in the cycle. A graph is chordal if and only if every cycle of length greater than three has a chord. Split graphs are a subclass of chordal graphs and are exactly those chordal graphs whose complement is also chordal [14]. Therefore, all problems which are polynomial-time solvable for chordal graphs are also solvable for split graphs [12,14]. Chordal graphs play a central role in techniques for exploiting sparsity in large semideﬁnite optimization problems [33] and in related convex optimization problems involving sparse positive semideﬁnite matrices. Chordal graph properties are also fundamental to several classical results in combinatorial optimization, linear algebra, statistics, signal processing, machine learning, and nonlinear optimization [32,34]. In [3], authors showed that in the limit as n goes to inﬁnity, the fraction of n-vertex chordal graphs that are split approaches one. Less formally, they showed that almost all chordal graphs are split graphs, thus making split graphs an important area of research. Moreover, split graphs are widely used as an interconnection network topology. Networks that have an important group of tightly coupled nodes (or in other words the core of the network), and a number of independent nodes that are only connected to the network core. In terms of social networks, split graphs correspond to the variety of interpersonal and intergroup relations [1]. The interaction between the cliques (socially strong and trusty groups) and the independent sets (fragmented and non-connected groups of people) is naturally represented as a split graph. Diﬀerent optimization problems were studied in split graphs due to their many important characteristics [2,4,7,8,25]. Given all of the above, it is interesting to study the problem of broadcasting on split graphs. [21] is one of the ﬁrst works in literature that study the minimum broadcast time problem in split graphs. In the paper, the authors prove that it is NPcomplete to decide whether the broadcast time from multiple originators in split graphs (and in chordal graphs) is equal to 2. In the same paper, the authors also show that the minimum broadcast time problem from a single originator in chordal graphs is NP-complete. Later, in [30], the minimum broadcast and multicast time problems are considered for a subclass of split graphs where the degree of all vertices in the independent set is one. The authors introduce a polynomial time exact algorithm for that subclass of split graphs. The rest of this paper is organized as follows. In Sect. 2 we introduce a polynomial time approximation algorithm for the broadcast time problem in split graphs that guarantees a 2 approximation ratio. Further, in Sect. 3, we analyze some important aspects of an optimal broadcast scheme and present an exact algorithm scheme. Lastly, Sect. 4 concludes the paper.  
   
  Broadcasting in Split Graphs  
   
  2  
   
  281  
   
  An Approximation Algorithm for Broadcasting in Split Graphs  
   
  Consider a split graph G = (V, E) such that the vertex set can be partitioned into a clique K on n vertices and an independent set I on m vertices. Note that split graphs may have more than one partitioning into a clique and an independent set. Clearly, we can assume that the clique K is a maximal (and also maximum) clique, otherwise, we could change the partitioning by adding some vertices from I to K to make it maximal. Given a connected split graph G, a clique K, an independent set I, and an arbitrary originator v ∈ V (G), we are going two consider two cases: v ∈ K or v ∈ I. Let t be a positive integer. A t-star-matching of graph G is a collection of mutually vertex disjoint subgraphs K1,i (stars) of G with 1 ≤ i ≤ t [22]. A perfect t-star-matching of a graph G is a t-star-matching that covers every vertex of the graph G. A proper t-star-matching of a split graph G is a perfect t-star-matching such that any vertex v ∈ K is a center of a star. First, let us consider a broadcasting problem with multiple originators. We are given a split graph G = (V, E) with a partitioning of a maximum clique K and an independent set I, and a set of informed vertices (originators) S such that S = K. The goal of the problem is to ﬁnd the minimum broadcast time b(K, G) needed to inform all the vertices in the independent set. It is easy to see that in this case of multiple originators, any broadcast scheme forms a directed spanning forest (instead of a tree), where each tree in the forest is rooted at one of the originators. Moreover, as broadcasting in split graphs has only one level, the broadcast scheme will form a set of stars, where the center of each star is one of the originators. In other words, a broadcasting scheme with broadcast time b induces a proper b-star-matching for the given split graph G. Hence, if we ﬁnd the minimum positive integer t, for which there exists a proper t-star-matching, we can claim that b(K, G) = t. 2.1  
   
  Finding a Proper Star-Matching with Minimum Maxdegree  
   
  In order to ﬁnd the minimum positive integer t, for which there exists a proper t-star-matching, we will consider the following decision problem. Problem 1. Proper star-matching problem Instance: (G, K, I, t), where G = (V, E) is a split graph, K is a clique in G, I is an independent set in G, and t is a natural number. Output: “Yes” if G contains a proper t-star-matching for; “No” otherwise. Next, we will reduce an instance of the above-deﬁned problem to an instance of a maximum ﬂow problem [10,28]. Problem 2. Maximum ﬂow Instance: (G, s, q, μ), where G = (V, E) is a ﬂow graph, s is the source vertex, q is the sink vertex, and μ is a natural number. Output: “Yes” if the maximum ﬂow for graph G from s to q is greater than or equal to μ; “No” otherwise.  
   
  282  
   
  H. A. Harutyunyan and N. Hovhannisyan  
   
  The reduction consists of the steps described in Algorithm 1, and an example of the reduction is presented in Fig. 1. Algorithm 1. Reduction Algorithm  
   
  1: 2: 3: 4: 5: 6: 7: 8: 9:  
   
  Input A split graph G, a clique K, an independent set I Output An instance of the maximum ﬂow problem procedure MaxFlowReduction Create a copy G of the graph G Remove all edges between a pair of vertices u and v, where u, v ∈ K Assign direction from u to v to each edge (u, v), where u ∈ K, v ∈ I Assign capacity 1 to each edge (u, v), where u ∈ K, v ∈ I Add a source vertex s and connect it by an outgoing edge to every vertex in K. Assign a capacity t to those edges Add a sink vertex q and connect it by an ingoing edge to every vertex in I. Assign a capacity 1 to those edges return (G , s, q, |I|) end procedure  
   
  Proposition 1. There exists a proper t-star-matching for the graph G if and only if the maximum ﬂow in the graph G is equal to m, where m is the cardinality of the independent set I. Proof. It is easy to see that when there exists a proper t-star-matching, the same edges can be used in graph G to achieve ﬂow with value m. And similarly, if the maximum ﬂow is equal to m, the paths used to construct the ﬂow can be used to ﬁnd a proper star-matching for the graph G. Since each vertex in K has an incoming edge capacity of t, it will result in a proper t-star-matching for the graph G.  Thus, we can ﬁnd the minimum integer t for which there exists a proper tstar-matching. The procedure M axF lowReduction (Algorithm 1) can be implemented with complexity O(n) + O(m) = O(|V |). The time to ﬁnd the maximum ﬂow in a graph highly depends on the selected algorithm. One of the best algorithms for maximum ﬂow has a complexity of O(|E||V |) [26]. Thus, considering the binary search time, the overall time complexity of this algorithm would be O(|E||V | log |I|). 2.2  
   
  Broadcasting from a Vertex in the Clique  
   
  Algorithm 2 shows the steps of the broadcasting algorithm from an originator in the clique. Clearly, after the algorithm halts, all vertices of the graph G are informed as the clique is informed in step 1 (line 2), and the independent set is informed in step 3 (line 4). Let bAlg (v, G) be the broadcast time generated by Algorithm 2. It is easy to see that it has two components: the broadcast time of the clique K and  
   
  Broadcasting in Split Graphs  
   
  283  
   
  Fig. 1. Example of a reduction in Algorithm 1. Subﬁgure (a) shows the graph G before the reduction and subﬁgure (b) shows the graph G after the reduction.  
   
  Algorithm 2. Approximation Algorithm Input A split graph G, a clique K, an independent set I, and an originator v ∈ K Output A broadcast scheme with time bAlg (v, G) for the graph G and the originator v 1: procedure BroadcastingFromClique 2: Broadcast in the clique K starting from the vertex v 3: Find a proper t-star-matching M with minimum t 4: Use the edges of M to broadcast from K to I 5: end procedure  
   
  the broadcast time in G with the vertices of K as originators. Hence, we can claim that bAlg (v, G) = b(Kn ) + b(K, G) = log n + t, where n = |K|. Recall that for any graph G, b(v, G) ≥ log |V (G)|. As in our case n ≤ |V (G)|, then b(v, G) ≥ log n. Moreover, it is trivial that the broadcast time from a single originator in the clique cannot be less than the broadcast time where all the vertices in the clique are originators. Hence, b(v, G) ≥ b(K, G) = t. From the two lower bounds of the minimum broadcast time described above, it follows that: t log n + (1) b(v, G) ≥ 2 2 Thus, bAlg (v, G) log n + t ≤ log n+t = 2 (2) b(v, G) 2  
   
  We can see that the broadcast time generated by Algorithm 2 is guaranteed to be at most twice as big as the optimal broadcast time. As steps 2 and 4 of Algorithm 2 have known broadcast times, they have O(1) time complexity. Thus, the proposed algorithm has a complexity of O(|E||V | log |I|), making it a polynomial time 2-approximation algorithm for the broadcast time problem in split graphs from an originator in the clique.  
   
  284  
   
  2.3  
   
  H. A. Harutyunyan and N. Hovhannisyan  
   
  Broadcasting from a Vertex in the Independent Set  
   
  Algorithm 3 shows the steps of the broadcasting algorithm from an originator in the independent set. Clearly, after the algorithm halts, all vertices of the graph G are informed as the clique is informed in step 1 (line 2), and the independent set is informed in step 3 (line 4). Let bAlg (v, G) be the broadcast time generated by Algorithm 3. It is easy to see that it has three components: the time to send the message from v to u, the broadcast time of the clique K with u as the originator, and the broadcast time in G with the vertices of K as originators. Hence, we can claim that bAlg (v, G) = 1 + b(u, Kn ) + b(K, G ) where n = |K|.   bAlg (v, G) = 1 + b(u, Kn ) + b(K, G ) = 1 + log n + t  
   
  (3)  
   
  Algorithm 3. Approximation Algorithm Input A split graph G, a clique K, an independent set I, and an originator v ∈ I Output A broadcast scheme with time bAlg (v, G) for the graph G and the originator v 1: procedure BroadcastingFromIndependentSet 2: Pass the message to an arbitrary neighbor u ∈ K of v 3: Complete broadcasting in the clique K 4: From a graph G from G by removing the vertex v 5: Find a proper t-star-matching M with minimum t for the split graph G 6: Use the edges of M to broadcast from K to I 7: end procedure  
   
  Recall that for any graph G, b(v, G) ≥ log |V (G)|. In our case n = |K| and m = |I|, then b(v, G) ≥ log(n + m) ≥ log n. Moreover, it is trivial that the broadcast time from a single originator in the independent set is greater by at least one than the broadcast time where all the vertices in the clique are originators and the rest of the independent set should be informed. Hence, b(v, G) ≥ 1 + b(K, G ) = 1 + t. From the two lower bounds of the minimum broadcast time described above, it follows that: b(v, G) ≥ Thus,  
   
  log n + t + 1 2  
   
  bAlg (v, G) log n + t + 1 ≤ log n+t+1 = 2 b(v, G)  
   
  (4)  
   
  (5)  
   
  2  
   
  Similar to Algorithm 2, Algorithm 3 has a complexity of O(|E||V | log |I|), making it a polynomial time 2-approximation algorithm for the broadcast time problem in split graphs from an originator in the independent set.  
   
  Broadcasting in Split Graphs  
   
  2.4  
   
  285  
   
  Tightness of Approximation  
   
  In this section, we will prove that the approximation ratio of 2 is tight for the approximation algorithms introduced above (Algorithm 2 and 3). For that, we will construct an inﬁnite subfamily of split graphs for which 2 is a tight approximation ratio when the originator is in the clique or in the independent set. Claim. For every positive integer 0 <  < 1, there exists a split graph instance G and an originator v for which bAlg (v, G) > (2 − ) · b(v, G), where bAlg (v, G) is the broadcast time returned by Algorithm 2 or Algorithm 3 (depending on the originator) and b(v, G) is the minimum broadcast time. Proof. Let G be a split graph with a clique partition K and an independent set partition I, such that n = |K| = 2t + 1 and m = |I| = t for some positive integer t. Assume vertex v1 ∈ K is adjacent to every vertex wi ∈ I, 1 ≤ i ≤ m, and there exist no more edges between the clique and the independent set (Fig. 2). We will analyze the broadcast time in 2 cases: v1 is the originator in the clique and w1 is the originator in the independent set. Consider the following broadcast scheme S1 for originator v1 . (1) Place a call from v1 to v2 in the ﬁrst time unit. (2) In the next t time units (a) v1 informs its neighbors in I, (b) vertices in K \ {v1 } ﬁnish broadcasting in the clique with v2 as the originator. Clearly, the broadcast scheme S1 will have a broadcast time of b(S1 ) = t+1 = log n = b(v1 , G), which is the trivial lower bound. Whereas, Algorithm 2 will return a broadcast time bAlg (v, G) = log n + m = 2t + 1. Hence, after simple calculations, we can show that for every 0 <  < 1, bAlg (v, G) > (2 − ) · b(v, G) 1− . when t >  Next, consider the broadcast scheme S2 for originator w1 . (1) Place a call from w1 to v1 in the ﬁrst time unit. (2) Place a call from v1 to v2 in the second time unit. (3) In the next t time units (a) v1 informs its uninformed neighbors in I, (b) vertices in K\{v1 } ﬁnish broadcasting in the clique with v2 as the originator. The broadcast scheme S2 will have a broadcast time of b(S1 ) = t + 2 = 1 + log n = b(w1 , G), which is again the trivial lower bound. Whereas, Algorithm 3 will return a broadcast time bAlg (v, G) = log n + (m − 1) + 1 = 2t + 1. Hence, after simple calculations, we can show that for every 0 <  < 1, bAlg (v, G) > 3 − 2 .  (2 − ) · b(v, G) when t >   
   
  286  
   
  H. A. Harutyunyan and N. Hovhannisyan  
   
  Fig. 2. Example of a split graph with tight approximation ratio.  
   
  3  
   
  Analysis of an Optimal Broadcast Scheme  
   
  In this section, we will be focusing on the decision version of the broadcast time problem. Problem 3. Broadcast time problem Instance: (G, v, t), where G = (V, E) is a graph, v ∈ V is the originator, and t is a natural number. Output: “Yes” if b(v, G) ≤ t; “No” otherwise. Lemma 1. Let G be a split graph, K be a clique in G, I be an independent set in G, and q be a vertex in K. There exists an optimal broadcast scheme S for the graph G starting from the originator q, such that every vertex u ∈ I has no uninformed neighbors after the time unit when u gets informed. Proof. In other words, Lemma 1 claims that there exists an optimal broadcast scheme where no calls are placed from a vertex in the independent set to a vertex in the clique. Let OP T be an optimal broadcast scheme. If OP T does not contain any calls placed from the independent set to the clique then the lemma is proved. Assume in scheme OP T , a vertex u ∈ I is informed by v ∈ K in time unit i and in time units i ≤ t1 ≤ t2 ... ≤ tk u informs its uninformed neighbors w1 , w2 , ..., wk ∈ K, respectively. Then we construct a new broadcast scheme S, where in time unit i, v informs w1 as they are both in the clique and in the rest of the broadcasting process v continues as in OP T . Whereas, in time unit tj , vertex wj passes the message to wj+1 , where 1 ≤ j ≤ k − 1 and, in time unit tk , vertex u is informed by its neighbor wp . This transformation is visualized in Fig. 3, where subﬁgure (a) shows the order of calls in scheme OP T and subﬁgure (b) shows the order of calls in scheme S. This shuﬄe will not aﬀect the broadcast time, as after time unit tk we will have the same set of vertices informed. Moreover, at each time unit t1 , .., tk , we will have the same number of informed vertices, and informed vertices will be able to proceed following the broadcast scheme OP T . The same transformation can be applied to any other  
   
  Broadcasting in Split Graphs  
   
  287  
   
  Fig. 3. Example of a transformation discussed in Lemma 1.  
   
  situation where a call is placed from the independent set to the clique. Hence, the created broadcast scheme S will have a broadcast time equal to that of OP T , thus becoming an optimal broadcast scheme that satisﬁes the conditions of the lemma.  From Lemma 1 it is clear that any calls placed from a vertex v ∈ K to its neighbors in K should be performed before calls towards its neighbors in I. Lemma 2. Let G be a split graph, K be a clique in G, I be an independent set in G, and q be a vertex in K. There exists an optimal broadcast scheme S satisfying the conditions of Lemma 1, such that no vertex v ∈ K informs a vertex u ∈ K after a vertex w ∈ I. Proof. In other words, vertices in the clique start placing calls to their neighbors in the independent set only when they have already informed vertices in the clique. Let ((u, v), (u, w)) be a pair of calls (pair of directed edges), such that u, w ∈ K and v ∈ I. We say that ((u, v), (u, w)) is a bad pair of calls in a broadcast scheme S, if the call (u, v) was placed before the call (u, w). Let S be an optimal broadcast scheme satisfying the conditions of Lemma 1. It is clear that if S contains no bad pair of calls then it satisﬁes Lemma 2. Otherwise, if the scheme S contains some bad pairs of calls, we will do the following. (1) Select an arbitrary bad pair of calls ((u, v), (u, w)), where (u, v) was placed in time unit t1 , and (u, w) was placed in time unit t2 > t1 . (2) Swap the order of the call in the pair: use the edge (u, w) in time unit t1 and the edge (u, v) in time unit t2 . (3) Leave the rest of the calls unchanged (even if it causes idling). After the above modiﬁcation, the scheme S will ﬁnish broadcasting in the same amount of time because by Lemma 1, the vertex v does not place any calls after being informed. Moreover, the above transformation will reduce the number of bad pairs of calls in scheme S by at least 1. Hence, after a ﬁnite number of steps, scheme S will have optimal broadcast time containing no bad pairs of calls, thus, proving the lemma.   
   
  288  
   
  H. A. Harutyunyan and N. Hovhannisyan  
   
  Let M be a proper t-star-matching induced by an optimal broadcast scheme S satisfying the conditions of Lemma 2 (as well as Lemma 1), and let Ni and di , 1 ≤ i ≤ n be the set and the number of vertices covered by vi ∈ K in M , respectively. The following corollary follows from Lemma 2. Corollary 1. In the broadcast scheme S, a vertex vi ∈ K, starts placing calls to vertices in Ni in time unit b(S) − di + 1. Additionally, the calls can be placed in arbitrary order without aﬀecting the broadcast time. Now we will analyze the broadcast time (B(S)) achieved by the broadcast scheme S. It is obvious that if no calls are placed from a vertex in the clique to the independent set then, theoretically, by the time the broadcasting is over 2B(S) vertices could be informed in the clique (informed vertices are doubled every time unit). Now assume that a vertex u spends the last p time units of the broadcasting process placing calls to the vertices of the independent set I. Since these p time units could be used to inform 2p − 1 vertices in the clique, then the overall number of vertices that will, theoretically, be informed in the clique would be at most 2B(S) − 2p + 1. According to Corollary 1, each vertex vi ∈ K spends di time unit broadcasting to I, and hence, after B(S) time units, the number of informed vertices in the clique will be upper bounded by the following number. 2B(S) − 2d1 + 1 − 2d2 + 1 − ... − 2dn + 1 = 2B(S) −  
   
  n   
   
  2di + n  
   
  (6)  
   
  i=1  
   
  As the scheme S is a valid broadcast scheme and informs all the vertices in the graph within B(S) time units, the following inequality is obvious. 2B(S) −  
   
  n   
   
  2di + n ≥ n  
   
  (7)  
   
  i=1  
   
  2B(S) ≥  
   
  n   
   
  2di  
   
  (8)  
   
  i=1  
   
  For a given t-star-matching M , let cost of M , denoted by C(M ), be n proper di 2 , where di is the degree of vertex vi ∈ K in the subgraph C(M ) = i=1 induced by M . Let M ∗ be a proper t-star-matching that minimizes the cost C(M ∗ ). We deﬁne the following decision problem for the star-matching with minimum cost. Problem 4. Minimum cost star-matching Instance: (G, c), where G = (V, E) is a split graph, and c is a natural number. Output: “Yes” if there exists a proper star-matching M ∗ of G such that C(M ∗ ) ≤ c; “No” otherwise. The following corollary obviously follows from the Inequality 8.  
   
  Broadcasting in Split Graphs  
   
  289  
   
  Corollary 2. The broadcast time of a split graph G from an originator v ∈ K is lower bounded by b(v, G) ≥ log C(M ∗ ). Moreover, there exists an optimal broadcast scheme S, such that the star-matching induced by S is exactly equal to M ∗. Hence, the problem of ﬁnding the minimum broadcast time of a given split graph can be solved if the minimum cost star-matching problem is solved. Based on everything discussed previously, the following exact algorithm for the minimum broadcast time problem could be derived. Algorithm 4. Exact Algorithm Input A split graph G, a clique K, an independent set I, an originator v ∈ K, and a natural number t Output “Yes” if b(v, G) ≤ t; “No” otherwise. 1: procedure SplitGraphBroadcast 2: Find a proper t-star-matching M with minimum cost C(M ) 3: if 2t ≤ C(M ) then 4: return “No” 5: end if 6: d ← [] 7: d[i] ← degree of vi ∈ K in M 8: Sort the degree array d in a non-increasing fashion 9: Broadcast in the clique prioritizing the vertices based on their order in d 10: if a vertex vi ∈ K is not informed in time unit t − di + 1 then 11: return “No” 12: else 13: Use the edges of vi in M in arbitrary order starting from time unit t − di + 1 14: end if 15: return “Yes” 16: end procedure  
   
  Algorithm 4 follows the claims made previously in this section. The only exception is the conditional operation (if) on line 10. The statement checks if all the vertices that need to start placing calls towards the independent set are informed before their determined time unit. If this is not the case then the broadcasting cannot terminate within the given amount of time. To sum up, Algorithm 4 gives a strategy that can generate an exact algorithm if the proper star-matching with minimum cost can be found. However, for any selected matching strategy the algorithm will produce a heuristic, the performance of which will only depend on the cost of the selected matching. For instance, if we used the same proper star-matching with min maxdegree that was used in the approximation algorithm introduced earlier, it would generate a valid heuristic. Clearly, it is possible to have many idle vertices in the approximation algorithm that we discussed earlier, depending on the structure of the graph instance. Thus, the heuristic will, obviously, generate broadcast times not  
   
  290  
   
  H. A. Harutyunyan and N. Hovhannisyan  
   
  worse than those of the 2-approximation algorithm, as it will have the same behavior without any vertex idling. However, we were unable to provide a better approximation ratio for that algorithm. 3.1  
   
  Split Graphs Achieving the Lower Bound of the Broadcast Time  
   
  As we mentioned earlier in this paper, the broadcast time is lower bounded by log |V |. So for a split graph G, with clique partition |K| = n and independent set partition |I| = m, the broadcast time is lower bounded by log(n + m). Assume that for a given graph G and an originator v ∈ K, b(v, G) = log(n+ m). Let M be a proper t-star-matching induced by an optimal broadcast scheme for G, and let di , 1 ≤ i ≤ n be the number of vertices covered by vi ∈ K in M . For any vertex vi , d(vi ) denotes the number of vertices in I adjacent to vi , or more formally, d(vi ) = N (vi ) ∩ I, where N (vi ) is the open neighborhood of vi . Note that 0 ≤ di ≤ d(vi ) for any i. From the Inequality 8, we can claim that b(v, G) = log(n + m) if 2log(n+m) ≥  
   
  n   
   
  2d(vi ) or 2log(n+m) ≥  
   
  i=1  
   
  n   
   
  2di  
   
  (9)  
   
  i=1  
   
  Thus, any split graph satisfying the above-mentioned inequality will have a broadcast time equal to the lower bound of log(n+m). For instance, let n = 2m and let each vertex in the clique have at most 1 neighbor in the independent set ) ≤ 2, for any 1 ≤ i ≤ n). In that case, we can see that 2log(n+m) = 2m+1 (d(vi n and i=1 2d(vi ) ≤ 2 · n = 2m+1 . Hence, Inequality 9 holds for these graphs, and we can claim that they have broadcast time of log(n + m).  
   
  4  
   
  Conclusion and Future Work  
   
  In this paper, we presented approximation algorithms for the minimum broadcast time problem in split graphs that guarantee an approximation ratio of 2, both for an originator in the clique or in the independent set. Moreover, we showed that our calculations for the approximation ratio of these algorithms are tight. We also proved several important characteristics of an optimal broadcast scheme, which helped to design a scheme for generating optimal broadcasting algorithms or heuristics for split graphs. For a large inﬁnite subfamily of split graphs, we proved that the minimum broadcast time is equal to the lower bound of log n. For the future, it is interesting to try calculating an approximation ratio for the heuristic that is generated by the introduced scheme, when using the proper star-matching with minimum maxdegree. Additionally, we deﬁned a new problem for ﬁnding a minimum cost star-matching of a given split graph. We showed that solving the minimum cost star-matching problem would ﬁnally close the minimum broadcast time problem in split graphs. This would be the ﬁrst non-tree-like graph class with a polynomial-time algorithm for the minimum broadcast time problem.  
   
  Broadcasting in Split Graphs  
   
  291  
   
  References 1. Belik, I.: The analysis of split graphs in social networks based on the k-cardinality assignment problem. Int. J. Netw. Sci. 1(1), 53–62 (2016) 2. Belmonte, R., Kim, E.J., Lampis, M., Mitsou, V., Otachi, Y., Sikora, F.: Token sliding on split graphs. Theory Comput. Syst. 65(4), 662–686 (2021) 3. Bender, E.A., Richmond, L.B., Wormald, N.C.: Almost all chordal graphs split. J. Aust. Math. Soc. 38(2), 214–221 (1985) 4. Bertossi, A.A.: Dominating sets for split and bipartite graphs. Inf. Process. Lett. 19(1), 37–40 (1984) 5. Bhabak, P., Harutyunyan, H.A., Kropf, P.: Eﬃcient broadcasting algorithm in Harary-like networks. In: 46th International Conference on Parallel Processing Workshops (ICPPW 2017), pp. 162–170. IEEE (2017) 6. Bhabak, P., Harutyunyan, H.A., Tanna, S.: Broadcasting in Harary-like graphs. In: 17th International Conference on Computational Science and Engineering (CSE 2014), pp. 1269–1276. IEEE (2014) 7. Bodlaender, H.L., Kloks, T., Tan, R.B., van Leeuwen, J.: λ-coloring of graphs. In: Reichel, H., Tison, S. (eds.) STACS 2000. LNCS, vol. 1770, pp. 395–406. Springer, Heidelberg (2000). https://doi.org/10.1007/3-540-46541-3 33 8. Collins, K.L., Trenk, A.N.: Finding balance: split graphs and related classes. arXiv preprint arXiv:1706.03092 (2017) 9. F¨ oldes, S., Hammer, P.L.: Split graphs. In: Proceedings of the Eighth Southeastern Conference on Combinatorics, Graph Theory and Computing (SECCGTC 1977), vol. XIX, pp. 311–315. Winnipeg: Utilitas Math (1977) 10. Ford, L.R., Fulkerson, D.R.: Flows in networks. In: Flows in Networks. Princeton University Press (2015) 11. Fraigniaud, P., Lazard, E.: Methods and problems of communication in usual networks. Discret. Appl. Math. 53(1–3), 79–133 (1994) 12. Garey, M.R., Johnson, D.S.: Computers and Intractability, vol. 174. Freeman, San Francisco (1979) 13. Gholami, S., Harutyunyan, H.A., Maraachlian, E.: Optimal broadcasting in fully connected trees. J. Interconnect. Netw. 23(01), 2150037:1–2150037:20 (2023) 14. Golumbic, M.C.: Algorithmic Graph Theory and Perfect Graphs. Elsevier, Amsterdam (2004) 15. Harutyunyan, H.A., Hovhannisyan, N., Maraachlian, E.: Broadcasting in chains of rings. In: Submitted to International Workshop on Combinatorial Algorithms (IWOCA 2023) (2023) 16. Harutyunyan, H.A., Liestman, A.L., Peters, J.G., D., R.: Broadcasting and gossiping. In: Handbook of Graph Theory, pp. 1477–1494. Chapman and Hall (2013) 17. Harutyunyan, H., Maraachlian, E.: Linear algorithm for broadcasting in unicyclic graphs. In: Lin, G. (ed.) COCOON 2007. LNCS, vol. 4598, pp. 372–382. Springer, Heidelberg (2007). https://doi.org/10.1007/978-3-540-73545-8 37 18. Harutyunyan, H.A., Maraachlian, E.: On broadcasting in unicyclic graphs. J. Comb. Optim. 16(3), 307–322 (2008) 19. Hedetniemi, S.M., Hedetniemi, S.T., Liestman, A.L.: A survey of gossiping and broadcasting in communication networks. Networks 18(4), 319–349 (1988) 20. Hromkoviˇc, J., Klasing, R., Monien, B., Peine, R.: Dissemination of information in interconnection networks (broadcasting & gossiping). In: Du, D.Z., Hsu, D.F. (eds.) Combinatorial Network Theory. Applied Optimization, vol. 1, pp. 125–212. Springer, Boston (1996). https://doi.org/10.1007/978-1-4757-2491-2 5  
   
  292  
   
  H. A. Harutyunyan and N. Hovhannisyan  
   
  21. Jansen, K., M¨ uller, H.: The minimum broadcast time problem for several processor networks. Theoret. Comput. Sci. 147(1–2), 69–85 (1995) 22. Lin, W., Lam, P.C.B.: Star matching and distance two labelling. Taiwan. J. Math. 13(1), 211–224 (2009) 23. Merris, R.: Split graphs. Eur. J. Comb. 24(4), 413–430 (2003) 24. Middendorf, M.: Minimum broadcast time is np-complete for 3-regular planar graphs and deadline 2. Inf. Process. Lett. 46(6), 281–287 (1993) 25. M¨ uller, H.: Hamiltonian circuits in chordal bipartite graphs. Discret. Math. 156(1– 3), 291–298 (1996) 26. Orlin, J.B.: Max ﬂows in o(nm) time, or better. In: Proceedings of the Forty-Fifth Annual ACM Symposium on Theory of Computing (STOC 2013), pp. 765–774 (2013) 27. Proskurowski, A.: Minimum broadcast trees. IEEE Trans. Comput. 30(05), 363– 366 (1981) 28. Schrijver, A.: On the history of the transportation and maximum ﬂow problems. Math. Program. 91(3), 437–445 (2002) 29. Slater, P.J., Cockayne, E.J., Hedetniemi, S.T.: Information dissemination in trees. SIAM J. Comput. 10(4), 692–701 (1981) 30. Tamura, H., Tasaki, F., Sengoku, M., Shinoda, S.: Scheduling problems for a class of parallel distributed systems. In: IEEE International Symposium on Circuits and Systems (ISCAS 2005), pp. 176–179. IEEE (2005) 31. Tyshkevich, R.I., Chernyak, A.A.: Canonical partition of a graph deﬁned by the degrees of its vertices. Isv. Akad. Nauk BSSR Ser. Fiz.-Mat. Nauk (in Russian) 5, 14–26 (1979) 32. Vandenberghe, L., Andersen, M.S.: Chordal graphs and semideﬁnite optimization. R Optim. 1(4), 241–433 (2015) Found. Trends 33. Zhang, R.Y., Lavaei, J.: Sparse semideﬁnite programs with near-linear time complexity. In: 2018 IEEE Conference on Decision and Control (CDC 2018), pp. 1624– 1631. IEEE (2018) 34. Zheng, Y.: Chordal sparsity in control and optimization of large-scale systems. Ph.D. thesis, University of Oxford (2019)  
   
  Partitioning Subclasses of Chordal Graphs with Few Deletions Satyabrata Jana1 , Souvik Saha1(B) , Abhishek Sahu3 , Saket Saurabh1,2 , and Shaily Verma1 1  
   
  3  
   
  The Institute of Mathematical Sciences, HBNI, Chennai, India {souviks,saket,shailyverma}@imsc.res.in 2 University of Bergen, Bergen, Norway National Institute of Science, Education and Research, An OCC of Homi Bhabha National Institute, Bhubaneswar, India Abstract. In the (Vertex) k-Way Cut problem, input is an undirected graph G, an integer s, and the goal is to ﬁnd a subset S of edges (vertices) of size at most s, such that G − S has at least k connected components. Downey et al. [Electr. Notes Theor. Comput. Sci. 2003] showed that k-Way Cut is W[1]-hard parameterized by k. However, Kawarabayashi and Thorup [FOCS 2011] showed that the problem is ﬁxed-parameter tractable (FPT) in general graphs with respect to the O(s) n2 ) time algorithm, where n denotes parameter s and provided a O(ss the number of vertices in G. The best-known algorithm for this problem runs in time sO(s) nO(1) given by Lokshtanov et al. [ACM Tran. of Algo. 2021]. On the other hand, Vertex k-Way Cut is W[1]-hard with respect to either of the parameters, k or s or k + s. These algorithmic results motivate us to look at the problems on special classes of graphs. In this paper, we consider the (Vertex) k-Way Cut problem on subclasses of chordal graphs and obtain the following results. – We ﬁrst give a sub-exponential FPT algorithm for k-Way Cut run√ ning in time 2O( s log s) nO(1) on chordal graphs. – It is “known” that Vertex k-Way Cut is W[1]-hard on chordal graphs, in fact on split graphs, parameterized by k + s. We complement this hardness result by designing polynomial-time algorithms for Vertex k-Way Cut on interval graphs, circular-arc graphs and permutation graphs. Keywords: chordal graphs · FPT graphs · permutation graphs  
   
  1  
   
  · interval graphs · circular-arc  
   
  Introduction  
   
  Graph partitioning problems have been extensively studied because of their applications in VLSI design, parallel supercomputing, image processing, and clustering [1]. In this paper, we consider one of the classical graph partitioning problems, namely, the (Vertex) k-Way Cut problem. In this problem the c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  M. Mavronicolas (Ed.): CIAC 2023, LNCS 13898, pp. 293–307, 2023. https://doi.org/10.1007/978-3-031-30448-4_21  
   
  294  
   
  S. Jana et al.  
   
  objective is to partition the graph into k components by deleting as few (vertices) edges as possible. Formally, the problems we study are deﬁned as follows. k -Way Cut Input: Parameter: Question:  
   
  A graph G = (V, E) and two integers s and k. s Does there exist a set S ⊆ E of size at most s, such that G − S has at least k connected components?  
   
  Vertex k -Way Cut Input: Parameter: Question:  
   
  A graph G = (V, E) and two integers s and k. s Does there exist a set S ⊆ V of size at most s, such that G − S has at least k connected components?  
   
  These problems are decision versions of natural generalization of the Global Min Cut problem, which seeks to delete a set of edges of minimum cardinality such that the graph gets partitioned into two parts (k = 2). In other words, the graph becomes disconnected. We ﬁrst give a brief account of the history of known results on the problem to set the context of our study. Algorithmic History of the Problem. There is a rich algorithmic study of (Vertex) k-Way Cut problem. In 1996, Goldschmidt and Hochbaum [6] showed that the k -Way Cut problem is NP-hard for arbitrary k, but 2 polynomial-time solvable when k is ﬁxed and gave a O(n(1/2−o(1))k ) time algorithm, where n is the number of vertices in the graph. Later, Karger and Stein [10] gave an edge contraction based randomized algorithm with running time ˜ (2k−1) ). The notation O ˜ hides the poly-logarithimic factor in the running O(n time. Recently, Li [13] obtained an improved randomized algorithm with running ˜ (1.981+o(1))k ). To date, the best known deterministic exact algorithm is time O(n given by Chekuri et al. [2] which runs in O(mn(2k−3) ) time. In terms of approximation algorithms, several approximation algorithms are known for the k -Way Cut problem with approximation factor (2 − o(1)), that run in time polynomial in n and k [17]. Recently, Manurangsi [15] proved that the approximation factor cannot be improved to (2 − ) for every  > 0, assuming small set expansion hypothesis. Lately, this problem has received signiﬁcant attention from the perspective of parameterized approximation as well. Gupta et al. [8] gave the ﬁrst FPT approximation algorithm for the problem 6 with approximation factor 1.9997 which runs in time 2O(k ) nO(1) . The same set of authors [9] also gave an (1 + )-approximation algorithm with running time (k/)O(k) nk+O(1) , and an approximation algorithm with a factor 1.81 run2 ning in time 2O(k ) nO(1) . Later, Kawarabayashi and Lin [11] gave a (5/3 + )2 approximation algorithm for the problem with running time 2O(k log k) nO(1) . Recently, Lokshtanov et al. [14] designed (1 + )-approximation algorithm for every  > 0, running in time (k/)O(k) nO(1) improving upon the previous result.  
   
  Partitioning Subclasses of Chordal Graphs with Few Deletions  
   
  295  
   
  Table 1. Complexity of the problems for diﬀerent parameterizations Problems k  
   
  Parameter(s) s  
   
  k+s  
   
  Vertex k -Way Cut W[1]-hard [5] W[1]-hard [16] W[1]-hard [16] k -Way Cut W[1]-hard [5] FPT [12] FPT [4]  
   
  From the parameterized perspective, Downey et al. [5] proved that the k -Way Cut and Vertex k -Way Cut problems are W[1]-hard when parameterized by k. On the other hand, when parameterized by the cut size s, it is known that ﬁnding a Vertex k -Way Cut of size s is also W[1]-hard [16]; however ﬁnding a k -Way Cut of size s is FPT [12]. Kawarabayashi and Thorup [12] O(s) · n2 ) time FPT algorithm for the k -Way Cut problem. Recently, gave a O(ss Lokshtanov et al. [4] designed a faster algorithm with running time sO(s) nO(1) . These tractable and intractable results (see Table 1) are a starting point of our work. That is, we address the following question: What is the complexity of (Vertex) k-Way Cut problem on well-known graph classes? Our Results. In this paper we obtain a a sub-exponential-FPT algorithm √ for k-Way Cut running in time 2O( s log s) nO(1) on chordal graphs (Sect. 3) and polynomial-time algorithms for Vertex k-Way Cut on interval graphs, circular-arc graphs, and permutation graphs (Sect. 4).  
   
  2  
   
  Preliminaries  
   
  All graphs considered in this paper are ﬁnite, simple, and undirected. We use the standard notation and terminology that can be found in the book of graph theory [18]. We use [n] to denote the set of ﬁrst n positive integers {1, 2, 3, . . . , n}. For a graph G, we denote the set of vertices of the graph by V (G) and the set of edges of the graph by E(G). We denote |V (G)| and |E(G)| by n and m respectively, where the graph is clear from context. We abbreviate an edge (u, v) as uv sometimes. For a set S ⊆ V (G), the subgraph of G induced by S is denoted by G[S] and it is deﬁned as the subgraph of G with vertex set S and edge set {(u, v) ∈ E(G) : u, v ∈ S} and the subgraph obtained after deleting S (and the edges incident to the vertices in S) is denoted by G − S. For v ∈ V (G), we will use G − v to denote G − {v} for ease of notation. All vertices adjacent to a vertex v are called neighbours of v and the set of all such vertices is called the open neighbourhood of v, denoted by NG (v). For a set of vertices S ⊆ V (G), we deﬁne NG (S) = (∪v∈S N (v)\S). We deﬁne the closed neighbourhood of a vertex v in the graph G to be NG [v] := NG (v) ∪ {v} and closed neighbourhood of a set of vertices S ⊆ V (G) to be NG [S] := NG (S) ∪ S. We drop the subscript G when the graph is clear from the context. For C ⊆ V (G), if G[C] is connected and N (C) = ∅, then we say that G[C] is a connected component of G. For both the problems k -Way Cut and Vertex k -Way Cut, in the given instance, we  
   
  296  
   
  S. Jana et al.  
   
  assume that k > 1, otherwise the input itself is an optimal solution with zero cut size. A partition of G in to k components is a partition of V (G) into k sets V1 , . . . , Vk such that each G[Vi ] is a connected. We say a partition is non-trivial when k > 1. Definition 1. A tree-decomposition of a connected graph G is a pair (T, β), where T is a tree and and β : V (T ) → V (G) such that  – x∈V (T ) β(x) = V (G), we call β(x) as the bag of x, – for every edge (u, v) ∈ E(G), there exists x ∈ V (T ) such that {u, v} ⊆ β(x), and – for every vertex v ∈ V (G), the subgraph of T induced by the set β −1 (v) := {x : v ∈ β(x)} is connected. Chordal Graphs: A graph G is a chordal graph if every cycle in G of length at least 4 has a chord i.e., an edge joining two non-consecutive vertices of the cycle. A clique-tree of G is a tree-decomposition of G where every bag is a maximal clique. We further insist that every bag of the clique-tree is distinct. There are several ways to obtain a clique-tree decomposition of G; one way is by using perfect elimination ordering (PEO) of G [3]. The following lemma shows that the class of chordal graphs is exactly the class of graphs that have a clique-tree. Lemma 1 ([7]). A connected graph G is a chordal graph if and only if G has a clique-tree. Let F be a non-empty family of sets. A graph G is called an intersection graph for F if there is a one-to-one correspondence between F and G where two sets in F have nonempty intersection if and only if their corresponding vertices in G are adjacent. We call F an intersection model of G and we use G(F ) to denote the intersection graph for F . If F is a family of intervals on a real line, then G(F ) is called an interval graph for F . A proper interval graph is an interval graph that has an intersection model in which no interval properly contains another. If F is a family of arcs on a circle in the plane, then G(F ) is called an circular-arc graph for F . If F is a family of line segments in the plane whose endpoints lie on two parallel lines, then the intersection graph of F is called the permutation graph for F .  
   
  3  
   
  Sub-exponential FPT Algorithm on Chordal Graphs  
   
  Chordal graphs belong to the class of perfect graphs that contains several other graph classes such as split graphs, interval graphs, threshold graphs, and block graphs. A graph G is a chordal graph if every cycle in G of length at least 4 has a chord i.e., an edge joining two non-consecutive vertices of the cycle. Chordal graphs are also characterized as the intersection graph of sub-trees of a tree. Every chordal graph has a tree-decomposition where every bag induces a clique. In this section, we obtain a sub-exponential FPT algorithm for the k -Way Cut problem in chordal graphs parameterized by s, the number of cut edges. We ﬁrst give a characterization of the k -Way Cut on a clique in Lemma 3. Later, we use this characterization to design our algorithm.  
   
  Partitioning Subclasses of Chordal Graphs with Few Deletions  
   
  297  
   
  Lemma 2. Let K be a clique and s be an integer. Then we can not partition the clique into more than one component by deleting s edges if one of the following conditions holds. (i) |K| > (s√+ 1), √ (ii) |K| > (2 s + 1), and size of every component in the partition is at most s. Proof. (i) If |K| > (s + 1), the size of min-cut of K is at least s + 1 and hence we cannot partition K by deleting s edges. (ii) √ In the second condition, the size of every √ vertex v in any every component in the partition is at most s and √ hence √ component must be disconnected from at least 2 s + 2 − s = s + 2 vertices that are in other components. Thus √ the total number of edges that needs to √ be deleted is at least (2 s + 2)( s + 2)/2 > s. Hence the clique can not be partitioned by deleting s edges.  √ Lemma 3. Let K be a clique and s be an integer such that (2 s + 1) < |K| < (s + 2), then any non-trivial partition of√K obtained by deleting at most s edges, has a component of size at least (|K| − s). √ Proof. Let K be a clique such that (2 s + 1) < |K| < (s + 2) and we have to partition the clique into k components by deleting at most s edges. Let γ be the size of the largest component in the partition. |E(K)| = |E(Largest component)| + |E(other components)| + |cut edges|       |K| γ |K| − γ =⇒ ≤ + + |cut edges| 2 2 2       |K| γ |K| − γ =⇒ ≤ + +s 2 2 2 =⇒ |K|(|K| − 1) ≤ γ(γ − 1) + (|K| − γ)(|K| − γ − 1) + 2s =⇒ 0 ≤ γ 2 − γ|K| + s Therefore, either γ ≤  
   
  |K|−  
   
  √  
   
  |K|2 −4s , 2  
   
  or γ ≥ √ |K|−  
   
  |K|+  
   
  √  
   
  √ |K|2 + 4s 2  
   
  |K|2 −4s 2  
   
  holds. If the ﬁrst  
   
  inequality holds, then it implies γ ≤ (by using the inequality √ √ √ √ a − b ≤ a − b for 0 < b ≤ a). It follows that γ ≤ s. However, Lemma √ √ 2 implies that if γ ≤ s and |K| > 2 s + 1, then there is no non-trivial partition of K. Thus in this case, √ K has no non-trivial partition. If the second inequality √ |K|+ |K|2 −4s holds, then γ ≥ , which implies that γ ≥ (|K|− s). Hence any non2 trivial partition of K, √ obtained by deleting at most s edges, has a component of  size at least (|K| − s). √  
   
  Lemma 4. There are 2O( s log s) many possible choices for any non-trivial partition of a clique K obtained by deleting at most s edges. Proof. We have the following three cases depending on the size of K. Case 1. |K| ≥ (s + 2).  
   
  298  
   
  S. Jana et al.  
   
  In this case, no non-trivial partition exists by Lemma 2. √ Case 2. |K| ≤ (2 s + 1). √ 2 s+1 In this case, there are k√ ways√of partitioning the clique into k components. Since k ≤ (s + 1), k 2 s+1 ≤ 2O( s log s) . √ Case 3. (2 s + 1) < |K| < (s + 2). From Lemma 3, in a√partition of K into k components, there √exists a component vertices. So, we guess (|K| − s) many vertices in with at least (|K| − s) many √ a component. Now, the rest s vertices are partitioned into k components.√ The  |K|  √ · k s · k. total number of choices for such a partition of K is bounded by |K|− s √  
   
  Since both k and |K| are bounded by (s+1), we have |K|  
   
  s  
   
  ·k  
   
  √  
   
  s  
   
  ·k ≤ 2O(  
   
  √ s log s)  
   
  .   
   
  Now we prove the following theorem. Theorem 1. k-Way Cut problem on a chordal graph with n vertices can be √ solved in time 2O( s log s) nO(1) . To prove Theorem 1, we design a dynamic-programming algorithm for the k -Way Cut problem on chordal graphs, which exploits its clique-tree decomposition. Let G be a chordal graph and τ = (T, {Kt }t∈V (t) ) be its clique-tree decomposition. Let T be a clique-tree of G rooted at some node r. For a node t of T , Kt is the set of vertices contained in t and let Vt be the set of all vertices of the sub-tree of T rooted at t. The parent node of t is denoted by parent(t). We follow a bottom-up dynamic-programming approach on T to design our algorithm. For a set of vertices U , we use P(U ) to denote a partition {A1 , A2 , . . . , Ak } of U where each Ai is a set in the partition. Given the partitions of two sets U1 , U2 ⊆ V (G), say P(U1 ) = {A1 , A2 , . . . , Ak } and P(U2 ) = {B1 , B2 , . . . , Bk }, we call these partitions mutually compatible, if for each vertex u in U1 ∩U2 , u ∈ Ai if and only if u ∈ Bi for some i ∈ [k]. We denote the mutually compatible operation by ⊥. For any node t, a partition P(Kt ) and an integer w where 0 ≤ w ≤ (k − 1), a feasible solution for (t, P(Kt ), w) is a k-way cut in G[Vt ] with the following properties: (P(Vt ) is the partition induced on Vt by the above k-way cut). • P(Kt ) ⊥ P(Vt ), • Exactly w components in P(Vt ) contain no vertex from Kt , that is, these w components are completely contained inside G[Vt \Kt ]. Next, we deﬁne the dynamic-programming table whose entry is denoted by M [t; P(Kt ), w] for a node t and integer w, 0 ≤ w ≤ k. The entry M [t; P(Kt ), w] stores the size of the smallest such feasible solution. From Lemma 4, the number of sub-problems (or number of√ entries that we have to compute) for each node in the tree is bounded by 2O( s log s) as each node is a clique. Below we give a recurrence relation to compute M [t; P(Kt ), w] for each tuple (t, P(Kt ), w). The case where t is a leaf, corresponds to the base case of the recurrence, whereas  
   
  Partitioning Subclasses of Chordal Graphs with Few Deletions  
   
  299  
   
  the values of M [t; ., .] for a non-leaf node t depends on the value of M [t , .] for each child t of node t (which have already been computed). By applying the formula in a bottom-up manner on T , we compute M (r; P(Kr ), k − 1) for the root node r. Note that the value of M (r; P(Kr ), k − 1) is exactly the size of an optimal solution for our problem, because in any optimal solution there are exactly k − 1 components that are completely contained in G − Kr . Here without loss of generality, we can assume that Kr contains exactly one vertex of G. For a partition P(U ) of U , we deﬁne CUT(P(U )) as the set of edges whose endpoints belong to diﬀerent sets in the partition. Now, we describe the recursive formulas to compute the value of M [t; ., .], for each node t. Leaf Node. Let t be a leaf node. Then for each partition P(Kt ), we deﬁne  |CUT(P(Kt ))| if w = 0, M [t; P(Kt ), w] = +∞ otherwise. Non-leaf Node. Let t be a non-leaf node. Assume that the node t has  children t1 , . . . , t . For a pair of distinct vertices u, v in Kt , let Child Pair(t; u, v) denote the number of children of t containing both the vertices u and v. For a partition P(Kt ), let Child(P(Kt )) denote the sum of the number of occurrences (with repetitions) of the edges from CUT(P(Kt )) in all the children nodes of t, that is, Child(P(Kt )) = (u,v)∈CUT(P(Kt )) Child Pair(t; u, v). Let ψ(P(Kt )) denote the number of sets in P(Kt ) that have no common vertex with the parent node of t. Therefore, the recurrence relation for computing M (t; ., .) for t is as follows: M [t; P(Kt ), w] = |CUT(P(Kt ))| − Child(P(Kt )) +  
   
  min  
   
    
   
  ∀(P(Kti ),wi ): i=1 P(Kti )⊥P(Kt )  w= (wi +ψ(P(Kti )))  
   
  M [ti ; P(Kti ), wi ].  
   
  i  
   
  Next, we prove the correctness of the above recurrence relation. Correctness. Let R denote the value of the right side expression above. To prove the recurrence relation, ﬁrst we show M [t; P(Kt ), w] ≤ R and then M [t; P(Kt ), w] ≥ R. Let t be a node in T having  children t1 , t2 , . . . , t . Any set of  compatible partitions, one for each child  of t together with P(Kt ) leads to a feasible solution for (t, P(Kt ), w) if w = i (wi + ψ(P(Kti ))). Now for each child node ti of t and for any pair of vertices u, v in Kt , if the vertices u and v are in diﬀerent sets in each of the partitions P(Kt ) and P(Kti ), then the (to be deleted) edge (u, v) is counted twice, once in CUT(P(Kt )) and once in M [ti ; P(Kti ), wi ]. Now if the edge (u, v) is present in c many children   of t, then in the entry M [ti ; P(Kti ), wi ] this edge gets counted c times. i=1  
   
  To avoid over-counting of the edge (u, v) in M [ti ; ., .], we must consider the edge (u, v) exactly once and for this purpose we use Child(P(Kt )) in the  
   
  300  
   
  S. Jana et al.  
   
  recurrence relation. Considering this over counting, the set of edges corresponding to M [t1 ; P(Kt1 ), w1 ], M [t2 ; P(Kt2 ), w2 ], . . . , M [t ; P(Kt ), w ] with size   M [ti ; P(Kti ), wi ] − Child(P(Kt )), together with the edges corresponding to i=1  
   
  CUT(P(Kt )) gives us a feasible solution for (t, P(Kt ), w). Hence, M [t; P(Kt ), w] ≤   |CUT(P(Kt ))| − Child(P(Kt )) + M [ti ; P(Kti ), wi ], where P(Kt ) ⊥ P(Kti ) for i=1  each i ∈ [] and w = i (wi + ψ(P(Kti )). Next, we show that M [t; P(Kt ), w] ≥ R. Let Y be a set of cut edges corresponding to the entry M [t; P(Kt ), w]. Let Y  ⊆ Y be the set of edges that are not present in Kt . So Y \Y  determines the partition in Kt . Let Y  = Y1 ∪ . . . ∪ Y , where each Yi is the set of edges for G[V (ti )]. Let X1 ∪ . . . ∪ X ⊆ (Y \Y  ), where Xi = (Y \Y  ) ∩ E(K(ti )). Now it is easy to see that Yi ∪ Xi is a feasible solution for (ti , P(Kti ), wi ), where P(Kt ) ⊥ P(Kti ) for each i ∈ [] and w =    i (wi + ψ(P(Kti )). Since Y \Y determines the partition only in Kt , |Y \Y | = |CUT(P(Kt ))|. Thus, we get M [t; P(Kt ), w] − |CUT(P(Kt ))| + Child(P(Kt )) ≥   M [ti ; P(Kti ), wi ]. Hence the correctness of the recurrence relation follows.  
   
  i=1  
   
  Time Complexity. There are O(n) many nodes in the clique tree of the given graph√ G. The number of entries M [.; ., .] for any node can be upper bounded by k2O( s log s) (from Lemma 4). To compute one such entry, we look at the entries with the compatible partitions in the children nodes. Now, we describe how we compute M [t; P(Kt ), w] in a node for a ﬁxed partition P(Kt ) and a ﬁxed integer w ≤ k. We apply an incremental procedure to ﬁnd this. Consider an ordering t1 ≺ t2 ≺ . . . ≺ t of child nodes of t. In the dynamic-programming, we store the entries M [ti ; P(Kti ), wi ] for each P(Kti ) ⊥ P(Kt ) and wi ≤ k. For each ti , we compute the entries Di (z) for 0 ≤ z ≤ k, where Di (z) = min {M [ti ; P(Kti ), w∗ ] : z  
   
  P(Kti ) ⊥ P(Kt ), z = w∗ + ψ(P(Kti ), w∗ ≤ k}. Next we create a set of entries for D, deﬁned by D(1, 2, . . . , i; z) = min {D(1, 2, . . . , i − 1; z1 ) + Di (z2 )}, for z=z1 +z2  
   
  i ∈ []. D(1; z) = D1 (z), ∀z (the base case). It takes O(k 3 ) time to compute all the entries of the table D. Now using the entries of the table D, we compute M [t; P(Kt ), w], i.e. M [t; P(Kt ), z] = |CUT(P(Kt ))| − Child(P(Kt )) + D(1, 2, . . . , ; z). √ of each node t, computing all Since there are 2O( s log s) many partitions √ DP table entries at each node takes 2O( s log s) O(k 3 ) time. Because , k ≤ n, and there are O(n) many nodes in the clique tree, the total running time is √ upper-bounded by 2O( s log s) nO(1) .  
   
  4  
   
  Polynomial Time Algorithmic Results  
   
  In this section, we obtain polynomial-time algorithms for the optimization version of the Vertex k -Way Cut on interval graphs, circular-arc graphs, and permutation graphs.  
   
  Partitioning Subclasses of Chordal Graphs with Few Deletions  
   
  4.1  
   
  301  
   
  Interval Graphs  
   
  Here, we design a dynamic-programming algorithm for the optimization version of the Vertex k -Way Cut on interval graphs. Let G be an interval graph with vertex set V (G) = {v1 , v2 , . . . , vn }. Since G is an interval graph, there exists a corresponding geometric intersection representation of G, where each vertex vi ∈ V (G) is associated with an interval Ii = ((Ii ), r(Ii )) in the real line, where (Ii ) and r(Ii ) denote left and right endpoints, respectively in Ii . Two vertices vi and vj are adjacent in G if and only if their corresponding intervals Ii and Ij intersect with each other. Without loss of generality we can assume that along with the graph, we are also given the corresponding underlying intervals on the real line. We use I to denote the set {Ii : vi ∈ V } of intervals and P to denote the set of all endpoints of these intervals, i.e., P = ∪I∈I {(I), r(I)}. In the remaining section, we use vi and Ii interchangeably. For a pair of points a and b on the real line with a ≤ b (we say a ≤ b when x-coordinate of a is not greater than x-coordinate of b), we deﬁne Ia,b to denote the intervals which are properly contained in [a, b], formally Ia,b = {I ∈ I : a ≤ (I) ≤ r(I) ≤ b}. Let Ib be the set of intervals whose left endpoints are greater than b and I 1 contains a root or roots, and then we report σ-soft inclusion, call the square S suspect, and subdivide it. Both criteria for exclusion and σ-soft inclusion can hold simultaneously, but we stop as soon as we verify any of them. The estimate 4mk of Corollary 2 increases to at most α(σ)mk for α(σ) exceeding 4 but bounded by a constant for a constant σ.  
   
  340  
   
  1.7  
   
  V. Y. Pan et al.  
   
  The Known e/i Tests  
   
  The known e/i tests operate with the coeﬃcients of an input polynomial, e.g., they are stated in terms of the coeﬃcients of the auxiliary polynomials obtained from p(x) by means of map (4) and recursive root-squaring (Pellet’s theorem), [3], involve the higher order derivatives p(i) (x), i = 1, 2, . . . , d [5,29], or Newton’s identities and fast root-squaring algorithms based on convolution [20]. 1.8  
   
  New Progress  
   
  New progress in the design and analysis of subdivision root-ﬁnders for a black box polynomial, based in particular on novel e/i tests, began in 2018 in arXiv preprint [24]. It contained 139 pages in August 2022, was partly covered in [6–8,13,22,23], and is extended in this paper and [25,26] to decreasing the complexity bounds of the pioneering paper [14], while solving more general computational problems of root-ﬁnding for a black box polynomial and approximation of matrix eigenvalues. Furthermore, with randomization, the same new algorithms applied to a general polynomial given with its coeﬃcients have reached and then even significantly decreased the Boolean cost complexity estimates of [18,21].4 Moreover, the algorithms allow highly eﬃcient implementation. According to extensive tests of 2020 in [6,7], the new root-ﬁnders noticeably accelerated the previous best implementation [9] of subdivision root-ﬁnding in regions containing only a small number of roots, even where root-ﬁnders are allowed to operate with coeﬃcients. In the implementation of 2022 of more advanced variants of these root-ﬁnders, which are still signiﬁcantly slower than those of [25,26], acceleration became dramatic, and even for approximation of all d zeros of a polynomial p given with its coeﬃcients, the new root-ﬁnders became at least competitive with user’s choice package MPSolve [8], which was dramatically faster than [9] for that task.5 1.9  
   
  Cauchy-Based e/i Tests: Outline and an Extension  
   
  The power sums of the roots in a complex domain D are given by Cauchy integrals over its boundary contour C (cf. [1]):    p (x) h 1 √ x dx, h = 0, 1, . . . . xhj = (3) sh = sh (p, D) := 2π −1 C p(x) xj ∈D  
   
  4  
   
  5  
   
  Up to small poly-logarithmic factors these estimates reach lower bound for approximation of even a single zero of p(x), but as we specify in Sect. 7, the algorithms of [25, 26] greatly accelerate those of [18, 21] for approximation of all m = o(d) zeros of p that lie in a disc reasonably well isolated from the d − m external zeros. The complexity of a subdivision root-ﬁnder is proportional to the number of roots in a region, while MPSolve is about as fast and slow for all roots as for their ﬁxed subset. MPSolve implements Ehrlich-Aberth’s root-ﬁnding iterations, which empirically converge to all d roots very fast right from the start but with no formal support and so far only under an initialization that operates with the coeﬃcients of p (see [28]).  
   
  Fast Approximation of Polynomial Zeros and Matrix Eigenvalues  
   
  341  
   
  In particular s0 is the number #(D) of roots in D, and we can devise certiﬁed e/i tests by approximating s0 or even just (s0 ) within less than 1/2 and rounding the approximation to the nearest integer. We only deal with discs, where D = D(c, ρ), and furthermore reduce our study to the case of the unit disc D(0, 1) based on the univalent map: x − c x−c , D(c, ρ) → D(0, 1), and p(x) → t(x) = p x → . (4) ρ ρ In this case we approximate the integral s0 with a ﬁnite sum s0,q at the qth roots of unity at NR cost q. Then |s0,q − s0 | < 1/2 already for q = O(log(d)) if no roots lie on or near the boundary circle C(0, 1). If |s0,q | > 1/2, however, then s0 ≥ 1 unless some roots lie near the circle C(0, 1), and in both cases we certify soft inclusion. Otherwise, exclusion seems to be likely, but is not certiﬁed yet because boundary roots can corrupt approximation of s0 by s0,q . Next we outline further computations required to complete our e/i test. Assume that the unit disc D(0, 1) contains at most m roots and apply e/i tests to 2m + 1 concentric discs, whose boundary circles are pairwise isolated enough, so that any root can aﬀect e/i test just for a single disc, and hence m roots can aﬀect at most m out of all 2m + 1 tests. Then majority vote certiﬁes that the innermost disc contains no roots or that the outermost disc contains a root. The ratio σ > 1 of the radii of these two discs bounds the softness of the resulting test, and we readily keep σ below 1.2, say. NR cost of 2m + 1 applications of an e/i test is 2m + 1 times the cost of a single test, but in case of larger m we decrease the overall NR cost by applying our alternative randomized e/i test w times for w m. Namely, we ﬁrst apply our soft e/i test to a disc whose center is ﬁxed (say, at the origin) and whose radius ρ is sampled at random in a ﬁxed range. Then the output of the test is correct if no roots lie near the boundary circle, and this occurs with a probability 1 − γ > 0 for γ inversely proportional to the NR cost q of our e/i test. We ﬁx an integer v ≥ 1, reapply our test for v independent identically distributed (iid) values ρ of the radius and certify inclusion unless |s0,q | < 1/2 in all of the v outputs. In the latter case we claim exclusion with an error probability P ≤ γ v ; γ v decreases exponentially in v, while NR cost increases by a factor of v. 1.10  
   
  Organization of the Paper  
   
  We devote the next two sections to background. Sections 4 and 5 cover our deterministic and randomized e/i tests, respectively. In Sect. 6 we extend the estimates of [14] for the precision of computing and hence for the Boolean cost of approximation of matrix eigenvalues to our more general case. In Sect. 7 we outline further progress in [25,26].  
   
  2  
   
  Definitions and Basic Properties  
   
  – NR cost (NR complexity) of a root-ﬁnder is the number of points x at which it evaluates Newton’s ratio NR(x) and Newton’s inverse ratio NIR(x).  
   
  342  
   
  V. Y. Pan et al.  
   
  – Deﬁne square, disc, circle (circumference), and annulus on the complex plane: S(c, ρ) := {x : | (c − x)| ≤ ρ, | (c − x)| ≤ ρ}, D(c, ρ) := {x : |x − c| ≤ ρ}, C(c, ρ) := {x : |x − c| = ρ}, A(c, ρ, ρ ) := {x : ρ ≤ |x − c| ≤ ρ }. – Δ(R), X(R), and #(R) are the diameter, root set, and index (root set’s cardinality) of a region R on the complex plane, respectively. – A disc D(c, ρ), a circle C(c, ρ), or a square S(c, ρ) is θ-isolated for θ > 1 if X(D(c, ρ)) = X(D(c, θρ)), X(C(c, ρ)) = X(A(c, ρ/θ, ρ/θ)), or X(S(c, ρ)) = X(S(c, θρ)), respectively. – The largest upper bound on such a value θ is said to be the isolation of the disc D(c, ρ), the circle C(c, ρ), or the square S(c, ρ), respectively, and is denoted i(D(c, ρ)), i(C(c, ρ)), and i(S(c, ρ)), respectively. – r1 (c, t) = |y1 − c|, . . . , rd (c, t) = |yd − c| in non-increasing order are the d root radii, that is, the distances from a complex center c to the roots y1 . . . , yd of a dth degree polynomial t(x). rj (c) := rj (c, p), rj := rj (0) for j = 1, . . . , d. – Diﬀerentiate factorization (1) of p(x) to express NIR(x) as follows: p (x)  1 = . p(x) x − xj j=1 d  
   
  NIR(x) :=  
   
  (5)  
   
  Definition 3. For p(x) of (1), σ > 1, and integers and m such that 1 ≤ ≤ m ≤ d and #(D(0, 1)) ≤ m, a σ-soft -test, or just -test for short (1-test being e/i test), either outputs 1 and stops if it detects that rd−+1 ≤ σ, that is, #(D(0, σ)) ≥ , or outputs 0 and stops if it detects that rd−+1 > 1, that is,6 #(D(0, 1)) < . -testc,ρ , aka -test for the disc D(c, ρ), is an -test applied to the polynomial t(y) of (4). √ Observation 4. For√a complex c and ρ > 0 it holds that (i) i(S(c, ρ))/ 2 ≤ √ i(D(c, ρ)) ≤ i(S(c, ρ 2))/ 2, (ii) i(C(c, ρ)) ≤ i(D(c, ρ)) and if i(D(c, ρ)) ≥ θ2 ≥ 1, then i(C(c, ρθ)) ≥ θ.  
   
  3  
   
  The Power Sums of the Roots and Cauchy Sums  
   
  3.1  
   
  The Power Sums of the Roots and Cauchy Sums in the Unit Disc  
   
  For a positive integer q deﬁne Cauchy sums by means of discretization of Cauchy integral (3) in the case where D is the unit disc D(0, 1): sh,q :=  
   
  q−1  2π √−1  1  (h+1)g p (ζ g ) , for h = 0, 1, . . . , q − 1 and ζ := exp ζ (6) q g=0 p(ζ g ) q  
   
  denoting a primitive q-th root of unity. 6  
   
  Both bounds rd−+1 ≤ σ and rd−+1 > 1 can hold simultaneously, but as soon as an -test veriﬁes any of them, it stops without checking if the other bound also holds.  
   
  Fast Approximation of Polynomial Zeros and Matrix Eigenvalues  
   
  343  
   
  Remark 1. We call the values sh,q Cauchy sums by following [24]. Schönhage used these values in [30] for h > 0 to deﬂate a factor of p, but we only use them in the case of h = 0, ignored by Schönhage, and only for e/i tests, not considered in [30]; we know of no application of the Cauchy sums to root-ﬁnding between [30] and [24]. As in [24] we certify inclusion if p(ζ g ) = 0 for any g, 0 ≤ g < q. Theorem 5 [6,24]. For a polynomial p(x) of (1) and an integer q ≥ 1 let d d xh q j j=1 (xj − 1) = 0. Then sh,q = j=1 1−xq for sh,q of (6) and h = 0, 1, . . . , q − 1. j  
   
  3.2  
   
  Approximation Errors and Root-Counting in the Unit Disc  
   
  Corollary 6 [6,24,30].7 Let q be a positive integer and let the unit circle C(0, 1) h be θ-isolated for θ > 1. Then |sh,q − sh | ≤ θdθ q −1 for h = 0, 1, . . . , q − 1. Algorithm 7. Root-counting in the unit disc at NR cost q = O(logθ (d)). INPUT: a black box polynomial p of a degree d and θ > 1. INITIALIZATION: Compute the integer q = logθ (4d + 2) > logθ (2d + 1). COMPUTATIONS: Compute Cauchy sum s0,q and output an integer s¯0 closest to it,8 which is also closest to its real part (s0,q ). Observation 8. (i) Algorithm 7 runs at NR cost q = logθ (4d + 2). (ii) It outputs s¯0 = #(D(0, 1)) if the circle C(0, 1) is θ-isolated for θ > 1. (iii) If the algorithm outputs s¯0 > 0, then #(D(0, θ)) > 0. Proof. Corollary 6 immediately implies claim (ii) but also implies that #(D(0, 1)) > 0 if s¯0 > 0 unless #(A(0, 1/θ, θ)) > 0. In both cases #(D(0, θ)) > 0. 3.3  
   
  Extension to Any Disc  
   
  Map (4) reduces the computation of Cauchy sum sh,q in any disc D(c, ρ) to the case of the unit disc D(0, 1) as follows. Definition 9. For a disc D(c, ρ), polynomials p(x) and t(y) = p( y−c ρ ), a positive √  
   
  integer q, and ζ = ζq := exp( 2π q −1 ), deﬁne Cauchy sums sh,q (p, c, ρ) := sh,q (t, 0, 1) :=  
   
  q−1 ρh+1  (h+1)g p (c + ρζ g ) for h = 0, 1, . . . , q − 1. ζ q g=0 p(c + ρζ g )  
   
  Observation 10. Given a polynomial p(x), a complex c, a positive ρ, a positive integer q, and the qth roots of unity, evaluation of s0,q (p, c, ρ) can be reduced to the evaluation of NIR(ζ g ) for g = 0, 1, . . . , q − 1 at NR cost q and performing q + 1 divisions, 2q − 1 multiplications, and 2q − 1 additions. 7 8  
   
  [30] proved this corollary directly; [24] and then [6] deduced it from Theorem 5. Given the coeﬃcients of p(x) one can ﬁx q := 2k for k = log2 logθ (4d + 2) and then evaluate p(x) and p (x) at all qth roots of unity by applying FFT.  
   
  344  
   
  V. Y. Pan et al. x −c  
   
  Observation 11. (4) maps the roots xj of p(x) into the roots yj = jρ of t(y), for j = 1, . . . , d, and preserves the index #(D(c, ρ)) and the isolation i(D(c, ρ)). Refer to Algorithm 7 applied to the polynomial t(y) of (4) as Algorithm 7c,ρ and also as Algorithm 7 applied to the disc D(c, ρ) and the circle C(c, ρ); recall Observation 11 and extend Observation 8 as follows. Observation 12. (i) Algorithm 7c,ρ runs at NR cost q = logθ (4d + 2). (ii) It outputs s¯0 = #(D(c, ρ)) if the circle C(c, ρ) is θ-isolated for θ > 1. (iii) If the algorithm outputs s¯0 > 0, then #(D(c, θρ)) > 0. Remark 2. Algorithm 7 reduces computation of s0,q to evaluation of NIR(ζ g ) g for g = 0, 1, . . . , q − 1. If v := maxq−1 g=0 |NIR(ζ )| is small for a reasonably large q, then #(D(0, 1)) = 0 for a large class of polynomials p(x). Indeed, NIR(x) = d 1 j=1 x−xj (see (5)), and this sum vanishes only on an algebraic variety of a smaller dimension in the space of the zeros x1 , . . . , xd of p(x). If v is small, then all the qth roots of unity lie near that variety, which strongly restricts the input class of polynomials p where q is large. Extensive experiments in [6,8] have been performed for both synthetic and real world inputs and q of order log2 (d). In these experiments the unit disc D(0, 1) contained no roots, with no single exception, unless v exceeded some ﬁxed reasonably small upper bound.9 This empirically supported a very fast heuristic e/i test, even though it fails on specially concocted polynomials p(x) = xq+1 − (q + 1)x + w of degree q where |w| is small. Clearly, the extensive tests of [6,8] have never encountered such inputs; our next e/i test is a little slower but never fails on any input.  
   
  4  
   
  Deterministic -Test Under No Isolation Assumption  
   
  Algorithm 7c,ρ is a reliable root-counter unless some roots lie on or near the circle C(c, ρ). To counter their adverse impact, apply the algorithm to 2m + 1 concentric discs D(c, ρi ), i = 0, 1, . . . , 2m, such that the 2m + 1 concentric circles Ci = C(c, ρi ), i = 0, 1, . . . , 2m, are suﬃciently well isolated pairwise, allowing a single root to corrupt Algorithm 7c,ρi for only a single i. Now majority vote certiﬁes that at least roots lie in the outermost disc of the family or less than roots lie in its innermost disc. This deﬁnes a σ-soft -test for σ > 1 equal to the ratio of the radii of the latter two discs. Next we specify this recipe. Without loss of generality (wlog) let c = 0, ρ = 1, and C(c, ρ) = C(0, 1). Algorithm 13. Deterministic -test. INPUT: A black box polynomial p(x) of a degree d and two positive integers and m ≥ such that the unit disc D(0, 1) contains at most m roots. 9  
   
  Actually, [6, 8] tested the assumption that |sh,q | were small for h = 0, 1, 2, but this follows if v is small because v ≥ |sh,q | for h = 0, 1, . . . , q − 1.  
   
  Fast Approximation of Polynomial Zeros and Matrix Eigenvalues  
   
  345  
   
  INITIALIZATION: Fix 1  
   
  σ > 1, θ = σ 4m+1 , q = logθ (4d + 2), ρi =  
   
  1 , i = 0, 1, . . . , 2m. θ2i+1  
   
  (7)  
   
  OUTPUT: 0 if #(D(0, 1/σ)) < or 1 if #(D(0, 1)) ≥ . COMPUTATIONS: Apply Algorithm 70,ρi for q of (7) and i = 0, 1, . . . , 2m. Output 1 if among all 2m + 1 output integers s¯0 at least m + 1 integers are at least . Otherwise output 0. (We can output 1 already on a single output s¯0 > 0 if = 1; we can output 0 already on a single output s¯0 < m if = m.) Theorem 14. Algorithm 13 is a σ-soft -test for σ > 1 of our choice (see (7)). Proof. Corollary 6 implies that for every i the output s¯0 of Algorithm 70,ρi is equal to #(D(0, ρi )) unless there is a root in the open annulus Ai := A(0, ρi /θ, θρi ). The 2m + 1 open annuli Ai , i = 0, 1, . . . , 2m, are disjoint. Hence a single root cannot lie in two annuli Ai , and so Algorithm 70,ρi can fail only for a single i among i = 0, . . . , 2m. Therefore, at least m + 1 outputs of the algorithm are correct. To complete the proof, combine this property with the relationships ρ2m = 1/θ4m+1 (cf. (7)), ρ0 = 1/θ < 1, and #(D(0, ρi+1 )) ≤ #(D(0, ρi )), which hold because D(0, ρi+1 ) ⊆ (D(0, ρi ) for i = 0, 1, . . . , 2m − 1. Observation 15 [Cf. Observation 10]. Algorithm 13 runs at NR cost A = (2m + 1)q for q = logθ (4d + 2) = (4m + 1) logσ (4d + 2), which dominates the cost of the remaining ops involved, even in the cases of the Mandelbrot and sparse input polynomials, and which stays in O(m2 log(d)) if σ − 1 exceeds a positive constant.  
   
  Randomized Root-Counting and -Tests  
   
  5 5.1  
   
  Solution with a Crude Bound on Error Probability  
   
  Next accelerate -testc,ρ in case of larger integers m by applying randomization and using fewer calls for Algorithm 7c,ρ at the price of only certifying the output with a high probability (whp) rather than deterministically. We ﬁx the center c of a circle C(c, ρ) but choose its radius ρ at random in a small range. Then whp i(C(c, ρ)) is suﬃciently well separated from 1; this excludes the adverse impact of boundary roots, while a soft -test accepts a small variation of the radius ρ. Wlog let c = 0. Algorithm 16. Basic randomized root-counter. INPUT: γ ≥ 1 and a d-th √ degree black box polynomial p(x) having at most m roots in the disc D(0, 2). INITIALIZATION: Sample a random value w in the range [0.2, 0.4] under the uniform probability distribution in that range and output ρ = 2w .  
   
  346  
   
  V. Y. Pan et al.  
   
  COMPUTATIONS: By applying Algorithm 70,ψ compute the 0-th Cauchy sum s0,q in the disc D(0, ρ) for p(x) and q = 10mγ log2 (4d + 2). Output an integer s¯0 closest to s0,q . Theorem 17. Algorithm 16, running at NR cost q = 10mγ log2 (4d + 2) for any ﬁxed γ ≥ 1, outputs s¯0 = #(D(0, ρ)) with a probability at least 1 − 1/γ. √ Proof. By assumption, the annulus A(0, 1, 2) contains at most m roots. Hence √ at most m root radii rj = 2ej , for j = 1, . . . , m ≤ m, lie in the range [1, 2], that is, 0 ≤ ej ≤ 0.5 for at most m ≤ m integers j. Fix m intervals, centered at ej , for j = 1, . . . , m , each of a length at most 1/(5m γ). Then the overall length of these intervals is at most 1/(5γ). Let U denote the union of these intervals. Sample a random u in the range [0.2, 0.4] under the uniform probability distribution in that range and notice that Probability (u ∈ U) ≤ 1/γ. Hence with a probability at least 1 − 1/γ the circle C(0, w) is θ-isolated for 1 θ = 2 10mγ , in which case Algorithm 16 outputs s¯0 = s0 = #(D(0, w)) by virtue of claim (ii) of Observation 12. 5.2  
   
  Refining the Bound on Error Probability  
   
  Next we reapply Algorithm 16 v times, increasing its NR cost v times, but this will decrease the error probability dramatically – below 1/γ v . First readily reduce the root radius approximation problem to the decision problem of -test. Namely, narrow Algorithm 16 to an -test for a ﬁxed in the range 1 ≤ ≤ m, so that with a probability at least 1 − 1/γ this -test outputs 0 if #(D(0, 1)) < and outputs 1 if #(D(0, 20.5 )) ≥ . Moreover, the output 1 is certiﬁed by virtue of claim (iii) of Observation 12 if = 1; similarly the output 0 is certiﬁed if = m. Next extend the -test by means of applying Algorithm 16 for v iid random variables w in the range 0.2 ≤ w ≤ 0.4. Call this -test Algorithm 16v, . Specify its output g for = 1 as follows: let g = 1 if Algorithm 16v, 1 outputs 1 at least once in its v applications; otherwise let g = 0. Likewise, let g = 0 if Algorithm 16v, m outputs 0 at least once in its v applications; otherwise let g = 1. Recall Theorem 17 and then readily verify the following theorem. Theorem 18. (i) For two integers 1 ≤ ≤ m and v ≥ 1 and a real γ ≥ 1, Algorithm 16v, runs at NR cost 10mγ log2 (4d + 2)v, which dominates the cost of the other ops involved, even in the cases of the Mandelbrot and sparse input polynomials (cf. Observation 10). (ii) The output 1 of Algorithm 16v, 1 and the output 0 of Algorithm 16v, m are certiﬁed. (iii) The output 0 of Algorithm 16v, 1 and the output 1 of Algorithm 16v, m are correct with a probability at least 1 − 1/γ v . The theorem bounds the cost of -tests for = 1 (e/i tests) and = m, but [27] extends it to -tests for any integer in the range 1 < < m.  
   
  Fast Approximation of Polynomial Zeros and Matrix Eigenvalues  
   
  347  
   
  Theorem 19 [27]. For an integer such that 1 < < m ≤ d and real v ≥ 1 and γ > 1, Algorithms 16v, runs at NR cost 10mγ log2 (4d + 2)v, and its output is correct with a probability at least 1 − (4/γ)v/2 . Remark 3. Root-ﬁnding with error detection and correction, see more in [27]. A randomized root-ﬁnder can lose some roots, albeit with a low probability, but we can detect such a loss at the end of root-ﬁnding process, simply by observing that among the m roots in an input disc only m−w tame roots have been closely approximated,10 while w > 0 wild roots remain at large. Then we can recursively apply the same or another root-ﬁnder until we approximate all m roots.11  
   
  6  
   
  Precision of Computing in Our Root-Finders  
   
  High order Newton’s iterations in [14] involve high order derivatives of p(x), approximated in [14] with high order divided diﬀerences, but we only involve  (x) and approximate it with the ﬁrst order divided diﬀerence: NIR(x) = pp(x) NIRδ (x) :=  
   
  p(x) − p(x − δ) p (y) 1 p(x − δ) − = = ≈ NIR(x) for δ ≈ 0. (8) δ δ p(x) p(x)δ p(x)  
   
  Here y lies in the line segment [x − δ, x] by virtue of Taylor-Lagrange’s formula, and so y ≈ x for δ ≈ 0. Next we estimate precision of computing that supports approximation of NIR(x) required in our root-ﬁnders. We only need to consider 1 our e/i tests for θ-isolated discs D(c, ρ) with θ − 1 > 0 of order m . Map (4) reduces such a test for p(x) to the disc D(0, 1) for the polynomial t(x) = p( x−c ρ ), and we only need to certify that the output errors of our e/i tests in Algorithms 13 and 16 are less than 12 . We obtain such a certiﬁcation by performing our algorithms with a precision of O(log(d)) bits for NR cost q of order m log(d) 1 provided that a black box oracle evaluates for us the ratio t(x−δ) t(x) within 8δ for any ﬁxed positive δ = O(1/dO(1) ). Let us specify this certiﬁcation. Our e/i tests amount to computing the sum   (c+ρx) (x) = x tt(x) , for x = ζ g and g = 0, 1, . . . , q−1, and dividing of the q values ρx pp(c+ρx) the sum by q. By slightly abusing notation write NIR(x) := NIR(x) =  
   
  p (x) p(x)  
   
  t (x) t(x) g  
   
  rather than  
   
  and notice that it is suﬃcient to compute ζ NIR(ζ g ) within,  
   
  say, 38 for every g. In that case the sum of the q error bounds is at most 3q 8 and decreases below 21 in division by q if the overall rounding error of those 10  
   
  11  
   
  We call a complex point c a tame root for a ﬁxed error tolerance  if it is covered by an isolated disc D(c, ). Given such a disc D(c, ρ), we can readily compute #(D(c, ρ)) by applying Corollary 6. This recipe detects output errors of any root-ﬁnder at the very end of computations. In the case of subdivision root-ﬁnders we can detect the loss of a root earlier – whenever we notice that at a subdivision step the indices of all suspect squares sum to less than m.  
   
  348  
   
  V. Y. Pan et al.  
   
  summation and division is less than 18 , and we readily ensure such a bound for division by q (cf. [11, Lemma 3.4]). To bound the precision of computing ζ g NIR(ζ g ), ﬁrst recall Eq. (5) and represent xNIR(x) for |x| = 1 within 18 by using a precision of O(log(d)) bits. Theorem 20. Write C := C(c, ρ) and assume that |x| = 1 and the circle C is d θd θ-isolated for θ > 1. Then |xNIR(x)| ≤ 1−1/θ = θ−1 . d d 1 1 | ≤ j=1 |x−x where Proof. Equation (5) implies that |NIR(x)| = | j=1 |x−x j j| |x − xj | ≥ (1 − 1/θ)ρ for |xj | < 1, while |x − xj | ≥ (θ − 1)ρ for |xj | > 1 since i(C) ≥ θ. Combine these bounds, write m := #(D(c, ρ)), and obtain m d + d−m |xNIR(x)| ≤ 1−1/θ θ−1 ≤ 1−1/θ for |x| = 1. Corollary 21. One can represent xNIR(x) within 18 for |x| = 1 by using a d 1 precision of 3 + log2 ( 1−1/θ ) bits, which is in O(log(d)) provided that θ−1 = dO(1) .   
   
    
   
  (x) (y) Instead of xNIR(x) = xtt(x) we actually approximate xtt(x) where |y − x| ≤ δ  and t (y) is equal to the divided diﬀerence of (8). Thus we shall increase the   (x) (y) − xtt(x) | for above error bound 81 by adding the upper bounds 18 on α := | xtt(x)  
   
  . |x| = 1 and on the rounding error β of computing x t(x)−t(x−δ) δt(x) In [27] we readily estimate α in terms of d, θ, and δ – simply by adjusting the ﬁrst ﬁve lines of the proof of [14, Lemma 3.6]). This shows that α < 18 for δ deﬁned with a precision log2 (1/|δ|) of order log(d). Then we estimate β by applying straightforward error analysis and thus arrive at Corollary 22. Suppose that a black box oracle supplies for us approximations of a d-th degree polynomial t(x) with any relative error in 1/dO(1) for |x| ≤ 1 1 = dO(1) . Then we can and let the unit disc be θ-isolated for t(x) and for θ−1 perform e/i test for t(x) on the unit disc by using a precision of O(log(d)) bits.  
   
  7  
   
  Conclusions  
   
  We substantially advance our progress in [25–27]. In particular we estimated and then greatly decreased the Boolean complexity of our current root-ﬁnders, where we allow to operate with the coeﬃcients of p of (1) and depart from the case of linear divisors in [11, Thm. 3.9], implicit in [30]: Theorem 23. Given a positive b, the coeﬃcients of a polynomial t¯(x) := d d ¯ ¯ ¯ i i=0 ti x such that ||t||1 = i=0 |ti | ≤ 1, and q complex points zg , g = 1, . . . , q, in the unit disc D(0, 1), one can evaluate t¯(zg ) for g = 1, . . . , q within an error bound 1/2b by using O(μ((d log(d) + q)(b + q))) Boolean operations for μ(s) = O(s log(s) log(s) log(log(s))) (cf. (2)).  
   
  Fast Approximation of Polynomial Zeros and Matrix Eigenvalues  
   
  349  
   
  Based on this theorem we estimate the overall Boolean cost of all e/i tests applied to w = O(m) discs D(cλ , ρλ ) at a ﬁxed subdivision step, where p(x) is evaluated at q equally spaced points at every circle C(cλ , ρλ ), for ρλ ≥ 1/2b , |cλ | + ρλ ≤ R, λ = 1, . . . , w, and a ﬁxed R. We (i) scale the variable x → Rx – to map all ¯ into the unit disc D(0, 1) and then (ii) normalize discs D(cj , ρj ), j = 1, . . . , m, p(Rx) → v(x) := ψp(Rx) for a scalar ψ > 0 such that ||v(x)||1 = 1, ψ = O(Rd ), and so Theorem 23 supports the Boolean cost bound O(μ((d log(d) + q¯)(b + q¯))) ¯ e/i tests of that for the evaluation of v(x) within error bound 1/2b at all m subdivision step. This is ensured if |v(x)| · |Δ| ≤ 1/2b for an upper bound Δ = 1/dO(1) on the relative error of the evaluation. In our e/i tests we only need to evaluate v(x) at the points x of a θλ -isolated circles C(cλ , ρλ ) where 1/(θλ −1) = O(m), and hence ([30, Eqn. (9.4)]) log(1/|v(x)|) = O(d log(m) + log(1/ρλ )); the bound is sharp up to a constant factor; for m = d and ρλ = 1 it is reached at x = 1 and the polynomial v(x) = ((x − 1 + 1/m)/(2 − 1/m))d . Substitute v(x) = ψp(x) and ψ ≤ Rd , recall that minλ ρλ ≥ 1/2b , and obtain log(1/|p(x)|) = O(d log(m) + bλ λ for bλ = log2 (R/ρλ ) ≤ b. Hence we can bound the Boolean complexity of our e/i tests at any ﬁxed subdivision step by applying Theorem 23 with q and b replaced by q¯ = O(qm) and ¯b = O(d log(m) + b), respectively, and then obtain the Boolean complexity ˜ bounds of a subdivision step consisting of O(m) e/i tests: O((qm+d)(qm+d+b)) O(1) 2 ˜ where O(w) equals w log (w) and q = m or q = m for our deterministic or randomized e/i tests, respectively. Now we bound the overall Boolean cost of all O(b) subdivision steps: Corollary 24. Our root-ﬁnders can be performed at the overall Boolean cost in ˜ O((qm + d)(qm + d + b)b) where q = m2 and q = m in our deterministic and Las Vegas randomized e/i tests, respectively. So far we assumed that the input disc D(0, R) is θ-isolated for θ −1 exceeding a positive constant, but if θ exceeds dh for a reasonably large h, then NIR(x) ≈ f  (x) f  (x) where f (x) is the monic factor of p(x) of degree m sharing with p(x) its m zeros that lie in D(0, R). Hence we can decrease the above upper bound on log(1/|p(x)|) to log(1/|f (x)|) = O(m log(m) + b). Then we can ensure relative precision in 1/dO(1) for computing p(x) if we ensure absolute precision b of order m log(m) + b + log(d). Hence we can bound the Boolean complexity of our e/i tests at any ﬁxed subdivision step by applying Theorem 23 with q and b replaced by q¯ = O(qm) and ¯b = O(m log(m) + b + log(d)), respectively, at the price of performing root-lifting at NR cost in O(log(d)).12 If the disc D(0, R) is isolated for p(x), then the unit disc D(0, 1) is isolated for v(x) = p(Rx), and we can ensure its θ- isolation for θ exceeding dh . Hence we can ensure the latter bounds on log(1/|p(x)| and b if we lift the zeros of the 12  
   
  We can also replace d by m in Theorem 23 if we only seek approximation of NIR(x) for |x| = 1 within 1/dO(1) ; actually we need such approximations within relative error 1/dO(1) , which implies an absolute error bound 1/dO(1) if 1/NIR(x) = 1/dO(1) .  
   
  350  
   
  V. Y. Pan et al.  
   
  polynomial v(x) to their hth powers for h = O(log(d)). We can perform lifting at a dominated NR cost O(log(d)) (e.g., apply root-squaring O(log(log(d))) times); this increases our bound Φ = 1/2b on R/ min ρλ but at most to ΦO(log(d) = 1/2O(b log(d)) . We can now replace the factor qm + d + b with qm + m + b log(d) = ˜ ˜ O(qm + b) in our bound O((qm + d)(qm + d + b)b) of Corollary 24, to obtain Theorem 25. Given the coeﬃcients of a polynomial p(x) of (1) and an isolated disc D = {x : |x − c| ≤ ρ} on the complex plane for a complex c and positive ρ, let this disc contain precisely m zeros of p(x). Then one can approximate all m zeros of p(x) in D within  = 1/2b > 0 at the overall Boolean cost in ˜ O((qm + d)(qm + b)b). Here q = m2 and q = m for our deterministic and Las Vegas randomized root-ﬁnders, respectively. The algorithms in [25] enable further decrease of the cost bound of Theorem 25 ˜ by a factor of b – to O((qm + d)(qm + b)). For m = o(d) this is below the lower bound of [18,21] deduced even for approximation of a single zero of p, although without assumption of any isolation of its covering disc.13 The algorithms of [26] support the latter estimates for q decreased to a constant under Las Vegas randomization in the space of the d zeros of p.  
   
  References 1. Ahlfors, L.: Complex Analysis. McGraw-Hill Series in Mathematics. McGraw-Hill (2000). ISBN: 0-07-000657-1 2. Alman, J., Williams, V.V.: A reﬁned laser method and faster matrix multiplication. In: ACM-SIAM SODA 2021, pp. 522–539. SIAM (2021) 3. Becker, R., Sagraloﬀ, M., Sharma, V., Yap, C.: A near-optimal subdivision algorithm for complex root isolation based on the Pellet test and Newton iteration. J. Symbolic Comput. 86, 51–96 (2018). https://doi.org/10.1016/j.jsc.2017.03.009 4. Pan, V.Y.: Trilinear aggregating with implicit canceling for a new acceleration of matrix multiplication, computers and mathematics (with Applications), 8(1), 23–34 (1982) 5. Henrici, P.: Applied and Computational Complex Analysis. Volume 1: Power Series, Integration, Conformal Mapping, Location of Zeros. Wiley, New York (1974) 6. Imbach, R., Pan, V.Y.: New progress in univariate polynomial root-ﬁnding. In: Proceedings of ACM-SIGSAM ISSAC 2020, pp. 249–256, Kalamata, Greece, 20– 23 July 2020. ACM Press (2020). ISBN: 978-1-4503-7100-1/20/07 7. Imbach, R., Pan, V.Y.: New practical advances in polynomial root clustering. In: Slamanig, D., Tsigaridas, E., Zafeirakopoulos, Z. (eds.) MACIS 2019. LNCS, vol. 11989, pp. 122–137. Springer, Cham (2020). https://doi.org/10.1007/978-3-03043120-4_11 8. Imbach, R., Pan, V.Y.: Accelerated subdivision for clustering roots of polynomials given by evaluation oracles. In: Boulier, F., England, M., Sadykov, T.M., Vorozhtsov, E.V. (eds.) CASC 2022. LNCS, vol. 13366, pp. 143–164. Springer, Cham (2022). https://doi.org/10.1007/978-3-031-14788-3_9 13  
   
  [3] claims reaching optimal estimates of [18, 21] but actually requires separation of the zeros of p, both pairwise and from the origin. Neither of [18, 21, 25, 26] imposes such restrictions.  
   
  Fast Approximation of Polynomial Zeros and Matrix Eigenvalues  
   
  351  
   
  9. Imbach, R., Pan, V.Y., Yap, C.: Implementation of a near-optimal complex root clustering algorithm. In: Davenport, J.H., Kauers, M., Labahn, G., Urban, J. (eds.) ICMS 2018. LNCS, vol. 10931, pp. 235–244. Springer, Cham (2018). https://doi. org/10.1007/978-3-319-96418-8_28 10. Karstadt, E., Schwartz, O.: Matrix multiplication, a little faster. J. ACM 67(1), 1–31 (2020). MR 4061328, S2CID 211041916. https://doi.org/10.1145/3364504 11. Kirrinnis, P.: Polynomial factorization and partial fraction decomposition by simultaneous Newton’s iteration. J. Complex. 14, 378–444 (1998) 12. Knuth, D.E.: The Art of Computer Programming, Volume 2. Addison-Wesley (1981) (2nd edn.) (1997) (3rd edn.) 13. Luan, Q., Pan, V.Y., Kim, W., Zaderman, V.: Faster numerical univariate polynomial root-ﬁnding by means of subdivision iterations. In: Boulier, F., England, M., Sadykov, T.M., Vorozhtsov, E.V. (eds.) CASC 2020. LNCS, vol. 12291, pp. 431–446. Springer, Cham (2020). https://doi.org/10.1007/978-3-030-60026-6_25 14. Louis, A., Vempala, S.S.: Accelerated Newton iteration: roots of black box polynomials and matrix eigenvalues. In: IEEE FOCS 2016, vol. 1, pp. 732–740, January 2016. arXiv:1511.03186. https://doi.org/10.1109/FOCS.2016.83 15. McNamee, J.M.: Numerical Methods for Roots of Polynomials, Part I, XIX+354 p. Elsevier (2007). ISBN: 044452729X, ISBN-13: 9780444527295 16. McNamee, J.M., Pan, V.Y.: Numerical Methods for Roots of Polynomials, Part II, XXI+728 p. Elsevier (2013). ISBN: 9780444527301 17. Merzbach, U.C., Boyer, C.B.: A History of Mathematics, 5th edn. Wiley, New York (2011). https://doi.org/10.1177/027046769201200316 18. Pan, V.Y.: Optimal (up to polylog factors) sequential and parallel algorithms for approximating complex polynomial zeros. In: ACM STOC 1995, pp. 741–750 (1995) 19. Pan, V.Y.: Solving a polynomial equation: some history and recent progress. SIAM Rev. 39(2), 187–220 (1997). https://doi.org/10.1137/S0036144595288554 20. Pan, V.Y.: Approximation of complex polynomial zeros: modiﬁed quadtree (Weyl’s) construction and improved Newton’s iteration. J. Complex. 16(1), 213– 264 (2000). https://doi.org/10.1006/jcom.1999 21. Pan, V.Y.: Univariate polynomials: nearly optimal algorithms for factorization and rootﬁnding. J. Symb. Comput. 33(5), 701–733 (2002). Proceedings Version in ACM ISSAC 2001, pp. 253–267 (2001). https://doi.org/10.1006/jsco.2002.0531 22. Pan, V.Y.: Old and new nearly optimal polynomial root-ﬁnders. In: England, M., Koepf, W., Sadykov, T.M., Seiler, W.M., Vorozhtsov, E.V. (eds.) CASC 2019. LNCS, vol. 11661, pp. 393–411. Springer, Cham (2019). https://doi.org/10.1007/ 978-3-030-26831-2_26 23. Pan, V.Y.: Acceleration of subdivision root-ﬁnding for sparse polynomials. In: Boulier, F., England, M., Sadykov, T.M., Vorozhtsov, E.V. (eds.) CASC 2020. LNCS, vol. 12291, pp. 461–477. Springer, Cham (2020). https://doi.org/10.1007/ 978-3-030-60026-6_27 24. Pan, V.Y.: New progress in polynomial root-ﬁnding. arXiv 1805.12042, 30 May 2018. Accessed 31 Aug 2022 25. Pan, V.Y., Fast subdivision root-ﬁnder for a black box polynomial and matrix eigen-solvers accelerated with compression. Preprint (2023) 26. Pan, V.Y.: Fast subdivision root-ﬁnders for a black box polynomial and matrix eigen-solvers with novel exclusion tests. Preprint (2023) 27. Pan, V.Y., Go, S., Luan, Q., Zhao, L.: Fast approximation of polynomial zeros and matrix eigenvalues. arXiv 2301.11268 (2022). Accessed 2023 28. Reinke, B.: Diverging orbits for the Ehrlich-Aberth and the Weierstrass root ﬁnders. arXiv 2011.01660, 20 November 2020  
   
  352  
   
  V. Y. Pan et al.  
   
  29. Renegar, J.: On the worst-case arithmetic complexity of approximating zeros of polynomials. J. Complex. 3(2), 90–113 (1987) 30. Schönhage, A.: The fundamental theorem of algebra in terms of computational complexity. Math. Dept., University of Tübingen, Tübingen, Germany (1982) 31. Storjohann, A.: The shifted number system for fast linear algebra on integer matrices. J. Complex. 21(4), 609–650 (2005) 32. Strassen, V.: Some results in algebraic complexity theory. In: James, R.D. (ed.) Proceedings of the International Congress of Mathematicians, Vancouver, vol. 1, pp. 497–501. Canadian Mathematical Society (1974) 33. Weyl, H.: Randbemerkungen zu Hauptproblemen der Mathematik. II. Fundamentalsatz der Algebra und Grundlagen der Mathematik. Mathematische Zeitschrift 20, 131–150 (1924). https://doi.org/10.1007/BF01188076  
   
  On the Parameterized Complexity of the Structure of Lineal Topologies (Depth-First Spanning Trees) of Finite Graphs: The Number of Leaves Emmanuel Sam1(B) , Michael Fellows1,2 , Frances Rosamond1,2 , and Petr A. Golovach1 1  
   
  Department of Informatics, University of Bergen, Bergen, Norway {emmanuel.sam,michael.fellows,frances.rosamond,petr.golovach}@uib.no 2 Western Sydney University, Locked Bag 1797, Penrith, NSW 2751, Australia  
   
  Abstract. A lineal topology T = (G, r, T ) of a graph G is an r-rooted depth-ﬁrst spanning (DFS) tree T of G. Equivalently, this is a spanning tree of G such that every edge uv of G is either an edge of T or is between a vertex u and an ancestor v on the unique path in T from u to r. We consider the parameterized complexity of ﬁnding a lineal topology that satisﬁes upper or lower bounds on the number of leaves of T , parameterized by the bound. This immediately yields four natural parameterized problems: (i) ≤ k leaves, (ii) ≥ k leaves, (iii) ≤ n − k leaves, and (iv) ≥ n − k leaves, where n = |G|. We show that all four problems are NP-hard, considered classically. We show that (i) is paraNP-hard, (ii) is hard for W[1], (iii) is FPT, and (iv) is FPT. Our work is motivated by possible applications in graph drawing and visualization. Keywords: DFS tree  
   
  1  
   
  · Spanning tree · Parameterized complexity  
   
  Introduction  
   
  For every connected undirected graph G = (V, E) with vertex set V (G) and edge set E(G), there exists a rooted spanning tree T having the property that for every edge xy ∈ E(G) that is not an edge of T , either x is a descendant of y with respect to T , or x is an ancestor of y. Such a tree is called a depth-ﬁrst spanning tree (or DFS-tree for short), as one may be computed by depth-ﬁrst search (DFS), and the edges of G that are not part of T are referred to as back edges [21]. It has also been called lineal spanning tree [29], trémaux tree [10], and normal spanning tree, particularly in the case of inﬁnite graphs [12]. The importance of the properties of such trees in the design of eﬃcient algorithms is evident in the great variety of algorithms that employ DFS to solve graph-theoretic problems, including ﬁnding connected and biconnected components of undirected graphs [21], bipartite matching [23], planarity testing [22], Supported by Research Council of Norway (NFR, no. 274526 and 314528). c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  M. Mavronicolas (Ed.): CIAC 2023, LNCS 13898, pp. 353–367, 2023. https://doi.org/10.1007/978-3-031-30448-4_25  
   
  354  
   
  E. Sam et al.  
   
  and checking the connectivity of a graph [15]. In the ﬁeld of parameterized complexity [7,14], DFS has been instrumental in obtaining ﬁxed-parameter tractable (FPT ) results by way of treedepth [25] and bounded width tree decompositions of the given graph [1,16]. In the work reported herein, we refer to the triple (G, r, T ), that is, a graph G together with a choice of root vertex r and a DFS tree T , as a lineal topology T , or LT for short. This notion of LT corresponds to a point-set topology on the set of edges E(G) (equipped with a rooted DFS tree T ), where the open sets are the sets of edges of the subgraphs induced by rooted subtrees with the same root r as T . The lineal topologies of G may diﬀer in terms of the properties of T , such as height and number of leaves. Figure 1 shows one way of representing an LT as a topological graph or drawing in the plane. Given a graph G and a DFS tree (T, r), an embedding of G in the plane so that every pair of edges that cross is a pair of back edges having at most one crossing point is an instance of an LT of G called T-embedding [19]. By deﬁnition, there exists a T-embedding of the graph G with no crossings points among the back edges if and only if G is a planar graph. This is the basis of Hopcroft and Tarjan’s linear time planarity testing algorithm [22] and other algorithms for planarity testing, embedding, and Kuratowski subgraph extraction based on de Fraysseix and Rosenstiehl’s Left-Right characterization of planarity [8,9].  
   
  Fig. 1. A given graph G, and two examples of a lineal topology of G, denoted by T1 and T2 . They diﬀer in the height and number of leaves of the DFS tree T . The leaves are shown as squares. The tree edges are shown in heavy lines, while the back edges are shown in thin curved lines.  
   
  Considering the above-mentioned applications of LT and the interesting outcomes enabled by the properties of DFS trees, it will be worthwhile to investigate how their structural properties are related to other properties of graphs, including crossing number [20] and bandwidth [3], useful in algorithms for VLSI design and graph drawing. Then, a complementary study is the complexity of ﬁnding those kinds of lineal topologies. We take the ﬁrst step in this direction of research by investigating the complexity of two main classical decision problems, namely k-Minimum Leafy LT (k-Min-LLT) and k-Maximum Leafy LT (k-MaxLLT), which correspond to ﬁnding an LT with minimum number of leaves, and an LT with maximum number of leaves respectively.  
   
  On the PC of the Structure of LTs of Finite Graphs: The Number of Leaves  
   
  355  
   
  Given an undirected graph G, the k-Min-LLT and k-Max-LLT problems ask whether G has an LT deﬁned by a DFS tree with at most k and at least k leaves, respectively. One observation that is easy to make is that a Hamiltonian Path (HP) rooted at one of the end vertices of the path deﬁnes LT with one leaf. Thus, k-Min-LLT is clearly NP-complete because it is a generalization of the HP problem. To the best of our knowledge, the complexity of k-Max-LLT has not been previously considered. While there are several results regarding the complexity of Maximum Leaf Spanning Tree and Minimum Leaf Spanning Tree in general [2,26–28], for DFS trees, the only available complexity results are due to Fellows et al. [17]. For a given graph G, they considered the diﬃculty of ﬁnding a DFS tree that satisﬁes upper or lower bounds on two parameters, namely min(G, T ) and max(G, T ), which stand for the minimum length of a root to leaf path of the DFS tree T , and the maximum length of such a path respectively. They showed that, for a given graph G and an integer k ≥ 0, the following problems are NP-complete: min(G, T ) ≤ k, min(G, T ) ≥ k, max(G, T ) ≤ k, and max(G, T ) ≥ k. It was also shown that, unless P = N P , none of these problems admits a polynomial-time absolute approximation algorithm. Consequently, an appropriate framework within which to study these sorts of problems is parameterized complexity (PC) [14], according to which problems can be analyzed in terms of other parameters apart from the input size. This leads to algorithms for which we pay an exponential cost in the parameter, thereby solving the problem eﬃciently on instances with small values of the parameter. For the basics of PC necessary to understand this paper, see Sect. 2. We consider a parameterization of k-Min-LLT and k-Max-LLT, where the parameter k is the size of the solution (number of leaves), and their so-called “dual” parameterization, namely Dual Min-LLT (Does G have an LT with at most n−k leaves? ) and Dual Max-LLT (Does G have an LT with at least n−k leaves? ), where the parameter k is the number of internal vertices. These four parameterized problems are formally deﬁned in Sect. 2. We show that while each parameterized problem and its parametric dual are trivially the same problem and NP-hard when considered classically, when analyzed in terms of PC, the tractability outcomes diﬀer, with one being FPT and the other W[1]-hard. 1.1  
   
  Our Results  
   
  Our ﬁrst result is the hardness of k-Max-LLT. By a reduction from the Multicolored Independent Set (MIS) problem, we show that k-Max-LLT is hard for W[1] parameterized by k. Furthermore, we show that all four problems, considered classically, are NP-hard, and we show trivially that k-Min-LLT parameterized k is para-NP-hard. Our main contribution is in showing the existence of an FPT algorithm for Dual Min-LLT and Dual Max-LLT, parameterized by k, via an application of Courcelle’s theorem [4,6], which relates the expressibility of a graph property using monadic second-order logic to its tractability in linear time on graphs with bounded treewidth (or pathwidth). For a formal deﬁnition of this logical language, see Sect. 2.4.  
   
  356  
   
  2  
   
  E. Sam et al.  
   
  Preliminaries  
   
  Unless otherwise speciﬁed, a graph G with vertex set V (G) and edge set E(G) is simple, ﬁnite, undirected, and connected. For a graph G, n and m denotes the number of vertices |V (G)| and the number of edges |E(G)| of G, respectively. We use uv instead of {u, v} to denote an edge in E(G). For any vertex v ∈ V (G), the set NG (v) denotes the open neighborhood of v, that is, the set of neighbors of v in G, and NG [v] = NG (v) ∪ {v} denotes its closed neighborhood in G. We drop the G in the subscript if the graph is clear from the context. Given any two graphs G1 = (V1 , E1 ) and G2 = (V2 , E2 ), if V1 ⊆ V2 and E1 ⊆ E2 then G1 is a subgraph of G2 , denoted by G1 ⊆ G2 . If G1 contains all the edges uv ∈ E2 with u, v ∈ V1 , then we say G1 is an induced subgraph of G2 , or V1 induces G1 in G2 , denoted by G[V1 ]. If there exists are bijective mapping f : V1 → V2 that preserves adjacency, that is, uv ∈ E1 if and only of f (u)f (v) ∈ E2 , then G1 is isomorphic to G2 and f is called an isomorphism. If G1 is such that it contains every vertex of G2 , i.e., if V1 = V2 then G1 is a spanning subgraph of G2 . Given a set of vertices X ⊆ V , we express the induced subgraph G[V (G)\X] as G − X. If X = {x}, we write V (G)\x instead of V (G)\{x} and G − x instead of G − {x}. For any pair of vertices uv ∈ V (G) in a given graph G, we denote any path from u to v by P (u, v), and any path of length  by P  . A vertex u is said to be reachable from a vertex v if there is a path P (u, v). Given a graph G, a set of vertices S ⊆ V (G) is a connected vertex cover (CVC) of G if the subgraph G[S] induced by S is connected and S is a vertex cover of G, i.e., for every edge uv ∈ E(G), either u ∈ S or v ∈ S. 2.1  
   
  Lineal Topology  
   
  Here, we focus on the deﬁnitions of the substructures of lineal topologies that are relevant to our proofs. We refer the reader to [11] for details about basic tree terminologies such as root, parent, child, ancestor, etc. In all cases, a DFS tree is simply denoted by T instead of (T, r) if the root is clear from the context. For any given lineal topology T = (G, r, T ), we denote the height of T , that is, the maximum number of edges in any leaf-to-root path of T , by h. A leaf of T is a vertex that has no descendants but is adjacent to one or more ancestors with respect to T (see Fig. 1). We denote by Y and X the set of leaves and internal vertices of T , respectively. Given a set of vertices S ⊆ V (G), such that the subgraph G[S] induced by S is connected, we denote the DFS tree of G[S] rooted at x ∈ S by (TS , x). The set E(T ) and E(B) denote the tree edges and back edges of T respectively. By deﬁnition, the set Y is an independent set; that is, no pair of vertices uv ∈ Y are adjacent. This is also true for the set of vertices Ui ⊆ V (T ) at each level i of T . Given a vertex v, the set Pv denotes the vertices on the uniquely determined path P (v, r) in T .  
   
  On the PC of the Structure of LTs of Finite Graphs: The Number of Leaves  
   
  2.2  
   
  357  
   
  Parameterized Complexity  
   
  Now we review some important concepts of parameterized complexity (PC) relevant to the work reported herein. For more details about PC, we refer the reader to [7,14]. Let Σ be a ﬁxed, ﬁnite alphabet. A parameterized problem is a language P ⊆ Σ ∗ × N. For an instance (x, k) ∈ Σ ∗ × N, k ∈ N is called the parameter. A parameterized problem P is classiﬁed as ﬁxed-parameter tractable (FPT) if there exists an algorithm that answers the question “(x, k) ∈ P ?” in time f (k) · poly(|x|), where f is a computable function f : N → N. Let P and P  be two parameterized problems. A parameterized reduction from P to P  is an algorithm that, given an instance (x, k) of P , produces an equivalent instance (x , k  ) of P  such that the following conditions hold: 1. (x, k) is a YES-instance of P if and only if (x , k  ) is a YES-instance of P  . 2. There exist a computable function f : N → N such that k  ≤ f (k). 3. The reduction can be completed in time f (k) · poly(|x|) for some computable function f . The W-hierarchy [13] captures the level of the intractability of hard parameterized problems. For the purpose of the discussions in this paper, it is enough to note that a problem that is hard for W [1] cannot be solved in FPT running time, unless F P T = W [1]. A parameterized problem that is already NP-hard for some single ﬁxed parameter value k (such as k = 3 for Graph k-Coloring) is said to be para-NP-hard. 2.3  
   
  Problem Definitions  
   
  We formally deﬁne the parameterized problems studied in this work as follows: k-Min-LLT Input: A connected undirected graph G = (V, E). Parameter: k Question: Does G admit an LT with ≤ k leaves? k-Max-LLT Input: A connected undirected graph G = (V, E) Parameter: k Question: Does G have an LT with ≥ k leaves? Dual Min-LLT Input: A connected undirected graph G = (V, E) and positive integer k Parameter: k Question: Does G admit an LT with ≤ n − k leaves? Dual Max-LLT Input: A connected undirected graph G = (V, E) and positive integer k Parameter: k Question: Does G have an LT with ≥ n − k leaves?  
   
  Below, we present the deﬁnitions of the concepts used in Sect. 3, to show that Dual Min-LLT and Dual Max-LLT are FPT with respect to k.  
   
  358  
   
  E. Sam et al.  
   
  Definition 1 (Treewidth, Pathwidth). A tree decomposition of a given graph G is a pair (TD , B) where TD is a tree and B is a family of subsets {Bi ⊆ V (G) : i ∈ V (TD )}, called bags, witheach node in TD associated with a bag, satisfying the following properties: (1) i∈V (TD ) Bi = V (G), (2) ∀uv∈E(G) , ∃i ∈ V (TD ) : i u ∈ Bi , and v ∈ Bi , and (3) ∀v∈V (G) , the set TD = {i ∈ V (TD ) : v ∈ Bi } gives rise to a connected subtree of TD . The width of (TD , B) is max{|Bi | : i ∈ V (TD )} − 1 and the treewidth of a graph, denoted tw(G), is the minimum width over all tree decompositions of G. If TD is a path, then (TD , B) is called the path decomposition of G and the minimum width over all path decompositions of G is its pathwidth, often denoted by pw(G). For any graph G, it is a fact that tw(G) ≤ pw(G) [25]. 2.4  
   
  Logic of Graphs  
   
  We now introduce the basic deﬁnitions and notations of the logic of graphs and MSO, the logical language with which we specify the properties associated with Dual Min-LLT and Dual Max-LLT in Sect. 3. For a thorough discussion of these topics, we refer the reader to [6,24]. Recall that Second-Order Logic (SO) is an extension of First-Order Logic (FO) that allows quantiﬁcation over predicates or relations of arbitrary arity. Monadic Second-Order Logic (MSO) are SO formulas in which only quantiﬁcation over unary relations (i.e., subsets of the domain) is allowed. To express graph properties using MSO, a graph G = (V, E) can be represented either as a logical (or relational) structure G whose domain is the vertex set V , with a binary relation adj on V representing the edges, or as a logical structure G whose domain is formed by the disjoint union of V and E, with a binary relation inc representing the incidence between the vertices and edges of G. There are two main variants of MSO: MSO1 and MSO2 , corresponding to G and G respectively. Definition 2 (MSO1 language). The logical expressions or formulas of this language are built from the following elements: 1. Small variables u, v, x1 , . . . , xk for vertices 2. Big variables X, Y, U1 , . . . , Uk for sets of vertices. 3. Predicates adj(u, v) and u ∈ V for adjacency and membership respectively, and “=” equality testing. 4. The logical connectives ∨, ∧, ¬, ⇒ 5. ∀x, ∃x for quantiﬁcation over vertices and ∀U , ∃U for quantiﬁcation over vertex sets. The MSO2 language extends MSO1 with variables denoting edges and subset of edges, and the predicate inc(x, e) for incidence, and allows quantiﬁcation over edges and edge sets. For clarity, we use ∀x , ∃x instead of ∀x, ∃x, and ∀U , ∃U instead of ∃U , and ∀U . Given a graph G belonging to a class of graphs C and a formula Φ  
   
  On the PC of the Structure of LTs of Finite Graphs: The Number of Leaves  
   
  359  
   
  expressing a graph property in MSO, we denote the statement “Φ is true of the vertices and the relation of G” by G |= Φ (read as “G models Φ” or “Φ holds on G”). For a logical language L ∈ {M SO1 , M SO2 }, we say that a graph property is L-expressible if there exists a formula (sentence) of L for expressing it. The theorem below states the consequence of expressing a graph property by an MSO2 formula. Lemma 1 (Courcelle’s theorem [4,6]). Assume that φ is a ﬁxed MSO2 formula of length  expressing a graph property. Then for any graph G belonging to a graph class C with treewidth bounded by a ﬁxed positive integer k, there is an algorithm that takes G and its  tree decomposition as input and decides whether G |= φ in time O f (, k) · n , for some computable function f . By a theorem similar to Lemma 1, every graph property that is MSO1 -expressible can be decided in linear time on graphs of bounded clique-width, a graph complexity measure that is similar to treewidth [5]. It is worth noting that Lemma 1 also holds for MSO1 formulas because every graph property expressible by an MSO1 formula is also expressible by an MSO2 formula; but the converse is not true. For example, the existence of a Hamiltonian path can only be expressed in MSO2 [6]. Therefore, it is stronger to claim that a given property is MSO1 expressible. In Sect. 3.2, we show that the property of having an LT with at least n − k leaves or at most n − k leaves is MSO1 -expressible.  
   
  3  
   
  Complexity Analysis  
   
  In this section, we consider the four natural parameterized problems deﬁned above. We ﬁrst show that k-Max-LLT is hard for W[1] parameterized by k. The reduction in the proof is polynomial and thus the problem is NP-hard. Besides, we show trivially that k–Min-LLT is para-NP-hard with respect to k. This is followed by proofs of hardness for Dual Min-LLT and Dual Max-LLT, considered classically. Moreover, we show that these two problems are FPT with respect to k. To this end, we construct MSO1 formulas φk and ϕk to express the property of having an LT with at most n − k leaves and that of having an LT with at least n − k leaves. Next, we make use of the following facts on the height of a lineal topology to show the existence of an FPT algorithm for the two problems. Given a graph G and an integer k ≥ 0, we show, for Dual Max-LLT, that if the height of the DFS tree T resulting from any DFS of G is more than 2k+1 − 2, then T witnesses that the answer is NO, otherwise, G has a path decomposition of width at most 2k+1 − 1. For Dual Min-LLT, we trivially show that the answer is YES if the number of internal vertices of T is at least k, otherwise, G has a path decomposition of width at most k. 3.1  
   
  Hardness Results  
   
  Theorem 1. k-Max-LLT is W[1]-hard parameterized by k and NP-complete when considered classically.  
   
  360  
   
  E. Sam et al.  
   
  Proof. We reduce from the parameterized Multicolored Independent Set (MIS) problem parameterized by the number of colors. In the MIS problem, we are given a graph G = (V, E) and a coloring of V with k colors, and the task is to determine whether G has a k-colored independent set, that is, a k-sized independent set containing one vertex from each color class. We trivially assume that each color class induces a clique for our argumentation. This problem is W[1]-hard with respect to k [7, chapter 13], which implies that it is unlikely that it can be solved in time f (k) · poly(n) for any computable function f . Given a positive integer k, let G be an instance of the MIS problem in which {V1 , . . . , Vk } is a partition of the vertex set V (G) such that, for each i ∈ [1, k], Vi induces a clique and corresponds to a color class. Now we construct an instance (G , k) of the k-Max-LLT problem from G by introducing a set of k universal vertices U = {u1 , u2 , . . . , uk }, i.e., every ui ∈ U is adjacent to every vertex in G and in U \ui . The completed G = (V  , E  ) has V  = V ∪ U , and E  = E(G) ∪ {ui v | ui ∈ U, v ∈ V (G )\ui } (see Fig. 2). The main idea of this construction, as will be argued below, is to enable a depth-ﬁrst traversal of G that guarantees an LT with at least k leaves corresponding to a k-sized independent set in G, if it exists. It is not hard to see that we can construct (G , k) from (G, k) in polynomial time. Lemmas 2 and 3 below show that G admits an LT with at least k leaves if and only if G has a k-colored independent set.  
   
  Fig. 2. An example of a reduction from an instance G of MIS, with k-colored independent set X = {c, e, j}, to an instance G of Max-LLT and a DFS of G that yields a DFS tree T  with {c, e, j} as its leaves.  
   
  Lemma 2. If a k-colored independent set exists in G, then G admits an LT with at least k leaves. Proof. Suppose that X = {x1 , ..., xk } is a k-colored independent set in G. Since x1 ∈ V1 , . . . , xk ∈ Vk with each color class Vi inducing a clique, any depth-ﬁrst traversal of G that excludes the vertices in X until all the vertices in V (G )\X  
   
  On the PC of the Structure of LTs of Finite Graphs: The Number of Leaves  
   
  361  
   
  have been visited yields an LT with the vertices in X as its leaves. One way to achieve this is to start from the vertex u1 ∈ U and visit every vertex in the corresponding color class V1 except x1 . Next, choose u2 ∈ U and explore every vertex in V2 except x2 . Repeat this process sequentially for each ui ∈ U and its corresponding color class Vi until the last vertex uk ∈ U is reached. Now choose the vertex xk after exploring every vertex in the set Vk \{xk }. See Fig. 2 for an illustration of this process. At this point, every edge incident to xk leads to a vertex already reached by the DFS because X is an independent set. Thus, xk becomes a leaf in the resulting DFS tree T  of G . If any vertex xi ∈ X is adjacent to an already visited vertex v ∈ Vk , we backtrack and choose xi from v. Otherwise, we backtrack to uk ∈ U , as every vertex in X is reachable from this vertex by construction. Each of the remaining vertices {x1 , . . . , xk−1 } reached   by DFS becomes a leaf in T  because of the same reason as for xk . Lemma 3. If an LT with at least k leaves in G exists, then there is a k-colored independent set in G. Proof. If k = 1 then G is obviously a YES-instance. Suppose that k ≥ 2 and G admits an LT in which X = {x1 , x2 , ..., xk } are the leaves. Observe that X is an independent set. Then, based on the following claims, we conclude that X induces a k-colored independent set in G. Claim 3.1. Each color class Vi in G can contain at most one vertex from X. Proof. The set of leaves X is an independent set and, by construction, each color class Vi in G is a clique. Therefore, there cannot be any LT of G with two or more leaves from the same color class.  Claim 3.2. None of the vertices in X is from the vertex set U = {u1 , . . . , uk }. Proof. For i ∈ [1, k], if ui is a leaf of T  , the remaining vertices in V (G )\ui must necessarily be internal vertices of T  by construction. Since X contains at least 2 vertices, it follows that no vertex in U can be in X.  Combining Claims 3.1 and 3.2, we conclude that X is a k-colored independent set in G.   Theorem 2. k-Max-LLT is NP-complete. Proof. k-Max-LLT is clearly in NP. The NP-hardness of the problem follows from the proof of Theorem 1, because Multicolored Independent Set is NP-complete [7,20] and the reduction from Multicolored Independent Set to k-Max-LLT is a polynomial-time reduction. Theorem 3. k-Min-LLT parameterized by k is para-NP-hard. Proof. This follows, trivially, from the fact that k-Min-LLT is NP-hard already for k = 1, because for this case, k-Min-LLT is equivelent to Hamiltonian Path which is well-known to be NP-complete [20].  
   
  362  
   
  E. Sam et al.  
   
  Theorem 4. Dual Min-LLT and Dual Max-LLT, considered classically, are NP-hard. Proof. Dual Min-LLT can be restricted to the Hamiltonian Path problem by allowing only instances in which k = n−1. Similarly, (G, n−k) is a YES-instance of k-Max-LLT iﬀ (G, k) is a YES-instance of Dual Max-LLT.   3.2  
   
  MSO Formulations  
   
  Recall that a DFS tree T is a tree formed by a set of edges E(T ) with a choice of a root vertex r, such that every edge not in T connects a pair of vertices that are related to each other as an ancestor and descendant in T . For any DFS tree T of a given graph G, the set of vertices Ui at each level i of T is an independent set of G. Thus, T corresponds to a partition of the vertex set V (G) into a sequence of independent sets (U0 , U1 , ..., Uh ) with h ∈ N, where the root r is the only member of U0 and Uh contains the vertex witnessing the height h of T (see Fig. 3a). Based on this observation, we provide the following deﬁnition of a DFS tree with bounded height, which allows us to express the properties “G has an LT with at least n − k leaves” and “G has an LT with at most n − k leaves” in MSO1 .  
   
  Fig. 3. (a) Color classes denoting an LT partition (U0 , U1 , ..., U6 ) of a graph G with n = 13, and a representation of the associated LT of G with height h = 6 and number of internal vertices |X| = 8. (b) A CVC X  of a graph G, and a DFS tree T of G formed by a DFS tree (TX  , a) for G[X  ] and the independent set V (G − X  ). The internal vertices X of T consist of {a, b, c, d, e, f, i, j}. Thus |X| ≤ |X  |. (c) A CVC X  of a graph G such that G[X  ] does not admit a DFS tree TX  which extends to a DFS tree T of G.  
   
  Definition 3. Let G be a graph and h a positive integer. A tree-partition of G of height h is a sequence (U0 , . . . , Uh ) with U0 , . . . , Uh ⊆ V (G) such that: 1. (U0 , U1 , . . . , Uh ) is a partition of V (G). 2. U0 contains only one element r. 3. Every vertex u ∈ Ui has a unique neighbor v ∈ Ui−1 for all i ∈ [1, h]. The tree associated with the tree-partition (U0 , . . . , Uh ) is the rooted spanning tree T of G with root r and edge set E(T ) = {uv : uv ∈ E(G), u ∈ Ui , v ∈ Ui−1 for all i ∈ [1, h]}. We say that the tree-partition (U0 , . . . , Uh ) is an LT-partition of G if:  
   
  On the PC of the Structure of LTs of Finite Graphs: The Number of Leaves  
   
  363  
   
  4. For every edge uv of G, u is an ancestor of v in T or v is an ancestor of u in T . Lemma 4. For every h ∈ N , a graph G = (V, E) has an LT with height h if and only if G admits an LT-partition (U0 , U1 , ..., Uh ). Proof. Let T be the spanning tree of G associated with (U0 , U1 , ..., Uh ). Property 4 of Deﬁnition 3 ensure that every uv ∈ E\E(T ) is a back edge, and, thus, for all i ∈ [0, h], Ui is an independent set. This gives us an LT with height h. Conversely, suppose we have an LT of G deﬁned by a DFS tree T with height h. Then it is easy to see that the root and the vertices at each level of T constitute   an LT-partition (U0 , U1 , ..., Uh ). Dual Max-LLT. Let G be a graph and k ∈ N. If k = 1 then G is a YESinstance of Dual Max-LLT if and only if G is a star. Thus, in what follows, we assume that k ≥ 2 and |G| ≥ 3. Suppose that G admits an LT with at least n − k leaves, and consider a DFS tree (T, r) witnessing that G is a YES-instance. We can readily observe that the internal vertices X of (T, r) is a CVC of G, and the subtree (TX , r) with height h ≤ |X| is a DFS tree of the graph G[X] induced by X. This is also true for any subtree (TX  , r), such that X  ⊇ X and |X  | ≤ k (see Fig. 3b). However, given a graph G = (V, E) and a CVC X of G, G[X] may not have a DFS tree TX that can be extended to a DFS tree T of G by adding the vertices in V (G − X) to TX as leaves. An example of such a CVC of a given graph is shown in Fig. 3c. Using these intuitive ideas, we characterize the graphs that admit an LT with at least n − k leaves by Lemma 5. See the full version of this paper for the proof of this lemma. Lemma 5. A graph G has an LT with at least n − k leaves if and only if it has a set of vertices X  of size at most k satisfying the following properties: 1. X  is a connected vertex cover of G. 2. G[X  ] admits an LT partition (U0 , ..., Uh ) with h ≤ |X  | such that, for any vertex y ∈ V (G)\X  , if y is adjacent to a pair of vertices u, v ∈ X  , then either u is the ancestor of v or v is the ancestor of u in the LT formed by (U0 , ..., Uh ). Theorem 5. For all k ∈ N , there exists an MSO1 formula φk such that for every graph G, it holds that G |= φk iﬀ G is a YES-instance of Dual MaxLLT. To prove this, we construct the formula φk as a conjunction of formulas expressing the properties in Deﬁnition 3 and Lemma 5; see the full version of this paper. Dual Min-LLT. For k = 1, every graph G is a YES-instance of Dual MinLLT. Thus, henceforth, we assume that k ≥ 2 and |G| ≥ 3. Let G be a given graph that admits an r-rooted LT with at most n − k leaves (i.e., at least k internal vertices), and consider a DFS tree T of G witnessing this fact. Then any subtree (TX  , r) of T , where X  = {x1 , . . . , xk } is a set of k internal vertices  
   
  364  
   
  E. Sam et al.  
   
  and r ∈ X  is the same as the root of T , is a DFS tree for the subgraph G[X  ] induced by X  ; see Fig. 4 for an example. Observe that, every leaf of (TX  , r) is adjacent to a vertex in the set W = V (T )\X  , and each of the subtrees that extend TX  to form T is a DFS tree for some maximal connected component of G − X .  
   
  Fig. 4. (a) A graph G with a connected subset of vertices X  of size 5, and (b) a DFS tree (TX  , a) for G[X  ] that extends to an LT of G with internal vertices X  ∪ {f, i, j}. W consists of three maximal connected subgraphs of G shown in diﬀerent colors.  
   
  As a result, we transform the problem of determining whether G admits an LT with at most n − k leaves to that of deciding whether there exists a subset of k vertices X  , such that, the subgraph G[X  ] admits an r-rooted DFS tree TX  isomorphic to a subtree (T  , r) of an LT of G witnessing that G is a YES-instance. To this end, we introduce the following deﬁnition. Definition 4. Let G be a graph and X  = {x1 , . . . , xk }, a set of k vertices that induces a connected subgraph of G. We say that a tree-partition (U0 , . . . , Uh ) of G[X  ] of height h ≤ k is a partial LT-partition of G or extends to an LT-partition of G if it satisﬁes the following property: for every W  ⊆ V (G) such that G[W  ] is a maximal connected subgraph of G − X  , there exists x ∈ X  such that any vertex in x ∈ X  with at least one neighbor in W  is an ancestor of x . In Fig. 4, it is easy to see that the subgraph induced by {k, j, i, l} does not have a tree-partition that forms a partial LT-partition of G. For a partial LT-partition of a given subgraph G[X  ] of size k to yield an LT of G with at most n − k leaves, it is necessary that every leaf of the partial LT is adjacent to at least one vertex in V (G)\X  . Based on these intuitive ideas, we characterize the YES-instances of Dual Min-LLT by Lemma 6; see the full version of this paper for the proof. Lemma 6. For every k ∈ N , a graph G = (V, E) has an LT with the number of leaves ≤ n − k if and only if there exists a set of vertices X  of size at least k satisfying the following property: G[X  ] admits a partial LT-partition (U0 , . . . , Uh ) of height h ≤ k in which every leaf is adjacent to at least one vertex in W = V (G)\X  .  
   
  On the PC of the Structure of LTs of Finite Graphs: The Number of Leaves  
   
  365  
   
  Now, we use Lemma 6 to obtain Theorem 6; see the full version of this paper for the proof. Theorem 6. For all k ∈ N , there exists an MSO1 formula ψk such that for every graph G, it holds that G |= ψk iﬀ G is a YES-instance of Dual MINLLT. 3.3  
   
  FPT Algorithms for D UAL M IN -LLT and D UAL M AX -LLT  
   
  In this section, we show the existence of an FPT algorithm for Dual Min-LLT and Dual Max-LLT using the MSO formulations above, and Lemmas 7 and 8. For the proofs of these lemmas, see the full version of this paper. Lemma 7. Given a graph G and a positive integer t, if G admits an LT with height at most t, then G has a path decomposition of width at most t that can be computed in linear time. Lemma 8. Given a graph G and a positive integer k, if G admits an LT of height at most k, then the length of any path in G is at most 2k+1 − 2. Theorem 7. Dual Max-LLT parameterized by k ∈ N is in FPT. Proof. Let G be a graph and k a positive integer. One observation that is easy to make is that if G is a YES-instance of Dual Max-LLT, then G admits an LT with height at most k. Thus, Dual Max-LLT can be solved as follows: (1) Construct a DFS tree T by performing a DFS of G. If the height h of T is more than 2k+1 − 2, then we know, by Lemma 8 that G does not admit an LT with h ≤ k. Therefore, return NO and stop. (2) Otherwise, use Lemma 7 to read oﬀ a path decomposition of G of width at most 2k+1 − 1 from T , one bag per leaf. (3) Applying Courcelle’s theorem with Theorem 5 and this path decomposition, it follows that checking whether G is a YES-instance is FPT in k.   Theorem 8. Dual Min-LLT parameterized by k ∈ N is in FPT. Proof. The proof follows steps analogous to that of Theorem 7. Construct any DFS tree T . If T has at most n−k leaves, return YES and stop. Otherwise, we use Lemma 7, to obtain a path decomposition of G of width at most k from T . With this, Theorem 6, and Courcelle’s theorem implies that we can derive an FPT algorithm that runs in time linear in n to check whether G is a YES-instance.    
   
  4  
   
  Conclusion  
   
  In this paper, we have shown hardness results for four natural parameterized problems that have to do with ﬁnding an LT (or DFS tree) with a restricted number of leaves. Our theorem shows that k-Max-LLT is hard for W[1]. This raises the natural question of where it belongs in the W-hierarchy with respect to membership. Is it in W[1] and thus W[1]-complete? Is it in W[P]? It seems to be  
   
  366  
   
  E. Sam et al.  
   
  AND-compositional, like the Bandwidth problem, as discussed in [18] and we conjecture that k-Max-LLT cannot be in W[P] for reasons similar to the case of Bandwidth. We have also shown that Dual Min-LLT and Dual MaxLLT are FPT parameterized by k. Instead of relying on Courcelle’s theorem to show the existence of an FPT algorithm for these problems, we believe it should be possible to construct an algorithm that solves each problem explicitly via dynamic programming over the path decomposition returned by our algorithm. An obvious question is whether both problems admit a polynomial kernel. On the complexity of ﬁnding an LT with restricted height h, the only known results are the NP-hardness results due to Fellows et al. [17] (see Sect. 1). A consequence of our Theorem 7 is that the problem h ≤ k is FPT with respect to k. The natural parameterized problem h >= n − k is para-NP-complete since it is equivalent to Hamiltonian Path when k=1. We plan to investigate the PC of: (i) h ≤ n − k, and (ii) h ≥ k, which we believe is FPT parameterized by k. Acknowledgement. We acknowledge support from the Research Council of Norway (NFR, no. 274526 and 314528). We also thank Nello Blaser and Benjamin Bergougnoux for helping to review the initial versions of the paper.  
   
  References 1. Bodlaender, H.: On linear time minor tests with depth-ﬁrst search. J. Algorithms 14(1), 1–23 (1993) 2. Bonsma, P.S., Brueggemann, T., Woeginger, G.J.: A faster FPT algorithm for ﬁnding spanning trees with many leaves. In: Rovan, B., Vojtáš, P. (eds.) MFCS 2003. LNCS, vol. 2747, pp. 259–268. Springer, Heidelberg (2003). https://doi.org/ 10.1007/978-3-540-45138-9_20 3. Chinn, P.Z., Chvátalová, J., Dewdney, A.K., Gibbs, N.E.: The bandwidth problem for graphs and matrices-a survey. J. Graph Theory 6(3), 223–254 (1982) 4. Courcelle, B.: The monadic second-order logic of graphs. I. Recognizable sets of ﬁnite graphs. Inf. Comput. 85(1), 12–75 (1990) 5. Courcelle, B., Makowsky, J.A., Rotics, U.: Linear time solvable optimization problems on graphs of bounded clique-width. Theory Comput. Syst. 33(2), 125–150 (2000). https://doi.org/10.1007/s002249910009 6. Courcelle, P.B., Engelfriet, D.J.: Graph Structure and Monadic Second-Order Logic: A Language-Theoretic Approach, 1st edn. Cambridge University Press, Cambridge (2012) 7. Cygan, M., et al.: Parameterized Algorithms, 1st edn. Springer, Cham (2015). https://doi.org/10.1007/978-3-319-21275-3 8. De Fraysseix, H.: Trémaux trees and planarity. Electron. Notes Discrete Math. 31, 169–180 (2008) 9. De Fraysseix, H., De Mendez, P.O., Rosenstiehl, P.: Trémaux trees and planarity. Int. J. Found. Comput. Sci. 17(05), 1017–1029 (2006) 10. de Fraysseix, H., de Mendez, P.O.: Trémaux trees and planarity. Eur. J. Comb. 33(3), 279–293 (2012). Topological and Geometric Graph Theory 11. Diestel, R.: Graph Theory, 5th edn. Springer, Heidelberg (2017). https://doi.org/ 10.1007/978-3-662-53622-3  
   
  On the PC of the Structure of LTs of Finite Graphs: The Number of Leaves  
   
  367  
   
  12. Diestel, R., Leader, I.: Normal spanning trees, Aronszajn trees and excluded minors. J. Lond. Math. Soc. 63(1), 16–32 (2001) 13. Downey, R.G., Fellows, M.R.: Fixed-parameter tractability and completeness I: basic results. SIAM J. Comput. 24(4), 873–921 (1995) 14. Downey, R.G., Fellows, M.R.: Fundamentals of Parameterized Complexity. Springer, London (2013). https://doi.org/10.1007/978-1-4471-5559-1 15. Even, S., Tarjan, R.E.: Network ﬂow and testing graph connectivity. SIAM J. Comput. 4(4), 507–518 (1975) 16. Fellows, M.R., Langston, M.A.: On search decision and the eﬃciency of polynomialtime algorithms. In: Proceedings of the Twenty-First Annual ACM Symposium on Theory of Computing, STOC 1989, pp. 501–512. Association for Computing Machinery, New York (1989). https://doi.org/10.1145/73007.73055 17. Fellows, M.R., Friesen, D.K., Langston, M.A.: On ﬁnding optimal and near-optimal lineal spanning trees. Algorithmica 3(1–4), 549–560 (1988). https://doi.org/10. 1007/BF01762131 18. Fellows, M.R., Rosamond, F.A.: Collaborating with Hans: some remaining wonderments. In: Fomin, F.V., Kratsch, S., van Leeuwen, E.J. (eds.) Treewidth, Kernels, and Algorithms. LNCS, vol. 12160, pp. 7–17. Springer, Cham (2020). https://doi. org/10.1007/978-3-030-42071-0_2 19. de Fraysseix, H., Rosenstiehl, P.: A characterization of planar graphs by Trémaux orders. Combinatorica 5(2), 127–135 (1985). https://doi.org/10.1007/BF02579375 20. Garey, M.R., Johnson, D.S.: Crossing number is NP-complete. SIAM J. Algebraic Discrete Methods 4(3), 312–316 (1983). https://doi.org/10.1137/0604033 21. Hopcroft, J., Tarjan, R.: Algorithm 447: eﬃcient algorithms for graph manipulation. Commun. ACM 16(6), 372–378 (1973) 22. Hopcroft, J., Tarjan, R.: Eﬃcient planarity testing. J. ACM (JACM) 21(4), 549– 568 (1974) 23. Hopcroft, J.E., Karp, R.M.: An n5/2 algorithm for maximum matchings in bipartite graphs. SIAM J. Comput. 2(4), 225–231 (1973) 24. Libkin, L.: Elements of Finite Model Theory. Springer, Heidelberg (2004). https:// doi.org/10.1007/978-3-662-07003-1 25. Nešetřil, J., de Mendez, P.O.: Bounded height trees and tree-depth. In: Nešetřil, J., de Mendez, P.O. (eds.) Sparsity. AC, vol. 28, pp. 115–144. Springer, Heidelberg (2012). https://doi.org/10.1007/978-3-642-27875-4_6 26. Ozeki, K., Yamashita, T.: Spanning trees: a survey. Graphs Comb. 27, 1–26 (2011). https://doi.org/10.1007/s00373-010-0973-2 27. Prieto, E., Sloper, C.: Either/Or: using Vertex Cover structure in designing FPT-algorithms—the case of k -Internal Spanning Tree. In: Dehne, F., Sack, J.-R., Smid, M. (eds.) WADS 2003. LNCS, vol. 2748, pp. 474–483. Springer, Heidelberg (2003). https://doi.org/10.1007/978-3-540-45078-8_41 28. Rosamond, F.: Max leaf spanning tree. In: Kao, M.Y. (ed.) Encyclopedia of Algorithms, pp. 1211–1215. Springer, New York (2016). https://doi.org/10.1007/9781-4939-2864-4_228 29. Williamson, S.: Combinatorics for Computer Science. Dover Books on Mathematics. Dover Publications (2002). https://books.google.no/books? id=YMIoy5JwdHMC  
   
  Eﬃciently Enumerating All Spanning Trees of a Plane 3-Tree (Extended Abstract) Muhammad Nur Yanhaona1(B) , Asswad Sarker Nomaan2 , and Md. Saidur Rahman2 1  
   
  Department of Computer Science and Engineering, BRAC University, Dhaka, Bangladesh [email protected]  2 Graph Drawing and Information Visualization Laboratory, Department of Computer Science and Engineering, Bangladesh University of Engineering and Technology, Dhaka, Bangladesh [email protected]  , [email protected]   
   
  Abstract. A spanning tree T of a connected, undirected graph G is an acyclic subgraph having all vertices and a minimal number of edges of G connecting those vertices. Enumeration of all possible spanning trees of undirected graphs is a well-studied problem. Solutions exist for enumeration for both weighted and unweighted graphs. However, these solutions are either space or time eﬃcient. In this paper, we give an algorithm for enumerating all spanning trees in a plane 3-tree that is optimal in both time and space. Our algorithm exploits the structure of a plane 3-tree for a conceptually simpler alternative to existing generalpurpose algorithms and takes O(n + m + τ ) time and O(n) space, where the given graph has n vertices, m edges, and τ spanning trees. This is a substantial improvement in both time and space complexity compared to the best-known algorithms for general graphs. We also propose a parallel algorithm for enumerating spanning trees of a plane 3-tree that has O(n+ ) time and O( nτ ) space complexities for p parallel processors. This m+ nτ p p second algorithm is useful when storing the spanning trees is important. Keywords: Spanning Tree Enumeration Space Complexity  
   
  1  
   
  · Plane 3-Tree · Time and  
   
  Introduction  
   
  A spanning tree of a connected undirected graph G is a subgraph that is a tree spanning all vertices of G. Spanning trees have always been a focus for researchers when dealing with various graph-related problems due to their wide range of applications in areas such as computer networks, telecommunications networks, transportation networks, water supply networks, and electrical grids. The enumeration of all spanning trees of a graph G is to ﬁnd all possible distinct edge combinations which minimally connect all its vertices without c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  M. Mavronicolas (Ed.): CIAC 2023, LNCS 13898, pp. 368–382, 2023. https://doi.org/10.1007/978-3-031-30448-4_26  
   
  Eﬃciently Enumerating All Spanning Trees of a Plane 3-Tree  
   
  369  
   
  introducing any cycle. Enumerating all possible spanning trees is often crucial in electrical circuits, routing networks, and other network analysis and optimization applications [3]. For example, the current ﬂow of an electrical network is associated with the sum of electrical admittances in its spanning trees [1,13]. The main issues with spanning tree enumeration are exponential time complexity, costly storage space requirements, and duplicate tree generation. Various algorithms with varying degrees of eﬃciency exist in the literature addressing these issues [2,5–7,9,10,14]. To the best of our knowledge, however, no solution exists that is optimal in all these aspects for any complex graph class. Char’s [2] 1968 algorithm is among the ﬁrst works on spanning tree enumeration. For a graph G with n vertices and m edges, it considers all possible combinations of n − 1 edges as potential spanning trees and gives unique spanning trees as output. The algorithm assigns the vertices of G increasing orders from 1 to n. It next selects the nth vertex as the root of all spanning trees. Then the algorithm repeatedly emits sequences of n − 1 numbers as a permutation of vertex orders, where the ith number in the sequence is the endpoint of an edge originating from the vertex with order i. Although the algorithm avoids duplicate tree generation, it involves checking if a sequence forms a spanning tree or some other cyclic subgraph. If τ  and τ respectively denote the numbers of non-tree and tree sequences of G, the time complexity of the algorithm is O(m + n + τ + τ  ). The space required by Char’s algorithm is O(nm). This space overhead is due to a tabular structure listing all adjacent vertices of each vertex. The algorithm Rakshit et al. proposed in 1981 [14] is quite similar to Char’s algorithm. The algorithm uses a privileged reduced incidence edge structure (PRIES). A reduced incidence edge structure (RIES) of graph G is a table with n − 1 vertices as row headers and column entries representing the edges incident on the respective vertices. A PRIES is a table derived from a RIES. The PRIES that the algorithm proposes is eﬀectively the exact structure of [2]. The diﬀerence between the two algorithms lies in how they detect non-tree edge sequences. While Char’s algorithm repeatedly checks for cycle to prune nontree edge sequences, Rakshit’s algorithm does that by repeatedly removing two “pendant” vertices [4] from a sequence and checking the degrees of remaining vertices. The time and space complexities of this algorithm are similar to Char’s algorithm. Both algorithms are superior in time complexity to their contemporary alternative enumeration algorithms [6,7,10] as they avoid duplicate edge sequences and prune non-tree sequences using the geometric properties of the input graph. Gabow and Myers [5] and Matsui [9] improve the time complexity of spanning tree enumeration from earlier algorithms by avoiding evaluating candidate sequences of vertices that cannot form a connected subgraph. Both algorithms recursively generate spanning trees by growing them from smaller sub-trees and checking whether adding a new edge on a growing tree will produce a cycle. Gabow and Myers’ algorithm traverses the input graph G in depth-ﬁrst-order from a single pivot vertex that the algorithm considers the root of all spanning trees of G. As it grows a tree from that root vertex, the algorithm removes  
   
  370  
   
  M. N. Yanhaona et al.  
   
  and restores edges in G in a deterministic order to avoid duplicate tree generation. The algorithm works for both directed and undirected graphs and takes O(n + m + mτ ) and O(n + m + nτ ) times for the former and the latter, respectively. The vertex and edge count multiplier over the number of spanning trees τ in this algorithm is due to checking all possible extensions to a new edge or vertex from a single vertex of the tree under construction. Matsui’s algorithm employs that one can construct a spanning tree T of a / T graph G by  swapping an edge f of another spanning tree T  with an edge g ∈ such that T {g} is a cycle (known as a fundamental circuit of G). This property allows us to relate all spanning trees of G in a parent-child relationship hierarchy from a single baseline spanning tree where a child spanning tree is the result of replacing a single edge of its parent with another edge, called the pivot edge. The algorithm traverses the hierarchical domain of spanning trees by ﬁnding pivot edges using a generic enumeration algorithm proposed by Nagamochi and Ibaraki [11]. The domain traversal order can vary. However, careful edge ordering is essential to avoid returning to an ancestor-spanning tree from a descendent. Discovering pivot edges of a single spanning tree can take O(n) time. That gives the total time complexity O(n+m+nτ ). Both Gabow and Myer [5] and Matsui’s algorithms only maintain a single spanning tree and a sorted sequence of edges in memory. Therefore, their space complexity is O(n + m). One can view these algorithms as optimizations to Read and Tarjan’s generic backtracking-based algorithm for listing speciﬁc types of subgraphs of a graph [15], which provides O(n + m + mτ ) time and O(n + m) space bounds for listing spanning trees. Onete et al.’s [13] more recent algorithm of spanning tree enumeration achieves the same time and space bounds as Matsui’s algorithm. However, the algorithm involves no backtracking. Onete et al. found that all and only nonsingular submatrices with a speciﬁc structure of a reduced incidence matrix of a graph represent spanning trees. Their algorithm utilizes this ﬁnding by generating unique submatrices of that kind and spewing corresponding spanning trees in the incidence matrix format. Since checking for non-singularity is a linear process in the number of vertices, the time complexity of their algorithm is also O(n + m + nτ ). Kapoor and Ramesh [8] and Shioura and Tamura [16] provide two alternative algorithms to improve the time complexity from O(n + m + nτ ) to O(n + m + τ ) when the individual spanning trees need not be output. Instead, their diﬀerence from a baseline tree as a list of edge exchanges is suﬃcient. Both algorithms implicitly traverse the network S(G) formed by all spanning trees of G where the nodes of S(G) are the spanning trees of G and there is an edge between two nodes of S(G) if the corresponding trees diﬀer by an edge exchange. Both algorithms maintain a dynamic, ordered list of edges associated with fundamental cycles of G to optimize S(G) traversal and avoid duplicate tree generation. Although the underlying list data structures are diﬀerent, their maintenance increases both algorithms’ space complexity to O(nm). Furthermore, recreating the individual spanning trees from the description of diﬀerences sacriﬁces time optimization.  
   
  Eﬃciently Enumerating All Spanning Trees of a Plane 3-Tree  
   
  371  
   
  All the above algorithms involve checking for cycle formation or tracking cyclic relations among edges of the graph, which is the chief contributor to their time or space complexity. Avoiding cycle tracking during spanning tree enumeration of a general graph is challenging. However, alternative approaches that utilize a graph’s structure to enumerate spanning trees without cycle tracking can lead to better algorithms for speciﬁc graph classes. In this paper, we consider the problem of enumerating spanning trees of a plane 3-tree. Plane 3-trees are a class of planar graphs formed from repeated triangulation of phases of an initial triangle. Formally, a plane 3-tree Gn is a triangulated plane graph G with n ≥ 3 vertices such that if n > 3 then G has a vertex x whose deletion gives a plane 3-tree G of n − 1 vertices. Figure 2(a) shows an example of plane 3-tree G10 containing 10 vertices. Our approach uses the face decomposition structure of a plane 3-tree to order its vertices, then inductively generates all its spanning trees without duplication from that vertex order. The algorithm using breadth-ﬁrst propagation of inductive expansion has O(n + m + τ ) time and O(nτ ) space complexities. When space is not an issue, this algorithm has the advantage of being easily parallelizable. Our second algorithm captures the logic of inductive expansion into a tree alteration scheme like Matsui’s to output all spanning trees using dynamic programming (DP) in O(n) space and O(n + m + τ ) time. The structure of the rest of the paper is as follows. Section 2 presents preliminaries on various terms and concepts related to graphs, plane 3-trees, and our algorithms. Section 3 introduces some lemmas and theorems related to properties of spanning trees of a plane 3-tree. Section 4 presents our ﬁrst and inductive algorithm for spanning tree enumeration. Section 5 describes and analyzes the DP algorithm. The paper concludes with a discussion of future research directions.  
   
  2  
   
  Preliminaries  
   
  In this section, we deﬁne some terms we will use for the rest of the paper and present some preliminary ﬁndings. Let G = (V, E) is a connected simple graph with vertex set V and edge set E. A subgraph of G is a graph G = (V  , E  ) such that V  ⊆ V and E  ⊆ E. G is a spanning subgraph of G when V  = V . G is an induced subgraph of G when G contains all edges of E having both endpoints in V  . When each edge (u, v) ∈ E is directional, i.e., (u, v) = (v, u) then G is a directed graph; otherwise, G is undirected. In this paper, we only consider undirected graphs. The degree of a vertex v ∈ G, denoted by degree(v), is the number of edges incident to it. The neighbors of v are the vertices that share an edge with v. That is, if an edge (u, v) ∈ E then u and v are neighbors. We also say u and v are adjacent in G. A tree T = (V, E) is a connected graph with no cycles. T is rooted when one vertex r ∈ V , called the root, is distinguished from others. A spanning tree of a graph G is a spanning subgraph that is a tree. We use the term node and vertex interchangeably to refer to a vertex of a spanning tree. The unique path between two nodes u, w in T is the sequence of edges of the form  
   
  372  
   
  M. N. Yanhaona et al.  
   
  (u, v1 ), (v1 , v2 ), · · · , (vi , w) that connects u and w in the tree. We use the notations ρu,v1 ,··· ,w or ρu,w interchangeably to denote the path between u and w. The length of a path is the number of edges in it. Let T be a rooted tree with root r. The parent u of any node v other than r in T is the immediate predecessor of v on the path from r to v. Conversely, v is a child of u. A leaf of T is a node with no children; otherwise, it is an internal node. A sub-tree T  of T is an induced proper subgraph of T that is also a tree. A node w is an ancestor of another node v in T when the unique path from v to the root r contains w; conversely, v is a descendent of w. A fundamental cycle of a graph G is a cycle formed by adding a non-tree edge (u, v) ∈ G on its spanning tree. A graph G is planar if one can embed it on a plane without any edge crossing. We call such an embedding a plane embedding of G. A plane graph is a planar graph with a ﬁxed embedding, where the connected regions of a plane embedding are its faces. The unbounded region is the outer face, and all others are the inner faces. The vertices of the outer face are the outer vertices, while the rest are inner vertices. A plane graph G is a triangulated plane graph when every face has precisely three vertices. A plane 3-tree is a triangulated plane graph whose plane embedding is a repeated triangulation of the faces starting from a single outer triangle. Therefore, a plane 3-tree Gn is a triangulated plane graph G with n ≥ 3 vertices such that if n > 3 then G has a vertex x whose deletion gives a plane 3-tree Gn−1 of n − 1 vertices. We call x the last, or (n − 3)th , dividing vertex of Gn . Note that degree(x) = 3. We call the three neighbors u, v, w of x, the face vertices of x in Gn and denote their set by ζx . If n > 4 then the last dividing vertex y of Gn−1 is the (n − 4)th dividing vertex of Gn . Here n − 3 and n − 4 are the dividing orders of x and y respectively. Our notion of a dividing vertex is similar to that of a representative vertex described in [12]. Fact 1. One can describe the repeated triangulation-based embedding of a plane 3-tree Gn of n > 3 vertices unambiguously by an ascending sequence of dividing   vertices v1 , v2 , · · · , vn−3 and their face vertex sets ζv1 , ζv2 , · · · ., ζvn−3 . Note that multiple sequences of dividing vertices exist for a plane 3-tree Gn when it has multiple degree-3 vertices. However, all such sequences describe the same plane embedding. For a dividing vertex sequence ds = v1 , v2 , · · · , vn−3 im im of a plane 3-tree Gn with n > 3, we use Gim 1 , G2 , · · · , Gn−3 to represent the sequence of intermediate plane-3 trees we get by introducing the dividing vertices in corresponding order starting from G3 (note that Gim n−3 = Gn ). We use the notation δ(v, ds ) to represent the dividing order of vertex v in ds . Fact 2. If w is the last dividing vertex among three vertices u, v, w appearing in any dividing vertex sequence of a plane 3-tree Gn of n ≥ 3 and u and v are adjacent to w then u and v are also mutually adjacent.   We next deﬁne some operations on trees that are essential for describing our algorithms. Edge extension is the operation of adding a new leaf node to a tree. The reverse operation of edge extension is edge removal which delete a  
   
  Eﬃciently Enumerating All Spanning Trees of a Plane 3-Tree  
   
  373  
   
  leaf and its incident edge. The operation of adding a new vertex of degree 2 in the edge between two tree nodes is edge subdivision, and the reverse operation is path contraction which removes a node of degree two and connects its two neighbors by an edge. Finally, replacing a path of length two in a tree with a new node connected to all three nodes of the path is root extension, and the reverse operation is root ﬂattening. Figure 1 illustrates these operations.  
   
  Fig. 1. Tree operations  
   
  3  
   
  On Spanning Trees of a Plane 3-Tree  
   
  In this section, we present some properties of the spanning trees of a plane 3-tree in various lemmas. We omit their proofs due to space shortage. We use these lemmas in subsequent sections to prove the correctness of our tree enumeration algorithms. Lemma 1. Any spanning tree Tn of a plane 3-tree Gn with n > 3 results from consecutive applications of edge extension, edge subdivision, and root extension   starting from a path of length two connecting the outer vertices of Gn . A corollary of Lemma 1 is as follows. Corollary 1. Any spanning tree Tn of a plane 3-tree Gn with n > 3 is an edge extension, edge subdivision, or root extension of a spanning tree of another plane 3-tree Gn−1 . Lemma 1 and its corollary provide a convenient way to generate spanning trees of larger plane 3-trees from that of smaller plane 3-trees. However, we need to know when edge extension, edge subdivision, and root extension create duplicate trees and when they do not. The following lemmas guide us in that regard. For the sake of notational brevity, we now use Gn−1 to represent Gim v−4 of the larger plane 3-tree Gn . That is, Gn−1 is the plane 3-tree that results from removing the last dividing vertex of Gn and its incident edges.  
   
  374  
   
  M. N. Yanhaona et al.  
   
  1 2 Lemma 2. If two spanning trees Tn−1 and Tn−1 of Gn−1 are distinct, then an edge extension or edge subdivision to them to add a node for the last dividing vertex v of Gn will always produce two distinct spanning trees Tn1 and Tn2 of Gn .  
   
  Lemma 2 is trivially true due to the precondition of distinctness of the spanning trees of Gn−1 . We now have Lemma 3 (proof omitted). Lemma 3. If ζv = {x, y, z} is the face vertex set of the last dividing vertex v of Gn and Tn1 , Tn2 are two spanning trees of Gn constructed through a root extension 1 2 and Tn−1 of Gn−1 then Tn1 and Tn2 are distinct from two spanning trees Tn−1 if and only if at least one of the three sub-trees rooted under nodes x, y, z are 1 2 and Tn−1 .   diﬀerent in Tn−1 Lemma 2 and 3 give us insights on how to inductively generate spanning trees of a plane 3-tree without duplication from spanning trees of smaller graphs using a single sequence of dividing vertices. However, edge extension is the only universal operation we can apply to all smaller sub-trees. Edge subdivision or root extension is only possible when the structure of the smaller sub-tree permits it. Note that we worry about this issue despite Lemma 1 showing that any spanning tree of a plane 3-tree is a result of consecutive applications of these three operations because there can be multiple sequences of dividing vertices for a single plane 3-tree. Therefore, using one sequence may allow edge subdivision or root extension at a speciﬁc case, while another does not. 1 2 N , Tn−1 , · · · , Tn−1 } is the set of all spanning trees of Assume τn−1 = {Tn−1 i Gn−1 . Consider any arbitrary Tn−1 that has no pair of nodes from the face vertex set ζv = {x, y, z} of the last dividing vertex v of Gn connected by an edge i where node in the tree. We can construct a spanning tree Tn for Gn from Tn−1 v is adjacent to two nodes corresponding to its face vertices as follows: 1. First, add v by an edge extension. 2. Then connect leaf v with another face vertex node by an edge to form a fundamental cycle. 3. Then remove any one edge from that cycle other than those incident to v. To produce a Tn where v shares an edge with all of x, y, z, we can repeat the above process for the remaining face vertex. One can convince thyself that this alternative process generates all spanning trees [9,16]. The vital concern here is that we can generate spanning trees describable using edge subdivisions and root extensions that we did not generate using those operations in the ﬁrst place. Let us call this alternative approach of spanning tree generation cycle breaking. The following two lemmas (proofs omitted) prove that cycle breaking generates trees that are replicas of other trees inductively generated using edge subdivision or root extension following a single dividing vertex sequence. 1 2 N , Tn−1 , · · · , Tn−1 } is the set of all spanning Lemma 4. Assume τn−1 = {Tn−1 i trees of Gn−1 and Tn−1 ∈ τn−1 has no edge (u, v) such that u, v are two face vertices of the last dividing vertex x of Gn . If Tn having x adjacent to both u and v i using cycle breaking then there is another is a spanning tree generated from Tn−1 j tree Tn−1 ∈ τn−1 that we can convert to Tn applying an edge subdivision.    
   
  Eﬃciently Enumerating All Spanning Trees of a Plane 3-Tree  
   
  375  
   
  1 2 N Lemma 5. Assume τn−1 = {Tn−1 , Tn−1 , · · · , Tn−1 } is the set of spanning trees i ∈ τn−1 does not have a pair of edges (x, y), (y, z) where x, y, z of Gn−1 and Tn−1 are the face vertices of the last dividing vertex v of Gn . If Tn having (v, x), (v, y) i using cycle breaking and (v, z) edges is a spanning tree generated from Tn−1 j then there is another tree Tn−1 ∈ τn−1 that we can convert to Tn applying a root extension.    
   
  Lemma 4 and 5 imply that one can add the last vertex of a dividing vertex sequence ds = v1 , v2 , · · · , vn−3 of Gn to inductively generate all spanning trees of Gn from the spanning trees of Gn−1 using only edge extension, edge subdivision, and root extension regardless of the dividing order of earlier vertices. However, if Gn has more than one degree 3 vertices, then the last dividing vertex itself 1 2 and d2s = v12 , v22 , · · · , vn−3 can be diﬀerent between two d1s = v11 , v21 , · · · , vn−3 im describing Gn . Then Gn−4 = Gn−1 for the two sequences diﬀer by at least one 1 2 and τn−1 has pair of vertices. Consequently, their set of spanning trees τn−1 no common tree, which may cause us to miss some spanning trees if we only use one of d1s and d2s for tree enumeration. The following lemma (proof omitted) eliminates this concern by showing that the ordering diﬀerences of vertices among two dividing vertex sequences of Gn do not impact spanning tree generation. 1 Lemma 6. Assume that two dividing vertex sequences d1s = v11 , v21 , · · · , vn−3 2 2 2 2 and ds = v1 , v2 , · · · , vn−3 of a plane 3-tree Gn start diverting at index k. That 1 1 2 2 , · · · , vn−3 and d2sub = vk2 , vk+1 , · · · , vn−3 is, the sub-sequences d1sub = vk1 , vk+1 are diﬀerent from their beginning. Assume τk−1 is the set of all spanning trees of Gim k−1 . Then for each tree T1 ∈ τk−1 and a series of edge extension, edge subdivision, and root extension to T1 in the order of d1sub forming a spanning tree Tn ; there is another tree T2 ∈ τk−1 such that an alternative sequence of  those operations in the order of d2sub generates the same spanning tree of Gn .   
   
  4  
   
  Inductive Algorithm for Spanning Tree Enumeration  
   
  Lemma 1, 2, 3, 4, 5 and 6 give us all the insights we need to generate all spanning trees of a plane 3-tree inductively from spanning trees of smaller constituent plane 3-trees. This section presents an inductive algorithm for spanning tree enumeration that we will use as the blueprint for a better DP algorithm in the next section. A General Outline of the Algorithm: We will take a sequence of dividing vertices, ds , and corresponding face vertex set sequence, fs , of the plane 3-tree Gn as inputs. We initiate a list with the spanning trees for G3 . Then we iterate over the dividing vertex sequence. In each iteration, we take one dividing vertex, v, and apply edge extension to all trees in the list, edge subdivision to those trees where the operation is permitted, and root extension to those trees where the  
   
  376  
   
  M. N. Yanhaona et al.  
   
  Algorithm 1: Inductive Algorithm for Spanning Tree Enumeration Input: ds , fs - a dividing vertex and face vertex set sequence pair of Gn Output: τ - the set of all spanning trees of plane 3-tree Gn {x, y, z} ← fs [0] τ ← {ρx,y,z , ρy,x,z , ρx,z,y } for ( i = 0; i < length(ds ); i = i + 1 ) do ν ← ds [i], ζ ← fs [i] [α, β, γ] ← sortByDividingOrder(ζ) τ ← ∅ foreach T ∈ τ do foreach μ ∈{α, β, γ} do τ  ← τ  {T ∪ {(μ, ν)}} end foreach (μ, ω) ∈ T & {μ, ω} ⊂ ζ do τ  ← τ  {(T − {(μ, ω)}) ∪ {(μ, ν), (ν, ω)}} end if ρα,β,γ ∈ Tthen τ  ← τ  (T − ρα,β,γ ) ∪ {(ν, α), (ν, β), (ν, γ)} end end τ ← τ end  
   
  face vertices of v form a speciﬁc path of length two. We store the result of these operations in a new list that replaces the old list at the end of the iteration. When the iterative process completes, the list contains all spanning trees of Gn without duplication. We use root extension with caution due to Lemma 3 showing that some sub-trees under the face vertices of a dividing vertex need to be diﬀerent to avoid duplicate spanning tree generation. In that regard, if v is the dividing vertex under consideration at a particular iteration and x, y, z are v’s face vertices with δ(x, ds ) < δ(y, ds ) < δ(z, ds ), we apply root extension for v on a tree only if it has the path ρx,y,z . To use this logic for the three outer face vertices, we assign them arbitrary but ﬁxed dividing orders −2, −1, and 0. Algorithm 1 presents a pseudo-code of the spanning tree enumeration process. The correctness of Algorithm 1 is evident from the various lemmas of Sect. 3. Hence, we focus on its time and space complexities. For that, we need to understand the cost of generating a dividing vertex sequence and modifying a spanning tree of the smaller subgraph to produce one for a larger graph/subgraph. Dividing Vertex Sequence Generation: We can generate a ds , fs pair for a plane 3-tree Gn by using a graph traversal of Gn starting from any vertex and populating a pair of stacks. Anytime the graph traversal reaches a vertex v of degree three, we push v in one stack and its neighbor set to the other. Then we remove v and its incident edges from the graph and continue the traversal. The traversal ends when we ﬁnd a vertex with degree two. Then we generate the ds , fs pair by popping one element at a time from both stacks and appending  
   
  Eﬃciently Enumerating All Spanning Trees of a Plane 3-Tree  
   
  377  
   
  the elements in the growing list of dividing vertex and face vertex set sequences. The whole process requires a single traversal of Gn that would take O(n + m) time where m is the number of edges in Gn and O(n + 3n) = O(n) space beyond the initial storage for the input graph Gn . Data Structure for Spanning Trees: We can represent the spanning trees using a simple array of n − 1 vertices where the entry at ith index is the other endpoint of an edge incident to the vertex with dividing order i − 1. We adopt the following approach of modifying a spanning tree for Gim j−1 to form a spanning tree for Gim to ensure that each entry in the array refers to a distinct edge. j 1. If we add the new vertex v with δ(v, ds ) = j to the spanning tree using an edge extension from existing vertex x then we enter δ(x, ds ) at index (j + 1). 2. If we add v by subdividing the edge (x, y) then we investigate index δ(x, ds )+1 and δ(y, ds ) + 1 to determine which entry refers to the edge (x, y), replace the current value with j in that entry, and then write the dividing order of the other entry at index (j + 1). 3. Finally, if we use root extension to x, y, z to add v in the spanning tree, then we modify two existing entries using the approach of (2) and add a new entry for the remaining vertex at index (j + 1). Note that the above approach works even when one of the face vertices of v is the ﬁrst outer face vertex, which has no entry in the array. We now prove the following theorem of Algorithm 1 and time complexities. Theorem 1. When replicating a ﬁxed-size array in memory is a constant time operation, Algorithm 1 enumerates all spanning trees of a plane 3-tree Gn of n vertices, m edges, and τ spanning trees in O(n + m + τ ) time and O(nτ ) space. Proof. Assuming memory replication of a ﬁxed-length array is a constant time operation, and the storage structure of a spanning tree is as we described above; im is a generating a new spanning tree T  for Gim i+1 from a spanning tree T of Gi constant time operation. Furthermore, evaluating whether an edge subdivision or root extension is admissible in T also takes a constant time (we can investigate the three indexes for the face vertices of the current vertex in T to determine their adjacency). Moreover, the algorithm considers each T exactly once and generates at least three new trees. Hence, the algorithm’s running time is proportional to the number of spanning trees generated through the iterative process. τi+1 for If τi+1 represents the number of spanning trees of Gim i+1 then τi ≤ 3 all i < n. Thus, the total number of trees the algorithm generates is ≤ τ + τ3 + n+1  
   
  + · · · + 3τn = τ (32×3n−1) < 2τ , where τ is the number of spanning trees of Gn . Thus, the algorithm’s running time is O(τ ). After adding the computation time for generating a dividing vertex and its face vertex set sequences, the overall time complexity of enumerating the spanning trees of an input plane 3-tree Gn becomes O(n + m + τ ), where m is the number of edges in Gn . The algorithm only retains the two input sequences and the set of spanning trees of the current plane 3-tree. Therefore, the space complexity is O(n + nτ ) = O(nτ ).   τ 32  
   
  378  
   
  M. N. Yanhaona et al.  
   
  Suppose we relax the assumption that memory replication of a ﬁxed-length array is a constant time operation. If an array copy takes time linear to the number of elements in the array, then constructing each spanning tree takes O(n) time. Then the running time of Algorithm 1 becomes O(n + m + nτ ), which is equivalent to the best-known algorithm for spanning tree enumeration in a general graph. In the next section, we will use dynamic programming to convert the inductive tree generation process into a tree alternation process that avoids array copying and reduces the space required to O(n). However, one should notice that Algorithm 1 involves no coordination among the elements of the spanning tree set in each iteration. That makes it perfectly parallelizable. After the generation of the two input sequences and a few iterations of smaller spanning tree generation; diﬀerent parallel processors can independently continue the inductive process from the initial spanning tree set. That gives the time complexity of O(n + m + nτ p ) for p-processor parallel version of the algorithm. The space requirement in individual processors is nτ p . Thus the following theorem holds. Theorem 2. Assuming copying a ﬁxed-size array is a linear time operation to the size of an array, a p-processor parallel version of Algorithm 1 enumerates all spanning trees of a plane 3-tree Gn of n vertices, m edges, and τ spanning trees nτ   in O(n + m + nτ p ) time and O( p ) space.  
   
  5  
   
  DP Algorithm for Spanning Tree Enumeration  
   
  Algorithm 1 of the previous section is close to optimal because it involves no duplicate spanning tree generation and churns out new spanning trees in constant time from other intermediate spanning trees. However, it must keep all the intermediate spanning trees of the immediately previous step in memory and involves a tree copying overhead during a new spanning tree generation. We can eliminate both limitations by converting the inductive tree-generation process into a recursive tree mutation process. Note that if τ is the set of all spanning trees of the plane 3-tree Gn , one can view each spanning tree T ∈ τ as a unique conﬁguration of edge extension, edge subdivision and root extension operations. Furthermore, for all T ∈ τ , these operations are applied on a path of length two connecting the outer face vertices in the same order vertices appear in a dividing vertex sequence. Consequently, we can consider successive trees added in τ as migration from one conﬁguration to the next. A scheme that can alter between conﬁgurations in constant time, traverse all conﬁgurations, and only emit unique conﬁgurations should emulate Algorithm 1. We only need to maintain a single spanning tree corresponding to the current conﬁguration when traversing the domain of all spanning tree conﬁgurations. We can apply a clever trick of using the list of edges of the current spanning tree as the representation of the underlying conﬁguration. In that case, there is no additional space overhead beyond that of a single spanning tree and two lists for the dividing vertex and face vertex set sequences. That is the logic of our DP algorithm in this section.  
   
  Eﬃciently Enumerating All Spanning Trees of a Plane 3-Tree  
   
  379  
   
  First, we need an initial conﬁguration for the described scheme to work. Assume a, b, and c are the outer face vertices with our assigned respective dividing orders −2, −1, and 0. Then the initial conﬁguration has the path ρa,b,c and for each dividing vertex x in the sequence ds the edge (w, x) such that w ∈ ζx and δ(w, ds ) is the largest for all of x’s face vertices. Figure 2(a) and (b) illustrate a plane 3-tree and its spanning tree for the initial conﬁguration.  
   
  Fig. 2. An example plane 3-tree and its baseline spanning tree  
   
  If ζx = {u, v, w}, then alternative conﬁgurations for x are to have edge extension from u or v, subdividing edges (u, v), (v, w) or (u, w), and root extending the path ρu,v,w . Among them, the admissibility of edge subdivision or root extension depends on the current conﬁguration for u, v, and w. Let us call moving to any alternative conﬁguration for x from its default conﬁguration in any tree T a mutation and number the mutations in the order we speciﬁed from zero to ﬁve. Then we can deﬁne the following functions.  T mutateT ree(T, v, ζv , i) = ∅  
   
  mutation i can be applied to T for v to create T  otherwise  
   
   T reverseM utation(T , v, ζv , i) = T   
   
  T  results applying mutation i for v to T otherwise  
   
  If we use the data structure described in Sect. 4 for the spanning trees, then both mutateT ree and reverseM utation functions should take constant time. Both require a constant number of index checking and entry updates in the list of edges sorted by the dividing order of vertices. To permit conﬁguration changes for the initial path connecting the outer face vertices, we only need to support an alternative edge extension and an edge subdivision for the outer vertex with order zero as an exceptional case. Finally, note that the mutateT ree function updates the argument tree T when the mutation is admissible; otherwise, it leaves T unchanged. Now we can deﬁne our DP algorithm for spanning tree enumeration, as illustrated in Algorithm 2. Now we prove the following theorem on the correctness and time and space complexities of Algorithm 2.  
   
  380  
   
  M. N. Yanhaona et al.  
   
  Algorithm 2: DP Algorithm for Spanning Tree Enumeration Input: ds , fs - a dividing vertex and face vertex set sequence pair of Gn Output: τ - the set of all spanning trees of plane 3-tree Gn ζ0 ← fs [0] [α0 , β0 , γ0 ] ← sortByDividingOrder(ζ0 ) T ← [] T [0] ← δ(α0 , ds ), T [1] ← δ(β0 , ds ) for ( i = 0; i < length(ds ); i = i + 1 ) do ζ ← fs [i] [α, β, γ] ← sortByDividingOrder(ζ) T [i + 2] ← δ(γ, ds ) end ds ← [γ].append(ds ) fs ← [{α, β}].append(fs ) generateSpanningT rees(ds , fs , 0, T ) Function generateSpanningTrees(ds , fs : List, i: Integer, T : Array) is if i == length(ds ) then output(T ) else ν ← ds [i], ζ ← fs [i] for ( mi = 0; mi ≤ 5; mi = mi + 1 ) do T  ← mutateT ree(T, ν, ζ, mi ) if T  = ∅ then generateSpanningT rees(ds , fs , i + 1, T  ) T ← reverseM utation(T  , ν, ζ, mi ) end generateSpanningT rees(ds , fs , i + 1, T ) end end  
   
  Theorem 3. Algorithm 2 enumerates all spanning trees of a plane 3-tree Gn with n vertices, m edges, and τ spanning trees without duplication in O(n+m+τ ) time and O(n) space. Proof. Algorithm 2 ﬁrst generates a spanning tree of Gn for the initial conﬁguration, updates the dividing vertex and face vertex set sequences to include one outer face vertex, and then invokes the function generateSpanningT rees that implements the DP algorithm. Therefore, it suﬃces that we only analyze function generateSpanningT rees for DP scheme’s accuracy and complexity. Each time generateSpanningT rees output a spanning tree, it is for a different conﬁguration of mutations of vertices from ds . Hence, the algorithm only outputs distinct spanning trees of Gn . The function removes mutation in the reverse order it applies them. Thus, a mutation of any vertex is reversible during a backtracking step if it was admissible during the recursive unfolding. We only wonder whether or not generateSpanningT rees includes all possible mutations of each vertex. The answer lies in the default conﬁguration for dividing vertices.  
   
  Eﬃciently Enumerating All Spanning Trees of a Plane 3-Tree  
   
  381  
   
  Fig. 3. Possible mutations of vertex d from the baseline tree of Fig. 2(b)  
   
  Let u be the vertex with dividing order i. Anytime generateSpanningT rees tries to apply a mutation for u from its default conﬁguration, all vertices v with δ(v, ds ) > δ(u, ds ) are attached via an edge extension to their respective face vertex with the highest dividing order. The critical characteristic of edge extension from a vertex x to y where δ(x, ds ) < δ(y, ds ) is that it does not preclude any mutation of x involving vertices with lower dividing orders. Figure 3 illustrates this fact for vertex d of the plane 3-tree of Fig. 2(a) (Notice that one mutation for d, i.e., subdividing the edge (a, c) is not admissible from the initial conﬁguration as that requires a mutation of c.). Consequently, admissible mutations for u depend only on the current conﬁguration of vertices that appeared earlier in ds . Therefore, applying a mutation or skipping all mutations for u and then progressing to the next vertex in Algorithm 2 is equivalent to generating all possible from a ﬁxed spanning tree of Gim spanning trees of Gim i i−1 in Algorithm 1. Thus, Algorithm 2 is behaviorally equivalent to Algorithm 1 and correctly enumerates all spanning trees of Gn without duplication. Algorithm 2 only maintains a single spanning tree of Gn and two sequences for dividing vertices and their face vertex sets. Hence, we can derive from the analysis of Algorithm 1 that Algorithm 2’s time complexity is O(τ ) and space complexity is O(n). Combining that with the initial cost of generating the dividing vertex and face vertex set sequences, the overall cost of spanning tree enumeration of a plane 3-tree Gn using DP is O(n + m + τ ) in time and O(n) in space, where m is the number of edges and τ is the number of spanning trees.    
   
  6  
   
  Conclusions  
   
  In this paper, we propose an algorithm for enumerating all spanning trees of a plane 3-tree Gn of n vertices, m edges, and τ spanning trees in O(n + m + τ ) time and O(n) space. Our algorithm substantially improves both time and space bounds of the best general-purpose spanning tree enumeration algorithm that takes O(n + m + nτ ) time and O(nm) space for this speciﬁc graph class. The central idea underlying this improvement is identifying a few low-cost extension/mutation operations that we can inductively use to extend spanning trees of smaller induced subgraphs of a plane 3-three to that of larger subgraphs. There are several avenues for future research from our current ﬁndings. First, one can investigate the possibility of a similar spanning tree enumeration technique for other graph classes, such as regular graphs with small vertex degrees. Second, one can try to relate our tree extension/mutation operations with edit  
   
  382  
   
  M. N. Yanhaona et al.  
   
  distance computation for pair of spanning trees of a plane 3-tree or prove properties related to spanning trees. The most exciting future research direction is to prove that if a set of fundamental operations exist that can express any spanning tree of a graph, then all their applicable permutations on a sorted sequence of that graph’s vertices enumerate all spanning trees. Then our approach to spanning tree enumeration for plane 3-trees will generalize. Acknowledgement. This work is supported by the Basic Research Grant of BUET.  
   
  References 1. Brooks, R., Smith, C., Stone, A., Tutte, W.: Determinants and current ﬂows in electric networks. Discret. Math. 100(1), 291–301 (1992). https://doi.org/10.1016/ 0012-365X(92)90648-Y 2. Char, J.: Generation of trees, two-trees, and storage of master forests. IEEE Trans. Circ. Theory 15(3), 228–238 (1968). https://doi.org/10.1109/TCT.1968.1082817 3. Chen, W.K.: Topological analysis for active networks. IEEE Trans. Circ. Theory 12(1), 85–91 (1965). https://doi.org/10.1109/TCT.1965.1082396 4. Deo, N.: Graph Theory with Applications to Engineering and Computer Science. Prentice Hall Series in Automatic Computation, Prentice-Hall Inc., USA (1974) 5. Gabow, H.N., Myers, E.W.: Finding all spanning trees of directed and undirected graphs. SIAM J. Comput. 7(3), 280–287 (1978). https://doi.org/10.1137/0207024 6. Hakimi, S., Green, D.: Generation and realization of trees and k-trees. IEEE Trans. Circ. Theory 11(2), 247–255 (1964). https://doi.org/10.1109/TCT.1964.1082276 7. Hakimi, S.: On trees of a graph and their generation. J. Franklin Inst. 272(5), 347–359 (1961). https://doi.org/10.1016/0016-0032(61)90036-9 8. Kapoor, S., Ramesh, H.: Algorithms for enumerating all spanning trees of undirected and weighted graphs. SIAM J. Comput. 24(2), 247–265 (1995). https://doi. org/10.1137/S009753979225030X 9. Matsui, T.: An algorithm for ﬁnding all the spanning trees in undirected graphs (1998) 10. Mayeda, W., Seshu, S.: Generation of trees without duplications. IEEE Trans. Circ. Theory 12(2), 181–185 (1965). https://doi.org/10.1109/TCT.1965.1082432 11. Nagamochi, H., Ibaraki, T.: A linear-time algorithm for ﬁnding a sparse kconnected spanning subgraph of a k-connected graph. Algorithmica 7(5&6), 583– 596 (1992). https://doi.org/10.1007/BF01758778 12. Nishat, R.I., Mondal, D., Rahman, M.S.: Point-set embeddings of plane 3-trees. In: Brandes, U., Cornelsen, S. (eds.) GD 2010. LNCS, vol. 6502, pp. 317–328. Springer, Heidelberg (2011). https://doi.org/10.1007/978-3-642-18469-7 29 13. Onete, C.E., Onete, M.C.C.: Enumerating all the spanning trees in an un-oriented graph - a novel approach. In: 2010 XIth International Workshop on Symbolic and Numerical Methods, Modeling and Applications to Circuit Design (SM2ACD), pp. 1–5 (2010). https://doi.org/10.1109/SM2ACD.2010.5672365 14. Rakshit, A., Sarma, S.S., Sen, R.K., Choudhury, A.: An eﬃcient tree-generation algorithm. IETE J. Res. 27(3), 105–109 (1981). https://doi.org/10.1080/03772063. 1981.11452333 15. Read, R., Tarjan, R.: Bounds on backtrack algorithms for listing cycles, paths, and spanning trees. Networks 5(3), 237–252 (1975). https://doi.org/10.1002/net.1975. 5.3.237 16. Shioura, A., Tamura, A.: Eﬃciently scanning all spanning trees of an undirected graph. J. Oper. Res. Soc. Jpn. 38(3), 331–344 (1995). https://doi.org/10.15807/ jorsj.38.331  
   
  Communication-Eﬃcient Distributed Graph Clustering and Sparsiﬁcation Under Duplication Models Chun Jiang Zhu(B) University of North Carolina at Greensboro, Greensboro, USA [email protected]   
   
  Abstract. In this paper, we consider the problem of clustering graph nodes and sparsifying graph edges over distributed graphs, when graph edges with possibly edge duplicates are observed at physically remote sites. Although edge duplicates across diﬀerent sites appear to be beneﬁcial at the ﬁrst glance, in fact they could make the clustering and sparsiﬁcation more complicated since potentially their processing would need extra computations and communications. We propose the ﬁrst communication-optimal algorithms for two well-established communication models namely the message passing and the blackboard models. Speciﬁcally, given a graph on n nodes with edges observed at s sites, ˜ ˜ + s) (O ˜ our algorithms achieve communication costs O(ns) and O(n hides a polylogarithmic factor), which almost match their lower bounds, Ω(ns) and Ω(n + s), in the message passing and the blackboard models respectively. The communication costs are asymptotically the same as those under non-duplication models, under an assumption on edge distribution. Our algorithms can also guarantee clustering quality nearly as good as that of centralizing all edges and then applying any standard clustering algorithm. Moreover, we perform the ﬁrst investigation of distributed constructions of graph spanners in the blackboard model. We provide almost matching communication lower and upper bounds for both multiplicative and additive spanners. For example, the communication lower bounds of constructing a (2k − 1)-spanner in the blackboard with and without duplication models are Ω(s + n1+1/k log s) and Ω(s + n1+1/k max{1, s−1/2−1/(2k) log s}) respectively, which almost ˜ + n1+1/k ) for both models. match the upper bound O(s Keywords: Distributed Graph Clustering Spectral Sparsiﬁers · Graph Spanners  
   
  1  
   
  · Graph Sparsiﬁcation ·  
   
  Introduction  
   
  Graph clustering is one of the most fundamental tasks in machine learning. Given a graph consisting of a node set and an edge set, graph clustering This work was supported by UNC-Greensboro start-up funds. c The Author(s), under exclusive license to Springer Nature Switzerland AG 2023  M. Mavronicolas (Ed.): CIAC 2023, LNCS 13898, pp. 383–398, 2023. https://doi.org/10.1007/978-3-031-30448-4_27  
   
  384  
   
  C. J. Zhu  
   
  asks to partition graph nodes into clusters such that nodes within the same cluster are “densely-connected” by graph edges, while nodes in diﬀerent clusters are “loosely-connected”. Graph clustering on modern large-scale graphs imposes high computational and storage requirements, which are too expensive to obtain from a single machine. In contrast, distributed computing clusters and server storage are a popular and cheap way to meet the requirements. Distributed graph clustering has received considerable research interests, e.g., [CSWZ16,SZ19,ZZL+19]. Interestingly, these works show their close relationships with (distributed) graph sparsiﬁcation. Graph sparsiﬁcation is the task of approximating an arbitrary graph by a sparse graph that has a reduced number of edges while approximately preserving certain property. It is often useful in the design of eﬃcient approximation algorithms, since most algorithms run faster on sparse graphs than the original graphs. Several notions of graph sparsiﬁcation have been proposed. Spectral sparsiﬁers [ST11] well approximate the spectral property of the original graphs and can be used to approximately solve linear systems over graph Laplacian, and to approximate eﬀective resistances, spectral clustering, and random walk properties [SS11,CSWZ16]. On the other hand, graph spanners are a type of graph sparsiﬁers that well approximate shortest-path distances in the original graph. A subgraph H of an undirected graph G is called a k-spanner of G if the distance between any pair of vertices in H is no larger than k times of that in G, and k is called the stretch factor. It is well known that for any n-vertex graph, there exists a spanner of stretch 2k − 1 and size (the number of edges) O(n1+1/k ) [TZ05]. This is optimal if we believe the Erdos’s girth conjecture [Erd64]. Many research eﬀorts were then devoted to additive spanners, where the distance between any vertex pair is no larger by an additive term β instead of a multiplicative factor. Here the spanner is called a +β-spanner. There have been diﬀerent constructions of +2-, +4-, +6-spanners of size O(n3/2 ), O(n7/5 ), and O(n4/3 ), respectively [BKMP10,Che13]. Spanners have found a wide range of applications in network routing, synchronizers and broadcasting, distance oracles, and preconditioning of linear systems [TZ05,ABS+20]. In an n-vertex distributed graph G(V, E), each of s sites, Si , holds a subset of edges Ei ⊆ E on a common vertex set V and their union is E = ∪si=1 Ei . We consider two well-established models of communication, the message passing model and blackboard model, following the above work. In the former, there is a communication channel between every site and a distinguished coordinator. Each site can send a message to another site by ﬁrst sending to the coordinator, who then forwards the message to the destination. In the latter, sites communicate with each other through a shared blackboard such as a broadcast channel. The models can be further considered in two settings: edge sets of diﬀerent sites are disjoint (non-duplication models) and they can have non-empty intersection (duplication models). Here the major objective is to minimize the communication cost that is usually measured by the total number of bits communicated. A typical framework of distributed graph clustering is to employ graph sparsiﬁcation tools to signiﬁcantly reduce the size of edge sets of diﬀerent sites while  
   
  Communication-Eﬃcient Distributed Graph Clustering  
   
  385  
   
  Fig. 1. An illustrating example for challenges in processing edge duplicates across sites. For all subﬁgures, edge weights are one unless stated explicitly and edges are distributed at two sites: solid edges are in site S1 and dash edges are in S2 . (a): a graph G without edge duplication. The graph G in (b) is similar to G but edge e1 (and e2 ) appears in both sites S1 and S2 as e11 and e21 (e12 and e22 ), respectively. (c) shows the decomposability. Each site Si constructs a spectral sparsiﬁer Hi of its local graph and their union is a spectral sparsiﬁer of G. However, the decomposability does not work for G as in (d). It is unknown how to process the two “duplicates” of e1 and e2 , e.g., e11 and e21 with diﬀerent weights 4 and 1.  
   
  keeping structural properties. [CSWZ16] proposed to compute spectral sparsiﬁers for the graphs at diﬀerent sites and transmit them to the coordinator. Upon receiving all sparsiﬁers, the coordinator takes their union and applies a standard clustering algorithm, e.g., [NJW01]. However, all the existing methods that follow this framework such as [CSWZ16,ZZL+19] only work in non-duplication models. The assumption that edge sets of diﬀerent sites are disjoint is crucial to get the decomposability of spectral sparsiﬁers: the union of spectral sparsiﬁers of subgraphs at diﬀerent sites is a spectral sparsiﬁer of the distributed graph. Unfortunately, the decomposability does not work in duplication models. When edge sets of diﬀerent sites have non-empty intersection, it is unclear how to process edge “duplicates” that are possible to have diﬀerent edge weights after sparsiﬁcation. See Fig. 1 for a concrete example. To the best of our knowledge, none of the existing algorithms can perform distributed graph clustering in the more general duplication models with reasonable theoretical guarantees on both communication cost and clustering quality. Instead of restoring the decomposability and turning to the framework, our algorithms are built based on the construction of spectral sparsiﬁers by graph spanners [KX16]. The adaptation of the algorithm to the duplication models need new algorithmic procedures such as weighted graph spanners and uniform sampling. Although distributed constructions of graph spanners have been studied in message passing and CONGEST models [CHKPY18,FWY20,ZLB21], unfortunately they have not been systematically studied in the blackboard model. The blackboard model represents distributed systems with a broadcast channel. It can be viewed as a model for single-hop wireless networks and has received increasingly growing research [CSWZ16,DOR21,VWW20]. In the second part of this paper, we also investigate the problem of constructing graph spanners under the blackboard with both duplication and non-duplication models and obtain several almost matching communication lower and upper bounds.  
   
  386  
   
  C. J. Zhu  
   
  Table 1. Communication complexity of computing graph spanners in the blackboard model, where n is the number of vertices in the input graph and s is the number of sites. Problem  
   
  Upper Bound  
   
  Lower Bound Duplication  
   
  Non-duplication ˜ + n1+1/k ) (2k − 1)-spanner O(s Ω(s + n1+1/k max{1, √ ˜ + n n + s) Ω(s + n3/2 ) +2 or 3-spanner O(s √ ˜ + n n + s) Ω(s + n4/3−o(1) ) O(s +k-spanner  
   
  log s }) s(1+1/k)/2  
   
  Ω(s + n1+1/k log s) Ω(s + n3/2 log s) Ω(s + n4/3−o(1) log s)  
   
  Table 2. Communication complexity of computing graph spanners in the message passing model [FWY20]. Problem  
   
  Upper Bound Non-duplication Duplication 1−2/k 1+1/k 1+1/k ˜ ˜ (2k − 1)-spanner O(ks n + snk) O(sn ) √ 3/2 ˜ ˜ O(sn3/2 ) +2 or 3-spanner O( sn + sn)  3/2 ˜ s/kn3/2 + snk) ˜ O( O(sn +k-spanner )  
   
  Lower Bound Non-duplication Duplication Ω(ks1/2−1/(2k) n1+1/k + sn) Ω(sn1+1/k ) √ Ω( sn3/2 + sn) Ω(sn3/2 ) Ω(n4/3−o(1) + sn)  
   
  Ω(sn4/3−o(1) )  
   
  Our Contributions. We perform the ﬁrst investigation of distributed graph clustering and spectral sparsiﬁcation under duplication models. We propose communication-optimal (up to polylogarithmic factor) algorithms with com˜ ˜ + s) in the message passing and blackboard munication cost O(ns) and O(n with duplication models, respectively. Interestingly, the communication costs are asymptotically the same as the those in the non-duplication models under an assumption on edge distribution: the probability of an edge residing at each of the sites is a known value. This is practical when the popularity or degree of duplication of edges is obtainable. It is guaranteed that the quality of our clustering results is nearly as good as the simple method of centralizing all edge sets at diﬀerent sites and then applying a standard clustering algorithm, e.g., [NJW01]. Furthermore, we study distributed constructions of graph spanners in the blackboard models with and without edge duplication in order to improve our poor understanding on the communication complexity. Table 1 summarizes our main ﬁndings and Table 2 provides the communication complexity in the message passing model [FWY20]. We conﬁrm that the blackboard model is able to signiﬁcantly reduce the communication complexity compared to the message passing model. Unlike the problem of distributed clustering and spectral sparsiﬁcation, edge duplication potentially brings more communications for distributed spanner construction problem. See detailed discussions in Sect. 4. Related Work. There have been extensive research on graph clustering in the distributed setting, e.g., [YX15,CSWZ16,SZ19,ZZL+19]. [YX15] proposed a divide and conquer method for distributed graph clustering. [CSWZ16] used spectral sparsiﬁers in graph clustering for two distributed communication mod-  
   
  Communication-Eﬃcient Distributed Graph Clustering  
   
  387  
   
  els to reduce communication cost. [SZ19] presented a computationally and communication eﬃcient node degree based sampling scheme for distributed graph clustering. [ZZL+19] studied distributed dynamic graph clustering based on the monotonicity property of graph sparsiﬁcation. However, all these methods assume that there are no edge duplicates across diﬀerent sites and do not work in the more general duplication setting. Graph spanners have been studied in the non-distributed model [TZ05,AB16] and a few distributed models [CHKPY18,FWY20]. [CHKPY18] studied distributed constructions of pairwise spanners that approximate distances only for some pairs of vertices in the CONGEST model. [FWY20] studied distributed construction of a serials of graph spanners in the message passing with and without duplication models. But, there exists no prior work considering such construction in the blackboard model, which has been a widely adopted communication model [BO15,VWW20,DOR21].  
   
  2  
   
  Deﬁnitions and Notations  
   
  A weighted undirected graph G(V, E, W ) consists of a vertex set V , an edge set E and a weight function W which assigns a weight W (e) to each edge e ∈ E. W can be omitted from the presentation if it is clear from the context. Throughout the paper let n = |V | and m = |E| denote the number of vertices and the number of edges in G respectively, and s be the number of remote sites G is observed. Let w be the maximum edge weight in G, i.e., w = maxe W (e). We denote by dG (u, v) the shortest-path distance from u to v in G. A α-spanner and +β-spanner for G are a subgraph H(V, E  ⊆ E) of G such that for every u, v ∈ V , dH (u, v) ≤ α ∗ dG (u, v) and dH (u, v) ≤ dG (u, v) + β, respectively.  
   
  3  
   
  Distributed Graph Clustering  
   
  In this section, we state our distributed graph clustering algorithms in the message passing and blackboard with duplication models. We ﬁrst discuss challenges introduced by edge duplicates presenting at diﬀerent sites and then show how we overcome the challenges. Deﬁnitions. Deﬁne the graph Laplacian of a graph G as L = D − A where A is the adjacency matrix of G and D is the degree matrix, i.e., a diagonal matrix with the i-th diagonal entry equal to the sum over the i-th row of A. A (1 + )spectral sparsiﬁer of G, denoted as (1 + )-SS(G), is a (possibly re-weighted) subgraph H of G such that for every x ∈ Rn , the inequality (1 − )xT LG x ≤ xT LH x ≤ (1 + )xT LG x holds. Each edge e in G has resistance R(e) = 1/W (e), and the eﬀective resistance between any two vertices u and v in G, denoted as RG (u, v), is deﬁned as the potential diﬀerence that has to be applied between them in order to drive one unit of current through the network G.  
   
  388  
   
  C. J. Zhu  
   
  Challenges. Distributed graph clustering algorithms designed for nonduplication models cannot be easily extended to duplication models. We explain the fact using [CSWZ16] in the message passing model as an example: every site Si constructs a spectral sparsiﬁer of its local graph Gi (V, Ei ) as a synopsis Hi and then transmits Hi , instead of Gi , to the coordinator. Upon receiving Hi from all sites, the coordinator takes their union, H = ∪si=1 Hi as the constructed structure. The algorithm is based on the decomposability property of spectral sparsiﬁers. To see this, for every i ∈ [1, s], by deﬁnition of spectral sparsiﬁers, we have for every vector x ∈ Rn , (1 − )xT LGi x ≤ xT LHi x ≤ (1 + )xT LGi x. Summing all inequalities for i ∈ [1, s], we get that    xT LGi x ≤ xT LHi x ≤ (1 + ) xT LGi x. (1 − ) i∈[1,s]  
   
  i∈[1,s]  
   
  i∈[1,s]  
   
  s  
   
  In the non-duplication model, it is easy to check that i=1 LGi = LG by the deﬁnition of Laplacian matrix. Then the above inequality is equivalent to (1 − )xT LG x ≤ xT LH x ≤ (1 + )xT LG x,  
   
  (1)  
   
  which concludes that H is a (1+)-spectral sparsiﬁer of G. Under the duplication s model, however, it is clear that i=1 LGi = LG and thus Inequality (1) does not hold any longer. In other words, the structure H constructed using the same principle is not a spectral sparsiﬁer of G. See Fig. 1 for an illustrating example. Proposed Method. Restoring the decomposability of spectral sparsiﬁers in the duplication models appears to be quite challenging. We avoid it by asking every site cooperates to construct a spectral sparsiﬁer of the distributed graph in the coordinator, who can then get clustering results by any standard clustering algorithm. A standard method of computing spectral sparsiﬁers [SS11] is to sample each edge in the input graph with a probability proportional to its eﬀective resistance and then include the sampled edges (after appropriate weight rescaling) into the sparsiﬁer. But, when there are duplicated edges across diﬀerent sites, an edge (u, v) may get sampled more than once at diﬀerent sites, thereby resulting in multiple edges of possibly diﬀerent weights between u and v, e.g., edges e11 and e21 in Fig. 1. It is unclear how to process these edges to guarantee the resulting structure is always a spectral sparsiﬁer. As in Fig. 1, simply taking union by summing edge weights does not produce a valid spectral sparsiﬁer. Instead of using the classic sampling method, we propose to make use of the fact that spectral sparsiﬁers can be constructed by graph spanners [KX16] to compute spectral sparsiﬁers in the coordinator. The connection between spectral sparsiﬁers and graph spanners allows us to convert spectral sparsiﬁcation to graph spanner construction and uniform sampling under duplication models. In the followings, we ﬁrst introduce the algorithm of [KX16] and then discuss how to adapt the algorithm in the message-passing and blackboard under duplication models. The Algorithm of [KX16]. Given a weighted graph, their algorithm ﬁrst determines a set of edges that has small eﬀective resistance through graph spanners. Speciﬁcally, it constructs a t-bundle log n-spanner J = J1 ∪ J2 ∪ · · · ∪ Jt ,  
   
  Communication-Eﬃcient Distributed Graph Clustering  
   
  389  
   
  that is, a sequence of log n-spanners Ji for each graph Gi = G − ∪i−1 j=1 Jj with −2 1 ≤ i ≤ t = O( log n). Intuitively, it peels oﬀ a spanner Ji from the graph Gi to get Gi+1 before computing the next spanner Ji+1 , i.e., J1 is a spanner of G, J2 is a spanner of G − J1 , etc. The t-bundle spanner guarantees that each non-spanner edge (edge not in the spanner) has t edge-disjoint paths between its endpoints in the spanner (and thus in G), serving as a certiﬁcate for its small eﬀective resistance. The algorithm then uniformly samples each non-spanner edge with a ﬁxed constant probability, e.g., 0.25 and scales the weight of each sampled edge proportionally, e.g., by 4 to preserve the edge’s expectation. By the matrix concentration bounds, it is guaranteed that the spanner together with the sampled non-spanner edges are a moderately sparse spectral sparsiﬁer, in which the number of edges has been reduced by a constant factor. The desirable spectral sparsiﬁer can be obtained by repeating the process until we get a suﬃcient sparsity, which happens after logarithmic iterations. Weighted Graph Spanners. An important building block in [KX16] is the construction of graph spanners of stretch factor log n, which can be used to construct the t-bundle log n-spanner. Unfortunately, there is no algorithm that can generate such a spanner under the duplication models. [FWY20] developed an algorithm for constructing (2k−1)-spanners in unweighted graphs under the message passing with duplication model through the implementation of the greedy algorithm [ADD+93]. But the algorithm does not work in weighted graphs, where the greedy algorithm would need to process the edges in nondecreasing order of their weights. This seems to be a notable obstacle in both the message passing model and the blackboard model. In this paper, we ﬁrst propose an algorithm for constructing (4k−2)-spanners in weighted graphs under the message passing with duplication model. We are able to overcome the challenge in weighted graphs at the expense of a larger stretch factor 4k − 2. However, this is suﬃcient for the construction of log nspanners in weighted graphs by setting the parameter k = O(log n). Speciﬁcally, we divide the range of edge weights [1, w] into logarithmic intervals, where the maximum edge weight w is assumed to be polynomial in n1 . Then we process edges in each logarithmic scale [2i−1 , 2i ), where 1 ≤ i ≤ log2 (nw), as follows. Each site Sj in order decides which of its edge e ∈ Ej of weight in [2i−1 , 2i ) to include into the current spanner H. If including the edge e results in a cycle of at most 2k − 1 edges, then the shortest distance between e’s endpoints in the current spanner is guaranteed to be less than (4k − 2)W (e) (see our proof below). Thus the edge can be discarded. Otherwise, we update the current spanner H by including e. After completing processing of Ej , Sj forwards the possibly updated spanner H to the next site. The algorithm is summarized in Algorithm (Alg.) 1. Theorem 1. Given a weighted graph and a parameter k > 1, Algorithm 1 con1+1/k ˜ ) in the message structs a (4k − 2)-spanner using communication cost O(sn passing with or without duplication model. 1  
   
  This is a common and practical assumption for modern graphs.  
   
  390  
   
  C. J. Zhu  
   
  Algorithm 1. Spanner(G, k): (4k − 2)-spanners under duplication models Input: Graph G(V, E, W ) and a parameter k > 1 Output: Spanner H 1: H ← ∅ 2: for i ∈ [1, log2 (nw)] do 3: for each site Sj do 4: Wait for H from site Sj−1 5: for each edge e ∈ Ej of weight in [2i−1 , 2i ) do 6: if (V, H ∪ {e}) does not contain a cycle of ≤ 2k edges then 7: H ← H ∪ {e} 8: end if 9: end for 10: Transmit H to the next site Sj+1 11: end for 12: end for 13: return H;  
   
  Proof. We ﬁrst prove that the stretch factor is 4k − 2. For each edge (u, v) ∈ E, if (u, v) ∈ H, it must be that including the edge (u, v) would close a cycle of length ≤ 2k. That is, there exists a path P of ≤ 2k − 1 edges between u and v in H. Since we process edges in logarithmic scale, the edge weights in P cannot be larger than 2W (u, v). Thus the path length of P is at most (4k − 2)W (e). Therefore, the output H is a (4k − 2)-spanner. We then prove the communication cost. By construction, the output graph H has girth (the minimum number of edges in a cycle contained in the graph) larger than 2k. It is well known that a graph with girth larger than 2k have O(n1+1/k ) edges [ADD+93]. Then H always has O(n1+1/k ) edges throughout the processing 1+1/k ˜ ). of each logarithmic interval. Thus the total communication cost is O(sn The algorithm works for both with and without duplication settings, which do not aﬀect the communication complexity.  Algorithm 1 can be extended to the blackboard model with the following modiﬁcation: In Line 10, if site Sj does change H by adding some edge(s), it transmits the updated spanner H to the blackboard, instead of the next site; otherwise, it sends a special marker of one bit to the blackboard to indicate that it has completed the processing. The results are summarized in Theorem 2. In Sect. 4, we will show that the communication cost can be reduced to 2k − 1 in unweighted graphs. Theorem 2. The communication complexity of constructing a (4k − 2)-spanner in weighted graphs under the blackboard with or without duplication model is ˜ + n1+1/k ). In unweighted graph, the stretch factor can be reduced to 2k − 1. O(s Constructing t-bundle log n-spanner. Recall that a t-bundle log n-spanner J = J1 ∪ J2 ∪ · · · ∪ Jt , where Ji is a log n-spanner for graph Gi = G − ∪i−1 j=1 Jj , for 1 ≤ i ≤ t. When i = 1, G1 = G is a distributed graph with each site Sj having  
   
  Communication-Eﬃcient Distributed Graph Clustering  
   
  391  
   
  edge set Ej . We can use Algorithm 1 with k = (2 + log n)/4 to compute a log nspanner J1 of G1 . For 2 ≤ i ≤ t, Gj = Gj−1 − Jj is again a distributed graph: each site Sj knows which of its edges Ej was included in J1 , J2 , · · · , Ji−1 and those edges are excluded from its edge set Ej − J1 − J2 − · · · − Ji−1 . Therefore, the construction of a t-bundle log n-spanner invokes Algorithm 1 for t times. Because of t = O(−2 log n) and Theorems 1 and 2, the total communication ˜ costs in the message passing and blackboard with duplication models are O(sn) ˜ + n), respectively. and O(s Uniform Sampling. After the spanner construction, the algorithm of [KX16] then uniformly samples each non-spanner edge with a ﬁxed probability, e.g., 0.25 and scales the weight of each sampled edge proportionally, e.g., by 4. We observe that sampling with a ﬁxed probability is much more friendly to edge duplicates as compared to sampling with a varied probability used in traditional methods such as [FHHP11]. For example in Fig. 1, if the duplicates e11 and e21 of e1 are both sampled (under a ﬁxed probability 0.25), they still have the same weight 4W (e1 ) and are edge duplicates again in the next iteration. If one of them, say e11 , is not sampled, it is removed from the (local) graph at site S1 and will not formulate duplicates with e21 at site S2 . In contrast, non-uniform sampling could result in sampled edges of rather diﬀerent weights, which may not be even considered as duplicates. However, uniform sampling under duplication models is still very challenging: if a ﬁxed probability is used for every edge, an edge with d duplicates across diﬀerent sites is processed/sampled for d times, each at one of the d sites, and thus has a higher probability being sampled than another edge with smaller duplicates. This results in a non-uniform sampling. To achieve the uniform sampling, we suppose that the probability of an edge e residing at each of the sites is a known value re . If we set the probability of random sampling at each site as pe , then the probability that the edge is not sampled at each site is 1 − pe ∗ re . It can be derived that the probability that e is sampled by at least one site is p = 1 − (1 − pe ∗ re )s . Since the values of re and s are known, we can tune the value of pe to get the expected sampling probability p = 0.25. At some site, if e is sampled and added to H, we update its presenting probability as pe ∗ re , which will be used in the next iteration. Otherwise (if e is not sampled), it is discarded and will not participate in the next iteration. See the details in Algorithms 2 and 3. The main algorithm, Algorithm 3 computes (1 + )-spectral sparsiﬁer in  
   
  log ρ iterations of Light-SS, where ρ is a sparsiﬁcation parameter. The communication cost of Light-SS is composed of the cost for the bundle spanner construction and the cost for non-spanner edge sampling. If the sampled edges ˜ are transmitted to the coordinator, the communication cost O(m) could be prohibitively large. To see this, the number of edges in the output Gi after each iteration is only reduced by a constant factor because the uniform sampling removes 3/4 of the non-spanner edges in expectation. To improve the communication cost, we keep sampled edges in each iteration at local sites and do not transmit them to the coordinator except for the very last iteration. Then similar to the input graph G, the output Gi for each iteration i ∈ [1, log ρ − 1] are also  
   
  392  
   
  C. J. Zhu  
   
  Algorithm 2. Light-SS under duplication models Input: G(V, E),  ∈ (0, 1), and probability re for each edge e Output: H with updated re for each edge e ∈ H 1: G1 ← G; J ← ∅ 2: for i ∈ [1, 24 log2 n/2 ] do 3: Ji ← Spanner(Gi , (2 + log n)/4) 4: Gi+1 ← Gi − Ji 5: end for 6: H ← J; re ← re 7: for each site Si do 8: for each edge e ∈ Ei − J do 9: Sample the edge e with probability pe such that 1 − (1 − pe ∗ re )s = 0.25; if e is sampled, adds e to H with a new weight 4W (e) and set re to pe ∗ re 10: end for 11: if it is the last iteration of the for-loop in Line 2 of Alg. 3 then 12: Transmit the sampled edges to the coordinator 13: end if 14: end for 15: return H;  
   
  Algorithm 3. (1 + )-SS under duplication models Input: G(V, E), probability re for each edge e, and parameters  ∈ (0, 1) and ρ > 1 Output: H 1: G0 ← G 2: for i ∈ [1, log ρ ] do 3: Gi ← Light-SS (Gi−1 , / log ρ , re ) 4: end for 5: H ← Glog ρ {H is already transmitted to and known by the coordinator} 6: return H;  
   
  a distributed graph with possible edge duplication. Edge duplicates come from two sources: either the edge is included into the bundle spanner, or the edge is sampled by more than one site. In this way, the communication cost of Light-SS (except for the last iteration) contains only the cost of constructing the bundle ˜ spanner. In the last iteration, the number of sampled edges must be small O(n), which is also the communication cost of their transmission. Therefore, the communication costs of Algorithm 3 in the message passing and blackboard under ˜ ˜ + s), respectively. Putting all together, duplication models are O(ns) and O(n our results for distributed spectral sparsiﬁcation under duplication models are summarized in Theorem 3 with its formal proof deferred to Appendix. Theorem 3 (Spectral Sparsification under Duplication Models). For a distributed graph G and parameters  ∈ (0, 1) and ρ = O(log n), Algorithm 3 ˜ can construct a (1 + )-spectral sparsiﬁer for G of expected size O(n) using com˜ ˜ munication cost O(ns) and O(n + s) in the message passing and blackboard with duplication models respectively, with probability at least 1 − n−c for constant c.  
   
  Communication-Eﬃcient Distributed Graph Clustering  
   
  393  
   
  Clustering in the Sparsifier. After obtaining the spectral sparsiﬁer of the distributed graph, the coordinator applies a standard clustering algorithm such as [NJW01] in the sparsiﬁer to get the clustering results. We can guarantee a clustering quality nearly as good as the simple method of centralizing all graph edges and then performing a clustering algorithm. Before formally stating the results, we deﬁne a few notations. For everynode set S in a graph G, let its  volume and conductance be W (u, v) and φ (S) = ( volG (S) = G u∈S,v∈V u∈S,v∈V −S W (u, v))/volG (S), respectively. Intuitively, a small value of conductance φ(S) implies that nodes in S are likely to form a cluster. A collection of subsets A1 , · · · , Ak of nodes is called a (k-way) partition of G if (1) Ai ∩ Aj = ∅ for 1 ≤ i = j ≤ k; and (2) ∪ki=1 Ai = V . The k-way expansion constant is deﬁned as ρ(k) = minpartitionA1 ,··· ,Ak maxi∈[1,k] φ(Ai ). A lower bound on ΥG (k) = λk+1 /ρ(k) implies that G has exactly k well-deﬁned clusters [PSZ15], where λk+1 is the k + 1 smallest eigenvalue of the normalized Laplacian matrix. For any two sets X and Y , their symmetric diﬀerence is deﬁned as XΔY = (X − Y ) ∪ (Y − X). Theorem 4. For a distributed graph G with ΥG (k) = Ω(k 3 ) and an optimal partition P1 , · · · , Pk achieving ρ(k) for some positive integer k, there exists an algorithm that can output partition A1 , · · · , Ak at the coordinator such that for every i ∈ [1, k], vol(Ai ΔPi ) = O(k 3 Υ−1 vol(Pi )) holds with probability at least 1 − n−c for constant c. The communication costs in the message passing and ˜ ˜ + s), respectively. blackboard with duplication models are O(ns) and O(n To the best of our knowledge, this is the ﬁrst algorithm for performing distributed graph clustering in the message passing and blackboard with edge duplication models. Remarkably, we can show that the communication costs are optimal, almost matching the communication lower bounds Ω(ns) and Ω(n + s), respectively. It is interesting to see that the communication costs incurred under duplication models are asymptotically the same as those under non-duplication models. In other words, edge duplication does not incur more communications in the graph clustering task, unlike other problems such as graph spanner construction as we will show in Sect. 4. Although we make an assumption on the edge distribution probability, we conjecture that when the assumption is relaxed, i.e., graph edges are presenting at diﬀerent sites arbitrarily, the communication upper bounds remain the same in duplication models. We leave the study as an important future work.  
   
  4  
   
  Spanner Constructions in the Blackboard Model  
   
  In this section, we study distributed constructions of graph spanners in the blackboard models with and without edge duplication. This, unfortunately, has not been investigated by prior work yet. We prove several interesting communication upper and lower bounds for typical graph spanners as summarized in Table 1. Due to limit of space, we cannot enumerate every result in Table 1. Hence, here we only describe the general (2k − 1)-spanners and move the additive spanners  
   
  394  
   
  C. J. Zhu  
   
  to the Appendix. We start with the duplication model, followed by the nonduplication model. The lower bounds obtained in Theorems 5 and 6 hold in both weighted and unweighted graphs and the rest results are on unweighted graphs. Duplication Model. In Sect. 3, we have provided the communication upper ˜ + n1+1/k ), of constructing (2k − 1)-spanners in unweighted graphs bound, O(s in Theorem 2. We now show that the communication lower bound is Ω(s + n1+1/k log s). Theorem 5. The communication lower bound of constructing a (2k−1)-spanner in the blackboard with duplication model is Ω(s + n1+1/k log s). Proof. To prove this, we target a more general statement that works for every spanner. Lemma 1. Suppose there exists an n-vertex graph F of size f (n) such that F is the only spanner of itself or no proper subgraph F  of F is a spanner. Then the communication complexity of computing a spanner in the blackboard with duplication model is Ω(s + f (n) log s) bits. Proof. Our proof is based on the reduction from the Multiparty Set-Disjointness problem (DISJm,s ) to graph spanner computation. In DISJm,s , s players receive inputs X1 , X2 , · · · , Xs ⊆ {1, · · · , m} and their goal is to determine whether or not ∩si=1 Xi = ∅. Now we construct a distributed graph G from the graph F and an instance of DISJf (n),s as follows. We add edge ej in F to site i if j ∈ Xi for 1 ≤ j ≤ f (n). If the coordinator outputs F as the spanner, we report ∩si=1 Xi = ∅; otherwise we report ∩si=1 Xi = ∅. It can be seen that the coordinator outputs F iﬀ all its edges appear at some site, which is the case ∩si=1 Xi = ∅. Finally, according to the communication lower bound of DISJm,s in the blackboard model [BO15], Ω(s + m log s), the communication complexity of computing a spanner is Ω(s + f (n) log s).  For the lower bound of (2k − 1)-spanners, the Erdos’s girth conjecture states that there exists a family of graphs F of girth 2k + 1 and size Ω(n1+1/k ) [Erd64]. This implies that there exists only one (2k − 1)-spanner of F , that is F itself. It is because the deletion of any edge in F would result in that the distance between the endpoints of the edge becomes at least 2k. Then by Lemma 1, we  get the lower bound Ω(s + n1+1/k log s). Non-Duplication Model. In the non-duplication model, we prove a lower bound via a reduction from the lower bound for the duplication model. Theorem 6. The communication complexity of constructing a (2k − 1)-spanner in the blackboard without duplication model is Ω(s + n1+1/k max {1, s−1/2−1/(2k) log s}).  
   
  Communication-Eﬃcient Distributed Graph Clustering  
   
  395  
   
  √ Fig. 2. Converting a graph with duplication on s sites and n/ s vertices into a graph without duplication on s sites and n vertices  
   
  Proof. We can construct an instance of the (2k − 1)-spanner problem without duplication on s sites and n vertices from√an instance of the (2k − 1)-spanner problem with duplication on s sites and n/ s vertices. Speciﬁcally, we construct a graph√G with no duplication by replacing each vertex v by a set of vertices Sv of size s. Since there are at most s copies of an edge (u, v) in the original graph G across the s sites, we can assign each server’s copy to a distinct edge (u , v  ) ∈ Su × Sv in G . See Fig. 2 for an illustrating example of the construction. Then we apply an algorithm for the without duplication model, e.g., the algorithm in Theorem 2, to get a (2k −1)-spanner H  of G . Finally, the coordinator computes a (2k − 1)-spanner H of G by including an edge (u, v) in H if there is at least one edge between Su and Sv in H  . To show the constructed H is a (2k − 1)-spanner of G, let us consider an edge (u, v) ∈ G. By construction, there must be an edge (u , v  ) ∈ Su × Sv in G . Because H  is a (2k − 1)-spanner of G , it contains a path P  of length at most (2k − 1) · W (u, v) between u and v  . For every edge (x , y  ) in P  where x ∈ Sx , y  ∈ Sy , we have included an edge (x, y) in H. Therefore, there exists a path P of length at most (2k − 1) · W (u, v) between u and v in H and thus H is a (2k − 1)-spanner of G. Since the lower bound in the duplication model is Ω(s + n1+1/k log s) (Theorem √ 5), we have that the lower bound for the nonduplication model is Ω(s + (n/ s)1+1/k log s) = Ω(s + n1+1/k s−1/2−1/(2k) log s). Since representing the result itself needs Ω(n1+1/k ), combining this with the above result get the ﬁnal lower bound, Ω(s + n1+1/k max{1, s−1/2−1/(2k) log s}).  Discussions. We highlight several interesting observations from our results in Table 1 and prior results in Table 2. 1. We demonstrate that for graph spanner constructions, the blackboard model is powerful to signiﬁcantly reduce the communication complexity compared to the message passing model. For instance in duplication models, computing 1+1/k ˜ ) in the message the (2k − 1)-spanners incurs communication cost O(sn 1+1/k ˜ +n ) in the blackboard model. This is not passing model but only O(s necessarily the case for all computing problems. For example, for computing  
   
  396  
   
  C. J. Zhu  
   
  the sum of bit vectors modulo two [PVZ16] and estimating large moments [WZ12], the complexities are the same in both communication models. 2. To trade better communication bounds, spanners constructed in a distributed manner may include more edges than the smallest number of edges required in a centralized model. For example in +2-spanners and 3-spanners, the number √ n + s, which is slightly larger than of edges in the constructed structure is n √ the optimal size n n in a centralized model. It is still open to investigate how to reduce the communication cost while maintaining an optimal number of edges in the spanner. ˜ + n1+1/k ) with a 3. For constructing (2k − 1)-spanners, the upper bound O(s 1+1/k log s). logarithmic factor hidden is very close to the lower bound Ω(s √ +n ˜ + n n + s) and lower There is a small gap between the upper bound O(s bound Ω(s+n3/2 log s) for +2 or 3-spanners. The gap is larger in +k-spanners (for k > 2) where the lower bound becomes Ω(s + n4/3−o(1) log s). But this problem also happens in the message passing model. The construction of +kspanners often involves more complex operations and might not be easy to adapt to distributed models.  
   
  5  
   
  Conclusions and Future Work  
   
  In this paper, we propose the ﬁrst set of algorithms that can perform distributed graph clustering and spectral sparsiﬁcation under edge duplication in the two well-established communication models, the message passing and the blackboard models. We show the optimality of the achieved communication costs while maintaining a clustering quality nearly as good as a naive centralized method. We also perform the ﬁrst investigation of distributed algorithms for constructing graph spanners in the blackboard under both duplication and non-duplication models. As the future work, we will study how to achieve the optimal communication complexity for distributed graph clustering while relaxing the assumption made. Furthermore, most of the existing work concentrate on global clustering but ignore local clustering which only returns the cluster of a given seed vertex. We will devise a local clustering method that hopefully enjoys communication cost not dependent on the size of the input graph and is more communication-eﬃcient than traditional global graph clustering methods. Cut sparsiﬁers are another type of graph sparsiﬁers and they can approximately preserve all the graph cut values in the original graph. Although spectral sparsiﬁers are also cut sparsiﬁers, the latter might have smaller number of edges. Because the algorithm of [KX16] can be generalized to cut sparsiﬁers, it is promising to adapt the techniques in this work to the new problem. Finally, it is an intriguing open problem to improve the upper bounds or lower bounds and close their gap in both duplication and non-duplication models.  
   
  Communication-Eﬃcient Distributed Graph Clustering  
   
  397  
   
  References [AB16] Abboud, A., Bodwin, G.: The 4/3 additive spanner exponent is tight. In: Proceedings of the ACM STOC Conference, pp. 351–361 (2016) [ABS+20] Ahmed, R., et al.: Graph spanners: a tutorial review. Comput. Sci. Rev. 37, 100253 (2020) [ADD+93] Alth¨ ofer, I., Das, G., Dobkin, D., Joseph, D., Soares, J.: On sparse spanners of weighted graphs. Discret. Comput. Geom. 9(1), 81–100 (1993). https://doi.org/10.1007/BF02189308 [BKMP10] Baswana, S., Kavitha, T., Mehlhorn, K., Pettie, S.: Additive spanners and (α, β)-spanners. ACM Trans. Algorithms 7(1) (2010) [BO15] Braverman, M., Oshman, R.: The communication complexity of numberin-hand set disjointness with no promise. Electron. Colloq. Comput. Complex 22, 2 (2015) [Che13] Chechik, S.: New additive spanners. In: Proceedings of the SIAM SODA Conference, pp. 498–512 (2013) [CHKPY18] Censor-Hillel, K., Kavitha, T., Paz, A., Yehudayoﬀ, A.: Distributed construction of purely additive spanners. Distrib. Comput. 31(3), 223–240 (2018) [CSWZ16] Chen, J., Sun, H., Woodruﬀ, D.P., Zhang, Q.: Communication-optimal distributed clustering. In: Proceedings of the NIPS Conference, pp. 3720– 3728 (2016) [DOR21] Dershowitz, N., Oshman, R., Roth, T.: The communication complexity of multiparty set disjointness under product distributions. In: Proceedings of the ACM STOC Conference, pp. 1194–1207 (2021) [Erd64] Erdos, P.: Extremal problems in graph theory. Theory of Graphs and Its Applications, pp. 29–36 (1964) [FHHP11] Fung, W.S., Hariharan, R., Harvey, N.J.A., Panigrahi, D.: A general framework for graph sparsiﬁcation. In: Proceedings of the ACM STOC Conference, pp. 71–80 (2011) [FWY20] Fernandez, M.V., Woodruﬀ, D.P., Yasuda, T.: Graph spanners in the message-passing model. In: Proceedings of the ITCS Conference (2020) [KX16] Koutis, I., Xu, S.C.: Simple parallel and distributed algorithms for spectral graph sparsiﬁcation. ACM Trans. Parallel Comput. 3(2), 14 (2016) [NJW01] Ng, A.Y., Jordan, M.I., Weiss, Y.: On spectral clustering: analysis and an algorithm. In Proceedings of the NIPS Conference, pp. 849–856 (2001) [PSZ15] Peng, R., Sun, H., Zanetti, L.: Partitioning well-clustered graphs: spectral clustering works! In: Proceedings of the COLT Conference, pp. 1423–1455 (2015) [PVZ16] Phillips, J.M., Verbin, E., Zhang, Q.: Lower bounds for number-in-hand multiparty communication complexity, made easy. SIAM J. Comput. 45(1), 174–196 (2016) [SS11] Spielman, D.A., Srivastava, N.: Graph sparsiﬁcation by eﬀective resistances. SIAM J. Comput. 40(6), 1913–1926 (2011) [ST11] Spielman, D.A., Teng, S.-H.: Spectral sparsiﬁcation of graphs. SIAM J. Comput. 40(4), 981–1025 (2011) [SZ19] Sun, H., Zanetti, L.: Distributed graph clustering and sparsiﬁcation. ACM Trans. Parallel Comput. 6(3), 17 (2019) [TZ05] Thorup, M., Zwick, U.: Approximate distance oracles. J. ACM 52(1), 1–24 (2005)  
   
  398  
   
  C. J. Zhu  
   
  [VWW20] Vempala, S.S., Wang, R., Woodruﬀ, D.P.: The communication complexity of optimization. In: Proceedings of the SIAM SODA Conference, pp. 1733–1752. SIAM (2020) [WZ12] Woodruﬀ, D.P., Zhang, Q.: Tight bounds for distributed functional monitoring. In: Proceedings of the ACM STOC Conference, pp. 941–960 (2012) [YX15] Yang, W., Xu, H.: A divide and conquer framework for distributed graph clustering. In: Proceedings of the ICML Conference, pp. 504–513 (2015) [ZLB21] Zhu, C., Liu, Q., Bi, J.: Spectral vertex sparsiﬁers and pair-wise spanners over distributed graphs. In: Proceedings of the ICML Conference, pp. 12890–12900 (2021) [ZZL+19] Zhu, C.J., Zhu, T., Lam, K.Y., Han, S., Bi, J.: Communication-optimal distributed dynamic graph clustering. In: Proceedings of the AAAI Conference, pp. 5957–5964 (2019)  
   
  Author Index  
   
  A Alekseev, Yaroslav 21 Asahiro, Yuichi 37 Attiya, Hagit 52  
   
  Hirsch, Edward A. 21 Hoefler, Torsten 97 Hovhannisyan, Narek 278 J Jana, Satyabrata  
   
  B Balzotti, Lorenzo 67, 82 Ben-Nun, Tal 97 Bhyravarapu, Sriram 112 Bläsius, Thomas 142 Bliznets, Ivan 127 Bshouty, Nader H. 157 Busch, Costas 172  
   
  K Katz, Matthew J. 247 Koiran, Pascal 308 Korenaga, Kana 37 Kowalski, Dariusz R. 172 Kucherov, Gregory 232 Kumar, Manish 323 Kumari, Swati 112  
   
  C Castenow, Jannik 5 Chlebus, Bogdan S. 172 E Eto, Hiroshi  
   
  293  
   
  L Lin, Guohui 37 Luan, Qi 336  
   
  37 M Mann, Kevin 187 Meyer auf der Heide, Friedhelm Mitchell, Joseph S. B. 247 Miyano, Eiji 37 Molla, Anisur Rahaman 323 Mukae, Kneto 217  
   
  F Feilhauer, Adrian 142 Fellows, Michael 353 Fernau, Henning 187 Fink, Simon D. 202 Foucaud, Florent 187 Franciosa, Paolo G. 67, 82 Fujito, Toshihiro 217 Fusy, Éric 232  
   
  N Nikoletseas, Sotiris 1 Nomaan, Asswad Sarker Nonoue, Reo 37  
   
  G Geva, Kerem 247 Gianinazzi, Lukas 97 Go, Soo 336 Golovach, Petr A. 353 H Hanaka, Tesshu 263 Harbig, Jonas 5 Harutyunyan, Hovhannes A.  
   
  O Oltchik, Yishai 97 Ono, Hirotaka 263 Otachi, Yota 263  
   
  278  
   
  P Packer, Eli 247 Padariya, Utkarsh 187  
   
  © The Editor(s) (if applicable) and The Author(s), under exclusive license to Springer Nature Switzerland AG 2023 M. Mavronicolas (Ed.): CIAC 2023, LNCS 13898, pp. 399–400, 2023. https://doi.org/10.1007/978-3-031-30448-4  
   
  368  
   
  5  
   
  400  
   
  Pan, Victor Y. 336 Persiano, Giuseppe 17 Poudel, Pavan 172  
   
  R Rahman, Md. Saidur 368 Rao, K. N. Rajath 187 Raptopoulos, Christoforos 1 Reddy, I. Vinod 112 Rosamond, Frances 353 Rutter, Ignaz 202  
   
  S Sagunov, Danil 127 Saha, Souvik 293 Saha, Subhayan 308 Sahu, Abhishek 293 Sam, Emmanuel 353 Saurabh, Saket 293 Schiller, Noa 52  
   
  Author Index  
   
  Sivasubramaniam, Sumathi Spirakis, Paul G. 1  
   
  323  
   
  T Tagin, Eugene 127 Tsuzuki, Junya 217 U Uda, Saeki  
   
  263  
   
  V Verma, Shaily  
   
  293  
   
  W Westenfelder, Jannik 142 Y Yanhaona, Muhammad Nur Z Zhao, Liang 336 Zhu, Chun Jiang 383  
   
  368  

 Report "Algorithms and Complexity: 13th International Conference, CIAC 2023, Larnaca, Cyprus, June 13–16, 2023, Proceedings 3031304470, 9783031304477"  
 ×    

 --- Select Reason ---  Pornographic  Defamatory  Illegal/Unlawful  Spam  Other Terms Of Service Violation  File a copyright complaint     

 Close  Submit    

    Contact information  
 Michael Browner   
   [email protected]    
   
   Address:   
 1918 St.Regis, Dorval, Quebec, H9P 1H6, Canada.   
   
 Support & Legal  
  O nas 
  Skontaktuj się z nami 
  Prawo autorskie 
  Polityka prywatności 
  Warunki 
  FAQs 
  Cookie Policy 
    
 Subscribe to our newsletter  
  Be the first to receive exclusive offers and the latest news on our products and services directly in your inbox.  
   Subscribe     

 Copyright © 2024 DOKUMEN.PUB. All rights reserved.        

 Unsere Partner sammeln Daten und verwenden Cookies zur Personalisierung und Messung von Anzeigen. Erfahren Sie, wie wir und unser Anzeigenpartner Google Daten sammeln und verwenden  .   Cookies zulassen

20. ATSIP_0 conference:
Bulletin d’information: November 2024      
 Archive | 2021 | Janvier 
  Février 
  Mars 
  Avril 
  Mai 
  Juin 
  Juillet 
  Aout 
  Septembre 
  Octobre 
  Novembre 
  Décembre 
  2022 | Janvier 
  Février 
  Mars 
  Avril 
  Mai 
  Juin 
  Juillet 
  Aout 
  Septembre 
  Octobre 
  Novembre 
  Décembre 
  2023 | Janvier 
  Février 
  Mars 
  Avril 
  Mai 
  Juin 
  Juillet 
  Aout 
  Septembre 
  Octobre 
  Novembre 
  Décembre 
  2024 | Janvier 
  Février 
  Mars 
  Avril 
  Mai 
  Juin 
  Juillet 
  Aout 
  Septembre 
  Octobre 
  Novembre 
  Décembre 
    Chercher      

 Actualités 
  Recherche Scientifique 
  Coopération Internationale 
  Manifestations 
  Bibliothèque 
  Divers 
  Actualités 
  Recherche Scientifique 
  Coopération Internationale 
  Manifestations 
  Bibliothèque 
  Divers 

 Chercher   

 Manifestations     
 The 6th International Conference on Advanced Technologies for Signal & Image Processing, May 24-27, 2022. Paper submission: April 05th, 2022  
   By USF    
 31 mars 2022    

 The 6 th  International Conference on Advanced Technologies for Signal and Image Processing (ATSIP’2022) is a technical conference focused on signal processing and its applications The conference will feature world-class speakers,tutorials, exhibits, and over 120 lecture. Topics include but are not limited to:  
  
 Medical image & Computer Aided Diagnoses ( | See Subtopics | ) | Habib Ben Ali (CAN) & Khalil CHTOUROU (TUN) & Lamia SELLAMI (TUN) 
  Remote sensing and assimilation ( | See Subtopics | ) | Mehrez ZRIBI (FRA) & Imed Riadh FARAH (TUN) & Abdelaziz KALLEL (TUN) 
  Speech processing and audio processing ( | See Subtopics | ) | Dijana P-DELACRETAZ (FRA) & Sofia BEN JEBARA (TUN) & Mondher FRIKHA (TUN) 
  Image and Video Processing( | See Subtopics | ) | Zied LACHIRI (TUN) & Najwa BEN AMARA (TUN) 
  Signal processing for communications and networking ( | See Subtopics | ) | Riadh ABDELFETTAH (TUN) & Christophe GROVA (CAN) & Amel BEN AZZA (TUN) 
  Data fusion modeling and applications ( | See Subtopics | ) | Ali DOUIK (TUN) & Mounir SAYADI (TUN) & Sghaier. GUIZANI (CAN) 
  Computer Modeling in Signals and Images ( | See Subtopics | ) | Ali KACHOURI (TUN) & Mohammed EL HASSOUNI (MOR) & Bhiksha RAJ (USA) 
  Embedded systems, RF & Aplications ( | See Subtopics | ) | Habib HAMAM (CA) & Mohamed GHORBEL (TUN) & Ali GHARSALLAH (TUN) 
  
 IMPORTANT DATE  
 Submission of Regular Papers………………: April 05 th , 2022 
  Notification of Paper Acceptance……………: April 15 th , 2022 
  Revised Paper Upload Deadline……………: April 25 th , 2022 
  Author’s Registration Deadline………………: May 4 th, 2022 
  http://www.lab-atms.com/atsip_2022.php    
   
 Partager sur: 

 Pour s’inscrire au Bulletin d’Information de l’Université de Sfax  
   
 []   
 1   Step 1    

 Nom          

 Prénom          

 Profession - Grade      Choisir une option  Enseignant  Postdoc  Doctorant  Master  Autre      

 Courriel       email    

 Téléphone          

 Inscription       

  keyboard_arrow_left  Previous    
 Next keyboard_arrow_right     

 © 2020, Université de Sfax - Bulletin d'information - Mentions légales    
 Powred by Codily  | All rights reserved

21. ATSIP_1 conference:
2023 3 rd  International Conference on Advanced Algorithms and Signal Image Processing (AASIP 2023)    
   
 Countdown   

 Home 
  Committee 
  Speakers 
  CFP 
  Submission Guidelines | Submission   Download 
  Registration | Registration Fee   Visa Application 
  Publication | Publication   Editorial Policy 
  Program 
  History | AASIP 2023   AASIP 2022   AASIP 2021 
  More | Contact   FQA   Cooperation   Hotel Information 

 Welcome to AASIP 2023 | Kuala Lumpur, Malaysia   

  Welcome to the 2023 3 rd  International Conference on Advanced Algorithms and Signal Image Processing（AASIP 2023)!    

 The 2023 3rd International Conference on Advanced Algorithms and Signal Image Processing（AASIP 2023) will be held on June 30-July 2, 2023 in  Kuala Lumpur, Malaysia. The c  onference aims to provide a platform for experts and scholars engaged in Advanced Algorithms and Signal Image Processing research, university graduate students and teachers to share scientific research achievements and cutting-edge technologies, understand academic development trends, broaden research ideas.  AASIP sessions will include presentations on new research results and tutorials. Papers describing original work are invited in any of the computer, advanced algorithms and signal image processing areas that the Call for Papers considers. Accepted papers will be included in the AASIP 2023 Conference Proceedings.  

 Hotel Information   

 HOTEL: Pullman Kuala Lumpur Bangsar     
 ADDRESS: No 1 Jalan Pantai Jaya, Tower 3, -59200 Kuala Lumpur  -Malaysia   
 TEL: +60-3-22981888  Kuala Lumpur       

 Keynote Speakers   

 Prof.   Chuan-Ming Liu      
 National Taipei University of Technology (NTUT), Taiwan, China | Assoc. Prof.      
 Por Lip Yee      
 University of Malaya, Malaysia | Assoc. Prof. Pavel Loskot      
 Zhejiang University-University of Illinois at Urbana-Champaign Institute (ZJUI), China | Assoc. Prof. Rajamohan Parthasarathy           
 SEGI University, Malaysia 
  
 More Information: Click    

 Publication   

 All papers will be reviewed by two or three experts from the committees. After a careful reviewing process, all accepted papers will be published by SPIE - The International Society for Optical Engineering (ISSN: 0277-786X)   , and submitted to EI Compendex  , Scopus  for indexing.  

  AASIP 2022 has successfully held an offline conference in Hulunbuir from August 19-21, 2022 and was published in November 2022.   
  
 AASIP 2022 Conference Proceedings | AASIP 2022 Indexed by EI | AASIP 2022 Indexed by Scopus 

    The AASIP 2021 was successfully held an online conference from August  27-29, 2021 and indexed by EI and SCOPUS in October 2021.   

 AASIP 2021 Conference Proceedings | AASIP 2021 Indexed by EI | AASIP 2021 Indexed by Scopus 

 Important Dates   

   Full Paper Submission Date: June 23, 2023   

  Registration Deadline: June  25, 2023   

  Final Paper Submission Date: June  27, 2023   

  Conference Dates  : June 30-July 2, 2023    

 The History of AASIP   

 Supported By   

 MENU   

 Committee    
   
 Speakers    
   
 CFP    
   
 Submission Guidelines    
   
 Registration    
   
 Publication    
   
 Program    
   
 History    
   
 More    

 Conference Date   

 December 30,2022  December 31,2022   

 Countdown   

 Submit to Important Indexes   

 SCI, EI, Scopus, CNKI    
 Contact   

  WeChat:    
    
  Phone:    
 +086-15915845634    
  E-mail：:    
 XXX@XXXX.com    

 Submission  
  Registration  
  Share   

  微信    
  QQ    
  微博    

 Scan QR Code and Check website on the phone   

 Copyright© AASIP 2023  
 2023 3 rd  International Conference on Advanced Algorithms and Signal Image Processing (AASIP 2023) http://2023.aasip.org/

22. ATSIP_2 conference:


23. IC-AI_0 conference:
The requested URL was rejected. Please consult with your administrator.  
   
  Your support ID is: < 1064046693043704181>  
   
  [Go Back]

24. IC-AI_1 conference:
19th International Conference on Artificial  
  Intelligence and Law - ICAIL 2023  
 19th-23rd June 2023  
  
  Conference Venue:  
 University of Minho , Law School, Campus de Gualtar (Building 17), Braga, Portugal 

 CFP 
  Doctoral Consortium 
  Committees 
  Speakers Info 
  Accepted Papers 
  Programme 
  Dates 
  Registration 
  Workshops 
  Venue 
  Accommodation 
  Getting to ICAIL'2023 
  Sponsors 
   Contact   

 Latest news:   
 5th June 2023   
  Regular registration deadline extended to June 9.  
 12th May 2023:   
  Programme Page updated.  
 2nd May 2023:   
  Registration Page updated.  
 27th April 2023:   
  Accepted Papers Page updated.  
 17th April 2023:   
  Added Visa Requirements information to the Venue and Getting to ICAIL'2023 page.  
 14th April 2023:   
  Doctoral Consortium Submission Deadline extended.  
 12th April 2023:   
  Sponsors Page updated.  
 7th March 2023:   
  Registration Page updated.  
 22nd February 2023:   
  Speakers Info Page updated.  
 21st February 2023:   
  Workshops Page updated.  
 3rd January 2023:   
  Submission Deadline extended.  
 1st August 2022:   
  ICAIL'2023 Conference Web site was launched.  
   
 19th ICAIL - International Conference on Artificial Intelligence and Law 2023 (ICAIL 2023)  .  
 Since 1987, the International Conference on Artificial Intelligence and Law (ICAIL) has been the foremost international conference addressing research in Artificial Intelligence and Law. It is organized biennially under the auspices of the International Association for Artificial Intelligence and Law  (IAAIL), and in cooperation with the Association for the Advancement of Artificial Intelligence  (AAAI). The conference proceedings are published by ACM  . We invite submissions of papers along a regular and three special tracks, technology demonstrations, as well as proposals for workshops and tutorials.  
 Organized by  
 University of Minho Law School | , with | JUSGOV | - Research Center for Justice and Governance, Campus de Gualtar, Braga, Portugal 
  University of Minho Informatics Departments at Engineering School | , Campus de Gualtar, Braga, Portugal 
  Centro Algoritmi 
  LASI – Intelligent Systems Associated Laboratory 
   
  Topics  
 We invite submission of original papers on Artificial Intelligence & Law, covering foundations, methods, tools, systems and applications. Topics may include, but are not limited to, the following:  
 Argument mining on legal texts 
  Classification and automatic summarization of legal text 
  Computational methods for negotiation and contract formation 
  Computer-assisted dispute resolution 
  Computable representations of legal rules and domain specific languages for the law 
  Decision support systems in the legal domain 
  Deep learning on data and text from the legal domain 
  Dialog systems in the legal domain 
  e-discovery and e-disclosure 
  e-government, e-democracy and e-justice 
  Ethical, legal, fairness, accountability, and transparency subjects arising from the use of AI systems in legal practice, access to justice compliance, and public administration 
  Explainable AI for legal practice, data, and text analytics 
  Formal and computational models of legal reasoning (e.g., argumentation, case-based reasoning), including deontic logics 
  Formal and computational models of evidential reasoning 
  Formal models of norms and norm-governed systems 
  Information extraction from legal databases and texts 
  Information retrieval, question answering, and literature recommendation in the legal domain 
  Intelligent legal tutoring systems 
  Intelligent support systems for forensics 
  Interdisciplinary applications of legal informatics methods and systems 
  Knowledge acquisition techniques for the legal domain, including related applications of natural language processing, argument, and data mining 
  Knowledge representation, knowledge engineering, and ontologies in the legal domain 
  Legal design involving AI techniques 
  Machine learning and data analytics applied to the legal domain 
  Natural language processing of legal text, including law-specific standard NLP tasks (e.g., Named Entity Recognition Semantic Role Labeling, Translation, etc.) 
  Normative reasoning by autonomous agents 
  Open and linked data in the legal domain 
  Smart contracts and application of blockchain in the legal domain 
  Visualization techniques for legal information and data 
  ICAIL is keen to broaden its scope to include topics of growing importance and to establish links to neighboring disciplines. In addition to the regular paper track ICAIL 2023 will feature the following special tracks:  
 (1) a new special cross-disciplinary outreach track on Artificial Intelligence for Empirical Legal Studies  . Legal systems have seen an increasing need to leverage data analysis to inform stakeholders, decision makers, and policy actors. This potential comes with a mandate for credible empirical research, as well as constructive communication, across communities at the intersection of law and data-driven disciplines. The empirical legal studies and AI&Law communities stand to benefit from an exchange of ideas and collaborations around concrete legal use cases, technical approaches, and commitment to using data-driven technology for policy and social good. For this track we invite short and long submissions of original papers on topics including, but not limited to:  
 Use of machine learning and/or knowledge representation techniques as part of statistical analyses of data from the legal domain 
  Use of AI methods (e.g, natural language processing) on legal data to extract information to be used as part of statistical analysis 
  Explainability and robustness of complex machine learning models towards specific legal analytic and policy objectives 
  Unstructured legal corpora and problems for data mining and discovery 
  Visualization-based exploration of legal data relevant for empirical research 
  Tools and best practices for data collection, curation, and statistical experimentation in the legal domain 
  (2) Innovative applications in AI and Law – Applications that fall within any of the core AI & Law topics. P apers in this track will be subject to the same rigorous reviewing process as regular papers, but the emphasis is less on novel scientific contributions, formal frameworks, or results and more on the innovative and novel application of techniques from AI & Law to real world problems and use cases.  
 (3) Legal, ethical, fairness, accountability, and transparency aspects of AI applications in legal practice, access to justice, compliance, and public administration – ICAIL is committed to not only further the state of the art in using AI technology in legal practice, but also about the legal and ethical ramifications of such applications. This track is intended to facilitate this discourse through the inclusion of case studies, reports on regulations efforts, lessons learned from experiments, technical contributions about monitoring and facilitating ethical use of AI in relevant areas, and other topical contributions. Papers in this track will be subject to the same rigorous reviewing process as regular papers.  
 Paper Submission  
 Papers (up to 10 pages including references for long papers, up to 5 pages including references for short papers) should present contributions from relevant topics. To maintain ICAIL’s relevance in the larger rapidly-moving field at the intersection of law and artificial intelligence, all papers must make clear their relation to legal information, reasoning, or processes as well as relation to prior work and novel scientific contribution, as well as contain a satisfying amount of discussion of their findings.  
 Papers on machine learning or data mining should include discussions of the data, methodology, results, and analysis in sufficient depth beyond merely reporting metrics. Submissions focusing on the reproduction, validation, constructive scrutinization, and extension of previously published works, datasets, and benchmarks are strongly encouraged. 
  Papers proposing formal or computational models should provide examples and/or reproducible simulations. Papers on applications should describe the motivations, techniques, implementation, and evaluation. 
  It is highly recommended for all submissions that code and data be published alongside the papers to facilitate reproducibility. Program committee members will be instructed to take data and code sharing into account in their reviews.  
 Paper must formatted using the ACM sigconf template (for LaTeX) or the interim template layout.docx (for Word), both at http://www.acm.org/publications/proceedings-template  All papers should be converted to PDF prior to electronic submission. Papers that do not adhere to these conditions will be rejected without review.  
 Submissions should be uploaded in the conference support system Conftool  by the submission deadline. For each submission, it should be indicated whether it belongs in the regular track or one of the special tracks (AI&Law for Empirical Legal Studies or Innovative Applications or Ethical and Legal Issues for AI in Legal Practice) using the facility provided by the submission system.  
 Reviewing will be double blind. Papers submitted for review must not include names and affiliations of the authors and not include an acknowledgments section. Any identifying text in the body of the paper (e.g. citing “our work”) should be removed or rephrased to be non-identifying. These aspects can be added at the camera-ready stage. Therefore, prior to submission of the paper, the authors should first register the paper on the conference support system in order to receive an ID number for the paper. Then, in order to submit the paper the paper should be revised so that the ID number of the paper replaces the names and affiliations of the authors. The references should include published literature relevant to the paper, including previous works of the authors, though care should be taken in the style of writing in order to preserve anonymity. References to code and data intended to be published alongside the papers are to be phrased such that anonymity is preserved.  
 Submitted papers may not be published as open access preprints before acceptance notifications have been sent. Papers that have already been published as preprints at the time of submission for review must be flagged as such in the review system and must not reference the preprint in the paper.  
 Papers submitted not adhering to the page limitation or the anonymity requirements may be rejected without review.   
 Demonstrations  
 A session will be organized for the demonstration of creative, robust, and practical working applications and tools. Where a demonstration is not connected to a submitted paper, a two-page extended abstract about the system should be submitted for review via the conference support system and following the instructions on paper submission. Accepted extended abstracts will be published in the conference proceedings. For those demonstrations that are connected to a paper in the main track, no separate statement about the demonstration need be submitted, but the author(s) should send an email to the Program Chair by the demo submission deadline to register their interest in demonstrating their work at this session.  
 Workshops & Tutorials  
 ICAIL 2023 will include workshops and tutorials on Monday, June 19 and Friday, June 23. Tutorials should cover a broad topic of relevance to the AI and Law community and should have one or more designated organizers/speakers. Workshops are intended for informal discussion and should have one or more designated organizers as well as an organizing and programming committee. Proposals must contain enough information to permit evaluation on the basis of importance, quality, and community interest. Proposals should be 2 to 4 pages and include at least the following information:  
  
 The workshop or tutorial topic and goals, their significance, and their appropriateness for ICAIL 2023 
  The intended audience, including the research areas from which participants may come, the likely number of participants (with some of their names, if known), and plans for publicizing the workshop 
  Organization of the workshop or tutorial, including the intended format (such as invited talks, presentations, panel discussions or other methods for ensuring an interactive atmosphere) and the expected length (full day or half day) 
  Organizers’ details: a description of the main organizers’ background in the proposed topic; and complete addresses including web pages of all organizers and committee members (if applicable) 
  Proposals for workshops and tutorials can be sent by email to the program chair, Matthias Grabmair  ( matthias.grabmair@tum.de  ) by the submission deadline.  
  
  Doctoral Consortium  
 ICAIL 2023 will feature a Doctoral Consortium aiming to promote the exchange of ideas from PhD researchers in the area of Artificial Intelligence and Law and to provide them with an opportunity to interact and receive feedback from leading scholars and experts in the field. Details about the consortium’s program and timeline will be published separately from this call for papers.  
 Awards  
 IAAIL has established three different awards, to be presented at the conference banquet.  
 Donald H. Berman Award for Best Student Paper  The best student paper award is in memory of Donald H. Berman, a professor of law at Northeastern University who was a co-founder of the Artificial Intelligence and Law journal. The award consists of a cash gift and free attendance at ICAIL 2023. For a paper to be considered for the award, the student author(s) should be clearly designated as such when the paper is submitted using the facility provided by the submission system, and any non-student co-authors should provide a statement by email to the Program Chair that affirms that the paper is primarily student work.  
 Carole Hafner Award for Best Paper  The best paper award is given in memory of Carole Hafner, an associate professor of computer science at Northeastern University. She was one of the founders of the ICAIL conference and a co-founding editor of the journal Artificial Intelligence and Law.  
 Peter Jackson Award for Best Innovative Application Paper  The best innovative application paper award is dedicated to the memory of Peter Jackson, Thomson Reuters’ Chief Research Scientist, who was a strong supporter of the ICAIL conferences and a significant contributor to the development of advanced technologies in AI and Law.  
  
  Important Dates  
 Deadline for submission of workshop and tutorial proposals: | December, 16th 2022 
  Deadline for submission of papers & demonstrations: | February, 1st 2023 | February, 12th 2023 (anywhere on earth) 
  Notification of acceptance: | April, 3rd 2023 
  Conference: | June 19th - June 23rd 2023 
   
  Organization  
 Program Chair  
 Matthias Grabmair  
 matthias.grabmair@tum.de   
 Conference Local Chair  
 Francisco Andrade  
 fandrade@direito.uminho.pt   
 Conference Local co-Chair  
 Paulo Novais  
 pjon@di.uminho.pt   
 Secretary/Treasurer  
 Michal Araszkiewicz  
 michal.araszkiewicz@uj.edu.pl   
 AI&Law for Empirical Legal Studies Track Chair  
 Wolfgang Alschner  
 Wolfgang.Alschner@uottawa.ca   
   
 Law School, with JUSGOV  
 Centro Algoritimi and LASI  
 University of Minho  
 Braga, Portugal

25. MOMM_0 conference:
Conferences    Journals    Workshops    Seminars     

  Conferences    Journals    Workshops    Seminars    Symposiums    Meetings     
  Conference Raking    Journal Ranking    Impact Score    Blog     
 LaTeX   5G Tutorial    

  IMPACT SCORE    JOURNAL RANKING    CONFERENCE RANKING    Conferences    Journals    Workshops    Seminars    SYMPOSIUMS    MEETINGS    BLOG   LaTeX   5G Tutorial   Free Tools     

  Home    Categories    About    Call for Papers     

 MoMM 2023 : The 21st International Conference on Advances in Mobile Computing and Multimedia Intelligence   
   
  Bali, Indonesia 

 Event Date: | December 04, 2023 - December 06, 2023 
 Submission Deadline: | June 15, 2023 
 Notification of Acceptance: | August 20, 2023 
 Camera Ready Version Due: | September 20, 2023 

  GO TO WEBSITE        

 Categories 
 MULTI-MEDIA INTELLIGENCE    

 MOBILE COMPUTING    

 CHARTBOTS    

 MOBILITY 

 Call for Papers 
 C A L L F O R P A P E R S  
   
  The 21st International Conference on Advances in Mobile Computing and Multimedia Intelligence  
  (MoMM2023)  
  04-06 December, 2023  
  Bali, Indonesia  
   
  email: [email protected]   
  Paper submission: https://momm2023.iiwas.org  
   
  "Designing and Developing Intelligent Mobile and Ubiquitous Solutions for Social Good"  

  *** Important Dates ***  
  15 June 2023: Full Papers (15 pages), Short papers (6 pages)  
  20 August 2023: Acceptance Notifications  
  20 September 2023: Camera-Ready Papers and Authors Registration  
  04 - 06 December 2023: Conference Dates  
   
  *** Publication ***  
  ALL accepted MoMM2023 papers will be published by Springer in their Lecture Notes in Computer Science (LNCS).  
   
  *** Scope ***  
  MoMM2023 addresses a wide array of research topics such as smart cities, digital twins, nanotechnology, augmented and virtual reality, artificial intelligence, chatbots and conversational interfaces, edge computing and server-less cloud computing.  
   
  *** Topics ***  
  Specific topics of interest include, but are not limited to:  
  - Multimedia Intelligence  
  - Mobile and ubiquitous multimedia  
  - IoT and edge computing and applications  
  - Smart cities and smart homes  
  - smart vehicles  
  - Mobile sensing technologies and applications  
  - Mobile healthcare applications  
  - Wireless sensing technologies and wearables  
  - Mobile crowd-sensing  
  - Mobile multimodal interfaces  
  - mobile data analytics and mobile AI  
  - Chatbots and conversational interfaces  
  - Immersive computing  
  - pervasive AR/VR  
  - Context-aware applications and recommender systems  
  - Data Visualisation on mobile devices  
  - Localisation, indoor positioning and tracking systems  
  - Mobile distributed reasoning and processing  
  - 5G and 6G mobility  
   
  *** Submission Guidelines ***  
  - Full Papers (maximum 15 pages including references and appendixes).  
  - Short Papers (maximum 6 pages including references and appendixes.  
  - Paper submission link: https://momm2023.iiwas.org  
  - Authors should consult Springer’s authors’ instructions and use the proceedings templates, either for LaTeX or for Word, for the preparation of their papers.  
  - Please refer to Paper Submission procedure at MoMM2023 website (https://www.iiwas.org/conferences/momm2023/paper-submission.html)  
   
  *** Past Conferences ***  
  https://www.iiwas.org/conferences.html  
  ACM Digital library: https://dl.acm.org/conference/momm  
  DBLP: http://www.informatik.uni-trier.de/~ley/db/conf/momm/  
   
  *** Program Committee Chair ***  
  Pari Delir Haghighi, Program Committee Chair, Monash University, Australia 

 Summary 
 MoMM 2023 : The 21st International Conference on Advances in Mobile Computing and Multimedia Intelligence  will take place in Bali, Indonesia  . It’s a 3  days event starting on Dec 4, 2023 (Monday)  and will be winded up on Dec 6, 2023 (Wednesday)  .  
 MoMM 2023  falls under the following areas: MULTI-MEDIA INTELLIGENCE, MOBILE COMPUTING, CHARTBOTS, MOBILITY,  etc. Submissions for this Conference  can be made by Jun 15, 2023  . Authors can expect the result of submission by Aug 20, 2023  . Upon acceptance, authors should submit the final version of the manuscript on or before Sep 20, 2023  to the official website of the Conference  .  
 Please check the official event website for possible changes before you make any travelling arrangements. Generally, events are strict with their deadlines. It is advisable to check the official website for all the deadlines.  
 Other Details of the MoMM 2023   
  
 Short Name: | MoMM 2023 
  Full Name: | The 21st International Conference on Advances in Mobile Computing and Multimedia Intelligence 
  Timing: | 09:00 AM-06:00 PM (expected) 
  Fees: | Check the official website of | MoMM 2023 
  Event Type: | Conference 
  Website Link: | https://www.iiwas.org/conferences/momm2023/ 
  Location/Address: | Bali, Indonesia 

 Credits and Sources 
 [1] MoMM 2023 : The 21st International Conference on Advances in Mobile Computing and Multimedia Intelligence 

  Check other Conferences, Workshops, Seminars, and Events  Search Here    

 OTHER MOBILE COMPUTING EVENTS 

 IEEE MobileCloud 2024:   IEEE Mobile Cloud 2024 – The 12th IEEE International Conference on Mobile Cloud Computing, Services and Engineering  
  Shanghai, China   
  Jul 15, 2024 
 IEEE Mobile Computing 2024:   The 12th IEEE International Conference on Intelligent Mobile Computing  
  Shanghai, China   
  Jul 15, 2024 
 MAI 2024:   CVPR 2024 Mobile AI workshop and challenges  
  Seattle, US   
  Jun 17, 2024 
 NMOCT 2024:   10th International Conference on Networks, Mobile Communications and Telematics  
  Toronto, Canada   
  Jul 20, 2024 
 ENASE 2024:   19th International Conference on Evaluation of Novel Approaches to Software Engineering  
  Angers, France   
  Apr 28, 2024 
 SHOW ALL 

 OTHER MOBILITY EVENTS 

 Horizon_ENFIELD 2024:   Open Call for Proposals_Researchers Mobility Program  
  Europe 
 BMDA 2024:   6th International Workshop on Big Mobility Data Analytics  
  Paestum, Italy   
  Mar 25, 2024 
 IEEE MDM 2024:   The 25th IEEE International Conference on Mobile Data Management  
  Brussels   
  Jun 24, 2024 
 MOBISLICE 2023:   6th Mobility Support in Slice-based network control for heterogeneous environments  
  Dresden, Germany   
  Nov 7, 2023 
 EAI Mobility IoT 2023:   10th EAI International Conference on Mobility, IoT and Smart Cities  
  Bratislava, Slovakia   
  Oct 24, 2023 
 SHOW ALL 

  About Us  | Contact Us  | Disclaimer  | Privacy Policy  | Terms and Conditions   
   
 © 2024 www.resurchify.com  All Rights Reserved.

26. IC-AI_2 conference:
The requested URL was rejected. Please consult with your administrator.  
   
  Your support ID is: < 8203162004126814322>  
   
  [Go Back]

27. MOMM_1 conference:
Applied Education Technologies 
  School of Computation, Information, and Technology 
  Technical University of Munich 
     Menü    

 Home 
  News and Events 
  People 
  Research 
  Teaching 
  Theses 
  Projects 
  Jobs 

 Home 
  News and Events 
  Bali Calling: Paper Accepted for MoMM2023 
  Bali Calling: Paper Accepted for MoMM2023  
 Monday, 27 November 2023 • Santiago Berrezueta   
  We are thrilled to share that our research paper has been accepted at the 21st International Conference on Advances in Mobile Computing & Multimedia Intelligence (MoMM 2023)   in Bali, Indonesia.  
  
  21st International Conference on Advances in Mobile Computing & Multimedia Intelligence      
  
 Our latest research paper introduces a transformative mobile application designed to support the occupational therapy for children with ADHD. This app, part of a comprehensive smart-home environment, enables therapists and parents to remotely observe and interact with children during therapy sessions.  
 Key Findings:   
 Enhanced Monitoring: The app provides real-time behavioral tracking, offering detailed insights into children’s actions during therapy tasks. This facilitates more informed therapeutic decisions and timely adjustments, including medication management. 
  Ease of Use: Both therapists and parents found the app user-friendly and intuitive, leading to increased parental involvement in therapy and efficient setup by therapists without technical expertise. 
  Customization and Adaptability: The app allows therapists to customize therapy settings, including the sensitivity of smart objects and robotic assistants, catering to each child’s unique needs. 
  Positive Feedback: Post-experimental trials, the application received positive reviews from therapists and parents, highlighting its value in simplifying data interpretation and providing tailored insights for individual therapy sessions. 
  This mobile application addresses the critical need for effective, real-time monitoring and intervention in ADHD therapy, presenting a significant advancement in the field. It demonstrates the potential to enhance therapy outcomes and actively involves parents in the therapeutic process, marking a new era in ADHD management.  
 Citation  
 Ubiquitous Mobile Application for Conducting Occupational Therapy in Children With ADHD  .   
  Santiago Berrezueta  , Melissa Montalvo, and Stephan Krusche  .  
  21st International Conference on Advances in Mobile Computing & Multimedia Intelligence  ( MoMM  ) . Bali, Indonesia November 2023. doi: 10.1007/978-3-031-48348-6_9   

  Santiago Berrezueta's recent posts  
 Future of ADHD Care: Evaluating the Efficacy of ChatGPT in Therapy Enhancement 
  Bali Calling: Paper Accepted for MoMM2023 

 Head of Research Group  

 Prof. Dr. Stephan Krusche    
   
 Administrative office  

 Sophia Adelmeier    
  adelmeie@cit.tum.de   
  Office: 01.07.052  
  Phone: +49 (89) 289-18206  
  Fax: +49 (89) 289-18207 Boltzmannstraße 3  
  85748 Garching b. München  

 Privacy Statement 
  Impressum 
  Code of Conduct 
  TUM Center for Educational Technologies 
  ITüpferl

28. IC-AI_3 conference:


29. MOMM_2 conference:
Skip to main menu 
  Skip to main content 
  Knowledge base: Uniwersytet Opolski    

 Settings and your account  
 default font size  A | default font size 
  bigger font size  A | bigger font size 
  big font size  A | big font size 
  High contrast    tonality | High contrast  Normal contrast 
  Change language to: Polish  Zmień język na: Polski | Change language to polish 
  Log in 

 Main menu  
 menu  menu_open  Main menu   Start    Start 
  Researchers arrow_drop_down | Profiles 
  Experts 
  Teams 
  Research Outputs arrow_drop_down | Publications 
  Works 
  Research data 
  Multimedia 
  PhD dissertations 
  Diplomas 
  Research potential arrow_drop_down | Patents 
  Projects 
  Infrastructure 
  Laboratories 
  Conferences arrow_drop_down | Organized conferences 
  Scientific conferences 
  List of scored conferences 
  Promotion arrow_drop_down | Organized conferences 
  Own magazines (published by institution) 
  Events 
  Press / media 
  More arrow_drop_down | Cooperation 
  Achievements 
  Activities 
  Analysis / Reports 
  Media / Press 
  Impact description 
  About arrow_drop_down | About the site 
  Openness in Science 
  FAQ 

 You are here:  
 Start 
  Research Outputs 
  Publications 
  Advances in Mobile Computing and Multimedia Intelligence. 21st International Conference, MoMM 2023, Denpasar, Bali, Indonesia, December 4–6, 2023, Proceedings 

 Back   Advances in Mobile Computing and Multimedia Intelligence. 21st International Conference, MoMM 2023, Denpasar, Bali, Indonesia, December 4–6, 2023, Proceedings  
 Editors:  
 Pari Delir Haghighi, 
  Ismail Khalil, 
  Gabriele Anderst-Kotsis, 
  Ngurah Agus Sanjaya 
    
 Metrics  

 Record ID   UO5ca4d13ef7984a2bb7ffe586e73eac60  Book type   Monograph  Editor   Pari Delir  Haghighi   Pari Delir Haghighi ,,    External affiliation of publication: inna  Author's external affiliation: inna       
 Ismail  Khalil   Ismail Khalil ,,    External affiliation of publication: inna  Author's external affiliation: inna       
 Gabriele  Anderst-Kotsis   Gabriele Anderst-Kotsis ,,    External affiliation of publication: inna  Author's external affiliation: inna       
 Ngurah Agus  Sanjaya   Ngurah Agus Sanjaya ,,    External affiliation of publication: inna  Author's external affiliation: inna       
   
  Publisher (including from the ministerial list of publishers)   Springer International Publishing     Pages   187  ISBN   978-3-031-48347-9   
  Other ISBN   978-3-031-48348-6  Issue year   2023   
  Book series /Journal (in case of Journal special issue)   Lecture Notes In Computer Science, ISSN 0302-9743 , e-ISSN 1611-3349   Vol   14417   
  Conference   The 21st International Conference on Advances in Mobile Computing & Multimedia Intelligence (MoMM 2023), 2023, 04-12-2023 - 06-12-2023, Denpasar , Indonezja    DOI   Go to the document by digital ID  DOI:10.1007/978-3-031-48348-6 Opening in a new tab    URL   https://link.springer.com/book/10.1007/978-3-031-48348-6 Opening in a new tab    Language   eng (en) English  Score (nominal)   20  Score source   publisherList  Scoring   Ministerial score   = 20.0, 11-09-2024, MonograhOrBookMainLanguagesEditor    Related publications (1)     

 Cite      Cite  

 Refresh page       
 Refresh page   

 RDF   

     Uniform Resource Identifier  https://repo.uni.opole.pl/info/book/UO5ca4d13ef7984a2bb7ffe586e73eac60/     
 URN  urn:uni-opo-prod:UO5ca4d13ef7984a2bb7ffe586e73eac60      
   * presented citation count is obtained through Internet information analysis, and it is close to the number calculated by the Publish or Perish Opening in a new tab   system.   
  Back    

 Additional information  
 About project 
  API 
  Open Access 
  5* Open Data 
  Site map 
  Privacy policy 
  Help 
  Contact 
    
  Partners  

 © 2024 Powered by Omega-PSIR     

     Confirmation    
  Are you sure?    
  Yes    Cancel     
   
 Report incorrect data on this page      

 clipboard   
     
 Refresh clipboard       
 Refresh clipboard

30. ICAIL_0 conference:
19th International Conference on Artificial  
  Intelligence and Law - ICAIL 2023  
 19th-23rd June 2023  
  
  Conference Venue:  
 University of Minho , Law School, Campus de Gualtar (Building 17), Braga, Portugal 

 CFP 
  Doctoral Consortium 
  Committees 
  Speakers Info 
  Accepted Papers 
  Programme 
  Dates 
  Registration 
  Workshops 
  Venue 
  Accommodation 
  Getting to ICAIL'2023 
  Sponsors 
   Contact   

 Latest news:   
 5th June 2023   
  Regular registration deadline extended to June 9.  
 12th May 2023:   
  Programme Page updated.  
 2nd May 2023:   
  Registration Page updated.  
 27th April 2023:   
  Accepted Papers Page updated.  
 17th April 2023:   
  Added Visa Requirements information to the Venue and Getting to ICAIL'2023 page.  
 14th April 2023:   
  Doctoral Consortium Submission Deadline extended.  
 12th April 2023:   
  Sponsors Page updated.  
 7th March 2023:   
  Registration Page updated.  
 22nd February 2023:   
  Speakers Info Page updated.  
 21st February 2023:   
  Workshops Page updated.  
 3rd January 2023:   
  Submission Deadline extended.  
 1st August 2022:   
  ICAIL'2023 Conference Web site was launched.  
   
 19th ICAIL - International Conference on Artificial Intelligence and Law 2023 (ICAIL 2023)  .  
 Since 1987, the International Conference on Artificial Intelligence and Law (ICAIL) has been the foremost international conference addressing research in Artificial Intelligence and Law. It is organized biennially under the auspices of the International Association for Artificial Intelligence and Law  (IAAIL), and in cooperation with the Association for the Advancement of Artificial Intelligence  (AAAI). The conference proceedings are published by ACM  . We invite submissions of papers along a regular and three special tracks, technology demonstrations, as well as proposals for workshops and tutorials.  
 Organized by  
 University of Minho Law School | , with | JUSGOV | - Research Center for Justice and Governance, Campus de Gualtar, Braga, Portugal 
  University of Minho Informatics Departments at Engineering School | , Campus de Gualtar, Braga, Portugal 
  Centro Algoritmi 
  LASI – Intelligent Systems Associated Laboratory 
   
  Topics  
 We invite submission of original papers on Artificial Intelligence & Law, covering foundations, methods, tools, systems and applications. Topics may include, but are not limited to, the following:  
 Argument mining on legal texts 
  Classification and automatic summarization of legal text 
  Computational methods for negotiation and contract formation 
  Computer-assisted dispute resolution 
  Computable representations of legal rules and domain specific languages for the law 
  Decision support systems in the legal domain 
  Deep learning on data and text from the legal domain 
  Dialog systems in the legal domain 
  e-discovery and e-disclosure 
  e-government, e-democracy and e-justice 
  Ethical, legal, fairness, accountability, and transparency subjects arising from the use of AI systems in legal practice, access to justice compliance, and public administration 
  Explainable AI for legal practice, data, and text analytics 
  Formal and computational models of legal reasoning (e.g., argumentation, case-based reasoning), including deontic logics 
  Formal and computational models of evidential reasoning 
  Formal models of norms and norm-governed systems 
  Information extraction from legal databases and texts 
  Information retrieval, question answering, and literature recommendation in the legal domain 
  Intelligent legal tutoring systems 
  Intelligent support systems for forensics 
  Interdisciplinary applications of legal informatics methods and systems 
  Knowledge acquisition techniques for the legal domain, including related applications of natural language processing, argument, and data mining 
  Knowledge representation, knowledge engineering, and ontologies in the legal domain 
  Legal design involving AI techniques 
  Machine learning and data analytics applied to the legal domain 
  Natural language processing of legal text, including law-specific standard NLP tasks (e.g., Named Entity Recognition Semantic Role Labeling, Translation, etc.) 
  Normative reasoning by autonomous agents 
  Open and linked data in the legal domain 
  Smart contracts and application of blockchain in the legal domain 
  Visualization techniques for legal information and data 
  ICAIL is keen to broaden its scope to include topics of growing importance and to establish links to neighboring disciplines. In addition to the regular paper track ICAIL 2023 will feature the following special tracks:  
 (1) a new special cross-disciplinary outreach track on Artificial Intelligence for Empirical Legal Studies  . Legal systems have seen an increasing need to leverage data analysis to inform stakeholders, decision makers, and policy actors. This potential comes with a mandate for credible empirical research, as well as constructive communication, across communities at the intersection of law and data-driven disciplines. The empirical legal studies and AI&Law communities stand to benefit from an exchange of ideas and collaborations around concrete legal use cases, technical approaches, and commitment to using data-driven technology for policy and social good. For this track we invite short and long submissions of original papers on topics including, but not limited to:  
 Use of machine learning and/or knowledge representation techniques as part of statistical analyses of data from the legal domain 
  Use of AI methods (e.g, natural language processing) on legal data to extract information to be used as part of statistical analysis 
  Explainability and robustness of complex machine learning models towards specific legal analytic and policy objectives 
  Unstructured legal corpora and problems for data mining and discovery 
  Visualization-based exploration of legal data relevant for empirical research 
  Tools and best practices for data collection, curation, and statistical experimentation in the legal domain 
  (2) Innovative applications in AI and Law – Applications that fall within any of the core AI & Law topics. P apers in this track will be subject to the same rigorous reviewing process as regular papers, but the emphasis is less on novel scientific contributions, formal frameworks, or results and more on the innovative and novel application of techniques from AI & Law to real world problems and use cases.  
 (3) Legal, ethical, fairness, accountability, and transparency aspects of AI applications in legal practice, access to justice, compliance, and public administration – ICAIL is committed to not only further the state of the art in using AI technology in legal practice, but also about the legal and ethical ramifications of such applications. This track is intended to facilitate this discourse through the inclusion of case studies, reports on regulations efforts, lessons learned from experiments, technical contributions about monitoring and facilitating ethical use of AI in relevant areas, and other topical contributions. Papers in this track will be subject to the same rigorous reviewing process as regular papers.  
 Paper Submission  
 Papers (up to 10 pages including references for long papers, up to 5 pages including references for short papers) should present contributions from relevant topics. To maintain ICAIL’s relevance in the larger rapidly-moving field at the intersection of law and artificial intelligence, all papers must make clear their relation to legal information, reasoning, or processes as well as relation to prior work and novel scientific contribution, as well as contain a satisfying amount of discussion of their findings.  
 Papers on machine learning or data mining should include discussions of the data, methodology, results, and analysis in sufficient depth beyond merely reporting metrics. Submissions focusing on the reproduction, validation, constructive scrutinization, and extension of previously published works, datasets, and benchmarks are strongly encouraged. 
  Papers proposing formal or computational models should provide examples and/or reproducible simulations. Papers on applications should describe the motivations, techniques, implementation, and evaluation. 
  It is highly recommended for all submissions that code and data be published alongside the papers to facilitate reproducibility. Program committee members will be instructed to take data and code sharing into account in their reviews.  
 Paper must formatted using the ACM sigconf template (for LaTeX) or the interim template layout.docx (for Word), both at http://www.acm.org/publications/proceedings-template  All papers should be converted to PDF prior to electronic submission. Papers that do not adhere to these conditions will be rejected without review.  
 Submissions should be uploaded in the conference support system Conftool  by the submission deadline. For each submission, it should be indicated whether it belongs in the regular track or one of the special tracks (AI&Law for Empirical Legal Studies or Innovative Applications or Ethical and Legal Issues for AI in Legal Practice) using the facility provided by the submission system.  
 Reviewing will be double blind. Papers submitted for review must not include names and affiliations of the authors and not include an acknowledgments section. Any identifying text in the body of the paper (e.g. citing “our work”) should be removed or rephrased to be non-identifying. These aspects can be added at the camera-ready stage. Therefore, prior to submission of the paper, the authors should first register the paper on the conference support system in order to receive an ID number for the paper. Then, in order to submit the paper the paper should be revised so that the ID number of the paper replaces the names and affiliations of the authors. The references should include published literature relevant to the paper, including previous works of the authors, though care should be taken in the style of writing in order to preserve anonymity. References to code and data intended to be published alongside the papers are to be phrased such that anonymity is preserved.  
 Submitted papers may not be published as open access preprints before acceptance notifications have been sent. Papers that have already been published as preprints at the time of submission for review must be flagged as such in the review system and must not reference the preprint in the paper.  
 Papers submitted not adhering to the page limitation or the anonymity requirements may be rejected without review.   
 Demonstrations  
 A session will be organized for the demonstration of creative, robust, and practical working applications and tools. Where a demonstration is not connected to a submitted paper, a two-page extended abstract about the system should be submitted for review via the conference support system and following the instructions on paper submission. Accepted extended abstracts will be published in the conference proceedings. For those demonstrations that are connected to a paper in the main track, no separate statement about the demonstration need be submitted, but the author(s) should send an email to the Program Chair by the demo submission deadline to register their interest in demonstrating their work at this session.  
 Workshops & Tutorials  
 ICAIL 2023 will include workshops and tutorials on Monday, June 19 and Friday, June 23. Tutorials should cover a broad topic of relevance to the AI and Law community and should have one or more designated organizers/speakers. Workshops are intended for informal discussion and should have one or more designated organizers as well as an organizing and programming committee. Proposals must contain enough information to permit evaluation on the basis of importance, quality, and community interest. Proposals should be 2 to 4 pages and include at least the following information:  
  
 The workshop or tutorial topic and goals, their significance, and their appropriateness for ICAIL 2023 
  The intended audience, including the research areas from which participants may come, the likely number of participants (with some of their names, if known), and plans for publicizing the workshop 
  Organization of the workshop or tutorial, including the intended format (such as invited talks, presentations, panel discussions or other methods for ensuring an interactive atmosphere) and the expected length (full day or half day) 
  Organizers’ details: a description of the main organizers’ background in the proposed topic; and complete addresses including web pages of all organizers and committee members (if applicable) 
  Proposals for workshops and tutorials can be sent by email to the program chair, Matthias Grabmair  ( matthias.grabmair@tum.de  ) by the submission deadline.  
  
  Doctoral Consortium  
 ICAIL 2023 will feature a Doctoral Consortium aiming to promote the exchange of ideas from PhD researchers in the area of Artificial Intelligence and Law and to provide them with an opportunity to interact and receive feedback from leading scholars and experts in the field. Details about the consortium’s program and timeline will be published separately from this call for papers.  
 Awards  
 IAAIL has established three different awards, to be presented at the conference banquet.  
 Donald H. Berman Award for Best Student Paper  The best student paper award is in memory of Donald H. Berman, a professor of law at Northeastern University who was a co-founder of the Artificial Intelligence and Law journal. The award consists of a cash gift and free attendance at ICAIL 2023. For a paper to be considered for the award, the student author(s) should be clearly designated as such when the paper is submitted using the facility provided by the submission system, and any non-student co-authors should provide a statement by email to the Program Chair that affirms that the paper is primarily student work.  
 Carole Hafner Award for Best Paper  The best paper award is given in memory of Carole Hafner, an associate professor of computer science at Northeastern University. She was one of the founders of the ICAIL conference and a co-founding editor of the journal Artificial Intelligence and Law.  
 Peter Jackson Award for Best Innovative Application Paper  The best innovative application paper award is dedicated to the memory of Peter Jackson, Thomson Reuters’ Chief Research Scientist, who was a strong supporter of the ICAIL conferences and a significant contributor to the development of advanced technologies in AI and Law.  
  
  Important Dates  
 Deadline for submission of workshop and tutorial proposals: | December, 16th 2022 
  Deadline for submission of papers & demonstrations: | February, 1st 2023 | February, 12th 2023 (anywhere on earth) 
  Notification of acceptance: | April, 3rd 2023 
  Conference: | June 19th - June 23rd 2023 
   
  Organization  
 Program Chair  
 Matthias Grabmair  
 matthias.grabmair@tum.de   
 Conference Local Chair  
 Francisco Andrade  
 fandrade@direito.uminho.pt   
 Conference Local co-Chair  
 Paulo Novais  
 pjon@di.uminho.pt   
 Secretary/Treasurer  
 Michal Araszkiewicz  
 michal.araszkiewicz@uj.edu.pl   
 AI&Law for Empirical Legal Studies Track Chair  
 Wolfgang Alschner  
 Wolfgang.Alschner@uottawa.ca   
   
 Law School, with JUSGOV  
 Centro Algoritimi and LASI  
 University of Minho  
 Braga, Portugal

31. ICAIL_1 conference:
Skip to content  Trending News  
   
 Exclusive  5 days ago  On our Biannual Meeting of New Developments in Legislative Drafting | 21 November  2 weeks ago  Call for Papers | 4th Global Conference on Parliamentary Studies Athens/Greece | 13 June 2025  1 month ago  IALS Legislative Drafting Course 2025 | Sir William Dale Centre for Legislative Studies | 16 June – 4 July 2025  2 months ago  New Article | Legislative Drafting Techniques as a Means of Giving Effect to the Rule of Law. The Case of Ukraine | Enrico Albanesi  2 months ago  Round-a-table Discussion | Legislative Drafting and the Rule of Law. Constitutional Challenges and Opportunities for Ukraine on the EU Accession Process | 3 Oct | Università di Genova    
   
 Saturday, Nov 30, 2024   
  Facebook 
  Twitter 
  Linkedin 

 IAL   International Association of Legislation  

      Primary Menu    Home 
  About | The Constitution 
  Legislation at heart 
  List of Board Members 
  Former Presidents 
  Treasurer 
  Internship 
  Around the World | Associations and Universities 
  Periodicals on Legislation and Legisprudence 
  Legislative Drafting Rules 
  Outputs of the Legislative Drafting Research Project 
  LegImpact Project 
  Newsletters 
  Publications | Books 
  IAL Publications 
  Journals, Articles, Presentations & Manuals 
  Membership | Become a member 
  Pay membership Fee (existing members) 
  Contact Us 

 Search for:        

 Sep 7 2018     
   
 The Role of Courts in Contemporary Legal Orders Conference | Sofia | March 2019   

 Jan 30 2019     
   
 Proceedings of the 11th IAL conference in Seoul (2014) | Innovation of Legislative Process   

 Aug 4 2019     
   
 2019 IAL Conference | “The crisis of confidence in legislation” | Rome | October 2019   

 Mar 25 2020     
   
 New Report! | Parliamentary Activity and Legislative Oversight during the Coronavirus Pandemic – A Comparative Overview | Ittai Bar-Siman-Tov   

 Apr 8 2022     
   
 Call for Papers | International Conference on Multilevel Legislative Drafting and Legislative Impact Assessment | Lisbon | 15 July 22   

 Aug 15 2023     
   
 Prof. Dr. iur. Ulrich Karpen   

   Home 
  Events 
  Workshop | AI for Legislation | 19th International Conference on Artificial Intelligence and Law – ICAIL 2023 | 23 June 23 | Braga PT 

 Workshop | AI for Legislation | 19th International Conference on Artificial Intelligence and Law – ICAIL 2023 | 23 June 23 | Braga PT  
 Posted On : March 29, 2023    Published By : International Association of Legislation      

 Can the Law be written by GPT-3? Can the members of the parliament use ChatGPT for improving their knowledge of the society needs? Can the Law be converted into programming code using AI/ML and logic formulae without losing legal theory principles, legal linguistic expressivity, and Constitutional principles? Can the digital format of Law be equally valid and considered a legitimate Legal Source, and under which conditions? Which principles are necessary in order to not compress the Rule of Law and Democratic principles? How to improve the legislative process using AI/ML for better regulation?  
 This workshop would like to discuss these challenging questions with interdisciplinary instruments using different perspectives. We intend also to discuss the state of the art of the most advanced applications of AI in support of the better regulation, law-making system, aims to find answers to these questions using.  
 More information here   .  
 Share this:  
 Click to share on Facebook (Opens in new window) 
  Click to share on Twitter (Opens in new window) 
  Click to share on LinkedIn (Opens in new window) 

 Posted in: Events     
 Related Articles  

 Congress: Quality of Legislation   
   
 Posted On : March 29, 2023    Published By : International Association of Legislation      

 10th IAL Conference 2012, Programme   
   
 Posted On : March 29, 2023    Published By : International Association of Legislation      

 10th IAL Conference 2012 – Registration   
   
 Posted On : March 29, 2023    Published By : International Association of Legislation      

 Post navigation  
 New edition of The Loophole – Journal of the Commonwealth Association of Legislative Counsel | March 2023    
 Applied Regulatory Impact Assessment (RIA) Training for Professionals | 16-20 Oct 2023    

 Categories  
 Associations and Universities 
  Books 
  Events 
  Information of Interest 
  Journals and Articles 
  News 
  Periodicals 
  Publications & Case Law 
  Research 

 About  
 The raison d’être  of the IAL is to promote science, research, teaching and the practical application of rules and good practice in legislation field. It intends to improve the quality of legislation, namely the analysis of norms, organization and procedure of law making.  

 Funded by FCT – Fundação para a Ciência e a Tecnologia, I.P. through national funds under UIDP/04310/2020 programme.  

 Follow Us  

 Copyright All right reserved  
  Theme: Royal Magazine Pro by ThemeinWP    
 Home 
  About 
  Around the World 
  Newsletters 
  Publications 
  Membership 
  Contact Us

32. ICAIL_2 conference:
Skip to main content    

 Centers 
  (RESEARCH) ACTIVITIES | Global Views on COVID-19 
  The Ethics of Digitalisation 
  Events | NoC @IGF 2020 | Interactive Chats 
  Virtual Gallery 
  Tools 
  News 
  Get Involved 

 19th ICAIL – International Conference on Artificial Intelligence and Law 2023  

 Since 1987, the International Conference on Artificial Intelligence and Law (ICAIL) has been the foremost internationalconference addressing research in Artificial Intelligence and Law. It is organized biennially under the auspices of the International Association for Artificial Intelligence and Law (IAAIL),and in cooperation with the Association for the Advancement of Artificial Intelligence (AAAI).The conference proceedings are published by ACM. ICAIL invites submissions of papers along a regular and three special tracks, technology demonstrations, as well as proposals forworkshops and tutorials.  
 When and where?  19th-23rd June 2023, Braga, Portugal  
 Source and more information: https://icail2023.di.uminho.pt/   

 Other News from Participating Centers  
   
 Open Knowledge: Open Data Editor user testing: feedback from the StoryData team   
   Nov 29, 2024   
    
 Media Change & Innovation Division, IKMZ, University of Zurich: Michael Reiss successfully defended his cumulative dissertation   
   Nov 29, 2024   
    
 Media Change & Innovation Division, IKMZ, University of Zurich: Public Guest Lecture: Alternative Post-Digital Futures   
   Nov 29, 2024   
    
 Media Change & Innovation Division, IKMZ, University of Zurich: Talk im Turm: Göttliche Algorithmen und Putins Desinformation   
   Nov 29, 2024   
    
 Media Change & Innovation Division, IKMZ, University of Zurich: DSI Apéro Philo Session: Digital Wellbeing   
   Nov 29, 2024   
    
 Media Change & Innovation Division, IKMZ, University of Zurich: Campus Oerlikon Lecture Series: Digital Worlds   
   Nov 29, 2024   

 About the NoC  
 The global Network of Internet & Society Centers (NoC) is a collaborative initiative among academic institutions with a focus on interdisciplinary research on the development, social impact, policy implications, and legal issues concerning the Internet.  

 More  
 Guiding Principles 
  Join the Network 
  Terms of Service 
  Privacy Policy 
  Educational Resources 
  Fellowship Programs 
  Get involved 

 © Global Network of Internet and Society Research Centers  2014. All Rights Reserved.

33. ICAISC_0 conference:
ICAISC 2023  Menu   About 
  Scope 
  Important Dates 
  Program Committee 
  Contact 
  Invited Talks 
  Submission 
  Conference Details | Program 
  Venue 
  Previous Conferences 
  Related Conferences 
  Special Sessions 
  Payment 

 ICAISC 2023  
 The 22nd International Conference on Artificial Intelligence and Soft Computing  
 June 18-22, 2023  

 About ICAISC 2023  
 The 22nd International Conference on Artificial Intelligence and Soft Computing ICAISC 2023 will be held in Zakopane (situated in the High Tatra mountains), Poland in June 18-22, 2023 in Bachleda Kasprowy Zakopane Hotel  . The conference will provide an excellent opportunity for scientists and engineers to present and discuss the latest scientific results and methods. The conference will include keynote addresses, contributed papers, and numerous lectures and tutorials on a wide range of topics. The Conference will be held in the hybrid mode: online and on-site in Zakopane  . The authors of accepted papers will have a choice to present their papers on-line, or on site in Zakopane, Mercury Kasprowy Hotel, Poland. All accepted papers, irrespective of the presentation mode, will be included in the LNAI conference proceedings.  
 The working language of the conference is English. Only original, unpublished papers are invited. Authors should submit an electronic version of papers by the conference web page. The papers should be organized in accordance with a common scientific structure (abstract, state of the art in the field, intention, used methodology, obtained results and references). Papers will undergo double-blind reviewing by an international committee, and accepted on the basis of their scientific merit and relevance to the conference topics. Please prepare anonymized versions of the paper being submitted. Please preserve anonymity by avoiding providing information that may identify the authors in the acknowledgements, links to websites and the literature references. After the notification of acceptance, authors will be allowed to make a correction in accordance with the suggestions of the reviewers and submit final camera-ready papers in Latex format only. The conference proceedings will be published by Springer in the Lecture Notes in Artificial Intelligence. Springer LNAI proceedings will be available online shortly after the conference. Accepted papers must be presented by the author(s) personally to be published in the conference proceedings.  
 ICAISC 2024  
 The next ICAISC - the 23rd International Conference on Artificial Intelligence and Soft Computing 2024 will take place between June 16 till 20, 2024 in Zakopane, Poland in Bachleda Kasprowy Zakopane Hotel  .  
 ICAISC 2023 Proceedings  
 The proceedings are in production.  
 Best paper award  
 Springer sponsors the ICAISC 2023 Best Paper Award by providing an amount of EUR 1,000. ICAISC 2023 best paper award goes to Jacek Mańdziuk and Patryk Walczak from Warsaw University of Technology for the paper "Monte Carlo Tree Search with Metaheuristics".  

 ICAISC 2021 Proceedings  
 ICAISC participants have free online access to the ebook conference proceedings through the below links till November 2021.  
  LNCS 12854 is available online. You can access the online version at https://link.springer.com/book/10.1007/978-3-030-87986-0   
  LNCS 12855 is available online. You access the online version at https://link.springer.com/book/10.1007/978-3-030-87897-9   
 ICAISC 2020 Proceedings  
 LNCS 12415 is available online. You can find information about it at https://link.springer.com/book/10.1007/978-3-030-61401-0  or access the online version at https://link.springer.com/book/10.1007%2F978-3-030-61534-5   
  LNCS 12416 is available online. You can find information about it at https://www.springer.com/978-3-030-61533-8  or access the online version at http://link.springer.com/openurl.asp?genre=issue&issn=0302-9743&volume=12416   
 ICAISC 2019 Proceedings  
 LNCS 11508 is available online. You can find information about it at https://www.springer.com/978-3-030-20911-7  or access the online version at http://link.springer.com/openurl.asp?genre=issue&issn=0302-9743&volume=11508   
 LNCS 11509 is available online. You can find information about it at https://www.springer.com/978-3-030-20914-8  or access the online version at http://link.springer.com/openurl.asp?genre=issue&issn=0302-9743&volume=11509   
 Indexing  
 ICAISC H5-index = 20 (provided by Google Scholar Metrics):  
  ICAISC 2021 at Research.com   
  ICAISC 2020 at Research.com   
 All the previous ICAISC proceedings belong to the top most downloaded eBooks in the SpringerLink (top 25% most downloaded eBooks). The Proceedings of ICAISC 2020 are available here:  
 https://www.springer.com/gp/book/9783030614003 
  https://www.springer.com/gp/book/9783030615338 

  Previous    Next     

 Scope  
 Contributions covering all theoretical developments and practical applications in artificial intelligence and soft computing techniques, including but not limited to the following technical areas, are invited:  
 Agent-based systems 
  Ant colony optimization 
  Approximate reasoning 
  Artificial immune systems 
  Artificial Intelligence in modelling and simulation 
  Artificial Intelligence in scheduling and optimization 
  Artificial life 
  Bioinformatics and computational biology 
  Brain-machine interfaces 
  Cognitive systems and applications 
    
 Computer vision 
  Data mining 
  Differential Evolution 
  Evolutionary data mining 
  Evolutionary design 
  Evolutionary scheduling 
  Expert systems 
  Fuzzy Computing with Words 
  Fuzzy control and intelligent systems 
  Fuzzy decision making and decision support systems 
  Fuzzy logic and fuzzy set theory 
    
 Fuzzy optimization and design 
  Fuzzy pattern recognition 
  Fuzzy systems for robotics 
  Game theory 
  Hardware Implementations 
  Intelligent database systems 
  Knowledge engineering 
  Machine learning 
  Modeling and identification 
  Molecular and quantum computing 
  Multi-agent systems 
  Collective intelligence 
    
 Natural language processing 
  Neural Network Theory and Architectures 
  Particle swarm optimization 
  Robotics and related fields 
  Rough sets and rough data analysis 
  Speech understanding 
  Supervised and Unsupervised Learning 
  Type-2 fuzzy logic 
  Various Applications 
  Web intelligence 
  Human–computer interaction 

  Previous    Next     

   Your browser does not support the audio tag.    

 Committee on Informatics of the Polish Academy of Sciences     
   
 Poland Section of IEEE Computer Society Chapter C16   

 IEEE Poland Section Computational Intelligence Society Chapter   

 Important Dates  
 1. Submission of papers in accordance with Springer guidelines:   
 April 15, 2023    

 2. Notification of acceptance:   
 from March 1, 2023    

 3. Submission of camera-ready papers:   
 April 25, 2023    

 4. Conference date:   
 June 18-22, 2023    

 Copyright © 2024 - Polish Neural Network Society. All rights reserved.

34. ICAISC_1 conference:
ICAISC 2025  Menu   About 
  Scope 
  Important Dates 
  Program Committee 
  Contact 
  Invited Talks 
  Submission 
  Conference Details | Program 
  Venue 
  Previous Conferences 
  Related Conferences 
  Special Sessions 
  Payment 

 ICAISC 2025  
 The 24th International Conference on Artificial Intelligence and Soft Computing  
 June 22-26, 2025  

 About ICAISC 2025  
 The 24th International Conference on Artificial Intelligence and Soft Computing ICAISC 2025 will be held in Zakopane (situated in the High Tatra mountains), Poland in June 22-26, 2025 in Bachleda Kasprowy Zakopane Hotel  . The conference will provide an excellent opportunity for scientists and engineers to present and discuss the latest scientific results and methods. The conference will include keynote addresses, contributed papers, and numerous lectures and tutorials on a wide range of topics. The Conference will be held in the hybrid mode: online and on-site in Zakopane  . The authors of accepted papers will have a choice to present their papers on-line, or on site in Zakopane, Mercury Kasprowy Hotel, Poland. All accepted papers, irrespective of the presentation mode, will be included in the LNAI conference proceedings.  
 The working language of the conference is English. Only original, unpublished papers are invited. Authors should submit an electronic version of papers by the conference web page. The papers should be organized in accordance with a common scientific structure (abstract, state of the art in the field, intention, used methodology, obtained results and references). Papers will undergo double-blind reviewing by an international committee, and accepted on the basis of their scientific merit and relevance to the conference topics. Please prepare anonymized versions of the paper being submitted. Please preserve anonymity by avoiding providing information that may identify the authors in the acknowledgements, links to websites and the literature references. After the notification of acceptance, authors will be allowed to make a correction in accordance with the suggestions of the reviewers and submit final camera-ready papers in Latex format only. The conference proceedings will be published by Springer in the Lecture Notes in Artificial Intelligence. Springer LNAI proceedings will be available online shortly after the conference. Accepted papers must be presented by the author(s) personally to be published in the conference proceedings.  
 Beware of the Fake ICAISC Conference from WASET  
 We would like to bring to your attention the issue of fake conferences organized by WASET (World Academy of Science, Engineering, and Technology). It has come to our notice that WASET has a history of hosting dubious conferences that lack academic rigor and credibility. We advise you to thoroughly research any conference before committing to it and to consult with trusted colleagues or academic advisors if you have doubts. Please read more at:  
  https://en.wikipedia.org/wiki/World_Academy_of_Science,_Engineering_and_Technology   
  https://predatory-publishing.com/how-many-conferences-does-waset-organise/   
 Indexing  
 ICAISC H5-index = 20 (provided by Google Scholar Metrics):  
  ICAISC 2021 at Research.com   
  ICAISC 2020 at Research.com   
 All the previous ICAISC proceedings belong to the top most downloaded eBooks in the SpringerLink (top 25% most downloaded eBooks). The Proceedings of ICAISC are available here: https://link.springer.com/conference/icaisc   

  Previous    Next     

 Scope  
 Contributions covering all theoretical developments and practical applications in artificial intelligence and soft computing techniques, including but not limited to the following technical areas, are invited:  
 AI and adversarial attacks 
  Agent-based systems 
  Ant colony optimization 
  Approximate reasoning 
  Artificial immune systems 
  Artificial Intelligence in modelling and simulation 
  Artificial Intelligence in scheduling and optimization 
  Artificial life 
  Bioinformatics and computational biology 
  Brain-machine interfaces 
  Cognitive systems and applications 
    
 Collective intelligence 
  Computer vision 
  Data mining 
  Differential Evolution 
  Evolutionary data mining 
  Evolutionary design 
  Evolutionary scheduling 
  Expert systems 
  Explainable AI 
  Fuzzy Computing with Words 
  Fuzzy control and intelligent systems 
  Fuzzy decision making and decision support systems 
  Fuzzy logic and fuzzy set theory 
    
 Fuzzy optimization and design 
  Fuzzy pattern recognition 
  Fuzzy systems for robotics 
  Game theory 
  Generative artificial intelligence 
  Hardware Implementations 
  Intelligent database systems 
  Knowledge engineering 
  Large language models 
  Machine learning 
  Modeling and identification 
  Molecular and quantum computing 
  Multi-agent systems 
    
 Natural language processing 
  Neural Network Theory and Architectures 
  Particle swarm optimization 
  Robotics and related fields 
  Robust and secure machine learning algorithms 
  Rough sets and rough data analysis 
  Speech understanding 
  Supervised and Unsupervised Learning 
  Type-2 fuzzy logic 
  Various Applications 
  Web intelligence 
  Human–computer interaction 

  Previous    Next     

   Your browser does not support the audio tag.    

 Committee on Informatics of the Polish Academy of Sciences     
   
 Poland Section of IEEE Computer Society Chapter C16   

 IEEE Poland Section Computational Intelligence Society Chapter   

 Co-organiser and sponsor: University of Social Sciences in Lodz, Poland      

 Important Dates  
 1. Submission of papers in accordance with Springer guidelines:   
 November 15, 2024  January 15, 2025    

 2. Notification of acceptance:   
 from Feb. 1, 2025    

 3. Submission of camera-ready papers:   
 April 10, 2025    

 4. Conference date:   
 June 22-26, 2025    

 Copyright © 2024 - Polish Neural Network Society. All rights reserved.

35. ICAIL_3 conference:
en 

 Le Laboratoire | Présentation 
  Historique 
  La Communauté cyberjustice 
  L’équipe | Chercheurs 
  Équipe Interne 
  Partenaires 
  Offres d’emploi 
  Nous joindre 
  Recherche | AJC – Autonomisation des acteurs judiciaires par l’IA 
  Vers une cyberjustice 
  Les rituels de justice 
  Droit algorithmique 
  ODR : Plateforme d’aide au règlement en ligne de litiges 
  Justice mobile 
  Caractéristiques d’initiatives numériques pour la justice sociale 
  Logiciels | Nos logiciels | La solution cyberjustice 
  JusticeBot 
  ISA – Interface de salle d’audience 
  Greffe électronique 
  Le tribunal virtuel 
  PARLe 
  Nos études de cas 
  Publications | Bibliothèque numérique sur la cyberjustice – Cyberjustice Digital Library 
  Publications scientifiques 
  Documents de travail 
  Rapports 
  Presse écrite 
  Presse radio 
  Presse télévisée 
  Revue de presse 
  Formation | Étudiant-visiteur de recherche 
  École d’été du Laboratoire de cyberjustice 
  Conférences et ateliers | Montreal 2024, Generative AI and Justice 
  Conférence Cyberjustice Europe 2023 – Les nouveaux défis de la cyberjustice : entre information, régulation et démocratie 
  ODR Forum Montreal 2023 |The State and Future of ODR 
  Blogue 
    
 Le Laboratoire | Présentation 
  Historique 
  La Communauté cyberjustice 
  L’équipe | Chercheurs 
  Équipe Interne 
  Partenaires 
  Offres d’emploi 
  Nous joindre 
  Recherche | AJC – Autonomisation des acteurs judiciaires par l’IA 
  Vers une cyberjustice 
  Les rituels de justice 
  Droit algorithmique 
  ODR : Plateforme d’aide au règlement en ligne de litiges 
  Justice mobile 
  Caractéristiques d’initiatives numériques pour la justice sociale 
  Logiciels | Nos logiciels | La solution cyberjustice 
  JusticeBot 
  ISA – Interface de salle d’audience 
  Greffe électronique 
  Le tribunal virtuel 
  PARLe 
  Nos études de cas 
  Publications | Bibliothèque numérique sur la cyberjustice – Cyberjustice Digital Library 
  Publications scientifiques 
  Documents de travail 
  Rapports 
  Presse écrite 
  Presse radio 
  Presse télévisée 
  Revue de presse 
  Formation | Étudiant-visiteur de recherche 
  École d’été du Laboratoire de cyberjustice 
  Conférences et ateliers | Montreal 2024, Generative AI and Justice 
  Conférence Cyberjustice Europe 2023 – Les nouveaux défis de la cyberjustice : entre information, régulation et démocratie 
  ODR Forum Montreal 2023 |The State and Future of ODR 
  Blogue 

  Actualités    
 À la Une 
  Blogue 
  Bourses 
  Communiqués de presse 
  Dans les Médias 
  Nouvelles 
  Offres d'emploi 
  Vidéos 

 À la Une  Colloques  Nouvelles    
   
 ICAIL Conference 2023 Recap  
                
 30 juin 2023    

 Between the 19 and 23 June, the Cyberjustice Laboratory attended the International Conference on Artificial Intelligence and Law (ICAIL 2023)   in Braga, Portugal. Our researchers, Hannes Westermann and Jinzhe Tan, contributed to several segments of the conference.  
 Hannes presented his work on JusticeBot, our AI tool providing legal information to laypeople, in the main conference. Both researchers also participated in the “Workshop on Artificial Intelligence for Access to Justice” (AI4AJ), where they compared JusticeBot’s information quality with that of ChatGPT and presented the LLMediator, a tool using large language models such as GPT-4 for conflict mediation.  
 In the “Automated Semantic Analysis of Information in Legal Text” (ASAIL)   workshop, they shared their research on automatic suggestions of relevant legal issues to users. Finally, at the doctoral consortium, Tan presented his work on the impact of emotions in the judicial process.  
 We extend our thanks to the organizers for the opportunity to present our work and participate in these valuable discussions on AI and law!  
   
  Ce contenu a été mis à jour le 27 novembre 2024 à 11 h 14 min.  

 Nous joindre 
  Infolettre 

 © 2023 Laboratoire de cyberjustice • Crédits et mentions légales   

 propulsé par force rouge   sur OpenUM.ca  ,  
  un projet de la Chaire L.R. Wilson

36. ICAISC_2 conference:
ICAISC 2025  Menu   About 
  Scope 
  Important Dates 
  Program Committee 
  Contact 
  Invited Talks 
  Submission 
  Conference Details | Program 
  Venue 
  Previous Conferences 
  Related Conferences 
  Special Sessions 
  Payment 

 ICAISC 2025  
 The 24th International Conference on Artificial Intelligence and Soft Computing  
 June 22-26, 2025  

 Related Conferences  

  Previous    Next     

 Previous Conferences  
 Previous ICAISC proceedings are available on SpringerLink: https://link.springer.com/conference/icaisc  .  
 23rd Int. Conference "Artificial Intelligence and Soft Computing"  , Zakopane, June 16-20, 2024, held in hybrid mode. | LNAI 15164, 15165 and 15166 . | Invited speakers: Włodzisław Duch, Erol Gelenbe, Janusz Kacprzyk, Wojciech Samek, Qiyu Sun, Yang Tang and Michal Pluháček. 
  22nd Int. Conference "Artificial Intelligence and Soft Computing"  , Zakopane, June 18-22, 2023, held in hybrid mode. | LNAI14125 and LNAI14126. | Invited speakers: Luís A. Alexandre, Aleksander Byrski, Włodzisław Duch, Janusz Kacprzyk, Artur Luczak, Zbigniew Michalewicz, Witold Pedrycz, Jerzy Stefanowski, Wenying Xu, Shaofu Yang. 
  21st Int. Conference "Artificial Intelligence and Soft Computing"  , Zakopane, June 19-23, 2022, held in hybrid mode. | LNCS 13588  and LNCS 13589  . | Invited speakers: Rafal Angryk, Sanghamitra Bandyopadhyay, Włodzisław Duch, Tingwen Huang, Janusz Kacprzyk, Nikola Kasabov, Adam Krzyzak, Ujjwal Maulik, Christian Napoli, Witold Pedrycz, Roman Šenkeřík. 
  20th Int. Conference "Artificial Intelligence and Soft Computing"  , Zakopane, June 21-23, 2021, held online due to COVID-19. | LNAI 12855 and 12854. | Invited speakers: Jan Chorowski, Włodzisław Duch, Janusz Kacprzyk, Nikhil R. Pal. 
  19th Int. Conference "Artificial Intelligence and Soft Computing"  , Zakopane, October 12-14, 2020, held online due to COVID-19. | LNCS 12415 is now available online. You can find information about it at https://www.springer.com/978-3-030-61400-3  or access the online version at http://link.springer.com/openurl.asp?genre=issue&issn=0302-9743&volume=12415   
  LNCS 12416 is now available online. You can find information about it at https://www.springer.com/978-3-030-61533-8  or access the online version at http://link.springer.com/openurl.asp?genre=issue&issn=0302-9743&volume=12416 | Invited speakers: Włodzisław Duch, Tom Gedeon, Jarek Gryz and Bartosz Krawczyk. 
  18th Int. Conference "Artificial Intelligence and Soft Computing"  , Zakopane, June 16-20, 2019 | LNCS 11508 is available online. You can find information about it at https://www.springer.com/978-3-030-20911-7  or access the online version at http://link.springer.com/openurl.asp?genre=issue&issn=0302-9743&volume=11508   
  LNCS 11509 is available online. You can find information about it at https://www.springer.com/978-3-030-20914-8  or access the online version at http://link.springer.com/openurl.asp?genre=issue&issn=0302-9743&volume=11509 | Invited speakers: Włodzisław Duch, Adel S. Elmaghraby, Jacek Koronacki, Ujjwal Maulik, Zbigniew Michalewicz, Witold Pedrycz and Dacheng Tao. 
  17th Int. Conference "Artificial Intelligence and Soft Computing"  , Zakopane, June 3-7, 2018 | LNAI 10841 is available online. You can find information about it at http://www.springer.com/978-3-319-91252-3  or access the online version at http://link.springer.com/openurl.asp?genre=issue&issn=0302-9743&volume=10841   
  LNAI 10842 is available online. You can find information about it at http://www.springer.com/978-3-319-91261-5  or access the online version at http://link.springer.com/openurl.asp?genre=issue&issn=0302-9743&volume=10842 | Invited speakers: Plamen Angelov, Włodzisław Duch, Ngoc-Thanh Nguyen and Andrzej Skowron. 
  16th Int. Conference "Artificial Intelligence and Soft Computing"  , Zakopane, June 11-15, 2017 | ICAISC2017 proceedings are available online as LNAI 10245 and LNAI 10246. You can find information about it at https://link.springer.com/book/10.1007/978-3-319-59063-9  , http://www.springer.com/cn/book/9783319590592 | Invited speakers: Cesare Alippi, Albert Bifet, Włodzisław Duch, João Gama, Janusz Kacprzyk, Nikola Kasabov, Tomasz Kopacz, Rudolf Kruse, Witold Pedrycz, Roman Slowinski, Ryszard Tadeusiewicz and Ivan Zelinka. 
  15th Int. Conference "Artificial Intelligence and Soft Computing"  , Zakopane, June 12-16, 2016 | ICAISC2016 proceedings are available online as LNAI 9692 and LNAI 9693. You can find information about it at http://www.springer.com/978-3-319-39377-3  , http://www.springer.com/978-3-319-39383-4  or access the online version at http://link.springer.com/openurl.asp?genre=issue&issn=0302-9743&volume=9692  and http://link.springer.com/openurl.asp?genre=issue&issn=0302-9743&volume=9693  . | Invited speakers: Swagatam Das, Wlodzislaw Duch, Erol Gelenbe, Zdzislaw Kowalczuk and Michal Czubenko, Roman Slowinski, Thomas Villmann and Xin Yao. 
  14th Int. Conference "Artificial Intelligence and Soft Computing"Zakopane, June 14-18, 2015 | ICAISC2016 proceedings are available online as LNAI 9119  and LNAI 9120  . | Invited speakers: Ewa Dudek-Dyduch, Eyke Hüllermeier, Adrian Horzyk, Tomasz Kopacz (Microsoft), James Tin-Yau KWOK, Krystian Mikolajczyk , Andrzej Obuchowicz and Witold Pedrycz. 
  13th Int. Conference "Artificial Intelligence and Soft Computing"Zakopane, June 1-5, 2014 | ICAISC2014 proceedings are available online as LNAI 8467 and LNAI 8468 . You can find information about it at http://www.springer.com/978-3-319-07172-5  , http://www.springer.com/978-3-319-07175-6  or access the online version at http://link.springer.com/openurl.asp?genre=issue&issn=0302-9743&volume=8467  , http://link.springer.com/openurl.asp?genre=issue&issn=0302-9743&volume=8468  . | Invited speakers: Hojjat Adeli, Rafal Angryk, Hisao Ishibuchi, Adam Krzyzak, Derong Liu, Henning Müller, Witold Pedrycz, Boris Stilman, Ah-Hwee Tan and Gary Yen. 
  12th Int. Conference "Artificial Intelligence and Soft Computing"Zakopane, June 9-13, 2013 
  11th Int. Conference "Artificial Intelligence and Soft Computing"Zakopane, April 29 - May 3, 2012 
  10th Int. Conference "Artificial Intelligence and Soft Computing"Zakopane, June 13-17, 2010 
  9th Int. Conference "Artificial Intelligence and Soft Computing"Zakopane, June 22-26, 2008 
  8th Int. Conference "Artificial Intelligence and Soft Computing"Zakopane, June 25-29, 2006 
  7th Int. Conference "Artificial Intelligence and Soft Computing"Zakopane, June 7-11, 2004 
  6th Int. Conference "Neural Networks and Soft Computing"Zakopane, June 11-15, 2002 
  V Conference "Neural Networks and Soft Computing"Zakopane, 6-10 VI 2000 
  IV Conference "Neural Networks and Their Applications"Zakopane, 18-22 V 1999 
  III Conference "Neural Networks and Their Applications"Kule, 14-18 X 1997 
  II Conference "Neural Networks and Their Applications"Szczyrk, 30 IV-4 V 1996 
  I Conference "Neural Networks and Their Applications"Kule, May 12-15, 1994 

  Previous    Next     

   Your browser does not support the audio tag.    

 Committee on Informatics of the Polish Academy of Sciences     
   
 Poland Section of IEEE Computer Society Chapter C16   

 IEEE Poland Section Computational Intelligence Society Chapter   

 Co-organiser and sponsor: University of Social Sciences in Lodz, Poland      

 Copyright © 2024 - Polish Neural Network Society. All rights reserved.

37. ICAISC_3 conference:
ICAISC 2025  Menu   About 
  Scope 
  Important Dates 
  Program Committee 
  Contact 
  Invited Talks 
  Submission 
  Conference Details | Program 
  Venue 
  Previous Conferences 
  Related Conferences 
  Special Sessions 
  Payment 

 ICAISC 2025  
 The 24th International Conference on Artificial Intelligence and Soft Computing  
 June 22-26, 2025  

 Program  
 TBA  

  Previous    Next     

 Submission  
 The conference proceedings will be published in the Springer-Verlag series "Lecture Notes in Artificial Intelligence", and we strongly recommend the use of the Springer LaTeX style. To ensure reasonable quality and consistency of preparation, it is important that authors adhere strictly to the instructions. Any manuscript submitted in technically unsuitable form will be returned to the author for retyping. Authors should consult Springer’s authors’ guidelines  and use their proceedings templates, either for LaTeX or for MS Word, for the preparation of their papers. Springer’s proceedings LaTeX templates are also available in Overleaf  . Springer encourages authors to include their ORCIDs  in their (final) papers. In addition, the corresponding author of each paper, acting on behalf of all of the authors of that paper, must complete and sign a Consent-to-Publish form. The corresponding author signing the copyright form should match the corresponding author marked on the paper. Once the files have been sent to Springer, changes relating to the authorship of the papers cannot be made.  
 Initial submissions must be FULL papers (preferably 12 pages) and not merely abstracts. Initial submissions have to contain an anonymized PDF  and non-anonymized sources. Papers will undergo double-blind reviewing by an international committee, and accepted on the basis of their scientific merit and relevance to the conference topics. Please prepare an anonymized PDF version of the paper being submitted. Please preserve anonymity by avoiding providing information that may identify the authors in the acknowledgements, links to websites and the literature references. Please refer to your previous work as to a work of someone else. In place of author names, please write "Anonymous ICAISC 2025 submission". Sources of the paper do not have to be anonymized.  
 Every final paper must be accompanied by the copyright form, which we ask a corresponding author to complete and sign. The copyright form in PDF is located at the Springer web site  (Licence to Publish form for LNCS, CCIS or LNBIP). It is sufficient if one author of each contribution signs the form on behalf of all the other authors. the copyright form should be submitted during the final submission as a separate zipped pdf file. Please use the following data to fill the form:  
 Title of the Book/Volume/Conference: ICAISC 2025 Proceedings 
  Volume Editor(s): L. Rutkowski et al. 
   
 All final submissions should be in a .zip compressed archive including:  
 the source (input) files, i.e. TeX source files for the text and figure files, 
  any style files, templates, and special fonts the authors may have used, 
  MS Word file in the case of using MS Word, 
  the final Postscript (.ps) or Adobe Acrobat (.pdf) file, 
  the scanned completed and signed copyright form. 
   
 By submitting the paper to the ICAISC conference the author(s) agree that they did not submit this paper to any other conference and one of them will attend the conference to present the paper.  
  Please note that all papers will be assigned a paper number. You will receive this number after you have completed the paper submission process. Authors are then required to use the paper number assigned to them for all future correspondence regarding this paper.  
 The submission system is available at https://icaiscsystem.icaisc.eu/  .  
 If you already have an account from ICAISC 2024 (or previous editions), please use this login information or click "Remind password".  

  Previous    Next     

   Your browser does not support the audio tag.    

 Committee on Informatics of the Polish Academy of Sciences     
   
 Poland Section of IEEE Computer Society Chapter C16   

 IEEE Poland Section Computational Intelligence Society Chapter   

 Co-organiser and sponsor: University of Social Sciences in Lodz, Poland      

 Venue  
 The conference is organized in Poland's premier mountain resort Zakopane, the beautiful and picturesque capital of the Polish High Tatra Mountains. Even though Zakopane is called Poland's winter capital, it is an excellent place to visit in spring. Situated at the foot of the Tatra Mountains and the Tatra National Park (with Poland's highest peak, Rysy mountain (2499m)), it offers you a chance to hike on over 240km of marked hiking trails for beginners as well as experienced climbers and explore caves (accessible only in summer). The town boasts many historic monuments, museums, art galleries and exhibitions. On your way to Zakopane you may visit Cracow, one of the most historic Polish cities, with a wonderfully preserved old city center and the largest medieval square in Europe.  
 Information about Zakopane  Discover Zakopane  Zakopane.pl  Zakopane tourist information: (+48) (18) 20-122-11  
 Information about Krakow  krakow.pl  Cracow tourist information: (+48) (12) 422 60 91, (+48) (12) 421 77 06  
 Information about Poland  poland.pl  poland.com  Polish National Tourist Office  lonely planet   

 Conference site  
 The ICAISC Conference will be held in the Bachleda Kasprowy Zakopane Hotel****. The address of the center is:  
 Bachleda Kasprowy Zakopane Hotel  ul. Szymaszkowa  34-500 Zakopane  Poland  Tel: +48 18 202 40 00    
   
 How to reach Zakopane  
 Zakopane is linked with Cracow by a 100 km highway known as the Zakopianka and a railroad. The road journey should take about 2 hours. There are several bus lines connecting the towns. You can reach Zakopane by bus from many locations by e.g. FlixBus https://www.flixbus.pl/autobusy/zakopane  . There are airports in Cracow  (Kraków) and Warsaw (Warszawa, 450 km from Zakopane). There are several flights a day between Warsaw and Cracow ( LOT Polish Airlines  ). Alternatively, you can use a train from Warsaw to get to Cracow or directly to Zakopane ( Polish State Railways Time-table  ). There are several car rental operators at the Cracow airport as well as the Warsaw airport:  
  
 Company | Phone | Fax 
 Avis | (+48)(12) 639-32-89 / (+48)(12) 629 61 09 | (+48)(12) 639-32-89 
 National | (+48)(12) 285-50-25 | (+48)(12) 637-00-89 
 Europcar | (+48)(12) 285-50-45 | (+48)(12) 285-50-45 
  
 From Cracow to Zakopane  From Balice Airport in Cracow you have to get to the Cracow PKP Railway Station area to take a bus to Zakopane. To do so you can:  
 call a taxi (phone numbers e.g. 9661 or 9622 in Cracow) cost apr 40 PLN, 
  or take a bus number 192 or 208 (ticket is less than 3 PLN). 
   
 When you arrive in Cracow you do not need to book a bus to Zakopane as there are frequent shuttle buses to Zakopane, which leave apr. every 40 min. from the area of the PKP Railway Station. The Cracow-Zakopane line is serviced by Szwagropol, trans-Frej and PKS companies. The ticket costs apr. 10 PLN. Alternatively you can use a train but the train is slower ( Polish State Railways Time-table  ).  
   
 How to reach ICAISC from Zakopane  
 Participants who arrive in Zakopane are advised to take a private mini-bus (or a taxi) in the direction to Bachleda Kasprowy Zakopane Hotel. The cost of taxi is apr. 30PLN. You can call a taxi from a payphone (phone number in Zakopane: 919 or (+48)(20) 66666).  

 Copyright © 2024 - Polish Neural Network Society. All rights reserved.

38. AISTATS_0 conference:
Skip to yearly menu bar  Skip to main content  Main Navigation  
     
   AISTATS | Help/FAQ 
  Contact AISTATS 
  Code of Conduct 
  Create Profile 
  Privacy Policy 
  My Stuff 

   Login    

   Select Year: (2023) | 2025 
  2024 
  2023 
  2022 
  2021 
  Dates 
  Calls | Call for Papers 
  Submission FAQ 
  Attend | Visa and Travel Information 
  Visiting Spain 
  Organization | AISTATS Board 
  Organizing Committee 
  About AISTATS 
  Exhibitors | View Exhibitors 
  Conference Site 

 AISTATS 2023   
 Palacio de Congresos de València, València SPAIN     
 The 26th International Conference on Artificial Intelligence and Statistics  
  Tue Apr 25th through Thu the 27th   

 Registration  
 Certificate of Attendance  Registration 2023   
 Conference Site   

  Tweet    
   
 Announcements:  
 Palacio de Congresos de València   
 Local Poster Printing:  
 Artespana Imprenta Valencia (https://artespana.es/)  
  Carrer del Pintor Zariñena, 5, Bajo 3, 46003 Valencia  
  phone number +34 647674245  

 Sponsors  
 The generous support of our sponsors allowed us to reduce our ticket prices and support diversity at the meeting with financial awards. In addition, many accepted papers at the conference were contributed by our sponsors.  
 Visit AISTATS 2023 Sponsors »    

  About Artificial Intelligence and Statistics (AISTATS)  
 AISTATS is    an interdisciplinary gathering of researchers at the intersection of computer science, artificial intelligence, machine learning, statistics, and related areas    . Since its inception in 1985, the primary goal of AISTATS has been to broaden research in these fields by promoting the exchange of ideas among them.             
 Visit AISTATS main website  for information.  

  Organizing Committee  
 General Chair  
 Francisco Ruiz (DeepMind)  
    
 Program Chair  
 Jan-Willem van de Meent (University of Amsterdam)  
  Jennifer Dy (Northeastern)  
    
 Sponsorship Chair  
 Stephan Mandt (University of California, Irivine)  
    
 Local Chair  
 Miguel Ángel Fernández-Torres (Universitat de València)  
    
 Volunteer Chair  
 Miguel Ángel Fernández-Torres (Universitat de València)  
    
 D&I Chair  
 Sinead Williamson (University of Texas at Austin)  
    
 Publication Chair  
 Tomas Geffner (University of Massachusetts Amherst)  
    
 Communications Chair  
 Maggie Makar (University of Michigan)  
  Pavel Izmailov (NYU)  
    
 Workflow Chair  
 Christian Andersson Naesseth (University of Amsterdam)  
  Davin Hill (Northeastern University)  
    
 Logistics  
 Pablo Martínez Olmos (Universidad Carlos III Madrid)  

 Foundation Board  
  
 President   
 Arindam Banerjee  
 Secretary   
 Silvia Chiappa  
 Treasurer   
 Daryl Pregibon  
 Board Members   
 Kenji Fukumizu  
  Neil D. Lawrence  
  Marina Meila  
  Bernhard Scholkopf  

  Important Dates  
  
 Sponsor Portal Open | Nov 03 '22 08:00 PM CET  * |  
 Final decisions | Jan 19 '23 (Anywhere on Earth) |  
 CancellationDeadline | Apr 14 '23 08:00 AM CEST  * |  
 All dates | Timezone: |  

 Successful Page Load   
   
 AISTATS uses cookies for essential functions only. We do not sell your personal information. Our Privacy Policy » | Accept Cookies 

 The AISTATS Logo above may be used on presentations. Right-click and choose download. It is a vector graphic and may be used at any scale.  
   
 Useful links  
 AISTATS Main Website 
  Create Profile 
  Reset / Forgot Password 

 Contact  
  82799 Kingsboro Lane, Indio CA 92201  
  Email   

 AISTATS Proceedings

39. ICA3PP_0 conference:
Skip to main content      Main navigation  
 About Us | About Us sub-navigation | Book Fairs 
  Information for Authors 
  For Organizations 
  Our Events | Our Events sub-navigation | Event Calendar 
  Upcoming Book Fairs 
  Local Interest | Local Interest sub-navigation | Ted Kooser 
  Carla's Biography of Ted Kooser 
  Golden Sower Nominess 
  Nebraska Authors 
  Contact Us | Contact Us sub-navigation | Email us 
   
 Utility Menu  
 Log in | Log-in 
  Wishlists | Wishlist 
  Cart | Cart 

  Main Menu    

 You must have JavaScript enabled to use this form.   
  All selections except for books will open in a new window  Search type  Books  Audiobooks     
 Search     
   Search        

 Algorithms and Architectures for Parallel Processing: 23rd International Conference, Ica3pp 2023, Tianjin, China, October 20-22, 2023, Proceedings, Pa (Lecture Notes in Computer Science #1448)  
 Zahir Tari (Editor)  , Keqiu Li (Editor)  , Hongyi Wu (Editor)    
 Current price:  $79.99    
 Publish Date:  March 1st, 2024   
 Publisher:   
 Springer   
   
 ISBN:   
 9789819707973   
   
 Pages:   
 504   

 You must have JavaScript enabled to use this form.   
    
    Quantity     

 Add to wishlist     
  You must have JavaScript enabled to use this form.   
  Available Formats  Paperback (3/1/2024)  Digital - Audio (Libro.FM)     

 Usually Ships in 1 to 5 Days   

 Description  
 The 7-volume set LNCS 14487-14493 constitutes the proceedings of the 23rd International Conference on Algorithms and Architectures for Parallel Processing, ICA3PP 2023, which took place in Tianjin, China, during October, 2023.  
 The 145 full papers included in this book were carefully reviewed and selected from 439 submissions. ICA3PP covers many dimensions of parallel algorithms and architectures; encompassing fundamental theoretical approaches; practical experimental projects; and commercial components and systems.  

 Other Books in Series  
   
 Preorder   

 Preorder   

 Preorder   

 Preorder   

 Preorder   

 Preorder   

 Preorder   

 Preorder   

 Preorder   

 Preorder   

 Preorder   

 Preorder   

 Preorder   

 Preorder   

 Preorder   

 Preorder   

 Preorder   

 Preorder   

 Preorder   

 You May Also Like  

 Join our Email list.  
 Join our Email list  
 Name (required)      
 Email (required)      

 Upcoming Event  
 Dec  02    
   
 THE QUIET BOOK CLUB  
   
 View event    

 More Links  
 About Us 
  Contact Us 
  Shipping Policy 
  Return Policy 
   
 Connect  
 Address  
 Chapters Books & Gifts  
  548 Seward Street  
  Seward, NE 68434    
 Phone  
 (402) 643-2282   
 Store Hours  
 Sun: Closed 
  Mon - Thu: 9:00am - 5:30pm 
  Fri: 9:00am - 5:00pm 
  Sat: 10:00am - 3:00pm 
    
 Social Media Links  

 Footer utility menu  
 Privacy Policy 
  Terms and Conditions 
  ADA Compliance 

 © 2024 Chapters Books & Gifts Powered by IndieCommerce

40. AISTATS_1 conference:
Access Denied  
 You don't have permission to access "http://www.servicenow.com/research/event/2023-aistats.html" on this server. Reference #18.d2142017.1732946978.233fd96e  
 https://errors.edgesuite.net/18.d2142017.1732946978.233fd96e

41. AISTATS_2 conference:
Proceedings of Machine Learning Research   
   
      PMLR  JMLR  DMLR  TMLR  MLOSS  FAQ  Submission Format      

 [ edit  ]  
 Volume 206: International Conference on Artificial Intelligence and Statistics, 25-27 April 2023, Palau de Congressos, Valencia, Spain  
 [ edit  ]  
 Editors: Francisco Ruiz, Jennifer Dy, Jan-Willem van de Meent   
 [ bib  ][ citeproc  ]  
 Contents:  
 Notable Papers 
  Regular Papers 
  Filter Authors:   Filter Titles:    
   
 Notable Papers  
 Blessing of Class Diversity in Pre-training  
 Yulai Zhao, Jianshu Chen, Simon Du  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:283-305   
 [ abs  ][ Download PDF  ]  
   
 BaCaDI: Bayesian Causal Discovery with Unknown Interventions  
 Alexander Hägele, Jonas Rothfuss, Lars Lorch, Vignesh Ram Somnath, Bernhard Schölkopf, Andreas Krause  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1411-1436   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Discovering Many Diverse Solutions with Bayesian Optimization  
 Natalie Maus, Kaiwen Wu, David Eriksson, Jacob Gardner  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1779-1798   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Multilevel Bayesian Quadrature  
 Kaiyu Li, Daniel Giles, Toni Karvonen, Serge Guillas, Francois-Xavier Briol  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1845-1868   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Distance-to-Set Priors and Constrained Bayesian Inference  
 Rick Presman, Jason Xu  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2310-2326   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Error Estimation for Random Fourier Features  
 Junwen Yao, N. Benjamin Erichson, Miles E. Lopes  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2348-2364   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Noisy Low-rank Matrix Optimization: Geometry of Local Minima and Convergence Rate  
 Ziye Ma, Somayeh Sojoudi  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3125-3150   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Generalized PTR: User-Friendly Recipes for Data-Adaptive Algorithms with Differential Privacy  
 Rachel Redberg, Yuqing Zhu, Yu-Xiang Wang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3977-4005   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 A Tale of Sampling and Estimation in Discounted Reinforcement Learning  
 Alberto Maria Metelli, Mirco Mutti, Marcello Restelli  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4575-4601   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 An Efficient and Continuous Voronoi Density Estimator  
 Giovanni Luca Marchetti, Vladislav Polianskii, Anastasiia Varava, Florian T. Pokorny, Danica Kragic  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4732-4744   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Safe Sequential Testing and Effect Estimation in Stratified Count Data  
 Rosanne Turner, Peter Grunwald  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4880-4893   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Particle algorithms for maximum likelihood training of latent variable models  
 Juan Kuntz, Jen Ning Lim, Adam M. Johansen  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5134-5180   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Inducing Point Allocation for Sparse Gaussian Processes in High-Throughput Bayesian Optimisation  
 Henry B. Moss, Sebastian W. Ober, Victor Picheny  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5213-5230   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Implications of sparsity and high triangle density for graph representation learning  
 Hannah Sansford, Alexander Modell, Nick Whiteley, Patrick Rubin-Delanchy  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5449-5473   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 The Schrödinger Bridge between Gaussian Measures has a Closed Form  
 Charlotte Bunne, Ya-Ping Hsieh, Marco Cuturi, Andreas Krause  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5802-5833   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Federated Learning under Distributed Concept Drift  
 Ellango Jothimurugesan, Kevin Hsieh, Jianyu Wang, Gauri Joshi, Phillip B. Gibbons  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5834-5853   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Data Banzhaf: A Robust Data Valuation Framework for Machine Learning  
 Jiachen T. Wang, Ruoxi Jia  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6388-6421   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Indeterminacy in Generative Models: Characterization and Strong Identifiability  
 Quanhan Xi, Benjamin Bloem-Reddy  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6912-6939   
 [ abs  ][ Download PDF  ]  
   
 Do Bayesian Neural Networks Need To Be Fully Stochastic?  
 Mrinank Sharma, Sebastian Farquhar, Eric Nalisnick, Tom Rainforth  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7694-7722   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Mode-Seeking Divergences: Theory and Applications to GANs  
 Cheuk Ting Li, Farzan Farnia  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8321-8350   
 [ abs  ][ Download PDF  ]  
   
 Fix-A-Step: Semi-supervised Learning From Uncurated Unlabeled Data  
 Zhe Huang, Mary-Joy Sidhom, Benjamin Wessler, Michael C. Hughes  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8373-8394   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Rethinking Initialization of the Sinkhorn Algorithm  
 James Thornton, Marco Cuturi  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8682-8698   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Don’t be fooled: label leakage in explanation methods and the importance of their quantitative evaluation  
 Neil Jethani, Adriel Saporta, Rajesh Ranganath  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8925-8953   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Origins of Low-Dimensional Adversarial Perturbations  
 Elvis Dohmatob, Chuan Guo, Morgane Goibert  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9221-9237   
 [ abs  ][ Download PDF  ]  
   
 Scalable Bicriteria Algorithms for Non-Monotone Submodular Cover  
 Victoria Crawford  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9517-9537   
 [ abs  ][ Download PDF  ]  
   
 Huber-robust confidence sequences  
 Hongjian Wang, Aaditya Ramdas  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9662-9679   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Hedging against Complexity: Distributionally Robust Optimization with Parametric Approximation  
 Garud Iyengar, Henry Lam, Tianyu Wang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9976-10011   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Who Should Predict? Exact Algorithms For Learning to Defer to Humans  
 Hussein Mozannar, Hunter Lang, Dennis Wei, Prasanna Sattigeri, Subhro Das, David Sontag  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10520-10545   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Implicit Graphon Neural Representation  
 Xinyue Xia, Gal Mishne, Yusu Wang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10619-10634   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Fitting low-rank models on egocentrically sampled partial networks  
 Ga Ming Angus Chan, Tianxi Li  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10635-10649   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 The Power of Recursion in Graph Neural Networks for Counting Substructures  
 Behrooz Tahmasebi, Derek Lim, Stefanie Jegelka  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11023-11042   
 [ abs  ][ Download PDF  ]  
   
 Using Sliced Mutual Information to Study Memorization and Generalization in Deep Neural Networks  
 Shelvia Wongso, Rohan Ghosh, Mehul Motani  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11608-11629   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Regular Papers  
 Improved Generalization Bound and Learning of Sparsity Patterns for Data-Driven Low-Rank Approximation  
 Shinsaku Sakaue, Taihei Oki  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1-10   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Meta-Uncertainty in Bayesian Model Comparison  
 Marvin Schmitt, Stefan T. Radev, Paul-Christian Bürkner  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11-29   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 PAC Learning of Halfspaces with Malicious Noise in Nearly Linear Time  
 Jie Shen  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:30-46   
 [ abs  ][ Download PDF  ]  
   
 Entropic Risk Optimization in Discounted MDPs  
 Jia Lin Hau, Marek Petrik, Mohammad Ghavamzadeh  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:47-76   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Acceleration of Frank-Wolfe Algorithms with Open-Loop Step-Sizes  
 Elias Wirth, Thomas Kerdreux, Sebastian Pokutta  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:77-100   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 An Online and Unified Algorithm for Projection Matrix Vector Multiplication with Application to Empirical Risk Minimization  
 Lianke Qin, Zhao Song, Lichen Zhang, Danyang Zhuo  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:101-156   
 [ abs  ][ Download PDF  ]  
   
 Leveraging Instance Features for Label Aggregation in Programmatic Weak Supervision  
 Jieyu Zhang, Linxin Song, Alex Ratner  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:157-171   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Stochastic Gradient Descent-Ascent: Unified Theory and New Efficient Methods  
 Aleksandr Beznosikov, Eduard Gorbunov, Hugo Berard, Nicolas Loizou  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:172-235   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Scalable marked point processes for exchangeable and non-exchangeable event sequences  
 Aristeidis Panos, Ioannis Kosmidis, Petros Dellaportas  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:236-252   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Bayesian Variable Selection in a Million Dimensions  
 Martin Jankowiak  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:253-282   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Barlow Graph Auto-Encoder for Unsupervised Network Embedding  
 Rayyan Ahmad Khan, Martin Kleinsteuber  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:306-322   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Gradient-Informed Neural Network Statistical Robustness Estimation  
 Karim TIT, Teddy Furon, Mathias Rousset  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:323-334   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Online Defense Strategies for Reinforcement Learning Against Adaptive Reward Poisoning  
 Andi Nika, Adish Singla, Goran Radanovic  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:335-358   
 [ abs  ][ Download PDF  ]  
   
 A Case of Exponential Convergence Rates for SVM  
 Vivien Cabannnes, Stefano Vigogna  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:359-374   
 [ abs  ][ Download PDF  ]  
   
 Finding Regularized Competitive Equilibria of Heterogeneous Agent Macroeconomic Models via Reinforcement Learning  
 Ruitu Xu, Yifei Min, Tianhao Wang, Michael I. Jordan, Zhaoran Wang, Zhuoran Yang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:375-407   
 [ abs  ][ Download PDF  ]  
   
 Adaptive Cholesky Gaussian Processes  
 Simon Bartels, Kristoffer Stensbo-Smidt, Pablo Moreno-Munoz, Wouter Boomsma, Jes Frellsen, Soren Hauberg  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:408-452   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Sample Complexity of Kernel-Based Q-Learning  
 Sing-Yuan Yeh, Fu-Chieh Chang, Chang-Wei Yueh, Pei-Yuan Wu, Alberto Bernacchia, Sattar Vakili  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:453-469   
 [ abs  ][ Download PDF  ]  
   
 A principled framework for the design and analysis of token algorithms  
 Hadrien Hendrikx  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:470-489   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Learning k-qubit Quantum Operators via Pauli Decomposition  
 Mohsen Heidari, Wojciech Szpankowski  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:490-504   
 [ abs  ][ Download PDF  ]  
   
 Semi-Verified PAC Learning from the Crowd  
 Shiwei Zeng, Jie Shen  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:505-522   
 [ abs  ][ Download PDF  ]  
   
 On the Capacity Limits of Privileged ERM  
 Michal Sharoni, Sivan Sabato  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:523-534   
 [ abs  ][ Download PDF  ]  
   
 USIM Gate: UpSampling Module for Segmenting Precise Boundaries concerning Entropy  
 Kyungsu Lee, Haeyun Lee, Jae Youn Hwang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:535-562   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Bayesian Structure Scores for Probabilistic Circuits  
 Yang Yang, Gennaro Gala, Robert Peharz  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:563-575   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Langevin Diffusion Variational Inference  
 Tomas Geffner, Justin Domke  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:576-593   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Overcoming Prior Misspecification in Online Learning to Rank  
 Javad Azizi, Ofer Meshi, Masrour Zoghi, Maryam Karimzadehgan  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:594-614   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Catalyst Acceleration of Error Compensated Methods Leads to Better Communication Complexity  
 Xun Qian, Hanze Dong, Tong Zhang, Peter Richtarik  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:615-649   
 [ abs  ][ Download PDF  ]  
   
 Kernel Conditional Moment Constraints for Confounding Robust Inference  
 Kei Ishikawa, Niao He  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:650-674   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Meta-learning for Robust Anomaly Detection  
 Atsutoshi Kumagai, Tomoharu Iwata, Hiroshi Takahashi, Yasuhiro Fujiwara  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:675-691   
 [ abs  ][ Download PDF  ]  
   
 Learning in RKHM: a C*-Algebraic Twist for Kernel Machines  
 Yuka Hashimoto, Masahiro Ikeda, Hachem Kadri  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:692-708   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 From Shapley Values to Generalized Additive Models and back  
 Sebastian Bordt, Ulrike von Luxburg  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:709-745   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Estimating Conditional Average Treatment Effects with Missing Treatment Information  
 Milan Kuzmanovic, Tobias Hatt, Stefan Feuerriegel  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:746-766   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Global Convergence of Over-parameterized Deep Equilibrium Models  
 Zenan Ling, Xingyu Xie, Qiuhao Wang, Zongpeng Zhang, Zhouchen Lin  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:767-787   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 A Tale of Two Efficient Value Iteration Algorithms for Solving Linear MDPs with Large Action Space  
 Zhaozhuo Xu, Zhao Song, Anshumali Shrivastava  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:788-836   
 [ abs  ][ Download PDF  ]  
   
 Adversarial De-confounding in Individualised Treatment Effects Estimation  
 Vinod K. Chauhan, Soheila Molaei, Marzia Hoque Tania, Anshul Thakur, Tingting Zhu, David A. Clifton  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:837-849   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Fast Distributed k-Means with a Small Number of Rounds  
 Tom Hess, Ron Visbord, Sivan Sabato  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:850-874   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 A New Causal Decomposition Paradigm towards Health Equity  
 Xinwei Sun, Xiangyu Zheng, Jim Weinstein  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:875-890   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Matching Map Recovery with an Unknown Number of Outliers  
 Arshak Minasyan, Tigran Galstyan, Sona Hunanyan, Arnak Dalalyan  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:891-906   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Characterizing Internal Evasion Attacks in Federated Learning  
 Taejin Kim, Shubhranshu Singh, Nikhil Madaan, Carlee Joe-Wong  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:907-921   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Optimal and Private Learning from Human Response Data  
 Duc Nguyen, Anderson Ye Zhang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:922-958   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Bayesian Optimization with Conformal Prediction Sets  
 Samuel Stanton, Wesley Maddox, Andrew Gordon Wilson  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:959-986   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Alternating Projected SGD for Equality-constrained Bilevel Optimization  
 Quan Xiao, Han Shen, Wotao Yin, Tianyi Chen  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:987-1023   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Improved Robust Algorithms for Learning with Discriminative Feature Feedback  
 Sivan Sabato  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1024-1036   
 [ abs  ][ Download PDF  ]  
   
 Weisfeiler and Leman go Hyperbolic: Learning Distance Preserving Node Representations  
 Giannis Nikolentzos, Michail Chatzianastasis, Michalis Vazirgiannis  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1037-1054   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Can 5th Generation Local Training Methods Support Client Sampling? Yes!  
 Michał Grudzień, Grigory Malinovsky, Peter Richtarik  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1055-1092   
 [ abs  ][ Download PDF  ]  
   
 qEUBO: A Decision-Theoretic Acquisition Function for Preferential Bayesian Optimization  
 Raul Astudillo, Zhiyuan Jerry Lin, Eytan Bakshy, Peter Frazier  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1093-1114   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Bayesian Hierarchical Models for Counterfactual Estimation  
 Natraj Raman, Daniele Magazzeni, Sameena Shah  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1115-1128   
 [ abs  ][ Download PDF  ]  
   
 Sequential Gradient Descent and Quasi-Newton’s Method for Change-Point Analysis  
 Xianyang Zhang, Trisha Dawn  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1129-1143   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Towards Scalable and Robust Structured Bandits: A Meta-Learning Framework  
 Runzhe Wan, Lin Ge, Rui Song  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1144-1173   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Compress Then Test: Powerful Kernel Testing in Near-linear Time  
 Carles Domingo-Enrich, Raaz Dwivedi, Lester Mackey  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1174-1218   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Select and Optimize: Learning to solve large-scale TSP instances  
 Hanni Cheng, Haosi Zheng, Ya Cong, Weihao Jiang, Shiliang Pu  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1219-1231   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Fixing by Mixing: A Recipe for Optimal Byzantine ML under Heterogeneity  
 Youssef Allouah, Sadegh Farhadkhani, Rachid Guerraoui, Nirupam Gupta, Rafael Pinot, John Stephan  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1232-1300   
 [ abs  ][ Download PDF  ]  
   
 Testing of Horn Samplers  
 Ansuman Banerjee, Shayak Chakraborty, Sourav Chakraborty, Kuldeep S. Meel, Uddalok Sarkar, Sayantan Sen  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1301-1330   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Coordinate Ascent for Off-Policy RL with Global Convergence Guarantees  
 Hsin-En Su, Yen-Ju Chen, Ping-Chun Hsieh, Xi Liu  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1331-1378   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Positional Encoder Graph Neural Networks for Geographic Data  
 Konstantin Klemmer, Nathan S. Safir, Daniel B. Neill  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1379-1389   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Coarse-Grained Smoothness for Reinforcement Learning in Metric Spaces  
 Omer Gottesman, Kavosh Asadi, Cameron S. Allen, Samuel Lobel, George Konidaris, Michael Littman  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1390-1410   
 [ abs  ][ Download PDF  ]  
   
 Statistical Analysis of Karcher Means for Random Restricted PSD Matrices  
 Hengchao Chen, Xiang Li, Qiang Sun  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1437-1456   
 [ abs  ][ Download PDF  ]  
   
 Differentially Private Synthetic Control  
 Saeyoung Rho, Rachel Cummings, Vishal Misra  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1457-1491   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Scalable Bayesian Optimization Using Vecchia Approximations of Gaussian Processes  
 Felix Jimenez, Matthias Katzfuss  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1492-1512   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 On the Neural Tangent Kernel Analysis of Randomly Pruned Neural Networks  
 Hongru Yang, Zhangyang Wang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1513-1553   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Riemannian Accelerated Gradient Methods via Extrapolation  
 Andi Han, Bamdev Mishra, Pratik Jawanpuria, Junbin Gao  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1554-1585   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Flexible risk design using bi-directional dispersion  
 Matthew J. Holland  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1586-1623   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Contextual Linear Bandits under Noisy Features: Towards Bayesian Oracles  
 Jung-Hun Kim, Se-Young Yun, Minchan Jeong, Junhyun Nam, Jinwoo Shin, Richard Combes  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1624-1645   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Deep equilibrium models as estimators for continuous latent variables  
 Russell Tsuchida, Cheng Soon Ong  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1646-1671   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Refined Convergence and Topology Learning for Decentralized SGD with Heterogeneous Data  
 Batiste Le Bars, Aurélien Bellet, Marc Tommasi, Erick Lavoie, Anne-Marie Kermarrec  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1672-1702   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 A Novel Stochastic Gradient Descent Algorithm for Learning Principal Subspaces  
 Charline Le Lan, Joshua Greaves, Jesse Farebrother, Mark Rowland, Fabian Pedregosa, Rishabh Agarwal, Marc G. Bellemare  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1703-1718   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 A Constant-Factor Approximation Algorithm for Reconciliation $k$-Median  
 Joachim Spoerhase, Kamyar Khodamoradi, Benedikt Riegel, Bruno Ordozgoiti, Aristides Gionis  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1719-1746   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Neural Laplace Control for Continuous-time Delayed Systems  
 Samuel Holt, Alihan Hüyük, Zhaozhi Qian, Hao Sun, Mihaela van der Schaar  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1747-1778   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 BlitzMask: Real-Time Instance Segmentation Approach for Mobile Devices  
 Vitalii Bulygin, Dmytro Mykheievskyi, Kyrylo Kuchynskyi  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1799-1811   
 [ abs  ][ Download PDF  ]  
   
 Exact Gradient Computation for Spiking Neural Networks via Forward Propagation  
 Jane H. Lee, Saeid Haghighatshoar, Amin Karbasi  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1812-1831   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Uni6Dv2: Noise Elimination for 6D Pose Estimation  
 Mingshan Sun, Ye Zheng, Tianpeng Bao, Jianqiu Chen, Guoqiang Jin, Liwei Wu, Rui Zhao, Xiaoke Jiang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1832-1844   
 [ abs  ][ Download PDF  ]  
   
 Direct Inference of Effect of Treatment (DIET) for a Cookieless World  
 Shiv Shankar, Ritwik Sinha, Saayan Mitra, Moumita Sinha, Madalina Fiterau  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1869-1887   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 The Ordered Matrix Dirichlet for State-Space Models  
 Niklas Stoehr, Benjamin J. Radford, Ryan Cotterell, Aaron Schein  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1888-1903   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Energy-Based Models for Functional Data using Path Measure Tilting  
 Jen Ning Lim, Sebastian Vollmer, Lorenz Wolf, Andrew Duncan  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1904-1923   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Frequentist Uncertainty Quantification in Semi-Structured Neural Networks  
 Emilio Dorigatti, Benjamin Schubert, Bernd Bischl, David Ruegamer  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1924-1941   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 NTS-NOTEARS: Learning Nonparametric DBNs With Prior Knowledge  
 Xiangyu Sun, Oliver Schulte, Guiliang Liu, Pascal Poupart  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1942-1964   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 One Policy is Enough: Parallel Exploration with a Single Policy is Near-Optimal for Reward-Free Reinforcement Learning  
 Pedro Cisneros-Velarde, Boxiang Lyu, Sanmi Koyejo, Mladen Kolar  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:1965-2001   
 [ abs  ][ Download PDF  ]  
   
 Variational Inference for Neyman-Scott Processes  
 Chengkuan Hong, Christian Shelton  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2002-2018   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Graph Alignment Kernels using Weisfeiler and Leman Hierarchies  
 Giannis Nikolentzos, Michalis Vazirgiannis  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2019-2034   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Geometric Random Walk Graph Neural Networks via Implicit Layers  
 Giannis Nikolentzos, Michalis Vazirgiannis  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2035-2053   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Model-X Sequential Testing for Conditional Independence via Testing by Betting  
 Shalev Shaer, Gal Maman, Yaniv Romano  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2054-2086   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Mixed-Effect Thompson Sampling  
 Imad Aouali, Branislav Kveton, Sumeet Katariya  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2087-2115   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Mixed Linear Regression via Approximate Message Passing  
 Nelvin Tan, Ramji Venkataramanan  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2116-2131   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 EEGNN: Edge Enhanced Graph Neural Network with a Bayesian Nonparametric Graph Model  
 Yirui Liu, Xinghao Qiao, Liying Wang, Jessica Lam  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2132-2146   
 [ abs  ][ Download PDF  ]  
   
 Estimating Total Correlation with Mutual Information Estimators  
 Ke Bai, Pengyu Cheng, Weituo Hao, Ricardo Henao, Larry Carin  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2147-2164   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Vector Optimization with Stochastic Bandit Feedback  
 Cagin Ararat, Cem Tekin  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2165-2190   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Knowledge Acquisition for Human-In-The-Loop Image Captioning  
 Ervine Zheng, Qi Yu, Rui Li, Pengcheng Shi, Anne Haake  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2191-2206   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 A Statistical Analysis of Polyak-Ruppert Averaged Q-Learning  
 Xiang Li, Wenhao Yang, Jiadong Liang, Zhihua Zhang, Michael I. Jordan  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2207-2261   
 [ abs  ][ Download PDF  ]  
   
 Linear Convergence of Gradient Descent For Finite Width Over-parametrized Linear Networks With General Initialization  
 Ziqing Xu, Hancheng Min, Salma Tarmoun, Enrique Mallada, Rene Vidal  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2262-2284   
 [ abs  ][ Download PDF  ]  
   
 “Plus/minus the learning rate”: Easy and Scalable Statistical Inference with SGD  
 Jerry Chee, Hwanwoo Kim, Panos Toulis  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2285-2309   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Fast Computation of Branching Process Transition Probabilities via ADMM  
 Achal Awasthi, Jason Xu  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2327-2347   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 AdaGDA: Faster Adaptive Gradient Descent Ascent Methods for Minimax Optimization  
 Feihu Huang, Xidong Wu, Zhengmian Hu  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2365-2389   
 [ abs  ][ Download PDF  ]  
   
 Classification of Adolescents’ Risky Behavior in Instant Messaging Conversations  
 Jaromı́r Plhák, Ondřej Sotolář, Michaela Lebedı́ková, David Šmahel  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2390-2404   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Robust Linear Regression for General Feature Distribution  
 Tom Norman, Nir Weinberger, Kfir Y. Levy  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2405-2435   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Fair learning with Wasserstein barycenters for non-decomposable performance measures  
 Solenne Gaucher, Nicolas Schreuder, Evgenii Chzhen  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2436-2459   
 [ abs  ][ Download PDF  ]  
   
 Deep Neural Networks with Efficient Guaranteed Invariances  
 Matthias Rath, Alexandru Paul Condurache  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2460-2480   
 [ abs  ][ Download PDF  ]  
   
 Fast Block Coordinate Descent for Non-Convex Group Regularizations  
 Yasutoshi Ida, Sekitoshi Kanai, Atsutoshi Kumagai  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2481-2493   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 AUC-based Selective Classification  
 Andrea Pugnana, Salvatore Ruggieri  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2494-2514   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Nonparametric Indirect Active Learning  
 Shashank Singh  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2515-2541   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Resolving the Approximability of Offline and Online Non-monotone DR-Submodular Maximization over General Convex Sets  
 Loay Mualem, Moran Feldman  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2542-2564   
 [ abs  ][ Download PDF  ]  
   
 {PF}$^2$ES: Parallel Feasible Pareto Frontier Entropy Search for Multi-Objective Bayesian Optimization  
 Jixiang Qing, Henry B. Moss, Tom Dhaene, Ivo Couckuyt  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2565-2588   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Learning Constrained Structured Spaces with Application to Multi-Graph Matching  
 Hedda Cohen Indelman, Tamir Hazan  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2589-2602   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 On the Strategyproofness of the Geometric Median  
 El-Mahdi El-Mhamdi, Sadegh Farhadkhani, Rachid Guerraoui, Lê-Nguyên Hoang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2603-2640   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Covariate-informed Representation Learning to Prevent Posterior Collapse of iVAE  
 Young-Geun Kim, Ying Liu, Xue-Xin Wei  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2641-2660   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 EGG-GAE: scalable graph neural networks for tabular data imputation  
 Lev Telyatnikov, Simone Scardapane  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2661-2676   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Group Distributionally Robust Reinforcement Learning with Hierarchical Latent Variables  
 Mengdi Xu, Peide Huang, Yaru Niu, Visak Kumar, Jielin Qiu, Chao Fang, Kuan-Hui Lee, Xuewei Qi, Henry Lam, Bo Li, Ding Zhao  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2677-2703   
 [ abs  ][ Download PDF  ]  
   
 Weather2K: A Multivariate Spatio-Temporal Benchmark Dataset for Meteorological Forecasting Based on Real-Time Observation Data from Ground Weather Stations  
 Xun Zhu, Yutong Xiong, Ming Wu, Gaozhen Nie, Bin Zhang, Ziheng Yang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2704-2722   
 [ abs  ][ Download PDF  ]  
   
 Improved Rate of First Order Algorithms for Entropic Optimal Transport  
 Yiling Luo, Yiling Xie, Xiaoming Huo  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2723-2750   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Conformal Off-Policy Prediction  
 Yingying Zhang, Chengchun Shi, Shikai Luo  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2751-2768   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Sparse Spectral Bayesian Permanental Process with Generalized Kernel  
 Jeremy Sellier, Petros Dellaportas  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2769-2791   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Adversarial Noises Are Linearly Separable for (Nearly) Random Neural Networks  
 Huishuai Zhang, Da Yu, Yiping Lu, Di He  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2792-2804   
 [ abs  ][ Download PDF  ]  
   
 Nearly Optimal Latent State Decoding in Block MDPs  
 Yassir Jedra, Junghyun Lee, Alexandre Proutiere, Se-Young Yun  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2805-2904   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 On the Limitations of the Elo, Real-World Games are Transitive, not Additive  
 Quentin Bertrand, Wojciech Marian Czarnecki, Gauthier Gidel  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2905-2921   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Agnostic PAC Learning of $k$-juntas Using $L_2$-Polynomial Regression  
 Mohsen Heidari, Wojciech Szpankowski  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2922-2938   
 [ abs  ][ Download PDF  ]  
   
 Regularization for Shuffled Data Problems via Exponential Family Priors on the Permutation Group  
 Zhenbang Wang, Emanuel Ben-David, Martin Slawski  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2939-2959   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Simulator-Based Inference with WALDO: Confidence Regions by Leveraging Prediction Algorithms and Posterior Estimators for Inverse Problems  
 Luca Masserano, Tommaso Dorigo, Rafael Izbicki, Mikael Kuusela, Ann Lee  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2960-2974   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Analysis of Catastrophic Forgetting for Random Orthogonal Transformation Tasks in the Overparameterized Regime  
 Daniel Goldfarb, Paul Hand  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2975-2993   
 [ abs  ][ Download PDF  ]  
   
 Clustering above Exponential Families with Tempered Exponential Measures  
 Ehsan Amid, Richard Nock, Manfred K. Warmuth  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:2994-3017   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Mind the (optimality) Gap: A Gap-Aware Learning Rate Scheduler for Adversarial Nets  
 Hussein Hazimeh, Natalia Ponomareva  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3018-3033   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Learning Physics-Informed Neural Networks without Stacked Back-propagation  
 Di He, Shanda Li, Wenlei Shi, Xiaotian Gao, Jia Zhang, Jiang Bian, Liwei Wang, Tie-Yan Liu  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3034-3047   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 An Optimization-based Algorithm for Non-stationary Kernel Bandits without Prior Knowledge  
 Kihyuk Hong, Yuhang Li, Ambuj Tewari  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3048-3085   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Multi-armed Bandit Experimental Design: Online Decision-making and Adaptive Inference  
 David Simchi-Levi, Chonghuan Wang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3086-3097   
 [ abs  ][ Download PDF  ]  
   
 Squeeze All: Novel Estimator and Self-Normalized Bound for Linear Contextual Bandits  
 Wonyoung Kim, Myunghee Cho Paik, Min-Hwan Oh  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3098-3124   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Byzantine-Robust Federated Learning with Optimal Statistical Rates  
 Banghua Zhu, Lun Wang, Qi Pang, Shuai Wang, Jiantao Jiao, Dawn Song, Michael I. Jordan  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3151-3178   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 An Unpooling Layer for Graph Generation  
 Yinglong Guo, Dongmian Zou, Gilad Lerman  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3179-3209   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Online Learning for Traffic Routing under Unknown Preferences  
 Devansh Jalota, Karthik Gopalakrishnan, Navid Azizan, Ramesh Johari, Marco Pavone  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3210-3229   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Byzantine-Robust Online and Offline Distributed Reinforcement Learning  
 Yiding Chen, Xuezhou Zhang, Kaiqing Zhang, Mengdi Wang, Xiaojin Zhu  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3230-3269   
 [ abs  ][ Download PDF  ]  
   
 No-Regret Learning in Two-Echelon Supply Chain with Unknown Demand Distribution  
 Mengxiao Zhang, Shi Chen, Haipeng Luo, Yingfei Wang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3270-3298   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Mode-constrained Model-based Reinforcement Learning via Gaussian Processes  
 Aidan Scannell, Carl Henrik Ek, Arthur Richards  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3299-3314   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Generative Oversampling for Imbalanced Data via Majority-Guided VAE  
 Qingzhong Ai, Pengyun Wang, Lirong He, Liangjian Wen, Lujia Pan, Zenglin Xu  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3315-3330   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 The Lie-Group Bayesian Learning Rule  
 Eren Mehmet Kiral, Thomas Moellenhoff, Mohammad Emtiyaz Khan  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3331-3352   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Singular Value Representation: A New Graph Perspective On Neural Networks  
 Dan Meller, Nicolas Berkouk  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3353-3369   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 A Finite Sample Complexity Bound for Distributionally Robust Q-learning  
 Shengbo Wang, Nian Si, Jose Blanchet, Zhengyuan Zhou  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3370-3398   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Connectivity-contrastive learning: Combining causal discovery and representation learning for multimodal data  
 Hiroshi Morioka, Aapo Hyvarinen  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3399-3426   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 A Bregman Divergence View on the Difference-of-Convex Algorithm  
 Oisin Faust, Hamza Fawzi, James Saunderson  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3427-3439   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Minority Oversampling for Imbalanced Data via Class-Preserving Regularized Auto-Encoders  
 Arnab Kumar Mondal, Lakshya Singhal, Piyush Tiwary, Parag Singla, Prathosh AP  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3440-3465   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 T-Phenotype: Discovering Phenotypes of Predictive Temporal Patterns in Disease Progression  
 Yuchao Qin, Mihaela van der Schaar, Changhee Lee  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3466-3492   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Membership Inference Attacks against Synthetic Data through Overfitting Detection  
 Boris van Breugel, Hao Sun, Zhaozhi Qian, Mihaela van der Schaar  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3493-3514   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Online Learning for Non-monotone DR-Submodular Maximization: From Full Information to Bandit Feedback  
 Qixin Zhang, Zengde Deng, Zaiyi Chen, Kuangqi Zhou, Haoyuan Hu, Yu Yang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3515-3537   
 [ abs  ][ Download PDF  ]  
   
 Robust Variational Autoencoding with Wasserstein Penalty for Novelty Detection  
 Chieh-Hsin Lai, Dongmian Zou, Gilad Lerman  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3538-3567   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 To Impute or not to Impute? Missing Data in Treatment Effect Estimation  
 Jeroen Berrevoets, Fergus Imrie, Trent Kyono, James Jordon, Mihaela van der Schaar  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3568-3590   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 No-regret Sample-efficient Bayesian Optimization for Finding Nash Equilibria with Unknown Utilities  
 Sebastian Shenghong Tay, Quoc Phong Nguyen, Chuan Sheng Foo, Bryan Kian Hsiang Low  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3591-3619   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Noise-Aware Statistical Inference with Differentially Private Synthetic Data  
 Ossi Räisä, Joonas Jälkö, Samuel Kaski, Antti Honkela  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3620-3643   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 ASkewSGD : An Annealed interval-constrained Optimisation method to train Quantized Neural Networks  
 Louis Leconte, Sholom Schechtman, Eric Moulines  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3644-3663   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Transport Elliptical Slice Sampling  
 Alberto Cabezas, Christopher Nemeth  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3664-3676   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Towards Balanced Representation Learning for Credit Policy Evaluation  
 Yiyan Huang, Cheuk Hang Leung, Shumin Ma, Zhiri Yuan, Qi Wu, Siyi Wang, Dongdong Wang, Zhixiang Huang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3677-3692   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Convergence of Stein Variational Gradient Descent under a Weaker Smoothness Condition  
 Lukang Sun, Avetik Karagulyan, Peter Richtarik  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3693-3717   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 MARS: Masked Automatic Ranks Selection in Tensor Decompositions  
 Maxim Kodryan, Dmitry Kropotov, Dmitry Vetrov  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3718-3732   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Learning from Multiple Sources for Data-to-Text and Text-to-Data  
 Song Duong, Alberto Lumbreras, Mike Gartrell, Patrick Gallinari  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3733-3753   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Sparse Bayesian optimization  
 Sulin Liu, Qing Feng, David Eriksson, Benjamin Letham, Eytan Bakshy  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3754-3774   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 On the bias of K-fold cross validation with stable learners  
 Anass Aghbalou, Anne Sabourin, François Portier  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3775-3794   
 [ abs  ][ Download PDF  ]  
   
 Bayesian Convolutional Deep Sets with Task-Dependent Stationary Prior  
 Yohan Jung, Jinkyoo Park  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3795-3824   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Sample Efficiency of Data Augmentation Consistency Regularization  
 Shuo Yang, Yijun Dong, Rachel Ward, Inderjit S. Dhillon, Sujay Sanghavi, Qi Lei  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3825-3853   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 ANACONDA: An Improved Dynamic Regret Algorithm for Adaptive Non-Stationary Dueling Bandits  
 Thomas Kleine Buening, Aadirupa Saha  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3854-3878   
 [ abs  ][ Download PDF  ]  
   
 Deep Joint Source-Channel Coding with Iterative Source Error Correction  
 Changwoo Lee, Xiao Hu, Hun-Seok Kim  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3879-3902   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 On-Demand Communication for Asynchronous Multi-Agent Bandits  
 Yu-Zhen Janice Chen, Lin Yang, Xuchuang Wang, Xutong Liu, Mohammad Hajiesmaili, John C. S. Lui, Don Towsley  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3903-3930   
 [ abs  ][ Download PDF  ]  
   
 The ELBO of Variational Autoencoders Converges to a Sum of Entropies  
 Simon Damm, Dennis Forster, Dmytro Velychko, Zhenwen Dai, Asja Fischer, Jörg Lücke  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3931-3960   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Autoencoded sparse Bayesian in-IRT factorization, calibration, and amortized inference for the Work Disability Functional Assessment Battery  
 Joshua C. Chang, Carson C. Chow, Julia Porcino  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:3961-3976   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Provably Efficient Reinforcement Learning via Surprise Bound  
 Hanlin Zhu, Ruosong Wang, Jason Lee  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4006-4032   
 [ abs  ][ Download PDF  ]  
   
 FAIR: Fair Collaborative Active Learning with Individual Rationality for Scientific Discovery  
 Xinyi Xu, Zhaoxuan Wu, Arun Verma, Chuan Sheng Foo, Bryan Kian Hsiang Low  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4033-4057   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Sampling From a Schrödinger Bridge  
 Austin Stromme  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4058-4067   
 [ abs  ][ Download PDF  ]  
   
 A Multi-Task Gaussian Process Model for Inferring Time-Varying Treatment Effects in Panel Data  
 Yehu Chen, Annamaria Prati, Jacob Montgomery, Roman Garnett  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4068-4088   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Deep Grey-Box Modeling With Adaptive Data-Driven Models Toward Trustworthy Estimation of Theory-Driven Models  
 Naoya Takeishi, Alexandros Kalousis  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4089-4100   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Active Learning for Single Neuron Models with Lipschitz Non-Linearities  
 Aarshvi Gajjar, Christopher Musco, Chinmay Hegde  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4101-4113   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Exploration in Reward Machines with Low Regret  
 Hippolyte Bourel, Anders Jonsson, Odalric-Ambrym Maillard, Mohammad Sadegh Talebi  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4114-4146   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 On Universal Portfolios with Continuous Side Information  
 Alankrita Bhatt, J. Jon Ryu, Young-Han Kim  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4147-4163   
 [ abs  ][ Download PDF  ]  
   
 Likelihood-Based Generative Radiance Field with Latent Space Energy-Based Model for 3D-Aware Disentangled Image Representation  
 Yaxuan Zhu, Jianwen Xie, Ping Li  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4164-4180   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 The Lauritzen-Chen Likelihood For Graphical Models  
 Ilya Shpitser  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4181-4195   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Bayesian Strategy-Proof Facility Location via Robust Estimation  
 Emmanouil Zampetakis, Fred Zhang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4196-4208   
 [ abs  ][ Download PDF  ]  
   
 Unsupervised representation learning with recognition-parametrised probabilistic models  
 William I. Walker, Hugo Soulat, Changmin Yu, Maneesh Sahani  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4209-4230   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Universal Agent Mixtures and the Geometry of Intelligence  
 Samuel Allen Alexander, David Quarel, Len Du, Marcus Hutter  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4231-4246   
 [ abs  ][ Download PDF  ]  
   
 The communication cost of security and privacy in federated frequency estimation  
 Wei-Ning Chen, Ayfer Ozgur, Graham Cormode, Akash Bharadwaj  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4247-4274   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Learning While Scheduling in Multi-Server Systems With Unknown Statistics: MaxWeight with Discounted UCB  
 Zixian Yang, R. Srikant, Lei Ying  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4275-4312   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Piecewise Stationary Bandits under Risk Criteria  
 Sujay Bhatt, Guanhua Fang, Ping Li  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4313-4335   
 [ abs  ][ Download PDF  ]  
   
 Does Label Differential Privacy Prevent Label Inference Attacks?  
 Ruihan Wu, Jin Peng Zhou, Kilian Q. Weinberger, Chuan Guo  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4336-4347   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Understanding Multimodal Contrastive Learning and Incorporating Unpaired Data  
 Ryumei Nakada, Halil Ibrahim Gulluk, Zhun Deng, Wenlong Ji, James Zou, Linjun Zhang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4348-4380   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Conjugate Gradient Method for Generative Adversarial Networks  
 Hiroki Naganuma, Hideaki Iiduka  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4381-4408   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Subset verification and search algorithms for causal DAGs  
 Davin Choo, Kirankumar Shiragur  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4409-4442   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Distributed Offline Policy Optimization Over Batch Data  
 Han Shen, Songtao Lu, Xiaodong Cui, Tianyi Chen  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4443-4472   
 [ abs  ][ Download PDF  ]  
   
 Toward Fairness in Text Generation via Mutual Information Minimization based on Importance Sampling  
 Rui Wang, Pengyu Cheng, Ricardo Henao  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4473-4485   
 [ abs  ][ Download PDF  ]  
   
 Learning Sparse Graphon Mean Field Games  
 Christian Fabian, Kai Cui, Heinz Koeppl  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4486-4514   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Temporal Graph Neural Networks for Irregular Data  
 Joel Oskarsson, Per Sidén, Fredrik Lindsten  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4515-4531   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Oblivious near-optimal sampling for multidimensional signals with Fourier constraints  
 Xingyu Xu, Yuantao Gu  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4532-4555   
 [ abs  ][ Download PDF  ]  
   
 Isotropic Gaussian Processes on Finite Spaces of Graphs  
 Viacheslav Borovitskiy, Mohammad Reza Karimi, Vignesh Ram Somnath, Andreas Krause  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4556-4574   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Mean Parity Fair Regression in RKHS  
 Shaokui Wei, Jiayin Liu, Bing Li, Hongyuan Zha  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4602-4628   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 A Unified Perspective on Regularization and Perturbation in Differentiable Subset Selection  
 Xiangqian Sun, Cheuk Hang Leung, Yijun Li, Qi Wu  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4629-4642   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Nyström Method for Accurate and Scalable Implicit Differentiation  
 Ryuichiro Hataya, Makoto Yamada  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4643-4654   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Fair Representation Learning with Unreliable Labels  
 Yixuan Zhang, Feng Zhou, Zhidong Li, Yang Wang, Fang Chen  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4655-4667   
 [ abs  ][ Download PDF  ]  
   
 Neural Discovery of Permutation Subgroups  
 Pavan Karjol, Rohan Kashyap, Prathosh AP  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4668-4678   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Feasible Recourse Plan via Diverse Interpolation  
 Duy Nguyen, Ngoc Bui, Viet Anh Nguyen  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4679-4698   
 [ abs  ][ Download PDF  ]  
   
 Computing Abductive Explanations for Boosted Trees  
 Gilles Audemard, Jean-Marie Lagniez, Pierre Marquis, Nicolas Szczepanski  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4699-4711   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 A Statistical Learning Take on the Concordance Index for Survival Analysis  
 Kevin Elgui, Alex Nowak, Geneviève Robin  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4712-4731   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Equivariant Representation Learning via Class-Pose Decomposition  
 Giovanni Luca Marchetti, Gustaf Tegnér, Anastasiia Varava, Danica Kragic  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4745-4756   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Approximating a RUM from Distributions on $k$-Slates  
 Flavio Chierichetti, Mirko Giacchini, Ravi Kumar, Alessandro Panconesi, Andrew Tomkins  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4757-4767   
 [ abs  ][ Download PDF  ]  
   
 Mediated Uncoupled Learning and Validation with Bregman Divergences: Loss Family with Maximal Generality  
 Ikko Yamane, Yann Chevaleyre, Takashi Ishida, Florian Yger  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4768-4801   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Coordinate Descent for SLOPE  
 Johan Larsson, Quentin Klopfenstein, Mathurin Massias, Jonas Wallin  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4802-4821   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Multi-task Representation Learning with Stochastic Linear Bandits  
 Leonardo Cella, Karim Lounici, Grégoire Pacreau, Massimiliano Pontil  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4822-4847   
 [ abs  ][ Download PDF  ]  
   
 A Sea of Words: An In-Depth Analysis of Anchors for Text Data  
 Gianluigi Lopardo, Frederic Precioso, Damien Garreau  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4848-4879   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 High-Dimensional Private Empirical Risk Minimization by Greedy Coordinate Descent  
 Paul Mangold, Aurélien Bellet, Joseph Salmon, Marc Tommasi  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4894-4916   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 On Generalization of Decentralized Learning with Separable Data  
 Hossein Taheri, Christos Thrampoulidis  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4917-4945   
 [ abs  ][ Download PDF  ]  
   
 Neural Simulated Annealing  
 Alvaro H.C. Correia, Daniel E. Worrall, Roberto Bondesan  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4946-4962   
 [ abs  ][ Download PDF  ]  
   
 Adaptation to Misspecified Kernel Regularity in Kernelised Bandits  
 Yusha Liu, Aarti Singh  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4963-4985   
 [ abs  ][ Download PDF  ]  
   
 Gaussian Processes on Distributions based on Regularized Optimal Transport  
 François Bachoc, Louis Béthune, Alberto Gonzalez-Sanz, Jean-Michel Loubes  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:4986-5010   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Optimal Contextual Bandits with Knapsacks under Realizability via Regression Oracles  
 Yuxuan Han, Jialin Zeng, Yang Wang, Yang Xiang, Jiheng Zhang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5011-5035   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Bounding Evidence and Estimating Log-Likelihood in VAE  
 Łukasz Struski, Marcin Mazur, Paweł Batorski, Przemysław Spurek, Jacek Tabor  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5036-5051   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Privacy-preserving Sparse Generalized Eigenvalue Problem  
 Lijie Hu, Zihang Xiang, Jiabin Liu, Di Wang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5052-5062   
 [ abs  ][ Download PDF  ]  
   
 Asymptotic Bayes risk of semi-supervised multitask learning on Gaussian mixture  
 Minh-Toan Nguyen, Romain Couillet  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5063-5078   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Manifold Restricted Interventional Shapley Values  
 Muhammad Faaiz Taufiq, Patrick Blöbaum, Lenon Minorics  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5079-5106   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 A Variance-Reduced and Stabilized Proximal Stochastic Gradient Method with Support Identification Guarantees for Structured Optimization  
 Yutong Dai, Guanyi Wang, Frank E. Curtis, Daniel P. Robinson  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5107-5133   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Complex-to-Real Sketches for Tensor Products with Applications to the Polynomial Kernel  
 Jonas Wacker, Ruben Ohana, Maurizio Filippone  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5181-5212   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Nonmyopic Multiclass Active Search with Diminishing Returns for Diverse Discovery  
 Quan Nguyen, Roman Garnett  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5231-5249   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Efficient fair PCA for fair representation learning  
 Matthäus Kleindessner, Michele Donini, Chris Russell, Muhammad Bilal Zafar  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5250-5270   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Unified Perspective on Probability Divergence via the Density-Ratio Likelihood: Bridging KL-Divergence and Integral Probability Metrics  
 Masahiro Kato, Masaaki Imaizumi, Kentaro Minami  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5271-5298   
 [ abs  ][ Download PDF  ]  
   
 Federated Averaging Langevin Dynamics: Toward a unified theory and new algorithms  
 Vincent Plassier, Eric Moulines, Alain Durmus  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5299-5356   
 [ abs  ][ Download PDF  ]  
   
 Adversarial Random Forests for Density Estimation and Generative Modeling  
 David S. Watson, Kristin Blesch, Jan Kapar, Marvin N. Wright  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5357-5375   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Smoothly Giving up: Robustness for Simple Models  
 Tyler Sypherd, Nathaniel Stromberg, Richard Nock, Visar Berisha, Lalitha Sankar  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5376-5410   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 A Tighter Problem-Dependent Regret Bound for Risk-Sensitive Reinforcement Learning  
 Xiaoyan Hu, Ho-Fung Leung  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5411-5437   
 [ abs  ][ Download PDF  ]  
   
 Finite time analysis of temporal difference learning with linear function approximation: Tail averaging and regularisation  
 Gandharv Patil, Prashanth L.A., Dheeraj Nagaraj, Doina Precup  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5438-5448   
 [ abs  ][ Download PDF  ]  
   
 Asymptotically Unbiased Off-Policy Policy Evaluation when Reusing Old Data in Nonstationary Environments  
 Vincent Liu, Yash Chandak, Philip Thomas, Martha White  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5474-5492   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Is interpolation benign for random forest regression?  
 Ludovic Arnould, Claire Boyer, Erwan Scornet  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5493-5548   
 [ abs  ][ Download PDF  ]  
   
 TabLLM: Few-shot Classification of Tabular Data with Large Language Models  
 Stefan Hegselmann, Alejandro Buendia, Hunter Lang, Monica Agrawal, Xiaoyi Jiang, David Sontag  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5549-5581   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 A Faster Sampler for Discrete Determinantal Point Processes  
 Simon Barthelmé, Nicolas Tremblay, Pierre-Olivier Amblard  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5582-5592   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Faithful Heteroscedastic Regression with Neural Networks  
 Andrew Stirn, Harm Wessels, Megan Schertzer, Laura Pereira, Neville Sanjana, David Knowles  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5593-5613   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Boosted Off-Policy Learning  
 Ben London, Levi Lu, Ted Sandler, Thorsten Joachims  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5614-5640   
 [ abs  ][ Download PDF  ]  
   
 Symmetric (Optimistic) Natural Policy Gradient for Multi-Agent Learning with Parameter Convergence  
 Sarath Pattathil, Kaiqing Zhang, Asuman Ozdaglar  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5641-5685   
 [ abs  ][ Download PDF  ]  
   
 A Contrastive Approach to Online Change Point Detection  
 Nikita Puchkin, Valeriia Shcherbakova  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5686-5713   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Active Membership Inference Attack under Local Differential Privacy in Federated Learning  
 Truc Nguyen, Phung Lai, Khang Tran, NhatHai Phan, My T. Thai  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5714-5730   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Differentially Private Matrix Completion through Low-rank Matrix Factorization  
 Lingxiao Wang, Boxin Zhao, Mladen Kolar  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5731-5748   
 [ abs  ][ Download PDF  ]  
   
 Private Non-Convex Federated Learning Without a Trusted Server  
 Andrew Lowy, Ali Ghafelebashi, Meisam Razaviyayn  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5749-5786   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Variational Boosted Soft Trees  
 Tristan Cinquin, Tammo Rukat, Philipp Schmidt, Martin Wistuba, Artur Bekasov  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5787-5801   
 [ abs  ][ Download PDF  ]  
   
 Cooperative Inverse Decision Theory for Uncertain Preferences  
 Zachary Robertson, Hantao Zhang, Sanmi Koyejo  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5854-5868   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Falsification of Internal and External Validity in Observational Studies via Conditional Moment Restrictions  
 Zeshan Hussain, Ming-Chieh Shih, Michael Oberst, Ilker Demirel, David Sontag  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5869-5898   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Adaptive Dimension Reduction and Variational Inference for Transductive Few-Shot Classification  
 Yuqing Hu, Stephane Pateux, Vincent Gripon  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5899-5917   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Heavy Sets with Applications to Interpretable Machine Learning Diagnostics  
 Dmitry Malioutov, Sanjeeb Dash, Dennis Wei  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5918-5930   
 [ abs  ][ Download PDF  ]  
   
 Stochastic Mirror Descent for Large-Scale Sparse Recovery  
 Sasila Ilandarideva, Yannis Bekri, Anatoli Iouditski, Vianney Perchet  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5931-5957   
 [ abs  ][ Download PDF  ]  
   
 High Probability Bounds for Stochastic Continuous Submodular Maximization  
 Evan Becker, Jingdong Gao, Ted Zadouri, Baharan Mirzasoleiman  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5958-5979   
 [ abs  ][ Download PDF  ]  
   
 Average Adjusted Association: Efficient Estimation with High Dimensional Confounders  
 Sung Jae Jun, Sokbae Lee  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5980-5996   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Reinforcement Learning for Adaptive Mesh Refinement  
 Jiachen Yang, Tarik Dzanic, Brenden Petersen, Jun Kudo, Ketan Mittal, Vladimir Tomov, Jean-Sylvain Camier, Tuo Zhao, Hongyuan Zha, Tzanio Kolev, Robert Anderson, Daniel Faissol  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:5997-6014   
 [ abs  ][ Download PDF  ]  
   
 Risk Bounds on Aleatoric Uncertainty Recovery  
 Yikai Zhang, Jiahe Lin, Fengpei Li, Yeshaya Adler, Kashif Rasul, Anderson Schneider, Yuriy Nevmyvaka  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6015-6036   
 [ abs  ][ Download PDF  ]  
   
 Robust and Agnostic Learning of Conditional Distributional Treatment Effects  
 Nathan Kallus, Miruna Oprescu  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6037-6060   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Optimism and Delays in Episodic Reinforcement Learning  
 Benjamin Howson, Ciara Pike-Burke, Sarah Filippi  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6061-6094   
 [ abs  ][ Download PDF  ]  
   
 Delayed Feedback in Generalised Linear Bandits Revisited  
 Benjamin Howson, Ciara Pike-Burke, Sarah Filippi  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6095-6119   
 [ abs  ][ Download PDF  ]  
   
 Stochastic Tree Ensembles for Estimating Heterogeneous Effects  
 Nikolay Krantsevich, Jingyu He, P. Richard Hahn  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6120-6131   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Minimax Nonparametric Two-Sample Test under Adversarial Losses  
 Rong Tang, Yun Yang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6132-6165   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Dimensionality Collapse: Optimal Measurement Selection for Low-Error Infinite-Horizon Forecasting  
 Helmuth Naumer, Farzad Kamalabadi  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6166-6198   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Distill n’ Explain: explaining graph neural networks using simple surrogates  
 Tamara Pereira, Erik Nascimento, Lucas E. Resck, Diego Mesquita, Amauri Souza  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6199-6214   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Nonstationary Bandit Learning via Predictive Sampling  
 Yueyang Liu, Benjamin Van Roy, Kuang Xu  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6215-6244   
 [ abs  ][ Download PDF  ]  
   
 Continuous-Time Decision Transformer for Healthcare Applications  
 Zhiyue Zhang, Hongyuan Mei, Yanxun Xu  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6245-6262   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Dueling RL: Reinforcement Learning with Trajectory Preferences  
 Aadirupa Saha, Aldo Pacchiano, Jonathan Lee  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6263-6289   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Discrete Langevin Samplers via Wasserstein Gradient Flow  
 Haoran Sun, Hanjun Dai, Bo Dai, Haomin Zhou, Dale Schuurmans  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6290-6313   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Generalization in Graph Neural Networks: Improved PAC-Bayesian Bounds on Graph Diffusion  
 Haotian Ju, Dongyue Li, Aneesh Sharma, Hongyang R. Zhang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6314-6341   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Efficient Planning in Combinatorial Action Spaces with Applications to Cooperative Multi-Agent Reinforcement Learning  
 Volodymyr Tkachuk, Seyed Alireza Bakhtiari, Johannes Kirschner, Matej Jusup, Ilija Bogunovic, Csaba Szepesvári  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6342-6370   
 [ abs  ][ Download PDF  ]  
   
 NODAGS-Flow: Nonlinear Cyclic Causal Structure Learning  
 Muralikrishnna G Sethuraman, Romain Lopez, Rahul Mohan, Faramarz Fekri, Tommaso Biancalani, Jan-Christian Huetter  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6371-6387   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Revisiting Fair-PAC Learning and the Axioms of Cardinal Welfare  
 Cyrus Cousins  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6422-6442   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Distributionally Robust Policy Gradient for Offline Contextual Bandits  
 Zhouhao Yang, Yihong Guo, Pan Xu, Anqi Liu, Animashree Anandkumar  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6443-6462   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 A stopping criterion for Bayesian optimization by the gap of expected minimum simple regrets  
 Hideaki Ishibashi, Masayuki Karasuyama, Ichiro Takeuchi, Hideitsu Hino  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6463-6497   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 LOFT: Finding Lottery Tickets through Filter-wise Training  
 Qihan Wang, Chen Dun, Fangshuo Liao, Chris Jermaine, Anastasios Kyrillidis  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6498-6526   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Provably Efficient Model-Free Algorithms for Non-stationary CMDPs  
 Honghao Wei, Arnob Ghosh, Ness Shroff, Lei Ying, Xingyu Zhou  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6527-6570   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Precision Recall Cover: A Method For Assessing Generative Models  
 Fasil Cheema, Ruth Urner  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6571-6594   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Reconstructing Training Data from Model Gradient, Provably  
 Zihan Wang, Jason Lee, Qi Lei  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6595-6612   
 [ abs  ][ Download PDF  ]  
   
 Scalable Spectral Clustering with Group Fairness Constraints  
 Ji Wang, Ding Lu, Ian Davidson, Zhaojun Bai  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6613-6629   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Efficient and Light-Weight Federated Learning via Asynchronous Distributed Dropout  
 Chen Dun, Mirian Hipolito, Chris Jermaine, Dimitrios Dimitriadis, Anastasios Kyrillidis  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6630-6660   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Learning with Partial Forgetting in Modern Hopfield Networks  
 Toshihiro Ota, Ikuro Sato, Rei Kawakami, Masayuki Tanaka, Nakamasa Inoue  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6661-6673   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Efficiently Forgetting What You Have Learned in Graph Representation Learning via Projection  
 Weilin Cong, Mehrdad Mahdavi  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6674-6703   
 [ abs  ][ Download PDF  ]  
   
 Optimizing Pessimism in Dynamic Treatment Regimes: A Bayesian Learning Approach  
 Yunzhe Zhou, Zhengling Qi, Chengchun Shi, Lexin Li  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6704-6721   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Uncertainty-aware Unsupervised Video Hashing  
 Yucheng Wang, Mingyuan Zhou, Yu Sun, Xiaoning Qian  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6722-6740   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Incorporating functional summary information in Bayesian neural networks using a Dirichlet process likelihood approach  
 Vishnu Raj, Tianyu Cui, Markus Heinonen, Pekka Marttinen  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6741-6763   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Structure of Nonlinear Node Embeddings in Stochastic Block Models  
 Christopher Harker, Aditya Bhaskara  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6764-6782   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 On Model Selection Consistency of Lasso for High-Dimensional Ising Models  
 Xiangming Meng, Tomoyuki Obuchi, Yoshiyuki Kabashima  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6783-6805   
 [ abs  ][ Download PDF  ]  
   
 Optimal Sample Complexity Bounds for Non-convex Optimization under Kurdyka-Lojasiewicz Condition  
 Qian Yu, Yining Wang, Baihe Huang, Qi Lei, Jason D. Lee  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6806-6821   
 [ abs  ][ Download PDF  ]  
   
 INO: Invariant Neural Operators for Learning Complex Physical Systems with Momentum Conservation  
 Ning Liu, Yue Yu, Huaiqian You, Neeraj Tatikola  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6822-6838   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Transport Reversible Jump Proposals  
 Laurence Davies, Robert Salomone, Matthew Sutton, Chris Drovandi  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6839-6852   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Convex Bounds on the Softmax Function with Applications to Robustness Verification  
 Dennis Wei, Haoze Wu, Min Wu, Pin-Yu Chen, Clark Barrett, Eitan Farchi  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6853-6878   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Strong Lottery Ticket Hypothesis with $\varepsilon$–perturbation  
 Zheyang Xiong, Fangshuo Liao, Anastasios Kyrillidis  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6879-6902   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Two-Sample Tests for Inhomogeneous Random Graphs in $L_r$ Norm: Optimality and Asymptotics  
 Sayak Chatterjee, Dibyendu Saha, Soham Dan, Bhaswar B. Bhattacharya  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6903-6911   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Differentiable Change-point Detection With Temporal Point Processes  
 Paramita Koley, Harshavardhan Alimi, Shrey Singla, Sourangshu Bhattacharya, Niloy Ganguly, Abir De  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6940-6955   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Recurrent Neural Networks and Universal Approximation of Bayesian Filters  
 Adrian N. Bishop, Edwin V. Bonilla  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6956-6967   
 [ abs  ][ Download PDF  ]  
   
 Thresholded linear bandits  
 Nishant A. Mehta, Junpei Komiyama, Vamsi K. Potluru, Andrea Nguyen, Mica Grant-Hagen  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:6968-7020   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Bayesian Optimization over High-Dimensional Combinatorial Spaces via Dictionary-based Embeddings  
 Aryan Deshwal, Sebastian Ament, Maximilian Balandat, Eytan Bakshy, Janardhan Rao Doppa, David Eriksson  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7021-7039   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Unifying local and global model explanations by functional decomposition of low dimensional structures  
 Munir Hiabu, Joseph T. Meyer, Marvin N. Wright  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7040-7060   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 SMCP3: Sequential Monte Carlo with Probabilistic Program Proposals  
 Alexander K. Lew, George Matheos, Tan Zhi-Xuan, Matin Ghavamizadeh, Nishad Gothoskar, Stuart Russell, Vikash K. Mansinghka  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7061-7088   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 On double-descent in uncertainty quantification in overparametrized models  
 Lucas Clarte, Bruno Loureiro, Florent Krzakala, Lenka Zdeborova  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7089-7125   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Learning Treatment Effects from Observational and Experimental Data  
 Sofia Triantafillou, Fattaneh Jabbari, Gregory F. Cooper  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7126-7146   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 On the Accelerated Noise-Tolerant Power Method  
 Zhiqiang Xu  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7147-7175   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Clustering High-dimensional Data with Ordered Weighted $\ell_1$ Regularization  
 Chandramauli Chakraborty, Sayan Paul, Saptarshi Chakraborty, Swagatam Das  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7176-7189   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Flexible and Efficient Contextual Bandits with Heterogeneous Treatment Effect Oracles  
 Aldo Gael Carranza, Sanath Kumar Krishnamurthy, Susan Athey  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7190-7212   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Faster Projection-Free Augmented Lagrangian Methods via Weak Proximal Oracle  
 Dan Garber, Tsur Livney, Shoham Sabach  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7213-7238   
 [ abs  ][ Download PDF  ]  
   
 Meta-Learning with Adjoint Methods  
 Shibo Li, Zheng Wang, Akil Narayan, Robert Kirby, Shandian Zhe  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7239-7251   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Combining Graphical and Algebraic Approaches for Parameter Identification in Latent Variable Structural Equation Models  
 Ankur Ankan, Inge Wortel, Kenneth Bollen, Johannes Textor  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7252-7264   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Explicit Regularization in Overparametrized Models via Noise Injection  
 Antonio Orvieto, Anant Raj, Hans Kersting, Francis Bach  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7265-7287   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Efficient Informed Proposals for Discrete Distributions via Newton’s Series Approximation  
 Yue Xiang, Dongyao Zhu, Bowen Lei, Dongkuan Xu, Ruqi Zhang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7288-7310   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 An Homogeneous Unbalanced Regularized Optimal Transport Model with Applications to Optimal Transport with Boundary  
 Theo Lacombe  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7311-7330   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Prediction-Oriented Bayesian Active Learning  
 Freddie Bickford Smith, Andreas Kirsch, Sebastian Farquhar, Yarin Gal, Adam Foster, Tom Rainforth  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7331-7348   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Active Exploration via Experiment Design in Markov Chains  
 Mojmir Mutny, Tadeusz Janik, Andreas Krause  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7349-7374   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 But Are You Sure? An Uncertainty-Aware Perspective on Explainable AI  
 Charles Marx, Youngsuk Park, Hilaf Hasson, Yuyang Wang, Stefano Ermon, Luke Huan  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7375-7391   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Identification of Blackwell Optimal Policies for Deterministic MDPs  
 Victor Boone, Bruno Gaujal  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7392-7424   
 [ abs  ][ Download PDF  ]  
   
 Multi-Fidelity Bayesian Optimization with Unreliable Information Sources  
 Petrus Mikkola, Julien Martinelli, Louis Filstroff, Samuel Kaski  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7425-7454   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Randomized Greedy Learning for Non-monotone Stochastic Submodular Maximization Under Full-bandit Feedback  
 Fares Fourati, Vaneet Aggarwal, Christopher Quinn, Mohamed-Slim Alouini  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7455-7471   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Protecting Global Properties of Datasets with Distribution Privacy Mechanisms  
 Michelle Chen, Olga Ohrimenko  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7472-7491   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Incremental Aggregated Riemannian Gradient Method for Distributed PCA  
 Xiaolu Wang, Yuchen Jiao, Hoi-To Wai, Yuantao Gu  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7492-7510   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Minimax-Bayes Reinforcement Learning  
 Thomas Kleine Buening, Christos Dimitrakakis, Hannes Eriksson, Divya Grover, Emilio Jorge  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7511-7527   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Retrospective Uncertainties for Deep Models using Vine Copulas  
 Natasa Tagasovska, Firat Ozdemir, Axel Brando  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7528-7539   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Optimal Algorithms for Latent Bandits with Cluster Structure  
 Soumyabrata Pal, Arun Sai Suggala, Karthikeyan Shanmugam, Prateek Jain  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7540-7577   
 [ abs  ][ Download PDF  ]  
   
 Improved Bound on Generalization Error of Compressed KNN Estimator  
 Hang Zhang, Ping Li  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7578-7593   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Online Linearized LASSO  
 Shuoguang Yang, Yuhao Yan, Xiuneng Zhu, Qiang Sun  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7594-7610   
 [ abs  ][ Download PDF  ]  
   
 Multi-Agent congestion cost minimization with linear function approximations  
 Prashant Trivedi, Nandyala Hemachandra  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7611-7643   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Global-Local Regularization Via Distributional Robustness  
 Hoang Phan, Trung Le, Trung Phung, Anh Tuan Bui, Nhat Ho, Dinh Phung  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7644-7664   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Vector Quantized Time Series Generation with a Bidirectional Prior Model  
 Daesoo Lee, Sara Malacarne, Erlend Aune  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7665-7693   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Risk-aware linear bandits with convex loss  
 Patrick Saux, Odalric Maillard  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7723-7754   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 One Arrow, Two Kills: A Unified Framework for Achieving Optimal Regret Guarantees in Sleeping Bandits  
 Pierre Gaillard, Aadirupa Saha, Soham Dan  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7755-7773   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Data Augmentation for Imbalanced Regression  
 Samuel Stocksieker, Denys Pommeret, Arthur Charpentier  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7774-7799   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Fast Feature Selection with Fairness Constraints  
 Francesco Quinzan, Rajiv Khanna, Moshik Hershcovitch, Sarel Cohen, Daniel Waddington, Tobias Friedrich, Michael W. Mahoney  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7800-7823   
 [ abs  ][ Download PDF  ]  
   
 On the Consistency Rate of Decision Tree Learning Algorithms  
 Qin-Cheng Zheng, Shen-Huan Lyu, Shao-Qun Zhang, Yuan Jiang, Zhi-Hua Zhou  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7824-7848   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Rank-Based Causal Discovery for Post-Nonlinear Models  
 Grigor Keropyan, David Strieder, Mathias Drton  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7849-7870   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 On the Complexity of Representation Learning in Contextual Linear Bandits  
 Andrea Tirinzoni, Matteo Pirotta, Alessandro Lazaric  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7871-7896   
 [ abs  ][ Download PDF  ]  
   
 Hierarchical-Hyperplane Kernels for Actively Learning Gaussian Process Models of Nonstationary Systems  
 Matthias Bitzer, Mona Meister, Christoph Zimmer  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7897-7912   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Revisiting Weighted Strategy for Non-stationary Parametric Bandits  
 Jing Wang, Peng Zhao, Zhi-Hua Zhou  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7913-7942   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 No time to waste: practical statistical contact tracing with few low-bit messages  
 Rob Romijnders, Yuki M. Asano, Christos Louizos, Max Welling  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7943-7960   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Understanding the Impact of Competing Events on Heterogeneous Treatment Effect Estimation from Time-to-Event Data  
 Alicia Curth, Mihaela van der Schaar  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7961-7980   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Beyond Performative Prediction: Open-environment Learning with Presence of Corruptions  
 Jia-Wei Shan, Peng Zhao, Zhi-Hua Zhou  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7981-7998   
 [ abs  ][ Download PDF  ]  
   
 Last-Iterate Convergence with Full and Noisy Feedback in Two-Player Zero-Sum Games  
 Kenshi Abe, Kaito Ariu, Mitsuki Sakamoto, Kentaro Toyoshima, Atsushi Iwasaki  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:7999-8028   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Model-Based Uncertainty in Value Functions  
 Carlos E. Luis, Alessandro G. Bottero, Julia Vinogradska, Felix Berkenkamp, Jan Peters  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8029-8052   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 The Role of Codeword-to-Class Assignments in Error-Correcting Codes: An Empirical Study  
 Itay Evron, Ophir Onn, Tamar Weiss, Hai Azeroual, Daniel Soudry  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8053-8077   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Online Algorithms with Costly Predictions  
 Marina Drygala, Sai Ganesh Nagarajan, Ola Svensson  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8078-8101   
 [ abs  ][ Download PDF  ]  
   
 Adaptive Tuning for Metropolis Adjusted Langevin Trajectories  
 Lionel Riou-Durand, Pavel Sountsov, Jure Vogrinc, Charles Margossian, Sam Power  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8102-8116   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Further Adaptive Best-of-Both-Worlds Algorithm for Combinatorial Semi-Bandits  
 Taira Tsuchiya, Shinji Ito, Junya Honda  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8117-8144   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 PAC-Bayesian Learning of Optimization Algorithms  
 Michael Sucker, Peter Ochs  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8145-8164   
 [ abs  ][ Download PDF  ]  
   
 Tighter PAC-Bayes Generalisation Bounds by Leveraging Example Difficulty  
 Felix Biggs, Benjamin Guedj  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8165-8182   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Bures-Wasserstein Barycenters and Low-Rank Matrix Recovery  
 Tyler Maunu, Thibaut Le Gouic, Philippe Rigollet  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8183-8210   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Pointwise sampling uncertainties on the Precision-Recall curve  
 Ralph E.Q. Urlus, Max Baak, Stéphane Collot, Ilan Fridman Rojas  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8211-8232   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Exploration in Linear Bandits with Rich Action Sets and its Implications for Inference  
 Debangshu Banerjee, Avishek Ghosh, Sayak Ray Chowdhury, Aditya Gopalan  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8233-8262   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Nothing but Regrets — Privacy-Preserving Federated Causal Discovery  
 Osman Mian, David Kaltenpoth, Michael Kamp, Jilles Vreeken  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8263-8278   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Nonparametric Gaussian Process Covariances via Multidimensional Convolutions  
 Thomas M. Mcdonald, Magnus Ross, Michael T. Smith, Mauricio A. Álvarez  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8279-8293   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Improved Representation Learning Through Tensorized Autoencoders  
 Pascal Esser, Satyaki Mukherjee, Mahalakshmi Sabanayagam, Debarghya Ghoshdastidar  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8294-8307   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Tensor-based Kernel Machines with Structured Inducing Points for Large and High-Dimensional Data  
 Frederiek Wesel, Kim Batselier  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8308-8320   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 A Targeted Accuracy Diagnostic for Variational Approximations  
 Yu Wang, Mikolaj Kasprzak, Jonathan H. Huggins  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8351-8372   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Root Cause Identification for Collective Anomalies in Time Series given an Acyclic Summary Causal Graph with Loops  
 Charles K. Assaad, Imad Ez-Zejjari, Lei Zan  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8395-8404   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Principled Approaches for Private Adaptation from a Public Source  
 Raef Bassily, Mehryar Mohri, Ananda Theertha Suresh  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8405-8432   
 [ abs  ][ Download PDF  ]  
   
 CLIP-Lite: Information Efficient Visual Representation Learning with Language Supervision  
 Aman Shrivastava, Ramprasaath R. Selvaraju, Nikhil Naik, Vicente Ordonez  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8433-8447   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Surveillance Evasion Through Bayesian Reinforcement Learning  
 Dongping Qi, David Bindel, Alexander Vladimirsky  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8448-8462   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Overparameterized Random Feature Regression with Nearly Orthogonal Data  
 Zhichao Wang, Yizhe Zhu  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8463-8493   
 [ abs  ][ Download PDF  ]  
   
 How Does Pseudo-Labeling Affect the Generalization Error of the Semi-Supervised Gibbs Algorithm?  
 Haiyun He, Gholamali Aminian, Yuheng Bu, Miguel Rodrigues, Vincent Y. F. Tan  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8494-8520   
 [ abs  ][ Download PDF  ]  
   
 Scalable Unbalanced Sobolev Transport for Measures on a Graph  
 Tam Le, Truyen Nguyen, Kenji Fukumizu  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8521-8560   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Discrete Distribution Estimation under User-level Local Differential Privacy  
 Jayadev Acharya, Yuhan Liu, Ziteng Sun  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8561-8585   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Causal Entropy Optimization  
 Nicola Branchini, Virginia Aglietti, Neil Dhir, Theodoros Damoulas  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8586-8605   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Loss-Curvature Matching for Dataset Selection and Condensation  
 Seungjae Shin, Heesun Bae, Donghyeok Shin, Weonyoung Joo, Il-Chul Moon  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8606-8628   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Wasserstein Distributionally Robust Linear-Quadratic Estimation under Martingale Constraints  
 Kyriakos Lotidis, Nicholas Bambos, Jose Blanchet, Jiajin Li  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8629-8644   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Density Ratio Estimation and Neyman Pearson Classification with Missing Data  
 Josh Givens, Song Liu, Henry W. J. Reeve  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8645-8681   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Representation Learning in Deep RL via Discrete Information Bottleneck  
 Riashat Islam, Hongyu Zang, Manan Tomar, Aniket Didolkar, Md Mofijul Islam, Samin Yeasar Arnob, Tariq Iqbal, Xin Li, Anirudh Goyal, Nicolas Heess, Alex Lamb  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8699-8722   
 [ abs  ][ Download PDF  ]  
   
 Learning Robust Graph Neural Networks with Limited Supervision  
 Abdullah Alchihabi, Yuhong Guo  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8723-8733   
 [ abs  ][ Download PDF  ]  
   
 Consistent Complementary-Label Learning via Order-Preserving Losses  
 Shuqi Liu, Yuzhou Cao, Qiaozhen Zhang, Lei Feng, Bo An  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8734-8748   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Tight Regret and Complexity Bounds for Thompson Sampling via Langevin Monte Carlo  
 Tom Huix, Matthew Zhang, Alain Durmus  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8749-8770   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Nonstochastic Contextual Combinatorial Bandits  
 Lukas Zierahn, Dirk van der Hoeven, Nicolò Cesa-Bianchi, Gergely Neu  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8771-8813   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Probabilistic Conformal Prediction Using Conditional Random Samples  
 Zhendong Wang, Ruijiang Gao, Mingzhang Yin, Mingyuan Zhou, David Blei  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8814-8836   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Preferential Subsampling for Stochastic Gradient Langevin Dynamics  
 Srshti Putcha, Christopher Nemeth, Paul Fearnhead  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8837-8856   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 On the Calibration of Probabilistic Classifier Sets  
 Thomas Mortier, Viktor Bengs, Eyke Hüllermeier, Stijn Luca, Willem Waegeman  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8857-8870   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Context-Specific Causal Discovery for Categorical Data Using Staged Trees  
 Manuele Leonelli, Gherardo Varando  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8871-8888   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Federated Learning for Data Streams  
 Othmane Marfoq, Giovanni Neglia, Laetitia Kameni, Richard Vidal  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8889-8924   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Adversarial robustness of VAEs through the lens of local geometry  
 Asif Khan, Amos Storkey  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8954-8967   
 [ abs  ][ Download PDF  ]  
   
 Freeze then Train: Towards Provable Representation Learning under Spurious Correlations and Feature Noise  
 Haotian Ye, James Zou, Linjun Zhang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8968-8990   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Learning to Optimize with Stochastic Dominance Constraints  
 Hanjun Dai, Yuan Xue, Niao He, Yixin Wang, Na Li, Dale Schuurmans, Bo Dai  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:8991-9009   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 SoundSynp: Sound Source Detection from Raw Waveforms with Multi-Scale Synperiodic Filterbanks  
 Yuhang He, Andrew Markham  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9010-9023   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Second Order Path Variationals in Non-Stationary Online Learning  
 Dheeraj Baby, Yu-Xiang Wang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9024-9075   
 [ abs  ][ Download PDF  ]  
   
 Bayesian Optimization Over Iterative Learners with Structured Responses: A Budget-aware Planning Approach  
 Syrine Belakaria, Janardhan Rao Doppa, Nicolo Fusi, Rishit Sheth  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9076-9093   
 [ abs  ][ Download PDF  ]  
   
 Knowledge Sheaves: A Sheaf-Theoretic Framework for Knowledge Graph Embedding  
 Thomas Gebhart, Jakob Hansen, Paul Schrater  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9094-9116   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Active Cost-aware Labeling of Streaming Data  
 Ting Cai, Kirthevasan Kandasamy  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9117-9136   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Krylov–Bellman boosting: Super-linear policy evaluation in general state spaces  
 Eric Xia, Martin Wainwright  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9137-9166   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 SwAMP: Swapped Assignment of Multi-Modal Pairs for Cross-Modal Retrieval  
 Minyoung Kim  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9167-9190   
 [ abs  ][ Download PDF  ]  
   
 A Mini-Block Fisher Method for Deep Neural Networks  
 Achraf Bahamou, Donald Goldfarb, Yi Ren  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9191-9220   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 On the Convergence of Distributed Stochastic Bilevel Optimization Algorithms over a Network  
 Hongchang Gao, Bin Gu, My T. Thai  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9238-9281   
 [ abs  ][ Download PDF  ]  
   
 Pricing against a Budget and ROI Constrained Buyer  
 Negin Golrezaei, Patrick Jaillet, Jason Cheuk Nam Liang, Vahab Mirrokni  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9282-9307   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Improving Dual-Encoder Training through Dynamic Indexes for Negative Mining  
 Nicholas Monath, Manzil Zaheer, Kelsey Allen, Andrew Mccallum  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9308-9330   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Incentive-aware Contextual Pricing with Non-parametric Market Noise  
 Negin Golrezaei, Patrick Jaillet, Jason Cheuk Nam Liang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9331-9361   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Coherent Probabilistic Forecasting of Temporal Hierarchies  
 Syama Sundar Rangapuram, Shubham Kapoor, Rajbir Singh Nirwan, Pedro Mercado, Tim Januschowski, Yuyang Wang, Michael Bohlke-Schneider  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9362-9376   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Optimal robustness-consistency tradeoffs for learning-augmented metrical task systems  
 Nicolas Christianson, Junxuan Shen, Adam Wierman  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9377-9399   
 [ abs  ][ Download PDF  ]  
   
 Randomized geometric tools for anomaly detection in stock markets  
 Cyril Bachelard, Apostolos Chalkis, Vissarion Fisikopoulos, Elias Tsigaridas  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9400-9416   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 ForestPrune: Compact Depth-Pruned Tree Ensembles  
 Brian Liu, Rahul Mazumder  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9417-9428   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Instance-dependent Sample Complexity Bounds for Zero-sum Matrix Games  
 Arnab Maiti, Kevin Jamieson, Lillian Ratliff  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9429-9469   
 [ abs  ][ Download PDF  ]  
   
 Multiple-policy High-confidence Policy Evaluation  
 Chris Dann, Mohammad Ghavamzadeh, Teodor V. Marinov  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9470-9487   
 [ abs  ][ Download PDF  ]  
   
 Compositional Probabilistic and Causal Inference using Tractable Circuit Models  
 Benjie Wang, Marta Kwiatkowska  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9488-9498   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Improved Approximation for Fair Correlation Clustering  
 Sara Ahmadian, Maryam Negahbani  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9499-9516   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Diffusion Generative Models in Infinite Dimensions  
 Gavin Kerrigan, Justin Ley, Padhraic Smyth  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9538-9563   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 MMD-B-Fair: Learning Fair Representations with Statistical Testing  
 Namrata Deka, Danica J. Sutherland  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9564-9576   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Domain Adaptation under Missingness Shift  
 Helen Zhou, Sivaraman Balakrishnan, Zachary Lipton  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9577-9606   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Nash Equilibria and Pitfalls of Adversarial Training in Adversarial Robustness Games  
 Maria-Florina Balcan, Rattana Pukdee, Pradeep Ravikumar, Hongyang Zhang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9607-9636   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Adapting to Latent Subgroup Shifts via Concepts and Proxies  
 Ibrahim Alabdulmohsin, Nicole Chiou, Alexander D’Amour, Arthur Gretton, Sanmi Koyejo, Matt J. Kusner, Stephen R. Pfohl, Olawale Salaudeen, Jessica Schrouff, Katherine Tsai  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9637-9661   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 On the Privacy Risks of Algorithmic Recourse  
 Martin Pawelczyk, Himabindu Lakkaraju, Seth Neel  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9680-9696   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Reducing Discretization Error in the Frank-Wolfe Method  
 Zhaoyue Chen, Yifan Sun  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9697-9727   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Improved Sample Complexity Bounds for Distributionally Robust Reinforcement Learning  
 Zaiyan Xu, Kishan Panaganti, Dileep Kalathil  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9728-9754   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Factorial SDE for Multi-Output Gaussian Process Regression  
 Daniel P. Jeong, Seyoung Kim  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9755-9772   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Interactive Learning with Pricing for Optimal and Stable Allocations in Markets  
 Yigit Efe Erginbas, Soham Phade, Kannan Ramchandran  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9773-9806   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Learning to Generalize Provably in Learning to Optimize  
 Junjie Yang, Tianlong Chen, Mingkang Zhu, Fengxiang He, Dacheng Tao, Yingbin Liang, Zhangyang Wang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9807-9825   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Theory and Algorithm for Batch Distribution Drift Problems  
 Pranjal Awasthi, Corinna Cortes, Christopher Mohri  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9826-9851   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 On The Convergence Of Policy Iteration-Based Reinforcement Learning With Monte Carlo Policy Evaluation  
 Anna Winnicki, R. Srikant  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9852-9878   
 [ abs  ][ Download PDF  ]  
   
 Precision/Recall on Imbalanced Test Data  
 Hongwei Shang, Jean-Marc Langlois, Kostas Tsioutsiouliklis, Changsung Kang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9879-9891   
 [ abs  ][ Download PDF  ]  
   
 Iterative Teaching by Data Hallucination  
 Zeju Qiu, Weiyang Liu, Tim Z. Xiao, Zhen Liu, Umang Bhatt, Yucen Luo, Adrian Weller, Bernhard Schölkopf  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9892-9913   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Near-Optimal Differentially Private Reinforcement Learning  
 Dan Qiao, Yu-Xiang Wang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9914-9940   
 [ abs  ][ Download PDF  ]  
   
 Doubly Fair Dynamic Pricing  
 Jianyu Xu, Dan Qiao, Yu-Xiang Wang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:9941-9975   
 [ abs  ][ Download PDF  ]  
   
 Probabilities of Causation: Role of Observational Data  
 Ang Li, Judea Pearl  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10012-10027   
 [ abs  ][ Download PDF  ]  
   
 Influence Diagnostics under Self-concordance  
 Jillian Fisher, Lang Liu, Krishna Pillutla, Yejin Choi, Zaid Harchaoui  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10028-10076   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Theoretically Grounded Loss Functions and Algorithms for Adversarial Robustness  
 Pranjal Awasthi, Anqi Mao, Mehryar Mohri, Yutao Zhong  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10077-10094   
 [ abs  ][ Download PDF  ]  
   
 Large deviations rates for stochastic gradient descent with strongly convex functions  
 Dragana Bajovic, Dusan Jakovetic, Soummya Kar  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10095-10111   
 [ abs  ][ Download PDF  ]  
   
 Stochastic Optimization for Spectral Risk Measures  
 Ronak Mehta, Vincent Roulet, Krishna Pillutla, Lang Liu, Zaid Harchaoui  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10112-10159   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Improving Adaptive Conformal Prediction Using Self-Supervised Learning  
 Nabeel Seedat, Alan Jeffares, Fergus Imrie, Mihaela van der Schaar  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10160-10177   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Oracle-free Reinforcement Learning in Mean-Field Games along a Single Sample Path  
 Muhammad Aneeq Uz Zaman, Alec Koppel, Sujay Bhatt, Tamer Basar  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10178-10206   
 [ abs  ][ Download PDF  ]  
   
 Sparsity-Inducing Categorical Prior Improves Robustness of the Information Bottleneck  
 Anirban Samaddar, Sandeep Madireddy, Prasanna Balaprakash, Taps Maiti, Gustavo de los Campos, Ian Fischer  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10207-10222   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Ideal Abstractions for Decision-Focused Learning  
 Michael Poli, Stefano Massaroli, Stefano Ermon, Bryan Wilder, Eric Horvitz  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10223-10234   
 [ abs  ][ Download PDF  ]  
   
 Probabilistic Querying of Continuous-Time Event Sequences  
 Alex Boyd, Yuxin Chang, Stephan Mandt, Padhraic Smyth  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10235-10251   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Semantic Strengthening of Neuro-Symbolic Learning  
 Kareem Ahmed, Kai-Wei Chang, Guy Van den Broeck  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10252-10261   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Fast Variational Estimation of Mutual Information for Implicit and Explicit Likelihood Models  
 Caleb Dahlke, Sue Zheng, Jason Pacheco  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10262-10278   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 SurvivalGAN: Generating Time-to-Event Data for Survival Analysis  
 Alexander Norcliffe, Bogdan Cebere, Fergus Imrie, Pietro Lió, Mihaela van der Schaar  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10279-10304   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 A Conditional Gradient-based Method for Simple Bilevel Optimization with Convex Lower-level Problem  
 Ruichen Jiang, Nazanin Abolfazli, Aryan Mokhtari, Erfan Yazdandoost Hamedani  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10305-10323   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Stochastic Methods for AUC Optimization subject to AUC-based Fairness Constraints  
 Yao Yao, Qihang Lin, Tianbao Yang  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10324-10342   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 DIET: Conditional independence testing with marginal dependence measures of residual information  
 Mukund Sudarshan, Aahlad Puli, Wesley Tansey, Rajesh Ranganath  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10343-10367   
 [ abs  ][ Download PDF  ]  
   
 Algorithm-Dependent Bounds for Representation Learning of Multi-Source Domain Adaptation  
 Qi Chen, Mario Marchand  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10368-10394   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Actually Sparse Variational Gaussian Processes  
 Harry Jake Cunningham, Daniel Augusto de Souza, So Takao, Mark van der Wilk, Marc Peter Deisenroth  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10395-10408   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Competing against Adaptive Strategies in Online Learning via Hints  
 Aditya Bhaskara, Kamesh Munagala  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10409-10424   
 [ abs  ][ Download PDF  ]  
   
 ProbNeRF: Uncertainty-Aware Inference of 3D Shapes from 2D Images  
 Matthew D. Hoffman, Tuan Anh Le, Pavel Sountsov, Christopher Suter, Ben Lee, Vikash K. Mansinghka, Rif A. Saurous  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10425-10444   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Minimum-Entropy Coupling Approximation Guarantees Beyond the Majorization Barrier  
 Spencer Compton, Dmitriy Katz, Benjamin Qi, Kristjan Greenewald, Murat Kocaoglu  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10445-10469   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Automatic Attention Pruning: Improving and Automating Model Pruning using Attentions  
 Kaiqi Zhao, Animesh Jain, Ming Zhao  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10470-10486   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Sample Complexity of Distinguishing Cause from Effect  
 Jayadev Acharya, Sourbh Bhadane, Arnab Bhattacharyya, Saravanan Kandasamy, Ziteng Sun  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10487-10504   
 [ abs  ][ Download PDF  ]  
   
 Graph Spectral Embedding using the Geodesic Betweenness Centrality  
 Shay Deutsch, Stefano Soatto  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10505-10519   
 [ abs  ][ Download PDF  ]  
   
 Score-based Quickest Change Detection for Unnormalized Models  
 Suya Wu, Enmao Diao, Taposh Banerjee, Jie Ding, Vahid Tarokh  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10546-10565   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Dropout-Resilient Secure Multi-Party Collaborative Learning with Linear Communication Complexity  
 Xingyu Lu, Hasin Us Sami, Başak Güler  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10566-10593   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Reinforcement Learning with Stepwise Fairness Constraints  
 Zhun Deng, He Sun, Steven Wu, Linjun Zhang, David Parkes  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10594-10618   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Federated Asymptotics: a model to compare federated learning algorithms  
 Gary Cheng, Karan Chadha, John Duchi  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10650-10689   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Conformalized Unconditional Quantile Regression  
 Ahmed M. Alaa, Zeshan Hussain, David Sontag  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10690-10702   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Wasserstein Distributional Learning via Majorization-Minimization  
 Chengliang Tang, Nathan Lenssen, Ying Wei, Tian Zheng  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10703-10731   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 HeteRSGD: Tackling Heterogeneous Sampling Costs via Optimal Reweighted Stochastic Gradient Descent  
 Ziang Chen, Jianfeng Lu, Huajie Qian, Xinshang Wang, Wotao Yin  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10732-10781   
 [ abs  ][ Download PDF  ]  
   
 Ultra-marginal Feature Importance: Learning from Data with Causal Guarantees  
 Joseph Janssen, Vincent Guan, Elina Robeva  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10782-10814   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 On the Implicit Geometry of Cross-Entropy Parameterizations for Label-Imbalanced Data  
 Tina Behnia, Ganesh Ramachandra Kini, Vala Vakilian, Christos Thrampoulidis  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10815-10838   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Convolutional Persistence as a Remedy to Neural Model Analysis  
 Ekaterina Khramtsova, Guido Zuccon, Xi Wang, Mahsa Baktashmotlagh  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10839-10855   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Uniformly Conservative Exploration in Reinforcement Learning  
 Wanqiao Xu, Yecheng Ma, Kan Xu, Hamsa Bastani, Osbert Bastani  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10856-10870   
 [ abs  ][ Download PDF  ]  
   
 Provable Safe Reinforcement Learning with Binary Feedback  
 Andrew Bennett, Dipendra Misra, Nathan Kallus  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10871-10900   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Balanced Off-Policy Evaluation for Personalized Pricing  
 Adam Elmachtoub, Vishal Gupta, Yunfan Zhao  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10901-10917   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Provable Hierarchy-Based Meta-Reinforcement Learning  
 Kurtland Chua, Qi Lei, Jason Lee  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10918-10967   
 [ abs  ][ Download PDF  ]  
   
 A Blessing of Dimensionality in Membership Inference through Regularization  
 Jasper Tan, Daniel LeJeune, Blake Mason, Hamid Javadi, Richard G. Baraniuk  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10968-10993   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Posterior Tracking Algorithm for Classification Bandits  
 Koji Tabata, Junpei Komiyama, Atsuyoshi Nakamura, Tamiki Komatsuzaki  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:10994-11022   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Mixtures of All Trees  
 Nikil Roashan Selvam, Honghua Zhang, Guy Van den Broeck  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11043-11058   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Improving Adversarial Robustness via Joint Classification and Multiple Explicit Detection Classes  
 Sina Baharlouei, Fatemeh Sheikholeslami, Meisam Razaviyayn, Zico Kolter  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11059-11078   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Performative Prediction with Neural Networks  
 Mehrnaz Mofakhami, Ioannis Mitliagkas, Gauthier Gidel  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11079-11093   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Benign overfitting of non-smooth neural networks beyond lazy training  
 Xingyu Xu, Yuantao Gu  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11094-11117   
 [ abs  ][ Download PDF  ]  
   
 A New Modeling Framework for Continuous, Sequential Domains  
 Hailiang Dong, James Amato, Vibhav Gogate, Nicholas Ruozzi  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11118-11131   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 TS-UCB: Improving on Thompson Sampling With Little to No Additional Computation  
 Jackie Baek, Vivek Farias  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11132-11148   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Reward Learning as Doubly Nonparametric Bandits: Optimal Design and Scaling Laws  
 Kush Bhatia, Wenshuo Guo, Jacob Steinhardt  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11149-11171   
 [ abs  ][ Download PDF  ]  
   
 Approximate Regions of Attraction in Learning with Decision-Dependent Distributions  
 Roy Dong, Heling Zhang, Lillian Ratliff  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11172-11184   
 [ abs  ][ Download PDF  ]  
   
 Randomized Primal-Dual Methods with Adaptive Step Sizes  
 Erfan Yazdandoost Hamedani, Afrooz Jalilzadeh, Necdet S. Aybat  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11185-11212   
 [ abs  ][ Download PDF  ]  
   
 Spectral Augmentations for Graph Contrastive Learning  
 Amur Ghose, Yingxue Zhang, Jianye Hao, Mark Coates  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11213-11266   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Deep Value Function Networks for Large-Scale Multistage Stochastic Programs  
 Hyunglip Bae, Jinkyu Lee, Woo Chang Kim, Yongjae Lee  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11267-11287   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Optimal Sketching Bounds for Sparse Linear Regression  
 Tung Mai, Alexander Munteanu, Cameron Musco, Anup Rao, Chris Schwiegelshohn, David Woodruff  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11288-11316   
 [ abs  ][ Download PDF  ]  
   
 Average case analysis of Lasso under ultra sparse conditions  
 Koki Okajima, Xiangming Meng, Takashi Takahashi, Yoshiyuki Kabashima  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11317-11330   
 [ abs  ][ Download PDF  ]  
   
 Uncertainty Estimates of Predictions via a General Bias-Variance Decomposition  
 Sebastian Gruber, Florian Buettner  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11331-11354   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Collision Probability Matching Loss for Disentangling Epistemic Uncertainty from Aleatoric Uncertainty  
 Hiromi Narimatsu, Mayuko Ozawa, Shiro Kumano  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11355-11370   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Random Features Model with General Convex Regularization: A Fine Grained Analysis with Precise Asymptotic Learning Curves  
 David Bosch, Ashkan Panahi, Ayca Ozcelikkale, Devdatt Dubhashi  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11371-11414   
 [ abs  ][ Download PDF  ]  
   
 Learning to Defer to Multiple Experts: Consistent Surrogate Losses, Confidence Calibration, and Conformal Ensembles  
 Rajeev Verma, Daniel Barrejon, Eric Nalisnick  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11415-11434   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Spread Flows for Manifold Modelling  
 Mingtian Zhang, Yitong Sun, Chen Zhang, Steven Mcdonagh  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11435-11456   
 [ abs  ][ Download PDF  ]  
   
 Breaking a Classical Barrier for Classifying Arbitrary Test Examples in the Quantum Model  
 Grzegorz Gluch, Khashayar Barooti, Rüdiger Urbanke  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11457-11488   
 [ abs  ][ Download PDF  ]  
   
 Characterizing Polarization in Social Networks using the Signed Relational Latent Distance Model  
 Nikolaos Nakis, Abdulkadir Celikkanat, Louis Boucherie, Christian Djurhuus, Felix Burmester, Daniel Mathias Holmelund, Monika Frolcová, Morten Mørup  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11489-11505   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Algorithm for Constrained Markov Decision Process with Linear Convergence  
 Egor Gladin, Maksim Lavrik-Karmazin, Karina Zainullina, Varvara Rudenko, Alexander Gasnikov, Martin Takac  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11506-11533   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Inducing Neural Collapse in Deep Long-tailed Learning  
 Xuantong Liu, Jianfeng Zhang, Tianyang Hu, He Cao, Yuan Yao, Lujia Pan  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11534-11544   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Encoding Domain Knowledge in Multi-view Latent Variable Models: A Bayesian Approach with Structured Sparsity  
 Arber Qoku, Florian Buettner  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11545-11562   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Regression as Classification: Influence of Task Formulation on Neural Network Features  
 Lawrence Stewart, Francis Bach, Quentin Berthet, Jean-Philippe Vert  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11563-11582   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Robust Linear Regression: Gradient-descent, Early-stopping, and Beyond  
 Meyer Scetbon, Elvis Dohmatob  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11583-11607   
 [ abs  ][ Download PDF  ]  
   
 Probing Graph Representations  
 Mohammad Sadegh Akhondzadeh, Vijay Lingam, Aleksandar Bojchevski  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11630-11649   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 Efficient SAGE Estimation via Causal Structure Learning  
 Christoph Luther, Gunnar König, Moritz Grosse-Wentrup  ; Proceedings of The 26th International Conference on Artificial Intelligence and Statistics  , PMLR 206:11650-11670   
 [ abs  ][ Download PDF  ][ Software  ]  
   
 subscribe via RSS   

 This site last compiled Wed, 24 Jul 2024 15:14:04 +0000  
 Github Account     
 Copyright © The authors and PMLR  2024.  MLResearchPress

42. AIED_0 conference:
IAIED        
 Home   Conferences   Journal   News   Membership   Showcase   About   IAIED Society History    
   
 Contact    Login     

 Conferences   

 Artificial Intelligence in Education 2023  
 24th International Conference on Artificial Intelligence in Education Tokyo, Japan and Virtual  
 Conference Information  
  
 AIED 2023 will be the 24th edition and the 30th anniversary of the International AIED Society. The AIED Society organises the AIED conference and is aimed at advancing science and engineering of intelligent human-technology ecosystems that support learning. The conference will be the latest of a longstanding series of international conferences, known for high quality and innovative research on AI-assisted systems and cognitive science approaches for educational computing applications.  
 This year's theme is "AI in Education for Sustainable Society." A sustainable society is driven by the principle of realising peace and prosperity for all people and the planet with an inclusiveness that “leaves no one behind.” We invite authors to present research on how AI in education can help our society meet its need to provide inclusive and equitable quality education and to promote lifelong learning opportunities for all.  
  
 Location:  
 Tokyo, Japan and Virtual 
  Official Website:  
 https://iaied.org/archive/conferences/AIED2023/index.html 
  General Chairs:  
 Noboru Matsuda 
  Vania Dimitrova 
  Olga C. Santos 
  When:  
 3 Jul - 7 Jul 2023 
  Conference Proceedings:  
 https://link.springer.com/book/10.1007/978-3-031-36272-9 

 IAIED   

 Subscribe    

 Home 
  Conferences 
  Journal 

 News 
  Membership 
  Showcase 

 About 
  Contact

43. AIME_0 conference:
Home 
  Organization 
  Programme | Keynote speakers 2 
  Keynote speakers 1 
  Registration 
  Submissions 
  Tutorials and Workshops 
  Doctoral Consortium 
  Venue 

 AIME 2O23  
 21st International Conference of Artificial Intelligence in Medicine   
 Portoroz, Slovenia   
 June 12-15, 2023   

 AIME 2023 proceedings |  
 REGISTER HERE |  

 Welcome to the 21th International Conference on Artificial Intelligence in Medicine  (AIME 2023)   website.   
 The AIME 2023 conference will be hosted in person by University of Maribor Faculty of Health Sciences in Portorož, Slovenia  from June 12-15, 2023   . As previous AIME conferences (from Pavia in 1985 to Halifax in 2022), it will be a unique opportunity for researchers and other healthcare and AI experts to present significant theoretical, methodological and applied results related to the application of Artificial Intelligence (AI) in medicine.    

  KEYNOTE SPEAKERS   

 Zoran Obradovic    
    Data Analytics and Biomedical Informatics Center,   Temple University     
 Read more! | Nada Lavrač    
   Department of Knowledge Technologies, Jožef Stefan Institute  
    University of Nova Gorica, Slovenia      
 Read more! 

  SCHEDULE   

  VENUE    
 PORTOROZ – St. Bernardin Resort     
  Grand Hotel Bernardin – Congress Centre Bernardin   

  LOCATION   

 Grand Hotel Bernardin   
  Obala 2   
  6320 Portoroz 

 SPONSORS  

 Copyright © 2024 AIME 2023 Official Site. All Rights Reserved.   
 Joomla!  is Free Software released under the GNU General Public License.    
   
 Search

44. AIED_1 conference:
Call for Papers | General Call for Papers  Call for Doctoral  
  Consortium Papers  Call for Late-Breaking Results  Call for BlueSky  Call for WideAIED  Call for Workshops and Tutorials  Call for Industry and  
  Innovation Track Papers  Call for Practitioner Track  Call for Interactive Events  Call for AIED Mentoring Fellowship  Important Dates 
  Program | Session Program  Program Overview  Keynotes  Accepted Papers  Best Papers  Workshops / Tutorials  IAALDE Session 
  Proceedings | Proceedings Vol.1  Proceedings Vol.2 
  Diversity and Inclusion | Diversity and Inclusion  Scholarship 
  Registration | Registration  Visa Support  Accommodation 
  Sponsorship 
  Organization | Organizing Committee  Local Organizing Committee  Program Committee 
  Venue | Venue  Conference Rooms  About Tokyo  Half-day Sightseeing Tour  Hospitality Desk  Accessibility 

 The 24th International Conference on Artificial Intelligence in Education, AIED 2023, will take place July 3-7, 2023 in Tokyo, Japan and virtually  
  (synchronous hybrid)  
   
 The AIED 2023 theme is  
  “AI in Education for Sustainable Society”  
 A sustainable society is driven by the principle of realising peace and prosperity for all people and the planet with an inclusiveness that “leaves no one behind." As the AIED community, we concern ourselves with the mission of using Artificial Intelligence (AI) to contribute to a world with equitable and universal access to quality education at all levels.  
  Read more   
   
 Sponsors   
           Supported by   
     The Kajima Foundation 

 What’s New   
 2023.07.02  In-person registration  (participate at the venue) is now re-open.   2023.06.26  Proceedings  is now open (the actual contents will be available a few days before the conference)   2023.06.23  Program Details  are now open.   2023.06.19  IAALDE Session page  is now open.   2023.06.09  Time Table  is updated.   2023.06.09  Hospitality Desk  is now open.   2023.06.07  Half-day Sightseeing Tour  is updated.   2023.05.25  Time Table  is now open.   2023.05.08  Sponsorship  updated.   2023.04.28  Accepted Papers  and Workshops and Tutorials  updated.   2023.04.27  Registration  updated.   2023.04.26  Accessibility page  is now open.   2023.04.26  Workshops and Tutorials  updated.   2023.04.24  Accepted Papers  updated.   2023.04.21  Workshops and Tutorials  page is now open.   2023.04.12  Accommodation  page is now open.   2023.04.11  Workshop and Tutorial  page is now open.   2023.04.07  Accepted Papers  page is now open.   2023.04.03  Registration  is now open.   2023.03.28  Registration  and Visa Support  page is now open.   2022.12.27  Sponsorship  page is now open.   2022.09.27  Website open.     
   
 Sponsors   
           Supported by   
     The Kajima Foundation 

 Tweets by AIEDconf    
 Follow @IAIEDsociety    

 Contact  
 AIED 2023 Organizing Team  
  E-mail: aied2023-concierge@googlegroups.com    

 © AIED2023

45. AIME_1 conference:
Home 
  Organization 
  Programme | Keynote speakers 2 
  Keynote speakers 1 
  Registration 
  Submissions 
  Tutorials and Workshops 
  Doctoral Consortium 
  Venue 

 AIME 2O23  
 21st International Conference of Artificial Intelligence in Medicine   
 Portoroz, Slovenia   
 June 12-15, 2023   

 AIME 2023 proceedings |  
 REGISTER HERE |  

  Article Index  
 Venue 
  Page 2 
  All Pages 

 Page 1 of 2   
  Next 

 Copyright © 2024 AIME 2023 Official Site. All Rights Reserved.   
 Joomla!  is Free Software released under the GNU General Public License.    
   
 Search

46. AIED_2 conference:
Japan Society for Educational Technology  
   ENGLISH 
  JAPANESE 
    
 ニューズレター 
  公募情報 
  出版物のご案内 
  論文誌 | 日本教育工学会論文誌   
 日本教育工学雑誌1976-2003   
 投稿規程 
  執筆の手引 
  投稿手順 
  査読者一覧 
  論文賞・研究奨励賞 
  特集号 
  ショートレター 
  投稿数と採択率 
  著作権規程 
  Information and Technology in Education and Learning(ITEL)   
 Educational technology research(ETR) 1977-2019 
  学会概要 | 日本教育工学会とは 
  会長・副会長挨拶 
  学会組織図 
  役員名簿 
  代議員名簿 
  各種委員会 
  論文賞・研究奨励賞 
  学生セッション優秀発表賞 
  ITEL論文賞 
  理事会報告 
  事業報告・事業計画 
  代議員総会 
  学会カレンダー 
  学会将来戦略 
  学会略史 
  学会定款 
  各種規程 
  倫理綱領 
  歴代会長 
  名誉会員 
  維持会員一覧 
  JSET会員 | 会員ログイン    
 論文・発表検索 
  SIG参加申請 
  会費送金 
  入会申込 
    
 JSET NEWS 
  全国大会 
  研究会 
  重点活動領域 
  SIG活動 
  国際会議 
  旧イベント活動 
  開催報告 
  カレンダー 

  カレンダーに追加     
  国際会議 
  The 24th international conference on Artificial Intelligence in Education (AIED) 
    
 国際会議   
   
 開催済   
 The 24th international conference on Artificial Intelligence in Education (AIED)   
 開催日時  
 2023  年 7  月 3  日  
  - 7  月 7  日  

 日程  3-7 July,2023 
  会場  Tokyo, Japan 
    
 It is time to bridge the artificial intelligence and education divide.  
 The 24th International Conference on Artificial Intelligence in Education (IAIED.org) will take place in Tokyo, Japan, from July 3-7, 2023, and is open for professional tracks to educators, philosophers, educational researchers, AI developers, and graduate students from all around the world who are interested in AI in education. The AIED community would greatly benefit from hearing thoughtful opinions from a broad range of people. We would like to invite you to send your contributions to one of the following:  
 Late-breaking results track: This is a fantastic opportunity to share the results of your latest research and get comments from your peers. AIED2023 Call for Late-Breaking Results. Length: 4 pages, including references. Due: Mar 6, 2023. https://aied2023.org/clbr.html   
 Bluesky paper track: This AIED2023 special track invites papers from researchers, practitioners, and industry partners to envision what’s to come in the next 30 years. Due date is Feb 20, 2023. https://aied2023.org/c_bluesky.html   
 Workshops and Tutorials: Call for workshops and tutorials is due on Feb 20, 2023. Please submit your proposals on emerging AIED topics. Inclusion, diversity, equity, and accessibility, as well as the gap between academia, business, and non-profit, are especially welcome topics. https://aied2023.org/c_workshops_tutorials.html   
 Doctoral Consortium: We seek contributions from early career researchers from broad areas -interdisciplinary research concepts, theoretical frameworks, methodological techniques, etc. Due on Feb. 06, 2023 (with funding consideration by the IAIED Society and NSF). https://aied2023.org/cdcp.html   
 Please also assist to spread this message through your educational leadership network.  
 Thank you and See you in Tokyo this July.  
 AIED 2023 Publicity Team  
  Tho Pham  
  Miguel Portaz  

 この国際会議についての  
  お申し込み   
 お申し込み    

 この国際会議についての  
  お問い合わせ   
 お問い合わせ    

 一覧に戻る    

 リンク 
  アクセス 
  お問い合わせ 

 Copyright © JAPAN SOCIETY FOR EDUCATIONAL TECHNOLOGY, All Rights Reserved.

47. AIME_2 conference:
Science Direct                  Journals & Books 
   
 ScienceDirect help 

 !  There was a problem providing the content you requested  
 Please contact us via our support center  for more information and provide the details below.  
 Reference Number: 8ea8abab0b79dd63  
 IP Address: 1.54.87.107  
 User Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/131.0.0.0 Safari/537.36 Edg/131.0.0.0  
 Timestamp: 2024-11-30 06:09:20 UTC  
   
 ::CLOUDFLARE_ERROR_1000S_BOX::   

 Elsevier             About ScienceDirect    Shopping cart    Contact and support    Terms and conditions    Privacy policy    
 We use cookies to help provide and enhance our service and tailor content and ads. By continuing you agree to the use of cookies   .  
 Copyright © 2020 Elsevier B.V. or its licensors or contributors. ScienceDirect ® is a registered trademark of Elsevier B.V.  
   
 RELX Group

48. AIED_3 conference:
aied2023.org  

 This webpage was generated by the domain owner using Sedo Domain Parking  . Disclaimer: Sedo maintains no relationship with third party advertisers. Reference to any specific service or trade mark is not controlled by Sedo nor does it constitute or imply its association, endorsement or recommendation.  

 Privacy Policy

49. AIME_3 conference:
     
 aepia@aepia.org   

 Hazte Socio  

 Quiénes Somos | ¿Qué es AEPIA? 
  Historia de AEPIA 
  Grupos de investigación 
  Documentos 
  Noticias 
  Formación | Máster Universitario 
  Escuela de Verano 
  Doctoral Consortium 
  Competición de apps y vídeos 
  Investigación | Publicaciones 
  CAEPIA 
  Premios y reconocimientos 
  COVID-19 
  Recursos 
  Internacional | Asociaciones y congresos 
  Proyectos europeos 
  Documentos 
  Empresas | Socios institucionales 
  Contratos I+D 
  Oferta formativa 
  Participa | Grupos de interés 
  Hazte socio 
  Cómo participar 

 AIME 2023. Last Call for Papers  

 21st International Conference on Artificial Intelligence in Medicine  
  June 13-14, 2023. Portoroz, Slovenia  
  https://www.aimedicine.info/aime23  @AIMEconference  
 The AIME 2023 conference invites all interested researchers to submit original contributions regarding the development of theory, methods, systems, and applications of AI in biomedicine, including the application of AI approaches in biomedical informatics, healthcare organisation and molecular medicine.  
 IMPORTANT DATES  
  Abstract submission deadline: January 15, 2023  
  Paper submission deadline: February 1, 2023  
  Notification of acceptance: March 10, 2023  
  Camera-ready submission deadline: March 17, 2023  
  Main conference: June 13-14, 2023  
  Updates on Twitter @AIMEconference  
 Contributions to theory and methods should present or analyse novel AI theories or methodologies for solving problems in the biomedical field. They may propose new theories and methods or extensions of existing ones. In both cases, the work should demonstrate its utility for solving biomedical problems and highlight its contribution to the underlying theoretical basis. In addition, it should discuss assumptions, limitations, and novelty with respect to the state of the art.  
 Contributions addressing systems and applications should describe the development, implementation or evaluation of innovative, AI-based tools and systems in the biomedical application domain. These papers should both link the work to underlying theory and either analyse the potential benefits to solve biomedical problems or present empirical evidence of benefits in clinical practice.  
 AWARDS  
  AIME Rising Star award is aimed at young researchers with recent breakthrough papers in the area.  
  For further information, please contact annette.ten.teije@vu.nl  and robertmo@bgu.ac.il  by March, 1 2023 (also see http://aimedicine.info/aime/index.php/aime-rising-star-award  ).  
 STUDENT TRAVEL GRANTS  
  A limited number of student grants will be offered for authors of student papers accepted for the main conference. More details on how to apply will be available at AIME 2023 webpage. https://www.aimedicine.info/aime23   

 Categorías  

 Anuncios 
  Convocatorias 
  Noticias 
  Ofertas de Empleo 
  Premios 
  Recursos 
    
 Archivo  
 octubre 2024 
  junio 2024 
  mayo 2024 
  abril 2024 
  marzo 2024 
  enero 2024 
  noviembre 2023 
  septiembre 2023 
  junio 2023 
  mayo 2023 
  abril 2023 
  marzo 2023 
  febrero 2023 
  enero 2023 
  diciembre 2022 
  noviembre 2022 
  octubre 2022 

 Asociación Española para la Inteligencia Artificial. Entidad sin ánimo de lucro fundada en 1983. Potenciamos y fomentamos el desarrollo de la IA en España.   
   
 Follow 
    
 AEPIA  

 Quiénes somos 
  Grupos de investigación 
  Noticias 

 Qué hacemos  

 Máster Universitario IA 
  Escuela de Verano IA 
  CAEPIA 
  Publicaciones 

 Participa  

 Cómo participar 
  Hazte socio 
  Grupos de interés 
  Socios institucionales 

 Copyright © 2022 – Asociación Española para la Inteligencia Artificial  

 Aviso Legal 
  Política de cookies

50. AIMSA_0 conference:
PUBLISHER: | SPONSORS: | PUBLISHER: | SPONSORS: 
 PUBLISHER: | SPONSORS: 

 HOME 
 TOPICS 
 COMMITTEE 
 CALL FOR PAPERS 
 SUBMISSIONS 
 POSTER SESSION 
 AIMSA PROGRAM 
 KEYNOTE SPEAKERS 
 REGISTRATION 
 LOCATION 
 PRACTICAL INFORMATION 
 ORGANIZERS 
 AIMSA HISTORY 

 The 19 th  International Conference on Artificial Intelligence:  
  Methodology, Systems, Applications   
  
 AIMSA 2024    
  
 Towards efficient and sustainable AI methods, systems and applications    
 Due to numerous requests for distance attendance AIMSA switches to hybrid mode, i.e. both in presence and on-line participation will be possible.    
 Abstract submission is now opened for 1 page abstracts and full conference participation and presentation fee of 100€.  
  All abstracts will be reviewed before accepted within 2 days. The Springer proceedings will include a section of abstracts along with a section of full paper.    

 Golden Sands resort  , Varna  , Bulgaria  , September 18 th  - 20 th  , 2024   
 Initiated in 1984, the biennial Artificial Intelligence: Methodology, Systems, Applications (AIMSA) conference is a premier single-track forum for exchanging information and research results on theory and principles of artificial intelligence (AI) along with real-world applications of intelligent systems technology. The conference traditionally brings together researchers and practitioners in all areas of AI from both the academia and industry to meet and share their ideas and experiences and learn about the recent trends and developments in contemporary AI.  
 The 19 th  edition of AIMSA will be held in the beautiful Golden Sands resort near Varna, Bulgaria. With its mild climate and excellent opportunities for outdoor activities, water sports and gastronomy, Golden Sands promise to be a wonderful venue for a memorable conference.  

 IMPORTANT DATES    
  
 Paper submission system is still opened |  
 Deadline for acceptance is until: | August 20, 2024 
 Deadline for registration (full papers): | August 25, 2024 
 Deadline for registration (abstracts): | August 31, 2024 
 Conference: | September 18-20, 2024 | Paper submission system is still opened | Deadline for acceptance is until: | August 20, 2024 | Deadline for registration (full papers): | August 25, 2024 | Deadline for registration (abstracts): | August 31, 2024 | Conference: | September 18-20, 2024 |  
 Paper submission system is still opened |  
 Deadline for acceptance is until: | August 20, 2024 
 Deadline for registration (full papers): | August 25, 2024 
 Deadline for registration (abstracts): | August 31, 2024 
 Conference: | September 18-20, 2024 

 Copyright © 2003-2024 Institute of Information and Communication Technologies. All rights reserved.  
  Last update: 13.09.2024 webmaster:  ivo@iinf.bas.bg

51. ICANN_0 conference:
Skip to content    ICANN 2023   
 32nd International Conference on Artificial Neural Networks  
   
 Menu  Home 
  Conference | Conference topics 
  Important dates 
  Keynote speakers 
  Conference programme 
  Special sessions 
  Conference proceedings download 
  Contributors | Submission 
  Call for papers 
  ENNS Student Travel Grants 
  Registration 
  Organisation | Programme Committee 
  Organizing committee 
  Venue | Conference venue 
  About | Previous events 
  Contact 

 Welcome to ICANN 2023  

 The 32nd International Conference on Artificial Neural Networks.  
  A conference of the European Neural Network Society  .  
   
 The conference will be organised as a HYBRID  event.  
  In 2023 the School of Engineering of Democritus University of Thrace, Greece, will organize ICANN 2023. This will be held at Astoria Capsis Hotel at Heraklion city, Crete, Greece from 26th to 29th of September 2023.  
 Preliminary conference programme can be found here  .  
      
 Conference proceedings are published by Springer in Lecture Notes in Computer Science.  
   
 News  
 Reservation at the Conference Venue   
 July 17, 2023   
 You can now make reservations for hotel rooms at the conference venue (limited contingent).   

 Registration is now open!   
 June 30, 2023   
 Register for ICANN 2023   

 Deadline extended to April 19, 2023   
 April 9, 2023   
 The paper/abstract submission deadline has been extended to April 19, 2023.   

 Submission is open   
 December 21, 2022   
 You can now submit your contribution to ICANN 2023.   

  Conference topics  
 ICANN 2023 will feature tracks in Brain inspired Computing, Machine learning, and Artificial Neural Networks, with strong cross-disciplinary interactions and applications. All research fields dealing with Neural Networks will be present at the Conference. More details about Conference topics  .  

 Search   Search    
   
 Home 
  Conference | Conference topics 
  Important dates 
  Keynote speakers 
  Conference programme 
  Special sessions 
  Conference proceedings download 
  Contributors | Submission 
  Call for papers 
  ENNS Student Travel Grants 
  Registration 
  Organisation | Programme Committee 
  Organizing committee 
  Venue | Conference venue 
  About | Previous events 
  Contact 

 Home 
  Conference | Conference topics 
  Important dates 
  Keynote speakers 
  Conference programme 
  Special sessions 
  Conference proceedings download 
  Contributors | Submission 
  Call for papers 
  ENNS Student Travel Grants 
  Registration 
  Organisation | Programme Committee 
  Organizing committee 
  Venue | Conference venue 
  About | Previous events 
  Contact 

 ICANN 2023   Proudly powered by WordPress

52. AIMSA_1 conference:
PUBLISHER: | SPONSORS: | PUBLISHER: | SPONSORS: 
 PUBLISHER: | SPONSORS: 

 HOME 
 TOPICS 
 COMMITTEE 
 CALL FOR PAPERS 
 SUBMISSIONS 
 POSTER SESSION 
 AIMSA PROGRAM 
 KEYNOTE SPEAKERS 
 REGISTRATION 
 LOCATION 
 PRACTICAL INFORMATION 
 ORGANIZERS 
 AIMSA HISTORY 

 FIRST CALL FOR PAPERS    
  (Read as PDF? - click here   )  
   
  The 19 th  International Conference on Artificial Intelligence: Methodology, Systems, Applications AIMSA 2024   
   
  - Towards efficient and sustainable AI methods, systems and applications -  
   
  Golden Sands resort, Varna, Bulgaria September 18 th  - 20 th  , 2024  
   
  **** Proceedings published by Springer/LNCS ****     

 Initiated in 1984, the biennial Artificial Intelligence: Methodology, Systems, Applications (AIMSA) conference is a premier single-track forum for exchanging information and research results on theory and principles of artificial intelligence (AI) along with real-world applications of intelligent systems technology. The conference traditionally brings together researchers and practitioners in all areas of AI from both the academia and industry to meet and share their ideas and experiences and learn about the recent trends and developments in contemporary AI.  
 The 19 th  edition of AIMSA will be held in the beautiful Golden Sands resort near Varna, Bulgaria. With its mild climate and excellent opportunities for outdoor activities, water sports and gastronomy, Golden Sands promise to be a wonderful venue for a memorable conference.  
 TOPICS   The conference is looking for submissions offering innovative methods, systems and applications that demonstrate efficiency and sustainability for the future of AI. Efficiency can be demonstrated against current and traditional methods, systems and applications. Sustainability relates to the required resources, computational power, human wellbeing, positive impact on science and the society.  
 The conference will have three streams, namely:  
 Innovative methods for efficient and sustainable AI 
  Systems for the development and the implementations of efficient and sustainable AI 
  Novel efficient and sustainable AI applications 
   
 All submissions will be subject to a single-blind academic peer review by at least three members of the program committee. Selection criteria include accuracy and originality of ideas, clarity and significance of results, and quality of presentation.  
 The author(s) of the best paper (which will be selected based on the votes of the attendees) of the conference will receive the Best Paper Award during the conference.  
 PROGRAMME COMMITTEE CHAIR   Nikola Kasabov   
  Auckland University of Technology, Auckland, New Zealand  
  Website: https://academics.aut.ac.nz/nkasabov   
  Visiting professor in:  
  Institute of Information and Communication Technologies, Bulgarian Academy of Sciences  
  Ulster University, Derry, United Kingdom  
  Dalian University, China  
 LOCAL ORGANIZING COMMITTEE CHAIR   Petia Koprinkova-Hristova   
  Institute of Information and Communication Technologies  
  Bulgarian Academy of Sciences  
  Acad. G. Bonchev 2, 1113 Sofia, Bulgaria  
  E-mail: petia.koprinkova@iict.bas.bg  , pkoprinkova@yahoo.com   
   
 PROGRAMME COMMITTEE    
  
 Alan | Wang | University of Auckland - New Zealand 
 Albena | Tchamova | IICT, Bulgarian Academy of Sciences - Bulgaria 
 Álvaro Huertas | García | Polytech University of Madrid - Spain 
 Amedeo | Napoli | LORIA, Nancy - France 
 Aysegul | Ucar | Firat University - Turkey 
 Banu | Diri | Yildiz Technical University - Turkey 
 Bulent | Bolat | Yildiz Technical University - Turkie 
 Catalin | Stoean | University of Craiova - Romania 
 Claudio | Gallicchio | University of Pisa - Italy 
 Costin | Badica | University of Craiova - Romania 
 Damien | Coyle | Ulster university - United Kingdom 
 Dan | Tufis | RACAI - Romania 
 Diego | Calvanese | Free University of Bozen-Bolzano - Italy 
 Dominik | Slezak | University of Warsaw - Poland 
 Drago | Zagar | Faculty of electrical engineering, computer science and information technology Osijek - Croatia 
 Francesco Carlo | Morabito | UNIRC - Italy 
 Galia | Angelova | IICT, Bulgarian Academy of Sciences - Bulgaria 
 Genci | Capi | Hosei University - Japan 
 Gennady | Agre | IICT, Bulgarian Academy of Sciences - Bulgaria 
 George D. | Magoulas | Birkbeck, University of London - UK 
 Christos | Makris | University of Patras - Greece 
 Florin | Leon | Gheorghe Asachi Technical University of Iasi - Romania 
 Helena | Bahrami | Auckland University of Technology - New Zealand 
 Horia | Pop | Babes-Bolyai University - Romania 
 Iman | Abouhassan | Technical University of Sofia - Bulgaria 
 Ioan | Sacala | Universitatea Politehnica din București - Romania 
 Ireneusz | Czarnowski | Gdynia Maritime University - Poland 
 Jie | Yang | Shanghai Jiao Tong University - China 
 Jolanta | Mizera-Pietraszko | Military University of Land Forces - Poland 
 Julita | Vassileva | University of Saskatchewan - Canada 
 Kiril | Simov | IICT, Bulgarian Academy of Sciences - Bulgaria 
 Konstantin | Markov | University of Aizu - Japan 
 Konstantinos | Demertzis | Democritus University of Thrace - Greece 
 Konstantinos | Votis | Centre for Reasearch and Technology Hellas / Information Technologies Institute - Greece 
 Krassimir | Atanassov | IBBE, Bulgarian Academy of Sciences - Bulgaria 
 Loris | Bozzato | Fondazione Bruno Kessler, Data and Knowledge Management Unit - Italy 
 Maciej | Kandula | J&J Innovative Medicine - Austira 
 Marcin | Paprzycki | Systems Research Institute, Polish Academy of Sciences - Poland 
 Mihai | Gabroveanu | University of Craiova - Romania 
 Maria | Nisheva-Pavlova | Sofia University St. Kliment Ohridski - Bulgaria 
 Mauro | Gaggero | National Research Council of Italy - Italy 
 Mirel | Cosulschi | University of Craiova - Romania 
 Mirjana | Ivanovic | University of Novi Sad - Serbia 
 Nikola | Kasabov | Auckland University of Technology - New Zealand 
 Okyay | Kaynak | Bogazici University - Turkie 
 Ozcan | Kalenderli | Istanbul Technical University - Turkey 
 Panayiotis | Vlamos | Ionian University - Greece 
 Petia | Georgieva | University of Aveiro - Portugal 
 Petia | Koprinkova-Hristova | IICT, Bulgarian Academy of Sciences - Bulgaria 
 Petko | Valtchev | Université du Québec à Montréal - Canada 
 Petr | Hajek | University of Pardubice - Czech Republic 
 Richard | Chbeir | Université de Pau et des Pays de l'Adour - France 
 Roman | Barták | Charles University - Czechia 
 Roumen | Trifonov | Technical University of Sofia - Bulgaria 
 Ruggero | Donida | Università degli Studi di Milano - Italy 
 Seiichi | Ozawa | Kobe University - Japan 
 Shihua | Zhou | Dalian University - China 
 Soon | Chun | City University of New York - USA 
 Stefan | Trausan-Matu | University Politehnica of Bucarest - Romania 
 Stefka | Fidanova | IICT, Bulgarian Academy of Sciences - Bulgaria 
 Stoyan | Mihov | IICT, Bulgarian Academy of Sciences - Bulgaria 
 Tomas | Krilavicius | Vytautas Magnus University - Lithuania 
 Tulay | Yildirim | Yildiz Technical University - Turkie 
 Vladimir | Kurbalija | University of Novi Sad - Serbia 
 Veselka | Boeva | Blekinge Institute of Technology - Sweden 
 Vincenzo | Piuri | Universita' degli Studi di Milano - Italy 
 Yancho | Todorov | VTT Technical Research Centre of Finland - Finland | Alan | Wang | University of Auckland - New Zealand | Albena | Tchamova | IICT, Bulgarian Academy of Sciences - Bulgaria | Álvaro Huertas | García | Polytech University of Madrid - Spain | Amedeo | Napoli | LORIA, Nancy - France | Aysegul | Ucar | Firat University - Turkey | Banu | Diri | Yildiz Technical University - Turkey | Bulent | Bolat | Yildiz Technical University - Turkie | Catalin | Stoean | University of Craiova - Romania | Claudio | Gallicchio | University of Pisa - Italy | Costin | Badica | University of Craiova - Romania | Damien | Coyle | Ulster university - United Kingdom | Dan | Tufis | RACAI - Romania | Diego | Calvanese | Free University of Bozen-Bolzano - Italy | Dominik | Slezak | University of Warsaw - Poland | Drago | Zagar | Faculty of electrical engineering, computer science and information technology Osijek - Croatia | Francesco Carlo | Morabito | UNIRC - Italy | Galia | Angelova | IICT, Bulgarian Academy of Sciences - Bulgaria | Genci | Capi | Hosei University - Japan | Gennady | Agre | IICT, Bulgarian Academy of Sciences - Bulgaria | George D. | Magoulas | Birkbeck, University of London - UK | Christos | Makris | University of Patras - Greece | Florin | Leon | Gheorghe Asachi Technical University of Iasi - Romania | Helena | Bahrami | Auckland University of Technology - New Zealand | Horia | Pop | Babes-Bolyai University - Romania | Iman | Abouhassan | Technical University of Sofia - Bulgaria | Ioan | Sacala | Universitatea Politehnica din București - Romania | Ireneusz | Czarnowski | Gdynia Maritime University - Poland | Jie | Yang | Shanghai Jiao Tong University - China | Jolanta | Mizera-Pietraszko | Military University of Land Forces - Poland | Julita | Vassileva | University of Saskatchewan - Canada | Kiril | Simov | IICT, Bulgarian Academy of Sciences - Bulgaria | Konstantin | Markov | University of Aizu - Japan | Konstantinos | Demertzis | Democritus University of Thrace - Greece | Konstantinos | Votis | Centre for Reasearch and Technology Hellas / Information Technologies Institute - Greece | Krassimir | Atanassov | IBBE, Bulgarian Academy of Sciences - Bulgaria | Loris | Bozzato | Fondazione Bruno Kessler, Data and Knowledge Management Unit - Italy | Maciej | Kandula | J&J Innovative Medicine - Austira | Marcin | Paprzycki | Systems Research Institute, Polish Academy of Sciences - Poland | Mihai | Gabroveanu | University of Craiova - Romania | Maria | Nisheva-Pavlova | Sofia University St. Kliment Ohridski - Bulgaria | Mauro | Gaggero | National Research Council of Italy - Italy | Mirel | Cosulschi | University of Craiova - Romania | Mirjana | Ivanovic | University of Novi Sad - Serbia | Nikola | Kasabov | Auckland University of Technology - New Zealand | Okyay | Kaynak | Bogazici University - Turkie | Ozcan | Kalenderli | Istanbul Technical University - Turkey | Panayiotis | Vlamos | Ionian University - Greece | Petia | Georgieva | University of Aveiro - Portugal | Petia | Koprinkova-Hristova | IICT, Bulgarian Academy of Sciences - Bulgaria | Petko | Valtchev | Université du Québec à Montréal - Canada | Petr | Hajek | University of Pardubice - Czech Republic | Richard | Chbeir | Université de Pau et des Pays de l'Adour - France | Roman | Barták | Charles University - Czechia | Roumen | Trifonov | Technical University of Sofia - Bulgaria | Ruggero | Donida | Università degli Studi di Milano - Italy | Seiichi | Ozawa | Kobe University - Japan | Shihua | Zhou | Dalian University - China | Soon | Chun | City University of New York - USA | Stefan | Trausan-Matu | University Politehnica of Bucarest - Romania | Stefka | Fidanova | IICT, Bulgarian Academy of Sciences - Bulgaria | Stoyan | Mihov | IICT, Bulgarian Academy of Sciences - Bulgaria | Tomas | Krilavicius | Vytautas Magnus University - Lithuania | Tulay | Yildirim | Yildiz Technical University - Turkie | Vladimir | Kurbalija | University of Novi Sad - Serbia | Veselka | Boeva | Blekinge Institute of Technology - Sweden | Vincenzo | Piuri | Universita' degli Studi di Milano - Italy | Yancho | Todorov | VTT Technical Research Centre of Finland - Finland 
 Alan | Wang | University of Auckland - New Zealand 
 Albena | Tchamova | IICT, Bulgarian Academy of Sciences - Bulgaria 
 Álvaro Huertas | García | Polytech University of Madrid - Spain 
 Amedeo | Napoli | LORIA, Nancy - France 
 Aysegul | Ucar | Firat University - Turkey 
 Banu | Diri | Yildiz Technical University - Turkey 
 Bulent | Bolat | Yildiz Technical University - Turkie 
 Catalin | Stoean | University of Craiova - Romania 
 Claudio | Gallicchio | University of Pisa - Italy 
 Costin | Badica | University of Craiova - Romania 
 Damien | Coyle | Ulster university - United Kingdom 
 Dan | Tufis | RACAI - Romania 
 Diego | Calvanese | Free University of Bozen-Bolzano - Italy 
 Dominik | Slezak | University of Warsaw - Poland 
 Drago | Zagar | Faculty of electrical engineering, computer science and information technology Osijek - Croatia 
 Francesco Carlo | Morabito | UNIRC - Italy 
 Galia | Angelova | IICT, Bulgarian Academy of Sciences - Bulgaria 
 Genci | Capi | Hosei University - Japan 
 Gennady | Agre | IICT, Bulgarian Academy of Sciences - Bulgaria 
 George D. | Magoulas | Birkbeck, University of London - UK 
 Christos | Makris | University of Patras - Greece 
 Florin | Leon | Gheorghe Asachi Technical University of Iasi - Romania 
 Helena | Bahrami | Auckland University of Technology - New Zealand 
 Horia | Pop | Babes-Bolyai University - Romania 
 Iman | Abouhassan | Technical University of Sofia - Bulgaria 
 Ioan | Sacala | Universitatea Politehnica din București - Romania 
 Ireneusz | Czarnowski | Gdynia Maritime University - Poland 
 Jie | Yang | Shanghai Jiao Tong University - China 
 Jolanta | Mizera-Pietraszko | Military University of Land Forces - Poland 
 Julita | Vassileva | University of Saskatchewan - Canada 
 Kiril | Simov | IICT, Bulgarian Academy of Sciences - Bulgaria 
 Konstantin | Markov | University of Aizu - Japan 
 Konstantinos | Demertzis | Democritus University of Thrace - Greece 
 Konstantinos | Votis | Centre for Reasearch and Technology Hellas / Information Technologies Institute - Greece 
 Krassimir | Atanassov | IBBE, Bulgarian Academy of Sciences - Bulgaria 
 Loris | Bozzato | Fondazione Bruno Kessler, Data and Knowledge Management Unit - Italy 
 Maciej | Kandula | J&J Innovative Medicine - Austira 
 Marcin | Paprzycki | Systems Research Institute, Polish Academy of Sciences - Poland 
 Mihai | Gabroveanu | University of Craiova - Romania 
 Maria | Nisheva-Pavlova | Sofia University St. Kliment Ohridski - Bulgaria 
 Mauro | Gaggero | National Research Council of Italy - Italy 
 Mirel | Cosulschi | University of Craiova - Romania 
 Mirjana | Ivanovic | University of Novi Sad - Serbia 
 Nikola | Kasabov | Auckland University of Technology - New Zealand 
 Okyay | Kaynak | Bogazici University - Turkie 
 Ozcan | Kalenderli | Istanbul Technical University - Turkey 
 Panayiotis | Vlamos | Ionian University - Greece 
 Petia | Georgieva | University of Aveiro - Portugal 
 Petia | Koprinkova-Hristova | IICT, Bulgarian Academy of Sciences - Bulgaria 
 Petko | Valtchev | Université du Québec à Montréal - Canada 
 Petr | Hajek | University of Pardubice - Czech Republic 
 Richard | Chbeir | Université de Pau et des Pays de l'Adour - France 
 Roman | Barták | Charles University - Czechia 
 Roumen | Trifonov | Technical University of Sofia - Bulgaria 
 Ruggero | Donida | Università degli Studi di Milano - Italy 
 Seiichi | Ozawa | Kobe University - Japan 
 Shihua | Zhou | Dalian University - China 
 Soon | Chun | City University of New York - USA 
 Stefan | Trausan-Matu | University Politehnica of Bucarest - Romania 
 Stefka | Fidanova | IICT, Bulgarian Academy of Sciences - Bulgaria 
 Stoyan | Mihov | IICT, Bulgarian Academy of Sciences - Bulgaria 
 Tomas | Krilavicius | Vytautas Magnus University - Lithuania 
 Tulay | Yildirim | Yildiz Technical University - Turkie 
 Vladimir | Kurbalija | University of Novi Sad - Serbia 
 Veselka | Boeva | Blekinge Institute of Technology - Sweden 
 Vincenzo | Piuri | Universita' degli Studi di Milano - Italy 
 Yancho | Todorov | VTT Technical Research Centre of Finland - Finland 

 IMPORTANT DATES    
  
 Paper submission system is still opened |  
 Deadline for acceptance is until: | August 20, 2024 
 Deadline for registration (full papers): | August 25, 2024 
 Deadline for registration (abstracts): | August 31, 2024 
 Conference: | September 18-20, 2024 

 PROCEEDINGS   The AIMSA 2024 Proceedings will be published by Springer Nature in their Lecture Notes in Artificial Intelligence subline of the Lecture Notes in Computer Science series  .  
 LANGUAGE   The official language of the conference is English.  
 LOCATION   Golden Sands is a modern resort with traditions, and history going back 50 years. A unique blend of lovely nature park, warm sea, and fine golden sand! Golden Sands is the winner of a "Blue Flag" - a prestigious international award for environmentally clean resorts.  
 ORGANIZERS   Bulgarian Artificial Intelligence Association  
  Institute of Information and Communication Technologies at the Bulgarian Academy of Sciences (IICT - BAS)  

 Copyright © 2003-2024 Institute of Information and Communication Technologies. All rights reserved.  
  Last update: 13.09.2024 webmaster:  ivo@iinf.bas.bg

53. ICANN_1 conference:
Skip to content    ICANN 2023   
 32nd International Conference on Artificial Neural Networks  
   
 Menu  Home 
  Conference | Conference topics 
  Important dates 
  Keynote speakers 
  Conference programme 
  Special sessions 
  Conference proceedings download 
  Contributors | Submission 
  Call for papers 
  ENNS Student Travel Grants 
  Registration 
  Organisation | Programme Committee 
  Organizing committee 
  Venue | Conference venue 
  About | Previous events 
  Contact 

 Important dates  
  
 Opening of contribution submissions: 15th of December 2022   
  Deadline for special session and workshop proposals: 28th of February 2023   
  Deadline for full paper and extended abstract submission: 9th of April 2023   19th of April 2023   
  Notification of acceptance: 30th of June 2023   
  Camera-ready paper upload: 20th of July 2023   
   
 Deadline for author registration and early registration at early rate: 25th of July 2023   
  
  Conference dates: 26 – 29 September 2023   

 Search   Search    
   
 Home 
  Conference | Conference topics 
  Important dates 
  Keynote speakers 
  Conference programme 
  Special sessions 
  Conference proceedings download 
  Contributors | Submission 
  Call for papers 
  ENNS Student Travel Grants 
  Registration 
  Organisation | Programme Committee 
  Organizing committee 
  Venue | Conference venue 
  About | Previous events 
  Contact 

 Home 
  Conference | Conference topics 
  Important dates 
  Keynote speakers 
  Conference programme 
  Special sessions 
  Conference proceedings download 
  Contributors | Submission 
  Call for papers 
  ENNS Student Travel Grants 
  Registration 
  Organisation | Programme Committee 
  Organizing committee 
  Venue | Conference venue 
  About | Previous events 
  Contact 

 ICANN 2023   Proudly powered by WordPress

54. AIMSA_2 conference:
Conference Partner   Home 
  Conferences 
  Journals 
  Proofreading 
  Login 

  中文  |  English  |  Español  |  日本語     

 Conference Partner  » Conferences  » AIMSA    
  Conference Information   
   
 AIMSA 2022: International Conference on Artificial Intelligence- Methodology, Systems, Applications  
 http://www.aimsaconference.org/   
   
 Submission Date: | 2022-05-30 Extended 
 Notification Date: | 2022-06-20 
 Conference Date: | 2022-09-08 
 Location: | Varna, Bulgaria 
 Years: | 19 
  
 Viewed: 9264  Tracked: 2  Attend: 0    

  Call For Papers   
   
 The conference welcomes submissions of original, high quality papers in all areas of Artificial Intelligence, including (but not limited to) traditional topics such as the algorithms, implementations and (or) real-world applications of: algorithms, implementations and (or) real-world applications of knowledge discovery data mining machine learning evolutionary computing pattern recognition search reasoning planning natural language processing intelligent agents multiagent systems robotics and sensing, etc.  Last updated by Dou Sun  in 2022-05-29   

  Related Conferences   

 CCF | CORE | QUALIS | Short | Full Name | Submission | Notification | Conference 
 CHASE' | International Conference on Cooperative and Human Aspects of Software Engineering | 2022-01-18 | 2022-03-08 | 2022-05-21 
 ICCSMT | International Conference on Computer Science and Management Technology | 2022-11-05 | 2022-11-18 
 INCET | IEEE International Conference for Emerging in Technology | 2022-02-15 | 2022-03-03 | 2022-05-27 
 FMAT | International Conference on Functional Materials and Applied Technologies | 2020-11-10 | 2020-11-20 | 2020-12-15 
 EMCIS | European, Mediterranean and Middle Eastern Conference on Information Systems | 2020-05-15 | 2020-06-30 | 2020-11-25 
 EOOPS | International Workshop on Engineering Object Oriented Parallel Software | 2012-11-25 | 2013-03-25 
 ADCOM | International conference on Advanced Computing | 2023-01-14 | 2023-01-21 | 2023-01-28 
 ICIET | International Conference on Information and Education Technology | 2024-11-10 | 2024-12-10 | 2025-04-18 
 SmartICT | International Conference on Smart Information & Communication Technologies | 2019-05-15 | 2019-07-01 | 2019-09-26 
 MMMT | International Conference on Machining, Materials and Mechanical Technologies | 2021-03-22 | 2021-03-29 | 2021-03-29 
  
 4316  3964  3616  3064  3418  1110  3519  3544  3165  4033    

 Short | Full Name | Submission | Conference 
 CHASE' | International Conference on Cooperative and Human Aspects of Software Engineering | 2022-01-18 | 2022-05-21 
 ICCSMT | International Conference on Computer Science and Management Technology | 2022-11-05 | 2022-11-18 
 INCET | IEEE International Conference for Emerging in Technology | 2022-02-15 | 2022-05-27 
 FMAT | International Conference on Functional Materials and Applied Technologies | 2020-11-10 | 2020-12-15 
 EMCIS | European, Mediterranean and Middle Eastern Conference on Information Systems | 2020-05-15 | 2020-11-25 
 EOOPS | International Workshop on Engineering Object Oriented Parallel Software | 2013-03-25 
 ADCOM | International conference on Advanced Computing | 2023-01-14 | 2023-01-28 
 ICIET | International Conference on Information and Education Technology | 2024-11-10 | 2025-04-18 
 SmartICT | International Conference on Smart Information & Communication Technologies | 2019-05-15 | 2019-09-26 
 MMMT | International Conference on Machining, Materials and Mechanical Technologies | 2021-03-22 | 2021-03-29 
  
 4316  3964  3616  3064  3418  1110  3519  3544  3165  4033    

  Related Journals   

 CCF | Full Name | Impact Factor | Publisher | ISSN 
 b | Knowledge and Information Systems | 2.500 | Springer | 0219-1377 
 SIGMOD Record | ACM | 0163-5808 
 Computers & Operations Research | 4.100 | Elsevier | 0305-0548 
 Robotics and Computer-Integrated Manufacturing | 9.100 | Elsevier | 0736-5845 
 IET Electric Power Applications | IET | 1751-8660 
 Computing and Informatics | Institute of Informatics, Slovakia | 1335-9150 
 b | World Wide Web | 2.700 | Springer | 1386-145X 
 c | ACM Transactions on Computing Education | 3.200 | ACM | 1946-6226 
 Biomedical Signal Processing and Control | 4.900 | Elsevier | 1746-8094 
 b | Journal of Web Semantics | 2.100 | Elsevier | 1570-8268 
  
 121  123  747  734  606  124  122  591  760  120    

 Full Name | Impact Factor | Publisher 
 Knowledge and Information Systems | 2.500 | Springer 
 SIGMOD Record | ACM 
 Computers & Operations Research | 4.100 | Elsevier 
 Robotics and Computer-Integrated Manufacturing | 9.100 | Elsevier 
 IET Electric Power Applications | IET 
 Computing and Informatics | Institute of Informatics, Slovakia 
 World Wide Web | 2.700 | Springer 
 ACM Transactions on Computing Education | 3.200 | ACM 
 Biomedical Signal Processing and Control | 4.900 | Elsevier 
 Journal of Web Semantics | 2.100 | Elsevier 
  
 121  123  747  734  606  124  122  591  760  120    

  Recommendation   

 Track It 2 
  Attend It 0 
  Edit CFP 

 Tracker 
 He Yifan (15) 
 Haihua Lu (842) 
  
 12915  12096    
   
  Advertisment   

  4,945  Conferences | 1,179  Journals | 69,527  Researchers | 383,494,260 PV  
  Copyright © 2011-2024 myhuiban.com. All Rights Reserved. About Us  | Facebook  | X  | Post CFP or Contact Us  | Promotion

55. AIMSA_3 conference:
GO HOME 

  About 
  Members 
  Research | Publication 
  Conferences 
  Congress Organization | 2019 - 2022 | DSBFI 1st 
  Webinar 2021 
  Webinar 2022 
  2023 | DSBFI 2nd 
  International Workshop 2023 
  International Conference 2023 
  2024 | Smart Life Summit 2024: The AI Era 
  International workshop 
  2025 | DSBFI 3rd 
  International Chair in DS and XAI 
  News 
  Contact 
  Back   Home 
  About 
  Members 
  Research 
  Congress Organization | DSBFI 1st 
  Webinar 2021 
  Webinar 2022 
  DSBFI 2nd 
  International Workshop 2023 
  International Conference 2023 
  Smart Life Summit 2024: The AI Era 
  International workshop 
  DSBFI 3rd 
  International Chair in DS and XAI 
  News 
  Contact 

      Danh mục tổng hợp    

      Danh mục tổng hợp    

 In Industry 4.0, manufacturing is a rapidly evolving discipline based on the new generation of digital production equipment and Artificial Intelligence and Data Science applications. However, in the context of human concern about resource efficiency, empowered workers, competitive edge, improved safety, and well-being and unveiling the reasons behind decision-making support of Artificial Intelligence; termed, an Industry 5.0 formed. The new emphasis is on human worker inclusion to provide decision-making activities or physical actions (at decision nodes) within an automated process flow. Explainable Artificial Intelligence (XAI), one approach to this problem, aims to provide AI algorithms with narrative functionality capable of communicating the significant steps taken in arriving at a solution to a human.  
  
 In the International Conference “Explainable Artificial Intelligence for Industry 5.0”, experts from the International Research Institute for Artificial Intelligence and Data Science (IAD), Dong A University, University of Lille, University of Liège, etc  . will present XAI applications and its state-of-the-art in Industry 5.0 such as manufacturing, anomaly detection, process control and monitoring, health care.  

  ORGANIZING COMMITTEE      
 General Chair   
 Kim Phuc Tran  
  University of Lille, France   
  
 Local Arrangement Chair   
 Sam Minh Luong  
  Dong A University, Vietnam   
  
 Kim Duc Tran  
  Dong A University, Vietnam   
  
 Technical Program Committee   
 Cédric Heuchenne  
  University of Liège, Belgium   
  
 Ludovic Koehl  
  GEMTEX, University of Lille, France   
  
 Athanasios ‘Sakis’ Rakitzis  
  University of Piraeus, Greece   
  
 Aamir Saghir  
  Mirpur University of Science and Technology (MUST), Pakistan   
  
 Asma Amdouni  
  Faculty of Science, Tunis, Tunisia   
  
 Hai Canh Vu  
  University of Technology of Compiègne, France   
  
 Nguyen Thi Phuong Khanh  
  National School of Engineering in Tarbes (ENIT), INP Toulouse, France   
  
 Quoc-Thong Nguyen  
  Dong A University, Vietnam   
   
 Huu Du Nguyen  
  Hanoi University of Science and Technology, Vietnam   
   
 Web Chair   
 Tho Nguyen  
  Dong A University, Vietnam   
  
 Secretary   
 Luc Nguyen Thi  
  Dong A University, Vietnam   

  INVITED SPEAKERS     

  Senior Assoc. Prof. Kim Phuc Tran   
 ENSAIT, GEMTEX, University of Lille, France & UDA & IAD, Vietnam 
  Prof. Peihua Qiu   
 Senior lecturer at the Department of Biostatistics, University of Florida. 
  Prof. Xianyi Zeng   
 Prof. Xianyi Zeng - GEMTEX National Laboratory 
  Prof. Cédric Heuchenne   
 Prof. Cédric Heuchenne - HEC, Liège, Belgium 
  Assoc. Prof. Fadel Megahed   
 Assoc. Prof. Fadel Megahed - Famer School of Business, Miami University 
  Assoc. Prof. Khanh Nguyen   
 Associate Professor at National School of Engineering in Tarbes (ENIT), INP Toulouse, France. 
  Assoc. Prof. Ramla SADDEM   
 EiSINE School of Industrial and Digital Sciences Engineering at the University of Reims... 
  Assist. Prof. Rehmat Ullah Khan   
 Assist. Prof. Rehmat Ullah Khan - Cardiff Metropolitan University, UK. 
  Dr. Huu Du Nguyen   
 Dr. Huu Du Nguyen - Hanoi University of Science and Technology 
  From Blackbox to Explainable Artificial Intelligence for Healthcare 5.0   
 In the International Conference on "Explainable Artificial Intelligence for Industry 5.0" dated Sept... 
  MPH. Tho Nguyen   
 MPH. Tho Nguyen - International Research Institute for Artificial Intelligence and Data Science... 

  AGENDA     

  CONTACT UDA   
   
 Admissions center of UDA  
 Add: 33 Xô Viết Nghệ Tĩnh, TP Đà Nẵng   
 Phone: 0236.3519.929  - 0236.3519.991 -  0236.3531.332   
 Website: donga.edu.vn   
    
 CONTACT US   
   
 International Research Institute for Artificial Intelligence and Data Science  
 Website: iad.donga.edu.vn   
 Email: iad@donga.edu.vn   
 Nguyen Tho  
 Email: t  hon@donga.edu.vn  

 FACEBOOK   

  FOLLOW US    

 Copyright 2024 by UDA    
 AD: 33 Xô Viết Nghệ Tĩnh - Hải Châu - Đà Nẵng  
 TEL: 0236.3519.929 - 0236.3519.991  
 E-mail: vanthu@donga.edu.vn  

 Đại học Đông Á   

    ONLINE REGISTRATION   02363519929

56. EvoApplications_0 conference:
Skip to main content      

 Toggle navigation     
 About | About Evostar 
  Organizers 
  The EvoStar Code 
  Awards 
  Previous events 
  Contact us 
  Calls | EuroGP 
  EvoAPPS | Analysis of Evolutionary Computation Methods: Theory, Empirics, and Real-World Applications 
  Applications of Bioinspired techniques on Social Networks 
  Computational Intelligence for Sustainability 
  Evolutionary Computation in Edge, Fog, and Cloud Computing 
  Evolutionary Computation in Image Analysis, Signal Processing and Pattern Recognition 
  Machine Learning and AI in Digital Healthcare and Personalized Medicine 
  Resilient Bio-Inspired Algorithms 
  Soft Computing Applied to Games 
  Surrogate-Assisted Evolutionary Optimisation 
  EvoCOP 
  EvoMUSART 
  Joint Track on Evolutionary Machine Learning 
  Late-Breaking Abstracts 
  Submit | Submit Paper 
  Camera-Ready Paper 
  Late-Breaking Abstracts 
  Important Dates 
  Programme | Programme 
  Invited Speakers 
  Accepted contributions | EuroGP Accepted Papers 
  EvoAPPS Accepted Papers 
  EvoCOP Accepted Papers 
  EvoMUSART Accepted Papers 
  Evolutionary Machine Learning Accepted Papers 
  Best paper nominations | EuroGP Best Paper Nominees 
  EvoAPPs Best Paper Nominees 
  EvoCOP Best Paper Nominees 
  EvoMUSART Best Paper Nominees 
  Participants | Registration 
  Preparing your online poster 
  Instructions for presenters 
  Online Poster Session (in Gather) 
  Students | Student Welcome Reception 
  Student Workshop 
  The Great EvoStar Scavenger Hunt 2023 
  EvoStar Outstanding Students 
  Outstanding Students of 2023 
  Local information | About Brno 
  Venue 
  Travel Information 
  Accomodation 

   EvoApplications, the International Conference on the Applications of Evolutionary Computation -formerly known as EvoWorkshops- brings together researchers in applications of Evolutionary Computation and other Nature-inspired techniques.  
 EvoApplications invites high quality contributions for its 26th edition, which will be held as part of the EvoStar 2023 event and co-located within EvoStar with three related conferences: EuroGP, EvoCOP and EvoMUSART.  
 The aim of EvoApplications is to create a friendly environment that can lead to the establishment or strengthening of scientific collaborations and exchanges among attendees.  
 Therefore, EvoApplications solicits high-quality original research papers (including significant work-in-progress) on any aspect of applications of Evolutionary Computation, both to real-world or methodological contexts in which Evolutionary Computation can contribute to pushing the limits of the state of the art beyond the present ones.  
 We encourage you to submit papers focused on interesting, relevant and original works that are related to all kinds of applications of Evolutionary Computation.  
 EvoApplications Conference Proceedings in SpringerLink   
 Download the CFP in PDF  .  
 NEW:   The proceedings of EvoApps 2023 are available following this link  .  
 Special sessions  
 In addition to regular session, special sessions will be organized on the following topics:  
 Analysis of Evolutionary Computation Methods: Theory, Empirics, and Real-World Applications 
  Applications of Bio-inspired techniques on Social Networks 
  Computational Intelligence for Sustainability 
  Evolutionary Computation in Edge, Fog, and Cloud Computing 
  Evolutionary Computation in Image Analysis, Signal Processing and Pattern Recognition 
  Machine Learning and AI in Digital Healthcare and Personalized Medicine 
  Resilient Bio-Inspired Algorithms 
  Soft Computing applied to Games 
  Surrogate-Assisted Evolutionary Optimisation 
  Conference Chair  
 João Correia | University of Coimbra | jncor(at)dei.uc.pt 
  Conference Co-Chair  
 Stephen Smith | University of York | stephen.smith(at)york.ac.uk 
  Publication Chair  
 Raneem Qaddoura | Al Hussein Technical University | raneem.qaddoura(at)htu.edu.jo 
  Submission Details  
 Accepted papers will appear in the proceedings of EvoApplications, published in a volume of the Springer Lecture Notes in Computer Science, which will be available at the Conference. Submitted papers require novel and complete research work or interesting preliminary results. Submissions must be original and not published elsewhere. The submissions will be peer reviewed by at least three members of the program committee. The reviewing process will be double-blind, so please omit information about the authors in the submitted paper  . Submit your manuscript in Springer LNCS format  and provide up to five keywords in your Abstract  
 Page limit  : 16 pages  
 Submission link  : https://easychair.org/conferences/?conf=evo2023   
 The authors of accepted papers will have to improve their paper on the basis of the reviewers’ comments and will be asked to send a camera ready version of their manuscripts (notifications will be sent on 18 January, 2023  and the camera-ready deadline will be on 1 February, 2023  ). At least one author of each accepted work has to register for the conference not later than 27 February 2023,  attend the conference and present the work. All authors of accepted papers will be given the opportunity to further disseminate their work in poster sessions.  
 Steering Committee  
 Stefano Cagnoni 
  Pedro A. Castillo 
  Anna I Esparcia-Alcázar 
  Mario Giacobinni 
  Paul Kaufmann 
  Antonio Mora 
  Günther Raidl 
  Franz Rothlauf 
  Kevin Sim 
  Giovanni Squillero 
  Honorary member: Cecilia di Chio 
  Programme Committee  
 Jacopo Aleotti  , University of Parma  
  Anca Andreica  , Babes-Bolyai University  
  Claus Aranha  , University of Tsukuba  
  Kehinde Babaagba  , Edinburgh Napier University  
  Jaume Bacardit  , Newcastle University  
  Marco Baioletti  , Universita` degli Studi di Perugia  
  Illya Bakurov  , NOVA IMS  
  János Botzheim  , Eötvös Loránd University  
  Maxim Buzdalov  , ITMO University  
  Stefano Cagnoni  , University of Parma  
  Oscar Castillo  , Tijuana Institute of Technology  
  Pedro Castillo  , University of Granada  
  Josu Ceberio  , University of the Basque Country  
  Ying-Ping Chen  , National Yang Ming Chiao Tung University  
  Francisco Chicano  , University of Málaga  
  Anders Christensen  , University of Southern Denmark  
  Anthony Clark  , Pomona College  
  José Manuel Colmenar  , Universidad Rey Juan Carlos  
  Feijoo Colomine D.  , Universidad Nacional experimental del Tachira  
  Stefano Coniglio  , University of Bergamo  
  Fabio D’Andreagiovanni  , CNRS, Sorbonne University – UTC  
  Gregoire Danoy  , University of Luxembourg  
  Amir Dehsarvi  , University of York  
  Bilel Derbel  , CRIStAL (Univ. Lille)  
  Travis Desell  , Rochester Institute of Technology  
  Federico Divina  , Pablo de Olavide University  
  Bernabe Dorronsoro  , University of Cadiz  
  Tome Eftimov  , Jozef Stefan Institute  
  Abdelrahman Elsaid  , Rocheser Institute of Technology  
  Edoardo Fadda  , Politecnico di Torino  
  Andres Faina  , IT University of Copenhagen  
  Francisco Fernandez De Vega  , Grupo de Evolucion Artificial, Universidad de Extremadura  
  Francesco Fontanella  , DIEI, Università di Cassino e del Lazio meridionale– ITALY  
  Marcus Gallagher  , The University of Queensland  
  Mario Giacobini  , University of Torino  
  Antonio Gonzalez-Pardo  , Universidad Rey Juan Carlos  
  Michael Guckert  , THM  
  Daniel Hernandez  , Tecnológico Nacional de México/Instituto Tecnológico de Tijuana  
  Rolf Hoffmann  , TU Darmstadt  
  Anja Jankovic  , Sorbonne University  
  Juan Luis Jiménez Laredo  , Université du Havre Normandie  
  Anna Kononova  , LIACS, Leiden University  
  Ana Kostovska  , Jožef Stefan Institute  
  Gurhan Kucuk  , Yeditepe University  
  Waclaw Kus  , Silesian University of Technology  
  Yuri Lavinas  , University of Tsukuba  
  Kenji Leibnitz  , National Institute of Information and Communications Technology  
  Federico Liberatore  , Cardiff University  
  Fernando Lobo  , University of Algarve  
  Michael Lones  , Heriot-Watt University  
  Nuno Lourenço  , University of Coimbra, CISUC, DEI, LASI  
  Francisco Luna  , Universidad de Málaga  
  Gabriel Luque  , University of Málaga  
  Evelyne Lutton  , INRAE  
  João Macedo  , University of Coimbra  
  Katherine Malan  , University of South Africa  
  Luca Mariot  , Radboud University  
  Jesús Mayor  , Universidad Politécnica de Madrid  
  David Megias  , UOC  
  Paolo Mengoni  , Hong Kong Baptist University  
  Krzysztof Michalak  , Wroclaw University of Economics  
  Mohamed Wiem Mkaouer  , Rochester Institute of Technology  
  Salem Mohammed  , Mustapha Stambouli University  
  Antonio Mora  , University of Granada  
  Mario Andres Muñoz Acosta  , The University of Melbourne  
  Geoff Nitschke  , University of Cape Town  
  Jorge Novo Buján  , Universidade da Coruña  
  Marcos Ortega Hortas  , VARPA Group, Dpt. of Computer Science, University of A Coruña  
  Anna Paszynska  , Jagiellonian University  
  David Pelta  , University of Granada  
  Diego Perez Liebana  , Queen Mary University of London  
  Petr Pošík  , Czech Technical University in Prague  
  Arkadiusz Poteralski  , Silesian University of Technology  
  José Carlos Ribeiro  , Polytechnic Institute of Leiria  
  Jose Santos  , University of A Coruña  
  Lennart Schäpermeier  , TU Dresden  
  Enrico Schumann  , University of Basel, Switzerland  
  Sevil Sen  , University of York  
  Roman Senkerik  , TBU in Zlin, Faculty of Applied Informatics  
  Chien-Chung Shen  , University of Delaware  
  Kevin Sim  , Edinburgh Napier University  
  Anabela Simões  , Coimbra Institute of Engineering  
  Yanan Sun  , Sichuan University  
  Shamik Sural  , Indian Institute of Technology Kharagpur  
  Ernesto Tarantino  , ICAR-CNR  
  Andrea Tettamanzi  , Univ. Nice Sophia Antipolis  
  Renato Tinós  , USP  
  Marco Tomassini  , University of Lausanne  
  Heike Trautmann  , University of Münster  
  Koen van der Blom  , Leiden Institute of Advanced Computer Science  
  Diederick Vermetten  , Leiden Institute for Advanced Computer Science  
  Marco Villani  , University of Modena and Reggio Emilia  
  Markus Wagner  , The University of Adelaide  
  Hao Wang  , Leiden University  
  Thomas Weise  , Nature Inspired Computation and Applications Laboratory (NICAL), University of Science and Technology of China  
  Simon Wells  , Edinburgh Napier University  
  Dennis Wilson  , ISAE-Supaero  
  Anil Yaman  , Vrije Universiteit Amsterdam  
  Furong Ye  , Leiden Institute of Advanced Computer Science  
  Ales Zamuda  , University of Maribor  
  Mengjie Zhang  , Victoria University of Wellington  

 Search for:        
   
 Important Dates  
 EvoApps Special Session Proposals   
  9 September 2022 AoE   
 Submission deadline   
  16 November 2022 AoE (extended)    
 Notification to authors   
  18 January 2023   
 Camera-ready submission   
  1 February 2023   
 Author’s mandatory registration   
  27 February 2023   
 Early registration deadline   
  1 March 2023   
 Late-Breaking Abstracts submission   
  2 April 2023   
 EvoStar Conference  
   12-14 April 2023  

 news  
 If you are presenting a poster online in Gather, please read the details | here | . 
  Evostar Speakers, please carefully read our | Instructions for Presenters | . 
  The programme is available | here | . 
  The instructions for poster preparation are now available | here | . 
  The registration fees and dates for online and onsite participants are now published at the | registration page | . 
  Welcome to the Evostar 2023 webpage!!! 

 Recent tweets  
 Tweets by EvostarConf    
  
 Social  
 Twitter 
  Facebook 
  LinkedIn 

 Evostar is organized by:  

  Evostar is published by:  

 © evostar 2021  
   
 Banner photo by Ignat Arapov - CC-BY   
   
 -

57. EvoApplications_1 conference:
JavaScript must be enabled to use the system

58. ICANN_2 conference:
Mathematics of Computation and Optimisation   
 Special Interest Group of the AustMS  

 Home 
  Structure | Executives 
  Goals 
  Rules of Procedure 
  Membership 
  Contact 
  Poster 
  Seminars 
  YouTube 
  Archive | Interim Structure 2016 
  Rules of Procedure prior to the 2017 election 
  VA Webinar 
  CM Webinar 
  WOMBAT 

 32nd International Conference on Artificial Neural Networks ICANN 2023  
   
 In 2023 the School of Engineering of Democritus University of Thrace, Greece, will organize ICANN 2023. This will be held at Astoria Capsis Hotel at Heraklion city, Crete, Greece September, 26-29, 2023. Hybrid mode.  
 https://e-nns.org/icann2023/   

 events  , Seminars     

 Archives   
 Archives  Select Month  November 2024 (2)  September 2024 (1)  August 2024 (1)  July 2024 (6)  June 2024 (2)  April 2024 (1)  March 2024 (2)  February 2024 (3)  January 2024 (2)  November 2023 (2)  October 2023 (2)  September 2023 (5)  August 2023 (2)  July 2023 (2)  June 2023 (2)  May 2023 (1)  April 2023 (2)  February 2023 (3)  January 2023 (2)  December 2022 (2)  November 2022 (1)  October 2022 (1)  September 2022 (2)  August 2022 (2)  July 2022 (11)  June 2022 (4)  May 2022 (5)  April 2022 (4)  March 2022 (6)  February 2022 (2)  January 2022 (5)  December 2021 (3)  November 2021 (6)  October 2021 (8)  September 2021 (9)  August 2021 (2)  July 2021 (1)  June 2021 (10)  May 2021 (5)  April 2021 (6)  March 2021 (6)  February 2021 (7)  January 2021 (2)  November 2020 (4)  October 2020 (8)  September 2020 (7)  August 2020 (4)  July 2020 (5)  June 2020 (6)  May 2020 (3)  April 2020 (5)  March 2020 (3)  February 2020 (2)  January 2020 (2)  June 2019 (1)  September 2018 (1)  August 2018 (2)  July 2018 (1)  June 2018 (3)  May 2018 (2)  April 2018 (3)  March 2018 (1)  January 2018 (2)  November 2017 (1)  September 2017 (1)  June 2017 (1)  May 2017 (3)  March 2017 (1)  January 2017 (1)  November 2016 (1)  October 2016 (4)  August 2016 (1)  July 2016 (3)  May 2016 (1)  February 2016 (2)  January 2016 (1)  December 2015 (1)  November 2015 (3)    
  
 M | T | W | T | F | S | S 
 1 | 2 | 3 
 4 | 5 | 6 | 7 | 8 | 9 | 10 
 11 | 12 | 13 | 14 | 15 | 16 | 17 
 18 | 19 | 20 | 21 | 22 | 23 | 24 
 25 | 26 | 27 | 28 | 29 | 30 |  
  
 « Aug    Oct »    

 Powered by WordPress  and Courage  .

59. EGVE_0 conference:
Skip to content  facebook 
    Search      
 Eurographics      

 HOME 
  NEWS | open dropdown menu | General news 
  Mailing list 
  News archive 
  MEMBERSHIP | open dropdown menu | EG membership 
  Membership management 
  ABOUT EG | open dropdown menu | About EG 
  Organization 
  History 
  Fellows 
  Junior Fellows 
  Volunteering 
  Workshops Board and Working groups 
  Local Chapters 
  Educational activities 
  Affiliated societies 
  Obituaries 
  AWARDS | open dropdown menu | Eurographics Awards Programme 
  Eurographics Gold Medal 
  Distinguished Career Award 
  Outstanding Technical Contributions Award 
  Eurographics Young Researcher Award 
  EuroVis Early Career Award 
  Eurographics PhD Award 
  EuroVis PhD Award 
  Best Paper Awards 
  PUBLICATIONS | open dropdown menu | Eurographics Publications 
  Computer Graphics Forum 
  Eurographics Bibliography Database 
  Open Access 
  Guidelines 
  CGF COVER CONTEST 
  EG EVENTS | open dropdown menu | EG Events 
  Information for EG Event Organizers 
  Eurographics Cooperation With Other Bodies 
  Diversity Scholarship 
  DOCUMENTS | open dropdown menu | Public Documents 
  General Assembly doc. 
  EXB documents 
  EXC Documents 
  CONTACT | open dropdown menu | Contact / Legal Notice 

 open menu     

   « All Events   
 This event has passed. 
    
 ICAT-EGVE 2023: International Conference on Artificial Reality and Telexistence & Eurographics Symposium on Virtual Environments  
 December 6, 2023  - December 8, 2023   
   
 «  STAG 2023: Smart Tools and Applications in Graphics 
  VISIGRAPP 2024 » 

 ICAT-EGVE is a merger of the International Conference on Artificial Reality and Telexistence (ICAT) and the Eurographics Symposium on Virtual Environments (EGVE). Together, these are two of the oldest international conferences in the world on Artificial Reality and Virtual Environments.  
 The conference features a technical program of papers, keynote talks, posters and demos on topics including but not limited to Virtual Environments, Telexistence, the Metaverse and Virtual Social Interactions in VR/AR/MR. Please see our Call for Papers  section for more details.  
   
 + Google Calendar  + iCal Export    
 Details  
 Start:  December 6, 2023   End:  December 8, 2023   Event Category:  EG Event   Website:  https://icat-egve-2023.org/      
 Organizer  
  Dublin, Ireland     
   
 Venue  
 Dublin, Ireland  Dublin  ,  Ireland   + Google Map       

 «  STAG 2023: Smart Tools and Applications in Graphics 
  VISIGRAPP 2024 » 

 Sidebar  
 Join Eurographics  | Eurographics Digital Library   

 Upcoming Events  
 ICAT-EGVE2024: International Conference on Artificial Reality and Telexistence & Eurographics Symposium on Virtual Environments | December 1  - December 3 
  VISIGRAPP 2025: International Joint Conference | February 26, 2025  - February 28, 2025 
  EUROGRAPHICS 2025 | May 12, 2025  - May 16, 2025 
  EuroVis 2025 | June 2, 2025  - June 6, 2025 
  View All Events   
  
 Eurographics 2025 in London, UK  
    
 EuroVis 2025 in Luxembourg  
    
 Winner of the Computer Graphics Forum 2024 Cover Image Contest  
   This image shows the inside of the teaser figure 'fertility' from Polygon Laplacian Made Robust. It visualizes the condition numbers of individual polygon stiffness matrices. The mesh transitions from the input mesh to our result from left to right. The original mesh features disfigured polygons with alarming (yellow) or terrible (magenta) condition numbers. With our tailored smoothing algorithm, polygons become very regular and, combined with our improved polygon Laplacian, result in better condition numbers (blue) and improved robustness in computational simulation. Blender was used to stylize the geometry and render the image.    
 System hosted at Graz University of Technology  

 Eurographics

60. ACNS_0 conference:
ACNS 2023  
 21st International Conference on Applied Cryptography and Network Security  
  Kyoto, Japan  
  |  19-22 June, 2023  

 MENU - Home 
    
 Home 
  Award 
  Registration 
  Call For Papers 
  Call For Posters 
  Workshops 
  Keynote 
  Sponsorship 
  Program 
  Accepted Papers 
  Organization 
  Program Committee 
  Venue 

 The 21st International Conference on Applied Cryptography and Network Security (ACNS 2023) will be held in Kyoto, Japan on 19-22 June 2023. The proceedings of ACNS 2023 will be published by Springer in the LNCS series   .  
 ACNS   is an annual conference focusing on current developments that advance the areas of applied cryptography, cyber security (including network and computer security) and privacy. The goal is to represent both academic research works as well as developments in industrial and technical frontiers. Submissions may focus on the modelling, design, analysis (including security proofs and attacks), development (e.g. implementations), deployment (e.g. system integration), and maintenance (e.g. performance measurements, usability studies) of algorithms, protocols, standards, implementations technologies devices, systems standing in relation with applied cryptography, cyber security and privacy, while advancing or bringing new insights to the state of the art.  
 Proceedings  
 ACNS 2023, Proceedings, Part I   
  ACNS 2023, Proceedings, Part II   
  ACNS 2023, Workshops Proceedings   
 Awards  
 ACNS gives a best student paper award   , with 1500 EUR  prize sponsored by Springer, to encourage promising students to publish their best results at this venue. Any paper with a student as an author is eligible for this award. ACNS also gives a best workshop paper award   , with 500 EUR  prize sponsored by Springer. In addition, ACNS gives a best poster award   , with 10K JPY  prize.  
 Contacts  
 For any questions regarding the submission or the conference, please write to acns2023@googlegroups.com   .  
 MyPage  
 ACNS 2023 Mypage Login Link   
 Important Dates  
 First submission deadline:   
 Submission: September 8, 2022, 23:59 AoE (Anywhere on Earth) 
  Notification: November 10, 2022 
  Camera-ready: December 1st, 2022 
  ACNS 2023 First Submission Link   
 Second submission deadline:   
 Submission: January 12, 2023, 23:59 AoE (Anywhere on Earth) 
  Notification: March 16, 2023 
  Camera-ready: April 6, 2023 
  ACNS 2023 Second Submission Link   
 Workshop proposal submission deadline:   
 Submission: November 7, 2022, 23:59 AoE (Anywhere on Earth) 
  Notification: November 17, 2022 
  Poster submission deadline:   
 Submission: April 20, 2023, 23:59 AoE (Anywhere on Earth) 
  Notification: April 30, 2023 
    
 Important News 
  ACNS 2023 Workshops Proceedings | are now available. | 4 October, 2023 
  ACNS 2023 | Awards | was released. | 29 June, 2023 
  ACNS 2023 Conference Proceedings | Part I | and | Part II | are now available. | 20 June, 2023 
  The workshop | program | was released. | 29 May, 2023 
  The | banquet venue | was updated. | 29 May, 2023 
  The poster | program | was released. | 29 May, 2023 
  The | list of accepted posters | is now avaliable. | 15 May, 2023 
  The conference | program | was released. | 15 May, 2023 
  Information of | Keynote Speaker | was updated. | 29 March, 2023 
  ACNS 2023 Registration Website | was released. | 9 March, 2023 
  ACNS 2023 Homepage | was updated. | 9 March, 2023 
  Updated News is here 
  Tweets by 2021Cpss   

   Important News 
  ACNS 2023 Workshops Proceedings | are now available. | 4 October, 2023 
  ACNS 2023 | Awards | was released. | 29 June, 2023 
  ACNS 2023 Conference Proceedings | Part I | and | Part II | are now available. | 20 June, 2023 
  The workshop | program | was released. | 29 May, 2023 
  The | banquet venue | was updated. | 29 May, 2023 
  The poster | program | was released. | 29 May, 2023 
  The | list of accepted posters | is now avaliable. | 15 May, 2023 
  The conference | program | was released. | 15 May, 2023 
  Information of | Keynote Speaker | was updated. | 29 March, 2023 
  ACNS 2023 Registration Website | was released. | 9 March, 2023 
  ACNS 2023 Homepage | was updated. | 9 March, 2023 
  Updated News is here 
  The 21st International Conference on Applied Cryptography and Network Security (ACNS 2023) will be held in Kyoto, Japan on 19-22 June 2023. The proceedings of ACNS 2023 will be published by Springer in the LNCS series   .  
 ACNS   is an annual conference focusing on current developments that advance the areas of applied cryptography, cyber security (including network and computer security) and privacy. The goal is to represent both academic research works as well as developments in industrial and technical frontiers. Submissions may focus on the modelling, design, analysis (including security proofs and attacks), development (e.g. implementations), deployment (e.g. system integration), and maintenance (e.g. performance measurements, usability studies) of algorithms, protocols, standards, implementations, technologies devices systems standing in relation with applied cryptography, cyber security and privacy while advancing or bringing new insights to the state of the art.  
 Proceedings  
 ACNS 2023, Proceedings, Part I   
  ACNS 2023, Proceedings, Part II   
  ACNS 2023, Workshops Proceedings   
 Awards  
 ACNS gives a best student paper award   , with 1500 EUR  prize sponsored by Springer, to encourage promising students to publish their best results at this venue. Any paper with a student as an author is eligible for this award. ACNS also gives a best workshop paper award   , with 500 EUR  prize sponsored by Springer. In addition, ACNS gives a best poster award   , with 10K JPY  prize.  
 Contacts  
 For any questions regarding the submission or the conference, please write to acns2023@googlegroups.com   .  
 MyPage  
 ACNS 2023 Mypage Login Link   
 Important Dates  
 First submission deadline:   
 Submission: September 8, 2022, 23:59 AoE (Anywhere on Earth) 
  Notification: November 10, 2022 
  Camera-ready: December 1st, 2022 
  ACNS 2023 First Submission Link   
 Second submission deadline:   
 Submission: January 12, 2023, 23:59 AoE (Anywhere on Earth) 
  Notification: March 16, 2023 
  Camera-ready: April 6, 2023 
  ACNS 2023 Second Submission Link   
 Workshop proposal submission deadline:   
 Submission: November 7, 2022, 23:59 AoE (Anywhere on Earth) 
  Notification: November 17, 2022 
  Poster submission deadline:   
 Submission: April 20, 2023, 23:59 AoE (Anywhere on Earth) 
  Notification: April 30, 2023 
      Tweets by 2021Cpss

61. EvoApplications_2 conference:
Oakleafbooks    Home 
  Audio Books 
  E-Books 
  Children's Books 
  Journals 
  Store 
  Checkout 
  0  items 
  Login to my account 
  USD  EUR 
  SEK 
  USD 

  Oakleafbooks Online Library -- A Global Books Research Catalogue  
  And a Bookstore - We deliver Worldwide  

 Advanced Search     
   
 You must enter a search term!   

 Browse Subject Headings   
 > Fiction & related items 
  > Children's, young adult & educational 
  > Bibles 
  > Biography & True Stories 
  > Comics & Graphic Novels 
  > Computing & information technology | Artificial Intelligence 
  Bioinformatics 
  Business applications 
  Business Software 
  Buyer's Guides 
  Cad-cam 
  Calculators 
  Cd-rom Technology 
  Certification 
  Client-server Computing 
  Compilers 
  Computer Animation 
  Computer Architecture 
  Computer certification 
  Computer Engineering 
  Computer Graphics 
  Computer hardware 
  Computer Literacy 
  Computer networking & communications 
  Computer programming / software development 
  Computer science | Artificial intelligence 
  Audio processing 
  Computer architecture & logic design 
  Computer modelling and simulation 
  Human-computer interaction 
  Image processing 
  Mathematical theory of computation 
  Systems analysis & design 
  Virtual reality 
  Computer Science 
  Computer security 
  Computer Simulation 
  Computer Vision 
  Computerized Home & Entertainment 
  Computing: general 
  Cybernetics 
  Data Modeling & Design 
  Data Processing 
  Data Transmission Systems 
  Data Visualization 
  Database Management 
  Databases 
  Desktop Applications 
  Desktop Publishing 
  Digital lifestyle 
  Digital Media 
  Disaster Recovery 
  Document Management 
  Documentation & Technical Writing 
  Electronic Commerce 
  Electronic Publishing 
  Expert Systems 
  Financial Applications 
  Graphical & digital media applications 
  Groupware 
  Hardware 
  History 
  Image Processing 
  Information Storage & Retrieval 
  Information Technology 
  Information Theory 
  Interactive & Multimedia 
  Internet 
  Keyboarding 
  Logic Design 
  Machine Theory 
  Management Information Systems 
  Mathematical & Statistical Software 
  Microprocessors 
  Natural Language Processing 
  Networking 
  Neural Networks 
  Online Services 
  Operating Systems 
  Operating systems 
  Presentation Software 
  Programming 
  Programming Languages 
  Reference 
  Security 
  Social Aspects 
  Spreadsheets 
  System Administration 
  User Interfaces 
  Utilities 
  Virtual Reality 
  Viruses 
  Word Processing 
  > Design 
  > Earth sciences, geography, environment, planning 
  > Economics, finance, business & management 
  > English language teaching (ELT) 
  > Health & personal development 
  > Humanities 
  > Language 
  > Law 
  > Lifestyle, sport & leisure 
  > Literature & literary studies 
  > Mathematics & science 
  > Medicine 
  > Nature / General 
  > Reference, information & interdisciplinary subjects 
  > Society & social sciences 
  > Technology, engineering, agriculture 
  > The arts 

 Applications of Evolutionary Computation : 26th European Conference, EvoApplications 2023, Held As Part of EvoStar 2023, Brno, Czech Republic, April 12-14, 2023, Proceedings    
  
 Click to enlarge | ISBN No.: | 9783031302282 
 Pages: | xx, 817 
 Year: | 202304 
 Format: | Trade Paper 
 Price: | $ 151.79 
 Dispatch delay: | Dispatched between 7 to 15 days 
 Status: | Available 
  
 Qty:  Add to Cart | ISBN No.: | 9783031302282 | Pages: | xx, 817 | Year: | 202304 | Format: | Trade Paper | Price: | $ 151.79 | Dispatch delay: | Dispatched between 7 to 15 days | Status: | Available 
 ISBN No.: | 9783031302282 
 Pages: | xx, 817 
 Year: | 202304 
 Format: | Trade Paper 
 Price: | $ 151.79 
 Dispatch delay: | Dispatched between 7 to 15 days 
 Status: | Available 

 Synopsis 
  Table of contents 
  Full Details 

 This book constitutes the refereed proceedings of the 25th International Conference on Applications of Evolutionary Computation, EvoApplications 2023, held as part of Evo*2023, in April 2023, co-located with the Evo*2023 events EuroGP, EvoCOP, and EvoMUSART. The EuroGP focused on the technique of genetic programming, EvoCOP targeted evolutionary computation in combinatorial optimization, and EvoMUSART was dedicated to evolved and bio-inspired music, sound, art, and design. The EvoApplications 2023 presents papers on the different areas: Analysis of Evolutionary Computation Methods: Theory, Empirics, and Real-World Applications, Applications of Bio-inspired Techniques on Social Networks, Evolutionary Computation in Edge, Fog, and Cloud Computing, Evolutionary Computation in Image Analysis, Signal Processing, and Pattern Recognition and others.  

 To be able to view the table of contents for this publication then please subscribe by clicking the button below...   
 Become a subscriber     
   
 To be able to view the full description for this publication then please subscribe by clicking the button below...   
 Become a subscriber     

 Browse Subject Headings   
 > Fiction & related items 
  > Children's, young adult & educational 
  > Bibles 
  > Biography & True Stories 
  > Comics & Graphic Novels 
  > Computing & information technology | Artificial Intelligence 
  Bioinformatics 
  Business applications 
  Business Software 
  Buyer's Guides 
  Cad-cam 
  Calculators 
  Cd-rom Technology 
  Certification 
  Client-server Computing 
  Compilers 
  Computer Animation 
  Computer Architecture 
  Computer certification 
  Computer Engineering 
  Computer Graphics 
  Computer hardware 
  Computer Literacy 
  Computer networking & communications 
  Computer programming / software development 
  Computer science | Artificial intelligence 
  Audio processing 
  Computer architecture & logic design 
  Computer modelling and simulation 
  Human-computer interaction 
  Image processing 
  Mathematical theory of computation 
  Systems analysis & design 
  Virtual reality 
  Computer Science 
  Computer security 
  Computer Simulation 
  Computer Vision 
  Computerized Home & Entertainment 
  Computing: general 
  Cybernetics 
  Data Modeling & Design 
  Data Processing 
  Data Transmission Systems 
  Data Visualization 
  Database Management 
  Databases 
  Desktop Applications 
  Desktop Publishing 
  Digital lifestyle 
  Digital Media 
  Disaster Recovery 
  Document Management 
  Documentation & Technical Writing 
  Electronic Commerce 
  Electronic Publishing 
  Expert Systems 
  Financial Applications 
  Graphical & digital media applications 
  Groupware 
  Hardware 
  History 
  Image Processing 
  Information Storage & Retrieval 
  Information Technology 
  Information Theory 
  Interactive & Multimedia 
  Internet 
  Keyboarding 
  Logic Design 
  Machine Theory 
  Management Information Systems 
  Mathematical & Statistical Software 
  Microprocessors 
  Natural Language Processing 
  Networking 
  Neural Networks 
  Online Services 
  Operating Systems 
  Operating systems 
  Presentation Software 
  Programming 
  Programming Languages 
  Reference 
  Security 
  Social Aspects 
  Spreadsheets 
  System Administration 
  User Interfaces 
  Utilities 
  Virtual Reality 
  Viruses 
  Word Processing 
  > Design 
  > Earth sciences, geography, environment, planning 
  > Economics, finance, business & management 
  > English language teaching (ELT) 
  > Health & personal development 
  > Humanities 
  > Language 
  > Law 
  > Lifestyle, sport & leisure 
  > Literature & literary studies 
  > Mathematics & science 
  > Medicine 
  > Nature / General 
  > Reference, information & interdisciplinary subjects 
  > Society & social sciences 
  > Technology, engineering, agriculture 
  > The arts 

 ABOUT  
 The Global Books Research Platform.  
  And a Bookstore - We deliver Worldwide   

 INFORMATION  
 Research Assistance 
  PDF Catalogues 
  Privacy Policy 
  Terms & Conditions 

 SEARCH  
 Books 
  eBooks 
  Book Club/Blog 
  Featured 

 CONTACT US  
 sales@oakleafbooks.se 
  Oakleafbooks & Library Consultancy  
  Snickaregardsv, SE-683 93 N. Rada, Sweden 
    
  Submit      The email address is invalid   

 Site built by 06Tech.com

62. ICANN_3 conference:
JavaScript required  
 We’re sorry, but WorldCat does not work without JavaScript enabled. Please enable JavaScript on your browser.  

   Items   
    ​      
  ​      

 Pages 
  Home 
  Libraries 
  Topics 
  Lists 
  About 
  For Librarians 

 Artificial neural networks and machine learning - ICANN 2023 : 32nd International Conference on Artificial Neural Networks, Heraklion, Crete, Greece, September 26-29, 2023 : proceedings. Part V    

 Authors :  International Conference on Artificial Neural Networks (European Neural Network Society)   , Lazaros S. Iliadis  ( Editor  )   , Antonios Papaleonidas  ( Editor  )   , Plamen P. Angelov  ( Editor  )   , Chrisina Jayne  ( Editor  )       
   
 Summary :  The 10-volume set LNCS 14254-14263 constitutes the proceedings of the 32nd International Conference on Artificial Neural Networks and Machine Learning, ICANN 2023, which took place in Heraklion, Crete, Greece, during September 2629, 2023. The 426 full papers, 9 short papers and 9 abstract papers included in these proceedings were carefully reviewed and selected from 947 submissions. ICANN is a dual-track conference, featuring tracks in brain inspired computing on the one hand, and machine learning on the other, with strong cross-disciplinary interactions and applications.     

   eBook  , English  , 2023  Edition :  View all formats and editions     
 Publisher :  Springer , Cham , 2023     
   
 Series :  Lecture notes in computer science  , 14258     
    
 Genre :  Electronic books    
 Physical Description :  1 online resource (xxxv, 589 pages) : illustrations (chiefly color).    
 ISBN :  9783031441929 , 3031441923    
    
 DOI :  10.1007/978-3-031-44192-9      
 OCLC Number / Unique Identifier :  1399535709    
 Subjects :  Artificial intelligence    
 Artificial intelligence Congresses    
 Conference papers and proceedings    
 Electronic books    
 Machine learning    
 Machine learning Congresses    
 Neural networks (Computer science)    
 Neural networks (Computer science) Congresses    

 Contents :  A Multi-Task Instruction with Chain of Thought Prompting Generative Framework for Few-Shot Named Entity Recognition   
 ANODE-GAN: Incomplete Time Series Imputation by Augmented Neural ODE-based Generative Adversarial Networks   
 Boosting Adversarial Transferability through Intermediate Feature   
 DaCon: Multi-Domain Text Classification Using Domain Adversarial Contrastive Learning   
 Exploring the Role of Recursive Convolutional Layer in Generative Adversarial Networks   
 GC-GAN: Photo Cartoonization using Guided Cartoon Generative Adversarial Network   
 Generating Distinctive Facial Images from Natural Language Descriptions via Spatial Map Fusion   
 Generative Event Extraction via Internal Knowledge-enhanced Prompt Learning   
 Improved attention mechanism and adversarial training for respiratory infectious disease text named entity recognition   
 Low-frequency Features Optimization for Transferability Enhancement in Radar Target Adversarial Attack   
 Multi-Convolution and Adaptive-stride Based Transferable Adversarial Attacks   
 Multi-Source Open-Set Image Classification based on Deep Adversarial Domain Adaptation   
 SAL: Salient Adversarial Attack with LRP Refinement   
 Towards background and foreground color robustness with adversarial right for the right reasons   
 Towards Robustness of Large Language Models on Text-to-SQL Task: An Adversarial and Cross-Domain Investigation   
 TransNoise: Transferable Universal Adversarial Noise for Adversarial Attack   
 A spatial interpolation method based on meta-learning with spatial weighted neural networks   
 Adapted Methods for GAN Vocoders via Skip-Connections ISTFT and Cooperative Structure   
 An Efficient Approximation Method Based on Enhanced Physics-informed Neural Networks for Solving Localized Wave Solutions of PDEs   
 Causal Interpretability and Uncertainty Estimation in Mixture Density Networks   
 Connectionist Temporal Sequence Decoding: M-ary Hopfield Neural-network with Multi-limit cycle Formulation   
 Explaining, Evaluating and Enhancing Neural Networks' Learned Representations   
 Gated Variable Selection Neural Network for Multimodal Sleep Quality Assessment   
 Generalized Thermostatistics and the Nonequilibrium Landscape Description of Neural Network Dynamics   
 Guiding the Comparison of Neural Network Local Robustness: An Empirical Study   
 Information-Theoretically Secure Neural Network Training with Flexible Deployment   
 LRP-GUS: A visual based data reduction algorithm for Neural Networks   
 Mining and Injecting Legal Prior Knowledge to Improve the Generalization Ability of Neural Networks in Chinese Judgments   
 Mixed-mode response of Nigral Dopaminergic neurons: an in silico study on SpiNNaker   
 Pan-Sharpening with Global Multi-Scale Context Network   
 Population Coding Can Greatly Improve Performance of Neural Networks: A Comparison   
 Population Coding Can Greatly Improve Performance of Neural Networks: A Comparison   
 QuasiNet: a neural network with trainable product layers   
 Razor SNN: Efficient Spiking Neural Network with Temporal Embeddings   
 Real-time Adaptive Physical Sensor Processing with SNN Hardware   
 Regularization for Hybrid N-Bit Weight Quantization of Neural Networks on Ultra-Low Power Microcontrollers   
 SGNN: A new method for learning representations on signed networks   
 SkaNet: Split Kernel Attention Network   
 Syntax-Aware Complex-Valued Neural Machine Translation   
 Traffic Flow Prediction Based on Multi-Type Characteristic Hybrid Graph Neural Network   
 Whisker Analysis Framework for Unrestricted Mice with Neural Networks   
 Adaptive Segmentation Network for Scene Text Detection   
 How to Extract and Interact? Nested Siamese Text Matching with Interaction and Extraction   
 Label-guided Graphormer for Hierarchy Text Classification   
 Text Semantic Matching Research Based on Parallel Dropout   
 Towards Better Core Elements Extraction for Customer Service Dialogue Text   
 UIT: Unifying Pre-Training Objectives for Image-Text Understanding   

 Notes :  International conference proceedings   
 Includes author index   
    
 More Information :  SpringerLink     
 Kortext     
 public.ebookcentral.proquest.com  Click here to view book    
 www.vlebooks.com     

 Show more information        

 Buy this Item:  

 Rent this Item:   

 WorldCat is the world’s largest library catalog, helping you find library materials online.  
   
 Language  Čeština  Deutsch  English  Español  Français  Italiano  日本語  한국어  Nederlands  Português  ไทย  简体中文  繁體中文     ​      

 Copyright © 2001-2024 OCLC. All rights reserved.  Terms and Conditions  Help    
   
 © 2024 OCLC Domestic and international trademarks and/or service marks of OCLC, Inc. and its affiliates.  Cookie notice    
   
 Home  Libraries  Topics  Lists    
 About  For Librarians  Help & FAQ  Contact Us    
                    
 Privacy Policy  Accessibility Statement  ISO 27001 Certificate

63. ACNS_1 conference:
ACNS 2023  
 21st International Conference on Applied Cryptography and Network Security  
  Kyoto, Japan  
  |  19-22 June, 2023  

 MENU - Program 
    
 Home 
  Award 
  Registration 
  Call For Papers 
  Call For Posters 
  Workshops 
  Keynote 
  Sponsorship 
  Program 
  Accepted Papers 
  Organization 
  Program Committee 
  Venue 

 Conference Program  
 You can click on the name of the workshop to view the details of the corresponding program.  
  The PDF version of the ACNS 2023 main conference program can be found at the following link: Main Conference Program Detail.    
  
 ACNS 2023 Schedule 
 Day 1 (19 June) | Day 2 (20 June) | Day 3 (21 June) | Day 4 (22 June) 
 Registration  
  09:00-9:30 | Machine learning  
  09:00-10:30 | CIMSS   
  09:45-17:00 | Privacy-preserving protocols  
  09:00-10:30 | ADSC    
  09:00-12:00 | Encryption  
  09:00-10:30 | SCI    
  09:00-16:00 
 Opening remarks  
  09:30-09:40 | Coffee break  
  10:30-10:50 | Coffee break  
  10:30-10:50 | Coffee break  
  10:30-10:50 
 Web security  
  09:40-11:10 | AIHWS    
  09:40-17:00 | Side-channel and fault attacks  
  10:50-12:20 | Homomorphic cryptography  
  10:50-12:00 | AIoTS    
  09:00-12:30 | Advanced primitives  
  10:50-12:20 
 Coffee break  
  11:10-11:30 
 Keynote I  
  11:30-12:30 
 Lunch  
  12:30-14:00 | Lunch  
  12:20-13:50 | Cloud S&P    
  15:00-18:30 | Lunch  
  12:00-13:30 | Lunch  
  12:20-13:50 | AIBlock    
  13:50-16:10 
 Lattices and codes  
  14:00-15:55 | Embedded security  
  13:50-15:20 | Keynote II  
  13:30-14:30 | Multiparty computation  
  13:50-15:20 
 Coffee break  
  15:55-16:15 | SiMLA(virtual)    
  15:30-18:30 | Coffee break  
  15:20-15:40 | Tour  
  (Kiyomizu-dera Temple)  
  14:30-18:00 | Coffee break  
  15:20-15:40 
 Symmetric cryptanalysis  
  16:15-17:45 | Elliptic curves and pairings  
  15:40-16:50 | SecMT(virtual)    
  16:00-18:20 | Conference dinner  
  (Heian Jingu Shrine Hall)  
  18:00-21:00 | Blockchain  
  15:40-16:50 
 Poster session  
  18:00-19:30 | Isogeny-based cryptography  
  16:50-18:00 | Closing remarks  
  16:50-17:00 
 Welcome reception  
  19:00-21:00 

 Technical Program  
  
 Day 1 (19 Jun 2023) 
 09:00-09:30 | Registration 
 09:30-09:40 | Opening remarks  
  Kazumasa Omote & Chunhua Su 
 09:40-11:10 | Web security  Session Chair: Jianying Zhou   
  Tiny WFP : Lightweight and Effective Website Fingerprinting Via Wavelet Multi-Resolution Analysis   
  Cong Tian, Dengpan Ye, Chuanxi Chen   
  Those Aren't Your Memories and They're Somebody Else's: Seeding Misinformation in Chat Bot Memories   
  Conor Atkins, Benjamin Zi Hao Zhao, Hassan Jameel Asghar, Ian Wood, Mohamed Ali Kaafar   
  Social Honeypot for Humans: Luring Peoplethrough Self-managed Instagram Pages   
  Sara Bardi, Mauro Conti, Luca Pajola, Pier Paolo Tricomi   
  Capturing Antique Browsers in Modern Devices: A Security Analysis of Captive Portal Mini-Browsers   
  Ping-Lun Wang, Kai-Hsiang Chou, Shou-Ching Hsiao, Ann Tene Low, Tiffany Hyun-Jin Kim, Hsu-Chun Hsiao 
 11:10-11:30 | Coffee break 
 11:30-12:30 | Keynote I  Session Chair: Mehdi Tibouchi   
  Challenges and Solutions to Post-Quantum Secure Messaging   
  Shuichi Katsumata 
 12:30-14:00 | Lunch 
 14:00-15:55 | Lattices and codes  Session Chair: Mehdi Tibouchi   
  Forward Security of Fiat-Shamir LatticeSignatures   
  Yang Tao, Rui Zhang, Yunfeng Ji   
  Shorter and Faster Identity-Based Signatures with TightSecurity in the (Q)ROM from Lattices   
  Eric Sageloli, Pierre Pébereau, Pierrick Méaux, Céline Chevalier   
  A Gapless Post-Quantum Hash Proof System in the Hamming Metric   
  Bénédikt Tran, Serge Vaudenay   
  Spherical Gaussian Leftover Hash Lemmaviathe Rényi Divergence   
  Hiroki Okada, Kazuhide Fukushima, Shinsaku Kiyomoto, Tsuyoshi Takagi   
  BIKE Key-Recovery: Combining Power Consumption Analysisand Information-Set Decoding   
  Agathe Cheriere, Nicolas Aragon, Tania Richmond, Benoît Gérard 
 15:55-16:15 | Coffee break 
 16:15-17:45 | Symmetric cryptanalysis  Session Chair: Serge Vaudenay   
  A Novel Automatic Technique Based on MILP to Search for Impossible Differentials   
  Yong Liu, Zejun Xiang, Siwei Chen, Shasha Zhang, Xiangyong Zeng   
  Meet-in-the-Filterand Dynamic Counting with Applications to Speck   
  Alex Biryukov, Luan Cardoso dos Santos, Je Sen Teh, Aleksei Udovenko, Vesselin Velichkov   
  Near Collision Attackagainst Grain v1   
  Subhadeep Banik, Daniel Collins, Willi Meier   
  TIDAL: Practical Collisions on State-Reduced KeccakVariants   
  Sahiba Suryawanshi, Dhiman Saha, Shashwat Jaiswal 
 18:00-21:00 | Poster session & Welcome reception 
 18:00-19:30 | Poster session  Session Chair: Masaki Shimaoka   
  Ransomware detection mechanism – project status at the beginning of 2023   
  Michał Glet, Kamil Kaczyński   
  AuthZit: Multi-Modal Authentication with Visual-Spatial and Text Secrets   
  Joon Kuy Han, Dennis Wong, Byungkon Kang   
  Integration of End-to-End Security and Lightweight-SSL for Enhancing Security and Efficiency of MQTT   
  Hung-Yu Chien   
  Stopping Run-time Countermeasures in Cryptographic Primitives   
  Myung-Hyun Kim, Taek-Young Youn, Seungkwang Lee   
  Swarm-based IoT Network Penetration Testing by IoT Devices   
  Thomas Schiller, Sean Mondesire   
  Advancing Federated Edge Computing with Continual Learning for Secure and Efficient Performance   
  Chunlu CHEN, Kevin I-Kai WANG, Peng LI, Kouichi SAKURAI   
  A Fine-Grained Metric for Evaluating the Performance of Adversarial Attacks and Defenses   
  Haibo Zhang, Zhihua Yao, Kouichi Sakurai   
  Integrating Quantum Key Distribution into Hybrid Quantum-Classical Networks   
  Juris Viksna, Sergejs Kozlovics, Edgars Rencis   
  Adaptive Moving Target Defense: Enhancing Dynamic Perturbation through Voltage Sensitivity Analysis in Power Systems   
  Muhammad Nouman Nafees, Neetesh Saxena, Pete Burnap   
  PriAuct: Privacy Preserving Auction Mechanism   
  Neha Joshi, Abhishek Thakur, A Antony Franklin   
  Using Verifiable Credentials for authentication of UAVs in logistics   
  Ken Watanabe, Kazue Sako   
  A card-based protocol that lets you know how close two parties are in their opinions (agree/disagree) by using a four-point Likert scale   
  Yuji Suga   
  Collaborative Authority-Based Searchable Encryption Using Access Control Encryption   
  Dequan Xu, Changgen Peng, Youliang Tian, Hai Liu, Ziyue Wang, Weizheng Wang 
 Day 2 (20 Jun 2023) 
 09:00-10:30 | Machine learning  Session Chair: Kouichi Sakurai   
  Fast and Efficient Malware Detection with Joint Staticand Dynamic Features Through Transfer Learning   
  Mao V. Ngo, Tram Truong-Huu, Dima Rabadi, Jia Yi Loo, Sin G. Teo   
  Efficient Network Representation for GNN-based Intrusion Detection   
  Hamdi Friji, Alexis Olivereau, Mireille Sarkiss   
  EVADE:Efficient Moving Target Defense for Autonomous Network Topology Shuffling Using Deep Reinforcement Learning   
  Qisheng Zhang, Jin-Hee Cho, Terrence J. Moore, Dan Dongseong Kim, Hyuk Lim, Frederica Nelson   
  Steal from Collaboration:Spy Attack bya Dishonest Party in Vertical Federated Learning   
  Hongbin Chen, Chaohao Fu, Na Ruan 
 10:30-10:50 | Coffee break 
 10:50-12:20 | Side-channel and fault attacks  Session Chair: Thomas Ricosset   
  Formal Verification of Arithmetic Masking in Hardwareand Software   
  Barbara Gigerl, Robert Primas, Stefan Mangard   
  Layered Binary Templating   
  Martin Schwarzl, Erik Kraft, Daniel Gruss   
  HS-based error correction algorithm for noisy binary GCD side-channel sequences   
  Kenta Tani, Noboru Kunihiro   
  Divide and Rule: DiFA- Division Property Based Fault Attacks on PRESENT and GIFT   
  Anup Kumar Kundu, Shibam Ghosh, Dhiman Saha, Mostafizar Rahman 
 12:20-13:50 | Lunch 
 13:50-15:20 | Embedded security  Session Chair: Hsu-Chun Hsiao   
  A Forkcipher-based Pseudo-Random Number Generator   
  Elena Andreeva, Andreas Weninger   
  DMA'n'Play: Practical Remote Attestation Based on Direct MemoryAccess   
  Sebastian Surminski, Christian Niesler, Lucas Davi, Ahmad-Reza Sadeghi   
  Recommendation for a holistic secure embedded ISA extension   
  Florian Stolz, Marc Fyrbiak, Pascal Sasdrich, Tim Güneysu   
  QuantumCharge: Post-Quantum Cryptography for Electric Vehicle Charging   
  Dustin Kern, Christoph Krauß, Timm Lauser, Nouri Alnahawi, Alexander Wiesmaier, Ruben Niederhagen 
 15:20-15:40 | Coffee break 
 15:40-16:50 | Elliptic curves and pairings  Session Chair: Jesus-Javier Chi Dominguez   
  Pairings in Rank-1 Constraint System   
  Youssef El Housni   
  Binary Kummer Line   
  Sabyasachi Karati   
  Generalised Asynchronous Remote Key Generation for Pairing-based Cryptosystems   
  Nick Frymann, Daniel Gardham, Mark Manulis, Hugo Nartz 
 16:50-18:00 | Isogeny-based cryptography  Session Chair: Noboru Kunihiro   
  Low Memory Attacks on Small Key CSIDH   
  Jesús-Javier Chi-Domínguez, Andre Esser, Sabrina Kunzweiler, Alexander May   
  Practical Robust DKG Protocols for CSIDH   
  Shahla Atapoor, Karim Baghery, Daniele Cozzo, Robi Pedersen   
  Efficient Isogeny Proofs Using Generic Techniques   
  Kelong Cong, Yi-Fu Lai, Shai Levin 
 Day 3 (21 Jun 2023) 
 09:00-10:30 | Privacy-preserving protocols  Session Chair: Sherman S.M. Chow   
  Constant-Round Multiparty Private Function Evaluation With (Quasi-)Linear Complexities   
  Yongfeng Xu, Hanyu Jia, Xiangxue Li, Qiang Li, Yue Bao, Xintian Hou   
  Predicate Private Set Intersection With Linear Complexity   
  Yaxi Yang, Jian Weng, Yufeng Yi, Changyu Dong, Leo Yu Zhang, Jianying Zhou   
  A Framework for UC Secure Privacy Preserving Biometric Authentication using Efficient Functional Encryption   
  Johannes Ernst, Katerina Mitrokotsa   
  Private Information Retrieval with Result Verification for MoreServers   
  Pengzhen Ke, Liang Feng Zhang 
 10:30-10:50 | Coffee break 
 10:50-12:00 | Homomorphic cryptography  Session Chair: Changmin Lee   
  PIE: p-adic Encoding for High-Precision Arithmetic in Homomorphic Encryption   
  Luke Harmon, Gaetan Delavignette, Arnab Roy, David Silva   
  Analysis and Prevention of Averaging Attacks against Obfuscation Protocols   
  Kilian Becher, J. A. Gregor Lagodzinski, Javier Parra Arnau, Thorsten Strufe   
  FLSwitch: Towards Secureand Fast Model Aggregation for Federated Deep Learning with a Learning State-Aware Switch   
  Yunlong Mao, Ziqin Dang, Yu Lin, Tianling Zhang, Yuan Zhang, Jingyu Hua, Sheng Zhong 
 12:00-13:30 | Lunch 
 13:30-14:30 | Keynote II  Session Chair: XiaoFeng Wang   
  Language-enforced Data Confidentiality against Memory Disclosureand Transient Execution Attacks   
  Michalis Polychronakis 
 14:30-18:00 | Tour  
  Kiyomizu-dera Temple 
 18:00-21:00 | Conference dinner  
  Heian Jingu Shrine Hall 
 Day 4 (22 Jun 2023) 
 9:00-10:30 | Encryption  Session Chair: Ivan Visconti   
  On the Complete Non-Malleability of the Fujisaki-Okamoto Transform   
  Daniele Friolo, Matteo Salvino, Daniele Ventur   
  Optimal Security Notion for Decentralized Multi-Client Functional Encryption   
  Ky Nguyen, Duong Hieu Phan, David Pointcheval   
  Anonymous (Hierarchical) Identity-Based Encryption from Broader Assumptions   
  Huangting Wu, Sherman S. M. Chow   
  Publicly Auditable Functional Encryption   
  Vlasis Koutsos, Dimitrios Papadopoulos 
 10:30-10:50 | Coffee break 
 10:50-12:20 | Advanced primitives  Session Chair: Yuji Suga   
  Robustly ReusableFuzzyExtractors in a Post-Quantum World   
  Amit Deo, Charles Grover   
  Subversion-Resilient Authenticated Encryption without Random Oracles   
  Pascal Bemmann, Sebastian Berndt, Denis Diemert, Tibor Jager, Thomas Eisenbarth   
  Scored Anonymous Credentials   
  Sherman S. M. Chow, Jack P. K. Ma, Tsz Hon Yuen   
  GeT a CAKE: Generic Transformations from Key Encaspulation Mechanisms to Password Authenticated Key Exchanges   
  Hugo Beguinet, Céline Chevalier, David Pointcheval, Thomas Ricosset, Mélissa Rossi 
 12:20-13:50 | Lunch 
 13:50-15:20 | Multiparty computation  Session Chair: Bernardo David   
  Explicitand Nearly Tight Lower Bound for2-party PerfectlySecureFSS   
  Keitaro Hiwatashi, Koji Nuida   
  Multi-Theorem Fiat-Shamir Transform from Correlation-Intractable Hash Functions   
  Michele Ciampi, Yu Xia   
  Game-Theoretically Secure Protocols for the Ordinal Random Assignment Problem   
  T-H. Hubert Chan, Ting Wen, Hao Xie, Quan Xue   
  A New Approach to Garbled Circuits   
  Anasuya Acharya, Tomer Ashur, Efrat Cohen, Carmit Hazay, Avishay Yanai 
 15:20-15:40 | Coffee break 
 15:40-16:50 | Blockchain  Session Chair: Mario Larangeira   
  Mt. Random: Multi-Tiered Randomness Beacons   
  Ignacio Cascudo, Bernardo David, Omer Shlomovits, Denis Varlakov   
  Revisiting Transaction Ledger Robustness in the Miner ExtractableValueEra   
  Fredrik Kamphuis, Bernardo Magri, Ricky Lamberty, Sebastian Faust   
  An Empirical Analysis of Security and Privacy Risks in Android Cryptocurrency WalletApps   
  I Wayan Budi Sentana, Muhammad Ikram, Mohamed Ali Kaafar 
 16:50-17:00 | Closing remarks  Mehdi Tibouchi & XiaoFeng Wang

64. EGVE_1 conference:
ICAT-EGVE 2023  
 6-8 December, Dublin, Ireland  
   
 HOME  | SUBMISSIONS  Call for Papers  Call for Posters/Demos  Presentation Format    
   
 | ATTENDING  Venue  Programme  Registration    
   
 | ORGANIZATION     
   
 ICAT-EGVE 2023  
 International Conference on Artificial Reality and Telexistence & Eurographics Symposium on Virtual Environments  
 6 - 8 December, 2023 at Trinity College Dublin, Ireland  
 Welcome  
 ICAT-EGVE 2023, the joint 33rd International Conference on Artificial Reality and Telexistence & the 28th Eurographics Symposium on Virtual Environments, will be hosted at Trinity College Dublin in December 2023.  
    
 This year's conference is now over. Thanks to all who participated in and contributed to the conference.  
 2023 Conference Programme is now available HERE   
 Open Access is provided to the proceedings  via the Eurographics Digital Library, licensed under Creative Commons and Plan-S compliant. For convenience, the links to the proceedings are provided below:  
 Full & Short Papers  | Posters and Demos   
 Awards  
 BEST POSTER/DEMO:  
  Subtractive Mixing of Odor Components from Olfactory White to Generate Various Odors from a Limited Number of Components.  Haruka Matsukura, Norihiro Suzuki, Ryusuke Chida, Shu Takahashi, Yuki Uzawa, and Hiroshi Ishida [ LINK  ]  
 BEST PAPER HONORABLE MENTION:  
  Don't Denigrate the CAVE! A Comparative Examination of CAVE and HMD for Navigation in Virtual Worlds.  Theo Combe, Jean-Rémy Chardonnet, Fréderic Mérienne, Jivka Ovtcharova, and Daniel Mestre [ LINK  ]  
 BEST PAPER HONORABLE MENTION:  
  Mid-air Image's Background Changes the Impression of a Mid-air Image.  Yutaro Yano and Naoya Koizumi [ LINK  ]  
 BEST PAPER:  
  Exploring the Perception of Center of Mass changes for VR Avatars.  Bharat Vyas, Ludovic Hoyet, and Carol O'Sullivan [ LINK  ]  
 Next Conference  
 The next iteration of ICAT-EGVE will be held in Tsukuba, Japan from 1st - 3rd December, 2024, and hosted by University of Tsukuba  

 About  
 ICAT-EGVE is a merger of the International Conference on Artificial Reality and Telexistence (ICAT) and the Eurographics Symposium on Virtual Environments (EGVE). Together, these are two of the oldest international conferences in the world on Artificial Reality and Virtual Environments.  
 The conference, which will be held wholly in-person this year, features a technical program of papers, keynote talks, posters and demos on topics including but not limited to Virtual Environments, Telexistence, the Metaverse and Virtual Social Interactions in VR/AR/MR/XR. Please see our Call for Papers  section for more details.  
 Please see the following link for information on previous iterations  of this conference: https://icat.vrsj.org/   
    
 This year's conference will be hosted by the Graphics and Vision Lab at the School of Computer Science and Statistics, Trinity College Dublin and is held in cooperation with the European Associaton for Computer Graphics (Eurographics) and the Virtual Reality Society of Japan (VRSJ).  
    
 Contact Details: chairs-icategve2023@eg.org   
    
 News  
 10/12/2023 | : A link to the proceedings has been posted in the | programme page 
  07/12/2023 | : Next years' Conference will be held in Tsukuba, Japan 
  22/11/2023 | : Format details and templates for papers and posters been posted up | HERE 
  16/11/2023 | : Please note that it is still possible to | register | with the early registration rates until 25th November. There is also a social event ticket for those who purely want to attend the networking, posters and keynotes. 
  16/11/2023 | : The full technical | programme | is now available including a full list of the papers and posters that will be presented at the conference. 
  06/11/2023 | : A preliminary | programme | has been posted. 
  01/11/2023 | : The review stage is over for all tracks. Thanks to reviewers, IPC members and chairs. Authors are advised to check their email inboxes and the SRM system for updated requirements. 
  29/09/2023 | : The | registration | system is now open. The Early Bird Registration deadline is 8th November, 2023. 
  12/08/2023 | : The | Call for Posters & Demos | has been posted. The deadline for submission is October 6th, 2023. 
  12/08/2023 | : Full Papers Deadline extended until September 15th, 2023. 
  11/05/2023 | : First | Call for Papers | posted. The tentative deadline for papers is August 18th, 2023. 
  09/05/2023 | : Conference Website released 
  30/11/2022 | : Announcement that Trinity College will host ICAT-EGVE in December 2023 

 Copyright © 2023. ICAT-EGVE 2023 Organizing Committee  Banner Image courtesy of Flickr and LenDog64  , used under CC BY-ND 2.0 license

65. CADE_0 conference:
Home 
  Conference | Venue 
  Keynote Speakers 
  Committee 
  Accepted Papers 
  Program | Overview 
  Detailed Program 
  Social Events 
  Calls | Call For Papers 
  Call for Workshops & Tutorial Proposals 
  Satellite events 
  Registration 
  Local Information | About Rome 
  About Italy 
  Travel Information 
  Contact Us 
   
 Select Page     

 CADE-29  
 29th International Conference on Automated Deduction   
 July 1-4, 2023   
 Co-Located with FSCD 2023    
 Rome, Italy   

 Download Conference Proceedings    

 About   
 The Conference on Automated Deduction  (CADE) is the major international forum for presenting research on all aspects of automated deduction.  
  The conference programme includes invited talks, paper presentations, workshops, tutorials, and system competitions. Furthermore, the Herbrand Award  for Distinguished Contributions to Automated Deduction, the Skolem Award(s)  for influential historical CADE papers, and the Bill McCune  PhD Award, are presented at the conference.  
 The 29th International Conference on Automated Deduction (CADE-29) will take place from July 1 to 5, 2023 in Rome, Italy, with satellite events  
  on July 4 and 5. It will be co-located with FSCD 2023  .  
 Submissions to CADE-29 are divided in two categories: Regular papers (up to 15 pages in LNCS style, excluding references) and short papers (up to 10 pages in LNCS style, excluding references). More information about the submission process can be found in the Call for Papers.   
 The authors of a selection of the best CADE-29 papers will be invited to submit an extended version of their submission after the conference, to be published in a special issue of the Journal of Automated Reasoning.  
 CADE-29 is organized in cooperation with ACM SIGLOG  and implements the ACM policy against harassment.   

 Latest News  
 Technical Program is now | available 
  List of accepted papers is now | available 
  Check the conference satellite events here 
  Call for papers | is now available 
  Call for Workshop & Tutorial Proposals | is now available 

 Best Papers Awards   
 Best paper:   
  “Verified Given Clause Procedures” by Jasmin Blanchette, Qi Qiu and Sophie Tourret   
 Best student paper:   
  “Verification of NP-hardness for Exact Lattice Problems” by Katharina Kreuzer and Tobias Nipkow   
 Honorable mention for best student paper:   
  “Program Synthesis in Saturation” by   
  Petra Hozzová, Laura Kovács, Chase Norman and Andrei Voronkov   

 Download Conference handbook    
 Important Dates  
 Abstract submission deadline – Mon, 27 February 2023 
  Paper submission deadline – Mon, 6 March 2023** 
  Rebuttal phase – 18-20 April 2023 
  Notification – Wed, 3 May 2023 
  Final version submission deadline – Wed, 24 May 2023 

 Co – located Events  
 CADE Conference – | 1-4 (morning), July 2023 
  CADE | Satellite Events | – | 4 (afternoon)-6 July, 2023 
  FSCD | Conference | – 3-6 July 2023 
  FSCD | Satellite Events | – | 1-2 July, 2023 

 Sponsorship Opportunities    

 Venue, City, Country  

 Sapienza University of Rome  
  
 The conference will take place in The Faculty of Civil and Industrial Engineering of the Sapienza University of Rome.  

 Rome  
 Rome, Italy  will be the host city and country for CADE 29. Rome offers many advantages as a location. It is readily accessible -at affordable prices- internationally and directly from all major European air hubs (e.g. London, Frankfurt etc.). Rome is also accessible from the Americas, Asia, Africa and Middle East.  

 Italy  
 Officially the Italian Republic or Republic of Italy, is a country that consists of a peninsula delimited by the Alps and several islands surrounding it. Italy is located in the middle of the Mediterranean Sea, in Southern Europe, it is also considered part of Western Europe   

 Read More    
   
 Read More    
   
 Read More    

 Organiser   

 Sponsors   

 Special Lufthansa Group airlines fares  for flights to Rome (FCO airport).  
 Click here   for more information  

 Contact   
 For organizational matters and enquiries on academic program please contact:    
   
 Daniele Gorla   
 gorla@di.uniroma1.it    
 For enquiries and support on registration, travel and logistics please contact:    
 EasyConferences   
 info@easyconferences.eu    
 Tel: +357 22 591 900   

 All rights reserved |  EasyConferences Ltd.

66. EGVE_2 conference:
Toggle navigation          
 New Submission 
  Instructions 
  Log In 
  Register 

 Events 
  ICAT-EGVE_2023 
  Index 

 International Conference on Artificial Reality and Telexistence, Eurographics Symposium on Virtual Environments 2023  

 Please login  or register  for further options.   

  Important Conference Information - International Conference on Artificial Reality and Telexistence, Eurographics Symposium on Virtual Environments 2023  

  Abstract Deadline (UTC): 2023-09-15T21:59:00Z deadline expired   

  Submission Deadline for CRC or conditionally accepted papers (UTC): 2023-11-21T22:59:00Z deadline expired   

  SRM Contact eMail: srm-icategve2023@eg.org    

  Chair(s) email: chairs-icategve2023@eg.org    

  Add New Submission   

  Instructions   

 ICAT-EGVE2023, the joint 33rd International Conference on Artificial Reality and Telexistence & the 28th Eurographics Symposium on Virtual Environments, will be hosted at Trinity College Dublin in December 2023. For further details please visit: https://icat-egve-2023.org/   

 © 1999-2024 / System hosted at Graz University of Technology    
 Contact - Imprint  | Data Privacy Policy    

  Page generated in : 29 ms.

67. ICAPS_0 conference:
The 33rd International Conference   
 on Automated Planning and Scheduling   
 Prague, Czech Republic, July 8-13, 2023   

 Menu   Home 
  Dates 
  Attending  ▾ | Venue 
  Travel Information 
  Registration 
  Accommodation 
  Student Support 
  Calls  ▾ | Main Track 
  Application Track 
  Learning Track 
  Robotics Track 
  Journal Track 
  Call for Workshop Proposals 
  Call for Tutorial Proposals 
  System Demonstrations 
  Doctoral Consortium 
  Call for Partnership 
  Competitions 
  Submissions 
  Program  ▾ | Accepted Papers 
  Doctoral Consortium 
  Keynotes 
  Demos 
  Workshops  ▾ | KEPS 
  FinPlan 
  HAXP 
  PLATO 
  PRL 
  RDDPS 
  HPlan 
  SPARK 
  PlanRob 
  IntEx 
  PAIR 
  HSDIP 
  Tutorials  ▾ | Introduction to MDP Modeling and Interaction via RDDL and pyRDDLGym 
  How hard can it be? The computational complexity of planning 
  Recent Advances in Temporal Networks for Planning and Scheduling 
  Model Acquisition in the Modern Era 
  Unified Planning: A Python Library Making Planning Technology Accessible 
  On the role of Large Language Models in Planning 
  Schedule  ▾ | Sunday (July 9) 
  Monday (July 10) 
  Tuesday (July 11) 
  Wednesday (July 12) 
  Thursday (July 13) 
  Committees  ▾ | Organizers 
  Program Committee 
  Code of Conduct 
  Venue photo 

 The International Conference on Automated Planning and Scheduling (ICAPS) is the premier forum for exchanging news and research results on the theory and applications of intelligent and automated planning and scheduling technology. ICAPS 2023 is part of the ICAPS conference series  . After three years of virtual events, ICAPS 2023 will be a physical conference again. ICAPS 2023 will be held July 8-13, 2023, in Prague, Czech Republic.  
 The ICAPS 2023 program committee invites paper submissions related to automated planning and scheduling. Relevant contributions include, but are not limited to:  
 Theoretical and empirical studies of planning and scheduling problems and algorithms; 
  Novel techniques and approaches that extend the scope and scale of problems that can be solved; 
  Analytic and implemented tools supporting automated planning and scheduling; 
  Studies of applying automated planning and scheduling technologies to significant problems with deep technical insight. 
   ICAPS 2023  is collocated with International Workshop on Planning & Scheduling for Space  (IWPSS, July 7-8) and Symposium on Combinatorial Search  (SoCS, July 14-16).  
  ICAPS is kindly supported by:  
  
 Platinum Partners | Gold Partners | Silver Partners | Bronze Partners 

 © 2023 ICAPS 2023. Generated with Hugo  and Mainroad  theme.

68. ICAPS_1 conference:
The 33rd International Conference   
 on Automated Planning and Scheduling   
 Prague, Czech Republic, July 8-13, 2023   

 Menu   Home 
  Dates 
  Attending  ▾ | Venue 
  Travel Information 
  Registration 
  Accommodation 
  Student Support 
  Calls  ▾ | Main Track 
  Application Track 
  Learning Track 
  Robotics Track 
  Journal Track 
  Call for Workshop Proposals 
  Call for Tutorial Proposals 
  System Demonstrations 
  Doctoral Consortium 
  Call for Partnership 
  Competitions 
  Submissions 
  Program  ▾ | Program Overview 
  Accepted Papers 
  Doctoral Consortium 
  Keynotes 
  Workshops  ▾ | KEPS 
  FinPlan 
  HAXP 
  PLATO 
  PRL 
  RDDPS 
  HPlan 
  SPARK 
  PlanRob 
  IntEx 
  PAIR 
  HSDIP 
  Tutorials  ▾ | Introduction to MDP Modeling and Interaction via RDDL and pyRDDLGym 
  How hard can it be? The computational complexity of planning 
  Recent Advances in Temporal Networks for Planning and Scheduling 
  Model Acquisition in the Modern Era 
  Unified Planning: A Python Library Making Planning Technology Accessible 
  On the role of Large Language Models in Planning 
  Committees  ▾ | Organizers 
  Program Committee 
  Code of Conduct 

 Preliminary Program Overview  
 ICAPS 2023 Schedule at a Glance  
 July 7-8, 2023 | International Workshop on Planning & Scheduling for Space | (IWPSS) 
  July 8, 2023 Doctoral Consortium 
  July 9-10 2023 Workshops and Tutorials 
  July 11-13 2023 Main Conference 
  July 14-16, 2023 | Symposium on Combinatorial Search | (SoCS) 
  Additional Information about the Program  
 A total of 12 Workshops  have been accepted to ICAPS 2023. Check the workshop page  for additional information about their organization. 
  ICAPS 2023 will host 3 Keynotes  . Check the keynote page  for additional information about their talks. 
  Check the list Accepted Papers  on the conference webpage  . 

 © 2023 ICAPS 2023. Generated with Hugo  and Mainroad  theme.

69. CADE_1 conference:
Toggle navigation      Conference on Automated Deduction  Conferences 
  Awards 
  Trustees 
  Bylaws 
  Contact 

 Conferences  
   
 The International Conference on Automated Deduction  
 CADE is the major international forum at which research on all aspects of automated deduction is presented. The first conference was held in 1974. Previous CADEs were mostly biennial, and annual conferences started in 1996. Since 2001 CADE has participated in the International Joint Conference on Automated Reasoning  (IJCAR).  
 Future Conferences  
 CADE-30 | , Stuttgart, Germany, July 2025 (Springer LNCS ????) | Program Chairs: Clark Barrett, Uwe Waldmann ( | Report | ) 
  Conference Chair: Stephan Schulz ( | Report | ) 
  Workshop, tutorial, competition chair: Sophie Tourett 
  Publicity chair: Geoff Sutcliffe 
  Submissions: ?? full papers + ?? short papers/system descriptions = ?? | Accepted: ?? full papers + ? short papers = ?? 
  Attendees: ?? regular, ?? student, ? free = ?? (?? physical, ? online). ?? workshop/tutorial/competition only. 
  Invited speakers: TBA 
  Trustee president’s | report | and the | treasurer’s report | . 
  CADE/IJCAR Management  
 Conference management notes and schedule 
  Previous conferences’ financial summaries 
  Previous Conferences  
 2024: See the IJCAR web pages 
  CADE-29 | , Rome, Italy, July 2023 (Springer LNCS 14132) | Program Chairs: Brigitte Pientka, Cesare Tinelli ( | Report | ) 
  Conference Chair: Daniele Gorla ( | Report | ) 
  Workshop, tutorial, competition chair: Ivano Salvo 
  Publicity chair: Haniel Barbosa 
  Submissions: 62 full papers + 12 short papers/system descriptions = 74 | Accepted: 28 full papers + 5 short papers = 33 
  Attendees: 64 regular, 30 student, 2 free = 96 (90 physical, 6 online). ?? workshop/tutorial/competition only. 
  Invited speakers: Jasmin Blanchette, Maribel Fernandez, Mateja Jamnik 
  Trustee president’s | report | and the | treasurer’s report | . 
  2022: See the IJCAR web pages 
  CADE-28 | , Pittsburgh, USA, July 2021. | Program Chairs: Andre Platzer, Geoff Sutcliffe ( | Report | ) 
  Conference Chairs: Marijn Heule, Andre Platzer ( | Report | ) 
  Workshop, tutorial, competition chair: Alexander Steen 
  Publicity chair: Sophie Tourret 
  Submissions: 59 full papers + 4 short papers + 13 system descriptions = 76 | Accepted: 29 full papers + 7 system descriptions = 36 
  Attendees: 147 regular, 48 student. 55 workshop/tutorial/competition = 250 
  Invited speakers: Liron Cohen, Mooly Sagiv, Guido Governatori, Markus Rabe 
  Trustee president’s | report | and the | treasurer’s report | . 
  2020: See the IJCAR web pages 
  CADE-27 | , Natal, Brasil, August 2019. | Program Chair: Pascal Fontaine ( | Report | ) 
  Conference Chair: Elaine Pimentel ( | Report | ) 
  Workshop, tutorial, competition chair: Giles Reger 
  Submissions: 52 papers + 12 system descriptions = 65 | Accepted: 27 papers + 7 system descriptions = 34 
  72 attendees, 58 regular, 14 student. 113 workshop registrations 
  Invited speakers: Cas Cremers, Assia Mahboubi, Cesare Tinelli. 
  Trustee president’s | report | and the | treasurer’s report | . 
  2018: See the IJCAR web pages 
  CADE-26 | , Gothenburg, Sweden, August 2017. | Program Chair: Leonardo de Moura ( | Report | ) 
  Conference Chairs: Moa Johansson, Wolfgang Ahrendt ( | Report | ) 
  Workshop, tutorial, competition chair: Philipp Rümmer 
  Submissions: 58 papers + 11 system descriptions = 69 | Accepted: 26 papers + 5 system descriptions = 31 
  ?? attendees, ?? regular, ?? student. ?? workshop registrations 
  Invited speakers: June Andronick, Philippa Gardner, Grant Passmore 
  Trustee president’s | report | and the | treasurer’s report | . 
  2016: See the | IJCAR web pages | CADE President: Maria Paola Bonacina ( | Business meeting slides | ) 
  CADE-25 | , Berlin, Germany, 1-7 August 2015. | Program Chairs: Amy Felty, Aart Middeldorp ( | Report | ) 
  Conference Chair: Chris Benzmüller ( | Report | ) 
  Workshop, tutorial, competition chair: Jasmin Blanchette, Andrew Reynolds 
  Submissions: 71 papers + 14 system descriptions = 84 | Accepted: 24 papers + 12 system descriptions = 36 
  204 attendees, 125 regular, 40 student. 146 workshop registrations 
  Invited speakers: Ulrich Furbach, Michael Genesereth (joint with RuleML), Edward Zalta 
  Jubilee Session Speakers: Ursula Martin, Frank Pfenning, David Plaisted, Andrei Voronkov 
  Trustee president’s | report | and the | treasurer’s report | . 
  2014: See the | IJCAR web pages | CADE President: Maria Paola Bonacina ( | Business meeting slides | ) 
  CADE-24 | , Lake Placid, USA, 9-14 June 2013 (Springer LNAI 7898) | Program Chair: Maria Paola Bonacina ( | Report | ) 
  Conference or Local Arrangements Chairs: Chris Lynch, Neil Murray ( | Report | ). 
  Submissions: 53 papers + 18 system descriptions = 71 
  Accepted: 22 papers + 9 system descriptions = 31 
  86 attendees, 57 regular, 29 student. 56 workshop registrations 
  Invited speakers: Jean-Christophe Filliâtre, Greg Morrisett, Natarajan Shankar, Douglas R. Smith. 
  2012: See the IJCAR web pages 
  CADE-23 | , Wroclaw, Poland, 31 July-5 August 2011 (Springer LNAI 6803) | Program Chairs: Viorica Sofronie-Stokkermans, Nikolaj Bjørner ( | Report | ) 
  Conference Chair: Hans de Nivelle 
  Submissions: 66 papers + 14 system descriptions = 80 
  Accepted: 28 papers + 7 system descriptions = 35 
  Participants: 87 full + 13 freebies = 100 conference 
  6 workshops and 6 tutorials, 37 participants 
  Invited speakers: Koen Claessen, Byron Cook, Xavier Leroy, Aarne Ranta. 
  2010: See the IJCAR web pages 
  CADE-22 | , Montreal, Canada, 2-7 August 2009 (Springer LNAI 5663) | Program Chairs: Renate Schmidt ( | Report | ) 
  Conference Chair: Brigitte Pientka ( | Report | ) 
  Participants: 70 full + 41 student = 111 conference, 
  6 workshops, 4 Tutorials, 163 participants 
  Submissions: 77 (68 paper, 9 system descriptions) 
  Accepted: 32 (27 papers, 5 accepted) 
  Invited speakers: Konstantin Korovin, Martin Rinard, Mark Stickel. 
  Trustee president’s (actually, Reiner Hähnle - vice-president) | report | and the | business meeting minutes 
  2008: See the IJCAR web pages 
  CADE-21 | , Bremen, Germany, 17-20 July 2007 (Springer LNAI 4603) | Program Chair: Frank Pfenning 
  Conference or Local Arrangements Chairs: Michael Kohlhase 
  Participants: 110 
  Submissions: 64 
  Invited speakers: Colin Stirling, Ashish Tiwari, Rustan Leino, Peter Baumgartner. 
  2006: See the IJCAR web pages 
  CADE-20 | , Tallinn, Estonia, 22-27 July 2005 (Springer LNAI 3632) | Program Chair: Robert Nieuwenhuis 
  Conference or Local Arrangements Chairs: Tanel Tammett 
  Participants: 70 
  Submissions: 78 
  Invited speakers: Randal Bryant, Gilles Dowek, Frank Wolter. 
  2004: See the IJCAR web pages 
  CADE-19 | , Miami Beach, USA, 28 July-2 August 2003 (Springer LNAI 2741) | Program Chair: Franz Baader 
  Conference or Local Arrangements Chairs: Geoff Sutcliffe and Jeff Pelletier 
  Submissions: 83 
  Participants: 99 
  Invited speakers: Edmund Clarke, Anthony Cohn, Helene Kirchner, Greg Nelson. 
  CADE-18 | (FLoC’02), Copenhagen, Denmark, 27-30 July 2002 (Springer LNAI 2392) | Program Chair: Andrei Voronkov 
  Conference or Local Arrangements Chairs: Reiner Hänhle 
  Participants: 120 
  Invited speakers: Matthias Baaz (CADE/TABLEAUX), Ian Horrocks, Daniel Jackson, Sharad Malik (CADE/CAV). 
  2001: See the IJCAR web pages 
  CADE-17 | , Pittsburgh, USA, 17-20 June 2000 (Springer LNAI 1831) | Program Chair: David McAllester 
  Conference or Local Arrangements Chairs: Frank Pfenning 
  Participants: 106 
  Invited speakers: John Harrison, Henry Kautz, Carl Seger. 
  CADE-16 (FLoC’99), Trento, Italy, July 1999 (Springer LNAI 1632) | Program Chair: Harald Ganzinger 
  Conference or Local Arrangements Chairs: Paolo Traverso 
  Participants: 129 
  Invited speakers: Erich Graedel, Robert Nieuwenhuis, Tobias Nipkow, Zohar Manna (CADE/CAV). 
  CADE-15, Lindau, Germany, 6-10 July 1998 (Springer LNAI 1421) | Program Chairs: Claude Kirchner, Helene Kirchner 
  Conference or Local Arrangements Chairs: Wolfgang Bibel 
  Participants: 191 
  Submissions: 85 papers, 24 accepted; 25 system descriptions, 10 accepted 
  Invited speakers: Frank Pfenning, Matt Kaufmann, Amir Pnueli. 
  CADE-14, Townsville, Australia, 1997 (Springer LNAI 1249) | Program Chair: William McCune 
  Conference or Local Arrangements Chairs: Geoff Sutcliffe 
  Participants: 104 
  Submissions: 87 papers, 25 accepted; 22 system descriptions, 17 accepted 
  Invited speakers: Wu Wen-Tsun, Moshe Vardi. 
  CADE-13 (FLoC’96) New Brunswick, USA, 1996 (Springer LNAI 1104) | Program Chairs: Michael McRobbie, John K. Slaney 
  Conference or Local Arrangements Chairs: Amy Felty 
  Participants: 178 
  Invited speakers: Harald Ganzinger, Robert Milner (FLoC keynote), Amir Pnueli (CADE/CAV banquet), Dana Scott, John Rushby (CADE/CAV). 
  CADE-12, Nancy, France, 1994 (Springer LNAI 814) | Program Chair: Alan Bundy 
  Conference or Local Arrangements Chairs: Claude Kirchner 
  Participants: 228 
  Invited speakers: Robert Constable, Ursula Martin, Richard Platek, John Slaney. 
  CADE-11, Saratoga Springs, USA, 1992 (Springer LNAI 607) | Program Chair: Deepak Kapur 
  Conference or Local Arrangements Chairs: Neil V. Murray 
  Participants: 144 
  Invited speakers: Larry Wos (keynote), Raymond Smullyan (banquet), Grigori Mints. 
  CADE-10, Kaiserslautern, Germany, 1990 (Springer LNAI 449) | Program Chair: Mark Stickel 
  Conference or Local Arrangements Chairs: Hans-Jürgen Bürckert, Hans Jürgen Ohlbach 
  Participants: 162 
  Invited speakers: Robert Boyer and J Moore (keynote), Woody Bledsoe (banquet), Wolfgang Bibel, Alan Bundy. 
  CADE-9, Argonne, USA, 1988 (Springer LNCS 310) | Program Chairs: Rusty Lusk, Ross Overbeek 
  Conference or Local Arrangements Chairs: Rusty Lusk, Ross Overbeek 
  Participants: ? 
  Invited speakers: Stuart Miller, John Alan Robinson, Larry Wos (banquet) 
  CADE-8, Oxford, United Kingdom, 1986 (Springer LNCS 230) | Program Chair: Joerg Siekmann 
  Conference or Local Arrangements Chairs: R. J. Cunningham 
  Participants: ? 
  Invited speakers: Peter B. Andrews, Ray Reiter, Gerard Huet, David H.D. Warren. 
  CADE-7, Napa, USA, 1984 (Springer LNCS 170) | Program Chair: Robert Shostak 
  Conference or Local Arrangements Chairs: Gerard Huet 
  Participants: ? 
  Invited speakers: none 
  CADE-6, New York, USA, 1982 (Springer LNCS 138) | Program Chair: Donald W. Loveland 
  Conference or Local Arrangements Chairs: Martin Davis 
  Participants: ? 
  Invited speakers: Larry Wos, John McCarthy 
  CADE-5, Les Arcs, France, 1980 (Springer LNCS 87) | Program Chairs: Wolfgang Bibel, Robert Kowalski 
  Conference or Local Arrangements Chairs: Gerard Huet 
  Participants: 93 
  Invited speakers: Dag Prawitz 
  “CADE-4” - Fourth Workshop on Automated Deduction, Austin, USA, 1979 ( | Proceedings | ) | Program Chair: Sharon Sickel 
  Proceedings Editor: William Joyner 
  Local Arrangements Chairs: Woody Bledsoe 
  Participants: ? 
  Invited speakers: Martin Davis 
  “CADE-3” - Workshop on Automated Deduction, Cambridge, USA, 1977 ( | Proceedings | ) | Program Chair: Ray Reiter 
  Local Arrangements Chairs: ? 
  Participants: ? 
  Invited speakers: ? 
  “CADE-2”, Oberwolfach, Germany, 1976 ( | Oberwolfach Digital Archive, Workshop 7602b - Automatisches Beweisen | ) | Program Chairs: Woody Bledsoe, Michael Richter 
  Local Arrangements Chairs: Michael Richter 
  Participants: 35 
  Invited speakers: 28 
  “CADE-1” - IEEE Workshop on Automated Theorem Proving, Argonne, USA, 1975 ( | IEEE Transactions on Computers C-25(8) | ) | Program Chair: Larry Henschen 
  Local Arrangements Chairs: Larry Wos 
  Participants: 50 
  Invited speakers: J.R. Slagle 
  “CADE-0” - Symposium on Automatic Demonstration, Rocquencourt, France, 1968 ( | Lecture Notes in Mathematics 125 | ) | Program Chairs: Michel Laudet, D. Lacombe, L. Nolin, Marcel-Paul Schützenberger 
  Local Arrangements Chairs: Marcel-Paul Schützenberger 
  Participants: ? 
  Invited speakers: ? 
  Notes on the Early History of CADE  
 The 1968 meeting was organized by the mathematician Marcel-Paul Schützenberger, one of the founders of formal language theory, the logician Daniel Lacombe and the computer scientist Louis Nolin. It occurred at the just created IRIA (Institut de Recherche en Informatique et en Automatique) in Rocquencourt, near Versailles. This was actually the first scientific meeting organized at IRIA (to become INRIA in 1984 when it became a national institute). Schützenberger was the father of the Parisian school of theoretical computer science, and one of the founding scientific directors of IRIA. G. Kreisel came, probably invited by D. Lacombe, a specialist of recursive functions theory, and Jean-Louis Krivine, who had been working with him on axiomatic set theory. de Bruijn gave one of the first presentations of Automath. D. Scott discussed a notion of constructive validity. Several pioneers of automated theorem-proving participated, such as Hao Wang, R. Kowalski, D. Loveland, D. Luckham and L. Wos.  
 Peter Andrews provided many details of the early CADEs. He noted … “Evidently the conference at Versailles, France, in 1968 was not considered part of the CADE sequence of conferences by the early CADE organizers (one of whom was Wolfgang Bibel).” Gérard Huet recalls … “CADE was created probably at the 1977 meeting. Retroactively, the meetings of Argonne and Oberworlfach were christened CADE-1 and CADE-2, consistently with the fact that they were organized by the automated deduction community (Wos, Robinson, Bledsoe, Loveland, Andrews, Bibel, etc).” Wolfgang Bibel confirmed … “The term CADE was used for the very first time for CADE-1980, the Fifth International Conference on Automated Deduction (the numbering added after the reconstruction of the history), held in Les Arcs, Frankreich Juli 1980. Its Program Chairs were Wolfgang Bibel and Robert Kowalski. And it was me who suggested to introduce the term in - still existing - letters to Woody Bledsoe, Bob Kowalsky and others.”. Reiner Hähnle kindly went to the TU Darmstadt archive and took photos of some of the original correspondence between Wolfgang and Bob Kowaski which are provided here with permission from Wolfgang. They are a letter from Wolfgang to Bob dated 4/4/79  regarding the arrangements for the 1979 conference, Wolfgang’s draft CFP  for the conference, and a letter from Bob to Wolfgang dated 20/4/79  in which Bob agrees to Wolfgang’s suggestion of the CADE acronym.  

  © 2024 Conference on Automated Deduction maintained by Geoff Sutcliffe  .

70. EGVE_3 conference:
ICAT-EGVE 2023  
 6-8 December, Dublin, Ireland  
   
 HOME  | SUBMISSIONS  Call for Papers  Call for Posters/Demos  Presentation Format    
   
 | ATTENDING  Venue  Programme  Registration    
   
 | ORGANIZATION     
   
  Call for Papers  
  
 Please note that the submisison deadline has now passed and this page is only here for historical reasons. Please have a look at our programme  and consider attending  our conference.   
 Organization  
 The ICAT-EGVE 2023 conference will be held between December 6th and December 8th at Trinity College Dublin, Dublin, Ireland. The ICAT-EGVE is the merger of the 33rd International Conference on Artificial Reality and Telexistence (ICAT 2023) and the 28th Eurographics Symposium on Virtual Environments (EGVE 2023). Together, these are two of the oldest international conferences in the world on Artificial Reality and Virtual Environments.  
    
 Submissions  
 We invite the submission of Papers, Posters and Demonstrations describing novel research ideas, work in progress, recently completed work, preliminary results, or unusual systems and applications. ICAT-EGVE 2023 seeks inspiring submissions describing research, applications or systems in all areas of Virtual Reality, Augmented Reality, Mixed Reality, Telexistence, and 3D User Interfaces, e.g., the following non-exhaustive list of more specific areas:  
 3D interaction for VR/AR/MR 
  VR/AR/MR systems and toolkits 
  User studies and evaluation for VR/AR/MR 
  Telexistence, Telepresence and Teleimmersion 
  Haptics, audio, and other non-visual modalities 
  Serious games and edutainment using VR/AR/MR 
  Presence, cognition, and embodiment in VR/AR/MR 
  Novel devices (both input and output) for VR/AR/MR, and haptics 
  Multi-user and distributed VR/AR/MR, Tele-immersion and Telepresence 
  Immersive projection technologies and other advanced display technologies 
  Submissions in other related areas are welcome too.  
    
 Submission Guidelines: Papers  
 The following are the guidelines for the submission of full and short papers:  
 Full papers must not exceed eight (8) pages in length (excluding references). 
  Short papers must not exceed four (4) pages in length (excluding references). 
  Both full and short papers must be in English and should be formatted using the 
  Eurographics format. A sample LaTeX document for ICAT-EGVE 2023 can be found here: | https://srmv2.eg.org/COMFy/Conference/ICAT-EGVE_2023/Instruction 
  ICAT-EGVE uses a double-blind review process. Therefore, submissions should not contain information (including citations and optional videos) that unnecessarily identifies the authors or their institutions or places of work. All papers must be submitted electronically as PDF. Authors are encouraged to submit videos to aid the program committee in the review of their submissions. 
  The conference uses the EG submission tool. All submissions should be made through the online submission system: | https://srmv2.eg.org/COMFy/Conference/ICAT-EGVE_2023 | Note: On SRM, for your full paper submission, please select "-" as the category. If you have any questions regarding how to modify your submission, please see the following help link:  
  https://wiki.eg.org/SRMv2Wiki/index.php/Modify_your_submission 
  Submissions should be original, unpublished work, and should not be in submission to other venues concurrently. Any dual submission will be rejected outright without review. 
     
 Submission of Posters and Demos  
 Please note there is a separate submisison portal for our Posters and Demos programme, for which we are now also accepting submissions. For details, please see the Call for Posters and Demos  .  
    
 Review and Publication  
 All accepted Papers/Posters/Demos will be published in the Eurographics Digital Library and presented interactively at the conference. 
  Papers/Posters/Demos will be selected by the responsible chairs for presentation at the conference. Upon acceptance, the camera-ready version of the submission will be included in the electronic proceedings, provided that potential comments from the reviewers are appropriately addressed. 
     
 Program Chairs  
 Jean-Marie Normand (Ecole Centrale de Nantes, France) 
  Maki Sugimoto (Keio University, Japan) 
  Veronica Sundstedt (Blekinge Institute of Technology, Sweden) 
  Contact Details:  chairs-icategve2023@eg.org     
 Important Dates (All times: AoE)  
 Paper Submission Deadline: | 18 August | 15 September, 2023 
  Paper Submission Notification: 21 October, 2023 
  Poster / Demo Submission Deadline: 6 October, 2023 
  Poster / Demo Submission Notification: 28 October, 2023 
  Camera Ready Deadline: 3 November, 2023 (TBC) 
  Conference: 6-8 December, 2023 

 Copyright © 2023. ICAT-EGVE 2023 Organizing Committee

71. ARES_0 conference:
Vienna | Austria  
  July 30 - August 02, 2024   
   
 Conference    Committee 
  Workshops 
  Accepted Papers 
  Attending ARES & DOD    Schedule/Program 
  Social Events 
  Presenter Information 
  Venue and Location 
  Co-located Conferences    DOD 2024 
  ICS-CSR 2024 
  Archive 

        Conference | Committee 
  Workshops 
  Accepted Papers 
  Attending ARES & DOD | Schedule/Program 
  Social Events 
  Presenter Information 
  Venue and Location 
  Co-located Conferences | DOD 2024 
  ICS-CSR 2024 
  Archive 

 Contact 
  Privacy Policy 
  Submission & Guidelines 
  Imprint 
  Code of Conduct 
   
 Organised by   

 The International Conference on Availability, Reliability and Security  
 focuses since 2006 on rigorous and novel research in the field of dependability, computer and information security. In cooperation with the conference several workshops are held covering a huge variety of security topics.  
   
  Co-located Conferences DOD 2024  and ICS-CSR 2024  .   

    Skip to previous slide page    |  4      Skip to next slide page     

 24  View Schedule    Take a look at the schedule of ARES 2024   
  
 more          
  
 Venue & Location 01/04   

     © Shutterstock    Welcome to the ARES Conference at the University of Vienna! Delighted to host this intellectual gathering where minds converge, ideas flourish, and collaboration takes center stage. Embrace the vibrant academic atmosphere and make the most of the knowledge-sharing journey ahead.  
    
 ARES 2024, hosted at the University of Vienna, Austria, welcomes you to the Faculty of Computer Science. Join us at Währinger Straße 29, 1090 Vienna, for an enriching experience. Conveniently accessible by tram (37, 38, 40, 41, 42) at stops Sensengasse or Spitalgasse. Explore the historic University, founded in 1365, a pioneer in academia.  
  More Information  More Information     

 Speakers 2024 02/04   
  
 keynote  
 Yuval Shavitt  
 Tel Aviv University, Israel   
   
       Machine Learning Solutions for detection of attacks on Internet Routing   
      
  keynote  
 Jan Baumbach  
 University of Hamburg, Germany   
   
       To share or not to share? Privacy-preserving AI in medicine   
      
  keynote | ASOD  
 Martin Gilje Jaatun  
 SINTEF Digital, Norway   
   
       Physician, Secure Thyself? On building security into connected medical devices.   
      
  keynote | BASS  
 Luca Ardito  
 Politecnico di Torino, Italy   
   
       Behavioural Modelling for Sustainability in Smart Homes   
      
  keynote | CSA  
 Joachim Klerx  
 Austrian Institute of Technology (AIT), Austria   
   
       The Future of Strategic Military Cyber Situational Awareness (CSA)   
      
  keynote | COSH  
 Caroline Roth-Ebner  
 University of Klagenfurt, Austria   
   
       Mediatized Childhood: Navigating the Opportunities and Risks in an Ever-Connected World   
      
  keynote | CUING  
 Rémi Cogranne  
 University of Technology of Troyes (UTT), France   
   
       Statistical Models of digital images for Adversarial Methods in steganography and AI-based generation   
      
  keynote | EDId  
 Torsten Lodderstedt  
 SPRIND, Germany   
   
       Vision and Challenges of the EUDI Wallet   
      
  keynote | ENS  
 Marek Pawlicki  
 Bydgoszcz University of Science and Technology, Poland   
   
       Enhancing Network Cybersecurity with Novel Trustworthy AI Solutions   
      
  keynote | ETACS  
 Joseph Squillace  
 Penn State Schuylkill, USA   
   
       The State of Cybersecurity Today – Exploring the Effectiveness of Cybersecurity Defenses through a Pedagogical Lenses   
      
  keynote | GRASEC  
 Martin Husák  
 Masaryk University, Czech Republic   
   
       Theory and Practice of Cybersecurity Knowledge Graphs and Further Steps   
      
  keynote | IWCC  
 Sebastian Schrittwieser  
 University of Vienna, Austria   
   
       GPT, ignore all previous instructions! Prompt injection attacks and how to avoid them   
      
  keynote | SecHealth  
 Svetlana Boudko  
 Norwegian Computing Center, Oslo, Norway   
   
       Where federated learning meets homomorphic encryption: challenges and potential pathways for secure data sharing in AI applications   
      
  keynote | SecIndustry  
 Sabarathinam Chockalingam  
 Institute for Energy Technology (IFE), Norway   
   
       Dynamic Risk Assessment for Industry 4.0   
      
  keynote | SecIndustry  
 Emma Østerbø  
 NCE Manufacturing (Norwegian Centre of Expertise), Norway   
   
       Engaging SMEs in the twin transition   
      
  keynote | SP2I  
 Heribert Vallant  
 JOANNEUM RESEARCH, Graz, Austria   

 IoT Discovery as the fundamental basis for AI guided penetration testing   
      
  keynote | SP2I  
 Petr Svenda  
 Masaryk University, Czech Republic   
   
       On value of large-scale blackbox analysis of software and hardware cryptographic implementations   
      
  keynote | WSDF  
 Virginia Franqueira  
 University of Kent, UK   
   
       Fighting sexual abuse and exploitation of children   
      
  keynote  
 Stephen Fisher  
 Airbus, United Kingdom   
   
       No single point of failure mentality in OT   

 keynote  
 Yuval Shavitt  
 Tel Aviv University, Israel   
   
       Machine Learning Solutions for detection of attacks on Internet Routing   
      
  keynote  
 Jan Baumbach  
 University of Hamburg, Germany   
   
       To share or not to share? Privacy-preserving AI in medicine   
      
  keynote | ASOD  
 Martin Gilje Jaatun  
 SINTEF Digital, Norway   
   
       Physician, Secure Thyself? On building security into connected medical devices.   
      
  keynote | BASS  
 Luca Ardito  
 Politecnico di Torino, Italy   
   
       Behavioural Modelling for Sustainability in Smart Homes   
      
  keynote | CSA  
 Joachim Klerx  
 Austrian Institute of Technology (AIT), Austria   
   
       The Future of Strategic Military Cyber Situational Awareness (CSA)   
      
  keynote | COSH  
 Caroline Roth-Ebner  
 University of Klagenfurt, Austria   
   
       Mediatized Childhood: Navigating the Opportunities and Risks in an Ever-Connected World   
      
  keynote | CUING  
 Rémi Cogranne  
 University of Technology of Troyes (UTT), France   
   
       Statistical Models of digital images for Adversarial Methods in steganography and AI-based generation   
      
  keynote | EDId  
 Torsten Lodderstedt  
 SPRIND, Germany   
   
       Vision and Challenges of the EUDI Wallet   
      
  keynote | ENS  
 Marek Pawlicki  
 Bydgoszcz University of Science and Technology, Poland   
   
       Enhancing Network Cybersecurity with Novel Trustworthy AI Solutions   
      
  keynote | ETACS  
 Joseph Squillace  
 Penn State Schuylkill, USA   
   
       The State of Cybersecurity Today – Exploring the Effectiveness of Cybersecurity Defenses through a Pedagogical Lenses   
      
  keynote | GRASEC  
 Martin Husák  
 Masaryk University, Czech Republic   
   
       Theory and Practice of Cybersecurity Knowledge Graphs and Further Steps   
      
  keynote | IWCC  
 Sebastian Schrittwieser  
 University of Vienna, Austria   
   
       GPT, ignore all previous instructions! Prompt injection attacks and how to avoid them   
      
  keynote | SecHealth  
 Svetlana Boudko  
 Norwegian Computing Center, Oslo, Norway   
   
       Where federated learning meets homomorphic encryption: challenges and potential pathways for secure data sharing in AI applications   
      
  keynote | SecIndustry  
 Sabarathinam Chockalingam  
 Institute for Energy Technology (IFE), Norway   
   
       Dynamic Risk Assessment for Industry 4.0   
      
  keynote | SecIndustry  
 Emma Østerbø  
 NCE Manufacturing (Norwegian Centre of Expertise), Norway   
   
       Engaging SMEs in the twin transition   
      
  keynote | SP2I  
 Heribert Vallant  
 JOANNEUM RESEARCH, Graz, Austria   

 IoT Discovery as the fundamental basis for AI guided penetration testing   
      
  keynote | SP2I  
 Petr Svenda  
 Masaryk University, Czech Republic   
   
       On value of large-scale blackbox analysis of software and hardware cryptographic implementations   
      
  keynote | WSDF  
 Virginia Franqueira  
 University of Kent, UK   
   
       Fighting sexual abuse and exploitation of children   
      
  keynote  
 Stephen Fisher  
 Airbus, United Kingdom   
   
       No single point of failure mentality in OT   

 About ARES 03/04   
  
 Established in 2006, the International Conference on Availability, Reliability, and Security (ARES) serves as a pivotal gathering for researchers and practitioners in IT security and privacy. This distinguished platform facilitates the exchange, discussion, and transfer of knowledge, contributing significantly to the academic discourse in the field   
 ARES annually transforms European cities into knowledge exchange hubs, spotlighting dependability's critical facets—availability, reliability, and security. Our conference serves as a forum for in-depth discussions on dependability, covering safety, confidentiality, integrity, maintainability, and security across diverse applications.  
   
  Dedicated to the scrutiny of Dependable Computing's various aspects and shaping future roadmaps, ARES is a catalyst for innovation and collaboration. Since 2015, the ARES EU Projects Symposium, held concurrently, provides a vital space for EU research projects to showcase results, forge partnerships, and engage in meaningful discourse. The symposium facilitates networking among practitioners, researchers, and experts from diverse fields, fostering valuable collaborations.  
   
  Complementing these initiatives, ARES steadfastly supports workshops held alongside the conference. Many have become integral to the ARES family, contributing to our vibrant community. In 2023, ARES hosted 14 regular workshops and 8 EU Project workshops, further enriching our commitment to advancing IT security, reliability, and collaborative exploration. Join us at ARES, where ideas converge, partnerships form, and the future of Dependable Computing unfolds.  

 SBA Research   
 ABOUT SBA RESEARCH  
 ARES is backed by SBA Research, the largest research center focusing exclusively on information security in Austria employing more than 140 people, working jointly with national and international research institutions and company partners to address pressing cyber security research issues.   
   
 More Information on SBA Research       
   
 Contact   
 IN CASE OF ANY QUESTIONS, CONTACT  
 ARES Conference Management  
   
 ares@sba-research.org    

 More Contact Information       

 Organized by 04/04   

 In cooperation with  

 Our Sponsors  

 Register here!    Join us at ARES 2024 in Vienna, Austria  

 to the top           

  © 2024 SBA Research    

 The 19th International Conference on Availability, Reliability and Security (ARES 2024), will be held July 30 – August 2, 2024 in Vienna, Austria.   
  @ARES_Conference     

 Contact 
  Privacy Policy 
  Submission & Guidelines 
  Imprint 
  Code of Conduct 

 © 2024 SBA Research  Organised by

72. ICAPS_2 conference:
Skip to the content     Search      ICAPS    
 International Conference on Automated Planning and Scheduling   
   
    Menu      
 Menu         
   Search      

 Search for:      Close search       

 Close Menu     Home 
  Proceedings 
  Recordings 
  Conferences 
  Competitions 
  Awards 
  ICAPS Inc. 
  Calls for Contributions 

 Facebook 
  Twitter 
  YouTube 
  Email 

 ICAPS 2023  

 July 8, 2023–July 13, 2023  
  Prague (Czech Republic)   
  visit website →    Organized by: Roman Barták, | Charles University, Prague, Czech Republic | (Conference Chair) 
  AndreA Orlandini, | National Research Council of Italy (CNR-ISTC), Italy | (Conference Chair) 
  Sven Koenig, | University of Southern California, USA | (Program Chair) 
  Roni Stern, | Ben Gurion University of the Negev, Israel | (Program Chair) 
  Mauro Vallati, | University of Huddersfield, United Kingdom | (Program Chair) 

 Facebook 
  Twitter 
  YouTube 
  Email 

 © 2024 ICAPS Inc.  (hosted by Gabriele Röger  )  
   
 To the top ↑   Up ↑      
  
 ×

73. CADE_3 conference:
Forbidden  
 You don't have permission to access this resource.

74. ARES_1 conference:
Vienna | Austria  
  July 30 - August 02, 2024   
   
 Conference    Committee 
  Workshops 
  Accepted Papers 
  Attending ARES & DOD    Schedule/Program 
  Social Events 
  Presenter Information 
  Venue and Location 
  Co-located Conferences    DOD 2024 
  ICS-CSR 2024 
  Archive 

        Conference | Committee 
  Workshops 
  Accepted Papers 
  Attending ARES & DOD | Schedule/Program 
  Social Events 
  Presenter Information 
  Venue and Location 
  Co-located Conferences | DOD 2024 
  ICS-CSR 2024 
  Archive 

 Contact 
  Privacy Policy 
  Submission & Guidelines 
  Imprint 
  Code of Conduct 
   
 Organised by   

 Workshops  
 The listed Workshops are held in conjunction with ARES   
 Legend:  WORKSHOPS 
  EU Projects Symposium WORKSHOPS 

 Workshop  
 ASOD  
   
 Workshop on Advances in Secure Software Deployments   
      
  Workshop  
 BASS  
   
 4th International Workshop on Behavioral Authentication for System Security   
      
  Workshop  
 COSH  
   
 International Workshop on Child Online Safety and Harms   
      
  Workshop  
 CSA  
   
 5th Workshop on Recent Advances in Cyber Situational Awareness and Data-Centric Approaches   
      
  Workshop  
 CUING  
   
 8th International Workshop on Cyber Use of Information Hiding   
      
   EU Projects Symposium Workshop  
 CyberHunt  
   
 Hands-On Workshop CyberHunt   
      
  Workshop  
 EDId  
   
 International Workshop on Emerging Digital Identities   
      
   EU Projects Symposium Workshop  
 ENS  
   
 7th International Workshop on Emerging Network Security   
      
   EU Projects Symposium Workshop  
 EPESec  
   
 5th International Workshop on Electrical Power and Energy Systems Safety, Security and Resilience   
      
  Workshop  
 EPIC-ARES  
   
 2nd Interdisciplinary Workshop on Applied Research in Embedded, Purpose-specific, Integrated Computing and their Availability, Reliability and Security   
      
   EU Projects Symposium Workshop  
 ETACS  
   
 3rd workshop on Education, Training and Awareness in Cybersecurity   
      
  Workshop  
 FARES  
   
 19th International Workshop on Frontiers in Availability, Reliability and Security   
      
  Workshop  
 GRASEC  
   
 5th International Workshop on Graph-based Approaches for CyberSecurity   
      
  Workshop  
 IMTrustSec  
   
 International Workshop on Incident Management, Trusted Computing, Open Hardware and Advanced Security Attacks   
      
  Workshop  
 IWAPS  
   
 4th International Workshop on Advances on Privacy Preserving Technologies and Solutions   
      
  Workshop  
 IWCC  
   
 13th International Workshop on Cyber Crime   
      
  Workshop  
 IWSECC  
   
 International Workshop on Security Engineering for Cloud Computing   
      
  Workshop  
 OHC  
   
 International Workshop on Open Hardware and Cybersecurity   
      
   EU Projects Symposium Workshop  
 PCSCI  
   
 3rd International Workshop on Physical and Cyber Security in Interdependent Critical Infrastructures   
      
  Workshop  
 SecHealth  
   
 4th Workshop on Cybersecurity in Healthcare 4.0   
      
  Workshop  
 SecIndustry  
   
 3rd Workshop on Cybersecurity in Industry 4.0   
      
   EU Projects Symposium Workshop  
 SP2I  
   
 4th International Workshop on Security and Privacy in Intelligent Infrastructures   
      
  Workshop  
 SPETViD  
   
 International Workshop on Security and Privacy Enhancing Technologies for Visual Data   
      
   EU Projects Symposium Workshop  
 STAM  
   
 The 4th International Workshop on Safety and Security Testing and Monitoring   
      
  Workshop  
 TrustBus  
   
 21st International Workshop on Trust, Privacy and Security in the Digital Society   
      
  Workshop  
 WSDF  
   
 17th International Workshop on Digital Forensics   

 Register here!    Join us at ARES 2024 in Vienna, Austria  

 to the top           

  © 2024 SBA Research    

 The 19th International Conference on Availability, Reliability and Security (ARES 2024), will be held July 30 – August 2, 2024 in Vienna, Austria.   
  @ARES_Conference     

 Contact 
  Privacy Policy 
  Submission & Guidelines 
  Imprint 
  Code of Conduct 

 © 2024 SBA Research  Organised by

75. ARES_2 conference:
Vienna | Austria  
  July 30 - August 02, 2024   
   
 Conference    Committee 
  Workshops 
  Accepted Papers 
  Attending ARES & DOD    Schedule/Program 
  Social Events 
  Presenter Information 
  Venue and Location 
  Co-located Conferences    DOD 2024 
  ICS-CSR 2024 
  Archive 

        Conference | Committee 
  Workshops 
  Accepted Papers 
  Attending ARES & DOD | Schedule/Program 
  Social Events 
  Presenter Information 
  Venue and Location 
  Co-located Conferences | DOD 2024 
  ICS-CSR 2024 
  Archive 

 Contact 
  Privacy Policy 
  Submission & Guidelines 
  Imprint 
  Code of Conduct 
   
 Organised by   

 Open Calls & Registration  

 Open on May 03, 2024   
 REGISTRATION  
 Ticket Categories and Prices for ARES and co-located Workshops.   
   
 Register here       
    
 Call   
 CALL FOR PAPERS  
 Call for Papers - Extended Deadline March 13, 2024 (AoE)   
   
 More Information       

 Registration and Fees 01/03   
  
 Registration Details   
    
  Please register here: https://pretix.eu/sba-research...    
  Registration for the conference  
  encompasses access to all ARES sessions and workshops.  
   
  If applicable, registration covers one paper. Additional papers will incur extra charges.  
   
  Attendees will also enjoy coffee breaks and lunch throughout the conference days. All fees are inclusive of VAT.   
   
  Cancellation Policy   
   
  Until July 09, 2024, a 50% cancellation fee will apply.  
  No reimbursements will be provided for cancellations after July 09, 2024.  
  Author or participant substitution is permitted.   
 Early-Bird Regular Registration   
   
 until June 14, 2024   
    
  includes all ARES-, Workshops and EU Symposium sessions and all social events  
    
 Registration Link     Prices  
 Early-Bird Regular   
 € 889,20   

 Regular Registration   
   
 from June 15, 2024   
   
  includes all ARES-, Workshops and EU Symposium sessions and all social events  
    
 Registration Link     Prices  
 Regular   
 € 991,20   

 Regular Registration Extended   
   
 includes – beside one full regular registration – all social events for a plus one. For further details, please contact ares@sba-research.org  .   
 Registration Link     Prices  
 Regular Extended   
 € 1.207,20   

 EU Projects Symposium Registration   
   
 until July 14, 2024   
    
  includes all Symposium- and ARES sessions on July 30, 2024, and Welcome Reception  
  no paper included    
 Registration Link     Prices  
 EU Projects Symposium   
 € 304,80   

 EU Projects Symposium Registration – late   
   
 from July 15, 2024   
    
  includes all Symposium- and ARES sessions on July 30, 2024, and Welcome Reception  
  no paper included    
 Registration Link     Prices  
 EU Projects Symposium – late   
 € 402,00   

 Co-Author   
   
 No paper included.  Co-Authors are entitled to a discount on the registration fee. Indication of paper ID (EasyChair) required. 
  Co-Author Registration includes all ARES and EU Projects Symposium sessions and all social events.   
 Registration Link     Prices  
 Co-Author   
 € 795,60   

 Additional Paper   
   
 Fees for every additional paper    
 Registration Link     Prices  
 Additional Paper   
 € 289,20   

 Student Registration   
   
 No paper included.  Students registrations are only fully completed after a scanned valid student ID has been sent to | ares@sba-research.org | . 
  At least one author of an accepted paper has to register as author, whether they are student or not. 
  The Student Registration fee includes all ARES conference and workshop sessions, but no social events.   
 Registration Link     Prices  
 Student   
 € 304,80   

 ICS-CSR Author   
   
 valid for on August 01, 2024   
  including Conference Dinner  
    
 Registration Link     Prices  
 ICS-CSR Author   
 € 594   

 ICS-CSR Attendee   
   
 valid on August 1, 2024   
   
  includes Conference Dinner. No paper included.   
 Registration Link     Prices  
 ICS-CSR Attendee   
 304,80   

 All Social Events   
   
 includes Welcome Reception, Surprise Evening and Conference Dinner   
 Registration Link     Prices  
 All Social Events   
 € 163,20   

 Welcome Reception   
   
 just needed if not included in other registration fee   
 Registration Link     Prices  
 Welcome Reception   
 € 72   

 Surprise Evening - Prater   
   
 just needed if not included in other registration fee   
 Registration Link     Prices  
 Surprise Evening - Prater   
 € 19,20   

 Conference Dinner   
   
 just needed if not included in other registration fee   
 Registration Link     Prices  
 Conference Dinner   
 € 72   

 Visa Information 02/03   
  
 International registrants should be particularly aware and careful about visa requirements and should plan travel well in advance.   
   
 VISA REGULATIONS  The visa regulations for Austria can be found here  .  

 LETTER OF INVITATION  For authors of accepted papers we can provide an invitation letter for visas. For a letter of invitation, please send all requests to ares@sba-research.org   with the following Information:  
 name | (as it appears on your passport) and | mailing address 
  your | passport ID | and your | date of birth 
  include your | registration confirmation number 
  the | title of your accepted paper 
  include an | email address | where the letter should be sent to 
  Please note that it can take up to one week to receive the invitation letter.   

 Call for Papers 03/03   
  
 The 19th International Conference on Availability, Reliability and Security  
  December 21 — March 13, 2024   
 ARES   
   
  …highlights the various aspects of dependability – with special focus on the crucial linkage between availability, reliability and security.  
   
  …aims at a full and detailed discussion of the research issues of dependability as an integrative concept that covers amongst others availability, safety, confidentiality, integrity, maintainability and security in the different fields of applications.  
   
  …emphasizes the interplay between foundations and practical issues of dependability in emerging areas such as e-government, m-government, location-based applications, ubiquitous computing, autonomous computing, chances of grid computing etc.  
   
  …is devoted to the critical examination and research challenges of the various aspects of Dependable Computing and the definition of a future road map.  
   
  ARES is ranked as B-conference in CORE  .  
  The acceptance rate of the ARES 2023 conference was 20,8% (full papers only). ARES 2024 will be published by the International Conference Proceedings Series published by ACM (ACM ICPS).  

 IF YOU HAVE ANY QUESTIONS, CONTACT THE CONFERENCE MANAGEMENT  
 ARES Conference Management  ares@sba-research.org    

 CONFERENCE OFFICERS  
 Steering Committee Chairpersons   
 → Edgar Weippl, SBA Research & University of Vienna, Austria   
 → A Min Tjoa, TU Vienna, Austria   
   
 General Chair   
 → Edgar Weippl, SBA Research & University of Vienna, Austria   
   
 Program Committee Chairs   
 → Haya Schulmann, Goethe-Universität Frankfurt and ATHENE, Germany   
 → Dimitris E. Simos, SBA Research, Austria   
   
 Workshop Chair   
 → Andreas Unterweger, Salzburg University of Applied Sciences, Austria   
   
 EU Symposium Workshop Chair 2024   
 → Florian Skopik, AIT, Austrian Institute of Technology, Austria   
   
 Organization and Local Chair 2024   
 → Bettina Jaber, SBA Research, Austria   
   
 Proceedings Chair 2024   
 → Bettina Jaber, SBA Research, Austria   
   
 Website Chair 2024   
 → Daniela Freitag David, SBA Research, Austria   

 PROGRAM COMMITTEE  
 The success of ARES is fundamentally driven by its dedicated and engaged organizing committees and program committee members.  

 Program Committee Members 2024       
   
 Deadlines  
 Extended Submission Deadline AoE   Mar 13, 2024    
 Author Notification   May 03, 2024    
 Author Registration   May 17, 2024    
 Camera Ready Upload to TAPS (ACM submission system) AoE   Jun 11, 2024    
 Proceedings Version (100% completed in TAPS) AoE   Jun 18, 2024    
 ARES EU Symposium   Jul 30, 2024    
 Conference   Jul 30 — Aug 02, 2024    

 TOPICS OF INTEREST  
 Include, but are not limited to   
  Authorization, Authentication, and Access Control  
  Automated Vulnerability Repair  
  Availability, Confidentiality, Integrity  
  Botnets and Botnet Monitoring  
  Cloud Security  
  Compliance, Certification and Legal aspects related to Security and Privacy  
  Dependability, and Resilience  
  Digital Forensics  
  Human Factors in Security and Privacy  
  Identity Management  
  Incident Response and Prevention  
  Intrusion Detection and Fraud Detection  
  Machine Learning for Security and Privacy  
  Security and Privacy for Machine Learning  
  Mobile Security  
  Network Security  
  Privacy-Enhancing Technologies (PETs)  
  Process based Security Models and Methods  
  Risk analysis  
  Side Channel Attacks  
  Software Security  
  Static and Dynamic Code Analysis for Security and Privacy  
  Security and Privacy for IoT, Cyber-Physical Systems, and Critical Infrastructures  
  Security and Privacy Awareness  
  Security Requirements and Secure Design of Applications  
  Usable Security and Privacy  
  Threats and Attack Modelling  
  Trusted Computing  
  Trust Models and Trust Management  
  Web Application Security and Privacy   

 Submission  
 Authors are invited to submit research and application papers according the following guidelines.  

 More Information       

 Register here!    Join us at ARES 2024 in Vienna, Austria  

 to the top           

  © 2024 SBA Research    

 The 19th International Conference on Availability, Reliability and Security (ARES 2024), will be held July 30 – August 2, 2024 in Vienna, Austria.   
  @ARES_Conference     

 Contact 
  Privacy Policy 
  Submission & Guidelines 
  Imprint 
  Code of Conduct 

 © 2024 SBA Research  Organised by

76. Broadnets_0 conference:
Open Menu  Home 
  Committees | Steering Committee 
  Organizing Committee 
  Technical Program Committee 
  Submission 
  Calls | Call for Papers 
  Practical Info | Visas 
  Venue 
  Camera-ready Submission (Confy+) 
  Registration 
  Sponsorship 
  Keynotes 
  Help & Contact | Help & Contact 
  Cookie Policy 

 Home 
  Committees | Steering Committee 
  Organizing Committee 
  Technical Program Committee 
  Submission 
  Calls | Call for Papers 
  Practical Info | Visas 
  Venue 
  Camera-ready Submission (Confy+) 
  Registration 
  Sponsorship 
  Keynotes 
  Help & Contact | Help & Contact 
  Cookie Policy 
   
 |      

 THANK YOU FOR YOUR PARTICIPATION   
  
 Check out next conference edition  .  

 Welcome to the EAI Community    
 Let the EAI Community help you build your career with collaborative research, objective evaluation, and fair recognition:  
 Extra visibility for your paper and fair review → | Community Review 
  Get credits to receive membership ranks and global recognition → | EAI Index 
  Real-time evaluation and feedback on your presentation on-site → | EAI Compass 

  About BROADNETS 2023   
 The current roll-out of 5G mobile internet networks continue to drive forward smart services, machine-to-machine communications, and connected transport. The city’s technology industry focus includes the cloud, big data analytics, and mobility – most notably in the field of autonomous transport. With the evolution of 5G over the last few years, the term ‘5G’ means different things to different groups. To the consumer it’s all been about faster public networks and downloads via 5G NSA (non-standalone); for the new use-cases the endeavor was to build upon high speeds and ultra-low latency facility, building machine to machine and private networks; and for the R&D community effort went in to evolving new software defined radio (SDR) algorithms and PHY solutions and applicable use cases. However, the 5G SA (standalone) private networks revolution did not move to deployment as quickly as hoped to open the era of the Internet of Everything. Visible Light Communication (VLC) and Light Fidelity (LiFi) technologies are among the potential candidates that are expected to be utilized in the future 5G networks due to their indoor energy-efficient communications. The scope of this conference is the 5G-enabled digital society. As one of the important infrastructures of the digital economy, some important progresses in key technologies have been made for 5G network. For different digital social scenarios, key technologies, scenarios and practical application systems derived from the combination of 5G, big data, cloud computing, and artificial intelligence technologies. In addition, 5G network and information security for the digital society is also one of the focuses of this conference. It brings together thought leaders from industry, academia and other institutions to exchange information and ideas on advancing the state-of-the-art in wireless communications and networking.  

  Topics   
 We seek novel, innovative, and exciting work in areas including but not limited to:  
 6G communications at the Terahertz band 
  Internet of Things (IoT)-enabled Smart Systems 
  Cloud-to-things systems 
  Edge Computing, Edge Intelligence and Fog Networks 
  Communication-inspired Machine Learning (ML) for 5G/6G 
  AI enabled services in Wireless Networks 
  IoT and Machine – Machine Communications 
  Visible Light and Optical Communications 
  Smart City Smart Grid 
  E-health and Mobile Health 
  Wireless Network Security and Privacy 
  AI applications for 5G/6G 

  Publication   
 All registered papers will be submitted for publishing by Springer  and made available through SpringerLink Digital Library: BROADNETS Conference Proceedings  .  
 Proceedings will be submitted for inclusion in leading indexing services, such as Web of Science, Compendex, Scopus, DBLP, EU Digital Library, Google Scholar, IO-Port, MathSciNet, Inspec, and Zentralblatt MATH.  
 Additional publication opportunities:  
 EAI Transactions series (Open Access) 
  EAI/Springer Innovations in Communications and Computing Book Series | (titles in this series are indexed in Ei Compendex, Web of Science & Scopus) 

  About EAI   
 This event is organized by EAI  .  
   
  EAI – European Alliance for Innovation is a non-profit organization and a professional community established in cooperation with the European Commission to empower the global research and innovation, and to promote cooperation between European and International ICT communities.  
   
  EAI’s vision  is to foster excellence in research and innovation on the principles of transparency, objectivity, equality, and openness. Our guiding principle is community cooperation to create better research, provide fair recognition of excellence and transform best ideas into commercial value proposition.  
   
  EAI‘s mission  is to create an environment that rewards excellence transparently, and builds recognition objectively regardless of age, economic status or country of origin, where no membership fees or closed door committees stand in the way of your research career.  
   
  Through these shared values, EAI leads the way toward advancing the world of research and innovation, empowering individuals and institutions for the good of society to fully benefit from the digital revolution.  

 Important dates  
 Full Paper Submission deadline   
  11 January 2024  
  Notification deadline   
  26 January 2024  
  Registration Opens   
  29 January 2024  
  Camera-ready deadline   
  4 February 2024  
  Start of Conference   
  16 February 2024  
  End of Conference   
  17 February 2024   
   
 Previous BROADNETS editions  
 2022  – Harbin, People’s Republic of China  
  2021  – Virtual conference  
  2020  – Virtual conference  
  2019  – Xi`an, People’s Republic of China  
  2018  – Faro, Portugal  
  2010  – Athens, Greece  
  2009  – Madrid, Spain  
  2008  – London, Great Britain  
  2007  – Raleigh, North Carolina, United States  
  2006  – San Jose, California, United States  
  2005  – Boston, Massachusetts, United States  
  2004  – San Jose, California, United States  
   
 Sponsors  

 This event is a part of  
 EAI Conference series   

 Become an EAI Member   
 Join for free    

 Follow us   

 © 2023 BROADNETS | EAI   

 Manage Cookie Consent   

 To provide the best experiences, we use technologies like cookies to store and/or access device information. Consenting to these technologies will allow us to process data such as browsing behavior or unique IDs on this site. Not consenting or withdrawing consent, may adversely affect certain features and functions.   
 Functional   Functional    Always active       The technical storage or access is strictly necessary for the legitimate purpose of enabling the use of a specific service explicitly requested by the subscriber or user, or for the sole purpose of carrying out the transmission of a communication over an electronic communications network.    
  Preferences   Preferences         The technical storage or access is necessary for the legitimate purpose of storing preferences that are not requested by the subscriber or user.    
  Tracking   Tracking         The technical storage or access that is used exclusively for statistical purposes.  Technical storage or access that is used solely for the purpose of tracking users on a website or across several websites. The data is not shared with third parties.    
  Marketing   Marketing         The technical storage or access is required to create user profiles to send advertising, or to track the user on a website or across several websites for similar marketing purposes.    

 Manage options  Manage services  Manage {vendor_count} vendors  Read more about these purposes    
   
 Accept  Deny  View preferences  Save preferences  View preferences    
 {title}  {title}  {title}    

 Manage consent

77. ICCBR_0 conference:
Home 
  Program | Schedule  Main Programme  Invited Speakers  Tutorials  Workshops  Doctoral Consortium 
  Calls (closed) | Call for Papers  Call for Workshop Papers  Call for DC Applications 
  Registration 
  Organizers 
  Local Information | Travel  Venue 
  Social Events | Sunday vist to Royal Deeside  ICCBR BBQ  Welcome Reception  Walk to Duthie Park  Gala Dinner 
  Sponsors 

   31st International Conference on Case-Based Reasoning  
 July 17th - 20th 2023, Aberdeen Scotland  

   31st International Conference on Case-Based Reasoning  
 July 17th - 20th 2023, Aberdeen Scotland  

  Previous    Next     
  The International Conference on Case-Based Reasoning (ICCBR)  is the premier, annual meeting of the CBR community and the leading international conference on this topic. Researchers will present the latest results of their work and discuss future directions for the field.  
 CBR in a Data-Driven World  is this year’s conference theme, to direct the community’s attention to the need to highlight the role CBR can play in solving current problems and how it differs from other Machine Learning approaches. This year we pose the question: “What is the role of CBR in the modern data-driven world?” Accordingly, this year’s conference welcomes and encourages submissions and participation from members of the AI and CBR communities – whether they be researchers, policy makers or practitioners — on this theme. In this respect, we look forward to a variety of submissions; they could be position papers or road mapping proposals, as well as traditional basic or applied research papers.  
 Welcome to Scotland!  The 2023 edition of ICCBR will be in Aberdeen, Scotland. The program will include invited speakers, a main technical track, a workshop program, a doctoral consortium, and other events, with several connections to the Conference theme. We warmly welcome participation from all researchers and practitioners who have interest in case-based reasoning, including those who are working on related topics but have not previously attended ICCBR.  

  What's new!  
 Share your ICCBR 2023 photos here!   
 Access Springer Proceedings here!   

 Conference Sponsors  

 Doctoral Consortium Sponsor  
    
 Award Sponsor  

 © 2017–2022 ICCBR 23. ·

78. ARES_3 conference:
Vienna | Austria  
  July 30 - August 02, 2024   
   
 Conference    Committee 
  Workshops 
  Accepted Papers 
  Attending ARES & DOD    Schedule/Program 
  Social Events 
  Presenter Information 
  Venue and Location 
  Co-located Conferences    DOD 2024 
  ICS-CSR 2024 
  Archive 

        Conference | Committee 
  Workshops 
  Accepted Papers 
  Attending ARES & DOD | Schedule/Program 
  Social Events 
  Presenter Information 
  Venue and Location 
  Co-located Conferences | DOD 2024 
  ICS-CSR 2024 
  Archive 

 Contact 
  Privacy Policy 
  Submission & Guidelines 
  Imprint 
  Code of Conduct 
   
 Organised by   

 Program Guide & Schedule ARES 2024  

 Take a look at the schedule and program guide of ARES 2024  
    
 scroll down for more details   

 Detailed Program 01/02   
  
 ✕  Excel Version  

 displayed as:   
  program overview  
  each conference day with all details   

 download here  download here     

 displayed as:   
  program overview  
  each conference day with all details   

 download here  download here     

 ✕  Google Calendar  
 displays each session as a calendar entry   

 including:  room information and useful links  
   
  go to July 30- August 02 to view all ARES sessions   

 Alternately:  downloaded in iCal format.   

 view calendar online  view calendar online     

 including:  room information and useful links  
   
  go to July 30- August 02 to view all ARES sessions   

 Alternately:  downloaded in iCal format.   

 view calendar online  view calendar online     

 ✕  Program Overview PDF  

 program overview for each conference day  

 view here  view here     

 program overview for each conference day  

 view here  view here     

 Program Guides 02/02   
  
 ✕  ARES & ICS-CSR 2024 Program Guide  
 the ARES & ICS-CSR 2024 program guide is available now.  

 Download it to have all the important information with you at the conference.   

 to view the ARES & ICS-CSR program guide incl. paper overview click here  .   
   
 view here  view here     

 Download it to have all the important information with you at the conference.   

 to view the ARES & ICS-CSR program guide incl. paper overview click here  .   
   
 view here  view here     

 ✕  DOD Program Guide  
 the DOD 2024 program guide is available now.   

 Download it to have all the important information with you at the conference.  

 view here  view here     

 Download it to have all the important information with you at the conference.  

 view here  view here     

 ✕  ARES & ICS-CSR Paper Overview PDF  

 view all ARES, workshop and ICS-CSR papers grouped in sessions. Including session details (date, time & room)   

 view here  view here     

 view all ARES, workshop and ICS-CSR papers grouped in sessions. Including session details (date, time & room)   

 view here  view here     

 Register here!    Join us at ARES 2024 in Vienna, Austria  

 to the top           

  © 2024 SBA Research    

 The 19th International Conference on Availability, Reliability and Security (ARES 2024), will be held July 30 – August 2, 2024 in Vienna, Austria.   
  @ARES_Conference     

 Contact 
  Privacy Policy 
  Submission & Guidelines 
  Imprint 
  Code of Conduct 

 © 2024 SBA Research  Organised by

79. ICCBR_1 conference:
Home 
  Program | Schedule  Main Programme  Invited Speakers  Tutorials  Workshops  Doctoral Consortium 
  Calls (closed) | Call for Papers  Call for Workshop Papers  Call for DC Applications 
  Registration 
  Organizers 
  Local Information | Travel  Venue 
  Social Events | Sunday vist to Royal Deeside  ICCBR BBQ  Welcome Reception  Walk to Duthie Park  Gala Dinner 
  Sponsors 

   31st International Conference on Case-Based Reasoning  
 July 17th - 20th 2023, Aberdeen Scotland  

   31st International Conference on Case-Based Reasoning  
 July 17th - 20th 2023, Aberdeen Scotland  

  Previous    Next     
 Main Conference Programme  
  
  Access proceedings here!   

 TS1: CBR and Deep Learning - Chaired by Kerstin Bach 
 David Leake, Zachary Wilkerson, Vibhas Vats, Karan Acharya and David Crandall   
  Examining the Impact of Network Architecture on Extracted Feature Quality for CBR 
 Isabelle Bichindaritz and Guanghui Liu   
  Synergies between Case-based Reasoning and Deep Learning for Survival Analysis in Oncology 
 Ashish Upadhyay and Stewart Massie   
  CBR Assisted Context-Aware Surface Realisation for Data-to-Text Generation 
 TS2: Representation and Similarity - Chaired by David Leake 
 Alexander Schultheis, Maximilian Hoffmann, Lukas Malburg and Ralph Bergmann   
  Explanation of Similarities in Process-Oriented Case-Based Reasoning by Visualization 
 Mark van der Pas, Remco Dijkman, Alp Akçay, Ivo Adan and John Walker   
  On-demand and model-driven case building based on distributed data sources 
 Adwait P. Parsodkar, Deepak P and Sutanu Chakraborti   
  The Case for Circularities in Case-Based Reasoning 
 TS3: CBR and Explanable AI -Chaired by David Aha 
 Lawrence Gates, David Leake and Kaitlynne Wilkerson   
  Cases are King: A User Study of Case Presentation to Explain CBR Decisions 
 Anjana Wijekoon, Nirmalie Wiratunga, Kyle Martin, David Corsar, Ikechukwu Nkisi-Orji, Chamath Palihawadana, Derek Bridge, Preeja Pradeep, Belen Diaz-Agudo and Marta Caro-Martínez   
  CBR driven Interactive Explainable AI 
 Humberto Parejas-Llanovarced, Jesus M. Darias, Marta Caro-Martínez and Juan A. Recio-Garcia   
  Selecting Explanation Methods for Intelligent IoT Systems: a Case-Based Reasoning Approach 
 TS4: Case Base Maintenance - Chaired by Jean Lieber 
 Shania Mitra, Ditty Mathew, Deepak P and Sutanu Chakraborti   
  Group Fairness in Case-Based Reasoning 
 William Blanzeisky and Padraig Cunningham   
  Addressing Underestimation Bias in CBR through Case-Base Maintenance 
 David Leake and Brian Schack   
  The Problem Drift Problem and First Steps Towards Addressing It 
 TS5: Adaptation Techniques and Application - Chaired by Antonio A. Sánchez-Ruiz 
 Mirko Lenz and Ralph Bergmann   
  Case-Based Adaptation of Argument Graphs with WordNet and Large Language Models 
 Ikechukwu Nkisi-Orji, Chamath Palihawadana, Nirmalie Wiratunga, Anjana Wijekoon and David Corsar   
  Failure-Driven Transformational Case Reuse of Explanation Strategies in CloodCBR 
 Lisa Grumbach and Ralph Bergmann   
  A Case-Based Approach for Workflow Flexibility by Deviation 
 TS6: CBR Applications - Chaired by Emmanuel Nauer 
 Alexander Schultheis, Christian Zeyen and Ralph Bergmann   
  An Overview and Comparison of Case-Based Reasoning Frameworks 
 Eric Astier, Hugo Iopeti, Jean Lieber, Hugo Mathieu Steinbach and Ludovic Yvoz   
  Case-Based Cleaning of Text Images 
 Jakob Michael Schoenborn and Klaus-Dieter Althoff   
  A Multi-agent Case-based Reasoning Intrusion Detection System Prototype 
 Poster Sessions - Chaired by Kyle Martin 
 David Menager and Dongkyu Choi   
  Hybrid Event Memory as a Case Base for State Estimation in Cognitive Agents 
 Yuejia Wu and Jian-Tao Zhou   
  A Contextual Information-augmented Probabilistic Case-based Reasoning Model for Knowledge Graph Reasoning 
 Andreas Korger and Joachim Baumeister   
  Case-based Sample Generation using Multi-Armed Bandits 
 Moisés F. Valdez-Ávila, Carlos Bermejo-Sabbagh, Belen Diaz-Agudo, Mauricio Gabriel Orozco-Del- Castillo and Juan A. Recio-Garcia   
  Case-based Explanation for Time Series Forecasting Models 
 Emmanuel Nauer, Jean Lieber and Mathieu d'Aquin   
  Lazy Adaptation Knowledge Learning based on Frequent Closed Itemsets 
 Yi Yang, Xinjun Mao and Menghan Wu   
  An Integrated Approach to Predicting the Influence of Reputation Mechanisms on Q&A Communities 
 Álvaro Sanz-Ramos, Luis Ariza-López, Cristina Montón-Giménez and Antonio A. Sánchez-Ruiz   
  Retrieval of similar cases to improve the diagnosis of diabetic retinopathy 
 Rian Dolphin, Barry Smyth and Ruihai Dong   
  A Case-Based Reasoning Approach to Company Sector Classification Using a Novel Time-Series Case Representation 

 General dates 
 Paper Submission: | April 14th  April 24th, 2023 
 Paper Notification: | May 26th, 2023 
 Camera Ready Copy: | June 2nd, 2023 
 Conference Timing: | July 17th-20th, 2023 
 Workshop dates 
 Proposal Submission: | February 28th, 2023 
 Proposal Notification: | March 14th, 2023 
 Paper Submission: | June 2nd, 2023 
 Paper Notification: | June 16th, 2023 
 Camera Ready Copy: | June 26th, 2023 
 Workshop Timing: | July 17th, 2023 
 Doctoral Consortium Dates 
 Submission Deadline: | May 22nd, 2023 
 Notification: | June 12th, 2023 
 Camera Ready Copy: | June 26th, 2023 
 DC Timing: | July 17th, 2023 

 © 2017–2022 ICCBR 23. ·

80. Broadnets_1 conference:
Open Menu  Home 
  Committees | Steering Committee 
  Organizing Committee 
  Technical Program Committee 
  Registration 
  Program | Accepted papers 
  Submission | Camera-ready Submission (Confy+) 
  Calls | Call for Papers 
  Practical Info | Paper Presentation Recording Instructions 
  Visas 
  Zoom Meeting guide 
  Sponsorship 
  Help & Contact | Help & Contact 
  Cookie Policy 

 Home 
  Committees | Steering Committee 
  Organizing Committee 
  Technical Program Committee 
  Registration 
  Program | Accepted papers 
  Submission | Camera-ready Submission (Confy+) 
  Calls | Call for Papers 
  Practical Info | Paper Presentation Recording Instructions 
  Visas 
  Zoom Meeting guide 
  Sponsorship 
  Help & Contact | Help & Contact 
  Cookie Policy 
   
 |      

 EAI BROADNETS  2022 was held as  a fully-fledged online conference   .   

 EAI BROADNETS 2022 – 13th EAI International Conference on Broadband Communications, Networks, and Systems   
   
 March 12-13, 2023  
  Harbin, People’s Republic of China  
  New conference dates  
  EAI BROADNETS is a top-ranked  
  conference venue for researchers:  
  CORE conference ranking: B   .  
 BROADNETS authors have enjoyed  
  over 6000+   citations   
    
 THANK YOU FOR PARTICIPATING IN BROADNETS 2022!  

  Thank you for participating   
 Thank you for participating in Broadnets 2022!   
   
 Next edition   

 Call for papers light w/ Springer   
 Call for papers    
   
 Indexing - Submitted for inclusion in:   
   
 Web of Science, Compendex, Scopus,  
  EU Digital Library, Google Scholar, DBLP, and more   
   
 Publication   
   
 Wireless Networks (WINET) Journal [IF: 2.602 (2020)]    
   
 EAI Endorsed Transactions on Scalable Information Systems    
   
 EAI Endorsed Transactions on Mobile Communications and Applications    
   
 EAI/Springer Innovations in Communications and Computing Book Series    
   
 Learn more   

 Publishing partner   

 EAI Index   
 Get the recognition you deserve  
  with EAI Index:   
   
 - The first open and transparent way of recognizing great researchers worldwide   
   
 - Credits are awarded to all authors based on review, but regardless of acceptance   
   
 - Members with top 0.1% EAI Index at the end of the year will become EAI Fellows   
   
 Find out more  about EAI Index  

 Paper Submission is now open for the 13th edition of BROADNETS! Check out the Call for Papers  .    
 Take a look back at the previous edition of BROADNETS here  .    
 BROADNETS 2022 supports revolutionary EAI Community Review, find out more here  .    
 Every author receives EAI Index credits – regardless of acceptance. Learn more about EAI’s Recognition Program here  .    
 Get real feedback on your presentation from other registrants via EAI Compass.    

 Welcome to the EAI Community    
 Let the EAI Community help you build your career with collaborative research, objective evaluation, and fair recognition:  
 Extra visibility for your paper and fair review → | Community Review 
  Get credits to receive membership ranks and global recognition → | EAI Index 
  Real-time evaluation and feedback on your presentation on-site → | EAI Compass 

  Proceedings   
 Update:  Proceedings have been published in SpringerLink Digital Library  .  

  About BROADNETS 2022   
 Compared with 4G, 5G has the characteristics of higher speed, lower latency and wider coverage. The most important breakthrough of 5G is to expand the communication between people to the communication between people and things, and between things. It opens the era of the Internet of Everything. The technical characteristics and application scenarios of 5G make it an important engine for the development of the digital economy. Digital transformation continues to extend from manufacturing to construction, energy, transportation, medical care, smart cities and other fields. New models and formats such as 5G+ autonomous driving, 5G+ smart grid, and 5G+ distance education are emerging. The smooth experience promotes the in-depth use of 5G users in mobile video, social networking and other fields. Short video has become the TOP1 application of 5G. The scope of this conference is the 5G-enabled digital society. As one of the important infrastructures of the digital economy, some important progresses in key technologies have been made for 5G network . For different digital social scenarios, key technologies, scenarios and practical application systems derived from the combination of 5G, big data, cloud computing, and artificial intelligence technologies. In addition, 5G network and information security for the digital society is also one of the focuses of this conference.The conference seeks innovative research works in the following areas, but are not limited to,5G/6G and Use cases of 5G/6G systemSoftware defined networking-enabled system Internet of Things (IoT)-enabled Smart Systems Cloud-to-things system Edge cooperative computing Fog computing Vehicle networks Smart City Smart Grid Digital twin sDistributed systems security Trust Access Control Data privacy and integrity  

  Topics   
 The conference seeks innovative research works in the following areas, but are not limited to:  
 5G/6G and Use cases of 5G/6G systems 
  Software defined networking-enabled system 
  Internet of Things (IoT)-enabled Smart Systems 
  Cloud-to-things system 
  Edge cooperative computing Fog computing 
  Vehicle networks 
  Smart City Smart Grid 
  Digital twin sDistributed systems security 
  Trust Access Control 
  Data privacy and integrity 

  Publication   
 All registered papers will be submitted for publishing by Springer  and made available through SpringerLink Digital Library: BROADNETS Conference Proceedings  .  
 Proceedings will be submitted for inclusion in leading indexing services, such as Web of Science, Compendex, Scopus, DBLP, EU Digital Library, Google Scholar, IO-Port, MathSciNet, Inspec, and Zentralblatt MATH.   
 Authors of selected best accepted and presented papers will be invited to submit an extended version to:  
 Wireless Networks (WINET) Journal [IF: 2.602 (2020)] 
  All accepted authors are eligible to submit an extended version in a fast track of:  
 EAI Endorsed Transactions on Scalable Information Systems (Open Access) | – indexed in | ESCI, Ei Compendex & Scopus 
  EAI Endorsed Transactions on Mobile Communications and Applications (Open Access) 
  Additional publication opportunities:  
 EAI/Springer Innovations in Communications and Computing Book Series | (titles in this series are indexed in Ei Compendex, Web of Science & Scopus) 

  About EAI   
 This event is organized by EAI  .  
   
  EAI – European Alliance for Innovation is a non-profit organization and a professional community established in cooperation with the European Commission to empower the global research and innovation, and to promote cooperation between European and International ICT communities.  
   
  EAI’s vision  is to foster excellence in research and innovation on the principles of transparency, objectivity, equality, and openness. Our guiding principle is community cooperation to create better research, provide fair recognition of excellence and transform best ideas into commercial value proposition.  
   
  EAI‘s mission  is to create an environment that rewards excellence transparently, and builds recognition objectively regardless of age, economic status or country of origin, where no membership fees or closed door committees stand in the way of your research career.  
   
  Through these shared values, EAI leads the way toward advancing the world of research and innovation, empowering individuals and institutions for the good of society to fully benefit from the digital revolution.  

 Important dates  
 Full Paper Submission deadline   
  16 December 2022  
  Notification deadline   
  23 December 2022  
  Camera-ready deadline   
  23 February 2023  
  Start of Conference   
  12 March 2023  
  End of Conference   
  13 March 2023  
   
 Previous BROADNETS editions  
 2021  – Virtual conference  
  2020  – Virtual conference  
  2019  – Xi`an, People’s Republic of China  
  2018  – Faro, Portugal  
  2010  – Athens, Greece  
  2009  – Madrid, Spain  
  2008  – London, Great Britain  
  2007  – Raleigh, North Carolina, United States  
  2006  – San Jose, California, United States  
  2005  – Boston, Massachusetts, United States  
  2004  – San Jose, California, United States  
   
 Sponsors  

 This event is a part of  
 EAI Conference series   

 Become an EAI Member   
 Join for free    

 Follow us   

 © 2022 BROADNETS | EAI   

 Manage Cookie Consent   

 To provide the best experiences, we use technologies like cookies to store and/or access device information. Consenting to these technologies will allow us to process data such as browsing behavior or unique IDs on this site. Not consenting or withdrawing consent, may adversely affect certain features and functions.   
 Functional   Functional    Always active       The technical storage or access is strictly necessary for the legitimate purpose of enabling the use of a specific service explicitly requested by the subscriber or user, or for the sole purpose of carrying out the transmission of a communication over an electronic communications network.    
  Preferences   Preferences         The technical storage or access is necessary for the legitimate purpose of storing preferences that are not requested by the subscriber or user.    
  Tracking   Tracking         The technical storage or access that is used exclusively for statistical purposes.  Technical storage or access that is used solely for the purpose of tracking users on a website or across several websites. The data is not shared with third parties.    
  Marketing   Marketing         The technical storage or access is required to create user profiles to send advertising, or to track the user on a website or across several websites for similar marketing purposes.    

 Manage options  Manage services  Manage {vendor_count} vendors  Read more about these purposes    
   
 Accept  Deny  View preferences  Save preferences  View preferences    
 {title}  {title}  {title}    

 Manage consent

81. ICCBR_2 conference:
Menu 

 Menu  
 Home 
  Contact 
   
 The International Conference on Case-Based Reasoning (ICCBR)  
 Welcome to the International Conference on Case-Based Reasoning (ICCBR). On these pages you can find an overview of past and future conferences of the Case-Based Reasoning research community.  
 The next conference  will take place in Biarritz, France between June 30 - July 3rd 2025.  
  
 Past Conferences  
 The proceedings from past conferences are available via our publisher Springer  .  
   ICCBR 2024  
 Merida, Mexico  
 1 Jul - 4 Jul 2024  

   ICCBR 2023  
 Aberdeen, Scotland  
 17 Jul - 20 Jul 2023  

   ICCBR 2022  
 Nancy, France  
 12 Sep - 15 Sep 2022  

   ICCBR 2021  
 Salamanca, Spain/Online  
 13 Sep - 16 Sep 2021  

   ICCBR 2020  
 Salamanca, Spain/Online  
 8 Jun - 12 Jun 2020  

   ICCBR 2019  
 Otzenhausen, Germany  
 8 Sep - 12 Sep 2019  

   ICCBR 2018  
 Stockholm, Sweden  
 10 Jul - 12 Jul 2018  

   ICCBR 2017  
 Trondheim, Norway  
 26 Jun - 28 Jun 2017  

   ICCBR 2016  
 Atlanta, Georgia, USA  
 31 Oct - 2 Nov 2016  

   ICCBR 2015  
 Frankfurt am Main, Germany  
 28 Sep - 30 Sep 2015  

   ICCBR 2014  
 Cork, Ireland  
 29 Sep - 1 Oct 2014  

   ICCBR 2013  
 Saragota Springs, NY, USA  
 8 Jul - 11 Jul 2013  

   ICCBR 2012  
 Lyon, France  
 3 Sep - 6 Sep 2012  

   ICCBR 2011  
 London, UK  
 12 Sep - 15 Sep 2011  

   ICCBR 2010  
 Alessandria, Italy  
 19 Jul - 22 Jul 2010  

   ICCBR 2009  
 Seattle, WA, USA  
 20 Jul - 23 Jul 2009  

   ICCBR 2007  
 Belfast, Ireland  
 13 Aug - 16 Aug 2007  

   ICCBR 2005  
 Chicago, IL, USA  
 23 Aug - 26 Aug 2005  

   ICCBR 2003  
 Trondheim, Norway  
 23 Jun - 26 Jun 2003  

   ICCBR 2001  
 Vancouver, BC, Canada  
 30 Jul - 2 Aug 2001  

   ICCBR 1999  
 Seeon Monastery, Germany  
 27 Sep - 30 Oct 1999  

 Follow | Subscribe  
 Twitter 
  Facebook 
  Mailing List 
   
 © ICCBR 2024. All rights reserved 
  Design: | HTML5 UP

82. ICAPS_3 conference:
Skip to main content  Skip to main navigation menu  Skip to site footer   
 Open Menu   Proceedings of the International Conference on Automated Planning and Scheduling    
   
  Current 
  Archives 
  About | About the Journal 
  Submissions 
  Privacy Statement 
  Contact 
    Search  Search      

 Login 
    
   Search  Search      

  Home | / 
  Archives | / 
  Vol. 33 (2023): Proceedings of the Thirty-Third International Conference on Automated Planning and Scheduling 
   
 Vol. 33 (2023): Proceedings of the Thirty-Third International Conference on Automated Planning and Scheduling  
   Edited by Sven Koenig, Roni Stern, Mauro Vallati   
  July 8–13, 2023, Prague, Czech Republic.  
 Published by AAAI Press, Palo Alto, California USA  
  Copyright © 2023, Association for the Advancement of Artificial Intelligence  
  1900 Embarcadero Road, Suite 101, Palo Alto, California 94303  
  All Rights Reserved  
  ISSN 2334-0843 (online)  
  ISSN 2334-0835 (print)  
  ISBN-10 1-57735-881-3  
  ISBN-13 978-1-57735-881-7  
 ICAPS 2023, the 33rd International Conference on Automated Planning and Scheduling, was held in Prague, Czech Republic, from July 8-13, 2023.  
 For 2023, ICAPS invited paper submissions related to the theory and applications of intelligent planning and scheduling technology. The papers included in this issue have been organized into four tracks — a main conference track and three special tracks, consisting of industry and applications, planning and learning, and robotics. This year, ICAPS 2023 was collocated with the International Symposium on Combinatorial Search (SoCS 2023) and the International Workshop on Planning & Scheduling for Space (IWPSS 2023).  
   
 Published:  2023-07-02    
   
 Frontmatter  
 Frontmatter   
 Roman Barták, Andrea Orlandini, Mauro Vallati, Sven Koenig, Roni Stern   PDF 
    
 Main Track  
 Falsification of Cyber-Physical Systems Using PDDL+ Planning   
 Diego Aineto, Enrico Scala, Eva Onaindia, Ivan Serina  2-6   PDF 
  Explainable Goal Recognition: A Framework Based on Weight of Evidence   
 Abeer Alshehri, Tim Miller, Mor Vered  7-16   PDF 
  Exploiting Geometric Constraints in Multi-Agent Pathfinding   
 Dor Atzmon, Sara Bernardini, Fabio Fagnani, David Fairbairn  17-25   PDF 
  W-restrained Bidirectional Bounded-Suboptimal Heuristic Search   
 Dor Atzmon, Shahaf S. Shperberg, Netanel Sabah, Ariel Felner, Nathan R. Sturtevant  26-30   PDF 
  Runahead A*: Speculative Parallelism for A* with Slow Expansions   
 Mohammad Bakhshalipour, Mohamad Qadri, Dominic Guri, Seyed Borna Ehsani, Maxim Likhachev, Phillip B. Gibbons  31-41   PDF 
  On Partial Satisfaction Planning with Total-Order HTNs   
 Gregor Behnke, David Speck, Michael Katz, Shirin Sohrabi  42-51   PDF 
  Convexity Hierarchies in Grid Networks   
 Johannes Blum, Ruoying Li, Sabine Storandt  52-60   PDF 
  Planning for Temporally Extended Goals in Pure-Past Linear Temporal Logic   
 Luigi Bonassi, Giuseppe De Giacomo, Marco Favorito, Francesco Fuggitti, Alfonso Emilio Gerevini, Enrico Scala  61-69   PDF 
  Landmark Progression in Heuristic Search   
 Clemens Büchner, Thomas Keller, Salomé Eriksson, Malte Helmert  70-79   PDF 
  Safety Shielding under Delayed Observation   
 Filip Cano Córdoba, Alexander Palmisano, Martin Fränzle, Roderick Bloem, Bettina Könighofer  80-85   PDF 
  Planning for Attacker Entrapment in Adversarial Settings   
 Brittany Cates, Anagha Kulkarni, Sarath Sreedharan  86-94   PDF 
  Sensitivity Analysis for Dynamic Control of PSTNs with Skewed Distributions   
 Rosy Chen, Yiran Ma, Siqi Wu, James C. Boerkoel Jr.  95-99   PDF 
  Grounding Planning Tasks Using Tree Decompositions and Iterated Solving   
 Augusto B. Corrêa, Markus Hecher, Malte Helmert, Davide Mario Longo, Florian Pommerening, Stefan Woltran  100-108   PDF 
  Automatic Metamorphic Test Oracles for Action-Policy Testing   
 Jan Eisenhut, Álvaro Torralba, Maria Christakis, Jörg Hoffmann  109-117   PDF 
  Operator Pruning Using Lifted Mutex Groups via Compilation on Lifted Level   
 Daniel Fišer  118-127   PDF 
  Cost Splitting for Multi-Objective Conflict-Based Search   
 Cheng Ge, Han Zhang, Jiaoyang Li, Sven Koenig  128-137   PDF 
  Efficient Evaluation of Large Abstractions for Decoupled Search: Merge-and-Shrink and Symbolic Pattern Databases   
 Daniel Gnad, Silvan Sievers, Álvaro Torralba  138-147   PDF 
  Planning over Integers: Compilations and Undecidability   
 Daniel Gnad, Malte Helmert, Peter Jonsson, Alexander Shleyfman  148-152   PDF 
  A Planning Approach to Repair Domains with Incomplete Action Effects   
 Alba Gragera, Raquel Fuentetaja, Ángel García-Olaya, Fernando Fernández  153-161   PDF 
  Model Checking for Adversarial Multi-Agent Reinforcement Learning with Reactive Defense Methods   
 Dennis Gross, Christoph Schmidl, Nils Jansen, Guillermo A. Pérez  162-170   PDF 
  Parallel Batch Processing for the Coating Problem   
 Matthias Horn, Emir Demirović, Neil Yorke-Smith  171-179   PDF 
  Planning with Multi-Agent Belief Using Justified Perspectives   
 Guang Hu, Tim Miller, Nir Lipovetzky  180-188   PDF 
  Deadline-Aware Multi-Agent Tour Planning   
 Taoan Huang, Vikas Shivashankar, Michael Caldara, Joseph Durham, Jiaoyang Li, Bistra Dilkina, Sven Koenig  189-197   PDF 
  Online Planning for Constrained POMDPs with Continuous Spaces through Dual Ascent   
 Arec Jamgochian, Anthony Corso, Mykel J. Kochenderfer  198-202   PDF 
  A Theory of Merge-and-Shrink for Stochastic Shortest Path Problems   
 Thorsten Klößner, Álvaro Torralba, Marcel Steinmetz, Silvan Sievers  203-211   PDF 
  Act-Then-Measure: Reinforcement Learning for Partially Observable Environments with Active Measuring   
 Merlijn Krale, Thiago D. Simão, Nils Jansen  212-220   PDF 
  Computing Domain Abstractions for Optimal Classical Planning with Counterexample-Guided Abstraction Refinement   
 Raphael Kreft, Clemens Büchner, Silvan Sievers, Malte Helmert  221-226   PDF 
  Using Simple Incentives to Improve Two-Sided Fairness in Ridesharing Systems   
 Ashwin Kumar, Yevgeniy Vorobeychik, William Yeoh  227-235   PDF 
  Domain-Independent Dynamic Programming: Generic State Space Search for Combinatorial Optimization   
 Ryo Kuroiwa, J. Christopher Beck  236-244   PDF 
  Solving Domain-Independent Dynamic Programming Problems with Anytime Heuristic Search   
 Ryo Kuroiwa, J. Christopher Beck  245-253   PDF 
  Exact Anytime Multi-Agent Path Finding Using Branch-and-Cut-and-Price and Large Neighborhood Search   
 Edward Lam, Daniel D. Harabor, Peter J. Stuckey, Jiaoyang Li  254-258   PDF 
  On Using Action Inheritance and Modularity in PDDL Domain Modelling   
 Alan Lindsay  259-267   PDF 
  Efficient Reasoning about Infeasible One Machine Sequencing   
 Raúl Mencía, Carlos Mencía, Joao Marques-Silva  268-276   PDF 
  A Best-First Search Algorithm for FOND Planning and Heuristic Functions to Optimize Decompressed Solution Size   
 Frederico Messa, André Grahl Pereira  277-285   PDF 
  Optimality Certificates for Classical Planning   
 Esther Mugdan, Remo Christen, Salomé Eriksson  286-294   PDF 
  A Column Generation Approach to Correlated Simple Temporal Networks   
 Andrew Murray, Ashwin Arulselvan, Michael Cashmore, Marc Roper, Jeremy Frank  295-303   PDF 
  The Small Solution Hypothesis for MAPF on Strongly Connected Directed Graphs Is True   
 Bernhard Nebel  304-313   PDF 
  Can They Come Together? A Computational Complexity Analysis of Conjunctive Possible Effects of Compound HTN Planning Tasks   
 Conny Olz, Pascal Bercher  314-323   PDF 
  Fixing Plans for PDDL+ Problems: Theoretical and Practical Implications   
 Francesco Percassi, Enrico Scala, Mauro Vallati  324-333   PDF 
  Planning in Multi-Agent Domains with Untruthful Announcements   
 Loc Pham, Tran Cao Son, Enrico Pontelli  334-342   PDF 
  An Efficient Hybrid Genetic Algorithm for the Quadratic Traveling Salesman Problem   
 Quang Anh Pham, Hoong Chuin Lau, Minh Hoàng Hà, Lam Vu  343-351   PDF 
  A Constraint Programming Solution to the Guillotine Rectangular Cutting Problem   
 Sergey Polyakovskiy, Peter J. Stuckey  352-360   PDF 
  Binary Branching Multi-Objective Conflict-Based Search for Multi-Agent Path Finding   
 Zhongqiang Ren, Jiaoyang Li, Han Zhang, Sven Koenig, Sivakumar Rathinam, Howie Choset  361-369   PDF 
  Lifted Stackelberg Planning   
 Philipp Sauer, Marcel Steinmetz, Robert Künnemann, Jörg Hoffmann  370-374   PDF 
  Robust Metric Hybrid Planning in Stochastic Nonlinear Domains Using Mathematical Optimization   
 Buser Say  375-383   PDF 
  Beyond Pairwise Reasoning in Multi-Agent Path Finding   
 Bojie Shen, Zhe Chen, Jiaoyang Li, Muhammad Aamir Cheema, Daniel D. Harabor, Peter J. Stuckey  384-392   PDF 
  Symmetry Detection and Breaking in Linear Cost-Optimal Numeric Planning   
 Alexander Shleyfman, Ryo Kuroiwa, J. Christopher Beck  393-401   PDF 
  Multi Agent Path Finding under Obstacle Uncertainty   
 Bar Shofer, Guy Shani, Roni Stern  402-410   PDF 
  Finding Matrix Multiplication Algorithms with Classical Planning   
 David Speck, Paul Höft, Daniel Gnad, Jendrik Seipp  411-416   PDF 
  Generalizing Action Justification and Causal Links to Policies   
 Sarath Sreedharan, Christian Muise, Subbarao Kambhampati  417-426   PDF 
  Planning with Multiple Action-Cost Estimates   
 Eyal Weiss, Gal A. Kaminka  427-437   PDF 
  Improving Zero-Shot Coordination Performance Based on Policy Similarity   
 Lebin Yu, Yunbo Qiu, Quanming Yao, Xudong Zhang, Jian Wang  438-442   PDF 
  Goal Recognition with Timing Information   
 Chenyuan Zhang, Charles Kemp, Nir Lipovetzky  443-451   PDF 
  Efficient Multi-Query Bi-Objective Search via Contraction Hierarchies   
 Han Zhang, Oren Salzman, Ariel Felner, T. K. Satish Kumar, Carlos Hernández Ulloa, Sven Koenig  452-461   PDF 
  Adaptation and Communication in Human-Robot Teaming to Handle Discrepancies in Agents’ Beliefs about Plans   
 Yuening Zhang, Brian Williams  462-471   PDF 
  Priority-Based Search for the Virtual Network Embedding Problem   
 Yi Zheng, Hang Ma, Sven Koenig, Erik Kline, T. K. Satish Kumar  472-480   PDF 
    
 Industry and Applications Track  
 Moving Trains like Pebbles: A Feasibility Study on Tree Yards   
 Issa K. Hanou, Mathijs M. de Weerdt, Jesse Mulderij  482-490   PDF 
  Solving the Multi-Choice Two Dimensional Shelf Strip Packing Problem with Time Windows   
 Matthias Horn, Emir Demirović, Neil Yorke-Smith  491-499   PDF 
  Automated Planning to Prioritise Digital Forensics Investigation Cases Containing Indecent Images of Children   
 Saad Khan, Simon Parkinson, Monika Roopak, Rachel Armitage, Andrew Barlow  500-508   PDF 
  Dynamic Weight Setting for Personnel Scheduling with Many Objectives   
 Lucas Kletzander, Nysret Musliu  509-517   PDF 
  Heuristic Search for Physics-Based Problems: Angry Birds in PDDL+   
 Wiktor Piotrowski, Yoni Sher, Sachin Grover, Roni Stern, Shiwali Mohan  518-526   PDF 
  Combining Heuristic Search and Linear Programming to Compute Realistic Financial Plans   
 Alberto Pozanco, Kassiani Papasotiriou, Daniel Borrajo, Manuela Veloso  527-531   PDF 
  Combining Clinical and Spatial Constraints into Temporal Planning to Personalize Physical Rehabilitation   
 Alessandro Umbrico, Marco Benadduci, Roberta Bevilacqua, Amedeo Cesta, Francesca Fracasso, Elvira Maranesi, Andrea Orlandini, Gabriella Cortellessa  532-540   PDF 
    
 Planning and Learning Track  
 Task Phasing: Automated Curriculum Learning from Demonstrations   
 Vaibhav Bajaj, Guni Sharon, Peter Stone  542-550   PDF 
  Imitation Improvement Learning for Large-Scale Capacitated Vehicle Routing Problems   
 Viet Bui, Tien Mai  551-559   PDF 
  Goal Recognition as a Deep Learning Task: The GRNet Approach   
 Mattia Chiari, Alfonso Emilio Gerevini, Francesco Percassi, Luca Putelli, Ivan Serina, Matteo Olivato  560-568   PDF 
  Exploration Policies for On-the-Fly Controller Synthesis: A Reinforcement Learning Approach   
 Tomás Delgado, Marco Sánchez Sorondo, Víctor Braberman, Sebastián Uchitel  569-577   PDF 
  Reinforcement Learning for Omega-Regular Specifications on Continuous-Time MDP   
 Amin Falah, Shibashis Guha, Ashutosh Trivedi  578-586   PDF 
  Deceptive Reinforcement Learning in Model-Free Domains   
 Alan Lewis, Tim Miller  587-595   PDF 
  Safe MDP Planning by Learning Temporal Patterns of Undesirable Trajectories and Averting Negative Side Effects   
 Siow Meng Low, Akshat Kumar, Scott Sanner  596-604   PDF 
  Automaton-Guided Curriculum Generation for Reinforcement Learning Agents   
 Yash Shukla, Abhishek Kulkarni, Robert Wright, Alvaro Velasquez, Jivko Sinapov  605-613   PDF 
  An End-to-End Reinforcement Learning Approach for Job-Shop Scheduling Problems Based on Constraint Programming   
 Pierre Tassel, Martin Gebser, Konstantin Schekotihin  614-622   PDF 
  Fast and Robust Resource-Constrained Scheduling with Graph Neural Networks   
 Florent Teichteil-Königsbuch, Guillaume Povéda, Guillermo González de Garibay Barba, Tim Luchterhand, Sylvie Thiébaux  623-633   PDF 
  Learning Local Heuristics for Search-Based Navigation Planning   
 Rishi Veerapaneni, Muhammad Suhail Saleem, Maxim Likhachev  634-638   PDF 
  Timed Partial Order Inference Algorithm   
 Kandai Watanabe, Georgios Fainekos, Bardh Hoxha, Morteza Lahijanian, Danil Prokhorov, Sriram Sankaranarayanan, Tomoya Yamaguchi  639-647   PDF 
    
 Robotics Track  
 Planning for Automated Testing of Implicit Constraints in Behavior Trees   
 Uwe Köckemann, Daniele Calisi, Guglielmo Gemignani, Jennifer Renoux, Alessandro Saffiotti  649-658   PDF 
  Understanding Natural Language in Context   
 Avichai Levy, Erez Karpas  659-667   PDF 
  Planning for Manipulation among Movable Objects: Deciding Which Objects Go Where, in What Order, and How   
 Dhruv Saxena, Maxim Likhachev  668-676   PDF 
  Approximating the Value of Collaborative Team Actions for Efficient Multiagent Navigation in Uncertain Graphs   
 Martina Stadler, Jacopo Banfi, Nicholas Roy  677-685   PDF 

 Information  
 For Readers 
  For Authors 
  For Librarians 

 Part of the  
  PKP Publishing Services Network 

  Copyright © 2019, Association for the Advancement of Artificial Intelligence. All rights reserved.

83. ICCBR_3 conference:
Skip to main content          
 Home  Research Outputs  People  Research Projects  Research Areas  RGU Orkney    
   
 Research Centres/Groups  Advanced Materials  Artificial Intelligence & Reasoning (AIR)  Composite Materials Manufacturing (CMM)  Computational Intelligence  Computational Intelligence (CI)  Computing Education  Curatorship  Cyber Physical Marine Systems  Cybersecurity  Energy Environment & Sustainability in Architecture  Energy, Sustainability & Society  Engineering - Energy  Environmental Engineering  Immersive Making  Instrumentation & Sensors  Integrated Marine Energy  Interactive Machine Vision  Net Zero Marine Operations  Project Management  Robotics & Autonomous Systems (RAS)  Small Business & Enterprise  Sustainable Energy (SE)  Sustainable Housing  The Scottish Centre for Evidence-based, Multi-professional Practice: A JBI Centre of Excellence.  Transparent Ocean    
   
 Browse  By Year  By Author  By Type    
   
 Download Statistics    
 About  OAI    

 Research Repository   
   
  All  Output  Person  Project     

  Advanced Search      

 Case-based reasoning research and development: proceedings of the 31st International conference on case-based reasoning (ICCBR 2023).  

 Home 
  Outputs 
   
 Contributors  
   
  Dr Stewart Massie   s.massie@rgu.ac.uk   
  Editor  

 Sutanu Chakraborti    
  Editor  

 Abstract  
 This volume contains the papers presented at the 31st International Conference on Case-Based Reasoning (ICCBR 2023), which was held on July 17–20, 2023, at Robert Gordon University in Aberdeen, Scotland, UK. ICCBR is the premier annual meeting of the Case-Based Reasoning (CBR) research community. The theme of ICCBR 2023 was "CBR in a Data-Driven World", with the aim of considering the question "What is the role of CBR in the modern data-driven world?" The conference encouraged submissions from our invited speakers, researchers, policy makers, and practitioners in the CBR community that consider the current challenges and opportunities for CBR.  
   
 Citation  
 MASSIE, S. and CHAKRABORTI, S. (eds.) 2023. Case-based reasoning research and development: proceedings of the 31st International conference on case-based reasoning (ICCBR 2023), 17-20 July 2023, Aberdeen, UK. Lecture notes in computer science, 14141. Cham: Springer [online]. Available from: https://doi.org/10.1007/978-3-031-40177-0  

 Presentation Conference Type | Edited Proceedings 
 Conference Name | 31st International conference on case-based reasoning (ICCBR 2023) 
 Start Date | Jul 17, 2023 
 End Date | Jul 20, 2023 
 Acceptance Date | Jun 16, 2023 
 Online Publication Date | Jul 29, 2023 
 Publication Date | Dec 31, 2023 
 Deposit Date | Oct 5, 2023 
 Publicly Available Date | Jul 30, 2024 
 Publisher | Springer 
 Peer Reviewed | Peer Reviewed 
 Series Title | Lecture notes in computer science 
 Series Number | 14141 
 Series ISSN | 0302-9743; 1611-3349 
 ISBN | 9783031401763 
 DOI | https://doi.org/10.1007/978-3-031-40177-0 
 Keywords | Case-based reasoning; Deep learning; Explainable AI; Artificial intelligence 
 Public URL | https://rgu-repository.worktribe.com/output/2029535 
 Additional Information | The file accompanying this record is a representative extract. The full work can be purchased from the publisher's website: https://doi.org/10.1007/978-3-031-40177-0 

 Files  
 MASSIE 2023 Case-based reasoning (EXTRACT)  (156 Kb)   
  PDF   
   Download    Preview    

  Themes  
 Living in a Digital World 

  You might also like  
 Employing multi-modal sensors for personalised smart home health monitoring.   (2022)   
  Thesis  

 Angles of vision: digital storytelling on the cosmic tide?   (2021)   
  Report  

 Personalised exercise recognition towards improved self-management of musculoskeletal disorders.   (2021)   
  Thesis  

 The folklore-centric gaze: a relational approach to landscape, folklore and tourism.   (2020)   
  Journal Article  

 Representation and learning schemes for argument stance mining.   (2019)   
  Thesis  

  Downloadable Citations  
   HTML  

   BIB  

   RTF  

 OpenAIR@RGU  Powered by Worktribe  | Accessibility   

 About OpenAIR@RGU  
    
 Administrator e-mail: publications@rgu.ac.uk   
  
  This application uses the following open-source libraries:  
  
  SheetJS Community Edition  
 Apache License Version 2.0 ( http://www.apache.org/licenses/  )  
  
  PDF.js  
 Apache License Version 2.0 ( http://www.apache.org/licenses/  )  
  
  Font Awesome  
 SIL OFL 1.1 ( http://scripts.sil.org/OFL  )  
 MIT License ( http://opensource.org/licenses/mit-license.html  )  
 CC BY 3.0 ( http://creativecommons.org/licenses/by/3.0/  )  

 Powered by Worktribe   © 2024  

 Advanced Search  
    
  RGU Repository ID    
   
 Title  all of  any of     

 Name    
   
 Year    
   
 Keywords  all of  any of     

 Schools and Departments     
   
 Type  Book  Book Chapter  Conference Proceeding  Data  Dataset  Digital Artefact  Exhibition / Performance  Journal Article  Newspaper / Magazine  Other  Patent  Physical Artefact  Preprint / Working Paper  Presentation / Conference  Presentation / Conference Contribution  Report  Thesis  Working Paper     
   
 Publication Status  Submitted  Accepted  In Press  Published  Unpublished     
   
 Journal or Publication Title  all of  any of     

 Order the results  By last modified (most recent first)  By last modified (oldest first)  By year (most recent first)  By year (oldest first)  By title     

 Search

84. Broadnets_2 conference:
Skip to main content    Open Daily: 10am - 10pm | Alley door pickup 10am - 7pm   3038 Hennepin Ave Minneapolis, MN   
  612-822-4611    
 Menu 
  Location 
    
 Sign-In 
  Cart 
        
 Home 
  Browse Books | Back 
  Art | Back 
  All Art 
  Antiques & Collectibles | Back 
  All Antiques & Collectibles 
  Art 
  Coins 
  Furniture 
  General Antiques & Collectibles 
  Glass & Ceramics 
  Jewelry 
  Records 
  Sports 
  Stamps 
  Textiles & Costume 
  Toys 
  Transportation 
  Architecture | Back 
  All Architecture 
  Architects 
  Architecture History 
  General Architecture 
  Landscape Architecture 
  Regional Architecture 
  Art Criticism & Theory 
  Art General | Back 
  All Art General 
  Art & Popular Culture 
  Body Art & Tattooing 
  Ceramics 
  Conceptual Art 
  Film & Video Art 
  Folk & Outsider Art 
  General Art 
  Graffiti & Street Art 
  Individual Artists 
  Performance Art 
  Printmaking 
  Sculpture & Installation 
  Art History 
  Art Instruction | Back 
  All Art Instruction 
  Business of Art 
  Color 
  Conservation & Preservation 
  Drawing Instruction 
  General Art Instruction 
  Painting Instruction 
  Printmaking 
  Sculpting 
  Design | Back 
  All Design 
  Fashion & Accessories 
  Furniture Design 
  General Design 
  Graphic Design 
  Illustration 
  Industrial Design 
  Interior Design 
  Typography & Calligraphy 
  Photography | Back 
  All Photography 
  General Photography 
  Photographers 
  Photography Anthologies 
  Photography History & Criticism 
  Photography Instruction 
  Regional Art | Back 
  All Regional Art 
  African Art 
  American Art - African American & Black 
  American Art - Asian-American 
  American Art - General 
  American Art - Hispanic & Latino 
  Asian Art 
  Australian & Oceanian Art 
  Canadian Art 
  Caribbean, Latin American & South American Art 
  Chinese Art 
  European Art 
  Indian & South Asian Art 
  Indigenous Art of the Americas 
  Japanese Art 
  Middle Eastern Art 
  Russian & Former Soviet Union Art 
  Biography & Autobiography | Back 
  All Biography & Autobiography 
  Adventurers & Explorers 
  Artists 
  Athletes 
  Aviation & Nautical 
  Biographies General 
  Business Biographies 
  Culinary Biographies 
  Entertainment & Performing Arts 
  Fashion Biographies 
  Historical Figures 
  Literary Figures 
  Military Biographies 
  Musicians 
  Political Biographies 
  Presidents & Heads of State 
  Religious Biographies 
  Business & Economics | Back 
  All Business & Economics 
  Accounting 
  Business General 
  Careers 
  Economics 
  Investing & Finance 
  Labor 
  Management 
  Marketing 
  Personal Finance 
  Real Estate 
  Crafts & Hobbies | Back 
  All Crafts & Hobbies 
  Crafts General 
  Holiday & Seasonal Crafts 
  Jewelry 
  Metal Work 
  Papercrafts | Back 
  All Papercrafts 
  Book Making 
  General Papercrafts 
  Origami 
  Printmaking & Stamping 
  Scrapbooking 
  Pottery & Ceramics 
  Textiles & Needlework | Back 
  All Textiles & Needlework 
  Baskets 
  Beading 
  Crocheting 
  Dye 
  General Needlework 
  Knitting 
  Quilting 
  Rugs 
  Sewing 
  Textiles 
  Weaving & Spinning 
  Toys & Models 
  Woodworking | Back 
  All Woodworking 
  Carving 
  Furniture & Cabinetry 
  General Wookworking 
  Food & Cooking | Back 
  All Food & Cooking 
  Baking 
  Beverages | Back 
  All Beverages 
  Beer 
  Coffee & Tea 
  General Beverages 
  Juices & Smoothies 
  Liquor 
  Non-Alcoholic 
  Wine 
  Canning & Preserving 
  Children's Cooking | Back 
  All Children's Cooking 
  Baby Food 
  Cooking for Children 
  Cooking with Children 
  Cookbooks General 
  Cooking with Appliances 
  Desserts 
  Dieting 
  Entertaining 
  Food Writing 
  Grilling 
  Holiday Cooking 
  Quick & Easy Cooking 
  Regional Cooking | Back 
  All Regional Cooking 
  African Cooking 
  American Cooking 
  Asian Cooking General 
  Australian & Oceanian Cooking 
  Cajun & Creole Cooking 
  Caribbean & West Indian Cooking 
  Central American & South American Cooking 
  Chinese Cooking 
  French Cooking 
  General Regional Cooking 
  German Cooking 
  Greek Cooking 
  Hungarian Cooking 
  Indian & South Asian Cooking 
  Indigenous Food of the Americas 
  Irish Cooking 
  Italian Cooking 
  Japanese Cooking 
  Jewish & Kosher Cooking 
  Korean Cooking 
  Mediterranean Cooking 
  Mexican Cooking 
  Middle Eastern Cooking 
  Midwest Cooking 
  Polish Cooking 
  Portugese Cooking 
  Russian Cooking 
  Scandinavian Cooking 
  Soul Food 
  Southeast Asian Cooking 
  Spanish Cooking 
  Thai Cooking 
  Turkish Cooking 
  Vietnamese Cooking 
  Special Diets | Back 
  All Special Diets 
  Allergies 
  Diabetic & Sugar Free 
  General Special Diets 
  Gluten-Free 
  Heart Healthy 
  Low Carbohydrate 
  Low Cholesterol 
  Low Fat 
  Low Salt 
  Raw Food 
  Specific Dishes | Back 
  All Specific Dishes 
  Appetizers 
  Pizza 
  Salads 
  Sandwiches 
  Sauces & Dressings 
  Soups & Stews 
  Specific Ingredients | Back 
  All Specific Ingredients 
  Chocolate 
  Dairy 
  Fruits & Vegetables 
  Grains & Pasta 
  Herbs, Spices, Oils, Peppers, Nuts 
  Meat & Seafood 
  Vegetarian & Vegan | Back 
  All Vegetarian & Vegan 
  Vegan 
  Vegetarian 
  Games & Activities | Back 
  All Games & Activities 
  Card & Board Games | Back 
  All Card & Board Games 
  Backgammon 
  Bridge 
  Chess 
  General Board Games 
  General Card Games 
  Coloring & Activity Books 
  Fantasy Sports 
  Gambling | Back 
  All Gambling 
  Blackjack 
  General Gambling 
  Poker 
  Racing 
  Games & Activities General 
  Magic 
  Puzzles & Activities | Back 
  All Puzzles & Activities 
  Crosswords 
  Logic & Brain Teasers 
  Puzzles 
  Sudoku 
  Word Search 
  Role Playing Games 
  Gifts & Stationery | Back 
  All Gifts & Stationery 
  Apparel 
  Gifts & Stationery General 
  Jigsaw Puzzles 
  Journals & Sketchbooks 
  Notecards 
  Toys 
  Graphic Novels | Back 
  All Graphic Novels 
  Comics 
  Graphic Novels | Back 
  All Graphic Novels 
  General Graphic Novels 
  Superheroes 
  Manga | Back 
  All Manga 
  Erotica & Hentai 
  General Manga 
  Isekai 
  Yaoi 
  Yuri 
  Health & Fitness | Back 
  All Health & Fitness 
  Aging & Elder Care 
  Alternative Health | Back 
  All Alternative Health 
  Acupressure & Acupuncture 
  Bodywork 
  Cannabis & CBD 
  Crystals 
  Energy Healing 
  General Alternative Health 
  Meditation 
  Plant Based Remedies 
  Tai Chi 
  Beauty 
  Diet & Nutrition 
  Fitness | Back 
  All Fitness 
  Bodybuilding & Weight Training 
  Cycling 
  General Fitness 
  Martial Arts 
  Pilates 
  Running & Jogging 
  Yoga 
  Health General 
  Medical Reference 
  Men's Health 
  Psychology | Back 
  All Psychology 
  Abuse 
  Addiction & Recovery 
  Child Psychology 
  Cognition 
  Death & Dying 
  Dreams 
  General Psychology 
  Mental Health 
  Relationships 
  Self-Help 
  Sexuality 
  Public Health 
  Specific Conditions | Back 
  All Specific Conditions 
  Allergies 
  Alzheimer's & Dementia 
  Attention Deficit Disorder (ADD-ADHD) 
  Autism Spectrum Disorders 
  Autoimmune Disorders 
  Cancer 
  Chronic Fatigue Syndrome 
  Diabetes 
  Gastrointestinal Health 
  Genetic Conditions 
  Hearing & Speech 
  Heart Conditions 
  HIV & AIDS 
  Pain Management 
  Respiratory Conditions 
  Skin Diseases 
  Sleep Disorders 
  STDs 
  Women's Health 
  History | Back 
  All History 
  African History 
  Ancient History | Back 
  All Ancient History 
  Ancient Egypt 
  Ancient Greece 
  Ancient History General 
  Ancient Rome 
  Arctic History 
  Asian History | Back 
  All Asian History 
  Central Asian History 
  Chinese History 
  General Asian History 
  Indian & South Asian History 
  Japanese History 
  Korean History 
  Southeast Asian History 
  Australia & Oceania 
  Black American History 
  Canadian History 
  Caribbean History 
  European History | Back 
  All European History 
  Austrian & Hungarian History 
  Baltic History 
  British History 
  Eastern European History 
  French History 
  General European History 
  German History 
  Greek History 
  Holocaust 
  Irish History 
  Italian History 
  Polish History 
  Russian History 
  Scandinavian History 
  Spainish & Portuguese History 
  Latin American History | Back 
  All Latin American History 
  Central American History 
  General Latin American History 
  Mexican History 
  South American History 
  Medieval & Renaissance History 
  Middle Eastern History | Back 
  All Middle Eastern History 
  General Middle Eastern History 
  Iran History 
  Iraq History 
  Israel & Palestine History 
  Turkey & Ottoman Empire History 
  Military History | Back 
  All Military History 
  Afghan War (2001-2021) 
  Air Combat 
  Armed Forces 
  General Military History 
  Iraq War (2003-2011) 
  Korean War 
  Military Strategy 
  Napoleonic Wars 
  Naval History 
  Other Wars 
  Persian Gulf War (1991) 
  Vietnam War 
  War of 1812 
  Weaponry & Vehicles 
  Weapons of Mass Destruction 
  World War I 
  World War II 
  Native American History 
  United States History | Back 
  All United States History 
  19th Century United States History 
  20th Century United States History 
  21st Century United States History 
  Civil War Period (1850-1877) 
  Colonial Period (1600-1775) 
  General United States History 
  Regional: Middle Atlantic 
  Regional: Midwest 
  Regional: New England 
  Regional: Pacific Northwest 
  Regional: South 
  Regional: Southwest 
  Regional: West 
  Revolutionary Period (1775-1800) 
  World History | Back 
  All World History 
  Exploration 
  General World History 
  Historiography 
  House & Home | Back 
  All House & Home 
  Construction & Renovation | Back 
  All Construction & Renovation 
  Carpentry 
  Electrical 
  General Construction & Renovation 
  Masonry 
  Outdoors 
  Plumbing 
  Security 
  Tools & Workshop 
  Household Hints | Back 
  All Household Hints 
  Cleaning 
  Decorating 
  Feng Shui 
  Sustainable Living 
  Juvenile | Back 
  All Juvenile 
  Activity & Coloring Books 
  Juvenile Fiction | Back 
  All Juvenile Fiction 
  Animals 
  Art 
  Bedtime & Dreams 
  Biography 
  Chapter Books 
  Concepts 
  Early Readers 
  Fairy Tales & Folklore 
  Family 
  General Juvenile Fiction 
  History 
  Holiday 
  Horror 
  Mathematics 
  Performing Arts 
  Poetry 
  Religion 
  Science & Nature 
  Science Fiction 
  Sports & Recreation 
  Transportation 
  Juvenile Graphic Novels 
  Juvenile Nonfiction | Back 
  All Juvenile Nonfiction 
  Animals 
  Art & Architecture 
  Biography 
  Concepts 
  Crafts & Activities 
  Education 
  Games 
  General Juvenile Nonfiction 
  History 
  Holiday 
  Languages 
  Math & Computers 
  Performing Arts 
  Religion 
  Science & Nature 
  Self Help 
  Sports & Recreation 
  Transportation 
  Languages | Back 
  All Languages 
  African Languages | Back 
  All African Languages 
  Other African Languages 
  Swahili 
  Arabic 
  Celtic Languages 
  Chinese 
  Czech 
  Danish 
  Dutch 
  English as a Second Language 
  Foreign Language General 
  French 
  German 
  Greek (Modern) 
  Hebrew 
  Hindi 
  Hungarian 
  Indic Languages 
  Indigenous Languages of the Americas 
  Italian 
  Japanese 
  Korean 
  Latin 
  Miscellaneous Languages 
  Old & Middle English 
  Persian 
  Polish 
  Portuguese 
  Russian 
  Scandinavian Languages | Back 
  All Scandinavian Languages 
  Finnish 
  General Scandinavian Languages 
  Norwegian 
  Swedish 
  Sign Language 
  Slavic Languages | Back 
  All Slavic Languages 
  Other Slavic Languages 
  Serbian & Croatian 
  Spanish 
  Turkish & Turkic Languages 
  Vietnamese 
  Yiddish 
  Literature | Back 
  All Literature 
  Erotica 
  Fantasy 
  Fiction General | Back 
  All Fiction General 
  Classic Fiction 
  Fiction Anthologies 
  General Fiction 
  Historical Fiction 
  Literary Fiction 
  GLBTQIA Fiction | Back 
  All GLBTQIA Fiction 
  General GLBTQIA Fiction 
  GLBTQIA Erotica 
  Horror 
  Humor 
  Letters & Essays 
  Literary Criticism 
  Mystery & Thriller 
  Poetry | Back 
  All Poetry 
  General Poetry 
  Poetry Anthologies 
  Poetry Criticism 
  Romance 
  Science Fiction 
  Westerns 
  Metaphysical | Back 
  All Metaphysical 
  Astrology 
  Divination | Back 
  All Divination 
  Fortune Telling 
  General Divination 
  I Ching 
  Numerology 
  Palmistry 
  Tarot 
  Metaphysical General 
  Occult 
  Paranormal 
  Parapsychology 
  Secret Societies 
  Speculation 
  UFOs & Extraterrestrials 
  Parenting & Education | Back 
  All Parenting & Education 
  Education | Back 
  All Education 
  Bilingual Education 
  College Guides 
  General Education 
  Special Education 
  Teaching Instruction 
  Test Prep 
  Parenting | Back 
  All Parenting 
  Baby Care 
  General Parenting 
  Pregnancy & Adoption 
  Performing Arts | Back 
  All Performing Arts 
  Acting & Performing | Back 
  All Acting & Performing 
  Acting & Auditioning 
  Improvisation 
  Monologues & Scenes 
  Storytelling 
  Dance 
  Drama | Back 
  All Drama 
  Broadway & Musicals 
  General Drama 
  Play Anthologies 
  Plays 
  Playwriting 
  Shakespeare 
  Technical Theater 
  Theater History 
  Film | Back 
  All Film 
  Directors 
  Film Guides & Reference 
  Film Studies 
  Filmmaking 
  Screenplays 
  Screenwriting 
  Music | Back 
  All Music 
  Big Band & Swing 
  Blues & Soul 
  Christian Music 
  Classical Music 
  Country & Folk 
  Dance 
  Electronic 
  General Music 
  Gospel 
  Hip Hop 
  Jazz 
  Metal 
  Music Business 
  Music Reference 
  Opera 
  Pop/Rock 
  Punk 
  World Music 
  Music Instruction | Back 
  All Music Instruction 
  Conducting 
  Music Composition 
  Music Instruction: Brass 
  Music Instruction: General 
  Music Instruction: Guitar 
  Music Instruction: Percussion 
  Music Instruction: Piano 
  Music Instruction: Strings 
  Music Instruction: Wodwinds 
  Music Recording & Reproduction 
  Music Theory 
  Songwriting 
  Music Songbooks | Back 
  All Music Songbooks 
  General Songbooks 
  Guitar Songbooks 
  Music Scores 
  Piano Songbooks 
  Radio 
  Television 
  Philosophy | Back 
  All Philosophy 
  Reference | Back 
  All Reference 
  Atlases 
  Business of Writing 
  Consumer Reference 
  Dictionaries & Encyclopedias 
  Etiquette 
  Etymology 
  Genealogy & Heraldry 
  General Reference 
  Grammar & Style 
  Lexicography 
  Linguistics 
  Public Speaking & Speech Writing 
  Quotations 
  Symbolism 
  Thesauri 
  Weddings 
  Writing Instruction 
  Religion | Back 
  All Religion 
  Atheism & Agnosticism 
  Bibles | Back 
  All Bibles 
  Bible Studies 
  CEV 
  Children's Bibles 
  CSB 
  ESV 
  KJV 
  NAB 
  NASB 
  NCV 
  NIRV 
  NIV 
  NKJV 
  NLV 
  NRSV 
  Other Bible Translations 
  Christianity | Back 
  All Christianity 
  Catechisms 
  Catholicism 
  Christian Fiction 
  Christian Living 
  General Christianity 
  Prayerbooks 
  Comparative Religion 
  Eastern Religions | Back 
  All Eastern Religions 
  Buddhism 
  Confucianism 
  General Eastern Religions 
  Hinduism 
  Jainism 
  Shintoism 
  Sikhism 
  Taoism 
  Gnosticism 
  Indigenous Religions 
  Islam 
  Judaism 
  Religion General 
  Science & Nature | Back 
  All Science & Nature 
  Animals | Back 
  All Animals 
  Birds 
  Birdwatching 
  Dinosaurs 
  General Animals 
  Horses 
  Insects & Spiders 
  Marine Life 
  Other Animals 
  Pets: Birds 
  Pets: Cats 
  Pets: Dogs 
  Pets: Fish 
  Pets: General 
  Primates 
  Reptiles & Amphibains 
  Zoology 
  Computers | Back 
  All Computers 
  Applications 
  Computer Security 
  Databases 
  General Computers 
  Networking 
  Operating Systems 
  Programming 
  System Administration 
  Gardening | Back 
  All Gardening 
  Botany & Horticulture 
  Container Gardening 
  Edible Plants 
  Flowers 
  Garden Writing 
  General Gardening 
  Indoor Gardening 
  Japanese Gardens 
  Landscaping 
  Lawns, Trees, & Shrubs 
  Marijuana Cultivation 
  Midwest Gardening 
  Organic Gardening 
  Picture Gardens 
  Water Gardens 
  Mathematics | Back 
  All Mathematics 
  Algebra 
  Calculus 
  General Mathematics 
  Geometry 
  Logic 
  Pre-Calculus 
  Probability & Statistics 
  Trigonometry 
  Nature | Back 
  All Nature 
  Agriculture 
  Environmental Studies 
  General Nature 
  Nature Writing 
  Weather 
  Science | Back 
  All Science 
  Anatomy & Physiology 
  Astronomy & Space 
  Biology 
  Cartography 
  Chemistry 
  Evolution 
  General Science 
  Genetics 
  Geography 
  Geology 
  History & Philosophy of Science 
  Paleontology 
  Physics 
  Technology & Engineering 
  Social Sciences | Back 
  All Social Sciences 
  Anthropology 
  Archaeology 
  Gender Studies | Back 
  All Gender Studies 
  General Gender Studies 
  GLBTQIA Studies 
  Men's Studies 
  Women's Studies 
  Law | Back 
  All Law 
  Criminology 
  General Law 
  True Crime 
  Mythology & Folklore 
  Political Science | Back 
  All Political Science 
  General Political Science 
  International Relations 
  Social Movements 
  United States Politics 
  Racism & Ethnic Studies | Back 
  All Racism & Ethnic Studies 
  Asian American Studies 
  Black American Studies 
  General Racism & Ethnic Studies 
  Indigenous Studies 
  Latino Studies 
  Sociology | Back 
  All Sociology 
  General Sociology 
  Immigration & Refugees 
  Poverty & Social Work 
  Sports & Recreation | Back 
  All Sports & Recreation 
  Archery 
  Baseball & Softball 
  Basketball 
  Billiards 
  Bowling 
  Boxing 
  Camping 
  Fishing 
  Football 
  Golf 
  Gymnastics 
  Hiking & Climbing 
  Hunting 
  Motor Sports 
  Olympics & Paralympics 
  Racket Sports 
  Rock Climbing 
  Skateboarding 
  Soccer 
  Sports General 
  Tennis 
  Track & Field 
  Volleyball 
  Water Sports | Back 
  All Water Sports 
  Boating 
  Canoeing & Kayaking 
  General Water Sports 
  Rowing 
  Scuba & Snorkeling 
  Surfing 
  Swimming & Diving 
  Winter Sports | Back 
  All Winter Sports 
  Curling 
  General Winter Sports 
  Hockey 
  Ice Skating 
  Skiing 
  Snowboarding 
  Wrestling 
  Transportation | Back 
  All Transportation 
  Auto Repair 
  Automobiles 
  Aviation 
  Aviation Instruction 
  Boating 
  Motorcycles 
  Trains 
  Transportation General 
  Travel | Back 
  All Travel 
  Africa 
  Asia | Back 
  All Asia 
  China 
  General Asia 
  India & South Asia 
  Japan 
  Korea 
  Southeast Asia 
  Australia & Oceania 
  Canada 
  Caribbean & West Indies 
  Europe | Back 
  All Europe 
  Austria 
  Eastern Europe 
  France 
  General Europe 
  Germany 
  Great Britain 
  Greece 
  Iceland & Greenland 
  Ireland 
  Italy 
  Scandinavia 
  Spain & Portugal 
  Switzerland 
  Latin America | Back 
  All Latin America 
  Central America 
  Mexico 
  South America 
  Middle East | Back 
  All Middle East 
  Egypt 
  General Middle East 
  Israel 
  Turkey 
  Travel General 
  Travel Writing 
  United States | Back 
  All United States 
  General United States 
  Midwest 
  Northeast 
  South 
  West 
  Young Adult | Back 
  All Young Adult 
  Young Adult Fiction 
  Young Adult Graphic Novels 
  Young Adult Nonfiction 
  Signed Copies 
  M&Q Merch 
  Sell Your Books 
  Gift Cards 
  About Us | Back 
  About Us 
  Directions 
  Help/FAQ 
  Employment 
  Books Blog 
  Schools & Business 
  Contact Us 
  Newsletter Sign Up 
  Sign-In 
  Cart 
   
 Open Daily: 10am - 10pm  
  Alley-side Pickup: 10am - 7pm | 3038 Hennepin Ave Minneapolis, MN  
  612-822-4611 

 Browse Books | Art  Biography & Autobiography  Business & Economics  Crafts & Hobbies  Food & Cooking  Games & Activities  Gifts & Stationery  Graphic Novels  Health & Fitness  History  House & Home  Juvenile  Languages  Literature  Metaphysical  Parenting & Education  Performing Arts  Philosophy  Reference  Religion  Science & Nature  Social Sciences  Sports & Recreation  Transportation  Travel  Young Adult  Show All Categories   All Art  Antiques & Collectibles  Architecture  Art Criticism & Theory  Art General  Art History  Art Instruction  Design  Photography  Regional Art   All Antiques & Collectibles 
  Art 
  Coins 
  Furniture 
  General Antiques & Collectibles 
  Glass & Ceramics 
  Jewelry 
  Records 
  Sports 
  Stamps 
  Textiles & Costume 
  Toys 
  Transportation 
   All Architecture 
  Architects 
  Architecture History 
  General Architecture 
  Landscape Architecture 
  Regional Architecture 
   All Art General 
  Art & Popular Culture 
  Body Art & Tattooing 
  Ceramics 
  Conceptual Art 
  Film & Video Art 
  Folk & Outsider Art 
  General Art 
  Graffiti & Street Art 
  Individual Artists 
  Performance Art 
  Printmaking 
  Sculpture & Installation 
   All Art Instruction 
  Business of Art 
  Color 
  Conservation & Preservation 
  Drawing Instruction 
  General Art Instruction 
  Painting Instruction 
  Printmaking 
  Sculpting 
   All Design 
  Fashion & Accessories 
  Furniture Design 
  General Design 
  Graphic Design 
  Illustration 
  Industrial Design 
  Interior Design 
  Typography & Calligraphy 
   All Photography 
  General Photography 
  Photographers 
  Photography Anthologies 
  Photography History & Criticism 
  Photography Instruction 
   All Regional Art 
  African Art 
  American Art - African American & Black 
  American Art - Asian-American 
  American Art - General 
  American Art - Hispanic & Latino 
  Asian Art 
  Australian & Oceanian Art 
  Canadian Art 
  Caribbean, Latin American & South American Art 
  Chinese Art 
  European Art 
  Indian & South Asian Art 
  Indigenous Art of the Americas 
  Japanese Art 
  Middle Eastern Art 
  Russian & Former Soviet Union Art 
      All Biography & Autobiography  Adventurers & Explorers  Artists  Athletes  Aviation & Nautical  Biographies General  Business Biographies  Culinary Biographies  Entertainment & Performing Arts  Fashion Biographies  Historical Figures  Literary Figures  Military Biographies  Musicians  Political Biographies  Presidents & Heads of State  Religious Biographies      All Business & Economics  Accounting  Business General  Careers  Economics  Investing & Finance  Labor  Management  Marketing  Personal Finance  Real Estate      All Crafts & Hobbies  Crafts General  Holiday & Seasonal Crafts  Jewelry  Metal Work  Papercrafts  Pottery & Ceramics  Textiles & Needlework  Toys & Models  Woodworking   All Papercrafts 
  Book Making 
  General Papercrafts 
  Origami 
  Printmaking & Stamping 
  Scrapbooking 
   All Textiles & Needlework 
  Baskets 
  Beading 
  Crocheting 
  Dye 
  General Needlework 
  Knitting 
  Quilting 
  Rugs 
  Sewing 
  Textiles 
  Weaving & Spinning 
   All Woodworking 
  Carving 
  Furniture & Cabinetry 
  General Wookworking 
      All Food & Cooking  Baking  Beverages  Canning & Preserving  Children's Cooking  Cookbooks General  Cooking with Appliances  Desserts  Dieting  Entertaining  Food Writing  Grilling  Holiday Cooking  Quick & Easy Cooking  Regional Cooking  Special Diets  Specific Dishes  Specific Ingredients  Vegetarian & Vegan   All Beverages 
  Beer 
  Coffee & Tea 
  General Beverages 
  Juices & Smoothies 
  Liquor 
  Non-Alcoholic 
  Wine 
   All Children's Cooking 
  Baby Food 
  Cooking for Children 
  Cooking with Children 
   All Regional Cooking 
  African Cooking 
  American Cooking 
  Asian Cooking General 
  Australian & Oceanian Cooking 
  Cajun & Creole Cooking 
  Caribbean & West Indian Cooking 
  Central American & South American Cooking 
  Chinese Cooking 
  French Cooking 
  General Regional Cooking 
  German Cooking 
  Greek Cooking 
  Hungarian Cooking 
  Indian & South Asian Cooking 
  Indigenous Food of the Americas 
  Irish Cooking 
  Italian Cooking 
  Japanese Cooking 
  Jewish & Kosher Cooking 
  Korean Cooking 
  Mediterranean Cooking 
  Mexican Cooking 
  Middle Eastern Cooking 
  Midwest Cooking 
  Polish Cooking 
  Portugese Cooking 
  Russian Cooking 
  Scandinavian Cooking 
  Soul Food 
  Southeast Asian Cooking 
  Spanish Cooking 
  Thai Cooking 
  Turkish Cooking 
  Vietnamese Cooking 
   All Special Diets 
  Allergies 
  Diabetic & Sugar Free 
  General Special Diets 
  Gluten-Free 
  Heart Healthy 
  Low Carbohydrate 
  Low Cholesterol 
  Low Fat 
  Low Salt 
  Raw Food 
   All Specific Dishes 
  Appetizers 
  Pizza 
  Salads 
  Sandwiches 
  Sauces & Dressings 
  Soups & Stews 
   All Specific Ingredients 
  Chocolate 
  Dairy 
  Fruits & Vegetables 
  Grains & Pasta 
  Herbs, Spices, Oils, Peppers, Nuts 
  Meat & Seafood 
   All Vegetarian & Vegan 
  Vegan 
  Vegetarian 
      All Games & Activities  Card & Board Games  Coloring & Activity Books  Fantasy Sports  Gambling  Games & Activities General  Magic  Puzzles & Activities  Role Playing Games   All Card & Board Games 
  Backgammon 
  Bridge 
  Chess 
  General Board Games 
  General Card Games 
   All Gambling 
  Blackjack 
  General Gambling 
  Poker 
  Racing 
   All Puzzles & Activities 
  Crosswords 
  Logic & Brain Teasers 
  Puzzles 
  Sudoku 
  Word Search 
      All Gifts & Stationery  Apparel  Gifts & Stationery General  Jigsaw Puzzles  Journals & Sketchbooks  Notecards  Toys      All Graphic Novels  Comics  Graphic Novels  Manga   All Graphic Novels 
  General Graphic Novels 
  Superheroes 
   All Manga 
  Erotica & Hentai 
  General Manga 
  Isekai 
  Yaoi 
  Yuri 
      All Health & Fitness  Aging & Elder Care  Alternative Health  Beauty  Diet & Nutrition  Fitness  Health General  Medical Reference  Men's Health  Psychology  Public Health  Specific Conditions  Women's Health   All Alternative Health 
  Acupressure & Acupuncture 
  Bodywork 
  Cannabis & CBD 
  Crystals 
  Energy Healing 
  General Alternative Health 
  Meditation 
  Plant Based Remedies 
  Tai Chi 
   All Fitness 
  Bodybuilding & Weight Training 
  Cycling 
  General Fitness 
  Martial Arts 
  Pilates 
  Running & Jogging 
  Yoga 
   All Psychology 
  Abuse 
  Addiction & Recovery 
  Child Psychology 
  Cognition 
  Death & Dying 
  Dreams 
  General Psychology 
  Mental Health 
  Relationships 
  Self-Help 
  Sexuality 
   All Specific Conditions 
  Allergies 
  Alzheimer's & Dementia 
  Attention Deficit Disorder (ADD-ADHD) 
  Autism Spectrum Disorders 
  Autoimmune Disorders 
  Cancer 
  Chronic Fatigue Syndrome 
  Diabetes 
  Gastrointestinal Health 
  Genetic Conditions 
  Hearing & Speech 
  Heart Conditions 
  HIV & AIDS 
  Pain Management 
  Respiratory Conditions 
  Skin Diseases 
  Sleep Disorders 
  STDs 
      All History  African History  Ancient History  Arctic History  Asian History  Australia & Oceania  Black American History  Canadian History  Caribbean History  European History  Latin American History  Medieval & Renaissance History  Middle Eastern History  Military History  Native American History  United States History  World History   All Ancient History 
  Ancient Egypt 
  Ancient Greece 
  Ancient History General 
  Ancient Rome 
   All Asian History 
  Central Asian History 
  Chinese History 
  General Asian History 
  Indian & South Asian History 
  Japanese History 
  Korean History 
  Southeast Asian History 
   All European History 
  Austrian & Hungarian History 
  Baltic History 
  British History 
  Eastern European History 
  French History 
  General European History 
  German History 
  Greek History 
  Holocaust 
  Irish History 
  Italian History 
  Polish History 
  Russian History 
  Scandinavian History 
  Spainish & Portuguese History 
   All Latin American History 
  Central American History 
  General Latin American History 
  Mexican History 
  South American History 
   All Middle Eastern History 
  General Middle Eastern History 
  Iran History 
  Iraq History 
  Israel & Palestine History 
  Turkey & Ottoman Empire History 
   All Military History 
  Afghan War (2001-2021) 
  Air Combat 
  Armed Forces 
  General Military History 
  Iraq War (2003-2011) 
  Korean War 
  Military Strategy 
  Napoleonic Wars 
  Naval History 
  Other Wars 
  Persian Gulf War (1991) 
  Vietnam War 
  War of 1812 
  Weaponry & Vehicles 
  Weapons of Mass Destruction 
  World War I 
  World War II 
   All United States History 
  19th Century United States History 
  20th Century United States History 
  21st Century United States History 
  Civil War Period (1850-1877) 
  Colonial Period (1600-1775) 
  General United States History 
  Regional: Middle Atlantic 
  Regional: Midwest 
  Regional: New England 
  Regional: Pacific Northwest 
  Regional: South 
  Regional: Southwest 
  Regional: West 
  Revolutionary Period (1775-1800) 
   All World History 
  Exploration 
  General World History 
  Historiography 
      All House & Home  Construction & Renovation  Household Hints   All Construction & Renovation 
  Carpentry 
  Electrical 
  General Construction & Renovation 
  Masonry 
  Outdoors 
  Plumbing 
  Security 
  Tools & Workshop 
   All Household Hints 
  Cleaning 
  Decorating 
  Feng Shui 
  Sustainable Living 
      All Juvenile  Activity & Coloring Books  Juvenile Fiction  Juvenile Graphic Novels  Juvenile Nonfiction   All Juvenile Fiction 
  Animals 
  Art 
  Bedtime & Dreams 
  Biography 
  Chapter Books 
  Concepts 
  Early Readers 
  Fairy Tales & Folklore 
  Family 
  General Juvenile Fiction 
  History 
  Holiday 
  Horror 
  Mathematics 
  Performing Arts 
  Poetry 
  Religion 
  Science & Nature 
  Science Fiction 
  Sports & Recreation 
  Transportation 
   All Juvenile Nonfiction 
  Animals 
  Art & Architecture 
  Biography 
  Concepts 
  Crafts & Activities 
  Education 
  Games 
  General Juvenile Nonfiction 
  History 
  Holiday 
  Languages 
  Math & Computers 
  Performing Arts 
  Religion 
  Science & Nature 
  Self Help 
  Sports & Recreation 
  Transportation 
      All Languages  African Languages  Arabic  Celtic Languages  Chinese  Czech  Danish  Dutch  English as a Second Language  Foreign Language General  French  German  Greek (Modern)  Hebrew  Hindi  Hungarian  Indic Languages  Indigenous Languages of the Americas  Italian  Japanese  Korean  Latin  Miscellaneous Languages  Old & Middle English  Persian  Polish  Portuguese  Russian  Scandinavian Languages  Sign Language  Slavic Languages  Spanish  Turkish & Turkic Languages  Vietnamese  Yiddish   All African Languages 
  Other African Languages 
  Swahili 
   All Scandinavian Languages 
  Finnish 
  General Scandinavian Languages 
  Norwegian 
  Swedish 
   All Slavic Languages 
  Other Slavic Languages 
  Serbian & Croatian 
      All Literature  Erotica  Fantasy  Fiction General  GLBTQIA Fiction  Horror  Humor  Letters & Essays  Literary Criticism  Mystery & Thriller  Poetry  Romance  Science Fiction  Westerns   All Fiction General 
  Classic Fiction 
  Fiction Anthologies 
  General Fiction 
  Historical Fiction 
  Literary Fiction 
   All GLBTQIA Fiction 
  General GLBTQIA Fiction 
  GLBTQIA Erotica 
   All Poetry 
  General Poetry 
  Poetry Anthologies 
  Poetry Criticism 
      All Metaphysical  Astrology  Divination  Metaphysical General  Occult  Paranormal  Parapsychology  Secret Societies  Speculation  UFOs & Extraterrestrials   All Divination 
  Fortune Telling 
  General Divination 
  I Ching 
  Numerology 
  Palmistry 
  Tarot 
      All Parenting & Education  Education  Parenting   All Education 
  Bilingual Education 
  College Guides 
  General Education 
  Special Education 
  Teaching Instruction 
  Test Prep 
   All Parenting 
  Baby Care 
  General Parenting 
  Pregnancy & Adoption 
      All Performing Arts  Acting & Performing  Dance  Drama  Film  Music  Music Instruction  Music Songbooks  Radio  Television   All Acting & Performing 
  Acting & Auditioning 
  Improvisation 
  Monologues & Scenes 
  Storytelling 
   All Drama 
  Broadway & Musicals 
  General Drama 
  Play Anthologies 
  Plays 
  Playwriting 
  Shakespeare 
  Technical Theater 
  Theater History 
   All Film 
  Directors 
  Film Guides & Reference 
  Film Studies 
  Filmmaking 
  Screenplays 
  Screenwriting 
   All Music 
  Big Band & Swing 
  Blues & Soul 
  Christian Music 
  Classical Music 
  Country & Folk 
  Dance 
  Electronic 
  General Music 
  Gospel 
  Hip Hop 
  Jazz 
  Metal 
  Music Business 
  Music Reference 
  Opera 
  Pop/Rock 
  Punk 
  World Music 
   All Music Instruction 
  Conducting 
  Music Composition 
  Music Instruction: Brass 
  Music Instruction: General 
  Music Instruction: Guitar 
  Music Instruction: Percussion 
  Music Instruction: Piano 
  Music Instruction: Strings 
  Music Instruction: Wodwinds 
  Music Recording & Reproduction 
  Music Theory 
  Songwriting 
   All Music Songbooks 
  General Songbooks 
  Guitar Songbooks 
  Music Scores 
  Piano Songbooks 
      All Philosophy      All Reference  Atlases  Business of Writing  Consumer Reference  Dictionaries & Encyclopedias  Etiquette  Etymology  Genealogy & Heraldry  General Reference  Grammar & Style  Lexicography  Linguistics  Public Speaking & Speech Writing  Quotations  Symbolism  Thesauri  Weddings  Writing Instruction      All Religion  Atheism & Agnosticism  Bibles  Christianity  Comparative Religion  Eastern Religions  Gnosticism  Indigenous Religions  Islam  Judaism  Religion General   All Bibles 
  Bible Studies 
  CEV 
  Children's Bibles 
  CSB 
  ESV 
  KJV 
  NAB 
  NASB 
  NCV 
  NIRV 
  NIV 
  NKJV 
  NLV 
  NRSV 
  Other Bible Translations 
   All Christianity 
  Catechisms 
  Catholicism 
  Christian Fiction 
  Christian Living 
  General Christianity 
  Prayerbooks 
   All Eastern Religions 
  Buddhism 
  Confucianism 
  General Eastern Religions 
  Hinduism 
  Jainism 
  Shintoism 
  Sikhism 
  Taoism 
   All Religion General 
      All Science & Nature  Animals  Computers  Gardening  Mathematics  Nature  Science  Technology & Engineering   All Animals 
  Birds 
  Birdwatching 
  Dinosaurs 
  General Animals 
  Horses 
  Insects & Spiders 
  Marine Life 
  Other Animals 
  Pets: Birds 
  Pets: Cats 
  Pets: Dogs 
  Pets: Fish 
  Pets: General 
  Primates 
  Reptiles & Amphibains 
  Zoology 
   All Computers 
  Applications 
  Computer Security 
  Databases 
  General Computers 
  Networking 
  Operating Systems 
  Programming 
  System Administration 
   All Gardening 
  Botany & Horticulture 
  Container Gardening 
  Edible Plants 
  Flowers 
  Garden Writing 
  General Gardening 
  Indoor Gardening 
  Japanese Gardens 
  Landscaping 
  Lawns, Trees, & Shrubs 
  Marijuana Cultivation 
  Midwest Gardening 
  Organic Gardening 
  Picture Gardens 
  Water Gardens 
   All Mathematics 
  Algebra 
  Calculus 
  General Mathematics 
  Geometry 
  Logic 
  Pre-Calculus 
  Probability & Statistics 
  Trigonometry 
   All Nature 
  Agriculture 
  Environmental Studies 
  General Nature 
  Nature Writing 
  Weather 
   All Science 
  Anatomy & Physiology 
  Astronomy & Space 
  Biology 
  Cartography 
  Chemistry 
  Evolution 
  General Science 
  Genetics 
  Geography 
  Geology 
  History & Philosophy of Science 
  Paleontology 
  Physics 
      All Social Sciences  Anthropology  Archaeology  Gender Studies  Law  Mythology & Folklore  Political Science  Racism & Ethnic Studies  Sociology   All Gender Studies 
  General Gender Studies 
  GLBTQIA Studies 
  Men's Studies 
  Women's Studies 
   All Law 
  Criminology 
  General Law 
  True Crime 
   All Political Science 
  General Political Science 
  International Relations 
  Social Movements 
  United States Politics 
   All Racism & Ethnic Studies 
  Asian American Studies 
  Black American Studies 
  General Racism & Ethnic Studies 
  Indigenous Studies 
  Latino Studies 
   All Sociology 
  General Sociology 
  Immigration & Refugees 
  Poverty & Social Work 
      All Sports & Recreation  Archery  Baseball & Softball  Basketball  Billiards  Bowling  Boxing  Camping  Fishing  Football  Golf  Gymnastics  Hiking & Climbing  Hunting  Motor Sports  Olympics & Paralympics  Racket Sports  Rock Climbing  Skateboarding  Soccer  Sports General  Tennis  Track & Field  Volleyball  Water Sports  Winter Sports  Wrestling   All Water Sports 
  Boating 
  Canoeing & Kayaking 
  General Water Sports 
  Rowing 
  Scuba & Snorkeling 
  Surfing 
  Swimming & Diving 
   All Winter Sports 
  Curling 
  General Winter Sports 
  Hockey 
  Ice Skating 
  Skiing 
  Snowboarding 
      All Transportation  Auto Repair  Automobiles  Aviation  Aviation Instruction  Boating  Motorcycles  Trains  Transportation General      All Travel  Africa  Asia  Australia & Oceania  Canada  Caribbean & West Indies  Europe  Latin America  Middle East  Travel General  Travel Writing  United States   All Asia 
  China 
  General Asia 
  India & South Asia 
  Japan 
  Korea 
  Southeast Asia 
   All Europe 
  Austria 
  Eastern Europe 
  France 
  General Europe 
  Germany 
  Great Britain 
  Greece 
  Iceland & Greenland 
  Ireland 
  Italy 
  Scandinavia 
  Spain & Portugal 
  Switzerland 
   All Latin America 
  Central America 
  Mexico 
  South America 
   All Middle East 
  Egypt 
  General Middle East 
  Israel 
  Turkey 
   All United States 
  General United States 
  Midwest 
  Northeast 
  South 
  West 
      All Young Adult  Young Adult Fiction  Young Adult Graphic Novels  Young Adult Nonfiction 
  Signed Copies 
  M&Q Merch 

 Sell Your Books 
  Gift Cards 
  About Us | About Us 
  Directions 
  Help / FAQ 
  Employment 
  Books Blog 
  Schools & Business 
  Contact Us 
  Newsletter Sign Up 

 Sign-In 
  Calendars 
  Cart 

 Open Daily: 10am - 10pm | Alley-side Pickup: 10am - 7pm   
  3038 Hennepin Ave Minneapolis, MN  
  612-822-4611   

 Home 
  Books 
  General Computers 

 Broadband Communications, Networks, and Systems: 14th Eai International Conference, Broadnets 2023, Hyderabad, India, February 16-17, 2024, Proceeding  
  
 Garcia Diaz, Vicente    
 Cheng, Xiaochun    
  
 Paperback  
 Series: Lecture Notes of the Institute for Computer Sciences, Social  , Book 602  
 General Computers  Networking  Programming   
 Currently unavailable to order  
 Notify me when this becomes available.  Please enter your email and a message will be sent to you when this product becomes available on our website.  
    
 Email:      
 Submit     
 Close    

 ISBN10:  3031811704  
  ISBN13:  9783031811708  
  Publisher:  Springer  
  Pages:  185  
  Language:  English  

 Also from  
 Garcia Diaz, Vicente  

 View All    
   
  Confidential Computing: Hardware Based Memory Protection  
  Hardcover  
   
 $109.99   
 See More    

  Confidential Computing: Hardware Based Memory Protection  
  Paperback  
   
 $109.99   
 See More    

  Intelligent Systems and Machine Learning: First Eai International Conference, Icisml 2022, Hyderabad, India, December 16-17, 2022, Proceedings, Part I  
  Paperback  
   
 $109.99   
 See More    

  Icicct 2019 - System Reliability, Quality Control, Safety, Maintenance and Management: Applications to Electrical, Electronics and Computer Science an  
  Paperback  
   
 $169.99   
 See More    

  Intelligent Systems and Machine Learning: First Eai International Conference, Icisml 2022, Hyderabad, India, December 16-17, 2022, Proceedings, Part I  
  Paperback  
   
 $89.99   
 See More    

  Previous    Next     

 Also in  
 Networking  

 View All    
   
  Wireshark 101: Essential Skills for Network Analysis  
  Chappell, Laura  
 Paperback  
   
 $49.95   
 See More    

  Comptia Network+ Study Guide: Exam N10-009  
  Buhagiar, Jon  
 Lammle, Todd  
 Paperback  
   
 $52.25   
 See More    

  Networking All-In-One for Dummies  
  Lowe, Doug  
 Paperback  
   
 $47.49   
 See More    

  Password Book for Seniors: Personal Internet Organizer for Usernames, Logins, Web Addresses, Alphabetically Sorted for Easy Access with Large Pri  
  Memoirs, Quillscribe  
 Paperback  
   
 $7.99   
 See More    

  iPhone 16 User Guide: A Comprehensive Guide to Using the New iPhone 16 Pro & Pro Max: Step-by-Step Instructions for Seniors and Novices with  
  Amber, Chris  
 Paperback  
   
 $13.00   
 See More    

  What Great Principals Do Differently: Twenty Things That Matter Most  
  Whitaker, Todd  
 Paperback  
   
 $29.95   
 See More    

  From Gutenberg to Google and on to AI: The History of Our Future  
  Wheeler, Tom  
 Paperback  
   
 $18.95   
 See More    

  Gray Hat Hacking: The Ethical Hacker's Handbook, Sixth Edition  
  Harper, Allen  
 Linn, Ryan  
 Sims, Stephen  
 Paperback  
   
 $57.00   
 See More    

  A Programmer's Guide to Computer Science Vol. 2  
  Springer, William M.  
 Paperback  
   
 $24.99   
 See More    

  Mobile Forensic Investigations: A Guide to Evidence Collection, Analysis, and Presentation, Second Edition  
  Reiber, Lee  
 Paperback  
   
 $69.35   
 See More    

  Microsoft Power Bi for Dummies  
  Hyman, Jack A.  
 Paperback  
   
 $35.14   
 See More    

  Code Complete  
  McConnell, Steve  
 Paperback  
   
 $56.99   
 See More    

  CCNA 200-301 Official Cert Guide, Volume 1  
  Odom, Wendell  
 Hardcover  
   
 $47.49   
 See More    

  A Comprehensible Guide to J1939  
  Voss, Wilfried  
 Paperback  
   
 $19.00   
 See More    

  Where Wizards Stay Up Late: The Origins of the Internet  
  Hafner, Katie  
 Paperback  
   
 $18.99   
 See More    

  Comptia Network+ Certification All-In-One Exam Guide, Eighth Edition (Exam N10-008)  
  Jernigan, Scott  
 Hardcover  
   
 $57.00   
 See More    

  Hackers & Painters: Big Ideas from the Computer Age  
  Graham, Paul  
 Paperback  
   
 $23.74   
 See More    

  Exploring Computer Hardware - 2024 Edition: The Illustrated Guide to Understanding Computer Hardware, Components, Peripherals & Networks  
  Wilson, Kevin  
 Paperback  
   
 $18.99   
 See More    

  Hacking Exposed Industrial Control Systems: ICS and Scada Security Secrets & Solutions  
  Bodungen, Clint  
 Singer, Bryan  
 Shbeeb, Aaron  
 Paperback  
   
 $69.35   
 See More    

  Sae J1939 ECU Programming & Vehicle Bus Simulation with Arduino  
  Voss, Wilfried  
 Paperback  
   
 $24.90   
 See More    

  Zero Trust Networks: Building Secure Systems in Untrusted Networks  
  Morillo, Christina  
 Gilman, Evan  
 Rais, Razi  
 Paperback  
   
 $62.69   
 See More    

  Networking All-In-One for Dummies  
  Lowe, Doug  
 Paperback  
   
 $47.49   
 See More    

  Android Smartphones for Dummies  
  Dimarzio, Jerome  
 Paperback  
   
 $28.49   
 See More    

  Controller Area Network Prototyping with Arduino  
  Voss, Wilfried  
 Paperback  
   
 $12.00   
 See More    

  Applied Embedded Electronics: Design Essentials for Robust Systems  
  Twomey, Jerry  
 Paperback  
   
 $53.19   
 See More    

  Computer Science Unleashed: Harness the Power of Computational Systems  
  Ferreira Filho, Wladston  
 Pictet, Raimondo  
 Paperback  
   
 $29.95   
 See More    

  Linux Bible  
  Negus, Christopher  
 Paperback  
   
 $59.85   
 See More    

  Comptia Network+ N10-008 Cert Guide  
  Sequeira, Anthony  
 Paperback  
   
 $47.49   
 See More    

  TCP/IP Illustrated: The Protocols, Volume 1  
  Fall, Kevin  
 Stevens, W.  
 Hardcover  
   
 $69.99   
 See More    

  The Ultimate Kali Linux Book - Third Edition: Harness Nmap, Metasploit, Aircrack-ng, and Empire for cutting-edge pentesting  
  Singh, Glen D.  
 Paperback  
   
 $54.99   
 See More    

  Hands-On Industrial Internet of Things: Create a powerful Industrial IoT infrastructure using Industry 4.0  
  Veneri, Giacomo  
 Capasso, Antonio  
 Paperback  
   
 $48.99   
 See More    

  Introduction to Show Networking  
  Huntington, John  
 Paperback  
   
 $25.00   
 See More    

  Comptia Server+ Study Guide: Exam Sk0-005  
  McMillan, Troy  
 Paperback  
   
 $57.00   
 See More    

  Comptia Network+ Practice Tests: Exam N10-009  
  Zacker, Craig  
 Paperback  
   
 $42.75   
 See More    

  Unlock Fire TV & TV Stick The Complete Guide  
  Poera, Rob  
 Paperback  
   
 $9.49   
 See More    

  Hands-On Network Forensics: Investigate network attacks and find evidence using common network forensic tools  
  Jaswal, Nipun  
 Paperback  
   
 $43.99   
 See More    

  Mastering Python Networking - Fourth Edition: Utilize Python packages and frameworks for network automation, monitoring, cloud, and management  
  Chou, Eric  
 Paperback  
   
 $49.99   
 See More    

  Hack to the Future: How World Governments Relentlessly Pursue and Domesticate Hackers  
  Crose, Emily  
 Hardcover  
   
 $31.35   
 See More    

  AWS for Solutions Architects - Second Edition: The definitive guide to AWS Solutions Architecture for migrating to, building, scaling, and succeeding  
  Artasanchez, Alberto  
 Shrivastava, Saurabh  
 Srivastav, Neelanjali  
 Paperback  
   
 $54.99   
 See More    

  Mastering Linux Security and Hardening - Third Edition: A practical guide to protecting your Linux system from cyber attacks  
  Tevault, Donald a.  
 Paperback  
   
 $49.99   
 See More    

  Learn Computer Forensics - Second Edition: Your one-stop guide to searching, analyzing, acquiring, and securing digital evidence  
  Oettinger, William  
 Paperback  
   
 $49.99   
 See More    

  Agile Web Development with Rails 7  
  Ruby, Sam  
 Thomas, Dave  
 Paperback  
   
 $59.95   
 See More    

  Zephyr Rtos Embedded C Programming: Using Embedded Rtos POSIX API  
  Eliasz, Andrew  
 Paperback  
   
 $52.24   
 See More    

  Migrating to SAP S/4hana: Operating Models, Migration Scenarios, Tools, and Implementation  
  Densborn, Frank  
 Finkbohner, Frank  
 Höft, Martina  
 Hardcover  
   
 $85.45   
 See More    

  BGP from Theory to Practice  
  Tofoni, Tiziano  
 Luciani, Flavio  
 Prado, Antonio  
 Paperback  
   
 $84.99   
 See More    

  The AI Revolution in Networking, Cybersecurity, and Emerging Technologies  
  Dahir, Hazim  
 Santos, Omar  
 Salam, Samer  
 Paperback  
   
 $33.24   
 See More    

  Linux Kernel Programming - Second Edition: A comprehensive and practical guide to kernel internals, writing modules, and kernel synchronization  
  Billimoria, Kaiwan N.  
 Paperback  
   
 $49.99   
 See More    

  Troubleshooting with Wireshark: Locate the Source of Performance Problems  
  Chappell, Laura  
 Paperback  
   
 $49.95   
 See More    

  Closing the Loop: Systems Thinking for Designers  
  Cababa, Sheryl  
 Paperback  
   
 $54.99   
 See More    

  It Auditing Using Controls to Protect Information Assets, Third Edition  
  Davis, Chris  
 Kegerreis, Mike  
 Schiller, Mike  
 Paperback  
   
 $69.35   
 See More    

  Wireshark Network Analysis (Second Edition): The Official Wireshark Certified Network Analyst Study Guide  
  Chappell, Laura  
 Paperback  
   
 $99.95   
 See More    

  Deploying Juniper Data Centers with Evpn Vxlan  
  Chatterjee, Aninda  
 Paperback  
   
 $79.99   
 See More    

  Development and Deployment of Multiplayer Online Games, Vol. I: GDD, Authoritative Servers, Communications  
  Hare, 'No Bugs'  
 Hardcover  
   
 $37.95   
 See More    

  Vmware Vsphere Essentials: A Practical Approach to Vsphere Deployment and Management  
  Patrão, Luciano  
 Paperback  
   
 $47.49   
 See More    

  Development and Deployment of Multiplayer Online Games, Vol. II: DIY, (Re)Actors, Client Arch., Unity/UE4/ Lumberyard/Urho3D  
  Hare, 'No Bugs'  
 Hardcover  
   
 $37.95   
 See More    

  Cisco CCNA Certification, 2 Volume Set: Exam 200-301  
  Lammle, Todd  
 Paperback  
   
 $83.60   
 See More    

  Acing the CCNA Exam, Volume 1: Fundamentals and Protocols  
  McDowell, Jeremy  
 Paperback  
   
 $54.99   
 See More    

  Introduction to Networking: How the Internet Works  
  Paperback  
   
 $9.99   
 See More    

  Distributed Systems: An Algorithmic Approach  
  Ghosh, Sukumar  
 Hardcover  
   
 $170.00   
 See More    

  ITIL 4 Foundation Exam Preparation & Practice Test: Beginners Guide for Passing the ITIL 4 Exam Fast Including 50 Test Questions  
  Miller, Richie  
 Paperback  
   
 $18.99   
 See More    

  ITIL(R) 4 Create, Deliver and Support (CDS): Your companion to the ITIL 4 Managing Professional CDS certification  
  Agutter, Claire  
 Paperback  
   
 $49.99   
 See More    

  Cisco CCNA Command Guide: An Introductory Guide for CCNA & Computer Networking Beginners  
  Nastase, Ramon  
 Paperback  
   
 $9.99   
 See More    

  Network Programmability and Automation: Skills for the Next-Generation Network Engineer  
  Lowe, Scott S.  
 Oswalt, Matt  
 Adell, Christian  
 Paperback  
   
 $56.99   
 See More    

  Comptia Network+ Guide to Networks, Loose-Leaf Version  
  West, Jill  
 Paperback  
   
 $102.95   
 See More    

  Secrets and Lies: Digital Security in a Networked World  
  Schneier, Bruce  
 Paperback  
   
 $26.60   
 See More    

  SharePoint for Dummies  
  Withee, Rosemarie  
 Withee, Ken  
 Paperback  
   
 $30.39   
 See More    

  The Networknomicon, or SNMP Mastery  
  Alhazred, Abdul  
 Lucas, Michael W.  
 Hardcover  
   
 $66.66   
 See More    

  Mastering Windows Server 2022 - Fourth Edition: Comprehensive administration of your Windows Server environment  
  Krause, Jordan  
 Paperback  
   
 $49.99   
 See More    

  The Real Internet Architecture: Past, Present, and Future Evolution  
  Rexford, Jennifer  
 Zave, Pamela  
 Paperback  
   
 $39.95   
 See More    

  CYBERSECURITY DICTIONARY for Everyone: 1250 Terms Explained in Simple English  
  Tavlas, Tolga  
 Paperback  
   
 $19.99   
 See More    

  Getting Started with PowerShell  
  Shephard, Mike  
 Paperback  
   
 $43.99   
 See More    

  Network Warrior: Everything You Need to Know That Wasn't on the CCNA Exam  
  Donahue, Gary A.  
 Paperback  
   
 $61.74   
 See More    

  Wireshark Certified Network Analyst Exam Prep Guide (Second Edition)  
  Chappell, Laura  
 Paperback  
   
 $39.95   
 See More    

  The Complete Roku Device Guide: TV, Express, Ultra, Stick, Channels, App, Account  
  Babson, Bob  
 Paperback  
   
 $14.24   
 See More    

  Foundations of Scalable Systems: Designing Distributed Architectures  
  Gorton, Ian  
 Paperback  
   
 $62.69   
 See More    

  Ethical Hacking and Network Analysis with Wireshark: Exploration of network packets for detecting exploits and malware (English Edition)  
  Sharma, Manish  
 Paperback  
   
 $39.95   
 See More    

  Cisco Networking Essentials: Complete Guide To Computer Networking For Beginners And Intermediates  
  Berg, Craig  
 Paperback  
   
 $13.10   
 See More    

  Linux Administration: A Beginner's Guide, Eighth Edition  
  Soyinka, Wale  
 Paperback  
   
 $52.25   
 See More    

  Mastering Linux Security and Hardening  
  Tevault, Donald a.  
 Paperback  
   
 $59.99   
 See More    

  Cybersecurity: A comprehensive guide to getting started in cybersecurity  
  Ozkaya, Erdal  
 Paperback  
   
 $30.99   
 See More    

  AWS Certified Sysops Administrator Study Guide: Associate Soa-C02 Exam  
  Jones, Christoffer  
 Sawyer, George  
 Negron, Jorge T.  
 Paperback  
   
 $54.00   
 See More    

  IoT and Edge Computing for Architects - Second Edition  
  Lea, Perry  
 Paperback  
   
 $48.99   
 See More    

  Network Science  
  Barabási, Albert-László  
 Hardcover  
   
 $61.99   
 See More    

  Creating Business Applications with Microsoft 365: Techniques in Power Apps, Power Bi, Sharepoint, and Power Automate  
  Rhodes, Jeffrey M.  
 Paperback  
   
 $52.24   
 See More    

  Electronics Projects with the Esp8266 and Esp32: Building Web Pages, Applications, and Wifi Enabled Devices  
  Cameron, Neil  
 Paperback  
   
 $52.24   
 See More    

  Hands-On Ethical Hacking Tactics: Strategies, tools, and techniques for effective cyber defense  
  Hartman, Shane  
 Paperback  
   
 $49.99   
 See More    

  Engineering Trustworthy Systems: Get Cybersecurity Design Right the First Time  
  Saydjari, O. Sami  
 Paperback  
   
 $69.35   
 See More    

  A Beginner's Guide to Ssd Firmware: Designing, Optimizing, and Maintaining Ssd Firmware  
  Kuppan Thirumalai, Gopi  
 Paperback  
   
 $42.74   
 See More    

  Practical Cyber Threat Intelligence: Gather, Process, and Analyze Threat Actor Motives, Targets, and Attacks with Cyber Intelligence Practices (Englis  
  Ozkaya, Erdal  
 Paperback  
   
 $34.99   
 See More    

  Handbook of Computer Networks and Cyber Security: Principles and Paradigms  
  Paperback  
   
 $219.99   
 See More    

  Hands-On Microsoft Windows Server 2019, Loose-Leaf Version  
  Eckert, Jason  
 Paperback  
   
 $102.95   
 See More    

  Unlock Any Roku Device: Watch Shows, TV, & Download Apps  
  Hendrick, Jan  
 Paperback  
   
 $12.34   
 See More    

  Comando de Linux: Una guía completa para principiantes para aprender los reinos del comando Linux desde A-Z  
  Vance, William  
 Paperback  
   
 $18.99   
 See More    

  DNS and Bind: Help for System Administrators  
  Liu, Cricket  
 Albitz, Paul  
 Paperback  
   
 $56.99   
 See More    

  IP Subnetting for Beginners: Your Complete Guide to Master IP Subnetting in 4 Simple Steps  
  Nastase, Ramon A.  
 Paperback  
   
 $9.49   
 See More    

  Fire TV & TV Stick: How to Unlock and Jailbreak Step by Step Guide in 10 Minutes  
  Simpson, Steve  
 Paperback  
   
 $12.34   
 See More    

  Wireshark Workbook 1: Practice, Challenges, and Solutions  
  Chappell, Laura  
 Paperback  
   
 $49.95   
 See More    

  Understanding Linux Network Internals: Guided Tour to Networking on Linux  
  Benvenuti, Christian  
 Paperback  
   
 $56.99   
 See More    

  Cybersecurity for Small Networks: A Guide for the Reasonably Paranoid  
  Enoka, Seth  
 Paperback  
   
 $37.99   
 See More    

  Mike Meyers' Comptia Network+ Guide to Managing and Troubleshooting Networks, Sixth Edition (Exam N10-008)  
  Jernigan, Scott  
 Paperback  
   
 $104.00   
 See More    

  Asynchronous Programming in Rust: Learn asynchronous programming by building working examples of futures, green threads, and runtimes  
  Samson, Carl Fredrik  
 Paperback  
   
 $49.99   
 See More    

  Cloud Computing: A Hands-On Approach  
  Bahga, Arshdeep  
 Madisetti, Vijay  
 Hardcover  
   
 $61.75   
 See More    

  Prompt Engineering for Beginners  
  Garg, Geetu  
 Aroraa, Gaurav  
 Arora, Kapila  
 Paperback  
   
 $19.99   
 See More    

  802.11 Wireless Networks: The Definitive Guide  
  Gast, Matthew S.  
 Paperback  
   
 $42.70   
 See More    

  Rust in Action  
  McNamara, Tim  
 Paperback  
   
 $59.99   
 See More    

  HTTP Pocket Reference  
  Wong, Clinton  
 Paperback  
   
 $9.45   
 See More    

  Developing IoT Projects with ESP32 - Second Edition: Unlock the full Potential of ESP32 in IoT development to create production-grade smart devices  
  Oner, Vedat Ozan  
 Paperback  
   
 $49.99   
 See More    

  Network Security Strategies: Protect your network and enterprise against advanced cybersecurity attacks and threats  
  Mukherjee, Aditya  
 Paperback  
   
 $43.99   
 See More    

  CCNA Certification Study Guide: Exam 200-301, Volume 2  
  Lammle, Todd  
 Paperback  
   
 $61.75   
 See More    

  PowerShell for Penetration Testing: Explore the capabilities of PowerShell for pentesters across multiple platforms  
  Blyth, Andrew  
 Paperback  
   
 $49.99   
 See More    

  Connected Through Chaos  
  Yadav, Anshul  
 Paperback  
   
 $20.99   
 See More    

  Edge AI: Convergence of Edge Computing and Artificial Intelligence  
  Leung, Victor C. M.  
 Wang, Xiaofei  
 Han, Yiwen  
 Hardcover  
   
 $179.99   
 See More    

  Business Data Communications and Networking  
  Durcikova, Alexandra  
 Fitzgerald, Jerry  
 Dennis, Alan  
 Paperback  
   
 $85.95   
 See More    

  Mastering Windows Server 2019 - Third Edition: The complete guide for system administrators to install, manage, and deploy new capabilities with Windo  
  Krause, Jordan  
 Paperback  
   
 $89.99   
 See More    

  Mastering Palo Alto Networks - Second Edition: Build, configure, and deploy network solutions for your infrastructure using features of PAN-OS  
  'Reaper', Tom Piens Aka  
 Paperback  
   
 $49.99   
 See More    

  Zoom for Dummies  
  Simon, Phil  
 Paperback  
   
 $25.64   
 See More    

  Cisco Meraki Fundamentals: Cloud-Managed Operations  
  Jaafari, Medi  
 Woolley, Mike  
 Paul, Arun  
 Paperback  
   
 $59.99   
 See More    

  Malware Reverse Engineering: Cracking The Code  
  Botwright, Rob  
 Paperback  
   
 $39.95   
 See More    

  Python for ArcGIS Pro: Automate cartography and data analysis using ArcPy, ArcGIS API for Python, Notebooks, and pandas  
  Toms, Silas  
 Parker, Bill  
 Paperback  
   
 $65.99   
 See More    

  Microsoft Azure for Dummies  
  Hyman, Jack A.  
 Paperback  
   
 $37.99   
 See More    

  Wireless Security Architecture: Designing and Maintaining Secure Wireless for Enterprise  
  Minella, Jennifer  
 Paperback  
   
 $47.50   
 See More    

  Ansible: Up and Running: Automating Configuration Management and Deployment the Easy Way  
  Hochstein, Lorin  
 Moser, René  
 Meijer, Bas  
 Paperback  
   
 $62.69   
 See More    

  Beej's Guide to Network Programming: Using Internet Sockets  
  Hall, Brian Beej Jorgensen  
 Paperback  
   
 $19.99   
 See More    

  Release It!: Design and Deploy Production-Ready Software  
  Nygard, Michael  
 Paperback  
   
 $47.95   
 See More    

  Mastering Windows Server 2019 - Second Edition: The complete guide for IT professionals to install and manage Windows Server 2019 and deploy new capab  
  Krause, Jordan  
 Paperback  
   
 $54.99   
 See More    

  Computer Networking: The Complete Beginner's Guide to Learning the Basics of Network Security, Computer Architecture, Wireless Technology a  
  Walker, Benjamin  
 Hardcover  
   
 $23.70   
 See More    

  Working with Network Data  
  Bagrow, James  
 Ahn  
 Hardcover  
   
 $64.99   
 See More    

  Practical Mobile Forensics - Fourth Edition  
  Skulkin, Oleg  
 Mahalik, Heather  
 Tamma, Rohit  
 Paperback  
   
 $43.99   
 See More    

  What Great Principals Do Differently: Twenty Things That Matter Most  
  Whitaker, Todd  
 Hardcover  
   
 $115.00   
 See More    

  The Ultimate Kali Linux Book - Second Edition: Perform advanced penetration testing using Nmap, Metasploit, Aircrack-ng, and Empire  
  Singh, Glen D.  
 Paperback  
   
 $54.99   
 See More    

  Comptia Network+ Guide to Networks  
  West, Jill  
 Paperback  
   
 $187.95   
 See More    

  Linkerd: Up and Running: A Guide to Operationalizing a Kubernetes-Native Service Mesh  
  Morgan, Jason  
 Flynn  
 Paperback  
   
 $62.69   
 See More    

  CCST Cisco Certified Support Technician Study Guide: Networking Exam  
  Robb, Donald  
 Lammle, Todd  
 Paperback  
   
 $47.50   
 See More    

  Java Network Programming: Developing Networked Applications  
  Harold, Elliotte Rusty  
 Paperback  
   
 $52.24   
 See More    

  Cisco Certified Devnet Associate Devasc 200-901 Official Cert Guide  
  Jackson, Chris  
 Iliesiu, Adrian  
 Gooley, Jason  
 Hardcover  
   
 $59.99   
 See More    

  IT Troubleshooting Skills Training: Practical Guide To IT Problem Solving For Analysts And Managers  
  Botwright, Rob  
 Paperback  
   
 $39.95   
 See More    

  Industrial Automation from Scratch: A hands-on guide to using sensors, actuators, PLCs, HMIs, and SCADA to automate industrial processes  
  Akande, Olushola  
 Paperback  
   
 $39.99   
 See More    

  Mastering Go - Fourth Edition: Leverage Go's expertise for advanced utilities, empowering you to develop professional software  
  Tsoukalos, Mihalis  
 Paperback  
   
 $54.99   
 See More    

  Begin to Code: Building Apps and Games in the Cloud  
  Miles, Rob  
 Paperback  
   
 $42.74   
 See More    

  How to Jailbreak Roku: Unlock Roku, Roku Stick, Roku Ultra, Roku Express, Roku TV with Kodi Step by Step Guide  
  Gates, Jonathan  
 Paperback  
   
 $12.34   
 See More    

  Programming Bitcoin: Learn How to Program Bitcoin from Scratch  
  Song, Jimmy  
 Paperback  
   
 $75.99   
 See More    

  Acing the CCNA Exam, Volume 2: Advanced Networking and Security  
  McDowell, Jeremy  
 Paperback  
   
 $54.99   
 See More    

  Cisco Aci: Zero to Hero: A Comprehensive Guide to Cisco Aci Design, Implementation, Operation, and Troubleshooting  
  Janovic, Jan  
 Paperback  
   
 $66.49   
 See More    

  Head First Kotlin: A Brain-Friendly Guide  
  Griffiths, David  
 Griffiths, Dawn  
 Paperback  
   
 $75.99   
 See More    

  The Software Developer's Guide to Linux: A practical, no-nonsense guide to using the Linux command line and utilities as a software developer  
  Sturm, Christian  
 Cohen, David  
 Paperback  
   
 $39.99   
 See More    

  Hands-on ESP32 with Arduino IDE: Unleash the power of IoT with ESP32 and build exciting projects with this practical guide  
  Zulfiqar, Asim  
 Paperback  
   
 $29.99   
 See More    

  Harness the Power of Big Data the IBM Big Data Platform  
  Parasuraman, Krishnan  
 Deroos, Dirk  
 Zikopoulos, Paul  
 Paperback  
   
 $23.75   
 See More    

  Cryptography and Network Security: Principles and Practice  
  Stallings, William  
 Paperback  
   
 $206.65   
 See More    

  Executive's Cybersecurity Program Handbook: A comprehensive guide to building and operationalizing a complete cybersecurity program  
  Brown, Jason  
 Paperback  
   
 $44.99   
 See More    

  Threshold: How Smart Homes Change Us Inside and Out  
  Woods, Heather Suzanne  
 Audio Book  
   
 $49.99   
 See More    

  Essential System Administration Pocket Reference: Commands and File Formats  
  Frisch, Æleen  
 Paperback  
   
 $9.45   
 See More    

  Computer Networking for Beginners: The Complete Basic Guide to Master Network Security, Computer Architecture, Internet, Wireless Technology, and Comm  
  Brown, David  
 Paperback  
   
 $18.99   
 See More    

  The Home Network Manual: The Complete Guide to Setting Up, Upgrading, and Securing Your Home Network  
  Buchanan, Marlon  
 Paperback  
   
 $13.29   
 See More    

  Introduction to Networks Course Booklet (Ccnav7)  
  Cisco Networking Academy  
 Johnson, Allan  
 Paperback  
   
 $40.00   
 See More    

  Network Vulnerability Assessment  
  Rahalkar, Sagar  
 Paperback  
   
 $43.99   
 See More    

  Hands-On Network Programming with C: Learn socket programming in C and write secure and optimized network code  
  Van Winkle, Lewis  
 Paperback  
   
 $46.99   
 See More    

  31 Days Before Your CCNA Exam: A Day-By-Day Review Guide for the CCNA 200-301 Certification Exam  
  Johnson, Allan  
 Paperback  
   
 $37.99   
 See More    

  AWS Certified Cloud Practitioner Study Guide: Clf-C01 Exam  
  Clinton, David  
 Piper, Ben  
 Paperback  
   
 $47.50   
 See More    

  Linux Network Administrator's Guide  
  Dawson, Terry  
 Purdy, Gregor N.  
 Bautts, Tony  
 Paperback  
   
 $33.20   
 See More    

  Build Your Own VPN Server: A Step by Step Guide  
  Song, Lin  
 Paperback  
   
 $9.99   
 See More    

  Computer Networking: This Book Includes: Computer Networking for Beginners and Beginners Guide (All in One)  
  Scott, Russell  
 Paperback  
   
 $18.95   
 See More    

  Internet of Things from Scratch: Build IoT solutions for Industry 4.0 with ESP32, Raspberry Pi, and AWS  
  Gondosubroto, Renaldi  
 Paperback  
   
 $39.99   
 See More    

  Software Estimation: Demystifying the Black Art  
  McConnell, Steve  
 Paperback  
   
 $42.74   
 See More    

  The Elements of Networking Style: And Other Essays & Animadversions on the Art of Intercomputer Networking  
  Padlipsky, M. a.  
 Paperback  
   
 $18.95   
 See More    

  Computer Science Unleashed: Harness the Power of Computational Systems  
  Ferreira Filho, Wladston  
 Pictet, Raimondo  
 Hardcover  
   
 $37.95   
 See More    

  RouterOS by Example, 2nd Edition: B&W: B&W Version  
  Discher, Stephen  
 Paperback  
   
 $49.95   
 See More    

  A Beginner's Guide for Mastering Computer Networking: A Complete Overview on Windows and Hardware Networking Made Easy.  
  Computer Networking School  
 Paperback  
   
 $14.95   
 See More    

  Mastering Azure Virtual Desktop - Second Edition: A practical guide to designing, implementing, and managing Azure Virtual Desktop environments  
  McLoughlin, Neil  
 Mangan, Ryan  
 Meurer, Marcel  
 Paperback  
   
 $54.99   
 See More    

  Network Architect's Handbook: An expert-led journey to building a successful career as a network architect  
  Ali, Alim H.  
 Paperback  
   
 $54.99   
 See More    

  TCP/IP Network Administration  
  Hunt, Craig  
 Paperback  
   
 $52.24   
 See More    

  Artificial Intelligence for Fashion: How AI Is Revolutionizing the Fashion Industry  
  Luce, Leanne  
 Paperback  
   
 $36.09   
 See More    

  Principles of Distributed Database Systems  
  Valduriez, Patrick  
 Özsu, M. Tamer  
 Paperback  
   
 $64.99   
 See More    

  Microsoft Office 365 for Beginners: Practical step-by-step manual, Microsoft Excel, learning basic and advanced features formulas with clear examples  
  Malley, David R.  
 Paperback  
   
 $9.99   
 See More    

  Comptia Network+ Study Guide: Exam N10-008  
  Lammle, Todd  
 Paperback  
   
 $55.10   
 See More    

  Asterisk: The Definitive Guide: Open Source Telephony for the Enterprise  
  Madsen, Leif  
 Meggelen, Jim Van  
 Bryant, Russell  
 Paperback  
   
 $66.49   
 See More    

  Computer & IT Policies and Procedures Manual  
  Hardcover  
   
 $99.00   
 See More    

  Threshold: How Smart Homes Change Us Inside and Out  
  Woods, Heather Suzanne  
 Audio Book  
   
 $45.95   
 See More    

  Networking Made Easy: Get Yourself Connected  
  Bernstein, James  
 Paperback  
   
 $15.99   
 See More    

  Virtual Reality: Everything You Wanted to Know Featuring Exclusive Interviews (How to Understand, Use & Create With Virtual Reality)  
  Tardif, William  
 Paperback  
   
 $18.95   
 See More    

  Networking for Systems Administrators  
  Lucas, Michael W.  
 Paperback  
   
 $29.99   
 See More    

  iPhone 8: The User Guide For all iPhone 8, iPhone 8 Plus and older iPhone model Users  
  Binjeh, Jhale  
 Paperback  
   
 $18.04   
 See More    

  Rest API Design Rulebook: Designing Consistent Restful Web Service Interfaces  
  Masse, Mark  
 Paperback  
   
 $24.99   
 See More    

  Intro to Bluetooth Low Energy: Learn Bluetooth Low Energy in a single weekend  
  Afaneh, Mohammad  
 Paperback  
   
 $46.55   
 See More    

  Cloud Computing: Concepts, Technology, Security, and Architecture  
  Monroy, Eric  
 Erl, Thomas  
 Paperback  
   
 $59.99   
 See More    

  Patterns of Distributed Systems  
  Joshi, Unmesh  
 Paperback  
   
 $49.99   
 See More    

  Essential SNMP: Help for System and Network Administrators  
  Mauro, Douglas  
 Schmidt, Kevin  
 Paperback  
   
 $47.45   
 See More    

  Sdn: Software Defined Networks: An Authoritative Review of Network Programmability Technologies  
  Gray, Ken  
 Nadeau, Thomas D.  
 Paperback  
   
 $59.99   
 See More    

  Adaptive Code: Agile Coding with Design Patterns and Solid Principles  
  Hall, Gary  
 McLean Hall, Gary  
 Paperback  
   
 $49.99   
 See More    

  Linux+ and Lpic-1 Guide to Linux Certification  
  Eckert, Jason  
 Paperback  
   
 $187.95   
 See More    

  Cisco Certified Support Technician CCST Networking 100-150 Official Cert Guide  
  White, Russ  
 Paperback  
   
 $47.49   
 See More    

  Continuous Integration (CI) and Continuous Delivery (CD): A Practical Guide to Designing and Developing Pipelines  
  Van Merode, Henry  
 Paperback  
   
 $56.99   
 See More    

  Understanding Microsoft Teams Administration: Configure, Customize, and Manage the Teams Experience  
  Tripathy, Durgesh  
 Ireddy, Vijay  
 Ilag, Balu N.  
 Paperback  
   
 $61.74   
 See More    

  Fiber Optics: Networking And Data Transmission In Action  
  Botwright, Rob  
 Paperback  
   
 $35.38   
 See More    

  Cisco Thousandeyes: Digital Experience Monitoring and Troubleshooting  
  Webb, Robert  
 Trompeter, Aaron  
 Paperback  
   
 $59.99   
 See More    

  Mastering Cyber Intelligence: Gain comprehensive knowledge and skills to conduct threat intelligence for effective system defense  
  Dahj, Jean Nestor M.  
 Paperback  
   
 $48.99   
 See More    

  CCNA Certification Practice Tests: Exam 200-301  
  Buhagiar, Jon  
 Paperback  
   
 $42.75   
 See More    

  Perceptrons, Reissue of the 1988 Expanded Edition with a new foreword by Léon Bottou: An Introduction to Computational Geometry  
  Papert, Seymour A.  
 Minsky, Marvin  
 Paperback  
   
 $60.00   
 See More    

  Computer Networking: An All-in-One Beginner's Guide to Understanding Communications Systems, Network Security, Internet Connections, Cybers  
  Kiser, Quinn  
 Paperback  
   
 $13.69   
 See More    

  How the Internet Really Works: An Illustrated Guide to Protocols, Privacy, Censorship, and Governance  
  Article 19  
 Hardcover  
   
 $18.99   
 See More    

  Mpls-Enabled Applications: Emerging Developments and New Technologies  
  Lucek, Julian  
 Minei, Ina  
 Paperback  
   
 $83.95   
 See More    

  Previous    Next     

 Magers & Quinn  
 3038 Hennepin Ave  
  Minneapolis, MN 55408  
  612-822-4611      
 Customer Area  
 My Account 
  Terms 
  Cookies 
  FAQs 
  Catalog 
    
 Newsletter  
 Sign Up For Our Newsletter 

 ©2021 Magers & Quinn Booksellers Privacy Policy

85. CLOSER_0 conference:
Home  Log In  Contacts  FAQs  INSTICC Portal    
   
 Information  Conference Details  Technical Program  Program Committee  Event Chairs  Keynote Lectures  Best Paper Awards  Satellite Events  Workshops  Special Sessions  Tutorials  Demos  Panels  Doctoral Consortium  Partners  Academic Partners  Industrial Partners  Exhibitors  Institutional Partners  Media Partners  Partner Events  Publication Partners  Previous Conferences  Abstracts  Awards    
  
 Sponsored by:    

 INSTICC is Member of:    

 Logistics:    

 CLOSER 2023 will be held in conjunction with ICEIS 2023    , VEHITS 2023    and SMARTGREENS 2023    .   
  Registration to CLOSER allows free access to the ICEIS, VEHITS and SMARTGREENS conferences (as a non-speaker).  

  Although the conference is back to the normal mode (i.e., in-person) speakers are allowed to present remotely if unable to travel to the venue (hybrid support).    

 The International Conference on Cloud Computing and Services Science (CLOSER), focuses on the highly important area of Cloud Computing, inspired by some latest advances that concern the infrastructure, operations, and available services through the global network. Further, the conference considers as essential the link to Services Science, acknowledging the service-orientation in most current IT-driven collaborations. The conference is nevertheless not about the union of these two (already broad) fields, but about Cloud Computing where we are also interested in how Services Science can provide theory, methods and techniques to design, analyze, manage, market and study various aspects of Cloud Computing.  
     
    Conference Chair    
 Claus Pahl  ,  Free University of Bozen-Bolzano, Italy   

 PROGRAM CHAIR    
 Maarten van Steen  ,  Digital Society Institute, University of Twente, Netherlands   

  Keynote Speakers   
 Vana Kalogeraki  ,  Athens University of Economics and Business, Greece   
  Alexandru Iosup  ,  VU University Amsterdam, Netherlands   
  Adriana Iamnitchi  ,  Maastricht University, Netherlands   

 Publications:     
  All papers presented at the conference venue  
  will be available at the SCITEPRESS Digital Library   
  ( consult SCITEPRESS  Ethics of Publication  )  

  A short list of best papers will be invited  
  for a post-conference special issue of the  
  Springer Nature Computer Science Journal   

  It is planned to publish a short list of revised and  
  extended versions of presented papers with  
  Springer in a CCIS Series book   

 Proceedings will be submitted for evaluation for indexing by:    

  Web of Science/Conference Proceedings Citation Index     

 © 2024  INSTICC

86. Broadnets_3 conference:
Home  | Help    

 Complete this captcha to connect to Waterstones  

 Please turn JavaScript on and reload the page.  
  Please enable Cookies and reload the page.  

 Please complete the captcha above and click submit to continue  

 © The Very Busy Spider  by Eric Carle

87. CollaborateCom_0 conference:
Open Menu  Home 
  Committees | Steering Committee 
  Organizing Committee 
  For Authors | Registration 
  Submission 
  Paper Presentation Recording Instructions 
  Camera-ready Submission (Confy+) 
  Zoom Meeting guide 
  Program | Full Program 
  Keynotes 
  Accepted papers 
  Calls | Call for Papers 
  Practical Info | Venue 
  Visas 
  Sponsorship 
  Help & Contact | Help & Contact 
  Cookie Policy 

 Home 
  Committees | Steering Committee 
  Organizing Committee 
  For Authors | Registration 
  Submission 
  Paper Presentation Recording Instructions 
  Camera-ready Submission (Confy+) 
  Zoom Meeting guide 
  Program | Full Program 
  Keynotes 
  Accepted papers 
  Calls | Call for Papers 
  Practical Info | Venue 
  Visas 
  Sponsorship 
  Help & Contact | Help & Contact 
  Cookie Policy 
   
 |      

 EAI COLLABORATECOM 2023 WAS HELD AS AN ON-SITE CONFERENCE WITH AN OPTION TO PRESENT REMOTELY IN CORFU,GREECE.   
 THANK YOU ALL FOR YOUR PARTICIPATION AND YOUR INVOLVEMENT!  

 We look forward to meeting you next year in Wuzhen, People’s Republic of China!   
 Go to current edition   

  Thank you for participating   
 Thank you for participating in CollaborateCom 2023!   
   
 We look forward to meeting you next year  
  in Wuzhen, People's Republic of China on November 16-17, 2024.   

 Next edition   

 Keynotes light   
 Keynote speakers   

 Prof. Christos Masouros    
   
 PhD in Electrical and Electronic Engineering, University of Manchester, UK   

 Prof. Michael Hübner    
   
 Brandenburgische Technische Universität (BTU),Cottbus, Germany   

 EAI Index   
 Get the recognition you deserve  
  with EAI Index:   
   
 - The first open and transparent way of recognizing great researchers worldwide   
   
 - Credits are awarded to all authors based on review, but regardless of acceptance   
   
 - Members with top 0.1% EAI Index at the end of the year will become EAI Fellows   
   
 Find out more  about EAI Index  

 Take a look back at the previous edition of EAI CollaborateCom  here  .    
 EAI CollaborateCom 2023 supports revolutionary EAI Community Review, find out more here  .    
 Every author receives EAI Index credits – regardless of acceptance. Learn more about EAI’s Recognition Program here  .    
 Get real feedback on your presentation from other registrants via EAI Compass.    

 Welcome to the EAI Community    
 Let the EAI Community help you build your career with collaborative research, objective evaluation, and fair recognition:  
 Extra visibility for your paper and fair review → | Community Review 
  Get credits to receive membership ranks and global recognition → | EAI Index 
  Real-time evaluation and feedback on your presentation on-site → | EAI Compass 

  About CollaborateCom 2023   
 Throughout the years 2020, 2021 and 2022, people around the world have witnessed the spread of Covid-19 pandemic and the life losses at every corner of the world. The pandemic has changed the way people work, live and socialize with friends and family members. In order to support the change, new technologies and facilities are required to facilities people’s needs, including how collaborative computing is designed and implemented. The theme of this year’s conference is “Intelligent Collaborative Computing for the Changing World”. New technologies, particularly non-contact communication, networking and work sharing technologies are encouraged to be investigated and disseminated in the academic and industry sectors. This would allow the professionals and industry to provide new solutions to support medical care, smart manufacturing, intelligent logistics, legal sharing of data, and wisely use of unmanned vehicles to deliver the services to the points of needs. The 19th International Conference on Collaborative Computing (CollaborateCom 2023) will be held in Corfu, Greece, and will continue to serve as a premier international forum for discussion among academic and industrial researchers, practitioners, and students interested in collaborative networking, technology and systems, and applications. Welcome to CollaborateCom 2023 Corfu, Greece!  

  Topics   
 We welcome contributions from the following fields:  
 Architectures, protocols, and enabling technologies for collaborative computing networks and systems 
  Collaboration in social media 
  Collaborative e-education, e-learning, and collaborative computing in large-scale digital libraries 
  Collaborative information seeking 
  Collaborative mobile networks and infrastructures 
  Collaborative technologies for fast creation and deployment of new mobile services 
  Collaborative, context-aware infrastructure 
  Computer-supported collaborative work with distributed systems 
  Energy management for collaborative networks 
  Methodologies and tools for design and analysis of collaborative user applications 
  Models and mechanisms for real-time collaboration 
  Peer-to-peer and overlay networks, systems, and applications 
  Simulation, performance evaluation, experiments, and case studies of collaborative networks and applications 
  Software design, testing, and experimentation technology for collaborative networking and applications 
  Theoretical foundations and algorithms for collaborative networks, applications, and work-sharing 
  Tools for collaborative decision-making processes 
  Visualization techniques, interaction devices and visual languages for collaborative networks and applications 

  Publication   
 All registered papers will be submitted for publishing by Springer and made available through SpringerLink Digital Library.  
 Proceedings will be submitted for inclusion in leading indexing services, such as Web of Science, Compendex, Scopus, DBLP, EU Digital Library, IO-Port, MatchSciNet, Inspec and Zentralblatt MATH.  
 Additional publication opportunities:  
 EAI Transactions series (Open Access) 
  EAI/Springer Innovations in Communications and Computing Book Series | (titles in this series are indexed in Ei Compendex, Web of Science & Scopus) 
  Authors of selected best accepted and presented papers will be invited to submit an extended version to:  
 Mobile Networks and Applications (MONET) Journal [IF: 3.426 (2020)] 
  Wireless Networks (WINET) Journal [IF: 2.602 (2020)] 
  Engineering Reports 
  International Journal of Web Information Systems 

  About EAI   
 This event is organized by EAI  .  
   
  EAI – European Alliance for Innovation is a non-profit organization and a professional community established in cooperation with the European Commission to empower the global research and innovation, and to promote cooperation between European and International ICT communities.  
   
  EAI’s vision  is to foster excellence in research and innovation on the principles of transparency, objectivity, equality, and openness. Our guiding principle is community cooperation to create better research, provide fair recognition of excellence and transform best ideas into commercial value proposition.  
   
  EAI‘s mission  is to create an environment that rewards excellence transparently, and builds recognition objectively regardless of age, economic status or country of origin, where no membership fees or closed door committees stand in the way of your research career.  
   
  Through these shared values, EAI leads the way toward advancing the world of research and innovation, empowering individuals and institutions for the good of society to fully benefit from the digital revolution.  

  Proceedings   
 Proceedings Part I, have been published in SpringerLink Digital Library  .  
 Proceedings Part II, have been published in SpringerLink Digital Library  .  
 Proceedings Part III, have been published in SpringerLink Digital Library  .  

 Main Track (round 1)   
 Full Paper Submission deadline   
  1 June 2023  
  Notification deadline   
  17 July 2023  
  Camera-ready deadline   
  17 August 2023  
  Start of Conference   
  4 October 2023  
  End of Conference   
  6 October 2023  
  
 Main Track (round 2)   
 Full Paper Submission deadline   
  15 August 2023  
  Notification deadline   
  30 August 2023  
  Camera-ready deadline   
  10 September 2023  
  Start of Conference   
  4 October 2023  
  End of Conference   
  6 October 2023  
   
 Previous CollaborateCom editions  
 2022  – Hangzhou, People’s Republic of China  
  2021  – Virtual conference  
  2020  – Virtual conference  
  2019  – London, Great Britain  
  2018  – Shanghai, People’s Republic of China  
  2017  – Edinburgh, Great Britain  
  2016  – Beijing, People’s Republic of China  
  2015  – Wuhan, People’s Republic of China  
  2014  – Miami, Florida, United States  
  2013  – Austin, Texas, United States  
  2012  – Pittsburgh, Pennsylvania, United States  
  2011  – Orlando, Florida, United States  
  2010  – Chicago, Illinois, United States  
  2009  – Washington, Washington D.C., United States  
  2008  – Orlando, Florida, United States  
   
 Sponsors  

 This event is a part of  
 EAI Conference series   

 Become an EAI Member   
 Join for free    

 Follow us   

 © 2023 CollaborateCom | EAI   

 Manage Cookie Consent   

 To provide the best experiences, we use technologies like cookies to store and/or access device information. Consenting to these technologies will allow us to process data such as browsing behavior or unique IDs on this site. Not consenting or withdrawing consent, may adversely affect certain features and functions.   
 Functional   Functional    Always active       The technical storage or access is strictly necessary for the legitimate purpose of enabling the use of a specific service explicitly requested by the subscriber or user, or for the sole purpose of carrying out the transmission of a communication over an electronic communications network.    
  Preferences   Preferences         The technical storage or access is necessary for the legitimate purpose of storing preferences that are not requested by the subscriber or user.    
  Tracking   Tracking         The technical storage or access that is used exclusively for statistical purposes.  Technical storage or access that is used solely for the purpose of tracking users on a website or across several websites. The data is not shared with third parties.    
  Marketing   Marketing         The technical storage or access is required to create user profiles to send advertising, or to track the user on a website or across several websites for similar marketing purposes.    

 Manage options  Manage services  Manage {vendor_count} vendors  Read more about these purposes    
   
 Accept  Deny  View preferences  Save preferences  View preferences    
 {title}  {title}  {title}    

 Manage consent

88. CLOSER_1 conference:
Home  Log In  Contacts  FAQs  INSTICC Portal    
   
 Documents  Actions  On-line Registration  Registration Fees  Deadlines and Policies  Submit Paper  Submit Abstract  Guidelines  Templates  Glossary  Author's Login  Reviewer's Login  Information  Conference Details  Important Dates  Call for Papers  Program Committee  Event Chairs  Keynote Lectures  Best Paper Awards  Satellite Events  Tutorials  Demos  Panels  Travel and Accommodation  Conference Venue  About the Region  Reaching the City  Visa Information  Hotel Reservation  Partners  Academic Partners  Industrial Partners  Institutional Partners  Media Partners  Partner Events  Publication Partners  Previous Conferences  Websites  Abstracts  Invited Speakers  Awards  Books Published    
  
 Sponsored by:    

 INSTICC is Member of:    

 Logistics:    

 CLOSER 2025 will be held in conjunction with CSEDU 2025    , GISTAM 2025    , VEHITS 2025    and SMARTGREENS 2025    .   
  Registration to CLOSER allows free access to the CSEDU, GISTAM, VEHITS and SMARTGREENS conferences (as a non-speaker).  

  Although the conference is back to the normal mode (i.e., in-person) speakers are allowed to present remotely if unable to travel to the venue (hybrid support).    

 Upcoming Submission Deadlines  
 Position/Regular Paper Submission:  December 13, 2024    
      
 Abstracts Track Submission:  January 30, 2025    
  
  (See Important Dates for more information)    
 The International Conference on Cloud Computing and Services Science aims at bringing together engineers, researchers and practitioners interested in advances and applications concerning the cloud infrastructure, operations, and available services through the global network. Further, the conference considers as essential the link to Services Science, acknowledging the service-orientation in most current IT-driven collaborations, and provides a forum for discussing how Services Science can provide theory, methods and techniques to design, analyze, manage, market and study various aspects of Cloud Computing.    

    Conference Chair    
 Maarten van Steen  ,  Digital Society Institute, University of Twente, Netherlands   

 PROGRAM CHAIR    
 Valeria Cardellini  ,  University of Rome Tor Vergata, Italy   

  Keynote Speakers   
 Aaron Ding  ,  TU Delft, Netherlands   
  Sonia Ben Mokhtar  ,  LIRIS CNRS, France   

 Publications:     
  All papers presented at the conference venue  
  will be available at the SCITEPRESS Digital Library   
  ( consult SCITEPRESS  Ethics of Publication  )  

  A short list of best papers will be invited  
  for a post-conference special issue of the  
  Springer Nature Computer Science Journal   

  It is planned to publish a short list of revised and  
  extended versions of presented papers with  
  Springer in a CCIS Series book  (final approval pending)  

 Proceedings will be submitted for evaluation for indexing by:    

  Web of Science/Conference Proceedings Citation Index     

 © 2024  INSTICC

89. COMSNETS_0 conference:
Celebrating Fifteen Years of COMSNETS  

 COMSNETS 2023 
  
 15 th   International Conference on COMmunication Systems & NETworkS  
 January 3 - 8 | Hybrid Conference   
  Chancery Pavilion Hotel, Residency Road, Bengaluru, India   
 Initiative by COMSNETS Association   

 In-Cooperation With       

 Technical Co-Sponsors       

 Conference Partners       

 Toggle navigation        
 Home 
  Accepted Papers | Main Conference 
  Poster Session 
  Graduate Forum 
  Demos and Exhibits 
   MINDS Workshop 
  Connected Vehicles & Autonomous Driving Workshop 
  SDR Workshop 
  NetHealth Workshop 
  CSP Workshop 
  TASIR Workshop 
   Camera Ready Guidelines 
  Message from Chairs New | Text Messages 
  Video Messages 
  Committee | Organizing Committee 
  Program Committee 
  COMSNETS Association 
  Volunteers 
  Schedule 
  Main Conference | Technical Program New 
  Keynote Speakers 
  Industry Insights Keynotes 
  Invited Speakers 
  Fireside Chat 
  Panel Discussions 
  Demos & Exhibits 
  Poster Session 
  Tutorials 
  Call for Papers 
   Graduate Forum 
  Women In Engineering 
  COMSJOB 
  Workshops | Workshop on Machine Intelligence in Networked Data and Systems (MINDS) 
  Cyber Security and Privacy Workshop 
  NetHealth Workshop 
  Standards-driven Research Workshop 
  TASIR Workshop: Testbeds for Advanced Systems Implementation and Research 
  Connected Vehicles & Autonomous Driving Workshop (CVAD) 
  Register Now New 
  Attending | Registration Details 
  Call For Participation 
  Physical Participation Guidelines 
  Travel & Accommodation 
  Conference Venue 
  Visa Request 
  Visiting Bangalore 
  Accommodation 
  Instructions for Virtual Attendees 
  Sponsorship | Become a Sponsor 
  Events we Support 
  14 Trees Foundation 
  Awards | Best Paper Awards 
  COMSNETS 2023 Travel Grants 
  Travel Awards by LRN 
  Fellowships & Awards 
  About 
  Contact 
  Telecom Technology Development Fund 
  COMSNETS History 

 Delegates are requested to fill up the feedback form.      
 Delegates can download the accepted papers from this link  . Password can be found at the registration desk.    
  Memories of COMSNETS 2023     

  Research Keynote Speakers  

 Ashutosh Sabharwal   
  Rice University, USA | Margaret Martonosi   
  National Science Foundation, USA 
 Matti Latva-aho   
  University of Oulu, Finland | Saurabh Bagchi   
  Purdue University, USA 

  Fireside Chat  
   
 Bhavish Aggarwal   
  Ola, India 

  Industry Keynote Speaker  
   
 Vita Bortnikov   
  IBM Research, USA 

  Invited Speakers  
    
 Varsha Apte   
  IIT Bombay, India | Baek-Young Choi   
  University of Missouri - Kansas City, USA | Satish K.   
  Nokia Bell Labs, Bangalore, India | Salil Kanhere   
  UNSW, Sydney, Australia | Gerald Karam   
  Nokia Bell Labs, USA 
 Debdoot Mukherjee   
  Meesho, India | Supratik Mukhopadhyay   
  Louisiana State University (LSU), USA | Dinesh Rajan   
  Southern Methodist University, USA | Mridula Singh   
  CISPA, Germany | Suhrid Wadekar   
  Goodwin Procter LLC, Boston, USA 

  Workshop Speakers  
  NetHealth  
     
  Gaurav Parchani   
  Dozee, India     
    
  Dr. Vijay Narayan Tiwari   
  Samsung R&D Institute Bangalore, India   

  Prof. Dipti Gupta   
  IIT Bombay, India   

 Connected Vehicles & Autonomous Driving  
     
  Dr. Kaushik Subramanian   
  Senior Research Scientist, Sony AI     
    
  Prof. P. Rajalakshmi   
  IIT Hyderabad, India     
    
  Dr. Ramachandra Budihal   
  Wipro Limited, India     

 Standards-driven Research  
     
  Soumava Mukherjee   
  IIT Jodhpur, India     
    
  Dr. Anand Baswade   
  IIT Bhilai, India     
    
  Dr. Vinosh Babu James   
  Qualcomm     
    
  Dhivagar Baskaran   
  Principal Research Engineer, CEWiT, India     
    
  Marco Di Renzo   
  Paris-Saclay University, France     
    
  N. Kishor Narang   
  Narnix Technolabs Pvt. Ltd.     

 Cyber Security and Privacy  
    
  Sandeep K. Shukla   
  IIT Kanpur, India  

 TASIR  
     
  Abdul Kayum   
  Telecommunication Engineering Centre, Government of India     
    
  Antony Franklin   
  IITH, India     
    
  Subhramoy Mohanti   
  InterDigital, Los Altos, California     
   
 MINDS  
     
  Somali Chaterji   
  Purdue University; KeyByte     
    
  Indranil Gupta   
  University of Illinois, Urbana-Champaign, USA     
    
  Aditya Kanade   
  Microsoft Research, India     
    
  Rahul Vaze   
  Tata Institute of Fundamental Research, India     
    
  Manjesh Hanawal   
  IIT Bombay, India     

    Tutorials  
  Tutorial 1  
   Toward Automated Security Risk Assessment: Models, Metrics, and Recent Applications  
   
 Dr. Dan Dongseong Kim (University of Queensland, Australia)   

 Tutorial 2  
   Identification of Causal Dependencies in Multivariate Time Series  
   
 Sujoy Roychowdhury, Serene Banerjee, and Ranjani H.G. (Ericsson, India)   

 Tutorial 3  
   5G Architecture Overview, Software Stack and Use Cases  

 Atahar Khan, Satya Priyo Dhar, and Ramakrishnan Shanmugasundaram (Cisco, India)   

 Tutorial 4  
   Deep Learning based Radio Frequency Signal Classification: Hands-on  
   
 Prabhu Chandhar and Sathish Babu (Chandhar Research Lab, India)   

 Tutorial 5  
   5G Non-Terrestrial Networks: Recent Advancements, Open Challenges, and Research Tools  
   
 Sumit Kumar and Jorge Querol (University of Luxembourg, Luxembourg)   

 Tutorial 6  
   Cloud-native Networking Deep Dive  

 Chander Govindarajan and Priyanka Naik (IBM Research, India)   

 Tutorial 7  
   OTFS Aided Cell-free Massive MIMO for Beyond 5G  
   
 Prem Singh (IIIT Bangalore) and Ekant Sharma (IIT Roorkee)   

 COMSNETS 2023 Brochure  
    
  Conference Venue  
  We are proud to announce that COMSNETS 2023 will be held at the Chancery Pavilion Hotel   , Bangalore, India.  

   Social Media Channels  

 Tweets by comsnets    

 ×     

    Travel Grants Sponsors  

  Previous COMSNETS    2022 
  2021 
  2020 
  2019 
  2018 
  2017 
  2016 
  2015 
  2014 
  2013 
  2012 
  2011 
  2010 
  2009 

  Platinum Sponsor  

 Gold Sponsors  

 Silver Sponsor  

 Bronze Sponsors  

  Wi-Fi Partner  

  Publications Partner  

  Conference Partner  

  Technical Partner  

  Eco-Friendly Partner  

 University Partners  
   
  CMU     
  University of Pennsylvania, USA     
  SMU Singapore     
  Louisiana State University, USA     
  UQIDAR     
  Plaksha University, India     
  IISc     
  IIT Delhi     
  IIT Bombay     
  IIT Kanpur     
  IIT Kharagpur     
  IIT Madras     
  IIT Hyd     
  IIT Jammu     
  IIIT Delhi     
  IIIT Hyderabad     
  IIIT Bangalore     
  BMSCE, India     
  DA-IICT,India     
  KAIST, Korea     

  Subscribe  

 ×   Subscribe to Updates  
   
  Subscribe!       

 Quick Links 
   Organizing Committee 
  Technical Committee 
  Sponsorship Opportunities 
  Contact 
    
 Program 
   Keynote Talks 
  Invited Talks 
  Banquet Talk 
  Panel Discussions 
  Poster Session 
  Graduate Forum 
  Demos & Exhibits 
  COMSJOB 
  Workshops 
  Tutorials 
    
 Author 
   Call for Papers 
  Important Dates 
  Travel Grants 
  Submission Guidelines 
  Camera Ready Submission 
  Font Embedding 
    
 Hotel & Travel 
   Visa 
  Conference Venue 
  Accommodation 
  Visiting Bangalore 
    
 Previous COMSNETS 
   2022 
  2021 
  2020 
  2019 
  2018 
  2017 
  2016 
  2015 
  2014 
  2013 
  2012 
  2011 
  2010 
  2009 

 Terms of Service 
  Contact Us 
  Privacy 
    
 © 2021 comsnets.org. All rights reserved

90. COMSNETS_1 conference:
The requested URL was rejected. Please consult with your administrator.  
   
  Your support ID is: < 8203162004119587574>  
   
  [Go Back]

91. ICCSA_0 conference:


92. COMSNETS_2 conference:
Toggle navigation        
 Home 
  Committee | Organizing Committee 
  Program Committee 
  Volunteers 
  Accepted Papers | Main Conference 
  Call for Papers 
  Schedule New 
  Main Conference | Keynote Speakers 
  Banquet Talk 
  Panel Discussions 
  Invited Speakers 
  Ignite Bundle 
  Demos & Exhibits 
  Entrepreneur Ignite Summit (EIS) 
  Undergraduate Ignite Summit (UIS) 
  Poster Session 
  Undergraduate Forum 
  Graduate Forum 
  Women In Engineering 
  Mentoring Sessions 
  I+ART: Industry-Academia Research Track 
  Workshops | Call for Workshop Proposals 
  Workshop on Machine Intelligence in Networked Data and Systems (MINDS) 
  Cyber Security and Privacy Workshop (CSP) 
  Standards-driven Research Workshop (SDR) 
  Workshop on Quantum Technologies (WQT) 
  Internet Intelligence and Governance Workshop (IIGW) 
  Advances in Autonomous Driving and Vehicular Networks (ADVnet) 
  Workshop on Systems for the Future of AI_ML (SysAI) 
  Securing and Managing Advanced Technologies for Industry 4.0 (SAMAT) 
  Sponsorship | Become a Sponsor 
  Events we Support 
  14 Trees Foundation 
  Travel Grants 
  Awards | Best Paper Awards 
  Travel Awards by LRN 
  Fellowships & Awards 
  Registration 
  Contact 
  COMSNETS Association 
  COMSNETS History 
  Attending | Registration Details 
  Call for Participation 
  Travel & Accommodation 
  Conference Venue 
  Visa Request 
  Visiting Bangalore 
  Accommodation 
  COMSNETS Debrief 
  COMSNETS-5K Run 

 COMSNETS 2025 
  
 17 th   International Conference on COMmunication Systems & NETworkS  
 January 6 - 10  
  Chancery Pavilion Hotel, Residency Road, Bengaluru, India   
 Initiative by COMSNETS Association   

  In-Cooperation With       

 Technical Co-Sponsors       

 Conference Partner       

 COMSNETS 2024 Photos    

 About COMSNETS  
 COMSNETS is a premier international conference dedicated to advances in Networking and Communications Systems. The conference is a yearly event for a world-class gathering of researchers from academia and industry, practitioners, and business leaders, providing a forum for discussing cutting edge research, and directions for new innovative business and technology.  
 The conference will include a highly selective technical program consisting of submitted papers, a small set of invited papers on important and timely topics from well-known leaders in the field, and poster session of work in progress. Focused workshops and panel discussions will be held on emerging topics to allow for a lively exchange of ideas. International business and government leaders will be invited to share their perspectives, and will complement the technical program.  
  
 COMSNETS 2025 Main Conference paper decisions  are out!  
   
  Camera-ready guidelines: https://www.comsnets.org/camera_ready.html    
   
  Camera ready papers are due by November 15, 2024 AoE  .   
   
 Important Dates   
  
 Main Conference Dates | 7th-9th January 2025 
 Workshop Dates | 6th&10th January 2025 

    Keynote Speakers  
     
  Ranveer Chandra   
  Microsoft USA     
    
  Kiran Kumar Kuchi   
  Indian Institute of Technology Hyderabad   

  Nina Taft   
  Google, USA   

  Banquet Speaker  
     
  Deepak Bansal   
  Corporate Vice President,  
  Microsoft Azure   

  Invited Speakers  

  Takuro Yonezawa   
  Nagoya University, Japan    

  Tianyin Xu   
  University of Illinois Urbana-Champaign, US    

  Nitinder Mohan   
  Delft University of Technology (TU Delft), Netherlands    

  Sung-Ju Lee   
  KAIST, Korea    

  Rama Govindaraju   
  NVIDIA, US    

  Kassem M. Fawaz   
  University of Wisconsin Madison, US    

  Ayan Chaudhury   
  IIT Kharagpur, India    

  Samarjit Chakraborty   
  University of North Carolina Chapel Hill, US    

  Sarani Bhattacharya   
  IIT Kharagpur, India    

  Shubham Agarwal   
  Adobe Research    

  Conference Venue  
  We are proud to announce that COMSNETS 2025 will be held at the The Chancery Pavillion, Residency Road   , Bangalore, India.  

   Social Media Channels  

 Tweets by comsnets    

  Travel Grants Sponsor  

   Platinum Sponsor  

 Gold Sponsors  

  Silver Sponsors  

 Bronze Sponsors  

 Conference Partner  

 University Partners  
   
  CMU     
  University of Pennsylvania, USA     
  SMU Singapore     
  Louisiana State University, USA     
  SRM University, India     
  Plaksha University, India     
  IISc     
  IIT Delhi     
  IIT Bombay     
  IIT Kanpur     
  IIT Kharagpur     
  IIT Madras     
  IIT Hyd     
  IIT Jammu     
  IIIT Delhi     
  IIIT Hyderabad     
  IIIT Bangalore     
  BMSCE, India     
  DA-IICT,India     
  KAIST, Korea     

  Subscribe  

 ×   Subscribe to Updates  
   
  Subscribe!       

 Quick Links 
   Organizing Committee 
  Technical Committee 
  Sponsorship Opportunities 
  Contact 
    
 Hotel & Travel 
   Visa 
  Conference Venue 
  Accommodation 
  Visiting Bangalore 
    
 Previous COMSNETS 
   2024 
  2023 
  2022 
  2021 
  2020 
  2019 
  2018 
  2017 
  2016 
  2015 
  2014 
  2013 
  2012 
  2011 
  2010 
  2009 

 Terms of Service 
  Contact Us 
  Privacy 
    
 © 2021 comsnets.org. All rights reserved

93. CLOSER_2 conference:
About SIGWEB | Member Benefits 
  Join ACM SIGWEB 
  Executive Committee | Past Executive Committee 
  Home 
  Conferences | ACM SIGWEB Conferences | Hypertext (HT) 
  Joint Conference on Digital Libraries (JCDL) 
  Document Engineering (DocEng) 
  Web Science (WebSci) 
  Information and Knowledge Management (CIKM) 
  Web Search and Data Mining (WSDM) 
  User Modeling, Adaptation and Personalization (UMAP) 
  The Web Conference 
  Cooperating Conferences 
  Upcoming 
  Awards 
  Community | SIGWEB Student Travel Grant 
  SIGWEB Research Event Award 
  Volunteer Opportunities 
  SIGWEB Newsletter | Current Issue 
    
 You are here: 
  Home 
  Show all Events 

 Events Calendar  

 By Year    
 By Month    
 By Week    
 Today    
 Jump to month    

    January  February  March  April  May  June  July  August  September  October  November  December   2022  2023  2024  2025  2026  2027  2028  2029   Jump to month      
   
   Export Event  
    
   Save iCal     
   Send to Google Calendar     
   Send to Yahoo Calendar     
   Send to Outlook Live     
   Send to Microsoft Outlook     
   
   Save iCal     

 Close    

 13th International Conference on Cloud Computing and Services Science   
   
 From Wednesday, April 26, 2023  
  To Friday, April 28, 2023  
    
 Hits  : 2410   
    
 Contact  https://closer.scitevents.org/Home.aspx    
 The International Conference on Cloud Computing and Services Science (CLOSER), focuses on the highly important area of Cloud Computing, inspired by some latest advances that concern the infrastructure, operations, and available services through the global network. Further, the conference considers as essential the link to Services Science, acknowledging the service-orientation in most current IT-driven collaborations. The conference is nevertheless not about the union of these two (already broad) fields, but about Cloud Computing where we are also interested in how Services Science can provide theory, methods and techniques to design, analyze, manage, market and study various aspects of Cloud Computing.  
   
 Location  Prague, Czech Republic

94. CollaborateCom_1 conference:
Open Menu  Home 
  Committees | Steering Committee 
  Organizing Committee 
  Technical Program Committee 
  Registration 
  Program | Full Program 
  Keynotes 
  Accepted papers 
  For authors | Call for Papers 
  Camera-ready Submission (Confy+) 
  Submission 
  Practical Info | Venue 
  Things to do in Wuzhen 
  Visas 
  Sponsorship 
  Help & Contact | Help & Contact 
  Cookie Policy 

 Home 
  Committees | Steering Committee 
  Organizing Committee 
  Technical Program Committee 
  Registration 
  Program | Full Program 
  Keynotes 
  Accepted papers 
  For authors | Call for Papers 
  Camera-ready Submission (Confy+) 
  Submission 
  Practical Info | Venue 
  Things to do in Wuzhen 
  Visas 
  Sponsorship 
  Help & Contact | Help & Contact 
  Cookie Policy 
   
 |      

 CollaborateCom authors have enjoyed over 4500+  citations,  with average 6.9 citations per paper   ( Scopus  ).  
 Top performing CollaborateCom paper is currently  
  at 115 citations   and counting!  
   
 Go To Current Edition   

  Thank you for participating   
 Thank you for participating in   
   
 EAI CollaborateCom 2024!   
   
 We look forward to meeting you next year  
  in Shanghai, China!   

 Keynotes light   
 Explore Wuzhen   

 Visit the floating bazar, Mu Xin Art Mu,  
  Yida Silk workshop and other spectacular sights in Wuzhen!   
   
 Things to do in Wuzhen    

 Keynotes light   
 Keynote speakers   

 Prof. Kaizhu Huang    
   
 Title: Robust Adversarial Training Improves Trustworthy Artificial Intelligence    

 Prof. Xiaofeng Tao    
   
 Title: Full-sensing Holographic Immersive Communications    

 Full Program    

 Registration  is now open, don’t miss the early-bird fee!    
 Program is now available in full  !    
 Meet the keynote speakers  , Prof. Kaizhu Huang and Prof. Xiaofeng Tao.    
 Take a look back at the previous edition of CollaborateCom here  .    
 CollaborateCom 2024 supports revolutionary EAI Community Review, find out more here  .    
 Every author receives EAI Index credits – regardless of acceptance. Learn more about EAI’s Recognition Program here  .    

 Welcome to the EAI Community    
 Let the EAI Community help you build your career with collaborative research, objective evaluation, and fair recognition:  
 Extra visibility for your paper and fair review → | Community Review 
  Get credits to receive membership ranks and global recognition → | EAI Index 
  Real-time evaluation and feedback on your presentation on-site → | EAI Compass 

  About CollaborateCom 2024   
 Many organizations and individuals have relied on electronic collaboration between distributed teams of humans, computer applications, and/or autonomous robots to achieve higher productivity and produce joint products that would have been impossible to develop without the contributions of multiple collaborators. Technology has evolved from standalone tools, to open systems supporting collaboration in multi-organizational settings, and from general-purpose tools to specialized collaboration grids. Future collaboration solutions that fully realize the promises of electronic collaboration require advancements in networking, technology and systems, user interfaces and interaction paradigms, and interoperation with application-specific components and tools.  
  The 20th International Conference on Collaborative Computing (CollaborateCom 2024) will be held in Wuzhen, China, and will continue to serve as a premier international forum for discussion among academic and industrial researchers, practitioners, and students interested in collaborative networking, technology and systems, and applications.  

  Topics   
 We welcome contributions from the following fields:  
 General Topic   
 Architectures, protocols, and enabling technologies for collaborative computing networks and systems 
  Collaboration in social media 
  Collaborative e-education, e-learning, and collaborative computing in large scale digital libraries 
  Collaborative information seeking 
  Collaborative mobile networks and infrastructures 
  Collaborative technologies for fast creation and deployment of new mobile services 
  Collaborative, context-aware infrastructure 
  Computer supported collaborative work with distributed systems 
  Energy management for collaborative networks 
  Methodologies and tools for design and analysis of collaborative user applications 
  Models and mechanisms for real-time collaboration 
  Peer-to-peer and overlay networks, systems, and applications 
  Simulation, performance evaluation, experiments, and case studies of collaborative networks and applications 
  Software design, testing, and experimentation technology for collaborative networking and applications 
  Theoretical foundations and algorithms for collaborative networks, applications, and worksharing 
  Tools for collaborative decision making processes 
  Visualization techniques, interaction devices and visual languages for collaborative networks and applications 
  Topic 1. Internet of Things (IoT) and collaboration   
 Collaboration in pervasive and cloud computing environments 
  Collaborative sensor networks, unmanned air and ground vehicle networks and applications 
  Collaborative, location-aware mobile systems/applications 
  Cyber-physical systems 
  Collaboration in health-care environments 
  Participatory sensing, crowdsourcing, and citizen science 
  Topic 2. Collaborative Data and Workflow Management   
 Big data and spatio-temporal data in collaborative environments/systems 
  Collaboration in data-intensive scientific discovery 
  Collaboration techniques in data-intensive computing and cloud computing 
  Data management and middleware support for collaborative information systems 
  Distributed collaborative workflows 
  Workflow management for collaborative networks/systems 
  Web services technologies and service-oriented architectures for collaborative networking and applications 
  Topic 3. Collaboration with artificial intelligence   
 Autonomic computing and quality of services in collaborative networks, systems, and applications 
  Group-driven composition of systems from components 
  Human-centric ubiquitous collaboration 
  Human-robot collaboration 
  Multi-agent technology and software technologies for collaborative networking and applications 
  Topic 4. Security and Trustworthy   
 Security, privacy and trust management in collaborative networks, systems, and applications 
  Trustworthy collaborative business processing in virtual organizations 

  Publication   
 All registered papers will be submitted for publishing by Springer and made available through SpringerLink Digital Library.  
 Proceedings will be submitted for inclusion in leading indexing services, such as Web of Science, Compendex, Scopus, DBLP, EU Digital Library, IO-Port, MatchSciNet, Inspec and Zentralblatt MATH.  
 Authors of selected best accepted and presented papers will be invited to submit an extended version to:  
 Mobile Networks and Applications (MONET) Journal [IF: 3.8 (2022)] 
  All accepted authors are eligible to submit an extended version in a fast track of:  
 EAI Endorsed Transactions on Scalable Information Systems (ESCI-WoS, Compendex) | – indexed in | ESCI, | Ei Compendex 
  EAI Endorsed Transactions on Mobile Communications and Applications 
    
 Additional publication opportunities:  
 EAI Transactions series (Open Access) 
  EAI/Springer Innovations in Communications and Computing Book Series | (titles in this series are indexed in Ei Compendex, Web of Science & Scopus) 

  About EAI   
 This event is organized by EAI  .  
   
  EAI – European Alliance for Innovation is a non-profit organization and a professional community established in cooperation with the European Commission to empower the global research and innovation, and to promote cooperation between European and International ICT communities.  
   
  EAI’s vision  is to foster excellence in research and innovation on the principles of transparency, objectivity, equality, and openness. Our guiding principle is community cooperation to create better research, provide fair recognition of excellence and transform best ideas into commercial value proposition.  
   
  EAI‘s mission  is to create an environment that rewards excellence transparently, and builds recognition objectively regardless of age, economic status or country of origin, where no membership fees or closed door committees stand in the way of your research career.  
   
  Through these shared values, EAI leads the way toward advancing the world of research and innovation, empowering individuals and institutions for the good of society to fully benefit from the digital revolution.  

 Important dates  
  
 Main Track (round 1)    
 Full Paper Submission deadline   
  1 May 2024  
  Notification deadline   
  1 June  15 June 2024  
  Camera-ready deadline   
  30 July 2024  
  Start of Conference   
  16 November 2024  
  End of Conference   
  17 November 2024  
 Main Track (round 2)    
 Full Paper Submission deadline   
  30 June 2024  
  Notification deadline   
  30 July  10 August 2024  
  Camera-ready deadline   
  31 August 2024  
  
 Late Track    
 Full Paper Submission deadline   
  15 July 2024  
  Notification deadline   
  30 July  10 August 2024  
  Camera-ready deadline   
  31 August 2024  
 Late Track (round 2)    
    
 Full Paper Submission deadline   
  31 July 2024  
  Notification deadline   
  31 August  19 August 2024  
  Camera-ready deadline   
  30 September 2024  
   
 Previous editions  
 2023  – Corfu Island, Greece  
  2022  – Hangzhou, People’s Republic of China  
  2021  – Virtual conference  
  2020  – Virtual conference  
  2019  – London, Great Britain  
  2018  – Shanghai, People’s Republic of China  
  2017  – Edinburgh, Great Britain  
  2016  – Beijing, People’s Republic of China  
  2015  – Wuhan, People’s Republic of China  
  2014  – Miami, Florida, United States  
  2013  – Austin, Texas, United States  
  2012  – Pittsburgh, Pennsylvania, United States  
  2011  – Orlando, Florida, United States  
  2010  – Chicago, Illinois, United States  
  2009  – Washington, Washington D.C., United States  
  2008  – Orlando, Florida, United States  
   
 Sponsors  

 This event is a part of  
 EAI Conference series   

 Become an EAI Member   
 Join for free    

 Follow us   

 © 2024 CollaborateCom | EAI   

 Manage Cookie Consent   

 To provide the best experiences, we use technologies like cookies to store and/or access device information. Consenting to these technologies will allow us to process data such as browsing behavior or unique IDs on this site. Not consenting or withdrawing consent, may adversely affect certain features and functions.   
 Functional   Functional    Always active       The technical storage or access is strictly necessary for the legitimate purpose of enabling the use of a specific service explicitly requested by the subscriber or user, or for the sole purpose of carrying out the transmission of a communication over an electronic communications network.    
  Preferences   Preferences         The technical storage or access is necessary for the legitimate purpose of storing preferences that are not requested by the subscriber or user.    
  Tracking   Tracking         The technical storage or access that is used exclusively for statistical purposes.  Technical storage or access that is used solely for the purpose of tracking users on a website or across several websites. The data is not shared with third parties.    
  Marketing   Marketing         The technical storage or access is required to create user profiles to send advertising, or to track the user on a website or across several websites for similar marketing purposes.    

 Manage options  Manage services  Manage {vendor_count} vendors  Read more about these purposes    
   
 Accept  Deny  View preferences  Save preferences  View preferences    
 {title}  {title}  {title}    

 Manage consent

95. ICCSA_1 conference:
Search Site   only in current section    
     
  Advanced Search…    
   
 Log in 

 Toggle navigation        
 Home 
  Themes 
  Committees 
  Workshops 
  Call for Papers 
  Keynote Speakers 
  Programme 
  Submission Site 

 You are here:  Home 

 The 23rd International Conference on Computational Science and Its Applications   https://2023.iccsa.org  https://2023.iccsa.org/@@site-logo/iccsa1150x225.jpg     
 The 23rd International Conference on Computational Science and Its Applications  

 The 23rd International Conference on Computational Science and Its Applications (ICCSA 2023) will be held on July 3 - 6, 2023 in collaboration with the National Technical University of Athens and University of the Aegean, Athens, Greece.    
 ICCSA 2023 will be the next event in a series of highly successful International Conferences on Computational Science and Its Applications (ICCSA), previously held in Malaga, Spain (2022), Cagliari, Italy (2021), Online (2020), in Saint Petersburg, Russia (2019), Melbourne, Australia (2018), Trieste, Italy (2017), Beijing. China (2016), Banff, Canada (2015), Guimaraes, Portugal (2014), Ho Chi Minh City, Vietnam (2013), Salvador de Bahia, Brazil (2012), Santander, Spain (2011), Fukuoka, Japan (2010), Suwon, Korea (2009), Perugia, Italy (2008), Kuala Lumpur, Malaysia (2007), Glasgow, UK (2006), Singapore (2005), Assisi, Italy (2004), Montreal, Canada (2003), and (as ICCS) in Amsterdam, The Netherlands (2002) and San Francisco, USA (2001). The first ICCSA conference was co-organized by C.J.K. Tan (UK) and M. Gavrilova (U of Calgary, Canada) in 2003.  
 Computational Science is a main pillar of most present research, industrial and commercial activities and plays a unique role in exploiting innovative Information and Communication Technologies.  
 The ICCSA Conference offers an opportunity to discuss new issues, tackle complex problems and find advanced solutions to enable shaping new trends in Computational Science.  
 Submitted papers will be subject to stringent peer review by at least three experts and carefully evaluated based on originality, significance, technical soundness, and clarity of exposition.  
 All accepted papers will be included in the Springer Lecture Notes in Computer Science (LNCS)  series which is indexed by Scopus, EI Engineering Index, Thomson Reuters Conference Proceedings Citation Index (included in ISI Web of Science), and several other indexing services. The papers will contain linked references, XML versions and citable DOI numbers.  

 Springer is able to manage ORCID ID related to the authors and the Proceedings Volumes Editors! Please add the ORCID ID related to each author of your submitted paper!!!     
 Warning: Fake ICCSA Conference by WASET   
  We have noticed the existence of organisations such as WASET that run fake “conferences” in order to make profit with the registration fees, often spoofing the names of real conferences. WASET claims to be organising a conference called ICCSA next year, which is a FAKE ICCSA conference.  
  The Real ICCSA conference has been organised by the ICCSA Society since 2003. We do not have any involvement with WASET. Please spread this news to your contacts and communities so that nobody mistakenly participates to such fake conferences.  
  WASET is predator publisher. Go to this Wiki Link: https://en.wikipedia.org/wiki/World_Academy_of_Science,_Engineering_and_Technology    
 The conference is organized in cooperation with:   
   
   The National Technical University of Athens   
  
   The University of the Aegean   
   
 This conference is proudly sponsored by:  

  Springer International Publishing      
     
  Computers Journal, ISSN: 2073-431X      

  University of Perugia  , Italy    
  
  University of Basilicata   , Italy   

   Monash University  , Australia    

  Kyushu Sangyo University   , Japan   

  University of Minho   , Portugal   

 News   
 Updated Info available | Jul 03, 2023 
  Test the remote presentation environment | Jun 21, 2023 
  Conference program available | Jun 21, 2023 
  Registration to the conference is mandatory | Jun 18, 2023 
    
 More news…   

 Quick Links  
 Instructions for Authors   
 Registration Info   
 Pre-filled Copyright Forms   
 ORCID   
 Publishing Open Access in LNCS    
 Important Dates    

 Related Links  
 Venue   
 Hotel Information   
 Social Programme   
 Instructions for speakers   
 Presentation templates   
 ICCSA 2022 from live   
 Corona virus outbreak   

 Special Issues  
   
  Special Issue "Computational Science and Its Applications 2022"   
   
 Special Issue "Computational Science and Its Applications 2023"   
   
 Special Issue "Mathematical Methods for Image Processing and Understanding"   

 Previous ICCSA editions  
 ICCSA 2022, Malaga, Spain (Blended form, part in presence, part online)   
 ICCSA 2021, Cagliari, Italy (Blended form, part in presence, part online)   
 ICCSA 2020, Online   
 ICCSA 2019, Saint Petersburg, Russia   
 ICCSA 2018, Melbourne, Australia   
 ICCSA 2017, Trieste, Italy   
 ICCSA 2016, Beijing, China   
 ICCSA 2015, Banff, Canada   
 ICCSA 2014, Guimaraes, Portugal   
 ICCSA 2013, Ho Chi Minh City, Vietnam   

 Site Map 
  Accessibility 
  Privacy policy

96. COMSNETS_3 conference:
Toggle navigation        
 Home 
  Committee | Organizing Committee 
  Program Committee 
  Volunteers 
  Accepted Papers | Main Conference 
  Call for Papers 
  Schedule New 
  Main Conference | Keynote Speakers 
  Banquet Talk 
  Panel Discussions 
  Invited Speakers 
  Ignite Bundle 
  Demos & Exhibits 
  Entrepreneur Ignite Summit (EIS) 
  Undergraduate Ignite Summit (UIS) 
  Poster Session 
  Undergraduate Forum 
  Graduate Forum 
  Women In Engineering 
  Mentoring Sessions 
  I+ART: Industry-Academia Research Track 
  Workshops | Call for Workshop Proposals 
  Workshop on Machine Intelligence in Networked Data and Systems (MINDS) 
  Cyber Security and Privacy Workshop (CSP) 
  Standards-driven Research Workshop (SDR) 
  Workshop on Quantum Technologies (WQT) 
  Internet Intelligence and Governance Workshop (IIGW) 
  Advances in Autonomous Driving and Vehicular Networks (ADVnet) 
  Workshop on Systems for the Future of AI_ML (SysAI) 
  Securing and Managing Advanced Technologies for Industry 4.0 (SAMAT) 
  Sponsorship | Become a Sponsor 
  Events we Support 
  14 Trees Foundation 
  Travel Grants 
  Awards | Best Paper Awards 
  Travel Awards by LRN 
  Fellowships & Awards 
  Registration 
  Contact 
  COMSNETS Association 
  COMSNETS History 
  Attending | Registration Details 
  Call for Participation 
  Travel & Accommodation 
  Conference Venue 
  Visa Request 
  Visiting Bangalore 
  Accommodation 
  COMSNETS Debrief 
  COMSNETS-5K Run 

 COMSNETS 2025 
  
 17 th   International Conference on COMmunication Systems & NETworkS  
 January 6 - 10  
  Chancery Pavilion Hotel, Residency Road, Bengaluru, India   
 Initiative by COMSNETS Association   

  In-Cooperation With       

 Technical Co-Sponsors       

 Conference Partner       

 Call For Papers  
  Download PDF version of the Call For Papers    
 The 17 th  International Conference on COMmunication Systems and NETworkS (COMSNETS)  will happen in Bengaluru, India, from January 6 - 10, 2025. As a leading forum for the global Networking and Communication Systems community, COMSNETS 2025 aims to foster groundbreaking research, facilitate the exchange of ideas between academia, government, and industry, and promote advancements in the field.  
 The conference will feature a dynamic and engaging technical program that includes:  
 Peer-reviewed contributions alongside a selection of invited papers by thought leaders in networking and communications. 
  Work-in-Progress (WIP) sessions showcasing posters and demos for interactive discussions. 
  Specialized workshops and panel discussions on cutting-edge topics for an in-depth exploration of emerging trends. 
  Keynotes and talks by industry and government leaders, offering insights into practical applications and future directions. 
   
 New this year—COMSNETS Ignite Bundle:  Encompasses both the Entrepreneur Ignite Summit (EIS) and the comprehensive set of sessions tailored for undergraduate and graduate students, including mentoring opportunities. This integrated package is designed to facilitate a wide spectrum of engagement across the conference, connecting participants from the entrepreneurial sphere with those at various stages of their academic journey.  
 💡 Entrepreneur Ignite Summit (EIS):  Continuing from its introduction in 2024, EIS aims to be an even more vibrant arena for connecting innovators at every stage—from seasoned to aspiring—and investors, fostering technology transfer and innovation, culminating with an EIS panel discussion to bring together technology transition enthusiasts.  
  🎓 Undergraduate Ignite Summit:  Newly introduced this year, this summit is tailored for undergraduate students, complementing the existing fabric of graduate and mentoring sessions. This inclusion allows undergraduate students to engage directly with researchers and professionals, providing a glimpse into the research process and fostering connections that could guide their future academic and professional endeavors.  
  👟 COMSNETS 5K Run:  This edition introduces the COMSNETS 5K Run at Bengaluru's Cubbon Park, combining exercise with networking. Kick off with coffee and finish with refreshments, all while enjoying Bengaluru’s elevated terrain. Perfect for both competitive runners and casual participants.  
   
 Visit the conference homepage for detailed information on submission guidelines, travel grants, and updates on the technical program. Join us at COMSNETS 2025 to be a part of this vibrant confluence of ideas, innovation, and inspiration in the heart of India’s tech hub.  
  
  Topics of Interest  
 These are broad and include the following as a general guideline, covering broad areas within computer systems, networks, security, and machine learning.  
 📡 Wireless Communications 
  5G, 6G, wireless broadband, and spectrum technologies. Including WLAN, RFID, NFC, visible light communications, cognitive radio,localization and sensing, CubeSats, and satellite networking. 
  🖥️ Data Center & Edge Computing 
  Enterprise networking, data centers, edge and cloud computing integration, and multimedia networking innovations. 
  🌱 Green Networking 
  Network sustainability, economics, and energy efficiency in communication networks. 
  🔬 Datasets, Benchmarks, and Testbeds 
  Highlighting the foundational role of datasets, benchmarks, and testbeds in networking research for experimentation and validation. 
    
 🌐 Network Architecture & Operations 
  Network architecture, traffic management, caching, content delivery systems, SDN/NFV, internet measurement, and web technologies. 
  🚗 Mobility & IoT 
  Mobile network management, mobile sensing, vehicular networks, Internet of Things (IoT), and smart grid communications. 
  🔒 Blockchain & Security 
  Network security, privacy, trusted computing, and the application of blockchain and distributed ledger technology. 
  🛠️ Semiconductors and Digital Communication 
  Semiconductor advancements in inter- and intra-chip communication, peripheral interfaces (PCIe, USB, etc.), network-on-chip (NoC) systems, and other interconnect technologies. 

  🛠️ Experience Papers:  Showcasing the construction of testbeds/platforms, lessons learned, and implications for future research.  
 COMSNETS invites submissions of Experience Papers that provide valuable insights derived from the operation of real-life testbeds and/or large-scale experimental platforms, pertinent to the conference’s research areas. These papers should focus on three main aspects:  
 The Construction of Testbeds/Platforms: | A detailed account of the design, development, and implementation processes. 
  Lessons Learned: | An exploration of the challenges encountered, solutions devised, and knowledge gained throughout the experimental journey. 
  Implications for Further Research: | Discussion on how the findings can influence future research directions and methodologies. 
  Experience Papers | must adhere to the same submission guidelines as research papers, including an | “Experience” | prefix in the title for clear differentiation. 

 Submitting a Paper    
  Submissions will be judged on novelty, significance, interest, clarity, relevance, and correctness. Accepted papers will optionally be shepherded through an editorial review process by a member of the program committee. COMSNETS uses double-blind reviewing.   
   
  A high-quality paper should:  
 Identify and elucidate a significant problem or challenge within its domain. 
  Offer a novel and captivating solution that piques interest and sparks discussion. 
  Showcase the practicality and advantages of the proposed solution through concrete evidence and real-world scenarios. 
  Present well-founded conclusions that logically follow from the research findings. 
  Provide a clear and comprehensive description of the paper’s contributions to the field. 
  Articulate the advancements achieved beyond the existing body of work, highlighting the innovative aspects of the research. 
  Ensure adherence to the specified page limit, as papers should neither be shorter nor longer than the prescribed length. 
  Accepted papers will generally be available online to registered attendees before the conference. If your accepted paper should not be published prior to the event, please notify [email protected]   . The papers will be available online to everyone beginning on the first day of the conference.  
 All submissions will be treated as confidential prior to publication on the COMSNETS 2025 website; rejected submissions will be permanently treated as confidential.  
 Simultaneous submission of the same work to multiple venues, submission of previously published work, or plagiarism constitutes dishonesty or fraud. Prior or concurrent workshop publication does not preclude publishing a related paper in COMSNETS. Authors should email the program co-chairs, [email protected]   , a copy of the related workshop paper and a short explanation of the new material in the conference paper beyond that published in the workshop version.  
 ArXiv Policy: Prior or concurrent publication in non-peer-reviewed contexts, like arXiv.org, technical reports, talks, and social media posts, is permitted. However, your COMSNETS submission must use an anonymized name for your project or system that differs from any used in such contexts.  
 By submitting a paper, you agree that at least one of the authors will attend the conference to present it. If your paper is accepted and you need an invitation letter to apply for a visa to attend the conference, please contact [email protected]   as soon as possible. (Visa applications can take at least 30 working days to process.) Please identify yourself as a presenter and include your mailing address in your email.  
 Questions? Contact your program co-chairs, [email protected]   , or the COMSNETS steering committee, [email protected]   .  
  
 ✈️ Travel Grants   
  COMSNETS 2025 continues its tradition of supporting the academic community by offering travel grants to international students with accepted papers, ensuring diverse and inclusive participation. These grants are aimed at facilitating broader participation by helping cover travel expenses for students to attend and present their research. For eligibility and application details, visit the conference website.  

  Conference Highlights  
 Keynote, Invited, and Banquet Talks 
  Mentoring Sessions 
  Technical Papers and Poster Sessions 
  COMSJOB 
  Graduate Research Forum 
    
 Panel Discussions 
  Co-located Workshops 
  Demos and Exhibits 
  Startup Forum 

   Important Dates (Earlier submission is encouraged - All deadlines are firm)  
 Main Conference:  
  
 Paper submission deadline | 15th of September, 2024, AoE  30th September, 2024, AoE 
 Notification of Acceptance | 5th of November, 2024, AoE 
 Camera-ready Submission | 15th of November, 2024, AoE 
  
 HotCRP link for paper submission: https://comsnets25.hotcrp.com/   
   
 Paper Submission Guidelines    
  Font Embedding 
  The recommended format must be used. Please use the Word / LaTeX templates given on the IEEE Website here  . 
  Abstract Registration: | Timely registration of abstracts is mandatory, with insufficient abstracts leading to submission rejection. 
  Full Paper Submission: | Submissions must adhere to an | 8-page limit, single-spaced, which includes figures and tables. Additional space is permitted for references. 
  Submissions must be in PDF format, following the provided templates and guidelines. All papers should be submitted through the | HotCRP | system. Non-compliant submissions will be outright rejected. 
  Supplementary Material: | While authors may include supplementary material with their submissions, it is not mandatory for PC members to review it. The main submission should be comprehensive on its own. 

 For any queries please contact us at [email protected]    

  Travel Grants Sponsor  

   Platinum Sponsor  

 Gold Sponsors  

  Silver Sponsors  

 Bronze Sponsors  

 Conference Partner  

 University Partners  
   
  CMU     
  University of Pennsylvania, USA     
  SMU Singapore     
  Louisiana State University, USA     
  SRM University, India     
  Plaksha University, India     
  IISc     
  IIT Delhi     
  IIT Bombay     
  IIT Kanpur     
  IIT Kharagpur     
  IIT Madras     
  IIT Hyd     
  IIT Jammu     
  IIIT Delhi     
  IIIT Hyderabad     
  IIIT Bangalore     
  BMSCE, India     
  DA-IICT,India     
  KAIST, Korea     

  Subscribe  

 ×   Subscribe to Updates  
   
  Subscribe!       

 Quick Links 
   Organizing Committee 
  Technical Committee 
  Sponsorship Opportunities 
  Contact 
    
 Hotel & Travel 
   Visa 
  Conference Venue 
  Accommodation 
  Visiting Bangalore 
    
 Previous COMSNETS 
   2024 
  2023 
  2022 
  2021 
  2020 
  2019 
  2018 
  2017 
  2016 
  2015 
  2014 
  2013 
  2012 
  2011 
  2010 
  2009 

 Terms of Service 
  Contact Us 
  Privacy 
    
 © 2021 comsnets.org. All rights reserved

97. ICCSA_2 conference:
ICCSA 2023 Home | ICCSA 2023 Home |  
 ICCSA 2023 Home | ICCSA 2023 Home | ICCSA 2023 Home |  
 ICCSA 2023 Home | ICCSA 2023 Home |  
 ICCSA 2023 Home

98. ICCSA_3 conference:
Search Site   only in current section    
     
  Advanced Search…    
   
 Log in 

 Toggle navigation        
 Home 
  Themes 
  Committees 
  Workshops 
  Call for Papers 
  Keynote Speakers 
  Programme 
  Submission Site 

 You are here:  Home 
  Call for Papers 

 Call for Papers   https://2023.iccsa.org/call-for-papers  https://2023.iccsa.org/@@site-logo/iccsa1150x225.jpg     
 Call for Papers  

 The 2023 International Conference on Computational Science and Its Applications   
 - ICCSA 2023 -   

 National Technical University of Athens and University of the Aegean, Athens, Greece   
 July 3-6, 2023   
  
 The ICCSA 2023 conference will be organized in Athens, Greece.  Virtual registration (with a reduced registration fee) is still possible but in the spirit of facilitating researchers suffering from very critical economic and political situations. Besides online sessions, there will be pure on-site sessions with presential participation.    
 ICCSA 2023 will be the next event in a series of highly successful International Conferences on Computational Science and Its Applications (ICCSA), previously held in a blended form in Malaga - Spain (2023), in Cagliari - Italy (2021), online (2020, as an online-only event due  to COVID-19 pandemic restrictions)  , Saint Petersburg - Russia (2019), Melbourne - Australia (2018), Trieste - Italy (2017), Beijing - China (2016), Banff - Canada (2015), Guimaraes - Portugal (2014), Ho Chi Minh City - Vietnam (2013), Salvador da Bahia - Brazil (2012), Santander - Spain (2011), Fukuoka - Japan (2010), Suwon - Korea (2009), Perugia - Italy (2008), Kuala Lumpur - Malaysia (2007), Glasgow - United Kingdom (2006), Singapore - Singapore(2005), Assisi - Italy (2004), Montreal - Canada (2003), and, as ICCS, in Amsterdam - The Netherlands (2002) and San Francisco - USA (2001).  
  
 Computational Science is a central pillar of most of the present research, industrial and commercial activities and plays a unique role in exploiting innovative ICT technologies.  
 The ICCSA Conference offers an opportunity to bring together scientists of different disciplines, discuss new issues, tackle complex problems and find advanced solutions breeding new trends in Computational Science.  
 Submitted papers will be subject to stringent peer review by at least three experts and carefully evaluated based on originality, significance, technical soundness, and clarity of exposition. Accepted papers will appear in the Conference proceedings to be published by Springer-Verlag in Lecture Notes in Computer Science  . The authors of a selected number of top-quality papers will be requested to extend their papers for further review and publication as special issues in highly recognized international journals.  
 ICCSA 2023 accepts paper submissions in the following categories: General Tracks and Workshops' Full Papers, General Tracks and Workshops' Short Papers and PhD Showcase Papers. The details for each paper submission category can be found at the URL https://iccsa.org/instructions-for-authors  and the list of Workshops at the URL: https://www.iccsa.org/workshops  .  
 Conference Themes  
 The ICCSA 2023 Conference themes, grouped in six tracks, are the following (but are not limited to):  
  
  1. Track: Computational Methods, Algorithms and Scientific Application   
  Computational Biology  
  Computational Combustion  
  Computational Chemistry  
  Computational Fluid Dynamics  
  Computational Physics  
  Computational Geometry  
  Computational Mathematics  
  Computational Mechanics  
  Computational Electromagnetics  
  Numerical Methods and Algorithms  
   
  2. Track: High-Performance Computing and Networks Parallel and Distributed Computing   
  Cluster Computing  
  Supercomputing  
  Cloud Computing  
  Autonomic Computing  
  P2P Computing  
  Mobile Computing  
  Grid and Semantic Grid Computing  
  Workflow Design and Practice  
  Computer and Network Architecture  
   
  3. Track: Geometric Modelling, Graphics and Visualization   
  Scientific Visualization  
  Computer Graphics  
  Geometric Modelling  
  Pattern Recognition  
  Image Processing  
  CAD/CAM  
  Web3D, Virtual and Augmented Reality  
   
  4. Track: Advanced and Emerging Applications   
  Biochemistry  
  Bioinformatics  
  Astrophysics  
  Biometric Modelling  
  Environmental, Climate and Weather Modelling  
  Geology and Geophysics  
  Nuclear Physics  
  Financial and Economic Modelling  
  Computational Journalism  
  Geographical Information Systems  
   
  5. Track: Information Systems and Technologies   
  Information Retrieval  
  Scientific Databases  
  Security Engineering  
  Risk Analysis  
  Reliability Engineering  
  Software Engineering  
  Data Mining  
  Artificial Intelligence  
  Machine Learning  
  Learning Technologies  
  Web-Based Computing  
  Web 2.0  
  Blockchain  
   
  6. Track: Urban and Regional Planning   
  Urban and regional growth  
  Sustainable urban and regional development  
  Socio-ecological systems  
  Open Data, Big Data  
  Cultural Heritage  
  Smart and Sustainable Cities  
  Mobility and Intelligent Transport Systems  
  Decision Support Systems  
  Complexity assessment and mapping  
  Logistics  
 Paper Submission  
 To submit a paper, please connect to the Submission site from the link available at the ICCSA 2023 website: https://ess.iccsa.org  .  
  Only papers submitted through the electronic system and strictly adhering to the relevant format will be considered for reviewing and publication.  
  The submission may fall into the following categories: General Tracks and  Workshops' Full Papers, General Tracks and Workshops' Short Papers, and PHD Showcase Papers  .  
 GENERAL TRACKS AND WORKSHOPS' FULL PAPERS   
  The submitted paper must be between 12 to 18 pages long  for LNCS   publication  ,, and should be formatted according to the LNCS  rules.  
  Please consult the URL  https://iccsa.org/instructions-for-authors  for formatting information and templates.  
 SHORT PAPERS   
  Reporting preliminary results of ongoing research. The submitted paper must be between 8 and 11 pages long and formatted according to LNCS   rules  . The Short Papers will be presented during the conference and will be published by LNCS  .  
 PHD SHOWCASE PAPERS   
  Reporting ongoing research already achieving significant results and primarily carried out by PhD students and junior researchers. The submitted paper must be between 10 to 18 pages long and formatted according to LNCS  rules  . The PhD Showcase Papers will be presented during the conference and will be published by LNCS  .  
 CPS Papers   
  The submitted paper must be between 6 to 14 pages  long for Conference Publishin Services (CPS)   publication and should be formatted according to the CPS  rules.  
  
  Each paper must deal with original and unpublished work, not submitted for publication elsewhere (copyright problems fall entirely under the responsibility of the authors). Each paper will be reviewed by at least three experts in the relevant field (acceptance rate was 28% in 2005, 26% in 2006 and 28% in 2007, 29% in 2008, 30% in 2009, 29% in 2021, 2011, 2012, and 30% in 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021 and 2022) according to the Single Blind review method, ensuring the publication of only top quality contributions.  
   
  When a paper is accepted, at least one of the authors has to register for the conference and deliver the related talk. Failure to do so shall lead to the rejection of the application to attend next year's conference and the exclusion of the paper from the current year's proceedings.  
 Workshops  
 Refer to the web page https://iccsa.org/workshops  for the updated list of Workshops  
 When submitting your contribution to one of the above-listed Workshops, please pay attention to selecting the correct entry in the list box shown in the Abstract, Paper and Camera Ready submission forms.  
 An author is enabled to change the workshop associated with a submitted paper until the submission deadline by updating the paper in the system and selecting the proper Workshop from the list.  
  
 Important Dates  
 Please see important dates  page.   
 Proceedings  
 The proceedings of the Conference will be published by Springer ( Lecture Notes in Computer Science  series).  
 In particular:  
   
  1. The selected top-quality Theme Papers and Session Papers will appear in the Springer Lecture Notes in Computer Science  ( LNCS  ) series (paper length: 12-18 pages).  
 2. Short papers will appear in the Springer Lecture Notes in Computer Science ( LNCS  ) series (paper length: 8-11 pages)  
 3. PHD Showcase Papers will appear in the Springer Lecture Notes in Computer Science ( LNCS  ) series (paper length: 10-18 pages).  
 For a selected number of top-quality papers, after the Conference, the authors will be requested to extend the paper in order to be published as special issues in appropriate international journals.  

 Conference policy  
 By submitting the paper to the ICCSA conference, all authors agree to abide by all ICCSA conference paper submission, publication and presentation policies. Namely, the authors confirm that the work is original, has not appeared in literature in any form in the past and will not be submitted to any other venue concurrently with ICCSA submission or until it appears in ICCSA proceedings (in the case of acceptance). Furthermore, upon paper acceptance, authors agree to transfer the copyright on the accepted paper to ICCSA, and one of the authors will register the paper and present the paper at the event.No paper withdrawals can be accepted after the Conference pre-registration date or within three months of the actual event, whichever date comes first. Paper withdrawal requests can be only accepted in writing through email, letter or fax to conference organizers. The conference has no responsibility for any intentional or accidental misuse, misinterpretation, or failure to follow the above rules and conditions and holds no legal, civil or other responsibility for opinions, content or utilization of any methods/algorithms expressed in the Conference Proceedings.  

  Contact Information  
 Anastasia Stratigea  
  National Technical University of Athens  
  School of Rural, Surveying and Geoinformatics Engineering  
  Dept. of Geography and Regional Planning  
  Heroon Polytechniou 9,  
  15780 Zografou,  
  Greece  
  Phone: +30 210 7722 672  
  Fax: +30 210 7722 750  
  Email: stratige <at> central <dot> ntua <dot> gr  
  
  Osvaldo Gervasi  
  Department of Mathematics and Computer Science, University of Perugia  
  Via Vanvitelli, 1  
  06123 Perugia  
  Italy  
  Phone: +39-075-5855048  
  Fax: +39-075-5855024  
  Email: osvaldo <dot> gervasi <at> unipg <dot> it  
  URL: http://ogervasi <dot> unipg <dot> it  

 Site Map 
  Accessibility 
  Privacy policy

99. CollaborateCom_2 conference:
JavaScript must be enabled to use the system

100. CC_0 conference:
CC 2023   Sat 25 - Sun 26 February 2023 Montréal, Canada    

 Toggle navigation        
 Attending | Venue: Hotel Bonaventure 
  Registration 
  Code of Conduct 
  Local info 
  Program | CC Program 
  Your Program 
   Sat 25 Feb 
  Sun 26 Feb 
  Tracks | CC 2023 
  Artifact Evaluation 
  Research Papers 
  Organization | CC 2023 Committees 
  Organizing Committee 
  Steering Committee 
  Track Committees 
  Program Committee 
  Contributors 
  People Index 
  Search 
  Series | Series 
   CC 2025 
  CC 2024 
  CC 2023 
  CC 2022 
  CC 2021 
  CC 2020 
  CC 2019 
  CC 2018 
  CC 2017 
  CC 2016 
  CC 2015 
  CC 2014 
  CC 2013 
  CC 2012 
  CC 2011 
  CC 2010 
  Sign in 
  Sign up 

 Montreal in the summer  

 Photo by Olivier Collet     
 Montreal in the winter  

 Photo by Shawn Dearn     
 Montreal in the winter  
 It’s not always like this, but it can be!  

 ACM SIGPLAN 2023 International Conference on Compiler Construction  
   
 February 25-26, 2023, Montréal, Québec, Canada.   
 Co-located with  CGO  , PPoPP  , and HPCA   
 The International Conference on Compiler Construction (CC) is interested in work on processing programs in the most general sense: analyzing, transforming or executing input that describes how a system operates, including traditional compiler construction as a special case.  
 CC is an ACM SIGPLAN conference, and implements guidelines and procedures recommended by SIGPLAN  .  

  CC 2023   
   
 Artifact Evaluation  | Research Papers    

  Featured News    

 Early registration Mon 12 Dec 2022 

 Supporters   

 x  Sat 30 Nov 07:10    

  CC 2023   
  using conf.researchr.org  ( v1.67.1  )  
   Support page    
     
 CC 2023  
 Artifact Evaluation   
  Research Papers    

 Attending  
 Venue: Hotel Bonaventure   
  Registration   
  Code of Conduct   
  Local info    
 Sign Up

